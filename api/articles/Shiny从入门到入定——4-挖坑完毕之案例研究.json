{"title":"Shiny从入门到入定——4-挖坑完毕之案例研究","slug":"Shiny从入门到入定——4-挖坑完毕之案例研究","date":"2024-01-24T11:17:55.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Shiny从入门到入定——4-挖坑完毕之案例研究.json","excerpt":null,"covers":["https://d33wubrfki0l68.cloudfront.net/ca164e63cd77225daf58fc6351cf6453e04e0af6/76632/basic-case-study_files/figure-html/toilets-raw-1.png","https://d33wubrfki0l68.cloudfront.net/35c1766902243f1fc9fa1aa92c6a57bd9eb31ccd/382fd/basic-case-study_files/figure-html/toilets-rate-1.png","https://d33wubrfki0l68.cloudfront.net/0671024307798129536ceb17723b862ec709f14f/cd879/demos/basic-case-study/prototype.png","https://d33wubrfki0l68.cloudfront.net/9ab24257bb441350c7e2d57bd09fe9452cae592e/779c3/demos/basic-case-study/polish-tables.png","https://d33wubrfki0l68.cloudfront.net/57dcd9e1cf0724f9c4af5d20972e410a5203b5e6/d119e/demos/basic-case-study/rate-vs-count.png","https://d33wubrfki0l68.cloudfront.net/d62551b4bee05d3bd17b852b30b2fd55066e58dc/0d9bf/demos/basic-case-study/narrative.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"4-案例研究：ER损伤\"><a href=\"#4-案例研究：ER损伤\" class=\"headerlink\" title=\"4 案例研究：ER损伤\"></a>4 案例研究：ER损伤</h1><h2 id=\"4-1-简介\"><a href=\"#4-1-简介\" class=\"headerlink\" title=\"4.1 简介\"></a>4.1 简介</h2><p>在过去的三个章节中，我向您介绍了一系列新概念。为了帮助理解他们，我们现在将浏览一个更丰富的Shiny应用程序，该应用程序探索了一个有趣的数据集，并将您迄今为止看到的许多想法整合在一起。我们将从Shiny之外进行一些数据分析开始，然后将其转化为应用程序，从简单开始，然后逐步添加更多细节。</p>\n<p>在本章中，我们将使用vroom（用于快速读取文件）和tidyverse（用于一般数据分析）来补充Shiny。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>vroom<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>tidyverse<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2-数据\"><a href=\"#4-2-数据\" class=\"headerlink\" title=\"4.2 数据\"></a>4.2 数据</h2><p>我们将探索消费者产品安全委员会收集的美国国家电子伤害监测系统 (NEISS) 的数据。这是一项长期研究，记录了美国代表性医院中发生的所有事故。这是一个有趣的数据集，因为每个人都熟悉这个领域，每个观察都附有简短的叙述，解释事故是如何发生的。您可以在 <a href=\"https://github.com/hadley/neiss\">https://github.com/hadley/neiss</a> 了解有关此数据集的更多信息。</p>\n<p>在本章中，我将只关注2017年的数据。这使得数据足够小（约10 MB），易于存储在git中（以及本书的其余部分），这意味着我们不需要考虑快速导入数据的复杂策略（我们将在本书稍后回到这些策略）。您可以在<a href=\"https://github.com/hadley/mastering-shiny/blob/master/neiss/data.R\">https://github.com/hadley/mastering-shiny/blob/master/neiss/data.R</a>上看到我用于创建本章提取的代码。</p>\n<p>如果你想把数据传到自己的电脑上，运行这段代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dir.create<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Warning in dir.create(&quot;neiss&quot;): &#x27;neiss&#x27; already exists</span></span><br><span class=\"line\">download <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>name<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  url <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;https://github.com/hadley/mastering-shiny/raw/master/neiss/&quot;</span></span><br><span class=\"line\">  download.file<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span>url<span class=\"punctuation\">,</span> name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss/&quot;</span><span class=\"punctuation\">,</span> name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> quiet <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">download<span class=\"punctuation\">(</span><span class=\"string\">&quot;injuries.tsv.gz&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">download<span class=\"punctuation\">(</span><span class=\"string\">&quot;population.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">download<span class=\"punctuation\">(</span><span class=\"string\">&quot;products.tsv&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>我们将使用的主要数据集是伤害数据集，其中包含约25万条观察记录：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">injuries <span class=\"operator\">&lt;-</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss/injuries.tsv.gz&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">injuries</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 255,064 × 10</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   trmt_date    age sex   race  body_part   diag    locat…¹ prod_…² weight narra…³</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;date&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 2017-01-01    71 male  white Upper Trunk Contus… Other …    1807   77.7 71YOM …</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 2017-01-01    16 male  white Lower Arm   Burns,… Home        676   77.7 16YOM …</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 2017-01-01    58 male  white Upper Trunk Contus… Home        649   77.7 58 YOM…</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 2017-01-01    21 male  white Lower Trunk Strain… Home       4076   77.7 21 YOM…</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 2017-01-01    54 male  white Head        Inter … Other …    1807   77.7 54 YOM…</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 2017-01-01    21 male  white Hand        Fractu… Home       1884   77.7 21 YOM…</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 255,058 more rows, and abbreviated variable names ¹​location,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   ²​prod_code, ³​narrative</span></span><br></pre></td></tr></table></figure>\n\n<p>每行代表一起单次事故，有10个变量：</p>\n<ul>\n<li><p><code>trmt_date</code>是该人被送往医院的日期（不是事故发生的日期）。</p>\n</li>\n<li><p><code>age</code>、<code>sex</code>和<code>race</code>给出了发生事故的人的人口统计信息。</p>\n</li>\n<li><p><code>body_part</code>是身体受伤部位的位置（如脚踝或耳朵）；<code>location</code>是事故发生的地方（如家庭或学校）。</p>\n</li>\n<li><p><code>diag</code>给出了伤害的基本诊断（如骨折或撕裂）。</p>\n</li>\n<li><p><code>prod_code</code>是与伤害相关的主要产品。</p>\n</li>\n<li><p><code>weight</code>是统计权重，给出了如果将此数据集按比例缩放到整个美国人口，遭受这种伤害的人数估计。</p>\n</li>\n<li><p><code>narrative</code>是关于事故如何发生的简短故事。</p>\n</li>\n</ul>\n<p>我们将将其与其他两个数据帧配对以获取更多上下文：<code>products</code>让我们可以从产品代码中查找产品名称，<code>population</code>让我们知道2017年美国每一种年龄和性别组合的总人口数。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">products <span class=\"operator\">&lt;-</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss/products.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">products</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 38 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   prod_code title                            </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;       &lt;dbl&gt; &lt;chr&gt;                            </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1       464 knives, not elsewhere classified </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2       474 tableware and accessories        </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3       604 desks, chests, bureaus or buffets</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4       611 bathtubs or showers              </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5       649 toilets                          </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6       676 rugs or carpets, not specified   </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 32 more rows</span></span><br><span class=\"line\"></span><br><span class=\"line\">population <span class=\"operator\">&lt;-</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss/population.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">population</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 170 × 3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     age sex    population</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1     0 female    1924145</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2     0 male      2015150</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3     1 female    1943534</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4     1 male      2031718</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5     2 female    1965150</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6     2 male      2056625</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 164 more rows</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-3-探索\"><a href=\"#4-3-探索\" class=\"headerlink\" title=\"4.3 探索\"></a>4.3 探索</h2><p>在我们创建应用程序之前，让我们先来探索一下数据。我们将从一款具有有趣故事的产品开始：649，“厕所”。首先，我们将提取与此产品相关的伤害：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selected <span class=\"operator\">&lt;-</span> injuries <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>prod_code <span class=\"operator\">==</span> <span class=\"number\">649</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">nrow<span class=\"punctuation\">(</span>selected<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 2993</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来，我们将进行一些基本的汇总，查看与厕所相关的伤害的位置、身体部位和诊断。请注意，我用<code>weight</code>变量加权，这样计数可以解释为整个美国估计的总伤害数。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selected <span class=\"operator\">%&gt;%</span> count<span class=\"punctuation\">(</span>location<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">,</span> sort <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 6 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   location                         n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;chr&gt;                        &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 Home                       99603. </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Other Public Property      18663. </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 Unknown                    16267. </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 School                       659. </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 Street Or Highway             16.2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 Sports Or Recreation Place    14.8</span></span><br><span class=\"line\"></span><br><span class=\"line\">selected <span class=\"operator\">%&gt;%</span> count<span class=\"punctuation\">(</span>body_part<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">,</span> sort <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 24 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   body_part        n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;chr&gt;        &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 Head        31370.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Lower Trunk 26855.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 Face        13016.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 Upper Trunk 12508.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 Knee         6968.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 N.S./Unk     6741.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 18 more rows</span></span><br><span class=\"line\"></span><br><span class=\"line\">selected <span class=\"operator\">%&gt;%</span> count<span class=\"punctuation\">(</span>diag<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">,</span> sort <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 20 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   diag                       n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;chr&gt;                  &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 Other Or Not Stated   32897.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Contusion Or Abrasion 22493.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 Inter Organ Injury    21525.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 Fracture              21497.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 Laceration            18734.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 Strain, Sprain         7609.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 14 more rows</span></span><br></pre></td></tr></table></figure>\n\n<p>正如你可能预期的那样，涉及厕所的伤害最常发生在家里。最常涉及的身体部位可能表明这些伤害是跌倒造成的（因为头部和脸部通常不涉及日常厕所使用），而且诊断似乎相当多样化。</p>\n<p>我们还可以探索年龄和性别之间的模式。这里我们有足够的数据，表格不是很有用，所以我做了一个图，图4.1，这使得图案更加明显。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary <span class=\"operator\">&lt;-</span> selected <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  count<span class=\"punctuation\">(</span>age<span class=\"punctuation\">,</span> sex<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">)</span></span><br><span class=\"line\">summary</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 208 × 3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     age sex         n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1     0 female   4.76</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2     0 male    14.3 </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3     1 female 253.  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4     1 male   231.  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5     2 female 438.  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6     2 male   632.  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 202 more rows</span></span><br><span class=\"line\"></span><br><span class=\"line\">summary <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  ggplot<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>age<span class=\"punctuation\">,</span> n<span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> sex<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Estimated number of injuries&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>  <img src=\"https://d33wubrfki0l68.cloudfront.net/ca164e63cd77225daf58fc6351cf6453e04e0af6/76632/basic-case-study_files/figure-html/toilets-raw-1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/ca164e63cd77225daf58fc6351cf6453e04e0af6/76632/basic-case-study_files/figure-html/toilets-raw-1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图4.1 按年龄和性别分列的厕所造成的伤害估计数\"></p>\n<p>我们可以看到，小男孩在3岁时达到峰值，然后从中年开始有所增加（特别是对女性而言），在80岁以后逐渐下降。我认为峰值是因为男孩通常站着上厕所，而女性的增加是因为骨质疏松症（即，我怀疑男性和女性的受伤率相同，但更多的女性最终进入急诊室是因为她们骨折的风险更高）。</p>\n<p>解释这种模式的难点在于，我们知道老年人比年轻人少，因此受伤的人口更少。我们可以通过将受伤人数与总人口进行比较并计算伤害率来控制这一点。这里我使用的是每10,000人的比率。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary <span class=\"operator\">&lt;-</span> selected <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  count<span class=\"punctuation\">(</span>age<span class=\"punctuation\">,</span> sex<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  left_join<span class=\"punctuation\">(</span>population<span class=\"punctuation\">,</span> by <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;age&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sex&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>rate <span class=\"operator\">=</span> n <span class=\"operator\">/</span> population <span class=\"operator\">*</span> <span class=\"number\">1e4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">summary</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 208 × 5</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     age sex         n population   rate</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1     0 female   4.76    1924145 0.0247</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2     0 male    14.3     2015150 0.0708</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3     1 female 253.      1943534 1.30  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4     1 male   231.      2031718 1.14  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5     2 female 438.      1965150 2.23  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6     2 male   632.      2056625 3.07  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 202 more rows</span></span><br></pre></td></tr></table></figure>\n\n<p>绘制比率图（图4.2），50岁以后的趋势明显不同：男女之间的差异要小得多，我们不再看到下降。这是因为女性往往比男性寿命更长，所以在老年时，更多的女性仍然活着并可能因厕所受伤。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  ggplot<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>age<span class=\"punctuation\">,</span> rate<span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> sex<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span>na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Injuries per 10,000 people&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/35c1766902243f1fc9fa1aa92c6a57bd9eb31ccd/382fd/basic-case-study_files/figure-html/toilets-rate-1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/35c1766902243f1fc9fa1aa92c6a57bd9eb31ccd/382fd/basic-case-study_files/figure-html/toilets-rate-1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图4.2 按年龄和性别分列的每10,000人受伤估计率\"></p>\n<p>（注意，比率只到80岁，因为我找不到80岁以上年龄的人口数据。）</p>\n<p>最后，我们可以浏览一些叙述。通过浏览这些叙述是一种非正式的方法，可以检查我们的假设，并产生新的想法以进一步探索。这里我随机抽取了10个样本：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selected <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  sample_n<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  pull<span class=\"punctuation\">(</span>narrative<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [1] &quot;79 YOM LOW BACK PAIN AFTER SLIPPING OFF TOILET AT HOME 1 WEEK AGO.DX DEGENERATIVE DISC DISEASE, BLUMBAR, MECHANICAL FALL, SEPSIS&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [2] &quot;88YOF PRESENTS AFTER FALLING OFF THE TOILET AT HOME AND HITTING CHEST WALL. DX: RIGHT CHEST WALL PAIN S/P FALL.*&quot;                </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [3] &quot;73YOF WAS SITTING ON A PUBLIC TOILET AND PASSED OUT FELL OF FONTO HEADCLOSED HEAD INJURY ADMITTED FOR SYNCOPE&quot;                   </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [4] &quot;97 YOM FELL HITTING HEAD ON TOILET SEAT.DX:  NECK PX, BACK PX, FREQUENT FALLS.&quot;                                                  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [5] &quot;32YOM FROM RENEWAL CENTER WAS SNORTING *** AND FELL OFF THE TOILET STRIKING HIS HEAD DX MINOR CHI&quot;                               </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [6] &quot;71YOF LOST BALANCE SITTING ON TOILET AT HOME AND INJURIED SHOULDER.  DX:  LT SHOULDER INJURY.&quot;                                   </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [7] &quot;99YOF FALL OFF TOILET AND C/O SHOULDER PAIN/ CONTUSION R SHOULDER&quot;                                                               </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [8] &quot;26 YOM TRIPPED AND FELL STRIKING KAND ON TOILET SEAT.DX:  R HAND LAC 5 CM.&quot;                                                      </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [9] &quot;86YOF TURNED HEAD &amp; BECAME DIZZY, FELL AGAINST TOILET INJURING SHOULDER/CT SHOULDER&quot;                                             </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [10] &quot;70 YOF - SYNCOPE - PT WAS SITTING ON TOILET AND FELL @ HOME.&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>对于一个产品进行了这种探索之后，如果我们能够轻松地对其他产品进行这种探索，而无需重新输入代码，那将是非常好的。所以让我们制作一个Shiny应用程序！</p>\n<h2 id=\"4-4-原型\"><a href=\"#4-4-原型\" class=\"headerlink\" title=\"4.4 原型\"></a>4.4 原型</h2><p>在构建一个复杂的应用程序时，我强烈建议您尽可能从简单开始，这样您可以在开始进行更复杂的操作之前确认基本机制可以运行。在这里，我将从一个输入（产品代码）、三个表和一个图形开始。</p>\n<p>在设计第一个原型时，挑战在于使其“尽可能简单”。在快速实现基本功能和为应用程序的未来做计划之间存在紧张关系。任何极端都可能很糟糕：如果你设计得太狭窄，你将在稍后花费大量时间重新设计你的应用程序；如果你设计得太严格，你将花费大量时间编写最终将被删除的代码。为了帮助找到平衡，我经常在代码之前用铅笔画一些草图来快速探索用户界面和反应图。</p>\n<p>在这里，我决定将一行用于输入（考虑到在应用程序完成之前我可能会添加更多输入），一行用于所有三个表格（给每个表格4列，占12列宽度的1&#x2F;3），然后一行用于图形：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prod_codes &lt;- setNames(products$prod_code, products$title)</span><br><span class=\"line\"></span><br><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    column(6,</span><br><span class=\"line\">      selectInput(&quot;code&quot;, &quot;Product&quot;, choices = prod_codes)</span><br><span class=\"line\">    )</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    column(4, tableOutput(&quot;diag&quot;)),</span><br><span class=\"line\">    column(4, tableOutput(&quot;body_part&quot;)),</span><br><span class=\"line\">    column(4, tableOutput(&quot;location&quot;))</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    column(12, plotOutput(&quot;age_sex&quot;))</span><br><span class=\"line\">  )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>我们还没有谈论<code>fluidRow()</code>和<code>column()</code>，但你应该能够从上下文中猜测它们的作用，我们将在第6.2.3节回来讨论它们。另外请注意在<code>selectInput()</code> <code>choices</code>中使用<code>setNames()</code>：它在用户界面中显示产品名称并返回产品代码到server。</p>\n<p>server函数相对简单。我先将上一节中创建的<code>selected</code>和<code>summary</code>变量转换为反应式表达式。这是一个合理的通用模式：您在数据分析中创建变量以分解分析步骤，并避免多次重新计算，而Shiny应用程序中的反应式表达式起到相同的作用。</p>\n<p>通常，在开始Shiny应用程序之前，花一些时间清理你的分析代码是一个好主意，这样你就可以在添加反应性的额外复杂性之前用常规R代码来考虑这些问题。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  selected &lt;- reactive(injuries %&gt;% filter(prod_code == input$code))</span><br><span class=\"line\"></span><br><span class=\"line\">  output$diag &lt;- renderTable(</span><br><span class=\"line\">    selected() %&gt;% count(diag, wt = weight, sort = TRUE)</span><br><span class=\"line\">  )</span><br><span class=\"line\">  output$body_part &lt;- renderTable(</span><br><span class=\"line\">    selected() %&gt;% count(body_part, wt = weight, sort = TRUE)</span><br><span class=\"line\">  )</span><br><span class=\"line\">  output$location &lt;- renderTable(</span><br><span class=\"line\">    selected() %&gt;% count(location, wt = weight, sort = TRUE)</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">  summary &lt;- reactive(&#123;</span><br><span class=\"line\">    selected() %&gt;%</span><br><span class=\"line\">      count(age, sex, wt = weight) %&gt;%</span><br><span class=\"line\">      left_join(population, by = c(&quot;age&quot;, &quot;sex&quot;)) %&gt;%</span><br><span class=\"line\">      mutate(rate = n / population * 1e4)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  output$age_sex &lt;- renderPlot(&#123;</span><br><span class=\"line\">    summary() %&gt;%</span><br><span class=\"line\">      ggplot(aes(age, n, colour = sex)) +</span><br><span class=\"line\">      geom_line() +</span><br><span class=\"line\">      labs(y = &quot;Estimated number of injuries&quot;)</span><br><span class=\"line\">  &#125;, res = 96)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意，在这里创建summary反应式并不是严格必要的，因为它仅被一个反应式消费者使用。但是，将计算和绘图分开是很好的做法，因为这样可以使应用程序的流程更易于理解，并且将来更易于推广。</p>\n<p>最终应用程序的屏幕截图如图4.3所示。您可以在此处找到源代码：<a href=\"https://github.com/hadley/mastering-shiny/tree/master/neiss/prototype.R\">https://github.com/hadley/mastering-shiny/tree/master/neiss/prototype.R</a>，并尝试运行该应用程序的实时版本：<a href=\"https://hadley.shinyapps.io/ms-prototype/\">https://hadley.shinyapps.io/ms-prototype/</a>。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/0671024307798129536ceb17723b862ec709f14f/cd879/demos/basic-case-study/prototype.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/0671024307798129536ceb17723b862ec709f14f/cd879/demos/basic-case-study/prototype.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图4.3 NEISS探索应用程序的第一个原型\"></p>\n<h2 id=\"4-5-完善表格\"><a href=\"#4-5-完善表格\" class=\"headerlink\" title=\"4.5 完善表格\"></a>4.5 完善表格</h2><p>既然我们已经将基本组件放置并运行，我们可以逐步改进我们的应用程序。这个应用程序的第一个问题是，它在表格中显示了很多信息，我们可能只想知道重点。为了解决这个问题，我们需要首先找出如何截断表格。我选择通过组合forcats函数来实现：我将变量转换为因子，按级别的频率排序，然后将前五个级别之后的所有级别都放在一起。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">injuries <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>diag <span class=\"operator\">=</span> fct_lump<span class=\"punctuation\">(</span>fct_infreq<span class=\"punctuation\">(</span>diag<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>diag<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>weight<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 6 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   diag                        n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;fct&gt;                   &lt;int&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 Other Or Not Stated   1806436</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Fracture              1558961</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 Laceration            1432407</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 Strain, Sprain        1432556</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 Contusion Or Abrasion 1451987</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 Other                 1929147</span></span><br></pre></td></tr></table></figure>\n\n<p>因为我知道如何做到这一点，所以我编写了一个小函数来自动执行此操作，对任何变量。这里的细节并不是那么重要，但我们将在第12章中回到它们。您也可以通过复制和粘贴解决问题，因此如果代码看起来完全陌生，请不要担心。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count_top <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>df<span class=\"punctuation\">,</span> var<span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  df <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    mutate<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#123;</span> var <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span> <span class=\"operator\">:=</span> fct_lump<span class=\"punctuation\">(</span>fct_infreq<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#123;</span> var <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> n<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    group_by<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#123;</span> var <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    summarise<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>weight<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来采用server函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output$diag &lt;- renderTable(count_top(selected(), diag), width = &quot;100%&quot;)</span><br><span class=\"line\">  output$body_part &lt;- renderTable(count_top(selected(), body_part), width = &quot;100%&quot;)</span><br><span class=\"line\">  output$location &lt;- renderTable(count_top(selected(), location), width = &quot;100%&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>我做了另一个更改来改善应用程序的美观性：我强制所有表占据最大宽度（即填充它们出现的列）。这使得输出在美学上更加美观，因为它减少了偶然变化的数量。</p>\n<p>应用程序运行结果的屏幕截图如图4.4所示。您可以在<a href=\"https://github.com/hadley/mastering-shiny/tree/master/neiss/polish-tables.R\">https://github.com/hadley/mastering-shiny/tree/master/neiss/polish-tables.R</a>中找到源代码，并在<a href=\"https://hadley.shinyapps.io/ms-polish-tables\">https://hadley.shinyapps.io/ms-polish-tables</a>上试用该应用程序的实时版本。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/9ab24257bb441350c7e2d57bd09fe9452cae592e/779c3/demos/basic-case-study/polish-tables.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/9ab24257bb441350c7e2d57bd09fe9452cae592e/779c3/demos/basic-case-study/polish-tables.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图4.4 应用程序的第二次迭代通过仅显示总结表中最常见行来改进显示效果\"></p>\n<h2 id=\"4-6-发生率与计数\"><a href=\"#4-6-发生率与计数\" class=\"headerlink\" title=\"4.6 发生率与计数\"></a>4.6 发生率与计数</h2><p>目前为止，我们只显示了一个图表，但我们希望用户可以选择显示受伤人数或标准化发生率。首先，我在用户界面中添加了一个控件。在这里，我选择使用<code>selectInput()</code>，因为它使两种状态都变得明确，并且将来很容易添加新的状态：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidRow(</span><br><span class=\"line\">    column(8,</span><br><span class=\"line\">      selectInput(&quot;code&quot;, &quot;Product&quot;,</span><br><span class=\"line\">        choices = setNames(products$prod_code, products$title),</span><br><span class=\"line\">        width = &quot;100%&quot;</span><br><span class=\"line\">      )</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    column(2, selectInput(&quot;y&quot;, &quot;Y axis&quot;, c(&quot;rate&quot;, &quot;count&quot;)))</span><br><span class=\"line\">  ),</span><br></pre></td></tr></table></figure>\n\n<p>（我默认选择发生率，因为我认为这样更安全；您不需要了解人口分布就可以正确解释图表。）</p>\n<p>然后，我在生成图表时根据输入进行条件设置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output$age_sex &lt;- renderPlot(&#123;</span><br><span class=\"line\">    if (input$y == &quot;count&quot;) &#123;</span><br><span class=\"line\">      summary() %&gt;%</span><br><span class=\"line\">        ggplot(aes(age, n, colour = sex)) +</span><br><span class=\"line\">        geom_line() +</span><br><span class=\"line\">        labs(y = &quot;Estimated number of injuries&quot;)</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      summary() %&gt;%</span><br><span class=\"line\">        ggplot(aes(age, rate, colour = sex)) +</span><br><span class=\"line\">        geom_line(na.rm = TRUE) +</span><br><span class=\"line\">        labs(y = &quot;Injuries per 10,000 people&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, res = 96)</span><br></pre></td></tr></table></figure>\n\n<p>结果应用程序的屏幕截图如图4.5所示。您可以在<a href=\"https://github.com/hadley/mastering-shiny/tree/master/neiss/rate-vs-count.R\">https://github.com/hadley/mastering-shiny/tree/master/neiss/rate-vs-count.R</a>中找到源代码，并在<a href=\"https://hadley.shinyapps.io/ms-rate-vs-count\">https://hadley.shinyapps.io/ms-rate-vs-count</a>上试用该应用程序的实时版本。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/57dcd9e1cf0724f9c4af5d20972e410a5203b5e6/d119e/demos/basic-case-study/rate-vs-count.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/57dcd9e1cf0724f9c4af5d20972e410a5203b5e6/d119e/demos/basic-case-study/rate-vs-count.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图4.5 在此迭代中，我们允许用户在显示y轴上的计数或人口标准化率之间进行切换。\"></p>\n<h2 id=\"4-7-叙述\"><a href=\"#4-7-叙述\" class=\"headerlink\" title=\"4.7 叙述\"></a>4.7 叙述</h2><p>最后，我想提供一种方式来访问这些叙述，因为它们很有趣，而且它们提供了一种非正式的方式，可以在查看图表时检查你提出的假设。在R代码中，我同时采样多个叙述，但在你可以交互探索的应用程序中没有理由这样做。</p>\n<p>解决方案分为两个部分。首先，我们在用户界面底部添加一行。我使用一个动作按钮来触发一个新的故事，并将叙述放在一个<code>textOutput()</code>中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidRow(</span><br><span class=\"line\">    column(2, actionButton(&quot;story&quot;, &quot;Tell me a story&quot;)),</span><br><span class=\"line\">    column(10, textOutput(&quot;narrative&quot;))</span><br><span class=\"line\">  )</span><br></pre></td></tr></table></figure>\n\n<p>然后，我使用<code>eventReactive()</code>创建一个反应，只有在按钮被点击或底层数据改变时才会更新。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">narrative_sample &lt;- eventReactive(</span><br><span class=\"line\">    list(input$story, selected()),</span><br><span class=\"line\">    selected() %&gt;% pull(narrative) %&gt;% sample(1)</span><br><span class=\"line\">  )</span><br><span class=\"line\">  output$narrative &lt;- renderText(narrative_sample())</span><br></pre></td></tr></table></figure>\n\n<p>结果应用程序的屏幕截图如图4.6所示。您可以在<a href=\"https://github.com/hadley/mastering-shiny/tree/master/neiss/narrative.R\">https://github.com/hadley/mastering-shiny/tree/master/neiss/narrative.R</a>中找到源代码，并在<a href=\"https://hadley.shinyapps.io/ms-narrative\">https://hadley.shinyapps.io/ms-narrative</a>上试用该应用程序的实时版本。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/d62551b4bee05d3bd17b852b30b2fd55066e58dc/0d9bf/demos/basic-case-study/narrative.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/d62551b4bee05d3bd17b852b30b2fd55066e58dc/0d9bf/demos/basic-case-study/narrative.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图4.6 最终迭代增加了从选定行中随机抽取叙述的功能\"></p>\n<h2 id=\"4-8-练习\"><a href=\"#4-8-练习\" class=\"headerlink\" title=\"4.8 练习\"></a>4.8 练习</h2><ul>\n<li><p>为每个应用程序绘制反应图。</p>\n</li>\n<li><p>在减少摘要表的代码中，如果将<code>fct_infreq()</code>和<code>fct_lump()</code>翻转，会发生什么？</p>\n</li>\n<li><p>添加一个输入控件，让用户决定在摘要表中显示的行数。</p>\n</li>\n<li><p>提供一种系统地使用前后按钮逐步浏览每个叙述的方法。</p>\n</li>\n</ul>\n<p><strong>高级</strong>：使叙述列表“循环”，以便从最后一个叙述前进到第一个叙述。</p>\n<h2 id=\"4-9-总结\"><a href=\"#4-9-总结\" class=\"headerlink\" title=\"4.9 总结\"></a>4.9 总结</h2><p>现在，您已经掌握了Shiny应用程序的基本知识，接下来的七章将为您提供一系列重要的技术。一旦您阅读了下一章关于工作流的章节，我建议您浏览其余章节以了解它们的涵盖内容，然后在需要应用程序技术时再回来阅读。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"4-案例研究：ER损伤\"><a href=\"#4-案例研究：ER损伤\" class=\"headerlink\" title=\"4 案例研究：ER损伤\"></a>4 案例研究：ER损伤</h1><h2 id=\"4-1-简介\"><a href=\"#4-1-简介\" class=\"headerlink\" title=\"4.1 简介\"></a>4.1 简介</h2><p>在过去的三个章节中，我向您介绍了一系列新概念。为了帮助理解他们，我们现在将浏览一个更丰富的Shiny应用程序，该应用程序探索了一个有趣的数据集，并将您迄今为止看到的许多想法整合在一起。我们将从Shiny之外进行一些数据分析开始，然后将其转化为应用程序，从简单开始，然后逐步添加更多细节。</p>\n<p>在本章中，我们将使用vroom（用于快速读取文件）和tidyverse（用于一般数据分析）来补充Shiny。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>vroom<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>tidyverse<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-2-数据\"><a href=\"#4-2-数据\" class=\"headerlink\" title=\"4.2 数据\"></a>4.2 数据</h2><p>我们将探索消费者产品安全委员会收集的美国国家电子伤害监测系统 (NEISS) 的数据。这是一项长期研究，记录了美国代表性医院中发生的所有事故。这是一个有趣的数据集，因为每个人都熟悉这个领域，每个观察都附有简短的叙述，解释事故是如何发生的。您可以在 <a href=\"https://github.com/hadley/neiss\">https://github.com/hadley/neiss</a> 了解有关此数据集的更多信息。</p>\n<p>在本章中，我将只关注2017年的数据。这使得数据足够小（约10 MB），易于存储在git中（以及本书的其余部分），这意味着我们不需要考虑快速导入数据的复杂策略（我们将在本书稍后回到这些策略）。您可以在<a href=\"https://github.com/hadley/mastering-shiny/blob/master/neiss/data.R\">https://github.com/hadley/mastering-shiny/blob/master/neiss/data.R</a>上看到我用于创建本章提取的代码。</p>\n<p>如果你想把数据传到自己的电脑上，运行这段代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dir.create<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Warning in dir.create(&quot;neiss&quot;): &#x27;neiss&#x27; already exists</span></span><br><span class=\"line\">download <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>name<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  url <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;https://github.com/hadley/mastering-shiny/raw/master/neiss/&quot;</span></span><br><span class=\"line\">  download.file<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span>url<span class=\"punctuation\">,</span> name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss/&quot;</span><span class=\"punctuation\">,</span> name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> quiet <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">download<span class=\"punctuation\">(</span><span class=\"string\">&quot;injuries.tsv.gz&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">download<span class=\"punctuation\">(</span><span class=\"string\">&quot;population.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">download<span class=\"punctuation\">(</span><span class=\"string\">&quot;products.tsv&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>我们将使用的主要数据集是伤害数据集，其中包含约25万条观察记录：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">injuries <span class=\"operator\">&lt;-</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss/injuries.tsv.gz&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">injuries</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 255,064 × 10</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   trmt_date    age sex   race  body_part   diag    locat…¹ prod_…² weight narra…³</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;date&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 2017-01-01    71 male  white Upper Trunk Contus… Other …    1807   77.7 71YOM …</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 2017-01-01    16 male  white Lower Arm   Burns,… Home        676   77.7 16YOM …</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 2017-01-01    58 male  white Upper Trunk Contus… Home        649   77.7 58 YOM…</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 2017-01-01    21 male  white Lower Trunk Strain… Home       4076   77.7 21 YOM…</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 2017-01-01    54 male  white Head        Inter … Other …    1807   77.7 54 YOM…</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 2017-01-01    21 male  white Hand        Fractu… Home       1884   77.7 21 YOM…</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 255,058 more rows, and abbreviated variable names ¹​location,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   ²​prod_code, ³​narrative</span></span><br></pre></td></tr></table></figure>\n\n<p>每行代表一起单次事故，有10个变量：</p>\n<ul>\n<li><p><code>trmt_date</code>是该人被送往医院的日期（不是事故发生的日期）。</p>\n</li>\n<li><p><code>age</code>、<code>sex</code>和<code>race</code>给出了发生事故的人的人口统计信息。</p>\n</li>\n<li><p><code>body_part</code>是身体受伤部位的位置（如脚踝或耳朵）；<code>location</code>是事故发生的地方（如家庭或学校）。</p>\n</li>\n<li><p><code>diag</code>给出了伤害的基本诊断（如骨折或撕裂）。</p>\n</li>\n<li><p><code>prod_code</code>是与伤害相关的主要产品。</p>\n</li>\n<li><p><code>weight</code>是统计权重，给出了如果将此数据集按比例缩放到整个美国人口，遭受这种伤害的人数估计。</p>\n</li>\n<li><p><code>narrative</code>是关于事故如何发生的简短故事。</p>\n</li>\n</ul>\n<p>我们将将其与其他两个数据帧配对以获取更多上下文：<code>products</code>让我们可以从产品代码中查找产品名称，<code>population</code>让我们知道2017年美国每一种年龄和性别组合的总人口数。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">products <span class=\"operator\">&lt;-</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss/products.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">products</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 38 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   prod_code title                            </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;       &lt;dbl&gt; &lt;chr&gt;                            </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1       464 knives, not elsewhere classified </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2       474 tableware and accessories        </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3       604 desks, chests, bureaus or buffets</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4       611 bathtubs or showers              </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5       649 toilets                          </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6       676 rugs or carpets, not specified   </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 32 more rows</span></span><br><span class=\"line\"></span><br><span class=\"line\">population <span class=\"operator\">&lt;-</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span><span class=\"string\">&quot;neiss/population.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">population</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 170 × 3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     age sex    population</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1     0 female    1924145</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2     0 male      2015150</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3     1 female    1943534</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4     1 male      2031718</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5     2 female    1965150</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6     2 male      2056625</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 164 more rows</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-3-探索\"><a href=\"#4-3-探索\" class=\"headerlink\" title=\"4.3 探索\"></a>4.3 探索</h2><p>在我们创建应用程序之前，让我们先来探索一下数据。我们将从一款具有有趣故事的产品开始：649，“厕所”。首先，我们将提取与此产品相关的伤害：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selected <span class=\"operator\">&lt;-</span> injuries <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>prod_code <span class=\"operator\">==</span> <span class=\"number\">649</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">nrow<span class=\"punctuation\">(</span>selected<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 2993</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来，我们将进行一些基本的汇总，查看与厕所相关的伤害的位置、身体部位和诊断。请注意，我用<code>weight</code>变量加权，这样计数可以解释为整个美国估计的总伤害数。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selected <span class=\"operator\">%&gt;%</span> count<span class=\"punctuation\">(</span>location<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">,</span> sort <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 6 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   location                         n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;chr&gt;                        &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 Home                       99603. </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Other Public Property      18663. </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 Unknown                    16267. </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 School                       659. </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 Street Or Highway             16.2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 Sports Or Recreation Place    14.8</span></span><br><span class=\"line\"></span><br><span class=\"line\">selected <span class=\"operator\">%&gt;%</span> count<span class=\"punctuation\">(</span>body_part<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">,</span> sort <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 24 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   body_part        n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;chr&gt;        &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 Head        31370.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Lower Trunk 26855.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 Face        13016.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 Upper Trunk 12508.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 Knee         6968.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 N.S./Unk     6741.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 18 more rows</span></span><br><span class=\"line\"></span><br><span class=\"line\">selected <span class=\"operator\">%&gt;%</span> count<span class=\"punctuation\">(</span>diag<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">,</span> sort <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 20 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   diag                       n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;chr&gt;                  &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 Other Or Not Stated   32897.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Contusion Or Abrasion 22493.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 Inter Organ Injury    21525.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 Fracture              21497.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 Laceration            18734.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 Strain, Sprain         7609.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 14 more rows</span></span><br></pre></td></tr></table></figure>\n\n<p>正如你可能预期的那样，涉及厕所的伤害最常发生在家里。最常涉及的身体部位可能表明这些伤害是跌倒造成的（因为头部和脸部通常不涉及日常厕所使用），而且诊断似乎相当多样化。</p>\n<p>我们还可以探索年龄和性别之间的模式。这里我们有足够的数据，表格不是很有用，所以我做了一个图，图4.1，这使得图案更加明显。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary <span class=\"operator\">&lt;-</span> selected <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  count<span class=\"punctuation\">(</span>age<span class=\"punctuation\">,</span> sex<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">)</span></span><br><span class=\"line\">summary</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 208 × 3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     age sex         n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1     0 female   4.76</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2     0 male    14.3 </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3     1 female 253.  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4     1 male   231.  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5     2 female 438.  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6     2 male   632.  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 202 more rows</span></span><br><span class=\"line\"></span><br><span class=\"line\">summary <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  ggplot<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>age<span class=\"punctuation\">,</span> n<span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> sex<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Estimated number of injuries&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>  <img src=\"https://d33wubrfki0l68.cloudfront.net/ca164e63cd77225daf58fc6351cf6453e04e0af6/76632/basic-case-study_files/figure-html/toilets-raw-1.png\" alt=\"图4.1 按年龄和性别分列的厕所造成的伤害估计数\"></p>\n<p>我们可以看到，小男孩在3岁时达到峰值，然后从中年开始有所增加（特别是对女性而言），在80岁以后逐渐下降。我认为峰值是因为男孩通常站着上厕所，而女性的增加是因为骨质疏松症（即，我怀疑男性和女性的受伤率相同，但更多的女性最终进入急诊室是因为她们骨折的风险更高）。</p>\n<p>解释这种模式的难点在于，我们知道老年人比年轻人少，因此受伤的人口更少。我们可以通过将受伤人数与总人口进行比较并计算伤害率来控制这一点。这里我使用的是每10,000人的比率。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary <span class=\"operator\">&lt;-</span> selected <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  count<span class=\"punctuation\">(</span>age<span class=\"punctuation\">,</span> sex<span class=\"punctuation\">,</span> wt <span class=\"operator\">=</span> weight<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  left_join<span class=\"punctuation\">(</span>population<span class=\"punctuation\">,</span> by <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;age&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sex&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>rate <span class=\"operator\">=</span> n <span class=\"operator\">/</span> population <span class=\"operator\">*</span> <span class=\"number\">1e4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">summary</span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 208 × 5</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     age sex         n population   rate</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1     0 female   4.76    1924145 0.0247</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2     0 male    14.3     2015150 0.0708</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3     1 female 253.      1943534 1.30  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4     1 male   231.      2031718 1.14  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5     2 female 438.      1965150 2.23  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6     2 male   632.      2056625 3.07  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 202 more rows</span></span><br></pre></td></tr></table></figure>\n\n<p>绘制比率图（图4.2），50岁以后的趋势明显不同：男女之间的差异要小得多，我们不再看到下降。这是因为女性往往比男性寿命更长，所以在老年时，更多的女性仍然活着并可能因厕所受伤。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  ggplot<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>age<span class=\"punctuation\">,</span> rate<span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> sex<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  geom_line<span class=\"punctuation\">(</span>na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">  labs<span class=\"punctuation\">(</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Injuries per 10,000 people&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/35c1766902243f1fc9fa1aa92c6a57bd9eb31ccd/382fd/basic-case-study_files/figure-html/toilets-rate-1.png\" alt=\"图4.2 按年龄和性别分列的每10,000人受伤估计率\"></p>\n<p>（注意，比率只到80岁，因为我找不到80岁以上年龄的人口数据。）</p>\n<p>最后，我们可以浏览一些叙述。通过浏览这些叙述是一种非正式的方法，可以检查我们的假设，并产生新的想法以进一步探索。这里我随机抽取了10个样本：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selected <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  sample_n<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  pull<span class=\"punctuation\">(</span>narrative<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [1] &quot;79 YOM LOW BACK PAIN AFTER SLIPPING OFF TOILET AT HOME 1 WEEK AGO.DX DEGENERATIVE DISC DISEASE, BLUMBAR, MECHANICAL FALL, SEPSIS&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [2] &quot;88YOF PRESENTS AFTER FALLING OFF THE TOILET AT HOME AND HITTING CHEST WALL. DX: RIGHT CHEST WALL PAIN S/P FALL.*&quot;                </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [3] &quot;73YOF WAS SITTING ON A PUBLIC TOILET AND PASSED OUT FELL OF FONTO HEADCLOSED HEAD INJURY ADMITTED FOR SYNCOPE&quot;                   </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [4] &quot;97 YOM FELL HITTING HEAD ON TOILET SEAT.DX:  NECK PX, BACK PX, FREQUENT FALLS.&quot;                                                  </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [5] &quot;32YOM FROM RENEWAL CENTER WAS SNORTING *** AND FELL OFF THE TOILET STRIKING HIS HEAD DX MINOR CHI&quot;                               </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [6] &quot;71YOF LOST BALANCE SITTING ON TOILET AT HOME AND INJURIED SHOULDER.  DX:  LT SHOULDER INJURY.&quot;                                   </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [7] &quot;99YOF FALL OFF TOILET AND C/O SHOULDER PAIN/ CONTUSION R SHOULDER&quot;                                                               </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [8] &quot;26 YOM TRIPPED AND FELL STRIKING KAND ON TOILET SEAT.DX:  R HAND LAC 5 CM.&quot;                                                      </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  [9] &quot;86YOF TURNED HEAD &amp; BECAME DIZZY, FELL AGAINST TOILET INJURING SHOULDER/CT SHOULDER&quot;                                             </span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [10] &quot;70 YOF - SYNCOPE - PT WAS SITTING ON TOILET AND FELL @ HOME.&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>对于一个产品进行了这种探索之后，如果我们能够轻松地对其他产品进行这种探索，而无需重新输入代码，那将是非常好的。所以让我们制作一个Shiny应用程序！</p>\n<h2 id=\"4-4-原型\"><a href=\"#4-4-原型\" class=\"headerlink\" title=\"4.4 原型\"></a>4.4 原型</h2><p>在构建一个复杂的应用程序时，我强烈建议您尽可能从简单开始，这样您可以在开始进行更复杂的操作之前确认基本机制可以运行。在这里，我将从一个输入（产品代码）、三个表和一个图形开始。</p>\n<p>在设计第一个原型时，挑战在于使其“尽可能简单”。在快速实现基本功能和为应用程序的未来做计划之间存在紧张关系。任何极端都可能很糟糕：如果你设计得太狭窄，你将在稍后花费大量时间重新设计你的应用程序；如果你设计得太严格，你将花费大量时间编写最终将被删除的代码。为了帮助找到平衡，我经常在代码之前用铅笔画一些草图来快速探索用户界面和反应图。</p>\n<p>在这里，我决定将一行用于输入（考虑到在应用程序完成之前我可能会添加更多输入），一行用于所有三个表格（给每个表格4列，占12列宽度的1&#x2F;3），然后一行用于图形：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prod_codes &lt;- setNames(products$prod_code, products$title)</span><br><span class=\"line\"></span><br><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    column(6,</span><br><span class=\"line\">      selectInput(&quot;code&quot;, &quot;Product&quot;, choices = prod_codes)</span><br><span class=\"line\">    )</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    column(4, tableOutput(&quot;diag&quot;)),</span><br><span class=\"line\">    column(4, tableOutput(&quot;body_part&quot;)),</span><br><span class=\"line\">    column(4, tableOutput(&quot;location&quot;))</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    column(12, plotOutput(&quot;age_sex&quot;))</span><br><span class=\"line\">  )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>我们还没有谈论<code>fluidRow()</code>和<code>column()</code>，但你应该能够从上下文中猜测它们的作用，我们将在第6.2.3节回来讨论它们。另外请注意在<code>selectInput()</code> <code>choices</code>中使用<code>setNames()</code>：它在用户界面中显示产品名称并返回产品代码到server。</p>\n<p>server函数相对简单。我先将上一节中创建的<code>selected</code>和<code>summary</code>变量转换为反应式表达式。这是一个合理的通用模式：您在数据分析中创建变量以分解分析步骤，并避免多次重新计算，而Shiny应用程序中的反应式表达式起到相同的作用。</p>\n<p>通常，在开始Shiny应用程序之前，花一些时间清理你的分析代码是一个好主意，这样你就可以在添加反应性的额外复杂性之前用常规R代码来考虑这些问题。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  selected &lt;- reactive(injuries %&gt;% filter(prod_code == input$code))</span><br><span class=\"line\"></span><br><span class=\"line\">  output$diag &lt;- renderTable(</span><br><span class=\"line\">    selected() %&gt;% count(diag, wt = weight, sort = TRUE)</span><br><span class=\"line\">  )</span><br><span class=\"line\">  output$body_part &lt;- renderTable(</span><br><span class=\"line\">    selected() %&gt;% count(body_part, wt = weight, sort = TRUE)</span><br><span class=\"line\">  )</span><br><span class=\"line\">  output$location &lt;- renderTable(</span><br><span class=\"line\">    selected() %&gt;% count(location, wt = weight, sort = TRUE)</span><br><span class=\"line\">  )</span><br><span class=\"line\"></span><br><span class=\"line\">  summary &lt;- reactive(&#123;</span><br><span class=\"line\">    selected() %&gt;%</span><br><span class=\"line\">      count(age, sex, wt = weight) %&gt;%</span><br><span class=\"line\">      left_join(population, by = c(&quot;age&quot;, &quot;sex&quot;)) %&gt;%</span><br><span class=\"line\">      mutate(rate = n / population * 1e4)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  output$age_sex &lt;- renderPlot(&#123;</span><br><span class=\"line\">    summary() %&gt;%</span><br><span class=\"line\">      ggplot(aes(age, n, colour = sex)) +</span><br><span class=\"line\">      geom_line() +</span><br><span class=\"line\">      labs(y = &quot;Estimated number of injuries&quot;)</span><br><span class=\"line\">  &#125;, res = 96)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意，在这里创建summary反应式并不是严格必要的，因为它仅被一个反应式消费者使用。但是，将计算和绘图分开是很好的做法，因为这样可以使应用程序的流程更易于理解，并且将来更易于推广。</p>\n<p>最终应用程序的屏幕截图如图4.3所示。您可以在此处找到源代码：<a href=\"https://github.com/hadley/mastering-shiny/tree/master/neiss/prototype.R\">https://github.com/hadley/mastering-shiny/tree/master/neiss/prototype.R</a>，并尝试运行该应用程序的实时版本：<a href=\"https://hadley.shinyapps.io/ms-prototype/\">https://hadley.shinyapps.io/ms-prototype/</a>。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/0671024307798129536ceb17723b862ec709f14f/cd879/demos/basic-case-study/prototype.png\" alt=\"图4.3 NEISS探索应用程序的第一个原型\"></p>\n<h2 id=\"4-5-完善表格\"><a href=\"#4-5-完善表格\" class=\"headerlink\" title=\"4.5 完善表格\"></a>4.5 完善表格</h2><p>既然我们已经将基本组件放置并运行，我们可以逐步改进我们的应用程序。这个应用程序的第一个问题是，它在表格中显示了很多信息，我们可能只想知道重点。为了解决这个问题，我们需要首先找出如何截断表格。我选择通过组合forcats函数来实现：我将变量转换为因子，按级别的频率排序，然后将前五个级别之后的所有级别都放在一起。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">injuries <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>diag <span class=\"operator\">=</span> fct_lump<span class=\"punctuation\">(</span>fct_infreq<span class=\"punctuation\">(</span>diag<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>diag<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  summarise<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>weight<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 6 × 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   diag                        n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;fct&gt;                   &lt;int&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 Other Or Not Stated   1806436</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Fracture              1558961</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3 Laceration            1432407</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 Strain, Sprain        1432556</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 Contusion Or Abrasion 1451987</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6 Other                 1929147</span></span><br></pre></td></tr></table></figure>\n\n<p>因为我知道如何做到这一点，所以我编写了一个小函数来自动执行此操作，对任何变量。这里的细节并不是那么重要，但我们将在第12章中回到它们。您也可以通过复制和粘贴解决问题，因此如果代码看起来完全陌生，请不要担心。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">count_top <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>df<span class=\"punctuation\">,</span> var<span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  df <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    mutate<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#123;</span> var <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span> <span class=\"operator\">:=</span> fct_lump<span class=\"punctuation\">(</span>fct_infreq<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#123;</span> var <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> n<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    group_by<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#123;</span> var <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    summarise<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> <span class=\"built_in\">as.integer</span><span class=\"punctuation\">(</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>weight<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来采用server函数：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output$diag &lt;- renderTable(count_top(selected(), diag), width = &quot;100%&quot;)</span><br><span class=\"line\">  output$body_part &lt;- renderTable(count_top(selected(), body_part), width = &quot;100%&quot;)</span><br><span class=\"line\">  output$location &lt;- renderTable(count_top(selected(), location), width = &quot;100%&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>我做了另一个更改来改善应用程序的美观性：我强制所有表占据最大宽度（即填充它们出现的列）。这使得输出在美学上更加美观，因为它减少了偶然变化的数量。</p>\n<p>应用程序运行结果的屏幕截图如图4.4所示。您可以在<a href=\"https://github.com/hadley/mastering-shiny/tree/master/neiss/polish-tables.R\">https://github.com/hadley/mastering-shiny/tree/master/neiss/polish-tables.R</a>中找到源代码，并在<a href=\"https://hadley.shinyapps.io/ms-polish-tables\">https://hadley.shinyapps.io/ms-polish-tables</a>上试用该应用程序的实时版本。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/9ab24257bb441350c7e2d57bd09fe9452cae592e/779c3/demos/basic-case-study/polish-tables.png\" alt=\"图4.4 应用程序的第二次迭代通过仅显示总结表中最常见行来改进显示效果\"></p>\n<h2 id=\"4-6-发生率与计数\"><a href=\"#4-6-发生率与计数\" class=\"headerlink\" title=\"4.6 发生率与计数\"></a>4.6 发生率与计数</h2><p>目前为止，我们只显示了一个图表，但我们希望用户可以选择显示受伤人数或标准化发生率。首先，我在用户界面中添加了一个控件。在这里，我选择使用<code>selectInput()</code>，因为它使两种状态都变得明确，并且将来很容易添加新的状态：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidRow(</span><br><span class=\"line\">    column(8,</span><br><span class=\"line\">      selectInput(&quot;code&quot;, &quot;Product&quot;,</span><br><span class=\"line\">        choices = setNames(products$prod_code, products$title),</span><br><span class=\"line\">        width = &quot;100%&quot;</span><br><span class=\"line\">      )</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    column(2, selectInput(&quot;y&quot;, &quot;Y axis&quot;, c(&quot;rate&quot;, &quot;count&quot;)))</span><br><span class=\"line\">  ),</span><br></pre></td></tr></table></figure>\n\n<p>（我默认选择发生率，因为我认为这样更安全；您不需要了解人口分布就可以正确解释图表。）</p>\n<p>然后，我在生成图表时根据输入进行条件设置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output$age_sex &lt;- renderPlot(&#123;</span><br><span class=\"line\">    if (input$y == &quot;count&quot;) &#123;</span><br><span class=\"line\">      summary() %&gt;%</span><br><span class=\"line\">        ggplot(aes(age, n, colour = sex)) +</span><br><span class=\"line\">        geom_line() +</span><br><span class=\"line\">        labs(y = &quot;Estimated number of injuries&quot;)</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      summary() %&gt;%</span><br><span class=\"line\">        ggplot(aes(age, rate, colour = sex)) +</span><br><span class=\"line\">        geom_line(na.rm = TRUE) +</span><br><span class=\"line\">        labs(y = &quot;Injuries per 10,000 people&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, res = 96)</span><br></pre></td></tr></table></figure>\n\n<p>结果应用程序的屏幕截图如图4.5所示。您可以在<a href=\"https://github.com/hadley/mastering-shiny/tree/master/neiss/rate-vs-count.R\">https://github.com/hadley/mastering-shiny/tree/master/neiss/rate-vs-count.R</a>中找到源代码，并在<a href=\"https://hadley.shinyapps.io/ms-rate-vs-count\">https://hadley.shinyapps.io/ms-rate-vs-count</a>上试用该应用程序的实时版本。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/57dcd9e1cf0724f9c4af5d20972e410a5203b5e6/d119e/demos/basic-case-study/rate-vs-count.png\" alt=\"图4.5 在此迭代中，我们允许用户在显示y轴上的计数或人口标准化率之间进行切换。\"></p>\n<h2 id=\"4-7-叙述\"><a href=\"#4-7-叙述\" class=\"headerlink\" title=\"4.7 叙述\"></a>4.7 叙述</h2><p>最后，我想提供一种方式来访问这些叙述，因为它们很有趣，而且它们提供了一种非正式的方式，可以在查看图表时检查你提出的假设。在R代码中，我同时采样多个叙述，但在你可以交互探索的应用程序中没有理由这样做。</p>\n<p>解决方案分为两个部分。首先，我们在用户界面底部添加一行。我使用一个动作按钮来触发一个新的故事，并将叙述放在一个<code>textOutput()</code>中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidRow(</span><br><span class=\"line\">    column(2, actionButton(&quot;story&quot;, &quot;Tell me a story&quot;)),</span><br><span class=\"line\">    column(10, textOutput(&quot;narrative&quot;))</span><br><span class=\"line\">  )</span><br></pre></td></tr></table></figure>\n\n<p>然后，我使用<code>eventReactive()</code>创建一个反应，只有在按钮被点击或底层数据改变时才会更新。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">narrative_sample &lt;- eventReactive(</span><br><span class=\"line\">    list(input$story, selected()),</span><br><span class=\"line\">    selected() %&gt;% pull(narrative) %&gt;% sample(1)</span><br><span class=\"line\">  )</span><br><span class=\"line\">  output$narrative &lt;- renderText(narrative_sample())</span><br></pre></td></tr></table></figure>\n\n<p>结果应用程序的屏幕截图如图4.6所示。您可以在<a href=\"https://github.com/hadley/mastering-shiny/tree/master/neiss/narrative.R\">https://github.com/hadley/mastering-shiny/tree/master/neiss/narrative.R</a>中找到源代码，并在<a href=\"https://hadley.shinyapps.io/ms-narrative\">https://hadley.shinyapps.io/ms-narrative</a>上试用该应用程序的实时版本。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/d62551b4bee05d3bd17b852b30b2fd55066e58dc/0d9bf/demos/basic-case-study/narrative.png\" alt=\"图4.6 最终迭代增加了从选定行中随机抽取叙述的功能\"></p>\n<h2 id=\"4-8-练习\"><a href=\"#4-8-练习\" class=\"headerlink\" title=\"4.8 练习\"></a>4.8 练习</h2><ul>\n<li><p>为每个应用程序绘制反应图。</p>\n</li>\n<li><p>在减少摘要表的代码中，如果将<code>fct_infreq()</code>和<code>fct_lump()</code>翻转，会发生什么？</p>\n</li>\n<li><p>添加一个输入控件，让用户决定在摘要表中显示的行数。</p>\n</li>\n<li><p>提供一种系统地使用前后按钮逐步浏览每个叙述的方法。</p>\n</li>\n</ul>\n<p><strong>高级</strong>：使叙述列表“循环”，以便从最后一个叙述前进到第一个叙述。</p>\n<h2 id=\"4-9-总结\"><a href=\"#4-9-总结\" class=\"headerlink\" title=\"4.9 总结\"></a>4.9 总结</h2><p>现在，您已经掌握了Shiny应用程序的基本知识，接下来的七章将为您提供一系列重要的技术。一旦您阅读了下一章关于工作流的章节，我建议您浏览其余章节以了解它们的涵盖内容，然后在需要应用程序技术时再回来阅读。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Shiny入门系列,编程 - Shiny入门系列 - 编程","path":"api/tags/Shiny入门系列,编程 - Shiny入门系列 - 编程.json"}]}