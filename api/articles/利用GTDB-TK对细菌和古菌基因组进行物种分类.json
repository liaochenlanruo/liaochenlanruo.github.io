{"title":"利用GTDB-TK对细菌和古菌基因组进行物种分类","slug":"利用GTDB-TK对细菌和古菌基因组进行物种分类","date":"2021-12-10T03:14:45.000Z","updated":"2022-01-08T02:16:28.432Z","comments":true,"path":"api/articles/利用GTDB-TK对细菌和古菌基因组进行物种分类.json","excerpt":null,"covers":null,"content":"<p>GTDB-Tk 是一个软件工具包，用于根据<ruby>基因组数据库分类 GTDB<rt>Genome Database Taxonomy GTDB</rt></ruby> 为细菌和古菌基因组<ruby>分配客观分类学分类<rt>assigning objective taxonomic classifications</rt></ruby>。可以用于宏基因组组装基因组 (MAG)、单菌基因组和单细胞基因组。</p>\n<h1 id=\"安装gtdb-tk\"><a class=\"markdownIt-Anchor\" href=\"#安装gtdb-tk\"></a> 安装 GTDB-Tk</h1>\n<ul>\n<li>\n<p>通过 conda 安装主程序</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># latest version</span>\nconda create -n gtdbtk -c conda-forge -c bioconda gtdbtk\n\n<span class=\"token comment\"># specific version (replace 1.7.0 with the version you wish to install, recommended)</span>\nconda create -n gtdbtk -c conda-forge -c bioconda <span class=\"token assign-left variable\">gtdbtk</span><span class=\"token operator\">=</span><span class=\"token number\">1.7</span>.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>下载 GTDB-Tk 数据库 (~47 G)</p>\n<p>最新版本的数据库为 R202，需要 &gt;=1.5.0 版本的 GTDB-Tk。</p>\n<ul>\n<li>\n<p>自动 (非常慢)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">download-db.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>手动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> \t<span class=\"token comment\"># 找到下载脚本的路径并打开，从中找到数据库的链接</span>\n<span class=\"token function\">which</span> download-db.sh\n  \n<span class=\"token comment\"># 进入数据库默认路径</span>\n<span class=\"token builtin class-name\">cd</span> ~/miniconda3/envs/gtdbtk/share/gtdbtk-1.7.0/db/\n\t  \n   <span class=\"token comment\"># 用wget下载 (非常慢)，推荐在Windows下用其他软件下载，再上传服务器</span>\n<span class=\"token function\">nohup</span> <span class=\"token function\">wget</span> -c https://data.gtdb.ecogenomic.org/releases/release202/202.0/auxillary_files/gtdbtk_r202_data.tar.gz --no-check-certificate <span class=\"token operator\">&amp;</span>\n\n<span class=\"token function\">tar</span> zxvf gtdbtk_r202_data.tar.gz\n\n<span class=\"token function\">mv</span> release202/* ./<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"运行软件\"><a class=\"markdownIt-Anchor\" href=\"#运行软件\"></a> 运行软件</h1>\n<h2 id=\"classify_wf\"><a class=\"markdownIt-Anchor\" href=\"#classify_wf\"></a> classify_wf</h2>\n<div class=\"note default\">\n<p>可以通过 <code>classify_wf</code>  命令完成整个工作流程。</p>\n</div>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk classify_wf --genome_dir <span class=\"token operator\">&lt;</span>my_genomes<span class=\"token operator\">></span> --out_dir <span class=\"token operator\">&lt;</span>output_dir<span class=\"token operator\">></span> --extension fna --cpus <span class=\"token number\">20</span> --force<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<ul>\n<li>\n<p>--genome_dir<br />\ndirectory containing genome files in FASTA format</p>\n</li>\n<li>\n<p>--batchfile<br />\npath to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p>\n</li>\n<li>\n<p>--out_dir<br />\ndirectory to output files</p>\n</li>\n<li>\n<p>-x, --extension<br />\nextension of files to process, gz = gzipped (Default: fna)</p>\n</li>\n<li>\n<p>--min_perc_aa<br />\nexclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (Default: 10)</p>\n</li>\n<li>\n<p>--prefix<br />\nprefix for all output files (Default: gtdbtk)</p>\n</li>\n<li>\n<p>--cpus<br />\nnumber of CPUs to use (Default: 1)</p>\n</li>\n<li>\n<p>--pplacer_cpus<br />\nuse pplacer_cpus during placement (default: cpus)</p>\n</li>\n<li>\n<p>--force<br />\ncontinue processing if an error occurs on a single genome</p>\n</li>\n<li>\n<p>--scratch_dir<br />\nReduce pplacer memory usage by writing to disk (slower).</p>\n</li>\n<li>\n<p>--min_af<br />\nminimum alignment fraction to consider closest genome (Default: 0.65)</p>\n</li>\n<li>\n<p>--tmpdir<br />\nspecify alternative directory for temporary files （Default: /tmp</p>\n</li>\n<li>\n<p>--debug<br />\ncreate intermediate files for debugging purposes</p>\n</li>\n</ul>\n</div></details>\n<div class=\"note default\">\n<p>但下面我们演示分步运行。在处理大型管道时，单独运行这些步骤有时会很有用。</p>\n</div>\n<h2 id=\"step-1-准备输入文件\"><a class=\"markdownIt-Anchor\" href=\"#step-1-准备输入文件\"></a> Step 1 准备输入文件</h2>\n<p>以下两个基因组作为示例文件：* Genome A:  <code>GCF_003947435.1</code>  [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> / <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCF_003947435.1/\">NCBI</a>] * Genome B:  <code>GCA_002011125.1</code>  [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> / <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCA_002011125.1/\">NCBI</a>]。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Create the directory.</span>\n<span class=\"token function\">mkdir</span> -p /tmp/gtdbtk <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> /tmp/gtdbtk\n\n<span class=\"token comment\"># Obtain the genomes.</span>\n<span class=\"token function\">mkdir</span> -p /tmp/gtdbtk/genomes\n<span class=\"token function\">wget</span> -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/003/947/435/GCF_003947435.1_ASM394743v1/GCF_003947435.1_ASM394743v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_a.fna.gz\n\n<span class=\"token function\">wget</span> -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/002/011/125/GCA_002011125.1_ASM201112v1/GCA_002011125.1_ASM201112v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_b.fna.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"step-2-gene-calling-identify\"><a class=\"markdownIt-Anchor\" href=\"#step-2-gene-calling-identify\"></a> Step 2 Gene calling (identify)</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk identify --genome_dir /tmp/gtdbtk/genomes --out_dir /tmp/gtdbtk/identify --extension gz --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<p>获得的基因和<ruby>标记<rt>marker</rt></ruby>信息可以在每个<ruby>基因组反应中间文件目录<rt>genomes respeective intermediate files directory</rt></ruby>下找到，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/identify/identify/intermediate_results/marker_genes/genome_a.fna/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">genome_a.fna_pfam_tophit.tsv\ngenome_a.fna_protein.gff.sha256\ngenome_a.fna_pfam_tophit.tsv.sha256\ngenome_a.fna_tigrfam.out\ngenome_a.fna_pfam.tsv\ngenome_a.fna_tigrfam.out.sha256\ngenome_a.fna_pfam.tsv.sha256\ngenome_a.fna_tigrfam_tophit.tsv\ngenome_a.fna_protein.faa\ngenome_a.fna_tigrfam_tophit.tsv.sha256\ngenome_a.fna_protein.faa.sha256\ngenome_a.fna_tigrfam.tsv\ngenome_a.fna_protein.fna\ngenome_a.fna_tigrfam.tsv.sha256\ngenome_a.fna_protein.fna.sha256\nprodigal_translation_table.tsv\ngenome_a.fna_protein.gff\nprodigal_translation_table.tsv.sha256<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"note default\">\n<p>大部分情况下只需要读取摘要文件，其中详细说明了从 archaeal 122 或 bacterial 120<ruby>标记集<rt>marker set</rt></ruby>识别的标记。</p>\n</div>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /tmp/gtdbtk/identify/gtdbtk.ar122.markers_summary.tsv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">name    number_unique_genes     number_multiple_genes   number_multiple_unique_genes    number_missing_genes    list_unique_genes       list_multiple_genes     list_multiple_unique_genes      list_missing_genes\ngenome_a.fna    109     3       0       10      PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,PF13685.1,TIGR00021,TIGR00037,TIGR00042,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00549,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01213,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02390,TIGR02651,TIGR03626,TIGR03627,TIGR03628,TIGR03636,TIGR03653,TIGR03665,TIGR03671,TIGR03672,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684    PF01496.14,TIGR00458,TIGR00658          PF01866.12,TIGR00064,TIGR00373,TIGR00522,TIGR02338,TIGR02389,TIGR03629,TIGR03670,TIGR03673,TIGR03722\ngenome_b.fna    118     2       0       2       PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01866.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,TIGR00021,TIGR00037,TIGR00042,TIGR00064,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00373,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00458,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00522,TIGR00549,TIGR00658,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02338,TIGR02389,TIGR02390,TIGR02651,TIGR03626,TIGR03628,TIGR03629,TIGR03636,TIGR03653,TIGR03665,TIGR03670,TIGR03671,TIGR03672,TIGR03673,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684,TIGR03722 PF01496.14,PF13685.1            TIGR01213,TIGR03627<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"step-3-aligning-genomes-align\"><a class=\"markdownIt-Anchor\" href=\"#step-3-aligning-genomes-align\"></a> Step 3 Aligning genomes (align)</h2>\n<p>该步骤将对齐所有已识别的标记，确定最可能的<ruby>域<rt>domain </rt></ruby>并输出串联的 MSA。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk align --identify_dir /tmp/gtdbtk/identify --out_dir /tmp/gtdbtk/align --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<div class=\"note warning\">\n<p>要注意输出，如果一个基因组识别出的标记数量较少，那么在这一步，它将被排除在分析之外。如果出现这种情况，将出现警告。</p>\n</div>\n<p>根据 domain 的不同， <code>ar122</code>  或 <code>bac120</code>  的前缀文件将出现，其中包含用户基因组和 GTDB 基因组的 MSA，或仅包含用户基因组（ <code>gtdbtk.ar122.MSA.fasta</code>  和 <code>gtdbtk.ar122.user_MSA.fasta</code> ）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/align<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">align&#x2F;\ngtdbtk.ar122.user_msa.fasta\nidentify&#x2F;\ngtdbtk.ar122.filtered.tsv\ngtdbtk.log\ngtdbtk.ar122.msa.fasta\ngtdbtk.warnings.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"step-4-基因组分类-classify\"><a class=\"markdownIt-Anchor\" href=\"#step-4-基因组分类-classify\"></a> Step 4 基因组分类 (classify)</h2>\n<p>将用户的基因组放置于参考树上，然后决定其最为可能的分类。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk classify --genome_dir /tmp/gtdbtk/genomes --align_dir /tmp/gtdbtk/align --out_dir /tmp/gtdbtk/classify -x gz --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<p>两个主要的输出文件包括<ruby>总结文件<rt>summary file</rt></ruby>和包含基因组的参考树 ( <code>gtdbtk.ar122.summary.tsv</code>  和 <code>gtdbtk.ar122.classify.tree</code> )。基因组的分类信息呈现于总结文件中。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/classify<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">classify&#x2F;\ngtdbtk.ar122.summary.tsv\ngtdbtk.warnings.log\ngtdbtk.ar122.classify.tree\ngtdbtk.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"错误信息处理\"><a class=\"markdownIt-Anchor\" href=\"#错误信息处理\"></a> 错误信息处理</h2>\n<ul>\n<li>\n<p>OpenBLAS blas_thread_init: pthread_create failed for thread 109 of 128: Resource temporarily unavailable</p>\n<ul>\n<li>解决方案：少调用一些线程就 ok 了。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://ecogenomics.github.io/GTDBTk\">GTBD-Tk Documentation</a></li>\n</ul>\n","more":"<p>GTDB-Tk 是一个软件工具包，用于根据<ruby>基因组数据库分类 GTDB<rt>Genome Database Taxonomy GTDB</rt></ruby> 为细菌和古菌基因组<ruby>分配客观分类学分类<rt>assigning objective taxonomic classifications</rt></ruby>。可以用于宏基因组组装基因组 (MAG)、单菌基因组和单细胞基因组。</p>\n<h1 id=\"安装gtdb-tk\"><a class=\"markdownIt-Anchor\" href=\"#安装gtdb-tk\"></a> 安装 GTDB-Tk</h1>\n<ul>\n<li>\n<p>通过 conda 安装主程序</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># latest version</span>\nconda create -n gtdbtk -c conda-forge -c bioconda gtdbtk\n\n<span class=\"token comment\"># specific version (replace 1.7.0 with the version you wish to install, recommended)</span>\nconda create -n gtdbtk -c conda-forge -c bioconda <span class=\"token assign-left variable\">gtdbtk</span><span class=\"token operator\">=</span><span class=\"token number\">1.7</span>.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>下载 GTDB-Tk 数据库 (~47 G)</p>\n<p>最新版本的数据库为 R202，需要 &gt;=1.5.0 版本的 GTDB-Tk。</p>\n<ul>\n<li>\n<p>自动 (非常慢)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">download-db.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>手动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> \t<span class=\"token comment\"># 找到下载脚本的路径并打开，从中找到数据库的链接</span>\n<span class=\"token function\">which</span> download-db.sh\n  \n<span class=\"token comment\"># 进入数据库默认路径</span>\n<span class=\"token builtin class-name\">cd</span> ~/miniconda3/envs/gtdbtk/share/gtdbtk-1.7.0/db/\n\t  \n   <span class=\"token comment\"># 用wget下载 (非常慢)，推荐在Windows下用其他软件下载，再上传服务器</span>\n<span class=\"token function\">nohup</span> <span class=\"token function\">wget</span> -c https://data.gtdb.ecogenomic.org/releases/release202/202.0/auxillary_files/gtdbtk_r202_data.tar.gz --no-check-certificate <span class=\"token operator\">&amp;</span>\n\n<span class=\"token function\">tar</span> zxvf gtdbtk_r202_data.tar.gz\n\n<span class=\"token function\">mv</span> release202/* ./<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"运行软件\"><a class=\"markdownIt-Anchor\" href=\"#运行软件\"></a> 运行软件</h1>\n<h2 id=\"classify_wf\"><a class=\"markdownIt-Anchor\" href=\"#classify_wf\"></a> classify_wf</h2>\n<div class=\"note default\">\n<p>可以通过 <code>classify_wf</code>  命令完成整个工作流程。</p>\n</div>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk classify_wf --genome_dir <span class=\"token operator\">&lt;</span>my_genomes<span class=\"token operator\">></span> --out_dir <span class=\"token operator\">&lt;</span>output_dir<span class=\"token operator\">></span> --extension fna --cpus <span class=\"token number\">20</span> --force<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<ul>\n<li>\n<p>--genome_dir<br />\ndirectory containing genome files in FASTA format</p>\n</li>\n<li>\n<p>--batchfile<br />\npath to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p>\n</li>\n<li>\n<p>--out_dir<br />\ndirectory to output files</p>\n</li>\n<li>\n<p>-x, --extension<br />\nextension of files to process, gz = gzipped (Default: fna)</p>\n</li>\n<li>\n<p>--min_perc_aa<br />\nexclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (Default: 10)</p>\n</li>\n<li>\n<p>--prefix<br />\nprefix for all output files (Default: gtdbtk)</p>\n</li>\n<li>\n<p>--cpus<br />\nnumber of CPUs to use (Default: 1)</p>\n</li>\n<li>\n<p>--pplacer_cpus<br />\nuse pplacer_cpus during placement (default: cpus)</p>\n</li>\n<li>\n<p>--force<br />\ncontinue processing if an error occurs on a single genome</p>\n</li>\n<li>\n<p>--scratch_dir<br />\nReduce pplacer memory usage by writing to disk (slower).</p>\n</li>\n<li>\n<p>--min_af<br />\nminimum alignment fraction to consider closest genome (Default: 0.65)</p>\n</li>\n<li>\n<p>--tmpdir<br />\nspecify alternative directory for temporary files （Default: /tmp</p>\n</li>\n<li>\n<p>--debug<br />\ncreate intermediate files for debugging purposes</p>\n</li>\n</ul>\n</div></details>\n<div class=\"note default\">\n<p>但下面我们演示分步运行。在处理大型管道时，单独运行这些步骤有时会很有用。</p>\n</div>\n<h2 id=\"step-1-准备输入文件\"><a class=\"markdownIt-Anchor\" href=\"#step-1-准备输入文件\"></a> Step 1 准备输入文件</h2>\n<p>以下两个基因组作为示例文件：* Genome A:  <code>GCF_003947435.1</code>  [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> / <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCF_003947435.1/\">NCBI</a>] * Genome B:  <code>GCA_002011125.1</code>  [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> / <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCA_002011125.1/\">NCBI</a>]。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Create the directory.</span>\n<span class=\"token function\">mkdir</span> -p /tmp/gtdbtk <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> /tmp/gtdbtk\n\n<span class=\"token comment\"># Obtain the genomes.</span>\n<span class=\"token function\">mkdir</span> -p /tmp/gtdbtk/genomes\n<span class=\"token function\">wget</span> -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/003/947/435/GCF_003947435.1_ASM394743v1/GCF_003947435.1_ASM394743v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_a.fna.gz\n\n<span class=\"token function\">wget</span> -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/002/011/125/GCA_002011125.1_ASM201112v1/GCA_002011125.1_ASM201112v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_b.fna.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"step-2-gene-calling-identify\"><a class=\"markdownIt-Anchor\" href=\"#step-2-gene-calling-identify\"></a> Step 2 Gene calling (identify)</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk identify --genome_dir /tmp/gtdbtk/genomes --out_dir /tmp/gtdbtk/identify --extension gz --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<p>获得的基因和<ruby>标记<rt>marker</rt></ruby>信息可以在每个<ruby>基因组反应中间文件目录<rt>genomes respeective intermediate files directory</rt></ruby>下找到，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/identify/identify/intermediate_results/marker_genes/genome_a.fna/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">genome_a.fna_pfam_tophit.tsv\ngenome_a.fna_protein.gff.sha256\ngenome_a.fna_pfam_tophit.tsv.sha256\ngenome_a.fna_tigrfam.out\ngenome_a.fna_pfam.tsv\ngenome_a.fna_tigrfam.out.sha256\ngenome_a.fna_pfam.tsv.sha256\ngenome_a.fna_tigrfam_tophit.tsv\ngenome_a.fna_protein.faa\ngenome_a.fna_tigrfam_tophit.tsv.sha256\ngenome_a.fna_protein.faa.sha256\ngenome_a.fna_tigrfam.tsv\ngenome_a.fna_protein.fna\ngenome_a.fna_tigrfam.tsv.sha256\ngenome_a.fna_protein.fna.sha256\nprodigal_translation_table.tsv\ngenome_a.fna_protein.gff\nprodigal_translation_table.tsv.sha256<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"note default\">\n<p>大部分情况下只需要读取摘要文件，其中详细说明了从 archaeal 122 或 bacterial 120<ruby>标记集<rt>marker set</rt></ruby>识别的标记。</p>\n</div>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /tmp/gtdbtk/identify/gtdbtk.ar122.markers_summary.tsv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">name    number_unique_genes     number_multiple_genes   number_multiple_unique_genes    number_missing_genes    list_unique_genes       list_multiple_genes     list_multiple_unique_genes      list_missing_genes\ngenome_a.fna    109     3       0       10      PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,PF13685.1,TIGR00021,TIGR00037,TIGR00042,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00549,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01213,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02390,TIGR02651,TIGR03626,TIGR03627,TIGR03628,TIGR03636,TIGR03653,TIGR03665,TIGR03671,TIGR03672,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684    PF01496.14,TIGR00458,TIGR00658          PF01866.12,TIGR00064,TIGR00373,TIGR00522,TIGR02338,TIGR02389,TIGR03629,TIGR03670,TIGR03673,TIGR03722\ngenome_b.fna    118     2       0       2       PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01866.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,TIGR00021,TIGR00037,TIGR00042,TIGR00064,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00373,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00458,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00522,TIGR00549,TIGR00658,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02338,TIGR02389,TIGR02390,TIGR02651,TIGR03626,TIGR03628,TIGR03629,TIGR03636,TIGR03653,TIGR03665,TIGR03670,TIGR03671,TIGR03672,TIGR03673,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684,TIGR03722 PF01496.14,PF13685.1            TIGR01213,TIGR03627<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"step-3-aligning-genomes-align\"><a class=\"markdownIt-Anchor\" href=\"#step-3-aligning-genomes-align\"></a> Step 3 Aligning genomes (align)</h2>\n<p>该步骤将对齐所有已识别的标记，确定最可能的<ruby>域<rt>domain </rt></ruby>并输出串联的 MSA。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk align --identify_dir /tmp/gtdbtk/identify --out_dir /tmp/gtdbtk/align --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<div class=\"note warning\">\n<p>要注意输出，如果一个基因组识别出的标记数量较少，那么在这一步，它将被排除在分析之外。如果出现这种情况，将出现警告。</p>\n</div>\n<p>根据 domain 的不同， <code>ar122</code>  或 <code>bac120</code>  的前缀文件将出现，其中包含用户基因组和 GTDB 基因组的 MSA，或仅包含用户基因组（ <code>gtdbtk.ar122.MSA.fasta</code>  和 <code>gtdbtk.ar122.user_MSA.fasta</code> ）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/align<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">align&#x2F;\ngtdbtk.ar122.user_msa.fasta\nidentify&#x2F;\ngtdbtk.ar122.filtered.tsv\ngtdbtk.log\ngtdbtk.ar122.msa.fasta\ngtdbtk.warnings.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"step-4-基因组分类-classify\"><a class=\"markdownIt-Anchor\" href=\"#step-4-基因组分类-classify\"></a> Step 4 基因组分类 (classify)</h2>\n<p>将用户的基因组放置于参考树上，然后决定其最为可能的分类。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk classify --genome_dir /tmp/gtdbtk/genomes --align_dir /tmp/gtdbtk/align --out_dir /tmp/gtdbtk/classify -x gz --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<p>两个主要的输出文件包括<ruby>总结文件<rt>summary file</rt></ruby>和包含基因组的参考树 ( <code>gtdbtk.ar122.summary.tsv</code>  和 <code>gtdbtk.ar122.classify.tree</code> )。基因组的分类信息呈现于总结文件中。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/classify<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">classify&#x2F;\ngtdbtk.ar122.summary.tsv\ngtdbtk.warnings.log\ngtdbtk.ar122.classify.tree\ngtdbtk.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"错误信息处理\"><a class=\"markdownIt-Anchor\" href=\"#错误信息处理\"></a> 错误信息处理</h2>\n<ul>\n<li>\n<p>OpenBLAS blas_thread_init: pthread_create failed for thread 109 of 128: Resource temporarily unavailable</p>\n<ul>\n<li>解决方案：少调用一些线程就 ok 了。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://ecogenomics.github.io/GTDBTk\">GTBD-Tk Documentation</a></li>\n</ul>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"}]}