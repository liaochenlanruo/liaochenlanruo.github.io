{"title":"使用DeepARG预测抗生素抗性基因ARGs","slug":"使用DeepARG预测抗生素抗性基因ARGs","date":"2022-01-07T11:50:33.000Z","updated":"2022-01-09T04:30:54.969Z","comments":true,"path":"api/articles/使用DeepARG预测抗生素抗性基因ARGs.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 介绍</h1>\n<p>DeepARG 是一种机器学习解决方案，它使用深度学习来表征和注释宏基因组中的抗生素抗性基因。它由两种输入模型组成：短序列 Reads 和 gene-like 序列。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Automatic annotation of highly homologous ARGs\" /></p>\n<h1 id=\"安装软件\"><a class=\"markdownIt-Anchor\" href=\"#安装软件\"></a> 安装软件</h1>\n<ul>\n<li>\n<p>通过 <code>conda</code>  安装</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建环境</span>\nconda create -n deeparg_env <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">2.7</span>.18\nconda activate deeparg_env\n\n<span class=\"token comment\"># 安装diamond</span>\nconda <span class=\"token function\">install</span> -c bioconda <span class=\"token assign-left variable\">diamond</span><span class=\"token operator\">==</span><span class=\"token number\">0.9</span>.24\n\n<span class=\"token comment\"># 安装其他依赖</span>\nconda <span class=\"token function\">install</span> trimmomatic vsearch bedtools bowtie2 samtools\n\n<span class=\"token comment\"># 安装DeepARG</span>\npip <span class=\"token function\">install</span> <span class=\"token assign-left variable\">deeparg</span><span class=\"token operator\">==</span><span class=\"token number\">1.0</span>.2\n\n<span class=\"token comment\"># 下载数据库等， -o指定下载路径</span>\ndeeparg download_data -o tools/deeparg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>通过其他方法安装</p>\n<p>参考<a href=\"https://bitbucket.org/gusphdproj/deeparg-ss/src/master/\">官方文档</a>进行。</p>\n</li>\n</ul>\n<h1 id=\"使用软件\"><a class=\"markdownIt-Anchor\" href=\"#使用软件\"></a> 使用软件</h1>\n<h2 id=\"预测reads中的args\"><a class=\"markdownIt-Anchor\" href=\"#预测reads中的args\"></a> 预测 Reads 中的 ARGs</h2>\n<h3 id=\"输入文件\"><a class=\"markdownIt-Anchor\" href=\"#输入文件\"></a> 输入文件</h3>\n<p>双端 Reads。</p>\n<h3 id=\"命令\"><a class=\"markdownIt-Anchor\" href=\"#命令\"></a> 命令</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deeparg short_reads_pipeline --forward_pe_file Reads/LD201221-0003_S20210104-0015_F01_clean.R1.fq.gz --reverse_pe_file Reads/LD201221-0003_S20210104-0015_F01_clean.R2.fq.gz --output_file F01.deeparg -d ~/tools/deeparg/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<p><code>-h, --help</code>             show this help message and exit<br />\n <code>--forward_pe_file</code>  <strong>FORWARD_PE_FILE</strong>:           forward mate from paired end library<br />\n <code>--reverse_pe_file</code>  <strong>REVERSE_PE_FILE</strong>:             reverse mate from paired end library<br />\n <code>--output_file</code>  <strong>OUTPUT_FILE</strong>:           save results to this file prefix<br />\n <code>-d</code>  <strong>DEEPARG_DATA_PATH</strong>:               Path where data was downloaded [see deeparg download-data --help for details]<br />\n <code>--deeparg_identity</code>  <strong>DEEPARG_IDENTITY</strong>:      minimum identity for ARG alignments [default 80]<br />\n <code>--deeparg_probability</code>  <strong>DEEPARG_PROBABILITY</strong>:      minimum probability for considering a reads as ARG-like [default 0.8]<br />\n <code>--deeparg_evalue</code>  <strong>DEEPARG_EVALUE</strong>:     minimum e-value for ARG alignments [default 1e-10]<br />\n <code>--gene_coverage</code>  <strong>GENE_COVERAGE</strong>:        minimum coverage required for considering a full gene in percentage. This parameter looks at the full gene and all hits that align to the gene. If the overlap of all hits is below the threshold the gene is discarded. Use with caution [default 1]</p>\n</div></details>\n<p><strong>批量运行</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl Run_deepARG_reads.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<div class=\"note info\">\n<p>脚本获取方式见文末</p>\n</div>\n<h2 id=\"预测fasta序列中的args\"><a class=\"markdownIt-Anchor\" href=\"#预测fasta序列中的args\"></a> 预测 FASTA 序列中的 ARGs</h2>\n<h3 id=\"输入文件-2\"><a class=\"markdownIt-Anchor\" href=\"#输入文件-2\"></a> 输入文件</h3>\n<p>可以是 <code>核苷酸序列</code> 或者是 <code>氨基酸序列</code> 。</p>\n<h3 id=\"命令-2\"><a class=\"markdownIt-Anchor\" href=\"#命令-2\"></a> 命令</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 1) Annotate gene-like sequences when the input is a nucleotide FASTA file:</span>\n    deeparg predict --model LS --type nucl --input /path/file.fasta --out /path/to/out/file.out\n\n<span class=\"token comment\"># 2) Annotate gene-like sequences when the input is an amino acid FASTA file:</span>\n    deeparg predict --model LS --type prot --input /path/file.fasta --out /path/to/out/file.out\n\n<span class=\"token comment\"># 3) Annotate short sequence reads when the input is a nucleotide FASTA file:</span>\n    deeparg predict --model SS --type nucl --input /path/file.fasta --out /path/to/out/file.out\n\n<span class=\"token comment\"># 4) Annotate short sequence reads when the input is a protein FASTA file (unusual case):</span>\n    deeparg predict --model SS --type prot --input /path/file.fasta --out /path/to/out/file.out<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<p>usage: deeparg predict<br />\n <code>-h, --help</code>             show this help message and exit<br />\n <code>--model</code>  <strong>MODEL</strong>:         Select model to use (short sequences for reads | long sequences for genes) SS|LS [No default]<br />\n <code>-i, --input-file</code>  <strong>INPUT_FILE</strong>:     Input file (Fasta input file)<br />\n <code>-o, --output-file</code>  <strong>OUTPUT_FILE</strong>:    Output file where to store results<br />\n <code>-d, --data-path</code>  <strong>DATA_PATH</strong>:       Path where data was downloaded [see deeparg download-data --help for details]<br />\n <code>--type</code>  <strong>TYPE</strong>:       Molecular data type prot/nucl [Default: nucl]<br />\n <code>--min-prob</code>  <strong>MIN_PROB</strong>:   Minimum probability cutoff [Default: 0.8]<br />\n <code>--arg-alignment-identity</code>  <strong>ARG_ALIGNMENT_IDENTITY</strong>:          Identity cutoff for sequence alignment [Default: 50]<br />\n <code>--arg-alignment-evalue</code>  <strong>ARG_ALIGNMENT_EVALUE</strong>:                  Evalue cutoff [Default: 1e-10]<br />\n <code>--arg-alignment-overlap</code>  <strong>ARG_ALIGNMENT_OVERLAP</strong>:                 Alignment read overlap [Default: 0.8]<br />\n <code>--arg-num-alignments-per-entry</code>  <strong>ARG_NUM_ALIGNMENTS_PER_ENTRY</strong>:    Diamond, minimum number of alignments per entry [Default: 1000]<br />\n <code>--model-version</code>  <strong>MODEL_VERSION</strong>:     Model deepARG version [Default: v2]</p>\n</div></details>\n<h2 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\"></a> 输出</h2>\n<ul>\n<li>\n<p>有官方说明的两个比对的结果文件</p>\n<ul>\n<li>\n<p><code>.ARG</code>  包含 probability &gt;= --prob (0.8 default) 的序列</p>\n</li>\n<li>\n<p><code>.potential.ARG</code>  包含 probability &lt;--prob (0.8 default) 的序列。 该文件中可能仍含有 ARG-like 序列，想用的话需要人工检查其序列。</p>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">* ARG_NAME\n* QUERY_START\n* QUERY_END\n* QUERY_ID\n* PREDICTED_ARG_CLASS\n* BEST_HIT_FROM_DATABASE\n* PREDICTION_PROBABILITY\n* ALIGNMENT_BESTHIT_IDENTITY (%)\n* ALIGNMENT_BESTHIT_LENGTH\n* ALIGNMENT_BESTHIT_BITSCORE\n* ALIGNMENT_BESTHIT_EVALUE\n* COUNTS<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>ARG.merged.quant.type</p>\n  <pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">#ARG-category\tReadCount\t16s-NormalizedReadCount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>.ARG.merged.quant.subtype</p>\n  <pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">#ARG-group\tReadCount\t16s-NormalizedReadCount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<div class=\"note info\">\n<p>上面俩文件官方未给出说明，按照我的理解，是将 <code>.ARG</code>  文件进行了进一步处理，生成了各 ARG 大类和小类的绝对数量（第二列）和相对含量（第三列）。</p>\n</div>\n</li>\n<li>\n<p>其他文件</p>\n<p>主要是一些中间过程文件，占用空间相当大，可以手动删除。</p>\n<h1 id=\"后续个性化分析\"><a class=\"markdownIt-Anchor\" href=\"#后续个性化分析\"></a> 后续个性化分析</h1>\n<h2 id=\"合并多个样本的arg大类形成相对丰度矩阵\"><a class=\"markdownIt-Anchor\" href=\"#合并多个样本的arg大类形成相对丰度矩阵\"></a> 合并多个样本的 ARG 大类形成相对丰度矩阵</h2>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\">perl co_type<span class=\"token operator\">.</span>pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<div class=\"note info\">\n<p>脚本获取方式见文末</p>\n</div>\n<h2 id=\"绘制气泡图\"><a class=\"markdownIt-Anchor\" href=\"#绘制气泡图\"></a> 绘制气泡图</h2>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\"><span class=\"token comment\">#!/usr/bin/env Rscript</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: 2022.01.09</span>\n<span class=\"token comment\"># Name: Bubble_plot.R</span>\nsetwd<span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#设置工作目录</span>\n\n<span class=\"token comment\">#pdf(file=\"FunctionsBubbleChart.pdf\", width=14, height=11)</span>\n\n<span class=\"token comment\"># 读取文件 sep 根据文件格式确定</span>\ndata <span class=\"token operator\">&lt;-</span> read.table<span class=\"token punctuation\">(</span><span class=\"token string\">\"All.ARGs.txt\"</span><span class=\"token punctuation\">,</span>header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>ggplot2<span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>reshape<span class=\"token punctuation\">)</span>\n\ndata_melt <span class=\"token operator\">&lt;-</span> melt<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nnames<span class=\"token punctuation\">(</span>data_melt<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token string\">\"Sample\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ARGs\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Abundances\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">##data_melt$Sites=substring(data_melt$Samples,1,3)# 根据第二列的样本名称提取站位信息，用于后续着色</span>\n<span class=\"token comment\">##data_melt &lt;-as.data.frame(data_melt)</span>\n\n<span class=\"token comment\"># 做主图</span>\nbubble <span class=\"token operator\">&lt;-</span> ggplot<span class=\"token punctuation\">(</span>data_melt<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">(</span>data_melt<span class=\"token operator\">$</span>Abundances<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> aes<span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> Sample<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> ARGs<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> Abundances<span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> Sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> geom_point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 字体修饰</span>\n<span class=\"token comment\">##windowsFonts(myFont = windowsFont(\"Times New Roman\"))</span>\n\n<span class=\"token comment\"># 修改细节 — 图注，点大小，点shape</span>\nbubble_style <span class=\"token operator\">&lt;-</span> bubble <span class=\"token operator\">+</span> theme_classic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>\n  labs<span class=\"token punctuation\">(</span>\n\tx <span class=\"token operator\">=</span> <span class=\"token string\">\"Samples\"</span><span class=\"token punctuation\">,</span>\n\ty <span class=\"token operator\">=</span> <span class=\"token string\">\"ARGs\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">#color=\"Sites\", # 颜色图注名</span>\n\tsize<span class=\"token operator\">=</span><span class=\"token string\">\"Abundances\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>    <span class=\"token comment\"># 大小图注名</span>\n\tscale_size<span class=\"token punctuation\">(</span>range <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  <span class=\"token comment\">#等比修改圆圈大小</span>\n\ttheme<span class=\"token punctuation\">(</span>plot.title<span class=\"token operator\">=</span>element_text<span class=\"token punctuation\">(</span>family<span class=\"token operator\">=</span><span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tcolor<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>face<span class=\"token operator\">=</span><span class=\"token string\">\"italic\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\thjust<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>lineheight<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tplot.subtitle <span class=\"token operator\">=</span> element_text<span class=\"token punctuation\">(</span>hjust <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> \n\ttheme<span class=\"token punctuation\">(</span>axis.text.x <span class=\"token operator\">=</span> element_text<span class=\"token punctuation\">(</span>angle <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> hjust <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#dev.off()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://bench.cs.vt.edu/deeparg\">DeepARG 官网</a></li>\n<li><a href=\"https://bitbucket.org/gusphdproj/deeparg-ss/src/master/\">DeepARG Repository</a></li>\n</ul>\n<h1 id=\"代码获取\"><a class=\"markdownIt-Anchor\" href=\"#代码获取\"></a> 代码获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “92eb” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 介绍</h1>\n<p>DeepARG 是一种机器学习解决方案，它使用深度学习来表征和注释宏基因组中的抗生素抗性基因。它由两种输入模型组成：短序列 Reads 和 gene-like 序列。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png\" alt=\"Automatic annotation of highly homologous ARGs\" /></p>\n<h1 id=\"安装软件\"><a class=\"markdownIt-Anchor\" href=\"#安装软件\"></a> 安装软件</h1>\n<ul>\n<li>\n<p>通过 <code>conda</code>  安装</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建环境</span>\nconda create -n deeparg_env <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">2.7</span>.18\nconda activate deeparg_env\n\n<span class=\"token comment\"># 安装diamond</span>\nconda <span class=\"token function\">install</span> -c bioconda <span class=\"token assign-left variable\">diamond</span><span class=\"token operator\">==</span><span class=\"token number\">0.9</span>.24\n\n<span class=\"token comment\"># 安装其他依赖</span>\nconda <span class=\"token function\">install</span> trimmomatic vsearch bedtools bowtie2 samtools\n\n<span class=\"token comment\"># 安装DeepARG</span>\npip <span class=\"token function\">install</span> <span class=\"token assign-left variable\">deeparg</span><span class=\"token operator\">==</span><span class=\"token number\">1.0</span>.2\n\n<span class=\"token comment\"># 下载数据库等， -o指定下载路径</span>\ndeeparg download_data -o tools/deeparg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>通过其他方法安装</p>\n<p>参考<a href=\"https://bitbucket.org/gusphdproj/deeparg-ss/src/master/\">官方文档</a>进行。</p>\n</li>\n</ul>\n<h1 id=\"使用软件\"><a class=\"markdownIt-Anchor\" href=\"#使用软件\"></a> 使用软件</h1>\n<h2 id=\"预测reads中的args\"><a class=\"markdownIt-Anchor\" href=\"#预测reads中的args\"></a> 预测 Reads 中的 ARGs</h2>\n<h3 id=\"输入文件\"><a class=\"markdownIt-Anchor\" href=\"#输入文件\"></a> 输入文件</h3>\n<p>双端 Reads。</p>\n<h3 id=\"命令\"><a class=\"markdownIt-Anchor\" href=\"#命令\"></a> 命令</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">deeparg short_reads_pipeline --forward_pe_file Reads/LD201221-0003_S20210104-0015_F01_clean.R1.fq.gz --reverse_pe_file Reads/LD201221-0003_S20210104-0015_F01_clean.R2.fq.gz --output_file F01.deeparg -d ~/tools/deeparg/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<p><code>-h, --help</code>             show this help message and exit<br />\n <code>--forward_pe_file</code>  <strong>FORWARD_PE_FILE</strong>:           forward mate from paired end library<br />\n <code>--reverse_pe_file</code>  <strong>REVERSE_PE_FILE</strong>:             reverse mate from paired end library<br />\n <code>--output_file</code>  <strong>OUTPUT_FILE</strong>:           save results to this file prefix<br />\n <code>-d</code>  <strong>DEEPARG_DATA_PATH</strong>:               Path where data was downloaded [see deeparg download-data --help for details]<br />\n <code>--deeparg_identity</code>  <strong>DEEPARG_IDENTITY</strong>:      minimum identity for ARG alignments [default 80]<br />\n <code>--deeparg_probability</code>  <strong>DEEPARG_PROBABILITY</strong>:      minimum probability for considering a reads as ARG-like [default 0.8]<br />\n <code>--deeparg_evalue</code>  <strong>DEEPARG_EVALUE</strong>:     minimum e-value for ARG alignments [default 1e-10]<br />\n <code>--gene_coverage</code>  <strong>GENE_COVERAGE</strong>:        minimum coverage required for considering a full gene in percentage. This parameter looks at the full gene and all hits that align to the gene. If the overlap of all hits is below the threshold the gene is discarded. Use with caution [default 1]</p>\n</div></details>\n<p><strong>批量运行</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl Run_deepARG_reads.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<div class=\"note info\">\n<p>脚本获取方式见文末</p>\n</div>\n<h2 id=\"预测fasta序列中的args\"><a class=\"markdownIt-Anchor\" href=\"#预测fasta序列中的args\"></a> 预测 FASTA 序列中的 ARGs</h2>\n<h3 id=\"输入文件-2\"><a class=\"markdownIt-Anchor\" href=\"#输入文件-2\"></a> 输入文件</h3>\n<p>可以是 <code>核苷酸序列</code> 或者是 <code>氨基酸序列</code> 。</p>\n<h3 id=\"命令-2\"><a class=\"markdownIt-Anchor\" href=\"#命令-2\"></a> 命令</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 1) Annotate gene-like sequences when the input is a nucleotide FASTA file:</span>\n    deeparg predict --model LS --type nucl --input /path/file.fasta --out /path/to/out/file.out\n\n<span class=\"token comment\"># 2) Annotate gene-like sequences when the input is an amino acid FASTA file:</span>\n    deeparg predict --model LS --type prot --input /path/file.fasta --out /path/to/out/file.out\n\n<span class=\"token comment\"># 3) Annotate short sequence reads when the input is a nucleotide FASTA file:</span>\n    deeparg predict --model SS --type nucl --input /path/file.fasta --out /path/to/out/file.out\n\n<span class=\"token comment\"># 4) Annotate short sequence reads when the input is a protein FASTA file (unusual case):</span>\n    deeparg predict --model SS --type prot --input /path/file.fasta --out /path/to/out/file.out<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<p>usage: deeparg predict<br />\n <code>-h, --help</code>             show this help message and exit<br />\n <code>--model</code>  <strong>MODEL</strong>:         Select model to use (short sequences for reads | long sequences for genes) SS|LS [No default]<br />\n <code>-i, --input-file</code>  <strong>INPUT_FILE</strong>:     Input file (Fasta input file)<br />\n <code>-o, --output-file</code>  <strong>OUTPUT_FILE</strong>:    Output file where to store results<br />\n <code>-d, --data-path</code>  <strong>DATA_PATH</strong>:       Path where data was downloaded [see deeparg download-data --help for details]<br />\n <code>--type</code>  <strong>TYPE</strong>:       Molecular data type prot/nucl [Default: nucl]<br />\n <code>--min-prob</code>  <strong>MIN_PROB</strong>:   Minimum probability cutoff [Default: 0.8]<br />\n <code>--arg-alignment-identity</code>  <strong>ARG_ALIGNMENT_IDENTITY</strong>:          Identity cutoff for sequence alignment [Default: 50]<br />\n <code>--arg-alignment-evalue</code>  <strong>ARG_ALIGNMENT_EVALUE</strong>:                  Evalue cutoff [Default: 1e-10]<br />\n <code>--arg-alignment-overlap</code>  <strong>ARG_ALIGNMENT_OVERLAP</strong>:                 Alignment read overlap [Default: 0.8]<br />\n <code>--arg-num-alignments-per-entry</code>  <strong>ARG_NUM_ALIGNMENTS_PER_ENTRY</strong>:    Diamond, minimum number of alignments per entry [Default: 1000]<br />\n <code>--model-version</code>  <strong>MODEL_VERSION</strong>:     Model deepARG version [Default: v2]</p>\n</div></details>\n<h2 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\"></a> 输出</h2>\n<ul>\n<li>\n<p>有官方说明的两个比对的结果文件</p>\n<ul>\n<li>\n<p><code>.ARG</code>  包含 probability &gt;= --prob (0.8 default) 的序列</p>\n</li>\n<li>\n<p><code>.potential.ARG</code>  包含 probability &lt;--prob (0.8 default) 的序列。 该文件中可能仍含有 ARG-like 序列，想用的话需要人工检查其序列。</p>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">* ARG_NAME\n* QUERY_START\n* QUERY_END\n* QUERY_ID\n* PREDICTED_ARG_CLASS\n* BEST_HIT_FROM_DATABASE\n* PREDICTION_PROBABILITY\n* ALIGNMENT_BESTHIT_IDENTITY (%)\n* ALIGNMENT_BESTHIT_LENGTH\n* ALIGNMENT_BESTHIT_BITSCORE\n* ALIGNMENT_BESTHIT_EVALUE\n* COUNTS<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>ARG.merged.quant.type</p>\n  <pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">#ARG-category\tReadCount\t16s-NormalizedReadCount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>.ARG.merged.quant.subtype</p>\n  <pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">#ARG-group\tReadCount\t16s-NormalizedReadCount<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<div class=\"note info\">\n<p>上面俩文件官方未给出说明，按照我的理解，是将 <code>.ARG</code>  文件进行了进一步处理，生成了各 ARG 大类和小类的绝对数量（第二列）和相对含量（第三列）。</p>\n</div>\n</li>\n<li>\n<p>其他文件</p>\n<p>主要是一些中间过程文件，占用空间相当大，可以手动删除。</p>\n<h1 id=\"后续个性化分析\"><a class=\"markdownIt-Anchor\" href=\"#后续个性化分析\"></a> 后续个性化分析</h1>\n<h2 id=\"合并多个样本的arg大类形成相对丰度矩阵\"><a class=\"markdownIt-Anchor\" href=\"#合并多个样本的arg大类形成相对丰度矩阵\"></a> 合并多个样本的 ARG 大类形成相对丰度矩阵</h2>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\">perl co_type<span class=\"token operator\">.</span>pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<div class=\"note info\">\n<p>脚本获取方式见文末</p>\n</div>\n<h2 id=\"绘制气泡图\"><a class=\"markdownIt-Anchor\" href=\"#绘制气泡图\"></a> 绘制气泡图</h2>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\"><span class=\"token comment\">#!/usr/bin/env Rscript</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: 2022.01.09</span>\n<span class=\"token comment\"># Name: Bubble_plot.R</span>\nsetwd<span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#设置工作目录</span>\n\n<span class=\"token comment\">#pdf(file=\"FunctionsBubbleChart.pdf\", width=14, height=11)</span>\n\n<span class=\"token comment\"># 读取文件 sep 根据文件格式确定</span>\ndata <span class=\"token operator\">&lt;-</span> read.table<span class=\"token punctuation\">(</span><span class=\"token string\">\"All.ARGs.txt\"</span><span class=\"token punctuation\">,</span>header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>ggplot2<span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>reshape<span class=\"token punctuation\">)</span>\n\ndata_melt <span class=\"token operator\">&lt;-</span> melt<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nnames<span class=\"token punctuation\">(</span>data_melt<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token string\">\"Sample\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ARGs\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Abundances\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">##data_melt$Sites=substring(data_melt$Samples,1,3)# 根据第二列的样本名称提取站位信息，用于后续着色</span>\n<span class=\"token comment\">##data_melt &lt;-as.data.frame(data_melt)</span>\n\n<span class=\"token comment\"># 做主图</span>\nbubble <span class=\"token operator\">&lt;-</span> ggplot<span class=\"token punctuation\">(</span>data_melt<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">(</span>data_melt<span class=\"token operator\">$</span>Abundances<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> aes<span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> Sample<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> ARGs<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> Abundances<span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> Sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> geom_point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 字体修饰</span>\n<span class=\"token comment\">##windowsFonts(myFont = windowsFont(\"Times New Roman\"))</span>\n\n<span class=\"token comment\"># 修改细节 — 图注，点大小，点shape</span>\nbubble_style <span class=\"token operator\">&lt;-</span> bubble <span class=\"token operator\">+</span> theme_classic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>\n  labs<span class=\"token punctuation\">(</span>\n\tx <span class=\"token operator\">=</span> <span class=\"token string\">\"Samples\"</span><span class=\"token punctuation\">,</span>\n\ty <span class=\"token operator\">=</span> <span class=\"token string\">\"ARGs\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\">#color=\"Sites\", # 颜色图注名</span>\n\tsize<span class=\"token operator\">=</span><span class=\"token string\">\"Abundances\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>    <span class=\"token comment\"># 大小图注名</span>\n\tscale_size<span class=\"token punctuation\">(</span>range <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  <span class=\"token comment\">#等比修改圆圈大小</span>\n\ttheme<span class=\"token punctuation\">(</span>plot.title<span class=\"token operator\">=</span>element_text<span class=\"token punctuation\">(</span>family<span class=\"token operator\">=</span><span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tcolor<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>face<span class=\"token operator\">=</span><span class=\"token string\">\"italic\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\thjust<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>lineheight<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tplot.subtitle <span class=\"token operator\">=</span> element_text<span class=\"token punctuation\">(</span>hjust <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> \n\ttheme<span class=\"token punctuation\">(</span>axis.text.x <span class=\"token operator\">=</span> element_text<span class=\"token punctuation\">(</span>angle <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> hjust <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#dev.off()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://bench.cs.vt.edu/deeparg\">DeepARG 官网</a></li>\n<li><a href=\"https://bitbucket.org/gusphdproj/deeparg-ss/src/master/\">DeepARG Repository</a></li>\n</ul>\n<h1 id=\"代码获取\"><a class=\"markdownIt-Anchor\" href=\"#代码获取\"></a> 代码获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “92eb” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"ARGs","path":"api/tags/ARGs.json"}]}