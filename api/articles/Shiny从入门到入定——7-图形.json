{"title":"Shiny从入门到入定——7-图形","slug":"Shiny从入门到入定——7-图形","date":"2024-01-26T14:09:43.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Shiny从入门到入定——7-图形.json","excerpt":null,"covers":["https://d33wubrfki0l68.cloudfront.net/8e3506131c2af7ac0ddd07569f277dd03e05ff0e/f836c/images/action-graphics/click.png","https://d33wubrfki0l68.cloudfront.net/72c746e68848220485ba12c028382dd0de8a3a00/fc713/images/action-graphics/brushedpoints.png","https://d33wubrfki0l68.cloudfront.net/28b14f04bca5f6a00be49c50bdc09220ff421283/059c4/images/action-graphics/modifying-size-1.png","https://d33wubrfki0l68.cloudfront.net/da63b234ad81bc5e1e592a904a1eaed0f4ee092d/794de/images/action-graphics/persistent-1.png","https://d33wubrfki0l68.cloudfront.net/187b93086b15e4f5f6afe04cb609019d1a37b424/537a6/demos/action-graphics/resize-narrow.png","https://d33wubrfki0l68.cloudfront.net/46c07091eaf6a8cd82a342e6fc55692e54740b7c/d0566/demos/action-graphics/resize-wide.png","https://d33wubrfki0l68.cloudfront.net/70de2ab74b8c9f3984ea503ef40af3930324c62a/43790/demos/action-graphics/puppies-corgi.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"7-图形\"><a href=\"#7-图形\" class=\"headerlink\" title=\"7 图形\"></a>7 图形</h1><ul>\n<li>第7章向您展示了如何向绘图添加直接交互以及如何显示以其他方式生成的图像。</li>\n</ul>\n<p>我们在第 2 章中简要讨论了 <a href=\"\">renderPlot()</a> ;它是在应用程序中显示图形的强大工具。本章将向您展示如何充分利用它来创建交互式绘图，即响应鼠标事件的绘图。您还将学习一些其他有用的技术，包括制作具有动态宽度和高度的绘图以及使用 <a href=\"https://rdrr.io/pkg/shiny/man/renderImage.html\">renderImage()</a> 显示图像。</p>\n<p>在本章中，我们将需要 ggplot2 和 Shiny，因为我们将其用于大多数图形的绘制。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-1-交互性\"><a href=\"#7-1-交互性\" class=\"headerlink\" title=\"7.1 交互性\"></a>7.1 交互性</h2><p><a href=\"https://rdrr.io/pkg/shiny/man/plotOutput.html\">plotOutput()</a> 最酷的一点是，它不仅可以作为显示绘图的输出，还可以作为响应指针事件的输入。这允许您创建交互式图形，用户直接与绘图上的数据进行交互。交互式图形是一种强大的工具，具有广泛的应用范围。我没有空间向你展示所有的可能性，所以在这里我将重点介绍基础知识，然后向你指出资源以了解更多信息。</p>\n<h3 id=\"7-1-1-基础知识\"><a href=\"#7-1-1-基础知识\" class=\"headerlink\" title=\"7.1.1 基础知识\"></a>7.1.1 基础知识</h3><p>绘图可以响应四种不同的鼠标事件： <code>click</code> 、 <code>dblclick</code> （双击）、 <code>hover</code> （当鼠标在同一位置停留一段时间时）和 <code>brush</code> （矩形选择工具）。要将这些事件转换为Shiny的输入，您需要为相应的 <code>plotOutput()</code> 参数提供一个字符串，例如 <code>plotOutput(&quot;plot&quot;, click = &quot;plot_click&quot;)</code>。这将创建一个 <code>input$plot_click</code> ，您可以使用它来处理鼠标在绘图上的单击。</p>\n<p>下面是一个非常简单的处理鼠标单击的示例。我们注册 <code>plot_click</code> 输入，然后使用鼠标单击的坐标更新输出。图 7.1 显示了结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> click <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_click&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  verbatimTextOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;info&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    plot<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>wt<span class=\"punctuation\">,</span> mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  output<span class=\"operator\">$</span>info <span class=\"operator\">&lt;-</span> renderPrint<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">)</span></span><br><span class=\"line\">    x <span class=\"operator\">&lt;-</span> <span class=\"built_in\">round</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"operator\">$</span>x<span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    y <span class=\"operator\">&lt;-</span> <span class=\"built_in\">round</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"operator\">$</span>y<span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    cat<span class=\"punctuation\">(</span><span class=\"string\">&quot;[&quot;</span><span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> <span class=\"string\">&quot;, &quot;</span><span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> <span class=\"string\">&quot;]&quot;</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/8e3506131c2af7ac0ddd07569f277dd03e05ff0e/f836c/images/action-graphics/click.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/8e3506131c2af7ac0ddd07569f277dd03e05ff0e/f836c/images/action-graphics/click.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图 7.1 单击左上角的点可更新打印的坐标 查看演示实例 https://hadley.shinyapps.io/ms-click 。\"></p>\n<p>（请注意使用 <a href=\"https://rdrr.io/pkg/shiny/man/req.html\">req()</a> ，以确保应用在第一次单击之前不会执行任何操作，且坐标以<code>wt</code>和<code>mpg</code>变量表示。</p>\n<p>以下各节更详细地介绍了这些事件。我们将从点击事件开始，然后简要讨论密切相关的 <code>dblclick</code> 和 <code>hover</code> 。然后，您将了解 <code>brush</code> 事件，该事件提供了一个矩形<code>brush</code>，由其四个边（ <code>xmin</code> ， <code>xmax </code>， <code>ymin </code>和 <code>ymax </code>定义。然后，我将举几个示例，使用动作结果更新绘图，然后讨论 Shiny 中交互式图形的一些局限性。</p>\n<h3 id=\"7-1-2-点击\"><a href=\"#7-1-2-点击\" class=\"headerlink\" title=\"7.1.2 点击\"></a>7.1.2 点击</h3><p>点事件返回一个相对丰富的列表，其中包含大量信息。最重要的组件是 <code>x</code> 和 <code>y</code> ，它们在数据坐标中给出事件的位置。但我不打算谈论这种数据结构，因为你只在相对罕见的情况下需要（如果你确实想要细节，请在 Shiny 图库中使用这个应用程序）。相反，您将使用 <a href=\"https://rdrr.io/pkg/shiny/man/brushedPoints.html\">nearPoints()</a> 帮助程序，该帮助程序返回一个数据框，其中包含单击附近的行，并处理一堆繁琐的细节。</p>\n<p>下面是 <code>nearPoints()</code> 运行的简单示例，其中显示了有关事件附近点的数据表。图 7.2 显示了该应用的屏幕截图。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> click <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_click&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    plot<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>wt<span class=\"punctuation\">,</span> mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    nearPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">,</span> xvar <span class=\"operator\">=</span> <span class=\"string\">&quot;wt&quot;</span><span class=\"punctuation\">,</span> yvar <span class=\"operator\">=</span> <span class=\"string\">&quot;mpg&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">````</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">!</span><span class=\"punctuation\">[</span>图 <span class=\"number\">7.2</span> nearPoints<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> 将绘图坐标转换为数据行，从而可以轻松显示您单击的点的基础数据 查看实例 https<span class=\"operator\">:</span><span class=\"operator\">/</span><span class=\"operator\">/</span>hadley.shinyapps.io<span class=\"operator\">/</span>ms<span class=\"operator\">-</span>nearPoints 。<span class=\"punctuation\">]</span><span class=\"punctuation\">(</span>https<span class=\"operator\">:</span><span class=\"operator\">/</span><span class=\"operator\">/</span>d33wubrfki0l68.cloudfront.net<span class=\"operator\">/</span><span class=\"number\">7</span>c89122f2822dac1dbe5640e4aab942bebb46ef9<span class=\"operator\">/</span><span class=\"number\">8</span>d5d6<span class=\"operator\">/</span>images<span class=\"operator\">/</span>action<span class=\"operator\">-</span>graphics<span class=\"operator\">/</span>nearpoints.png<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">在这里，我们给出 `nearPoints()` 四个参数：作为绘图基础的数据框、输入事件和轴上变量的名称。如果使用 `ggplot2`，则只需提供前两个参数，因为 `xvar` 和 `yvar` 可以从绘图数据结构中自动插补。出于这个原因，我将在本章的其余部分使用 `ggplot2`。下面是使用 `ggplot2` 重新实现的上一个示例：</span><br><span class=\"line\"></span><br><span class=\"line\">```r</span><br><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  plotOutput(&quot;plot&quot;, click = &quot;plot_click&quot;),</span><br><span class=\"line\">  tableOutput(&quot;data&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$plot &lt;- renderPlot(&#123;</span><br><span class=\"line\">    ggplot(mtcars, aes(wt, mpg)) + geom_point()</span><br><span class=\"line\">  &#125;, res = 96)</span><br><span class=\"line\">  </span><br><span class=\"line\">  output$data &lt;- renderTable(&#123;</span><br><span class=\"line\">    req(input$plot_click)</span><br><span class=\"line\">    nearPoints(mtcars, input$plot_click)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>您可能想知道 <code>nearPoints()</code> 究竟返回了什么。这是使用 <a href=\"https://rdrr.io/r/base/browser.html\">browser()</a> 的好地方，我们在 Section 5.2.3 中讨论过：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"built_in\">browser</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    nearPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>现在，在我启动应用程序并单击一个点后，我被放入交互式调试器，在那里我可以运行 <code>nearPoints()</code> 并查看它返回的内容：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nearPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;             mpg cyl disp hp drat   wt  qsec vs am gear carb</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Datsun 710 22.8   4  108 93 3.85 2.32 18.61  1  1    4    1</span></span><br></pre></td></tr></table></figure>\n\n\n<p>使用 <code>nearPoints()</code> 的另一种方法是使用 <code>allRows = TRUE</code> 和 <code>addDist = TRUE</code> 。这将返回包含两个新列的原始数据框：</p>\n<ul>\n<li><code>dist_</code> 给出行和事件之间的距离（以像素为单位）。</li>\n<li><code>selected_</code> 表示它是否靠近 click 事件（即它是否是 <code>allRows = FALSE</code>) 时返回的行。</li>\n</ul>\n<p>我们稍后会看到一个例子。</p>\n<h3 id=\"7-1-3-其他点事件\"><a href=\"#7-1-3-其他点事件\" class=\"headerlink\" title=\"7.1.3 其他点事件\"></a>7.1.3 其他点事件</h3><p>同样的方法对 <code>click</code>、<code>dblclick</code> 和 <code>hover</code> 同样有效：只需更改参数的名称。如果需要，可以通过提供 <a href=\"https://rdrr.io/pkg/shiny/man/clickOpts.html\">clickOps()</a>、<a href=\"https://rdrr.io/pkg/shiny/man/clickOpts.html\">dblclickOps()</a> 或 <a href=\"https://rdrr.io/pkg/shiny/man/clickOpts.html\">hoverOps()</a> 而不是给出输入 id 的字符串来获得对事件的额外控制。这些很少需要，所以我这里不讨论它们；请参阅文档以获取详细信息。</p>\n<p>您可以在一个图上使用多种交互类型。只需确保向用户解释他们可以做什么：使用鼠标事件与应用程序交互的一个缺点是它们不能立即被发现。</p>\n<h3 id=\"7-1-4-刷涂（Brushing）\"><a href=\"#7-1-4-刷涂（Brushing）\" class=\"headerlink\" title=\"7.1.4 刷涂（Brushing）\"></a>7.1.4 刷涂（Brushing）</h3><p>在绘图上选择点的另一种方法是使用画笔，画笔是由四个边定义的矩形选择。在 Shiny 中，一旦掌握了 <code>click</code> 和 <code>nearPoints()</code>，使用画笔就非常简单：只需切换到 <code>brush</code> 参数和 <a href=\"https://rdrr.io/pkg/shiny/man/brushedPoints.html\">brushedPoints()</a> 辅助函数。</p>\n<p>这是另一个简单的例子，显示了画笔选择了哪些点。图7.3显示了结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> brush <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_brush&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>wt<span class=\"punctuation\">,</span> mpg<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    brushedPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_brush<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/72c746e68848220485ba12c028382dd0de8a3a00/fc713/images/action-graphics/brushedpoints.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/72c746e68848220485ba12c028382dd0de8a3a00/fc713/images/action-graphics/brushedpoints.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图 7.3 设置 brush 参数为用户提供了一个可拖动的“画笔”。在此应用程序中，画笔下方的点显示在表格中。在 https://hadley.shinyapps.io/ms-brushedPoints 上查看演示。\"></p>\n<p>使用 <a href=\"https://rdrr.io/pkg/shiny/man/brushOpts.html\">brushOptions()</a> 控制颜色（填充和描边），或将刷涂限制为<code>direction = &quot;x&quot;</code> 或 <code>&quot;y&quot;</code> 的单个维度（例如，用于刷涂时间序列）。</p>\n<h3 id=\"7-1-5-修改绘图\"><a href=\"#7-1-5-修改绘图\" class=\"headerlink\" title=\"7.1.5 修改绘图\"></a>7.1.5 修改绘图</h3><p>到目前为止，我们已经展示了交互的结果。但是，交互的真正魅力在于，当你显示你正在交互的同一图中的变化时。不幸的是，这需要你尚未学过的先进反应技术：<a href=\"https://rdrr.io/pkg/shiny/man/reactiveVal.html\">reactiveVal()</a>。我们将在第16章中回到<code>reactiveVal()</code>，但我想在这里展示它，因为它是一种非常有用的技术。你可能需要在阅读了那章之后重新阅读这一节，但即使没有所有的理论，你也会对潜在的应用有所了解。</p>\n<p>正如你可能从名字中猜到的那样，<code>reactiveVal()</code> 非常类似于 <code>reactive()</code>。通过调用带有初始值的 <code>reactiveVal()</code> 来创建反应性值，并以与反应性相同的方式检索该值：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">val<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">### #&gt; [1] 10</span></span><br></pre></td></tr></table></figure>\n\n<p>最大的区别是，你也可以更新一个响应式值，并且引用该值的所有反应式使用者都将重新计算。响应式值使用特殊的语法进行更新——你像调用函数一样调用它，第一个参数是新的值：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val<span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">val<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 20</span></span><br></pre></td></tr></table></figure>\n\n<p>这意味着使用当前值更新反应值看起来像这样：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val<span class=\"punctuation\">(</span>val<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">val<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 21</span></span><br></pre></td></tr></table></figure>\n\n<p>不幸的是，如果你真的想在控制台中运行这段代码，你会得到一个错误，因为它必须在响应式环境中运行。这使得实验和调试更具挑战性，因为你需要 <a href=\"https://rdrr.io/r/base/browser.html\">browser()</a> 或类似方法来暂停 <a href=\"https://rdrr.io/pkg/shiny/man/shinyApp.html\">shinyApp()</a> 调用中的执行。这是我们将在第 16 章后面讨论的挑战之一。</p>\n<p>现在，让我们把学习 <code>reactiveVal()</code> 的挑战放在一边，告诉你为什么你可能会烦恼。想象一下，您想要可视化单击与图上的点之间的距离。在下面的应用程序中，我们首先创建一个反应值来存储这些距离，并使用一个常量对其进行初始化，该常量将在我们单击任何内容之前使用。然后，我们使用 <a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a> 来更新单击鼠标时的反应值，并使用 <code>ggplot</code> 可视化具有点大小的距离。总而言之，这看起来像下面的代码，结果如图 7.4 所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">1014</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">df <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> rnorm<span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> rnorm<span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> click <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_click&quot;</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  dist <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> nrow<span class=\"punctuation\">(</span>df<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">,</span></span><br><span class=\"line\">    dist<span class=\"punctuation\">(</span>nearPoints<span class=\"punctuation\">(</span>df<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">,</span> allRows <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> addDist <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"operator\">$</span>dist_<span class=\"punctuation\">)</span>  </span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    df<span class=\"operator\">$</span>dist <span class=\"operator\">&lt;-</span> dist<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>df<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> dist<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">      geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">      scale_size_area<span class=\"punctuation\">(</span>limits <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">1000</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> max_size <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span> guide <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/28b14f04bca5f6a00be49c50bdc09220ff421283/059c4/images/action-graphics/modifying-size-1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/28b14f04bca5f6a00be49c50bdc09220ff421283/059c4/images/action-graphics/modifying-size-1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图 7.4 此应用使用 reactiveVal() 来存储到上次单击的点的距离，然后将其映射到点大小。在这里，我显示了单击最左侧的点的结果 See live at https://hadley.shinyapps.io/ms-modifying-size 。\"></p>\n<p>这里有两个重要的ggplot2技术需要注意：</p>\n<ul>\n<li>在绘制之前，我将距离添加到数据框中。我认为在可视化之前，将相关变量放在数据框中是一种很好的做法。</li>\n<li>我为 <a href=\"https://ggplot2.tidyverse.org/reference/scale_size.html\">scale_size_area()</a> 设置了限制，以确保点击之间的尺寸具有可比性。为了找到正确的范围，我做了一些交互式实验，但如有需要，您可以计算出确切的细节（参见本章末尾的练习）。</li>\n</ul>\n<p>有一个更复杂的想法。我想用画笔逐步添加点到一个选择。在这里，我使用不同的颜色显示选择，但你可以想象许多其他的应用程序。为了使这个工作，我将<code>reactiveVal()</code>初始化为一个<code>FALSE</code>的向量，然后使用<a href=\"https://rdrr.io/pkg/shiny/man/brushedPoints.html\">brushedPoints()</a>和|将画笔下的任何点添加到选择。为了给用户一种重新开始的方式，我双击重置选择。图7.5显示了运行应用程序的几个截图。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> brush <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_brush&quot;</span><span class=\"punctuation\">,</span> dblclick <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_reset&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  selected <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> nrow<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_brush<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    brushed <span class=\"operator\">&lt;-</span> brushedPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_brush<span class=\"punctuation\">,</span> allRows <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"operator\">$</span>selected_</span><br><span class=\"line\">    selected<span class=\"punctuation\">(</span>brushed <span class=\"operator\">|</span> selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_reset<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    selected<span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> nrow<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    mtcars<span class=\"operator\">$</span>sel <span class=\"operator\">&lt;-</span> selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>wt<span class=\"punctuation\">,</span> mpg<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">      geom_point<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>colour <span class=\"operator\">=</span> sel<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      scale_colour_discrete<span class=\"punctuation\">(</span>limits <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;TRUE&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;FALSE&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/da63b234ad81bc5e1e592a904a1eaed0f4ee092d/794de/images/action-graphics/persistent-1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/da63b234ad81bc5e1e592a904a1eaed0f4ee092d/794de/images/action-graphics/persistent-1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><img src=\"https://d33wubrfki0l68.cloudfront.net/8c5a7aead6640c2720f28c4d05925d3a29e92730/e8f2e/images/action-graphics/persistent-3.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/8c5a7aead6640c2720f28c4d05925d3a29e92730/e8f2e/images/action-graphics/persistent-3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图 7.5 此应用程序使画笔“持续”，因此拖动它会增加当前选择。\"></p>\n<p>再次，我设定了比例的限制，以确保图例（和颜色）在第一次点击后不会改变。</p>\n<h3 id=\"7-1-6-互动限制\"><a href=\"#7-1-6-互动限制\" class=\"headerlink\" title=\"7.1.6 互动限制\"></a>7.1.6 互动限制</h3><p>在我们继续之前，了解交互式图中的基本数据流以了解其局限性非常重要。基本流程是这样的：</p>\n<ul>\n<li>JavaScript捕获鼠标事件。</li>\n<li>Shiny将鼠标事件数据发送回R，告诉应用程序输入已过时。</li>\n<li>重新计算所有下游反应式使用者。</li>\n<li><code>plotOutput()</code>生成一个新的PNG并将其发送到浏览器。</li>\n</ul>\n<p>对于本地应用程序，瓶颈往往是绘制图表所花费的时间。根据图表的复杂程度，这可能需要几分之一秒的时间。但对于托管应用程序，您还必须考虑将事件从浏览器传输到R所需的时间，然后将渲染的图表从R传输回浏览器。</p>\n<p>一般来说，这意味着不可能创建动作和响应被视为即时的Shiny应用程序（即绘图似乎与您的操作同时更新）。如果您需要这种速度，您必须在JavaScript中执行更多的计算。一种方法是使用一个封装了JavaScript图形库的R包。现在，在我写这本书的时候，我认为你会得到<code>plotly</code>包的最佳体验，正如Carson Sievert在《<a href=\"https://plotly-r.com/\">使用R、plotly和shiny进行基于Web的交互式数据可视化</a>》一书中所述。</p>\n<h2 id=\"7-2-动态高度和宽度\"><a href=\"#7-2-动态高度和宽度\" class=\"headerlink\" title=\"7.2 动态高度和宽度\"></a>7.2 动态高度和宽度</h2><p>本章的其余部分不如交互式图形那么令人兴奋，但包含了一些重要的内容。</p>\n<p>首先，可以使绘图大小具有反应性，因此宽度和高度会根据用户操作而变化。为此，向<code>renderPlot()</code>的<code>width</code>和<code>height</code>参数提供零参数函数，这些参数现在必须在server中定义，而不是在UI中定义，因为它们可以更改。这些函数不应有参数，并返回所需的大小（以像素为单位）。它们在反应式环境中进行评估，以便您可以动态地调整绘图的大小。</p>\n<p>以下应用程序演示了基本思想。它提供了两个直接控制绘图大小的滑块。图 7.6 中显示了几个示例屏幕截图。请注意，当您调整绘图大小时，数据保持不变：您不会获得新的随机数。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;height&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;height&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">250</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;width&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;width&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">250</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> width <span class=\"operator\">=</span> <span class=\"number\">250</span><span class=\"punctuation\">,</span> height <span class=\"operator\">=</span> <span class=\"number\">250</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span></span><br><span class=\"line\">    width <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> input<span class=\"operator\">$</span>width<span class=\"punctuation\">,</span></span><br><span class=\"line\">    height <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> input<span class=\"operator\">$</span>height<span class=\"punctuation\">,</span></span><br><span class=\"line\">    res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      plot<span class=\"punctuation\">(</span>rnorm<span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> rnorm<span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://d33wubrfki0l68.cloudfront.net/187b93086b15e4f5f6afe04cb609019d1a37b424/537a6/demos/action-graphics/resize-narrow.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/187b93086b15e4f5f6afe04cb609019d1a37b424/537a6/demos/action-graphics/resize-narrow.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></td>\n<td><img src=\"https://d33wubrfki0l68.cloudfront.net/46c07091eaf6a8cd82a342e6fc55692e54740b7c/d0566/demos/action-graphics/resize-wide.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/46c07091eaf6a8cd82a342e6fc55692e54740b7c/d0566/demos/action-graphics/resize-wide.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图 7.6 您可以使绘图大小动态化，以便它响应用户操作。该图显示了更改宽度的效果。在 https://hadley.shinyapps.io/ms-resize 上查看演示。\"></td>\n</tr>\n<tr>\n<td>图 7.6 您可以使绘图大小动态化，以便它响应用户操作。该图显示了更改宽度的效果。</td>\n<td>在 <a href=\"https://hadley.shinyapps.io/ms-resize\">https://hadley.shinyapps.io/ms-resize</a> 上查看演示。</td>\n</tr>\n<tr>\n<td>在实际应用中，您将在 <code>width</code> 和 <code>height</code> 函数中使用更复杂的表达式。例如，如果您在 ggplot2 中使用分面图，则可以使用它来增加图的大小，以保持各个分面大小大致相同。</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"7-3-图片\"><a href=\"#7-3-图片\" class=\"headerlink\" title=\"7.3 图片\"></a>7.3 图片</h2><p>如果要显示现有图像（而不是绘图），则可以使用 <a href=\"https://rdrr.io/pkg/shiny/man/renderImage.html\">renderImage()</a> 。例如，您可能有一个要向用户显示的照片目录。以下应用通过展示可爱的小狗照片来说明 <code>renderImage()</code> 的基础知识。这些照片来自 <a href=\"https://unsplash.com/\">https://unsplash.com</a> ，我最喜欢的免版税库存照片来源。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">puppies <span class=\"operator\">&lt;-</span> tibble<span class=\"operator\">::</span>tribble<span class=\"punctuation\">(</span></span><br><span class=\"line\">  <span class=\"operator\">~</span>breed<span class=\"punctuation\">,</span> <span class=\"operator\">~</span> id<span class=\"punctuation\">,</span> <span class=\"operator\">~</span>author<span class=\"punctuation\">,</span> </span><br><span class=\"line\">  <span class=\"string\">&quot;corgi&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;eoqnr8ikwFE&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;alvannee&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;labrador&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;KCdYn0xu2fU&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;shaneguymon&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;spaniel&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;TzjMd7i5WQI&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;_redo_&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;id&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Pick a breed&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> setNames<span class=\"punctuation\">(</span>puppies<span class=\"operator\">$</span>id<span class=\"punctuation\">,</span> puppies<span class=\"operator\">$</span>breed<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  htmlOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;source&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  imageOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;photo&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>photo <span class=\"operator\">&lt;-</span> renderImage<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">list</span><span class=\"punctuation\">(</span></span><br><span class=\"line\">      src <span class=\"operator\">=</span> file.path<span class=\"punctuation\">(</span><span class=\"string\">&quot;puppy-photos&quot;</span><span class=\"punctuation\">,</span> paste0<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>id<span class=\"punctuation\">,</span> <span class=\"string\">&quot;.jpg&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      contentType <span class=\"operator\">=</span> <span class=\"string\">&quot;image/jpeg&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      width <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      height <span class=\"operator\">=</span> <span class=\"number\">650</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> deleteFile <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>source <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    info <span class=\"operator\">&lt;-</span> puppies<span class=\"punctuation\">[</span>puppies<span class=\"operator\">$</span>id <span class=\"operator\">==</span> input<span class=\"operator\">$</span>id<span class=\"punctuation\">,</span> <span class=\"punctuation\">,</span> drop <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">    HTML<span class=\"punctuation\">(</span>glue<span class=\"operator\">::</span>glue<span class=\"punctuation\">(</span><span class=\"string\">&quot;&lt;p&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;a href=&#x27;https://unsplash.com/photos/&#123;info$id&#125;&#x27;&gt;original&lt;/a&gt; by</span></span><br><span class=\"line\"><span class=\"string\">      &lt;a href=&#x27;https://unsplash.com/@&#123;info$author&#125;&#x27;&gt;&#123;info$author&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/p&gt;&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/70de2ab74b8c9f3984ea503ef40af3930324c62a/43790/demos/action-graphics/puppies-corgi.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/70de2ab74b8c9f3984ea503ef40af3930324c62a/43790/demos/action-graphics/puppies-corgi.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图 7.7 使用 renderImage() 显示小狗可爱图片的应用。在 https://hadley.shinyapps.io/ms-puppies 上查看演示。\"><br><code>renderImage()</code> 需要返回一个列表。唯一关键的参数是 <code>src</code>，一个指向图像文件的本地路径。此外，您还可以提供：</p>\n<ul>\n<li><p><code>content-type</code>，它定义了图像的 MIME 类型。如果没有提供，Shiny 将从文件扩展名中猜测，因此只有在图像没有扩展名时才需要提供此内容。</p>\n</li>\n<li><p>图像的<code>width</code> 和 <code>height</code>（如果已知）。</p>\n</li>\n<li><p>任何其他参数，如 <code>class</code> 或 <code>alt</code>，都将作为属性添加到 HTML 中的<code>&lt;img&gt;</code>标记中。</p>\n</li>\n</ul>\n<p>您还必须提供<code>deleteFile</code>参数。不幸的是，<code>renderImage()</code>最初是设计用于处理临时文件的，因此在渲染后会自动删除图像。这显然是非常危险的，因此在Shiny 1.5.0中改变了行为。现在Shiny不再删除图像，而是强制您明确选择想要的行为。</p>\n<p>你可以在<br><a href=\"https://shiny.rstudio.com/articles/images.html\">https://shiny.rstudio.com/articles/images.html</a><br>了解更多关于 <code>renderImage()</code> 的信息，并查看你可能使用它的其他方式。</p>\n<h2 id=\"7-4-总结\"><a href=\"#7-4-总结\" class=\"headerlink\" title=\"7.4 总结\"></a>7.4 总结</h2><p>可视化是数据交流的强大方式，本章为您提供了几种高级技术来增强您的Shiny应用程序。接下来，您将学习向用户提供有关应用程序中正在发生的事情的反馈的技术，这对于需要花费大量时间的操作尤为重要。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"7-图形\"><a href=\"#7-图形\" class=\"headerlink\" title=\"7 图形\"></a>7 图形</h1><ul>\n<li>第7章向您展示了如何向绘图添加直接交互以及如何显示以其他方式生成的图像。</li>\n</ul>\n<p>我们在第 2 章中简要讨论了 <a href=\"\">renderPlot()</a> ;它是在应用程序中显示图形的强大工具。本章将向您展示如何充分利用它来创建交互式绘图，即响应鼠标事件的绘图。您还将学习一些其他有用的技术，包括制作具有动态宽度和高度的绘图以及使用 <a href=\"https://rdrr.io/pkg/shiny/man/renderImage.html\">renderImage()</a> 显示图像。</p>\n<p>在本章中，我们将需要 ggplot2 和 Shiny，因为我们将其用于大多数图形的绘制。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-1-交互性\"><a href=\"#7-1-交互性\" class=\"headerlink\" title=\"7.1 交互性\"></a>7.1 交互性</h2><p><a href=\"https://rdrr.io/pkg/shiny/man/plotOutput.html\">plotOutput()</a> 最酷的一点是，它不仅可以作为显示绘图的输出，还可以作为响应指针事件的输入。这允许您创建交互式图形，用户直接与绘图上的数据进行交互。交互式图形是一种强大的工具，具有广泛的应用范围。我没有空间向你展示所有的可能性，所以在这里我将重点介绍基础知识，然后向你指出资源以了解更多信息。</p>\n<h3 id=\"7-1-1-基础知识\"><a href=\"#7-1-1-基础知识\" class=\"headerlink\" title=\"7.1.1 基础知识\"></a>7.1.1 基础知识</h3><p>绘图可以响应四种不同的鼠标事件： <code>click</code> 、 <code>dblclick</code> （双击）、 <code>hover</code> （当鼠标在同一位置停留一段时间时）和 <code>brush</code> （矩形选择工具）。要将这些事件转换为Shiny的输入，您需要为相应的 <code>plotOutput()</code> 参数提供一个字符串，例如 <code>plotOutput(&quot;plot&quot;, click = &quot;plot_click&quot;)</code>。这将创建一个 <code>input$plot_click</code> ，您可以使用它来处理鼠标在绘图上的单击。</p>\n<p>下面是一个非常简单的处理鼠标单击的示例。我们注册 <code>plot_click</code> 输入，然后使用鼠标单击的坐标更新输出。图 7.1 显示了结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> click <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_click&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  verbatimTextOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;info&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    plot<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>wt<span class=\"punctuation\">,</span> mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  output<span class=\"operator\">$</span>info <span class=\"operator\">&lt;-</span> renderPrint<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">)</span></span><br><span class=\"line\">    x <span class=\"operator\">&lt;-</span> <span class=\"built_in\">round</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"operator\">$</span>x<span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    y <span class=\"operator\">&lt;-</span> <span class=\"built_in\">round</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"operator\">$</span>y<span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    cat<span class=\"punctuation\">(</span><span class=\"string\">&quot;[&quot;</span><span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> <span class=\"string\">&quot;, &quot;</span><span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> <span class=\"string\">&quot;]&quot;</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/8e3506131c2af7ac0ddd07569f277dd03e05ff0e/f836c/images/action-graphics/click.png\" alt=\"图 7.1 单击左上角的点可更新打印的坐标 查看演示实例 https://hadley.shinyapps.io/ms-click 。\"></p>\n<p>（请注意使用 <a href=\"https://rdrr.io/pkg/shiny/man/req.html\">req()</a> ，以确保应用在第一次单击之前不会执行任何操作，且坐标以<code>wt</code>和<code>mpg</code>变量表示。</p>\n<p>以下各节更详细地介绍了这些事件。我们将从点击事件开始，然后简要讨论密切相关的 <code>dblclick</code> 和 <code>hover</code> 。然后，您将了解 <code>brush</code> 事件，该事件提供了一个矩形<code>brush</code>，由其四个边（ <code>xmin</code> ， <code>xmax </code>， <code>ymin </code>和 <code>ymax </code>定义。然后，我将举几个示例，使用动作结果更新绘图，然后讨论 Shiny 中交互式图形的一些局限性。</p>\n<h3 id=\"7-1-2-点击\"><a href=\"#7-1-2-点击\" class=\"headerlink\" title=\"7.1.2 点击\"></a>7.1.2 点击</h3><p>点事件返回一个相对丰富的列表，其中包含大量信息。最重要的组件是 <code>x</code> 和 <code>y</code> ，它们在数据坐标中给出事件的位置。但我不打算谈论这种数据结构，因为你只在相对罕见的情况下需要（如果你确实想要细节，请在 Shiny 图库中使用这个应用程序）。相反，您将使用 <a href=\"https://rdrr.io/pkg/shiny/man/brushedPoints.html\">nearPoints()</a> 帮助程序，该帮助程序返回一个数据框，其中包含单击附近的行，并处理一堆繁琐的细节。</p>\n<p>下面是 <code>nearPoints()</code> 运行的简单示例，其中显示了有关事件附近点的数据表。图 7.2 显示了该应用的屏幕截图。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> click <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_click&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    plot<span class=\"punctuation\">(</span>mtcars<span class=\"operator\">$</span>wt<span class=\"punctuation\">,</span> mtcars<span class=\"operator\">$</span>mpg<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    nearPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">,</span> xvar <span class=\"operator\">=</span> <span class=\"string\">&quot;wt&quot;</span><span class=\"punctuation\">,</span> yvar <span class=\"operator\">=</span> <span class=\"string\">&quot;mpg&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">````</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\">!</span><span class=\"punctuation\">[</span>图 <span class=\"number\">7.2</span> nearPoints<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> 将绘图坐标转换为数据行，从而可以轻松显示您单击的点的基础数据 查看实例 https<span class=\"operator\">:</span><span class=\"operator\">/</span><span class=\"operator\">/</span>hadley.shinyapps.io<span class=\"operator\">/</span>ms<span class=\"operator\">-</span>nearPoints 。<span class=\"punctuation\">]</span><span class=\"punctuation\">(</span>https<span class=\"operator\">:</span><span class=\"operator\">/</span><span class=\"operator\">/</span>d33wubrfki0l68.cloudfront.net<span class=\"operator\">/</span><span class=\"number\">7</span>c89122f2822dac1dbe5640e4aab942bebb46ef9<span class=\"operator\">/</span><span class=\"number\">8</span>d5d6<span class=\"operator\">/</span>images<span class=\"operator\">/</span>action<span class=\"operator\">-</span>graphics<span class=\"operator\">/</span>nearpoints.png<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">在这里，我们给出 `nearPoints()` 四个参数：作为绘图基础的数据框、输入事件和轴上变量的名称。如果使用 `ggplot2`，则只需提供前两个参数，因为 `xvar` 和 `yvar` 可以从绘图数据结构中自动插补。出于这个原因，我将在本章的其余部分使用 `ggplot2`。下面是使用 `ggplot2` 重新实现的上一个示例：</span><br><span class=\"line\"></span><br><span class=\"line\">```r</span><br><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  plotOutput(&quot;plot&quot;, click = &quot;plot_click&quot;),</span><br><span class=\"line\">  tableOutput(&quot;data&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$plot &lt;- renderPlot(&#123;</span><br><span class=\"line\">    ggplot(mtcars, aes(wt, mpg)) + geom_point()</span><br><span class=\"line\">  &#125;, res = 96)</span><br><span class=\"line\">  </span><br><span class=\"line\">  output$data &lt;- renderTable(&#123;</span><br><span class=\"line\">    req(input$plot_click)</span><br><span class=\"line\">    nearPoints(mtcars, input$plot_click)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>您可能想知道 <code>nearPoints()</code> 究竟返回了什么。这是使用 <a href=\"https://rdrr.io/r/base/browser.html\">browser()</a> 的好地方，我们在 Section 5.2.3 中讨论过：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"built_in\">browser</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    nearPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>现在，在我启动应用程序并单击一个点后，我被放入交互式调试器，在那里我可以运行 <code>nearPoints()</code> 并查看它返回的内容：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nearPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;             mpg cyl disp hp drat   wt  qsec vs am gear carb</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Datsun 710 22.8   4  108 93 3.85 2.32 18.61  1  1    4    1</span></span><br></pre></td></tr></table></figure>\n\n\n<p>使用 <code>nearPoints()</code> 的另一种方法是使用 <code>allRows = TRUE</code> 和 <code>addDist = TRUE</code> 。这将返回包含两个新列的原始数据框：</p>\n<ul>\n<li><code>dist_</code> 给出行和事件之间的距离（以像素为单位）。</li>\n<li><code>selected_</code> 表示它是否靠近 click 事件（即它是否是 <code>allRows = FALSE</code>) 时返回的行。</li>\n</ul>\n<p>我们稍后会看到一个例子。</p>\n<h3 id=\"7-1-3-其他点事件\"><a href=\"#7-1-3-其他点事件\" class=\"headerlink\" title=\"7.1.3 其他点事件\"></a>7.1.3 其他点事件</h3><p>同样的方法对 <code>click</code>、<code>dblclick</code> 和 <code>hover</code> 同样有效：只需更改参数的名称。如果需要，可以通过提供 <a href=\"https://rdrr.io/pkg/shiny/man/clickOpts.html\">clickOps()</a>、<a href=\"https://rdrr.io/pkg/shiny/man/clickOpts.html\">dblclickOps()</a> 或 <a href=\"https://rdrr.io/pkg/shiny/man/clickOpts.html\">hoverOps()</a> 而不是给出输入 id 的字符串来获得对事件的额外控制。这些很少需要，所以我这里不讨论它们；请参阅文档以获取详细信息。</p>\n<p>您可以在一个图上使用多种交互类型。只需确保向用户解释他们可以做什么：使用鼠标事件与应用程序交互的一个缺点是它们不能立即被发现。</p>\n<h3 id=\"7-1-4-刷涂（Brushing）\"><a href=\"#7-1-4-刷涂（Brushing）\" class=\"headerlink\" title=\"7.1.4 刷涂（Brushing）\"></a>7.1.4 刷涂（Brushing）</h3><p>在绘图上选择点的另一种方法是使用画笔，画笔是由四个边定义的矩形选择。在 Shiny 中，一旦掌握了 <code>click</code> 和 <code>nearPoints()</code>，使用画笔就非常简单：只需切换到 <code>brush</code> 参数和 <a href=\"https://rdrr.io/pkg/shiny/man/brushedPoints.html\">brushedPoints()</a> 辅助函数。</p>\n<p>这是另一个简单的例子，显示了画笔选择了哪些点。图7.3显示了结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> brush <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_brush&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>wt<span class=\"punctuation\">,</span> mpg<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    brushedPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_brush<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/72c746e68848220485ba12c028382dd0de8a3a00/fc713/images/action-graphics/brushedpoints.png\" alt=\"图 7.3 设置 brush 参数为用户提供了一个可拖动的“画笔”。在此应用程序中，画笔下方的点显示在表格中。在 https://hadley.shinyapps.io/ms-brushedPoints 上查看演示。\"></p>\n<p>使用 <a href=\"https://rdrr.io/pkg/shiny/man/brushOpts.html\">brushOptions()</a> 控制颜色（填充和描边），或将刷涂限制为<code>direction = &quot;x&quot;</code> 或 <code>&quot;y&quot;</code> 的单个维度（例如，用于刷涂时间序列）。</p>\n<h3 id=\"7-1-5-修改绘图\"><a href=\"#7-1-5-修改绘图\" class=\"headerlink\" title=\"7.1.5 修改绘图\"></a>7.1.5 修改绘图</h3><p>到目前为止，我们已经展示了交互的结果。但是，交互的真正魅力在于，当你显示你正在交互的同一图中的变化时。不幸的是，这需要你尚未学过的先进反应技术：<a href=\"https://rdrr.io/pkg/shiny/man/reactiveVal.html\">reactiveVal()</a>。我们将在第16章中回到<code>reactiveVal()</code>，但我想在这里展示它，因为它是一种非常有用的技术。你可能需要在阅读了那章之后重新阅读这一节，但即使没有所有的理论，你也会对潜在的应用有所了解。</p>\n<p>正如你可能从名字中猜到的那样，<code>reactiveVal()</code> 非常类似于 <code>reactive()</code>。通过调用带有初始值的 <code>reactiveVal()</code> 来创建反应性值，并以与反应性相同的方式检索该值：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">val<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">### #&gt; [1] 10</span></span><br></pre></td></tr></table></figure>\n\n<p>最大的区别是，你也可以更新一个响应式值，并且引用该值的所有反应式使用者都将重新计算。响应式值使用特殊的语法进行更新——你像调用函数一样调用它，第一个参数是新的值：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val<span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">val<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 20</span></span><br></pre></td></tr></table></figure>\n\n<p>这意味着使用当前值更新反应值看起来像这样：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val<span class=\"punctuation\">(</span>val<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">val<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 21</span></span><br></pre></td></tr></table></figure>\n\n<p>不幸的是，如果你真的想在控制台中运行这段代码，你会得到一个错误，因为它必须在响应式环境中运行。这使得实验和调试更具挑战性，因为你需要 <a href=\"https://rdrr.io/r/base/browser.html\">browser()</a> 或类似方法来暂停 <a href=\"https://rdrr.io/pkg/shiny/man/shinyApp.html\">shinyApp()</a> 调用中的执行。这是我们将在第 16 章后面讨论的挑战之一。</p>\n<p>现在，让我们把学习 <code>reactiveVal()</code> 的挑战放在一边，告诉你为什么你可能会烦恼。想象一下，您想要可视化单击与图上的点之间的距离。在下面的应用程序中，我们首先创建一个反应值来存储这些距离，并使用一个常量对其进行初始化，该常量将在我们单击任何内容之前使用。然后，我们使用 <a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a> 来更新单击鼠标时的反应值，并使用 <code>ggplot</code> 可视化具有点大小的距离。总而言之，这看起来像下面的代码，结果如图 7.4 所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">1014</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">df <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> rnorm<span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> rnorm<span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> click <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_click&quot;</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  dist <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> nrow<span class=\"punctuation\">(</span>df<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">,</span></span><br><span class=\"line\">    dist<span class=\"punctuation\">(</span>nearPoints<span class=\"punctuation\">(</span>df<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_click<span class=\"punctuation\">,</span> allRows <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> addDist <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"operator\">$</span>dist_<span class=\"punctuation\">)</span>  </span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    df<span class=\"operator\">$</span>dist <span class=\"operator\">&lt;-</span> dist<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>df<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> dist<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">      geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">      scale_size_area<span class=\"punctuation\">(</span>limits <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">1000</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> max_size <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span> guide <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/28b14f04bca5f6a00be49c50bdc09220ff421283/059c4/images/action-graphics/modifying-size-1.png\" alt=\"图 7.4 此应用使用 reactiveVal() 来存储到上次单击的点的距离，然后将其映射到点大小。在这里，我显示了单击最左侧的点的结果 See live at https://hadley.shinyapps.io/ms-modifying-size 。\"></p>\n<p>这里有两个重要的ggplot2技术需要注意：</p>\n<ul>\n<li>在绘制之前，我将距离添加到数据框中。我认为在可视化之前，将相关变量放在数据框中是一种很好的做法。</li>\n<li>我为 <a href=\"https://ggplot2.tidyverse.org/reference/scale_size.html\">scale_size_area()</a> 设置了限制，以确保点击之间的尺寸具有可比性。为了找到正确的范围，我做了一些交互式实验，但如有需要，您可以计算出确切的细节（参见本章末尾的练习）。</li>\n</ul>\n<p>有一个更复杂的想法。我想用画笔逐步添加点到一个选择。在这里，我使用不同的颜色显示选择，但你可以想象许多其他的应用程序。为了使这个工作，我将<code>reactiveVal()</code>初始化为一个<code>FALSE</code>的向量，然后使用<a href=\"https://rdrr.io/pkg/shiny/man/brushedPoints.html\">brushedPoints()</a>和|将画笔下的任何点添加到选择。为了给用户一种重新开始的方式，我双击重置选择。图7.5显示了运行应用程序的几个截图。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> brush <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_brush&quot;</span><span class=\"punctuation\">,</span> dblclick <span class=\"operator\">=</span> <span class=\"string\">&quot;plot_reset&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  selected <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> nrow<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_brush<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    brushed <span class=\"operator\">&lt;-</span> brushedPoints<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>plot_brush<span class=\"punctuation\">,</span> allRows <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"operator\">$</span>selected_</span><br><span class=\"line\">    selected<span class=\"punctuation\">(</span>brushed <span class=\"operator\">|</span> selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>plot_reset<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    selected<span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> nrow<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    mtcars<span class=\"operator\">$</span>sel <span class=\"operator\">&lt;-</span> selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>wt<span class=\"punctuation\">,</span> mpg<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">      geom_point<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>colour <span class=\"operator\">=</span> sel<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      scale_colour_discrete<span class=\"punctuation\">(</span>limits <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;TRUE&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;FALSE&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/da63b234ad81bc5e1e592a904a1eaed0f4ee092d/794de/images/action-graphics/persistent-1.png\"><br><img src=\"https://d33wubrfki0l68.cloudfront.net/8c5a7aead6640c2720f28c4d05925d3a29e92730/e8f2e/images/action-graphics/persistent-3.png\" alt=\"图 7.5 此应用程序使画笔“持续”，因此拖动它会增加当前选择。\"></p>\n<p>再次，我设定了比例的限制，以确保图例（和颜色）在第一次点击后不会改变。</p>\n<h3 id=\"7-1-6-互动限制\"><a href=\"#7-1-6-互动限制\" class=\"headerlink\" title=\"7.1.6 互动限制\"></a>7.1.6 互动限制</h3><p>在我们继续之前，了解交互式图中的基本数据流以了解其局限性非常重要。基本流程是这样的：</p>\n<ul>\n<li>JavaScript捕获鼠标事件。</li>\n<li>Shiny将鼠标事件数据发送回R，告诉应用程序输入已过时。</li>\n<li>重新计算所有下游反应式使用者。</li>\n<li><code>plotOutput()</code>生成一个新的PNG并将其发送到浏览器。</li>\n</ul>\n<p>对于本地应用程序，瓶颈往往是绘制图表所花费的时间。根据图表的复杂程度，这可能需要几分之一秒的时间。但对于托管应用程序，您还必须考虑将事件从浏览器传输到R所需的时间，然后将渲染的图表从R传输回浏览器。</p>\n<p>一般来说，这意味着不可能创建动作和响应被视为即时的Shiny应用程序（即绘图似乎与您的操作同时更新）。如果您需要这种速度，您必须在JavaScript中执行更多的计算。一种方法是使用一个封装了JavaScript图形库的R包。现在，在我写这本书的时候，我认为你会得到<code>plotly</code>包的最佳体验，正如Carson Sievert在《<a href=\"https://plotly-r.com/\">使用R、plotly和shiny进行基于Web的交互式数据可视化</a>》一书中所述。</p>\n<h2 id=\"7-2-动态高度和宽度\"><a href=\"#7-2-动态高度和宽度\" class=\"headerlink\" title=\"7.2 动态高度和宽度\"></a>7.2 动态高度和宽度</h2><p>本章的其余部分不如交互式图形那么令人兴奋，但包含了一些重要的内容。</p>\n<p>首先，可以使绘图大小具有反应性，因此宽度和高度会根据用户操作而变化。为此，向<code>renderPlot()</code>的<code>width</code>和<code>height</code>参数提供零参数函数，这些参数现在必须在server中定义，而不是在UI中定义，因为它们可以更改。这些函数不应有参数，并返回所需的大小（以像素为单位）。它们在反应式环境中进行评估，以便您可以动态地调整绘图的大小。</p>\n<p>以下应用程序演示了基本思想。它提供了两个直接控制绘图大小的滑块。图 7.6 中显示了几个示例屏幕截图。请注意，当您调整绘图大小时，数据保持不变：您不会获得新的随机数。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;height&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;height&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">250</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;width&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;width&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">250</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">,</span> width <span class=\"operator\">=</span> <span class=\"number\">250</span><span class=\"punctuation\">,</span> height <span class=\"operator\">=</span> <span class=\"number\">250</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span></span><br><span class=\"line\">    width <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> input<span class=\"operator\">$</span>width<span class=\"punctuation\">,</span></span><br><span class=\"line\">    height <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> input<span class=\"operator\">$</span>height<span class=\"punctuation\">,</span></span><br><span class=\"line\">    res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      plot<span class=\"punctuation\">(</span>rnorm<span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> rnorm<span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://d33wubrfki0l68.cloudfront.net/187b93086b15e4f5f6afe04cb609019d1a37b424/537a6/demos/action-graphics/resize-narrow.png\"></td>\n<td><img src=\"https://d33wubrfki0l68.cloudfront.net/46c07091eaf6a8cd82a342e6fc55692e54740b7c/d0566/demos/action-graphics/resize-wide.png\" alt=\"图 7.6 您可以使绘图大小动态化，以便它响应用户操作。该图显示了更改宽度的效果。在 https://hadley.shinyapps.io/ms-resize 上查看演示。\"></td>\n</tr>\n<tr>\n<td>图 7.6 您可以使绘图大小动态化，以便它响应用户操作。该图显示了更改宽度的效果。</td>\n<td>在 <a href=\"https://hadley.shinyapps.io/ms-resize\">https://hadley.shinyapps.io/ms-resize</a> 上查看演示。</td>\n</tr>\n<tr>\n<td>在实际应用中，您将在 <code>width</code> 和 <code>height</code> 函数中使用更复杂的表达式。例如，如果您在 ggplot2 中使用分面图，则可以使用它来增加图的大小，以保持各个分面大小大致相同。</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"7-3-图片\"><a href=\"#7-3-图片\" class=\"headerlink\" title=\"7.3 图片\"></a>7.3 图片</h2><p>如果要显示现有图像（而不是绘图），则可以使用 <a href=\"https://rdrr.io/pkg/shiny/man/renderImage.html\">renderImage()</a> 。例如，您可能有一个要向用户显示的照片目录。以下应用通过展示可爱的小狗照片来说明 <code>renderImage()</code> 的基础知识。这些照片来自 <a href=\"https://unsplash.com/\">https://unsplash.com</a> ，我最喜欢的免版税库存照片来源。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">puppies <span class=\"operator\">&lt;-</span> tibble<span class=\"operator\">::</span>tribble<span class=\"punctuation\">(</span></span><br><span class=\"line\">  <span class=\"operator\">~</span>breed<span class=\"punctuation\">,</span> <span class=\"operator\">~</span> id<span class=\"punctuation\">,</span> <span class=\"operator\">~</span>author<span class=\"punctuation\">,</span> </span><br><span class=\"line\">  <span class=\"string\">&quot;corgi&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;eoqnr8ikwFE&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;alvannee&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;labrador&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;KCdYn0xu2fU&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;shaneguymon&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;spaniel&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;TzjMd7i5WQI&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;_redo_&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;id&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Pick a breed&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> setNames<span class=\"punctuation\">(</span>puppies<span class=\"operator\">$</span>id<span class=\"punctuation\">,</span> puppies<span class=\"operator\">$</span>breed<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  htmlOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;source&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  imageOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;photo&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>photo <span class=\"operator\">&lt;-</span> renderImage<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">list</span><span class=\"punctuation\">(</span></span><br><span class=\"line\">      src <span class=\"operator\">=</span> file.path<span class=\"punctuation\">(</span><span class=\"string\">&quot;puppy-photos&quot;</span><span class=\"punctuation\">,</span> paste0<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>id<span class=\"punctuation\">,</span> <span class=\"string\">&quot;.jpg&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      contentType <span class=\"operator\">=</span> <span class=\"string\">&quot;image/jpeg&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      width <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      height <span class=\"operator\">=</span> <span class=\"number\">650</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> deleteFile <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>source <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    info <span class=\"operator\">&lt;-</span> puppies<span class=\"punctuation\">[</span>puppies<span class=\"operator\">$</span>id <span class=\"operator\">==</span> input<span class=\"operator\">$</span>id<span class=\"punctuation\">,</span> <span class=\"punctuation\">,</span> drop <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">    HTML<span class=\"punctuation\">(</span>glue<span class=\"operator\">::</span>glue<span class=\"punctuation\">(</span><span class=\"string\">&quot;&lt;p&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;a href=&#x27;https://unsplash.com/photos/&#123;info$id&#125;&#x27;&gt;original&lt;/a&gt; by</span></span><br><span class=\"line\"><span class=\"string\">      &lt;a href=&#x27;https://unsplash.com/@&#123;info$author&#125;&#x27;&gt;&#123;info$author&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/p&gt;&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/70de2ab74b8c9f3984ea503ef40af3930324c62a/43790/demos/action-graphics/puppies-corgi.png\" alt=\"图 7.7 使用 renderImage() 显示小狗可爱图片的应用。在 https://hadley.shinyapps.io/ms-puppies 上查看演示。\"><br><code>renderImage()</code> 需要返回一个列表。唯一关键的参数是 <code>src</code>，一个指向图像文件的本地路径。此外，您还可以提供：</p>\n<ul>\n<li><p><code>content-type</code>，它定义了图像的 MIME 类型。如果没有提供，Shiny 将从文件扩展名中猜测，因此只有在图像没有扩展名时才需要提供此内容。</p>\n</li>\n<li><p>图像的<code>width</code> 和 <code>height</code>（如果已知）。</p>\n</li>\n<li><p>任何其他参数，如 <code>class</code> 或 <code>alt</code>，都将作为属性添加到 HTML 中的<code>&lt;img&gt;</code>标记中。</p>\n</li>\n</ul>\n<p>您还必须提供<code>deleteFile</code>参数。不幸的是，<code>renderImage()</code>最初是设计用于处理临时文件的，因此在渲染后会自动删除图像。这显然是非常危险的，因此在Shiny 1.5.0中改变了行为。现在Shiny不再删除图像，而是强制您明确选择想要的行为。</p>\n<p>你可以在<br><a href=\"https://shiny.rstudio.com/articles/images.html\">https://shiny.rstudio.com/articles/images.html</a><br>了解更多关于 <code>renderImage()</code> 的信息，并查看你可能使用它的其他方式。</p>\n<h2 id=\"7-4-总结\"><a href=\"#7-4-总结\" class=\"headerlink\" title=\"7.4 总结\"></a>7.4 总结</h2><p>可视化是数据交流的强大方式，本章为您提供了几种高级技术来增强您的Shiny应用程序。接下来，您将学习向用户提供有关应用程序中正在发生的事情的反馈的技术，这对于需要花费大量时间的操作尤为重要。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]}