{"title":"宏病毒组分析流程1-VirSorter2","slug":"宏病毒组分析流程1-VirSorter2","date":"2021-12-02T01:35:30.000Z","updated":"2024-03-11T13:07:17.358Z","comments":true,"path":"api/articles/宏病毒组分析流程1-VirSorter2.json","excerpt":null,"covers":["https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h1><ul>\n<li><p>安装主程序及依赖</p>\n<p>:::default</p>\n<ul>\n<li><a href=\"https://bitbucket.org/MAVERICLab/virsorter2/src/master\">VirSorter2</a> (version &gt;&#x3D;2.2.3)</li>\n<li><a href=\"https://bitbucket.org/berkeleylab/checkv/src/master\">CheckV</a> (version &gt;&#x3D;0.7.0)</li>\n<li><a href=\"https://github.com/shafferm/DRAM\">DRAMv</a> (version &gt;&#x3D;1.2.0)<br>:::</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n virome virsorter=2 checkv dram</span><br><span class=\"line\">conda activate virome</span><br></pre></td></tr></table></figure></li>\n<li><p>下载数据库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vs2 db: db-vs2 ~ 10 min</span></span><br><span class=\"line\">virsorter setup -d /new_data/hualin/db/db-vs2 -j 50</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># checkv db: checkv-db-v1.0  &lt; 5 mins</span></span><br><span class=\"line\">checkv download_database /new_data/hualin/db/checkv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># DRAMv: db-dramv ~5h and ~60GB of memory</span></span><br><span class=\"line\">DRAM-setup.py prepare_databases --skip_uniref --output_dir db-dramv</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"预测\"><a href=\"#预测\" class=\"headerlink\" title=\"预测\"></a>预测</h1><ul>\n<li><p>获取测试数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O test.fa https://bitbucket.org/MAVERICLab/virsorter2/raw/15a21fa9c1ee1d2af52b0148b167292e549d356e/test/test-for-sop.fa</span><br></pre></td></tr></table></figure></li>\n<li><p>运行VirSorter2</p>\n<p>  +++info 命令解析</p>\n<ul>\n<li>首先以0.5 的score阈值运行VirSorter2 以保证最大的灵敏度。</li>\n<li>只关注噬菌体 (dsDNA and ssDNA phage)，可选dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae。</li>\n<li>序列最小长度为5000 bp，后续病毒分类的最低要求如此。 </li>\n<li>可根据自己的CPU核心数自行调整 “-j”。</li>\n<li>“–keep-original-seq” 保留了环状和接近完整的病毒contigs (score &gt;0.8 as a whole sequence)，后续将通过checkV修剪其尾端的潜在宿主基因并处理重复的环状contigs片段。<br>  +++</li>\n</ul>\n<p>  :::default<br>  Time: 31m7.310s with a real dataset of 90.52 MB and 207,544 sequences<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virsorter run --keep-original-seq -w vs2-pass1 -i test.fa --include-groups dsDNAphage,ssDNA --min-length 5000  --min-score 0.5 -j 50 all</span><br></pre></td></tr></table></figure>\n\n<p>  +++primary 参数解析<br>  -w 指定输出目录<br>  -i 指定输入序列<br>  --min-length 过滤短序列<br>  --min-score 分数阈值<br>  --keep-original-seq 保留环状和接近完整的病毒contigs<br>  --include-groups 指定包含的病毒类型，用“,”分隔。可选：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br>  -j 线程数<br>  all 直接写上就可以<br>  +++</p>\n<p>  +++success 结果解析</p>\n<ul>\n<li><p>final-viral-combined.fa: 病毒序列</p>\n<ul>\n<li>鉴定为病毒的完整序列（标识为后缀 ||full）；</li>\n<li>鉴定为病毒的部分序列（用后缀 ||{i}_partial 标识）； {i} 可以是从 0 到该Contig中发现的最大病毒片段数的数字；</li>\n<li>带有<ruby>标志基因<rt>hallmark gene</rt></ruby>的短序列（少于两个基因）被鉴定为病毒（用后缀 ||lt2gene 标识）；</li>\n</ul>\n</li>\n<li><p>final-viral-score.tsv: 每个病毒序列的评分跨组和一些关键特征，这可以用于进一步过滤</p>\n<ul>\n<li>sequence name</li>\n<li>score of each viral sequences across groups (多列)</li>\n<li>max score across groups</li>\n<li>max score group</li>\n<li>contig length</li>\n<li>hallmark gene count</li>\n<li>viral gene %</li>\n<li>nonviral gene %</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n      <table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n          <tr>\n          <td>seqname</td>\n          <td>dsDNAphage</td>\n          <td>NCLDV</td>\n          <td>RNA</td>\n          <td>ssDNA</td>\n          <td>lavidaviridae</td>\n          <td>max_score</td>\n          <td>max_score_group</td>\n          <td>length</td>\n          <td>hallmark</td>\n          <td>viral</td>\n          <td>cellular</td>\n          </tr>\n          <tr>\n          <td>NODE_5_length_17317_cov_8.385876&#124;&#124;full</td>\n          <td>0.993</td>\n          <td>0.847</td>\n          <td>0.005</td>\n          <td>0.060</td>\n          <td>0.467</td>\n          <td>0.993</td>\n          <td>dsDNAphage</td>\n          <td>17315</td>\n          <td>2</td>\n          <td>64.700</td>\n          <td>5.900</td>\n          </tr>\n          <tr>\n          <td>NODE_6_length_16611_cov_115.615064&#124;&#124;full</td>\n          <td>0.920</td>\n          <td>0.207</td>\n          <td>0.035</td>\n          <td>0.087</td>\n          <td>0.053</td>\n          <td>0.920</td>\n          <td>dsDNAphage</td>\n          <td>16610</td>\n          <td>0</td>\n          <td>3.200</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_8_length_14848_cov_778.417157&#124;&#124;full</td>\n          <td>1.000</td>\n          <td>0.220</td>\n          <td>0.105</td>\n          <td>0.380</td>\n          <td>0.627</td>\n          <td>1.000</td>\n          <td>dsDNAphage</td>\n          <td>14848</td>\n          <td>15</td>\n          <td>100.000</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_16_length_12563_cov_14.331948&#124;&#124;full</td>\n          <td>0.973</td>\n          <td>0.200</td>\n          <td>0.165</td>\n          <td>0.273</td>\n          <td>0.227</td>\n          <td>0.973</td>\n          <td>dsDNAphage</td>\n          <td>12083</td>\n          <td>0</td>\n          <td>8.000</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_17_length_11885_cov_350.043956&#124;&#124;full</td>\n          <td>0.653</td>\n          <td>0.513</td>\n          <td>0.050</td>\n          <td>0.080</td>\n          <td>0.047</td>\n          <td>0.653</td>\n          <td>dsDNAphage</td>\n          <td>11885</td>\n          <td>0</td>\n          <td>9.100</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_21_length_11527_cov_216.405073&#124;&#124;full</td>\n          <td>0.620</td>\n          <td>0.407</td>\n          <td>0.000</td>\n          <td>0.013</td>\n          <td>0.060</td>\n          <td>0.620</td>\n          <td>dsDNAphage</td>\n          <td>11526</td>\n          <td>0</td>\n          <td>10.500</td>\n          <td>5.300</td>\n          </tr>\n          <tr>\n          <td>NODE_23_length_11316_cov_8.144303&#124;&#124;full</td>\n          <td>0.367</td>\n          <td>0.540</td>\n          <td>0.010</td>\n          <td>0.000</td>\n          <td>0.400</td>\n          <td>0.540</td>\n          <td>NCLDV</td>\n          <td>11313</td>\n          <td>1</td>\n          <td>23.100</td>\n          <td>7.700</td>\n          </tr>\n      </table>\n  </div>\n  \n<p>  :::warning<br>  不同病毒类群的分类器并非相互排斥，它们的<ruby>目标病毒序列空间<rt>target viral sequence space</rt></ruby>可能存在重叠，这意味着该信息不应被使用或当作<ruby>可靠的分类<rt>reliable taxonomic classification</rt></ruby>。VirSorter2的用途仅限于病毒鉴定。<br>  :::</p>\n<ul>\n<li><p>final-viral-boundary.tsv: 带有边界信息的表 (与其他两个文件相比，可能有额外的记录，应该忽略)。</p>\n<p>only some of the columns in this file might be useful:</p>\n<ul>\n<li>seqname: original sequence name</li>\n<li>trim_orf_index_start, trim_orf_index_end: start and end ORF index on orignal sequence of identified viral sequence</li>\n<li>trim_bp_start, trim_bp_end: start and end position on orignal sequence of identified viral sequence</li>\n<li>trim_pr: score of final trimmed viral sequence</li>\n<li>partial: full sequence as viral or partial sequence as viral; this is defined when a full sequence has score &gt; score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)</li>\n<li>pr_full: score of the original sequence</li>\n<li>hallmark_cnt: hallmark gene count</li>\n<li>group: the classifier of viral group that gives high score; this should NOT be used as reliable classification</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n      <table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n          <tr>\n      <td>seqname</td>\n      <td>trim_orf_index_start</td>\n      <td>trim_orf_index_end</td>\n      <td>trim_bp_start</td>\n      <td>trim_bp_end</td>\n      <td>trim_pr</td>\n      <td>trim_pr_max</td>\n      <td>prox_orf_index_start</td>\n      <td>prox_orf_index_end</td>\n      <td>prox_bp_start</td>\n      <td>prox_bp_end</td>\n      <td>prox_pr</td>\n      <td>prox_pr_max</td>\n      <td>partial</td>\n      <td>full_orf_index_start</td>\n      <td>full_orf_index_end</td>\n      <td>full_bp_start</td>\n      <td>full_bp_end</td>\n      <td>pr_full</td>\n      <td>arc</td>\n      <td>bac</td>\n      <td>euk</td>\n      <td>vir</td>\n      <td>mix</td>\n      <td>unaligned</td>\n      <td>hallmark_cnt</td>\n      <td>group</td>\n      <td>shape</td>\n      <td>seqname_new</td>\n          </tr>\n          <tr>\n      <td>NODE_999_length_4026_cov_7.610929</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>0.547</td>\n      <td>0.547</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>0.547</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>dsDNAphage</td>\n      <td>linear</td>\n      <td>NODE_999_length_4026_cov_7.610929||full</td>\n          </tr>\n          <tr>\n      <td>NODE_9999_length_1276_cov_11.598690</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>0.955</td>\n      <td>0.955</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>0.955</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_9999_length_1276_cov_11.598690||full</td>\n          </tr>\n          <tr>\n      <td>NODE_99999_length_314_cov_4.000000</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>0.57</td>\n      <td>0.57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>0.57</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>50.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_99999_length_314_cov_4.000000||full</td>\n          </tr>\n          <tr>\n      <td>NODE_99992_length_314_cov_4.389961</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>0.747</td>\n      <td>0.747</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>0.747</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>ssDNA</td>\n      <td>linear</td>\n      <td>NODE_99992_length_314_cov_4.389961||full</td>\n          </tr>\n          <tr>\n      <td>NODE_9997_length_1276_cov_44.113841</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>0.98</td>\n      <td>0.98</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>0.98</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>50.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_9997_length_1276_cov_44.113841||full</td>\n          </tr>\n      </table>\n  </div>\n  \n<p>  :::warning<br>  在<ruby>原病毒<rt>provirus </rt></ruby>提取过程中，为了获得更好的敏感性，VirSorter2有时会高估病毒序列的大小。建议清除这些前病毒预测，以去除预测病毒区域边缘的潜在宿主基因，例如使用<a href=\"https://bitbucket.org/berkeleylab/checkv\">CheckV</a>等工具。<br>  :::</p>\n<p>  :::primary<br>  How to pick a score cutoff?<br>  :::</p>\n<p>  一般来说，score&gt;0.9的人为高置信度。得分在 0.5 到 0.9 之间的可能是病毒和非病毒的混合体。很难确定区分病毒和非病毒的最佳分数，因为它取决于宿主序列和未知序列的百分比。因此，[建议使用默认截止值 (0.5) 以获得最大灵敏度，然后使用 checkV 应用质量检查步骤以消除误报（预测完整性除外）]{.rainbow}。&#x3D;&#x3D;请继续下面的流程。&#x3D;&#x3D;<br>  +++</p>\n</li>\n<li><p>运行checkV</p>\n<p>  +++info 命令解析<br>  Score阈值设为0.5时，VirSorter2结果中可能存在一些非病毒序列或区域。因此，使用CheckV对VirSorter2的结果进行质量控制，并修剪在<ruby>原病毒<rt>proviruses</rt></ruby>末端留下的潜在宿主区域。可以根据CPU内核的可用性调整-t选项。<br>  +++</p>\n<p>  :::default<br>  Time: 0m28.795s<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checkv end_to_end vs2-pass1/final-viral-combined.fa checkv -t 50 -d /new_data/hualin/db/checkv/checkv-db-v1.0</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>.&#x2F;checkv&#x2F;</li>\n<li>completeness.tsv</li>\n<li>complete_genomes.tsv</li>\n<li>contamination.tsv</li>\n<li>proviruses.fna</li>\n<li>quality_summary.tsv</li>\n<li>viruses.fna</li>\n<li>tmp<br>  +++</li>\n</ul>\n</li>\n<li><p>再次运行VirSorter2 </p>\n<p>+++info 命令解析</p>\n<ul>\n<li>再次利用checkV-trimmed序列运行VirSorter2以得到”affi-contigs.tab”文件，该文件将作为DRAMv的输入以鉴定AMGs。</li>\n<li>注意”--seqname-suffix-off”选项保留了原始的输入序列名称，因为我们确信在本步骤中，不可能从同一条contig中获得&gt;1个原病毒。</li>\n<li>“--viral-gene-enrich-off”选项关闭了病毒基因要多于宿主基因的要求，以确保VirSorter2在这一步不做任何筛查。</li>\n<li>以上两个选项需要VirSorter2版本&gt;&#x3D;2.2.1。</li>\n<li>可选所有病毒：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br>+++</li>\n</ul>\n<p>:::default<br>  Time: 18m30.896s<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> checkv/proviruses.fna checkv/viruses.fna &gt; checkv/combined.fna</span><br><span class=\"line\"></span><br><span class=\"line\">virsorter run --seqname-suffix-off --viral-gene-enrich-off --provirus-off --prep-for-dramv -i checkv/combined.fna -w vs2-pass2 --include-groups dsDNAphage,ssDNA --min-length 5000 --min-score 0.5 -j 50 all</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>.&#x2F;vs2-pass2&#x2F;</li>\n<li>inal-viral-combined.fa</li>\n<li>final-viral-score.tsv</li>\n<li>for-dramv&#x2F;final-viral-combined-for-dramv.fa</li>\n<li>for-dramv&#x2F;viral-affi-contigs-for-dramv.tab<br>  +++</li>\n</ul>\n</li>\n<li><p>运行DRAMv</p>\n<p>+++info 命令解析<br>使用DRAMv注释鉴定的病毒序列，以用于后续<ruby>人工整理<rt>manual curation</rt></ruby>。可通过”--threads”控制调用的CPU核心数。<br>+++</p>\n<p>:::default<br>  Time: 8.81h<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># step 1 annotate 耗时步骤，建议投后台运行</span></span><br><span class=\"line\">DRAM-v.py annotate -i vs2-pass2/for-dramv/final-viral-combined-for-dramv.fa -v vs2-pass2/for-dramv/viral-affi-contigs-for-dramv.tab -o dramv-annotate --skip_trnascan --threads 50 --min_contig_size 1000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#step 2 summarize anntotations</span></span><br><span class=\"line\">DRAM-v.py distill -i dramv-annotate/annotations.tsv -o dramv-distill</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>dramv-annotate&#x2F;annotations.tsv</li>\n<li>dramv-annotate&#x2F;genbank 各条contig的gbk文件</li>\n<li>dramv-annotate&#x2F;genes.faa</li>\n<li>dramv-annotate&#x2F;genes.fna</li>\n<li>dramv-annotate&#x2F;genes.gff</li>\n<li>dramv-annotate&#x2F;rrnas.tsv</li>\n<li>dramv-annotate&#x2F;scaffolds.fna</li>\n<li>dramv-annotate&#x2F;vMAGs 各条contig的fasta文件<br>  +++</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"过滤\"><a href=\"#过滤\" class=\"headerlink\" title=\"过滤\"></a>过滤</h1><h2 id=\"依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\"><a href=\"#依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\" class=\"headerlink\" title=\"依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\"></a>依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选</h2><p>来自checkV的病毒和宿主基因计数可用于假阳性筛查。由于checkV在预测病毒基因方面非常保守，那些由checkV预测的病毒基因的序列应该是病毒的，而那些没有被checkV预测到病毒基因的序列更可能是非病毒的。</p>\n<p>基于我们对土壤宏基因组的基准测试，(1) 那些没有预测到病毒和宿主基因的序列是病毒；(2) 没有病毒基因但有2个或2个以上宿主基因的大多数为非病毒基因；(3) 那些没有病毒基因和具有1个宿主基因的很难区分其为病毒还是非病毒（可能是可移动的基因元件，类似于VirSorter1中的第3类），除非手动检查，否则应该丢弃。</p>\n<p>只选择那些大于10kb的用于手动检查，因为太短的无法分辨。还有那些VirSorter2 得分≥0.95或hallmark基因计数&gt;2的大多数是病毒。&#x3D;&#x3D;这些经验筛选标准总结如下：&#x3D;&#x3D;</p>\n<p>:::success<br>Keep1: viral_gene &gt;0<br>:::<br>:::success<br>Keep2: viral_gene &#x3D;0 AND (host_gene &#x3D;0 OR score &gt;&#x3D;0.95 OR hallmark &gt;2)<br>:::<br>:::warning<br>Manual check: (NOT in Keep1 OR Keep2) AND viral_gene &#x3D;0 AND host_gene &#x3D;1 AND length &gt;&#x3D;10kb<br>:::<br>:::danger<br>Discard: the rest<br>:::</p>\n<p>[要查看病毒基因、宿主基因、评分和<ruby>序列的特征标记<rt>hallmark of sequences</rt></ruby>，您可以合并”vs2-pass1&#x2F;final-viral-score.tsv”和”checkv&#x2F;contamination.tsv”，并在电子表格中过滤。]{.aqua}本尊为各位提供了Perl脚本<a href=\"https://github.com/liaochenlanruo/myScripts/tree/main/1551%20Virome\">cat_tsv.pl</a>以实现机动合并！直接在终端运行<code>perl cat_tsv.pl</code>即可得到合并后的文件<code>forCheck.txt</code>。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $head_checkv;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $head_pass1;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $num = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;checkv/contamination.tsv&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$count++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($count == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t$head_checkv = $_;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t$hash&#123;$lines[<span class=\"number\">0</span>]&#125; = $_;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;vs2-pass1/final-viral-score.tsv&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;forCheck.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$num++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($num == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t$head_pass1 = $_;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$head_pass1\\t$head_checkv\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @line = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$line[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$_\\t$hash&#123;$line[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$_\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n<p>接下来按照上面的四条规则对<code>forCheck.txt</code>进行拆分，得到病毒<code>Virus.txt</code>、手动核对<code>Manual_check.txt</code>及抛弃的<code>Discard.txt</code>。可以自己看，也可以用<code>get_virus.pl</code>来完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;forCheck.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> VIRUS, <span class=\"string\">&quot;&gt;Virus.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> MANUAL, <span class=\"string\">&quot;&gt;Manual_check.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> DISCARD, <span class=\"string\">&quot;&gt;Discard.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$count++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($count == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> MANUAL $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> DISCARD $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">15</span>] &gt; <span class=\"number\">0</span>) &#123; <span class=\"comment\"># virus keep1</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">16</span>] == <span class=\"number\">0</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">6</span>] &gt;= <span class=\"number\">0</span>.<span class=\"number\">95</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">9</span>] &gt; <span class=\"number\">2</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">16</span>] == <span class=\"number\">1</span>) &amp;&amp; ($lines[<span class=\"number\">8</span>] &gt;= <span class=\"number\">10000</span>)) &#123; <span class=\"comment\"># manual check</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> MANUAL $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123; <span class=\"comment\"># discard</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> DISCARD $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> VIRUS;</span><br><span class=\"line\"><span class=\"keyword\">close</span> MANUAL;</span><br><span class=\"line\"><span class=\"keyword\">close</span> DISCARD;</span><br></pre></td></tr></table></figure>\n\n<p>用法：脚本与<code>forCheck.txt</code>放在同一目录，终端运行如下命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_virus.pl</span><br></pre></td></tr></table></figure>\n\n<p>对于<code>Manual_check.txt</code>中的序列，需要用眼睛和脑袋去<code>dramv-annotate/annotations.tsv</code>中找注释信息，然后根据下面的方法判断其属于病毒还是细胞，如果是病毒，就将其所在的那行信息复制到<code>Virus.txt</code>文件的末尾，并保存。</p>\n<h2 id=\"依据DRAMv注释筛选\"><a href=\"#依据DRAMv注释筛选\" class=\"headerlink\" title=\"依据DRAMv注释筛选\"></a>依据DRAMv注释筛选</h2><p>在病毒和宿主中都有一些共同的基因(如{脂多糖^LPS}相关)和移动元件，这些基因可能导致上述“Keep2”类别中的假阳性。因此，++要谨慎对待带有这些基因的contigs++{.dot}。专家们已经编制了一份与此相关的[“可疑”]{.red}基因列表。我们可以使用“Keep2”类别中的contigs对DRAMv表取子集，并在DRAMv子集表中筛选“可疑”基因(忽略大小写，例如在“grep”中使用“-i”选项)，然后将带有这些基因的contigs放入“手动检查”类别中。</p>\n<h2 id=\"手动检查-tabset\"><a href=\"#手动检查-tabset\" class=\"headerlink\" title=\"手动检查{.tabset}\"></a>手动检查{.tabset}</h2><p>对于存在于<ruby>“手动检查”<rt>manual check</rt></ruby>类别中的序列，可以观察其在”dramv-annotate&#x2F;annotations.tsv”中的注释信息。本步骤很难标准化，下面是一些经验之谈：</p>\n<div class=\"tabs\" id=\"tab-id\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#tab-id-1\">判定contig为病毒的标准</a></li><li class=\"tab\"><a class=\"#tab-id-2\">判定contig为非病毒的标准</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-id-1\"><p>;;;id1  判定contig为病毒的标准</p>\n<ul>\n<li>结构基因、hallmark基因、<ruby>注释缺失或假设性富集<rt>depletion in annotations or enrichment for hypotheticals</rt> (~10%的基因具有non-hypothetical注释)。</li>\n<li>缺乏hallmarks，但&gt;&#x3D;50%已注释的基因为病毒，且其中至少一半以上的viral bitcore &gt;100，且contig的长度&lt;50kb。</li>\n<li>Provirus: <ruby>整合酶&#x2F;重组酶&#x2F;切除酶&#x2F;阻遏子<rt>Integrase&#x2F;recombinase&#x2F;excisionase&#x2F;repressor</rt></ruby>，在一侧富集了病毒基因。</li>\n<li>Provirus: 基因组中存在“break”：两个基因之间的<ruby>间隙<rt>gap</rt></ruby>对应于一个<ruby>链开关<rt>strand switch</rt></ruby>，更高的编码密度，注释缺失，以及在一侧噬菌体基因的富集。</li>\n<li><ruby>仅有~1-3个基因有注释，但至少一半命中病毒，且命中基因的bitscore不超过病毒bitscore的150% ，<rt>Few annotations only ~1-3 genes, but with at least half hitting to viruses, and where the genes hitting cells have a bitscore no more than 150% that of the viral bitscores</rt></ruby> <ruby>且&#x2F;或病毒的bitscore &gt;100 <rt> and&#x2F;or viral bitscores are &gt;100</rt></ruby>。</li>\n<li>LPS (脂多糖) <ruby>外观区域对病毒基因的命中率也非常高<rt>looking regions if also has very strong hits to viral genes</rt></ruby>，bitscore&gt;100。<br>;;;</li>\n</ul></div><div class=\"tab-pane\" id=\"tab-id-2\"><p>;;;id1 判定contig为非病毒的标准</p>\n<ul>\n<li><ruby>细胞样基因<rt>cellular like genes</rt></ruby>是病毒基因的3倍，几乎所有基因都有注释，没有基因只命中病毒，也没有病毒<ruby>标志基因<rt>hallmark genes</rt></ruby>。</li>\n<li>缺乏任何病毒hallmark genes，且长度 &gt;50kb。</li>\n<li>许多明显的细胞基因字符串，没有其他病毒标志基因。 在基准测试中遇到的例子包括 1) CRISPR Cas, 2) ABC transporters, 3) Sporulation proteins, 4) Two-component systems, 5) Secretion system。这其中一些可能是由病毒编码的，但在没有进一步证据的情况下并不表明是病毒contig。</li>\n<li>多个质粒基因或转座酶，但没有明确的只命中病毒的基因。</li>\n<li>注释信息很少，仅有~1-3个基因同时命中了病毒和细胞基因，但有stronger bitscores支持其为细胞基因。</li>\n<li><ruby>没有强有力的命中病毒的脂多糖样区域<rt>LPS looking regions if no strong viral hits</rt></ruby>。富含通常与脂多糖相关的基因，如{外聚酶^epimerases}、{糖基转移酶^glycosyl transferases}、{酰基转移酶^acyltransferase}、{短链脱氢酶&#x2F;还原酶^dehydrogenase&#x2F;reductase short-chain}、{脱水酶^dehydratase}。</li>\n<li>注释为 Type IV 和&#x2F;或 Type VI 分析系统，并被非病毒基因围绕。</li>\n<li>注释信息很少，仅有~1-3个基因全部命中细胞基因 (即使 bitscore &lt;100) ，且没有命中病毒的基因。<br>;;;</li>\n</ul></div></div></div>\n\n<p>:::warning<br>最后，用户要注意，VirSorter 2和&#x2F;或checkV预测的任何原病毒边界只是一个近似的估计(寻找“ends”在前噬菌体发现中是一个相当具有挑战性的问题)，也需要仔细地手工检查，特别是在AMG研究中。<br>:::</p>\n<p>最终我们需要拿到病毒contig的序列，用<code>get_virus_seqs.pl</code>完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/perl</span></span><br><span class=\"line\">use strict;</span><br><span class=\"line\">use warnings;</span><br><span class=\"line\"></span><br><span class=\"line\">my %<span class=\"built_in\">hash</span>;</span><br><span class=\"line\">open IN, <span class=\"string\">&quot;checkv/combined.fna&quot;</span> || die;</span><br><span class=\"line\"><span class=\"built_in\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\tchomp;</span><br><span class=\"line\">\tmy (<span class=\"variable\">$header</span>, <span class=\"variable\">$seq</span>) = <span class=\"built_in\">split</span>(/\\n/, <span class=\"variable\">$_</span>, 2);</span><br><span class=\"line\">\tmy <span class=\"variable\">$id</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$header</span> =~/(\\S+)\\|\\|.+/) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$id</span> = <span class=\"variable\">$1</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$id</span> = <span class=\"variable\">$header</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$id</span>&#125; = <span class=\"variable\">$seq</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">close IN;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">local</span> $/ = <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">open IN, <span class=\"string\">&quot;Virus.txt&quot;</span> || die;</span><br><span class=\"line\">open OUT, <span class=\"string\">&quot;&gt;Virus.fas&quot;</span> || die;</span><br><span class=\"line\">open NO, <span class=\"string\">&quot;&gt;NoSeqs.ids&quot;</span> || die;</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\tchomp;</span><br><span class=\"line\">\tmy @lines = <span class=\"built_in\">split</span> /\\t/;</span><br><span class=\"line\">\t<span class=\"variable\">$lines</span>[0] =~/(\\S+)\\|\\|/;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (exists <span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$1</span>&#125;) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span> OUT <span class=\"string\">&quot;&gt;<span class=\"variable\">$lines</span>[0]\\n<span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$1</span>&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span> NO <span class=\"string\">&quot;<span class=\"variable\">$lines</span>[0]\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">close IN;</span><br><span class=\"line\">close OUT;</span><br><span class=\"line\">close NO;</span><br></pre></td></tr></table></figure>\n\n<p>用法：终端运行如下命令即可得到序列文件<code>Virus.fas</code>。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_virus_seqs.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“1551”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://github.com/jiarong/VirSorter2\">VirSorter2</a></li>\n<li><a href=\"https://www.protocols.io/view/viral-sequence-identification-sop-with-virsorter2-bwm5pc86\">Viral sequence identification SOP with VirSorter2 V.3</a></li>\n</ul>\n<div class=\"mermaid\">graph TD\n\tA [Reads] --&gt; B((MetaSpaDES))\n\tB --&gt; C [Contigs]\n\tC --&gt; D ((VirSorter))\n\tC --&gt; E ((VirFinder))\n\tE --&gt; F {Score &gt;&#x3D; 0.7 &amp; p &lt; 0.05}\n\tF -- YES --&gt; G [Virus]\n\tF -- NO --&gt; H [Contigs]\n\tD --&gt; G\n\tH --&gt; I ((CAT))\n\tI --&gt; J {&lt; 40%}\n\tJ -- YES --&gt; G\n\tJ -- NO --&gt; K [Not Virus]\n\tG --&gt; L ((Nucmer))\n\tL --&gt; M {Identity &gt;&#x3D; 95% &amp; Coverage &gt;&#x3D; 80%}\n\tM -- YES --&gt; N [Grouped]\n\tM -- NO --&gt; O [Not Grouped]\n\tG --&gt; P ((Prodigal))\n\tP --&gt; Q [Amino Acid Sequences]\n\tQ --&gt; R {Length &lt; 10 kb}\n\tR -- YES --&gt; S ((Blastp))\n\tR -- NO --&gt; T ((vConTACT2))\n\tS --&gt; U [Annotated Genes]\n\tT --&gt; U</div>\n","more":"<h1 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h1><ul>\n<li><p>安装主程序及依赖</p>\n<p>:::default</p>\n<ul>\n<li><a href=\"https://bitbucket.org/MAVERICLab/virsorter2/src/master\">VirSorter2</a> (version &gt;&#x3D;2.2.3)</li>\n<li><a href=\"https://bitbucket.org/berkeleylab/checkv/src/master\">CheckV</a> (version &gt;&#x3D;0.7.0)</li>\n<li><a href=\"https://github.com/shafferm/DRAM\">DRAMv</a> (version &gt;&#x3D;1.2.0)<br>:::</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n virome virsorter=2 checkv dram</span><br><span class=\"line\">conda activate virome</span><br></pre></td></tr></table></figure></li>\n<li><p>下载数据库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vs2 db: db-vs2 ~ 10 min</span></span><br><span class=\"line\">virsorter setup -d /new_data/hualin/db/db-vs2 -j 50</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># checkv db: checkv-db-v1.0  &lt; 5 mins</span></span><br><span class=\"line\">checkv download_database /new_data/hualin/db/checkv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># DRAMv: db-dramv ~5h and ~60GB of memory</span></span><br><span class=\"line\">DRAM-setup.py prepare_databases --skip_uniref --output_dir db-dramv</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"预测\"><a href=\"#预测\" class=\"headerlink\" title=\"预测\"></a>预测</h1><ul>\n<li><p>获取测试数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O test.fa https://bitbucket.org/MAVERICLab/virsorter2/raw/15a21fa9c1ee1d2af52b0148b167292e549d356e/test/test-for-sop.fa</span><br></pre></td></tr></table></figure></li>\n<li><p>运行VirSorter2</p>\n<p>  +++info 命令解析</p>\n<ul>\n<li>首先以0.5 的score阈值运行VirSorter2 以保证最大的灵敏度。</li>\n<li>只关注噬菌体 (dsDNA and ssDNA phage)，可选dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae。</li>\n<li>序列最小长度为5000 bp，后续病毒分类的最低要求如此。 </li>\n<li>可根据自己的CPU核心数自行调整 “-j”。</li>\n<li>“–keep-original-seq” 保留了环状和接近完整的病毒contigs (score &gt;0.8 as a whole sequence)，后续将通过checkV修剪其尾端的潜在宿主基因并处理重复的环状contigs片段。<br>  +++</li>\n</ul>\n<p>  :::default<br>  Time: 31m7.310s with a real dataset of 90.52 MB and 207,544 sequences<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virsorter run --keep-original-seq -w vs2-pass1 -i test.fa --include-groups dsDNAphage,ssDNA --min-length 5000  --min-score 0.5 -j 50 all</span><br></pre></td></tr></table></figure>\n\n<p>  +++primary 参数解析<br>  -w 指定输出目录<br>  -i 指定输入序列<br>  --min-length 过滤短序列<br>  --min-score 分数阈值<br>  --keep-original-seq 保留环状和接近完整的病毒contigs<br>  --include-groups 指定包含的病毒类型，用“,”分隔。可选：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br>  -j 线程数<br>  all 直接写上就可以<br>  +++</p>\n<p>  +++success 结果解析</p>\n<ul>\n<li><p>final-viral-combined.fa: 病毒序列</p>\n<ul>\n<li>鉴定为病毒的完整序列（标识为后缀 ||full）；</li>\n<li>鉴定为病毒的部分序列（用后缀 ||{i}_partial 标识）； {i} 可以是从 0 到该Contig中发现的最大病毒片段数的数字；</li>\n<li>带有<ruby>标志基因<rt>hallmark gene</rt></ruby>的短序列（少于两个基因）被鉴定为病毒（用后缀 ||lt2gene 标识）；</li>\n</ul>\n</li>\n<li><p>final-viral-score.tsv: 每个病毒序列的评分跨组和一些关键特征，这可以用于进一步过滤</p>\n<ul>\n<li>sequence name</li>\n<li>score of each viral sequences across groups (多列)</li>\n<li>max score across groups</li>\n<li>max score group</li>\n<li>contig length</li>\n<li>hallmark gene count</li>\n<li>viral gene %</li>\n<li>nonviral gene %</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n      <table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n          <tr>\n          <td>seqname</td>\n          <td>dsDNAphage</td>\n          <td>NCLDV</td>\n          <td>RNA</td>\n          <td>ssDNA</td>\n          <td>lavidaviridae</td>\n          <td>max_score</td>\n          <td>max_score_group</td>\n          <td>length</td>\n          <td>hallmark</td>\n          <td>viral</td>\n          <td>cellular</td>\n          </tr>\n          <tr>\n          <td>NODE_5_length_17317_cov_8.385876&#124;&#124;full</td>\n          <td>0.993</td>\n          <td>0.847</td>\n          <td>0.005</td>\n          <td>0.060</td>\n          <td>0.467</td>\n          <td>0.993</td>\n          <td>dsDNAphage</td>\n          <td>17315</td>\n          <td>2</td>\n          <td>64.700</td>\n          <td>5.900</td>\n          </tr>\n          <tr>\n          <td>NODE_6_length_16611_cov_115.615064&#124;&#124;full</td>\n          <td>0.920</td>\n          <td>0.207</td>\n          <td>0.035</td>\n          <td>0.087</td>\n          <td>0.053</td>\n          <td>0.920</td>\n          <td>dsDNAphage</td>\n          <td>16610</td>\n          <td>0</td>\n          <td>3.200</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_8_length_14848_cov_778.417157&#124;&#124;full</td>\n          <td>1.000</td>\n          <td>0.220</td>\n          <td>0.105</td>\n          <td>0.380</td>\n          <td>0.627</td>\n          <td>1.000</td>\n          <td>dsDNAphage</td>\n          <td>14848</td>\n          <td>15</td>\n          <td>100.000</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_16_length_12563_cov_14.331948&#124;&#124;full</td>\n          <td>0.973</td>\n          <td>0.200</td>\n          <td>0.165</td>\n          <td>0.273</td>\n          <td>0.227</td>\n          <td>0.973</td>\n          <td>dsDNAphage</td>\n          <td>12083</td>\n          <td>0</td>\n          <td>8.000</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_17_length_11885_cov_350.043956&#124;&#124;full</td>\n          <td>0.653</td>\n          <td>0.513</td>\n          <td>0.050</td>\n          <td>0.080</td>\n          <td>0.047</td>\n          <td>0.653</td>\n          <td>dsDNAphage</td>\n          <td>11885</td>\n          <td>0</td>\n          <td>9.100</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_21_length_11527_cov_216.405073&#124;&#124;full</td>\n          <td>0.620</td>\n          <td>0.407</td>\n          <td>0.000</td>\n          <td>0.013</td>\n          <td>0.060</td>\n          <td>0.620</td>\n          <td>dsDNAphage</td>\n          <td>11526</td>\n          <td>0</td>\n          <td>10.500</td>\n          <td>5.300</td>\n          </tr>\n          <tr>\n          <td>NODE_23_length_11316_cov_8.144303&#124;&#124;full</td>\n          <td>0.367</td>\n          <td>0.540</td>\n          <td>0.010</td>\n          <td>0.000</td>\n          <td>0.400</td>\n          <td>0.540</td>\n          <td>NCLDV</td>\n          <td>11313</td>\n          <td>1</td>\n          <td>23.100</td>\n          <td>7.700</td>\n          </tr>\n      </table>\n  </div>\n  \n<p>  :::warning<br>  不同病毒类群的分类器并非相互排斥，它们的<ruby>目标病毒序列空间<rt>target viral sequence space</rt></ruby>可能存在重叠，这意味着该信息不应被使用或当作<ruby>可靠的分类<rt>reliable taxonomic classification</rt></ruby>。VirSorter2的用途仅限于病毒鉴定。<br>  :::</p>\n<ul>\n<li><p>final-viral-boundary.tsv: 带有边界信息的表 (与其他两个文件相比，可能有额外的记录，应该忽略)。</p>\n<p>only some of the columns in this file might be useful:</p>\n<ul>\n<li>seqname: original sequence name</li>\n<li>trim_orf_index_start, trim_orf_index_end: start and end ORF index on orignal sequence of identified viral sequence</li>\n<li>trim_bp_start, trim_bp_end: start and end position on orignal sequence of identified viral sequence</li>\n<li>trim_pr: score of final trimmed viral sequence</li>\n<li>partial: full sequence as viral or partial sequence as viral; this is defined when a full sequence has score &gt; score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)</li>\n<li>pr_full: score of the original sequence</li>\n<li>hallmark_cnt: hallmark gene count</li>\n<li>group: the classifier of viral group that gives high score; this should NOT be used as reliable classification</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n      <table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n          <tr>\n      <td>seqname</td>\n      <td>trim_orf_index_start</td>\n      <td>trim_orf_index_end</td>\n      <td>trim_bp_start</td>\n      <td>trim_bp_end</td>\n      <td>trim_pr</td>\n      <td>trim_pr_max</td>\n      <td>prox_orf_index_start</td>\n      <td>prox_orf_index_end</td>\n      <td>prox_bp_start</td>\n      <td>prox_bp_end</td>\n      <td>prox_pr</td>\n      <td>prox_pr_max</td>\n      <td>partial</td>\n      <td>full_orf_index_start</td>\n      <td>full_orf_index_end</td>\n      <td>full_bp_start</td>\n      <td>full_bp_end</td>\n      <td>pr_full</td>\n      <td>arc</td>\n      <td>bac</td>\n      <td>euk</td>\n      <td>vir</td>\n      <td>mix</td>\n      <td>unaligned</td>\n      <td>hallmark_cnt</td>\n      <td>group</td>\n      <td>shape</td>\n      <td>seqname_new</td>\n          </tr>\n          <tr>\n      <td>NODE_999_length_4026_cov_7.610929</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>0.547</td>\n      <td>0.547</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>0.547</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>dsDNAphage</td>\n      <td>linear</td>\n      <td>NODE_999_length_4026_cov_7.610929||full</td>\n          </tr>\n          <tr>\n      <td>NODE_9999_length_1276_cov_11.598690</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>0.955</td>\n      <td>0.955</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>0.955</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_9999_length_1276_cov_11.598690||full</td>\n          </tr>\n          <tr>\n      <td>NODE_99999_length_314_cov_4.000000</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>0.57</td>\n      <td>0.57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>0.57</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>50.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_99999_length_314_cov_4.000000||full</td>\n          </tr>\n          <tr>\n      <td>NODE_99992_length_314_cov_4.389961</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>0.747</td>\n      <td>0.747</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>0.747</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>ssDNA</td>\n      <td>linear</td>\n      <td>NODE_99992_length_314_cov_4.389961||full</td>\n          </tr>\n          <tr>\n      <td>NODE_9997_length_1276_cov_44.113841</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>0.98</td>\n      <td>0.98</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>0.98</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>50.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_9997_length_1276_cov_44.113841||full</td>\n          </tr>\n      </table>\n  </div>\n  \n<p>  :::warning<br>  在<ruby>原病毒<rt>provirus </rt></ruby>提取过程中，为了获得更好的敏感性，VirSorter2有时会高估病毒序列的大小。建议清除这些前病毒预测，以去除预测病毒区域边缘的潜在宿主基因，例如使用<a href=\"https://bitbucket.org/berkeleylab/checkv\">CheckV</a>等工具。<br>  :::</p>\n<p>  :::primary<br>  How to pick a score cutoff?<br>  :::</p>\n<p>  一般来说，score&gt;0.9的人为高置信度。得分在 0.5 到 0.9 之间的可能是病毒和非病毒的混合体。很难确定区分病毒和非病毒的最佳分数，因为它取决于宿主序列和未知序列的百分比。因此，[建议使用默认截止值 (0.5) 以获得最大灵敏度，然后使用 checkV 应用质量检查步骤以消除误报（预测完整性除外）]{.rainbow}。&#x3D;&#x3D;请继续下面的流程。&#x3D;&#x3D;<br>  +++</p>\n</li>\n<li><p>运行checkV</p>\n<p>  +++info 命令解析<br>  Score阈值设为0.5时，VirSorter2结果中可能存在一些非病毒序列或区域。因此，使用CheckV对VirSorter2的结果进行质量控制，并修剪在<ruby>原病毒<rt>proviruses</rt></ruby>末端留下的潜在宿主区域。可以根据CPU内核的可用性调整-t选项。<br>  +++</p>\n<p>  :::default<br>  Time: 0m28.795s<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checkv end_to_end vs2-pass1/final-viral-combined.fa checkv -t 50 -d /new_data/hualin/db/checkv/checkv-db-v1.0</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>.&#x2F;checkv&#x2F;</li>\n<li>completeness.tsv</li>\n<li>complete_genomes.tsv</li>\n<li>contamination.tsv</li>\n<li>proviruses.fna</li>\n<li>quality_summary.tsv</li>\n<li>viruses.fna</li>\n<li>tmp<br>  +++</li>\n</ul>\n</li>\n<li><p>再次运行VirSorter2 </p>\n<p>+++info 命令解析</p>\n<ul>\n<li>再次利用checkV-trimmed序列运行VirSorter2以得到”affi-contigs.tab”文件，该文件将作为DRAMv的输入以鉴定AMGs。</li>\n<li>注意”--seqname-suffix-off”选项保留了原始的输入序列名称，因为我们确信在本步骤中，不可能从同一条contig中获得&gt;1个原病毒。</li>\n<li>“--viral-gene-enrich-off”选项关闭了病毒基因要多于宿主基因的要求，以确保VirSorter2在这一步不做任何筛查。</li>\n<li>以上两个选项需要VirSorter2版本&gt;&#x3D;2.2.1。</li>\n<li>可选所有病毒：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br>+++</li>\n</ul>\n<p>:::default<br>  Time: 18m30.896s<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> checkv/proviruses.fna checkv/viruses.fna &gt; checkv/combined.fna</span><br><span class=\"line\"></span><br><span class=\"line\">virsorter run --seqname-suffix-off --viral-gene-enrich-off --provirus-off --prep-for-dramv -i checkv/combined.fna -w vs2-pass2 --include-groups dsDNAphage,ssDNA --min-length 5000 --min-score 0.5 -j 50 all</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>.&#x2F;vs2-pass2&#x2F;</li>\n<li>inal-viral-combined.fa</li>\n<li>final-viral-score.tsv</li>\n<li>for-dramv&#x2F;final-viral-combined-for-dramv.fa</li>\n<li>for-dramv&#x2F;viral-affi-contigs-for-dramv.tab<br>  +++</li>\n</ul>\n</li>\n<li><p>运行DRAMv</p>\n<p>+++info 命令解析<br>使用DRAMv注释鉴定的病毒序列，以用于后续<ruby>人工整理<rt>manual curation</rt></ruby>。可通过”--threads”控制调用的CPU核心数。<br>+++</p>\n<p>:::default<br>  Time: 8.81h<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># step 1 annotate 耗时步骤，建议投后台运行</span></span><br><span class=\"line\">DRAM-v.py annotate -i vs2-pass2/for-dramv/final-viral-combined-for-dramv.fa -v vs2-pass2/for-dramv/viral-affi-contigs-for-dramv.tab -o dramv-annotate --skip_trnascan --threads 50 --min_contig_size 1000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#step 2 summarize anntotations</span></span><br><span class=\"line\">DRAM-v.py distill -i dramv-annotate/annotations.tsv -o dramv-distill</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>dramv-annotate&#x2F;annotations.tsv</li>\n<li>dramv-annotate&#x2F;genbank 各条contig的gbk文件</li>\n<li>dramv-annotate&#x2F;genes.faa</li>\n<li>dramv-annotate&#x2F;genes.fna</li>\n<li>dramv-annotate&#x2F;genes.gff</li>\n<li>dramv-annotate&#x2F;rrnas.tsv</li>\n<li>dramv-annotate&#x2F;scaffolds.fna</li>\n<li>dramv-annotate&#x2F;vMAGs 各条contig的fasta文件<br>  +++</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"过滤\"><a href=\"#过滤\" class=\"headerlink\" title=\"过滤\"></a>过滤</h1><h2 id=\"依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\"><a href=\"#依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\" class=\"headerlink\" title=\"依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\"></a>依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选</h2><p>来自checkV的病毒和宿主基因计数可用于假阳性筛查。由于checkV在预测病毒基因方面非常保守，那些由checkV预测的病毒基因的序列应该是病毒的，而那些没有被checkV预测到病毒基因的序列更可能是非病毒的。</p>\n<p>基于我们对土壤宏基因组的基准测试，(1) 那些没有预测到病毒和宿主基因的序列是病毒；(2) 没有病毒基因但有2个或2个以上宿主基因的大多数为非病毒基因；(3) 那些没有病毒基因和具有1个宿主基因的很难区分其为病毒还是非病毒（可能是可移动的基因元件，类似于VirSorter1中的第3类），除非手动检查，否则应该丢弃。</p>\n<p>只选择那些大于10kb的用于手动检查，因为太短的无法分辨。还有那些VirSorter2 得分≥0.95或hallmark基因计数&gt;2的大多数是病毒。&#x3D;&#x3D;这些经验筛选标准总结如下：&#x3D;&#x3D;</p>\n<p>:::success<br>Keep1: viral_gene &gt;0<br>:::<br>:::success<br>Keep2: viral_gene &#x3D;0 AND (host_gene &#x3D;0 OR score &gt;&#x3D;0.95 OR hallmark &gt;2)<br>:::<br>:::warning<br>Manual check: (NOT in Keep1 OR Keep2) AND viral_gene &#x3D;0 AND host_gene &#x3D;1 AND length &gt;&#x3D;10kb<br>:::<br>:::danger<br>Discard: the rest<br>:::</p>\n<p>[要查看病毒基因、宿主基因、评分和<ruby>序列的特征标记<rt>hallmark of sequences</rt></ruby>，您可以合并”vs2-pass1&#x2F;final-viral-score.tsv”和”checkv&#x2F;contamination.tsv”，并在电子表格中过滤。]{.aqua}本尊为各位提供了Perl脚本<a href=\"https://github.com/liaochenlanruo/myScripts/tree/main/1551%20Virome\">cat_tsv.pl</a>以实现机动合并！直接在终端运行<code>perl cat_tsv.pl</code>即可得到合并后的文件<code>forCheck.txt</code>。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $head_checkv;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $head_pass1;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $num = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;checkv/contamination.tsv&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$count++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($count == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t$head_checkv = $_;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t$hash&#123;$lines[<span class=\"number\">0</span>]&#125; = $_;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;vs2-pass1/final-viral-score.tsv&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;forCheck.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$num++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($num == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t$head_pass1 = $_;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$head_pass1\\t$head_checkv\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @line = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$line[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$_\\t$hash&#123;$line[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$_\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n<p>接下来按照上面的四条规则对<code>forCheck.txt</code>进行拆分，得到病毒<code>Virus.txt</code>、手动核对<code>Manual_check.txt</code>及抛弃的<code>Discard.txt</code>。可以自己看，也可以用<code>get_virus.pl</code>来完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;forCheck.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> VIRUS, <span class=\"string\">&quot;&gt;Virus.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> MANUAL, <span class=\"string\">&quot;&gt;Manual_check.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> DISCARD, <span class=\"string\">&quot;&gt;Discard.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$count++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($count == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> MANUAL $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> DISCARD $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">15</span>] &gt; <span class=\"number\">0</span>) &#123; <span class=\"comment\"># virus keep1</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">16</span>] == <span class=\"number\">0</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">6</span>] &gt;= <span class=\"number\">0</span>.<span class=\"number\">95</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">9</span>] &gt; <span class=\"number\">2</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">16</span>] == <span class=\"number\">1</span>) &amp;&amp; ($lines[<span class=\"number\">8</span>] &gt;= <span class=\"number\">10000</span>)) &#123; <span class=\"comment\"># manual check</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> MANUAL $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123; <span class=\"comment\"># discard</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> DISCARD $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> VIRUS;</span><br><span class=\"line\"><span class=\"keyword\">close</span> MANUAL;</span><br><span class=\"line\"><span class=\"keyword\">close</span> DISCARD;</span><br></pre></td></tr></table></figure>\n\n<p>用法：脚本与<code>forCheck.txt</code>放在同一目录，终端运行如下命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_virus.pl</span><br></pre></td></tr></table></figure>\n\n<p>对于<code>Manual_check.txt</code>中的序列，需要用眼睛和脑袋去<code>dramv-annotate/annotations.tsv</code>中找注释信息，然后根据下面的方法判断其属于病毒还是细胞，如果是病毒，就将其所在的那行信息复制到<code>Virus.txt</code>文件的末尾，并保存。</p>\n<h2 id=\"依据DRAMv注释筛选\"><a href=\"#依据DRAMv注释筛选\" class=\"headerlink\" title=\"依据DRAMv注释筛选\"></a>依据DRAMv注释筛选</h2><p>在病毒和宿主中都有一些共同的基因(如{脂多糖^LPS}相关)和移动元件，这些基因可能导致上述“Keep2”类别中的假阳性。因此，++要谨慎对待带有这些基因的contigs++{.dot}。专家们已经编制了一份与此相关的[“可疑”]{.red}基因列表。我们可以使用“Keep2”类别中的contigs对DRAMv表取子集，并在DRAMv子集表中筛选“可疑”基因(忽略大小写，例如在“grep”中使用“-i”选项)，然后将带有这些基因的contigs放入“手动检查”类别中。</p>\n<h2 id=\"手动检查-tabset\"><a href=\"#手动检查-tabset\" class=\"headerlink\" title=\"手动检查{.tabset}\"></a>手动检查{.tabset}</h2><p>对于存在于<ruby>“手动检查”<rt>manual check</rt></ruby>类别中的序列，可以观察其在”dramv-annotate&#x2F;annotations.tsv”中的注释信息。本步骤很难标准化，下面是一些经验之谈：</p>\n<div class=\"tabs\" id=\"tab-id\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#tab-id-1\">判定contig为病毒的标准</a></li><li class=\"tab\"><a class=\"#tab-id-2\">判定contig为非病毒的标准</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-id-1\"><p>;;;id1  判定contig为病毒的标准</p>\n<ul>\n<li>结构基因、hallmark基因、<ruby>注释缺失或假设性富集<rt>depletion in annotations or enrichment for hypotheticals</rt> (~10%的基因具有non-hypothetical注释)。</li>\n<li>缺乏hallmarks，但&gt;&#x3D;50%已注释的基因为病毒，且其中至少一半以上的viral bitcore &gt;100，且contig的长度&lt;50kb。</li>\n<li>Provirus: <ruby>整合酶&#x2F;重组酶&#x2F;切除酶&#x2F;阻遏子<rt>Integrase&#x2F;recombinase&#x2F;excisionase&#x2F;repressor</rt></ruby>，在一侧富集了病毒基因。</li>\n<li>Provirus: 基因组中存在“break”：两个基因之间的<ruby>间隙<rt>gap</rt></ruby>对应于一个<ruby>链开关<rt>strand switch</rt></ruby>，更高的编码密度，注释缺失，以及在一侧噬菌体基因的富集。</li>\n<li><ruby>仅有~1-3个基因有注释，但至少一半命中病毒，且命中基因的bitscore不超过病毒bitscore的150% ，<rt>Few annotations only ~1-3 genes, but with at least half hitting to viruses, and where the genes hitting cells have a bitscore no more than 150% that of the viral bitscores</rt></ruby> <ruby>且&#x2F;或病毒的bitscore &gt;100 <rt> and&#x2F;or viral bitscores are &gt;100</rt></ruby>。</li>\n<li>LPS (脂多糖) <ruby>外观区域对病毒基因的命中率也非常高<rt>looking regions if also has very strong hits to viral genes</rt></ruby>，bitscore&gt;100。<br>;;;</li>\n</ul></div><div class=\"tab-pane\" id=\"tab-id-2\"><p>;;;id1 判定contig为非病毒的标准</p>\n<ul>\n<li><ruby>细胞样基因<rt>cellular like genes</rt></ruby>是病毒基因的3倍，几乎所有基因都有注释，没有基因只命中病毒，也没有病毒<ruby>标志基因<rt>hallmark genes</rt></ruby>。</li>\n<li>缺乏任何病毒hallmark genes，且长度 &gt;50kb。</li>\n<li>许多明显的细胞基因字符串，没有其他病毒标志基因。 在基准测试中遇到的例子包括 1) CRISPR Cas, 2) ABC transporters, 3) Sporulation proteins, 4) Two-component systems, 5) Secretion system。这其中一些可能是由病毒编码的，但在没有进一步证据的情况下并不表明是病毒contig。</li>\n<li>多个质粒基因或转座酶，但没有明确的只命中病毒的基因。</li>\n<li>注释信息很少，仅有~1-3个基因同时命中了病毒和细胞基因，但有stronger bitscores支持其为细胞基因。</li>\n<li><ruby>没有强有力的命中病毒的脂多糖样区域<rt>LPS looking regions if no strong viral hits</rt></ruby>。富含通常与脂多糖相关的基因，如{外聚酶^epimerases}、{糖基转移酶^glycosyl transferases}、{酰基转移酶^acyltransferase}、{短链脱氢酶&#x2F;还原酶^dehydrogenase&#x2F;reductase short-chain}、{脱水酶^dehydratase}。</li>\n<li>注释为 Type IV 和&#x2F;或 Type VI 分析系统，并被非病毒基因围绕。</li>\n<li>注释信息很少，仅有~1-3个基因全部命中细胞基因 (即使 bitscore &lt;100) ，且没有命中病毒的基因。<br>;;;</li>\n</ul></div></div></div>\n\n<p>:::warning<br>最后，用户要注意，VirSorter 2和&#x2F;或checkV预测的任何原病毒边界只是一个近似的估计(寻找“ends”在前噬菌体发现中是一个相当具有挑战性的问题)，也需要仔细地手工检查，特别是在AMG研究中。<br>:::</p>\n<p>最终我们需要拿到病毒contig的序列，用<code>get_virus_seqs.pl</code>完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/perl</span></span><br><span class=\"line\">use strict;</span><br><span class=\"line\">use warnings;</span><br><span class=\"line\"></span><br><span class=\"line\">my %<span class=\"built_in\">hash</span>;</span><br><span class=\"line\">open IN, <span class=\"string\">&quot;checkv/combined.fna&quot;</span> || die;</span><br><span class=\"line\"><span class=\"built_in\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\tchomp;</span><br><span class=\"line\">\tmy (<span class=\"variable\">$header</span>, <span class=\"variable\">$seq</span>) = <span class=\"built_in\">split</span>(/\\n/, <span class=\"variable\">$_</span>, 2);</span><br><span class=\"line\">\tmy <span class=\"variable\">$id</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$header</span> =~/(\\S+)\\|\\|.+/) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$id</span> = <span class=\"variable\">$1</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$id</span> = <span class=\"variable\">$header</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$id</span>&#125; = <span class=\"variable\">$seq</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">close IN;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">local</span> $/ = <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">open IN, <span class=\"string\">&quot;Virus.txt&quot;</span> || die;</span><br><span class=\"line\">open OUT, <span class=\"string\">&quot;&gt;Virus.fas&quot;</span> || die;</span><br><span class=\"line\">open NO, <span class=\"string\">&quot;&gt;NoSeqs.ids&quot;</span> || die;</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\tchomp;</span><br><span class=\"line\">\tmy @lines = <span class=\"built_in\">split</span> /\\t/;</span><br><span class=\"line\">\t<span class=\"variable\">$lines</span>[0] =~/(\\S+)\\|\\|/;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (exists <span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$1</span>&#125;) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span> OUT <span class=\"string\">&quot;&gt;<span class=\"variable\">$lines</span>[0]\\n<span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$1</span>&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span> NO <span class=\"string\">&quot;<span class=\"variable\">$lines</span>[0]\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">close IN;</span><br><span class=\"line\">close OUT;</span><br><span class=\"line\">close NO;</span><br></pre></td></tr></table></figure>\n\n<p>用法：终端运行如下命令即可得到序列文件<code>Virus.fas</code>。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_virus_seqs.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“1551”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://github.com/jiarong/VirSorter2\">VirSorter2</a></li>\n<li><a href=\"https://www.protocols.io/view/viral-sequence-identification-sop-with-virsorter2-bwm5pc86\">Viral sequence identification SOP with VirSorter2 V.3</a></li>\n</ul>\n<div class=\"mermaid\">graph TD\n\tA [Reads] --&gt; B((MetaSpaDES))\n\tB --&gt; C [Contigs]\n\tC --&gt; D ((VirSorter))\n\tC --&gt; E ((VirFinder))\n\tE --&gt; F {Score &gt;&#x3D; 0.7 &amp; p &lt; 0.05}\n\tF -- YES --&gt; G [Virus]\n\tF -- NO --&gt; H [Contigs]\n\tD --&gt; G\n\tH --&gt; I ((CAT))\n\tI --&gt; J {&lt; 40%}\n\tJ -- YES --&gt; G\n\tJ -- NO --&gt; K [Not Virus]\n\tG --&gt; L ((Nucmer))\n\tL --&gt; M {Identity &gt;&#x3D; 95% &amp; Coverage &gt;&#x3D; 80%}\n\tM -- YES --&gt; N [Grouped]\n\tM -- NO --&gt; O [Not Grouped]\n\tG --&gt; P ((Prodigal))\n\tP --&gt; Q [Amino Acid Sequences]\n\tQ --&gt; R {Length &lt; 10 kb}\n\tR -- YES --&gt; S ((Blastp))\n\tR -- NO --&gt; T ((vConTACT2))\n\tS --&gt; U [Annotated Genes]\n\tT --&gt; U</div>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"ST179","path":"api/tags/ST179.json"},{"name":"宏病毒组","path":"api/tags/宏病毒组.json"}]}