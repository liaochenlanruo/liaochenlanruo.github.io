{"title":"宏病毒组分析流程1-VirSorter2","slug":"宏病毒组分析流程1-VirSorter2","date":"2021-12-02T01:35:30.000Z","updated":"2022-01-08T02:16:28.444Z","comments":true,"path":"api/articles/宏病毒组分析流程1-VirSorter2.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"安装软件\"><a class=\"markdownIt-Anchor\" href=\"#安装软件\"></a> 安装软件</h1>\n<ul>\n<li>\n<p>安装主程序及依赖</p>\n<div class=\"note default\">\n<ul>\n<li><a href=\"https://bitbucket.org/MAVERICLab/virsorter2/src/master\">VirSorter2</a> (version &gt;=2.2.3)</li>\n<li><a href=\"https://bitbucket.org/berkeleylab/checkv/src/master\">CheckV</a> (version &gt;=0.7.0)</li>\n<li><a href=\"https://github.com/shafferm/DRAM\">DRAMv</a> (version &gt;=1.2.0)</li>\n</ul>\n</div>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda create -n virome <span class=\"token assign-left variable\">virsorter</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> checkv dram\nconda activate virome<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>下载数据库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># vs2 db: db-vs2 ~ 10 min</span>\nvirsorter setup -d /new_data/hualin/db/db-vs2 -j <span class=\"token number\">50</span>\n\n<span class=\"token comment\"># checkv db: checkv-db-v1.0  &lt; 5 mins</span>\ncheckv download_database /new_data/hualin/db/checkv\n\n<span class=\"token comment\"># DRAMv: db-dramv ~5h and ~60GB of memory</span>\nDRAM-setup.py prepare_databases --skip_uniref --output_dir db-dramv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"预测\"><a class=\"markdownIt-Anchor\" href=\"#预测\"></a> 预测</h1>\n<ul>\n<li>\n<p>获取测试数据</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -O test.fa https://bitbucket.org/MAVERICLab/virsorter2/raw/15a21fa9c1ee1d2af52b0148b167292e549d356e/test/test-for-sop.fa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>运行 VirSorter2</p>\n<details class=\"info\"><summary>命令解析</summary><div>\n<ul>\n<li>首先以 0.5 的 score 阈值运行 VirSorter2 以保证最大的灵敏度。</li>\n<li>只关注噬菌体 (dsDNA and ssDNA phage)，可选 dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae。</li>\n<li>序列最小长度为 5000 bp，后续病毒分类的最低要求如此。</li>\n<li>可根据自己的 CPU 核心数自行调整 &quot;-j&quot;。</li>\n<li>&quot;--keep-original-seq&quot; 保留了环状和接近完整的病毒 contigs (score&gt;0.8 as a whole sequence)，后续将通过 checkV 修剪其尾端的潜在宿主基因并处理重复的环状 contigs 片段。</li>\n</ul>\n</div></details>\n<div class=\"note default\">\n<p>Time: 31m7.310s with a real dataset of 90.52 MB and 207,544 sequences</p>\n</div>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virsorter run --keep-original-seq -w vs2-pass1 -i test.fa --include-groups dsDNAphage,ssDNA --min-length <span class=\"token number\">5000</span>  --min-score <span class=\"token number\">0.5</span> -j <span class=\"token number\">50</span> all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<p>-w 指定输出目录<br />\n - i 指定输入序列<br />\n --min-length 过滤短序列<br />\n --min-score 分数阈值<br />\n --keep-original-seq 保留环状和接近完整的病毒 contigs<br />\n--include-groups 指定包含的病毒类型，用 “,” 分隔。可选：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br />\n-j 线程数<br />\n all 直接写上就可以</p>\n</div></details>\n<details class=\"success\"><summary>结果解析</summary><div>\n<ul>\n<li>\n<p>final-viral-combined.fa: 病毒序列</p>\n<ul>\n<li>鉴定为病毒的完整序列（标识为后缀 ||full）；</li>\n<li>鉴定为病毒的部分序列（用后缀 ||{i}_partial 标识）； {i} 可以是从 0 到该 Contig 中发现的最大病毒片段数的数字；</li>\n<li>带有<ruby>标志基因<rt>hallmark gene</rt></ruby>的短序列（少于两个基因）被鉴定为病毒（用后缀 ||lt2gene 标识）；</li>\n</ul>\n</li>\n<li>\n<p>final-viral-score.tsv: 每个病毒序列的评分跨组和一些关键特征，这可以用于进一步过滤</p>\n<ul>\n<li>sequence name</li>\n<li>score of each viral sequences across groups (多列)</li>\n<li>max score across groups</li>\n<li>max score group</li>\n<li>contig length</li>\n<li>hallmark gene count</li>\n<li>viral gene %</li>\n<li>nonviral gene %</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n  \t<table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n  \t    <tr>\n  \t\t<td>seqname</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>NCLDV</td>\n  \t\t<td>RNA</td>\n  \t\t<td>ssDNA</td>\n  \t\t<td>lavidaviridae</td>\n  \t\t<td>max_score</td>\n  \t\t<td>max_score_group</td>\n  \t\t<td>length</td>\n  \t\t<td>hallmark</td>\n  \t\t<td>viral</td>\n  \t\t<td>cellular</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_5_length_17317_cov_8.385876&#124;&#124;full</td>\n  \t\t<td>0.993</td>\n  \t\t<td>0.847</td>\n  \t\t<td>0.005</td>\n  \t\t<td>0.060</td>\n  \t\t<td>0.467</td>\n  \t\t<td>0.993</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>17315</td>\n  \t\t<td>2</td>\n  \t\t<td>64.700</td>\n  \t\t<td>5.900</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_6_length_16611_cov_115.615064&#124;&#124;full</td>\n  \t\t<td>0.920</td>\n  \t\t<td>0.207</td>\n  \t\t<td>0.035</td>\n  \t\t<td>0.087</td>\n  \t\t<td>0.053</td>\n  \t\t<td>0.920</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>16610</td>\n  \t\t<td>0</td>\n  \t\t<td>3.200</td>\n  \t\t<td>0.000</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_8_length_14848_cov_778.417157&#124;&#124;full</td>\n  \t\t<td>1.000</td>\n  \t\t<td>0.220</td>\n  \t\t<td>0.105</td>\n  \t\t<td>0.380</td>\n  \t\t<td>0.627</td>\n  \t\t<td>1.000</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>14848</td>\n  \t\t<td>15</td>\n  \t\t<td>100.000</td>\n  \t\t<td>0.000</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_16_length_12563_cov_14.331948&#124;&#124;full</td>\n  \t\t<td>0.973</td>\n  \t\t<td>0.200</td>\n  \t\t<td>0.165</td>\n  \t\t<td>0.273</td>\n  \t\t<td>0.227</td>\n  \t\t<td>0.973</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>12083</td>\n  \t\t<td>0</td>\n  \t\t<td>8.000</td>\n  \t\t<td>0.000</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_17_length_11885_cov_350.043956&#124;&#124;full</td>\n  \t\t<td>0.653</td>\n  \t\t<td>0.513</td>\n  \t\t<td>0.050</td>\n  \t\t<td>0.080</td>\n  \t\t<td>0.047</td>\n  \t\t<td>0.653</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>11885</td>\n  \t\t<td>0</td>\n  \t\t<td>9.100</td>\n  \t\t<td>0.000</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_21_length_11527_cov_216.405073&#124;&#124;full</td>\n  \t\t<td>0.620</td>\n  \t\t<td>0.407</td>\n  \t\t<td>0.000</td>\n  \t\t<td>0.013</td>\n  \t\t<td>0.060</td>\n  \t\t<td>0.620</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>11526</td>\n  \t\t<td>0</td>\n  \t\t<td>10.500</td>\n  \t\t<td>5.300</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_23_length_11316_cov_8.144303&#124;&#124;full</td>\n  \t\t<td>0.367</td>\n  \t\t<td>0.540</td>\n  \t\t<td>0.010</td>\n  \t\t<td>0.000</td>\n  \t\t<td>0.400</td>\n  \t\t<td>0.540</td>\n  \t\t<td>NCLDV</td>\n  \t\t<td>11313</td>\n  \t\t<td>1</td>\n  \t\t<td>23.100</td>\n  \t\t<td>7.700</td>\n  \t    </tr>\n  \t</table>\n  </div>\n<div class=\"note warning\">\n<p>不同病毒类群的分类器并非相互排斥，它们的<ruby>目标病毒序列空间<rt>target viral sequence space</rt></ruby>可能存在重叠，这意味着该信息不应被使用或当作<ruby>可靠的分类<rt>reliable taxonomic classification</rt></ruby>。VirSorter2 的用途仅限于病毒鉴定。</p>\n</div>\n<ul>\n<li>\n<p>final-viral-boundary.tsv: 带有边界信息的表 (与其他两个文件相比，可能有额外的记录，应该忽略)。</p>\n<p>only some of the columns in this file might be useful:</p>\n<ul>\n<li>seqname: original sequence name</li>\n<li>trim_orf_index_start, trim_orf_index_end: start and end ORF index on orignal sequence of identified viral sequence</li>\n<li>trim_bp_start, trim_bp_end: start and end position on orignal sequence of identified viral sequence</li>\n<li>trim_pr: score of final trimmed viral sequence</li>\n<li>partial: full sequence as viral or partial sequence as viral; this is defined when a full sequence has score &gt; score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)</li>\n<li>pr_full: score of the original sequence</li>\n<li>hallmark_cnt: hallmark gene count</li>\n<li>group: the classifier of viral group that gives high score; this should NOT be used as reliable classification</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n  \t<table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n  \t    <tr>\n  \t<td>seqname</td>\n  \t<td>trim_orf_index_start</td>\n  \t<td>trim_orf_index_end</td>\n  \t<td>trim_bp_start</td>\n  \t<td>trim_bp_end</td>\n  \t<td>trim_pr</td>\n  \t<td>trim_pr_max</td>\n  \t<td>prox_orf_index_start</td>\n  \t<td>prox_orf_index_end</td>\n  \t<td>prox_bp_start</td>\n  \t<td>prox_bp_end</td>\n  \t<td>prox_pr</td>\n  \t<td>prox_pr_max</td>\n  \t<td>partial</td>\n  \t<td>full_orf_index_start</td>\n  \t<td>full_orf_index_end</td>\n  \t<td>full_bp_start</td>\n  \t<td>full_bp_end</td>\n  \t<td>pr_full</td>\n  \t<td>arc</td>\n  \t<td>bac</td>\n  \t<td>euk</td>\n  \t<td>vir</td>\n  \t<td>mix</td>\n  \t<td>unaligned</td>\n  \t<td>hallmark_cnt</td>\n  \t<td>group</td>\n  \t<td>shape</td>\n  \t<td>seqname_new</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_999_length_4026_cov_7.610929</td>\n  \t<td>1</td>\n  \t<td>12</td>\n  \t<td>1</td>\n  \t<td>4025</td>\n  \t<td>0.547</td>\n  \t<td>0.547</td>\n  \t<td>1</td>\n  \t<td>12</td>\n  \t<td>1</td>\n  \t<td>4025</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>12</td>\n  \t<td>1</td>\n  \t<td>4025</td>\n  \t<td>0.547</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>100.0</td>\n  \t<td>0</td>\n  \t<td>dsDNAphage</td>\n  \t<td>linear</td>\n  \t<td>NODE_999_length_4026_cov_7.610929||full</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_9999_length_1276_cov_11.598690</td>\n  \t<td>1</td>\n  \t<td>3</td>\n  \t<td>3</td>\n  \t<td>1274</td>\n  \t<td>0.955</td>\n  \t<td>0.955</td>\n  \t<td>1</td>\n  \t<td>3</td>\n  \t<td>3</td>\n  \t<td>1274</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>3</td>\n  \t<td>3</td>\n  \t<td>1274</td>\n  \t<td>0.955</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>100.0</td>\n  \t<td>0</td>\n  \t<td>RNA</td>\n  \t<td>linear</td>\n  \t<td>NODE_9999_length_1276_cov_11.598690||full</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_99999_length_314_cov_4.000000</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>287</td>\n  \t<td>0.57</td>\n  \t<td>0.57</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>287</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>287</td>\n  \t<td>0.57</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>50.0</td>\n  \t<td>50.0</td>\n  \t<td>0</td>\n  \t<td>RNA</td>\n  \t<td>linear</td>\n  \t<td>NODE_99999_length_314_cov_4.000000||full</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_99992_length_314_cov_4.389961</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>275</td>\n  \t<td>0.747</td>\n  \t<td>0.747</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>275</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>275</td>\n  \t<td>0.747</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>100.0</td>\n  \t<td>0</td>\n  \t<td>ssDNA</td>\n  \t<td>linear</td>\n  \t<td>NODE_99992_length_314_cov_4.389961||full</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_9997_length_1276_cov_44.113841</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>1240</td>\n  \t<td>0.98</td>\n  \t<td>0.98</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>1240</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>1240</td>\n  \t<td>0.98</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>50.0</td>\n  \t<td>50.0</td>\n  \t<td>0</td>\n  \t<td>RNA</td>\n  \t<td>linear</td>\n  \t<td>NODE_9997_length_1276_cov_44.113841||full</td>\n  \t    </tr>\n  \t</table>\n  </div>\n<div class=\"note warning\">\n<p>在<ruby>原病毒<rt>provirus </rt></ruby>提取过程中，为了获得更好的敏感性，VirSorter2 有时会高估病毒序列的大小。建议清除这些前病毒预测，以去除预测病毒区域边缘的潜在宿主基因，例如使用<a href=\"https://bitbucket.org/berkeleylab/checkv\"> CheckV</a> 等工具。</p>\n</div>\n<div class=\"note primary\">\n<p>How to pick a score cutoff?</p>\n</div>\n<p>一般来说，score&gt;0.9 的人为高置信度。得分在 0.5 到 0.9 之间的可能是病毒和非病毒的混合体。很难确定区分病毒和非病毒的最佳分数，因为它取决于宿主序列和未知序列的百分比。因此，<span class=\"rainbow\">建议使用默认截止值 (0.5) 以获得最大灵敏度，然后使用 checkV 应用质量检查步骤以消除误报（预测完整性除外）</span>。<mark>请继续下面的流程。</mark></p>\n</div></details>\n</li>\n<li>\n<p>运行 checkV</p>\n<details class=\"info\"><summary>命令解析</summary><div>\n<p>Score 阈值设为 0.5 时，VirSorter2 结果中可能存在一些非病毒序列或区域。因此，使用 CheckV 对 VirSorter2 的结果进行质量控制，并修剪在<ruby>原病毒<rt>proviruses</rt></ruby>末端留下的潜在宿主区域。可以根据 CPU 内核的可用性调整 - t 选项。</p>\n</div></details>\n<div class=\"note default\">\n<p>Time: 0m28.795s</p>\n</div>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">checkv end_to_end vs2-pass1/final-viral-combined.fa checkv -t <span class=\"token number\">50</span> -d /new_data/hualin/db/checkv/checkv-db-v1.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>结果解析</summary><div>\n<ul>\n<li>./checkv/</li>\n<li>completeness.tsv</li>\n<li>complete_genomes.tsv</li>\n<li>contamination.tsv</li>\n<li>proviruses.fna</li>\n<li>quality_summary.tsv</li>\n<li>viruses.fna</li>\n<li>tmp</li>\n</ul>\n</div></details>\n</li>\n<li>\n<p>再次运行 VirSorter2</p>\n<details class=\"info\"><summary>命令解析</summary><div>\n<ul>\n<li>再次利用 checkV-trimmed 序列运行 VirSorter2 以得到 &quot;affi-contigs.tab&quot; 文件，该文件将作为 DRAMv 的输入以鉴定 AMGs。</li>\n<li>注意 &quot;--seqname-suffix-off&quot; 选项保留了原始的输入序列名称，因为我们确信在本步骤中，不可能从同一条 contig 中获得 &gt; 1 个原病毒。</li>\n<li>“--viral-gene-enrich-off” 选项关闭了病毒基因要多于宿主基因的要求，以确保 VirSorter2 在这一步不做任何筛查。</li>\n<li>以上两个选项需要 VirSorter2 版本 &gt;=2.2.1。</li>\n<li>可选所有病毒：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae</li>\n</ul>\n</div></details>\n<div class=\"note default\">\n<p>Time: 18m30.896s</p>\n</div>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> checkv/proviruses.fna checkv/viruses.fna <span class=\"token operator\">></span> checkv/combined.fna\n\nvirsorter run --seqname-suffix-off --viral-gene-enrich-off --provirus-off --prep-for-dramv -i checkv/combined.fna -w vs2-pass2 --include-groups dsDNAphage,ssDNA --min-length <span class=\"token number\">5000</span> --min-score <span class=\"token number\">0.5</span> -j <span class=\"token number\">50</span> all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<details class=\"success\"><summary>结果解析</summary><div>\n<ul>\n<li>./vs2-pass2/</li>\n<li>inal-viral-combined.fa</li>\n<li>final-viral-score.tsv</li>\n<li>for-dramv/final-viral-combined-for-dramv.fa</li>\n<li>for-dramv/viral-affi-contigs-for-dramv.tab</li>\n</ul>\n</div></details>\n</li>\n<li>\n<p>运行 DRAMv</p>\n<details class=\"info\"><summary>命令解析</summary><div>\n<p>使用 DRAMv 注释鉴定的病毒序列，以用于后续<ruby>人工整理<rt>manual curation</rt></ruby>。可通过 &quot;--threads&quot; 控制调用的 CPU 核心数。</p>\n</div></details>\n<div class=\"note default\">\n<p>Time: 8.81h</p>\n</div>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># step 1 annotate 耗时步骤，建议投后台运行</span>\nDRAM-v.py annotate -i vs2-pass2/for-dramv/final-viral-combined-for-dramv.fa -v vs2-pass2/for-dramv/viral-affi-contigs-for-dramv.tab -o dramv-annotate --skip_trnascan --threads <span class=\"token number\">50</span> --min_contig_size <span class=\"token number\">1000</span>\n\n<span class=\"token comment\">#step 2 summarize anntotations</span>\nDRAM-v.py distill -i dramv-annotate/annotations.tsv -o dramv-distill<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<details class=\"success\"><summary>结果解析</summary><div>\n<ul>\n<li>dramv-annotate/annotations.tsv</li>\n<li>dramv-annotate/genbank 各条 contig 的 gbk 文件</li>\n<li>dramv-annotate/genes.faa</li>\n<li>dramv-annotate/genes.fna</li>\n<li>dramv-annotate/genes.gff</li>\n<li>dramv-annotate/rrnas.tsv</li>\n<li>dramv-annotate/scaffolds.fna</li>\n<li>dramv-annotate/vMAGs 各条 contig 的 fasta 文件</li>\n</ul>\n</div></details>\n</li>\n</ul>\n<h1 id=\"过滤\"><a class=\"markdownIt-Anchor\" href=\"#过滤\"></a> 过滤</h1>\n<h2 id=\"依据病毒和宿主基因数-分数-hallmark基因数以及contig长度进行筛选\"><a class=\"markdownIt-Anchor\" href=\"#依据病毒和宿主基因数-分数-hallmark基因数以及contig长度进行筛选\"></a> 依据病毒和宿主基因数、分数、hallmark 基因数以及 contig 长度进行筛选</h2>\n<p>来自 checkV 的病毒和宿主基因计数可用于假阳性筛查。由于 checkV 在预测病毒基因方面非常保守，那些由 checkV 预测的病毒基因的序列应该是病毒的，而那些没有被 checkV 预测到病毒基因的序列更可能是非病毒的。</p>\n<p>基于我们对土壤宏基因组的基准测试，(1) 那些没有预测到病毒和宿主基因的序列是病毒；(2) 没有病毒基因但有 2 个或 2 个以上宿主基因的大多数为非病毒基因；(3) 那些没有病毒基因和具有 1 个宿主基因的很难区分其为病毒还是非病毒（可能是可移动的基因元件，类似于 VirSorter1 中的第 3 类），除非手动检查，否则应该丢弃。</p>\n<p>只选择那些大于 10kb 的用于手动检查，因为太短的无法分辨。还有那些 VirSorter2 得分≥0.95 或 hallmark 基因计数 &gt; 2 的大多数是病毒。<mark>这些经验筛选标准总结如下：</mark></p>\n<div class=\"note success\">\n<p>Keep1: viral_gene &gt;0</p>\n</div>\n<div class=\"note success\">\n<p>Keep2: viral_gene =0 AND (host_gene =0 OR score &gt;=0.95 OR hallmark &gt;2)</p>\n</div>\n<div class=\"note warning\">\n<p>Manual check: (NOT in Keep1 OR Keep2) AND viral_gene =0 AND host_gene =1 AND length &gt;=10kb</p>\n</div>\n<div class=\"note danger\">\n<p>Discard: the rest</p>\n</div>\n<p><span class=\"aqua\">要查看病毒基因、宿主基因、评分和<ruby>序列的特征标记<rt>hallmark of sequences</rt></ruby>，您可以合并 &quot;vs2-pass1/final-viral-score.tsv&quot; 和 &quot;checkv/contamination.tsv&quot;，并在电子表格中过滤。</span>本尊为各位提供了 Perl 脚本<a href=\"https://github.com/liaochenlanruo/myScripts/tree/main/1551%20Virome\"> cat_tsv.pl</a> 以实现机动合并！直接在终端运行 <code>perl cat_tsv.pl</code>  即可得到合并后的文件 <code>forCheck.txt</code> 。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$head_checkv</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$head_pass1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$count</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"checkv/contamination.tsv\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$count</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$head_checkv</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\n\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"vs2-pass1/final-viral-score.tsv\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">forCheck.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$num</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$head_pass1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$head_pass1\\t$head_checkv\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@line</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$_\\t$hash&#123;$line[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$_\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\nclose OUT<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来按照上面的四条规则对 <code>forCheck.txt</code>  进行拆分，得到病毒 <code>Virus.txt</code> 、手动核对 <code>Manual_check.txt</code>  及抛弃的 <code>Discard.txt</code> 。可以自己看，也可以用 <code>get_virus.pl</code>  来完成。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$count</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"forCheck.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen VIRUS<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Virus.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen MANUAL<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Manual_check.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen DISCARD<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Discard.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$count</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> MANUAL <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> DISCARD <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># virus keep1</span>\n\t\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># virus keep2</span>\n\t\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># virus keep2</span>\n\t\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># virus keep2</span>\n\t\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># manual check</span>\n\t\t\t<span class=\"token keyword\">print</span> MANUAL <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># discard</span>\n\t\t\t<span class=\"token keyword\">print</span> DISCARD <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\nclose VIRUS<span class=\"token punctuation\">;</span>\nclose MANUAL<span class=\"token punctuation\">;</span>\nclose DISCARD<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>用法：脚本与 <code>forCheck.txt</code>  放在同一目录，终端运行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl get_virus.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>对于 <code>Manual_check.txt</code>  中的序列，需要用眼睛和脑袋去 <code>dramv-annotate/annotations.tsv</code>  中找注释信息，然后根据下面的方法判断其属于病毒还是细胞，如果是病毒，就将其所在的那行信息复制到 <code>Virus.txt</code>  文件的末尾，并保存。</p>\n<h2 id=\"依据dramv注释筛选\"><a class=\"markdownIt-Anchor\" href=\"#依据dramv注释筛选\"></a> 依据 DRAMv 注释筛选</h2>\n<p>在病毒和宿主中都有一些共同的基因 (如<ruby>脂多糖<rp> (</rp><rt>LPS</rt><rp>)</rp></ruby> 相关) 和移动元件，这些基因可能导致上述 “Keep2” 类别中的假阳性。因此，<ins class=\"dot\">要谨慎对待带有这些基因的 contigs</ins>。专家们已经编制了一份与此相关的<span class=\"red\"> “可疑”</span> 基因列表。我们可以使用 “Keep2” 类别中的 contigs 对 DRAMv 表取子集，并在 DRAMv 子集表中筛选 “可疑” 基因 (忽略大小写，例如在 “grep” 中使用 “-i” 选项)，然后将带有这些基因的 contigs 放入 “手动检查” 类别中。</p>\n<h2 class=\"tabset\" id=\"手动检查\"><a class=\"markdownIt-Anchor\" href=\"#手动检查\"></a> 手动检查</h2>\n<p>对于存在于<ruby>“手动检查”<rt>manual check</rt></ruby>类别中的序列，可以观察其在 &quot;dramv-annotate/annotations.tsv&quot; 中的注释信息。本步骤很难标准化，下面是一些经验之谈：</p>\n<div class=\"tabs\" id=\"tab-id\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#tab-id-1\">判定contig为病毒的标准</a></li><li class=\"tab\"><a class=\"#tab-id-2\">判定contig为非病毒的标准</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-id-1\"><div class=\"tab\" data-id=\"id1\" data-title=\"判定contig为病毒的标准\">\n<ul>\n<li>结构基因、hallmark 基因、<ruby>注释缺失或假设性富集<rt>depletion in annotations or enrichment for hypotheticals</rt> (~10% 的基因具有 non-hypothetical 注释)。</li>\n<li>缺乏 hallmarks，但 &gt;=50% 已注释的基因为病毒，且其中至少一半以上的 viral bitcore &gt;100，且 contig 的长度 &lt; 50kb。</li>\n<li>Provirus: <ruby>整合酶 / 重组酶 / 切除酶 / 阻遏子<rt>Integrase/recombinase/excisionase/repressor</rt></ruby>，在一侧富集了病毒基因。</li>\n<li>Provirus: 基因组中存在 “break”：两个基因之间的<ruby>间隙<rt>gap</rt></ruby>对应于一个<ruby>链开关<rt>strand switch</rt></ruby>，更高的编码密度，注释缺失，以及在一侧噬菌体基因的富集。</li>\n<li><ruby>仅有～1-3 个基因有注释，但至少一半命中病毒，且命中基因的 bitscore 不超过病毒 bitscore 的 150% ，<rt>Few annotations only ~1-3 genes, but with at least half hitting to viruses, and where the genes hitting cells have a bitscore no more than 150% that of the viral bitscores</rt></ruby> <ruby>且 / 或病毒的 bitscore &gt;100 <rt> and/or viral bitscores are &gt;100</rt></ruby>。</li>\n<li>LPS (脂多糖) <ruby>外观区域对病毒基因的命中率也非常高<rt>looking regions if also has very strong hits to viral genes</rt></ruby>，bitscore&gt;100。</li>\n</ul>\n</div></div><div class=\"tab-pane\" id=\"tab-id-2\"><div class=\"tab\" data-id=\"id1\" data-title=\"判定contig为非病毒的标准\">\n<ul>\n<li><ruby>细胞样基因<rt>cellular like genes</rt></ruby>是病毒基因的 3 倍，几乎所有基因都有注释，没有基因只命中病毒，也没有病毒<ruby>标志基因<rt>hallmark genes</rt></ruby>。</li>\n<li>缺乏任何病毒 hallmark genes，且长度 &gt;50kb。</li>\n<li>许多明显的细胞基因字符串，没有其他病毒标志基因。 在基准测试中遇到的例子包括 1) CRISPR Cas, 2) ABC transporters, 3) Sporulation proteins, 4) Two-component systems, 5) Secretion system。这其中一些可能是由病毒编码的，但在没有进一步证据的情况下并不表明是病毒 contig。</li>\n<li>多个质粒基因或转座酶，但没有明确的只命中病毒的基因。</li>\n<li>注释信息很少，仅有～1-3 个基因同时命中了病毒和细胞基因，但有 stronger bitscores 支持其为细胞基因。</li>\n<li><ruby>没有强有力的命中病毒的脂多糖样区域<rt>LPS looking regions if no strong viral hits</rt></ruby>。富含通常与脂多糖相关的基因，如<ruby>外聚酶<rp> (</rp><rt>epimerases</rt><rp>)</rp></ruby>、<ruby>糖<rp> (</rp><rt>glycosyl</rt><rp>)</rp> 基转移酶<rp> (</rp><rt>transferases</rt><rp>)</rp></ruby>、<ruby>酰基转移酶<rp> (</rp><rt>acyltransferase</rt><rp>)</rp></ruby>、<ruby>短<rp> (</rp><rt>dehydrogenase</rt><rp>)</rp> 链<rp> (</rp><rt>reductase</rt><rp>)</rp> 脱氢酶<rp> (</rp><rt>short-ch</rt><rp>)</rp>/<rt></rt> 还原酶<rp> (</rp><rt>ain</rt><rp>)</rp></ruby>、<ruby>脱水酶<rp> (</rp><rt>dehydratase</rt><rp>)</rp></ruby>。</li>\n<li>注释为 Type IV 和 / 或 Type VI 分析系统，并被非病毒基因围绕。</li>\n<li>注释信息很少，仅有～1-3 个基因全部命中细胞基因 (即使 bitscore &lt;100) ，且没有命中病毒的基因。</li>\n</ul>\n</div></div></div></div>\n<div class=\"note warning\">\n<p>最后，用户要注意，VirSorter 2 和 / 或 checkV 预测的任何原病毒边界只是一个近似的估计 (寻找 “ends” 在前噬菌体发现中是一个相当具有挑战性的问题)，也需要仔细地手工检查，特别是在 AMG 研究中。</p>\n</div>\n<p>最终我们需要拿到病毒 contig 的序列，用 <code>get_virus_seqs.pl</code>  完成。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/usr/bin/perl</span>\nuse strict<span class=\"token punctuation\">;</span>\nuse warnings<span class=\"token punctuation\">;</span>\n\nmy %hash<span class=\"token punctuation\">;</span>\n<span class=\"token function\">open</span> IN, <span class=\"token string\">\"checkv/combined.fna\"</span> <span class=\"token operator\">||</span> die<span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">local</span> $/ <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span>IN<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>IN<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\tmy <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span>, <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split<span class=\"token punctuation\">(</span>/<span class=\"token punctuation\">\\</span>n/, <span class=\"token variable\">$_</span>, <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmy <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span>/<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">|</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">|</span>.+/<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>else <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$header</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin class-name\">local</span> $/ <span class=\"token operator\">=</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">open</span> IN, <span class=\"token string\">\"Virus.txt\"</span> <span class=\"token operator\">||</span> die<span class=\"token punctuation\">;</span>\n<span class=\"token function\">open</span> OUT, <span class=\"token string\">\">Virus.fas\"</span> <span class=\"token operator\">||</span> die<span class=\"token punctuation\">;</span>\n<span class=\"token function\">open</span> NO, <span class=\"token string\">\">NoSeqs.ids\"</span> <span class=\"token operator\">||</span> die<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span>IN<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>IN<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\tmy @lines <span class=\"token operator\">=</span> <span class=\"token function\">split</span> /<span class=\"token punctuation\">\\</span>t/<span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=~</span>/<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">|</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">|</span>/<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tprint OUT <span class=\"token string\">\"><span class=\"token variable\">$lines</span>[0]<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token variable\">$hash</span>&#123;<span class=\"token variable\">$1</span>&#125;<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>else <span class=\"token punctuation\">&#123;</span>\n\t\tprint NO <span class=\"token string\">\"<span class=\"token variable\">$lines</span>[0]<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\nclose OUT<span class=\"token punctuation\">;</span>\nclose NO<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>用法：终端运行如下命令即可得到序列文件 <code>Virus.fas</code> 。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\">perl get_virus_seqs<span class=\"token operator\">.</span>pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “1551” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://github.com/jiarong/VirSorter2\">VirSorter2</a></li>\n<li><a href=\"https://www.protocols.io/view/viral-sequence-identification-sop-with-virsorter2-bwm5pc86\">Viral sequence identification SOP with VirSorter2 V.3</a></li>\n</ul>\n<div class=\"mermaid\">graph TD\n\tA [Reads] --&gt; B((MetaSpaDES))\n\tB --&gt; C [Contigs]\n\tC --&gt; D ((VirSorter))\n\tC --&gt; E ((VirFinder))\n\tE --&gt; F {Score &gt;&#x3D; 0.7 &amp; p &lt; 0.05}\n\tF -- YES --&gt; G [Virus]\n\tF -- NO --&gt; H [Contigs]\n\tD --&gt; G\n\tH --&gt; I ((CAT))\n\tI --&gt; J {&lt; 40%}\n\tJ -- YES --&gt; G\n\tJ -- NO --&gt; K [Not Virus]\n\tG --&gt; L ((Nucmer))\n\tL --&gt; M {Identity &gt;&#x3D; 95% &amp; Coverage &gt;&#x3D; 80%}\n\tM -- YES --&gt; N [Grouped]\n\tM -- NO --&gt; O [Not Grouped]\n\tG --&gt; P ((Prodigal))\n\tP --&gt; Q [Amino Acid Sequences]\n\tQ --&gt; R {Length &lt; 10 kb}\n\tR -- YES --&gt; S ((Blastp))\n\tR -- NO --&gt; T ((vConTACT2))\n\tS --&gt; U [Annotated Genes]\n\tT --&gt; U</div>\n","more":"<h1 id=\"安装软件\"><a class=\"markdownIt-Anchor\" href=\"#安装软件\"></a> 安装软件</h1>\n<ul>\n<li>\n<p>安装主程序及依赖</p>\n<div class=\"note default\">\n<ul>\n<li><a href=\"https://bitbucket.org/MAVERICLab/virsorter2/src/master\">VirSorter2</a> (version &gt;=2.2.3)</li>\n<li><a href=\"https://bitbucket.org/berkeleylab/checkv/src/master\">CheckV</a> (version &gt;=0.7.0)</li>\n<li><a href=\"https://github.com/shafferm/DRAM\">DRAMv</a> (version &gt;=1.2.0)</li>\n</ul>\n</div>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda create -n virome <span class=\"token assign-left variable\">virsorter</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> checkv dram\nconda activate virome<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>下载数据库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># vs2 db: db-vs2 ~ 10 min</span>\nvirsorter setup -d /new_data/hualin/db/db-vs2 -j <span class=\"token number\">50</span>\n\n<span class=\"token comment\"># checkv db: checkv-db-v1.0  &lt; 5 mins</span>\ncheckv download_database /new_data/hualin/db/checkv\n\n<span class=\"token comment\"># DRAMv: db-dramv ~5h and ~60GB of memory</span>\nDRAM-setup.py prepare_databases --skip_uniref --output_dir db-dramv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"预测\"><a class=\"markdownIt-Anchor\" href=\"#预测\"></a> 预测</h1>\n<ul>\n<li>\n<p>获取测试数据</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -O test.fa https://bitbucket.org/MAVERICLab/virsorter2/raw/15a21fa9c1ee1d2af52b0148b167292e549d356e/test/test-for-sop.fa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>运行 VirSorter2</p>\n<details class=\"info\"><summary>命令解析</summary><div>\n<ul>\n<li>首先以 0.5 的 score 阈值运行 VirSorter2 以保证最大的灵敏度。</li>\n<li>只关注噬菌体 (dsDNA and ssDNA phage)，可选 dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae。</li>\n<li>序列最小长度为 5000 bp，后续病毒分类的最低要求如此。</li>\n<li>可根据自己的 CPU 核心数自行调整 &quot;-j&quot;。</li>\n<li>&quot;--keep-original-seq&quot; 保留了环状和接近完整的病毒 contigs (score&gt;0.8 as a whole sequence)，后续将通过 checkV 修剪其尾端的潜在宿主基因并处理重复的环状 contigs 片段。</li>\n</ul>\n</div></details>\n<div class=\"note default\">\n<p>Time: 31m7.310s with a real dataset of 90.52 MB and 207,544 sequences</p>\n</div>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">virsorter run --keep-original-seq -w vs2-pass1 -i test.fa --include-groups dsDNAphage,ssDNA --min-length <span class=\"token number\">5000</span>  --min-score <span class=\"token number\">0.5</span> -j <span class=\"token number\">50</span> all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<p>-w 指定输出目录<br />\n - i 指定输入序列<br />\n --min-length 过滤短序列<br />\n --min-score 分数阈值<br />\n --keep-original-seq 保留环状和接近完整的病毒 contigs<br />\n--include-groups 指定包含的病毒类型，用 “,” 分隔。可选：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br />\n-j 线程数<br />\n all 直接写上就可以</p>\n</div></details>\n<details class=\"success\"><summary>结果解析</summary><div>\n<ul>\n<li>\n<p>final-viral-combined.fa: 病毒序列</p>\n<ul>\n<li>鉴定为病毒的完整序列（标识为后缀 ||full）；</li>\n<li>鉴定为病毒的部分序列（用后缀 ||{i}_partial 标识）； {i} 可以是从 0 到该 Contig 中发现的最大病毒片段数的数字；</li>\n<li>带有<ruby>标志基因<rt>hallmark gene</rt></ruby>的短序列（少于两个基因）被鉴定为病毒（用后缀 ||lt2gene 标识）；</li>\n</ul>\n</li>\n<li>\n<p>final-viral-score.tsv: 每个病毒序列的评分跨组和一些关键特征，这可以用于进一步过滤</p>\n<ul>\n<li>sequence name</li>\n<li>score of each viral sequences across groups (多列)</li>\n<li>max score across groups</li>\n<li>max score group</li>\n<li>contig length</li>\n<li>hallmark gene count</li>\n<li>viral gene %</li>\n<li>nonviral gene %</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n  \t<table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n  \t    <tr>\n  \t\t<td>seqname</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>NCLDV</td>\n  \t\t<td>RNA</td>\n  \t\t<td>ssDNA</td>\n  \t\t<td>lavidaviridae</td>\n  \t\t<td>max_score</td>\n  \t\t<td>max_score_group</td>\n  \t\t<td>length</td>\n  \t\t<td>hallmark</td>\n  \t\t<td>viral</td>\n  \t\t<td>cellular</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_5_length_17317_cov_8.385876&#124;&#124;full</td>\n  \t\t<td>0.993</td>\n  \t\t<td>0.847</td>\n  \t\t<td>0.005</td>\n  \t\t<td>0.060</td>\n  \t\t<td>0.467</td>\n  \t\t<td>0.993</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>17315</td>\n  \t\t<td>2</td>\n  \t\t<td>64.700</td>\n  \t\t<td>5.900</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_6_length_16611_cov_115.615064&#124;&#124;full</td>\n  \t\t<td>0.920</td>\n  \t\t<td>0.207</td>\n  \t\t<td>0.035</td>\n  \t\t<td>0.087</td>\n  \t\t<td>0.053</td>\n  \t\t<td>0.920</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>16610</td>\n  \t\t<td>0</td>\n  \t\t<td>3.200</td>\n  \t\t<td>0.000</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_8_length_14848_cov_778.417157&#124;&#124;full</td>\n  \t\t<td>1.000</td>\n  \t\t<td>0.220</td>\n  \t\t<td>0.105</td>\n  \t\t<td>0.380</td>\n  \t\t<td>0.627</td>\n  \t\t<td>1.000</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>14848</td>\n  \t\t<td>15</td>\n  \t\t<td>100.000</td>\n  \t\t<td>0.000</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_16_length_12563_cov_14.331948&#124;&#124;full</td>\n  \t\t<td>0.973</td>\n  \t\t<td>0.200</td>\n  \t\t<td>0.165</td>\n  \t\t<td>0.273</td>\n  \t\t<td>0.227</td>\n  \t\t<td>0.973</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>12083</td>\n  \t\t<td>0</td>\n  \t\t<td>8.000</td>\n  \t\t<td>0.000</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_17_length_11885_cov_350.043956&#124;&#124;full</td>\n  \t\t<td>0.653</td>\n  \t\t<td>0.513</td>\n  \t\t<td>0.050</td>\n  \t\t<td>0.080</td>\n  \t\t<td>0.047</td>\n  \t\t<td>0.653</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>11885</td>\n  \t\t<td>0</td>\n  \t\t<td>9.100</td>\n  \t\t<td>0.000</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_21_length_11527_cov_216.405073&#124;&#124;full</td>\n  \t\t<td>0.620</td>\n  \t\t<td>0.407</td>\n  \t\t<td>0.000</td>\n  \t\t<td>0.013</td>\n  \t\t<td>0.060</td>\n  \t\t<td>0.620</td>\n  \t\t<td>dsDNAphage</td>\n  \t\t<td>11526</td>\n  \t\t<td>0</td>\n  \t\t<td>10.500</td>\n  \t\t<td>5.300</td>\n  \t    </tr>\n  \t    <tr>\n  \t\t<td>NODE_23_length_11316_cov_8.144303&#124;&#124;full</td>\n  \t\t<td>0.367</td>\n  \t\t<td>0.540</td>\n  \t\t<td>0.010</td>\n  \t\t<td>0.000</td>\n  \t\t<td>0.400</td>\n  \t\t<td>0.540</td>\n  \t\t<td>NCLDV</td>\n  \t\t<td>11313</td>\n  \t\t<td>1</td>\n  \t\t<td>23.100</td>\n  \t\t<td>7.700</td>\n  \t    </tr>\n  \t</table>\n  </div>\n<div class=\"note warning\">\n<p>不同病毒类群的分类器并非相互排斥，它们的<ruby>目标病毒序列空间<rt>target viral sequence space</rt></ruby>可能存在重叠，这意味着该信息不应被使用或当作<ruby>可靠的分类<rt>reliable taxonomic classification</rt></ruby>。VirSorter2 的用途仅限于病毒鉴定。</p>\n</div>\n<ul>\n<li>\n<p>final-viral-boundary.tsv: 带有边界信息的表 (与其他两个文件相比，可能有额外的记录，应该忽略)。</p>\n<p>only some of the columns in this file might be useful:</p>\n<ul>\n<li>seqname: original sequence name</li>\n<li>trim_orf_index_start, trim_orf_index_end: start and end ORF index on orignal sequence of identified viral sequence</li>\n<li>trim_bp_start, trim_bp_end: start and end position on orignal sequence of identified viral sequence</li>\n<li>trim_pr: score of final trimmed viral sequence</li>\n<li>partial: full sequence as viral or partial sequence as viral; this is defined when a full sequence has score &gt; score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)</li>\n<li>pr_full: score of the original sequence</li>\n<li>hallmark_cnt: hallmark gene count</li>\n<li>group: the classifier of viral group that gives high score; this should NOT be used as reliable classification</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n  \t<table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n  \t    <tr>\n  \t<td>seqname</td>\n  \t<td>trim_orf_index_start</td>\n  \t<td>trim_orf_index_end</td>\n  \t<td>trim_bp_start</td>\n  \t<td>trim_bp_end</td>\n  \t<td>trim_pr</td>\n  \t<td>trim_pr_max</td>\n  \t<td>prox_orf_index_start</td>\n  \t<td>prox_orf_index_end</td>\n  \t<td>prox_bp_start</td>\n  \t<td>prox_bp_end</td>\n  \t<td>prox_pr</td>\n  \t<td>prox_pr_max</td>\n  \t<td>partial</td>\n  \t<td>full_orf_index_start</td>\n  \t<td>full_orf_index_end</td>\n  \t<td>full_bp_start</td>\n  \t<td>full_bp_end</td>\n  \t<td>pr_full</td>\n  \t<td>arc</td>\n  \t<td>bac</td>\n  \t<td>euk</td>\n  \t<td>vir</td>\n  \t<td>mix</td>\n  \t<td>unaligned</td>\n  \t<td>hallmark_cnt</td>\n  \t<td>group</td>\n  \t<td>shape</td>\n  \t<td>seqname_new</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_999_length_4026_cov_7.610929</td>\n  \t<td>1</td>\n  \t<td>12</td>\n  \t<td>1</td>\n  \t<td>4025</td>\n  \t<td>0.547</td>\n  \t<td>0.547</td>\n  \t<td>1</td>\n  \t<td>12</td>\n  \t<td>1</td>\n  \t<td>4025</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>12</td>\n  \t<td>1</td>\n  \t<td>4025</td>\n  \t<td>0.547</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>100.0</td>\n  \t<td>0</td>\n  \t<td>dsDNAphage</td>\n  \t<td>linear</td>\n  \t<td>NODE_999_length_4026_cov_7.610929||full</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_9999_length_1276_cov_11.598690</td>\n  \t<td>1</td>\n  \t<td>3</td>\n  \t<td>3</td>\n  \t<td>1274</td>\n  \t<td>0.955</td>\n  \t<td>0.955</td>\n  \t<td>1</td>\n  \t<td>3</td>\n  \t<td>3</td>\n  \t<td>1274</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>3</td>\n  \t<td>3</td>\n  \t<td>1274</td>\n  \t<td>0.955</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>100.0</td>\n  \t<td>0</td>\n  \t<td>RNA</td>\n  \t<td>linear</td>\n  \t<td>NODE_9999_length_1276_cov_11.598690||full</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_99999_length_314_cov_4.000000</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>287</td>\n  \t<td>0.57</td>\n  \t<td>0.57</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>287</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>287</td>\n  \t<td>0.57</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>50.0</td>\n  \t<td>50.0</td>\n  \t<td>0</td>\n  \t<td>RNA</td>\n  \t<td>linear</td>\n  \t<td>NODE_99999_length_314_cov_4.000000||full</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_99992_length_314_cov_4.389961</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>275</td>\n  \t<td>0.747</td>\n  \t<td>0.747</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>275</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>275</td>\n  \t<td>0.747</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>100.0</td>\n  \t<td>0</td>\n  \t<td>ssDNA</td>\n  \t<td>linear</td>\n  \t<td>NODE_99992_length_314_cov_4.389961||full</td>\n  \t    </tr>\n  \t    <tr>\n  \t<td>NODE_9997_length_1276_cov_44.113841</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>1240</td>\n  \t<td>0.98</td>\n  \t<td>0.98</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>1240</td>\n  \t<td>nan</td>\n  \t<td>nan</td>\n  \t<td>0</td>\n  \t<td>1</td>\n  \t<td>2</td>\n  \t<td>1</td>\n  \t<td>1240</td>\n  \t<td>0.98</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>0.0</td>\n  \t<td>50.0</td>\n  \t<td>50.0</td>\n  \t<td>0</td>\n  \t<td>RNA</td>\n  \t<td>linear</td>\n  \t<td>NODE_9997_length_1276_cov_44.113841||full</td>\n  \t    </tr>\n  \t</table>\n  </div>\n<div class=\"note warning\">\n<p>在<ruby>原病毒<rt>provirus </rt></ruby>提取过程中，为了获得更好的敏感性，VirSorter2 有时会高估病毒序列的大小。建议清除这些前病毒预测，以去除预测病毒区域边缘的潜在宿主基因，例如使用<a href=\"https://bitbucket.org/berkeleylab/checkv\"> CheckV</a> 等工具。</p>\n</div>\n<div class=\"note primary\">\n<p>How to pick a score cutoff?</p>\n</div>\n<p>一般来说，score&gt;0.9 的人为高置信度。得分在 0.5 到 0.9 之间的可能是病毒和非病毒的混合体。很难确定区分病毒和非病毒的最佳分数，因为它取决于宿主序列和未知序列的百分比。因此，<span class=\"rainbow\">建议使用默认截止值 (0.5) 以获得最大灵敏度，然后使用 checkV 应用质量检查步骤以消除误报（预测完整性除外）</span>。<mark>请继续下面的流程。</mark></p>\n</div></details>\n</li>\n<li>\n<p>运行 checkV</p>\n<details class=\"info\"><summary>命令解析</summary><div>\n<p>Score 阈值设为 0.5 时，VirSorter2 结果中可能存在一些非病毒序列或区域。因此，使用 CheckV 对 VirSorter2 的结果进行质量控制，并修剪在<ruby>原病毒<rt>proviruses</rt></ruby>末端留下的潜在宿主区域。可以根据 CPU 内核的可用性调整 - t 选项。</p>\n</div></details>\n<div class=\"note default\">\n<p>Time: 0m28.795s</p>\n</div>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">checkv end_to_end vs2-pass1/final-viral-combined.fa checkv -t <span class=\"token number\">50</span> -d /new_data/hualin/db/checkv/checkv-db-v1.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>结果解析</summary><div>\n<ul>\n<li>./checkv/</li>\n<li>completeness.tsv</li>\n<li>complete_genomes.tsv</li>\n<li>contamination.tsv</li>\n<li>proviruses.fna</li>\n<li>quality_summary.tsv</li>\n<li>viruses.fna</li>\n<li>tmp</li>\n</ul>\n</div></details>\n</li>\n<li>\n<p>再次运行 VirSorter2</p>\n<details class=\"info\"><summary>命令解析</summary><div>\n<ul>\n<li>再次利用 checkV-trimmed 序列运行 VirSorter2 以得到 &quot;affi-contigs.tab&quot; 文件，该文件将作为 DRAMv 的输入以鉴定 AMGs。</li>\n<li>注意 &quot;--seqname-suffix-off&quot; 选项保留了原始的输入序列名称，因为我们确信在本步骤中，不可能从同一条 contig 中获得 &gt; 1 个原病毒。</li>\n<li>“--viral-gene-enrich-off” 选项关闭了病毒基因要多于宿主基因的要求，以确保 VirSorter2 在这一步不做任何筛查。</li>\n<li>以上两个选项需要 VirSorter2 版本 &gt;=2.2.1。</li>\n<li>可选所有病毒：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae</li>\n</ul>\n</div></details>\n<div class=\"note default\">\n<p>Time: 18m30.896s</p>\n</div>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> checkv/proviruses.fna checkv/viruses.fna <span class=\"token operator\">></span> checkv/combined.fna\n\nvirsorter run --seqname-suffix-off --viral-gene-enrich-off --provirus-off --prep-for-dramv -i checkv/combined.fna -w vs2-pass2 --include-groups dsDNAphage,ssDNA --min-length <span class=\"token number\">5000</span> --min-score <span class=\"token number\">0.5</span> -j <span class=\"token number\">50</span> all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<details class=\"success\"><summary>结果解析</summary><div>\n<ul>\n<li>./vs2-pass2/</li>\n<li>inal-viral-combined.fa</li>\n<li>final-viral-score.tsv</li>\n<li>for-dramv/final-viral-combined-for-dramv.fa</li>\n<li>for-dramv/viral-affi-contigs-for-dramv.tab</li>\n</ul>\n</div></details>\n</li>\n<li>\n<p>运行 DRAMv</p>\n<details class=\"info\"><summary>命令解析</summary><div>\n<p>使用 DRAMv 注释鉴定的病毒序列，以用于后续<ruby>人工整理<rt>manual curation</rt></ruby>。可通过 &quot;--threads&quot; 控制调用的 CPU 核心数。</p>\n</div></details>\n<div class=\"note default\">\n<p>Time: 8.81h</p>\n</div>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># step 1 annotate 耗时步骤，建议投后台运行</span>\nDRAM-v.py annotate -i vs2-pass2/for-dramv/final-viral-combined-for-dramv.fa -v vs2-pass2/for-dramv/viral-affi-contigs-for-dramv.tab -o dramv-annotate --skip_trnascan --threads <span class=\"token number\">50</span> --min_contig_size <span class=\"token number\">1000</span>\n\n<span class=\"token comment\">#step 2 summarize anntotations</span>\nDRAM-v.py distill -i dramv-annotate/annotations.tsv -o dramv-distill<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<details class=\"success\"><summary>结果解析</summary><div>\n<ul>\n<li>dramv-annotate/annotations.tsv</li>\n<li>dramv-annotate/genbank 各条 contig 的 gbk 文件</li>\n<li>dramv-annotate/genes.faa</li>\n<li>dramv-annotate/genes.fna</li>\n<li>dramv-annotate/genes.gff</li>\n<li>dramv-annotate/rrnas.tsv</li>\n<li>dramv-annotate/scaffolds.fna</li>\n<li>dramv-annotate/vMAGs 各条 contig 的 fasta 文件</li>\n</ul>\n</div></details>\n</li>\n</ul>\n<h1 id=\"过滤\"><a class=\"markdownIt-Anchor\" href=\"#过滤\"></a> 过滤</h1>\n<h2 id=\"依据病毒和宿主基因数-分数-hallmark基因数以及contig长度进行筛选\"><a class=\"markdownIt-Anchor\" href=\"#依据病毒和宿主基因数-分数-hallmark基因数以及contig长度进行筛选\"></a> 依据病毒和宿主基因数、分数、hallmark 基因数以及 contig 长度进行筛选</h2>\n<p>来自 checkV 的病毒和宿主基因计数可用于假阳性筛查。由于 checkV 在预测病毒基因方面非常保守，那些由 checkV 预测的病毒基因的序列应该是病毒的，而那些没有被 checkV 预测到病毒基因的序列更可能是非病毒的。</p>\n<p>基于我们对土壤宏基因组的基准测试，(1) 那些没有预测到病毒和宿主基因的序列是病毒；(2) 没有病毒基因但有 2 个或 2 个以上宿主基因的大多数为非病毒基因；(3) 那些没有病毒基因和具有 1 个宿主基因的很难区分其为病毒还是非病毒（可能是可移动的基因元件，类似于 VirSorter1 中的第 3 类），除非手动检查，否则应该丢弃。</p>\n<p>只选择那些大于 10kb 的用于手动检查，因为太短的无法分辨。还有那些 VirSorter2 得分≥0.95 或 hallmark 基因计数 &gt; 2 的大多数是病毒。<mark>这些经验筛选标准总结如下：</mark></p>\n<div class=\"note success\">\n<p>Keep1: viral_gene &gt;0</p>\n</div>\n<div class=\"note success\">\n<p>Keep2: viral_gene =0 AND (host_gene =0 OR score &gt;=0.95 OR hallmark &gt;2)</p>\n</div>\n<div class=\"note warning\">\n<p>Manual check: (NOT in Keep1 OR Keep2) AND viral_gene =0 AND host_gene =1 AND length &gt;=10kb</p>\n</div>\n<div class=\"note danger\">\n<p>Discard: the rest</p>\n</div>\n<p><span class=\"aqua\">要查看病毒基因、宿主基因、评分和<ruby>序列的特征标记<rt>hallmark of sequences</rt></ruby>，您可以合并 &quot;vs2-pass1/final-viral-score.tsv&quot; 和 &quot;checkv/contamination.tsv&quot;，并在电子表格中过滤。</span>本尊为各位提供了 Perl 脚本<a href=\"https://github.com/liaochenlanruo/myScripts/tree/main/1551%20Virome\"> cat_tsv.pl</a> 以实现机动合并！直接在终端运行 <code>perl cat_tsv.pl</code>  即可得到合并后的文件 <code>forCheck.txt</code> 。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$head_checkv</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$head_pass1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$count</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"checkv/contamination.tsv\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$count</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$head_checkv</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\n\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"vs2-pass1/final-viral-score.tsv\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">forCheck.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$num</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$head_pass1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$head_pass1\\t$head_checkv\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@line</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$_\\t$hash&#123;$line[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$_\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\nclose OUT<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来按照上面的四条规则对 <code>forCheck.txt</code>  进行拆分，得到病毒 <code>Virus.txt</code> 、手动核对 <code>Manual_check.txt</code>  及抛弃的 <code>Discard.txt</code> 。可以自己看，也可以用 <code>get_virus.pl</code>  来完成。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$count</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"forCheck.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen VIRUS<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Virus.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen MANUAL<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Manual_check.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen DISCARD<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Discard.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$count</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> MANUAL <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> DISCARD <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># virus keep1</span>\n\t\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># virus keep2</span>\n\t\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># virus keep2</span>\n\t\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># virus keep2</span>\n\t\t\t<span class=\"token keyword\">print</span> VIRUS <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># manual check</span>\n\t\t\t<span class=\"token keyword\">print</span> MANUAL <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># discard</span>\n\t\t\t<span class=\"token keyword\">print</span> DISCARD <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\nclose VIRUS<span class=\"token punctuation\">;</span>\nclose MANUAL<span class=\"token punctuation\">;</span>\nclose DISCARD<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>用法：脚本与 <code>forCheck.txt</code>  放在同一目录，终端运行如下命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl get_virus.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>对于 <code>Manual_check.txt</code>  中的序列，需要用眼睛和脑袋去 <code>dramv-annotate/annotations.tsv</code>  中找注释信息，然后根据下面的方法判断其属于病毒还是细胞，如果是病毒，就将其所在的那行信息复制到 <code>Virus.txt</code>  文件的末尾，并保存。</p>\n<h2 id=\"依据dramv注释筛选\"><a class=\"markdownIt-Anchor\" href=\"#依据dramv注释筛选\"></a> 依据 DRAMv 注释筛选</h2>\n<p>在病毒和宿主中都有一些共同的基因 (如<ruby>脂多糖<rp> (</rp><rt>LPS</rt><rp>)</rp></ruby> 相关) 和移动元件，这些基因可能导致上述 “Keep2” 类别中的假阳性。因此，<ins class=\"dot\">要谨慎对待带有这些基因的 contigs</ins>。专家们已经编制了一份与此相关的<span class=\"red\"> “可疑”</span> 基因列表。我们可以使用 “Keep2” 类别中的 contigs 对 DRAMv 表取子集，并在 DRAMv 子集表中筛选 “可疑” 基因 (忽略大小写，例如在 “grep” 中使用 “-i” 选项)，然后将带有这些基因的 contigs 放入 “手动检查” 类别中。</p>\n<h2 class=\"tabset\" id=\"手动检查\"><a class=\"markdownIt-Anchor\" href=\"#手动检查\"></a> 手动检查</h2>\n<p>对于存在于<ruby>“手动检查”<rt>manual check</rt></ruby>类别中的序列，可以观察其在 &quot;dramv-annotate/annotations.tsv&quot; 中的注释信息。本步骤很难标准化，下面是一些经验之谈：</p>\n<div class=\"tabs\" id=\"tab-id\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#tab-id-1\">判定contig为病毒的标准</a></li><li class=\"tab\"><a class=\"#tab-id-2\">判定contig为非病毒的标准</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-id-1\"><div class=\"tab\" data-id=\"id1\" data-title=\"判定contig为病毒的标准\">\n<ul>\n<li>结构基因、hallmark 基因、<ruby>注释缺失或假设性富集<rt>depletion in annotations or enrichment for hypotheticals</rt> (~10% 的基因具有 non-hypothetical 注释)。</li>\n<li>缺乏 hallmarks，但 &gt;=50% 已注释的基因为病毒，且其中至少一半以上的 viral bitcore &gt;100，且 contig 的长度 &lt; 50kb。</li>\n<li>Provirus: <ruby>整合酶 / 重组酶 / 切除酶 / 阻遏子<rt>Integrase/recombinase/excisionase/repressor</rt></ruby>，在一侧富集了病毒基因。</li>\n<li>Provirus: 基因组中存在 “break”：两个基因之间的<ruby>间隙<rt>gap</rt></ruby>对应于一个<ruby>链开关<rt>strand switch</rt></ruby>，更高的编码密度，注释缺失，以及在一侧噬菌体基因的富集。</li>\n<li><ruby>仅有～1-3 个基因有注释，但至少一半命中病毒，且命中基因的 bitscore 不超过病毒 bitscore 的 150% ，<rt>Few annotations only ~1-3 genes, but with at least half hitting to viruses, and where the genes hitting cells have a bitscore no more than 150% that of the viral bitscores</rt></ruby> <ruby>且 / 或病毒的 bitscore &gt;100 <rt> and/or viral bitscores are &gt;100</rt></ruby>。</li>\n<li>LPS (脂多糖) <ruby>外观区域对病毒基因的命中率也非常高<rt>looking regions if also has very strong hits to viral genes</rt></ruby>，bitscore&gt;100。</li>\n</ul>\n</div></div><div class=\"tab-pane\" id=\"tab-id-2\"><div class=\"tab\" data-id=\"id1\" data-title=\"判定contig为非病毒的标准\">\n<ul>\n<li><ruby>细胞样基因<rt>cellular like genes</rt></ruby>是病毒基因的 3 倍，几乎所有基因都有注释，没有基因只命中病毒，也没有病毒<ruby>标志基因<rt>hallmark genes</rt></ruby>。</li>\n<li>缺乏任何病毒 hallmark genes，且长度 &gt;50kb。</li>\n<li>许多明显的细胞基因字符串，没有其他病毒标志基因。 在基准测试中遇到的例子包括 1) CRISPR Cas, 2) ABC transporters, 3) Sporulation proteins, 4) Two-component systems, 5) Secretion system。这其中一些可能是由病毒编码的，但在没有进一步证据的情况下并不表明是病毒 contig。</li>\n<li>多个质粒基因或转座酶，但没有明确的只命中病毒的基因。</li>\n<li>注释信息很少，仅有～1-3 个基因同时命中了病毒和细胞基因，但有 stronger bitscores 支持其为细胞基因。</li>\n<li><ruby>没有强有力的命中病毒的脂多糖样区域<rt>LPS looking regions if no strong viral hits</rt></ruby>。富含通常与脂多糖相关的基因，如<ruby>外聚酶<rp> (</rp><rt>epimerases</rt><rp>)</rp></ruby>、<ruby>糖<rp> (</rp><rt>glycosyl</rt><rp>)</rp> 基转移酶<rp> (</rp><rt>transferases</rt><rp>)</rp></ruby>、<ruby>酰基转移酶<rp> (</rp><rt>acyltransferase</rt><rp>)</rp></ruby>、<ruby>短<rp> (</rp><rt>dehydrogenase</rt><rp>)</rp> 链<rp> (</rp><rt>reductase</rt><rp>)</rp> 脱氢酶<rp> (</rp><rt>short-ch</rt><rp>)</rp>/<rt></rt> 还原酶<rp> (</rp><rt>ain</rt><rp>)</rp></ruby>、<ruby>脱水酶<rp> (</rp><rt>dehydratase</rt><rp>)</rp></ruby>。</li>\n<li>注释为 Type IV 和 / 或 Type VI 分析系统，并被非病毒基因围绕。</li>\n<li>注释信息很少，仅有～1-3 个基因全部命中细胞基因 (即使 bitscore &lt;100) ，且没有命中病毒的基因。</li>\n</ul>\n</div></div></div></div>\n<div class=\"note warning\">\n<p>最后，用户要注意，VirSorter 2 和 / 或 checkV 预测的任何原病毒边界只是一个近似的估计 (寻找 “ends” 在前噬菌体发现中是一个相当具有挑战性的问题)，也需要仔细地手工检查，特别是在 AMG 研究中。</p>\n</div>\n<p>最终我们需要拿到病毒 contig 的序列，用 <code>get_virus_seqs.pl</code>  完成。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/usr/bin/perl</span>\nuse strict<span class=\"token punctuation\">;</span>\nuse warnings<span class=\"token punctuation\">;</span>\n\nmy %hash<span class=\"token punctuation\">;</span>\n<span class=\"token function\">open</span> IN, <span class=\"token string\">\"checkv/combined.fna\"</span> <span class=\"token operator\">||</span> die<span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">local</span> $/ <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span>IN<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>IN<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\tmy <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span>, <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split<span class=\"token punctuation\">(</span>/<span class=\"token punctuation\">\\</span>n/, <span class=\"token variable\">$_</span>, <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmy <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span>/<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">|</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">|</span>.+/<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>else <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$header</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin class-name\">local</span> $/ <span class=\"token operator\">=</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">open</span> IN, <span class=\"token string\">\"Virus.txt\"</span> <span class=\"token operator\">||</span> die<span class=\"token punctuation\">;</span>\n<span class=\"token function\">open</span> OUT, <span class=\"token string\">\">Virus.fas\"</span> <span class=\"token operator\">||</span> die<span class=\"token punctuation\">;</span>\n<span class=\"token function\">open</span> NO, <span class=\"token string\">\">NoSeqs.ids\"</span> <span class=\"token operator\">||</span> die<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span>IN<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>IN<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\tmy @lines <span class=\"token operator\">=</span> <span class=\"token function\">split</span> /<span class=\"token punctuation\">\\</span>t/<span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=~</span>/<span class=\"token punctuation\">(</span><span class=\"token punctuation\">\\</span>S+<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">|</span><span class=\"token punctuation\">\\</span><span class=\"token operator\">|</span>/<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tprint OUT <span class=\"token string\">\"><span class=\"token variable\">$lines</span>[0]<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token variable\">$hash</span>&#123;<span class=\"token variable\">$1</span>&#125;<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>else <span class=\"token punctuation\">&#123;</span>\n\t\tprint NO <span class=\"token string\">\"<span class=\"token variable\">$lines</span>[0]<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\nclose OUT<span class=\"token punctuation\">;</span>\nclose NO<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>用法：终端运行如下命令即可得到序列文件 <code>Virus.fas</code> 。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\">perl get_virus_seqs<span class=\"token operator\">.</span>pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “1551” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://github.com/jiarong/VirSorter2\">VirSorter2</a></li>\n<li><a href=\"https://www.protocols.io/view/viral-sequence-identification-sop-with-virsorter2-bwm5pc86\">Viral sequence identification SOP with VirSorter2 V.3</a></li>\n</ul>\n<div class=\"mermaid\">graph TD\n\tA [Reads] --&gt; B((MetaSpaDES))\n\tB --&gt; C [Contigs]\n\tC --&gt; D ((VirSorter))\n\tC --&gt; E ((VirFinder))\n\tE --&gt; F {Score &gt;&#x3D; 0.7 &amp; p &lt; 0.05}\n\tF -- YES --&gt; G [Virus]\n\tF -- NO --&gt; H [Contigs]\n\tD --&gt; G\n\tH --&gt; I ((CAT))\n\tI --&gt; J {&lt; 40%}\n\tJ -- YES --&gt; G\n\tJ -- NO --&gt; K [Not Virus]\n\tG --&gt; L ((Nucmer))\n\tL --&gt; M {Identity &gt;&#x3D; 95% &amp; Coverage &gt;&#x3D; 80%}\n\tM -- YES --&gt; N [Grouped]\n\tM -- NO --&gt; O [Not Grouped]\n\tG --&gt; P ((Prodigal))\n\tP --&gt; Q [Amino Acid Sequences]\n\tQ --&gt; R {Length &lt; 10 kb}\n\tR -- YES --&gt; S ((Blastp))\n\tR -- NO --&gt; T ((vConTACT2))\n\tS --&gt; U [Annotated Genes]\n\tT --&gt; U</div>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"ST179","path":"api/tags/ST179.json"},{"name":"宏病毒组","path":"api/tags/宏病毒组.json"}]}