{"title":"根据assession number批量从NCB下载数据","slug":"根据assession-number批量从NCB下载数据","date":"2021-09-28T03:26:24.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/根据assession-number批量从NCB下载数据.json","excerpt":null,"covers":["https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<p>有时候我们手里会得到一些NCBI的assession number，且数量比较多，而我们真正需要的是序列，这时候手动挨个搜索和下载是不太现实的，除非是你闲得无事可做。其实有一个网页是可以批量下载序列的，即<a href=\"https://www.ncbi.nlm.nih.gov/sites/batchentrez\">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> ，下面演示一下其用法。<strong>请就着文末视频食用。</strong></p>\n<ul>\n<li><p>首先，<u>准备一份列表文件，其中包含需要下载序列的IDs，每行一个ID</u>。这里有一个从网上下载的CaZY数据库，本以为是序列文件，下载后才发现里面没有序列。这个文件包含三列，以制表符分隔各列，最后一列是Assession number，因此前两列可以删掉。可以将文件内容复制到Excel中，删除前两列，将最后一列复制到一个新的文本文档中。也可以在支持正则表达式的文本编辑器中直接查找替换。<strong>刚刚的示例文件可以从<a href=\"http://www.cazy.org/IMG/cazy_data/cazy_data.zip\">这里</a>下载</strong>。正则表达式查找的公式为“.+\\t(.+)”，其中“.+”代表的是任意多个字符，“\\t”匹配的是制表符，+是贪婪的，一直遇到最后一个“\\t”才终止匹配。即“.+\\t”匹配的是前两列以及第二列后面的制表符，最后的“(.+)”匹配的是第三列。小括号的作用是捕获匹配的内容。替换的公式为“$1”，表示第一个小括号内的内容，即第三列。</p>\n</li>\n<li><p>接下来将得到的列表文件提交至网站上以下载序列，需要选择对应的数据库，这里选择protein，点击“Retrieve”开始下载。由于序列较多，因此反应比较慢，需要耐心等待。估计是崩了，再试一遍，文件包含2650471个ID，估计服务器吃不消，实在不行就拆分成几个文件，分批次下载。我这里用的是EmEditor软件，按照10000行每个文件对整个文件进行了拆分，得到了266个文件，现在拿其中的一个做演示，看看服务器是否吃得消。看来一万个也太多，二十几个试了一下，莫得问题。方法就是酱紫的，至于可以一次性下载多少，各位自己去试吧。搞定！</p>\n</li>\n<li><p><strong>兄弟们不用试了，我已经试过了，一次只能搞几百个</strong>，对于几十万行的列表来说，手动逐个提交也是要命的，因此我写了一个Perl脚本(download_NCBI.pl)来完成该任务，<u>不过只能在Linux下运行</u>，代码如下：</p>\n</li>\n</ul>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> LWP::Simple;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Usage: perl download_NCBI.pl 列表文件 序列类型（参照https://www.ncbi.nlm.nih.gov/sites/batchentrez数据库填写，常用的包括nucleotide, protein）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @ids;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $dbtype = $ARGV[<span class=\"number\">1</span>];<span class=\"comment\"># nucleotide, protein</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;split -l 300 $ARGV[0] splited_&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @splited = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;splited_*&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@splited) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/splited_(.+)/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = <span class=\"string\">&quot;seqs.$1.fasta&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $_ || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">push</span> @ids, $_;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgetstore(<span class=\"string\">&quot;http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=$dbtype&amp;rettype=fasta&amp;retmode=text&amp;id=&quot;</span>.join(<span class=\"string\">&quot;,&quot;</span>, @ids),<span class=\"string\">&quot;$out&quot;</span>);</span><br><span class=\"line\">\t@ids = ();</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;cat seqs.* &gt; All.sequences.fas&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;rm splited_* seqs.*&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>运行方法也贼简单，将脚本和列表文件放在同一目录下，然后在Linux终端里输入如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl download_NCBI.pl cazy_ids.txt protein</span><br></pre></td></tr></table></figure>\n\n<p>其中cazy_ids.txt为包含assession number的列表文件，protein表示列表里的ID是蛋白。最后面的这个参数可以在<a href=\"https://www.ncbi.nlm.nih.gov/sites/batchentrez\">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> 左上角的Database查询，<strong>但是要全部小写</strong>。</p>\n<p>运行一下，看看效果！</p>\n<p><font color=\"#FF0000\">2000 years later…</font></p>\n<p>2650471&#x2F;300&#x3D;8835个文件，最终生成的序列文件名称为“All.sequences.fas”，中间过程文件会被自动删除。千年以后拿结果，不管怎么说，总算解放了双手，让电脑慢慢去跑吧！</p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=378319348&page=\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"></iframe></div>\n\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e7e9”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<p>有时候我们手里会得到一些NCBI的assession number，且数量比较多，而我们真正需要的是序列，这时候手动挨个搜索和下载是不太现实的，除非是你闲得无事可做。其实有一个网页是可以批量下载序列的，即<a href=\"https://www.ncbi.nlm.nih.gov/sites/batchentrez\">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> ，下面演示一下其用法。<strong>请就着文末视频食用。</strong></p>\n<ul>\n<li><p>首先，<u>准备一份列表文件，其中包含需要下载序列的IDs，每行一个ID</u>。这里有一个从网上下载的CaZY数据库，本以为是序列文件，下载后才发现里面没有序列。这个文件包含三列，以制表符分隔各列，最后一列是Assession number，因此前两列可以删掉。可以将文件内容复制到Excel中，删除前两列，将最后一列复制到一个新的文本文档中。也可以在支持正则表达式的文本编辑器中直接查找替换。<strong>刚刚的示例文件可以从<a href=\"http://www.cazy.org/IMG/cazy_data/cazy_data.zip\">这里</a>下载</strong>。正则表达式查找的公式为“.+\\t(.+)”，其中“.+”代表的是任意多个字符，“\\t”匹配的是制表符，+是贪婪的，一直遇到最后一个“\\t”才终止匹配。即“.+\\t”匹配的是前两列以及第二列后面的制表符，最后的“(.+)”匹配的是第三列。小括号的作用是捕获匹配的内容。替换的公式为“$1”，表示第一个小括号内的内容，即第三列。</p>\n</li>\n<li><p>接下来将得到的列表文件提交至网站上以下载序列，需要选择对应的数据库，这里选择protein，点击“Retrieve”开始下载。由于序列较多，因此反应比较慢，需要耐心等待。估计是崩了，再试一遍，文件包含2650471个ID，估计服务器吃不消，实在不行就拆分成几个文件，分批次下载。我这里用的是EmEditor软件，按照10000行每个文件对整个文件进行了拆分，得到了266个文件，现在拿其中的一个做演示，看看服务器是否吃得消。看来一万个也太多，二十几个试了一下，莫得问题。方法就是酱紫的，至于可以一次性下载多少，各位自己去试吧。搞定！</p>\n</li>\n<li><p><strong>兄弟们不用试了，我已经试过了，一次只能搞几百个</strong>，对于几十万行的列表来说，手动逐个提交也是要命的，因此我写了一个Perl脚本(download_NCBI.pl)来完成该任务，<u>不过只能在Linux下运行</u>，代码如下：</p>\n</li>\n</ul>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> LWP::Simple;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Usage: perl download_NCBI.pl 列表文件 序列类型（参照https://www.ncbi.nlm.nih.gov/sites/batchentrez数据库填写，常用的包括nucleotide, protein）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @ids;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $dbtype = $ARGV[<span class=\"number\">1</span>];<span class=\"comment\"># nucleotide, protein</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;split -l 300 $ARGV[0] splited_&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @splited = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;splited_*&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@splited) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/splited_(.+)/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = <span class=\"string\">&quot;seqs.$1.fasta&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $_ || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">push</span> @ids, $_;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgetstore(<span class=\"string\">&quot;http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=$dbtype&amp;rettype=fasta&amp;retmode=text&amp;id=&quot;</span>.join(<span class=\"string\">&quot;,&quot;</span>, @ids),<span class=\"string\">&quot;$out&quot;</span>);</span><br><span class=\"line\">\t@ids = ();</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;cat seqs.* &gt; All.sequences.fas&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;rm splited_* seqs.*&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>运行方法也贼简单，将脚本和列表文件放在同一目录下，然后在Linux终端里输入如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl download_NCBI.pl cazy_ids.txt protein</span><br></pre></td></tr></table></figure>\n\n<p>其中cazy_ids.txt为包含assession number的列表文件，protein表示列表里的ID是蛋白。最后面的这个参数可以在<a href=\"https://www.ncbi.nlm.nih.gov/sites/batchentrez\">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> 左上角的Database查询，<strong>但是要全部小写</strong>。</p>\n<p>运行一下，看看效果！</p>\n<p><font color=\"#FF0000\">2000 years later…</font></p>\n<p>2650471&#x2F;300&#x3D;8835个文件，最终生成的序列文件名称为“All.sequences.fas”，中间过程文件会被自动删除。千年以后拿结果，不管怎么说，总算解放了双手，让电脑慢慢去跑吧！</p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=378319348&page=\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"></iframe></div>\n\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e7e9”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"CAZy","path":"api/tags/CAZy.json"},{"name":"NCBI","path":"api/tags/NCBI.json"},{"name":"下载","path":"api/tags/下载.json"}]}