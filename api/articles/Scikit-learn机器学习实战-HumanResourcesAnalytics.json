{"title":"Scikit-learn机器学习实战-HumanResourcesAnalytics","slug":"Scikit-learn机器学习实战-HumanResourcesAnalytics","date":"2024-08-30T14:24:05.000Z","updated":"2024-08-30T14:59:29.868Z","comments":true,"path":"api/articles/Scikit-learn机器学习实战-HumanResourcesAnalytics.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_10_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_11_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_12_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_13_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_14_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_16_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_18_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_20_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_22_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_24_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_26_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_43_1.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_45_0.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>本文构建预测员工是否会离职的模型，并使用模型对员工进行预测。通过本文可以学习到：</p>\n<ul>\n<li>查看数据集的统计信息</li>\n<li>特征工程</li>\n<li>数据集的划分</li>\n<li>数据集的预处理</li>\n<li>数据集的可视化</li>\n<li>模型训练</li>\n<li>模型调参</li>\n<li>模型评估</li>\n<li>模型预测</li>\n</ul>\n<h1 id=\"查看数据集信息\"><a href=\"#查看数据集信息\" class=\"headerlink\" title=\"查看数据集信息\"></a>查看数据集信息</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读入数据</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/data/ML/HumanResourcesAnalytics/HR_comma_sep.csv&#x27;</span></span><br><span class=\"line\">df = pd.read_csv(url)</span><br><span class=\"line\"><span class=\"comment\">#df = pd.read_csv(&#x27;HR_comma_sep.csv&#x27;)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.info()) <span class=\"comment\">#474241623</span></span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 14999 entries, 0 to 14998\nData columns (total 10 columns):\n #   Column                 Non-Null Count  Dtype  \n---  ------                 --------------  -----  \n 0   satisfaction_level     14999 non-null  float64\n 1   last_evaluation        14999 non-null  float64\n 2   number_project         14999 non-null  int64  \n 3   average_montly_hours   14999 non-null  int64  \n 4   time_spend_company     14999 non-null  int64  \n 5   Work_accident          14999 non-null  int64  \n 6   left                   14999 non-null  int64  \n 7   promotion_last_5years  14999 non-null  int64  \n 8   sales                  14999 non-null  object \n 9   salary                 14999 non-null  object \ndtypes: float64(2), int64(6), object(2)\nmemory usage: 1.1+ MB\nNone\n</code></pre>\n<div style=\"overflow-x: auto; width: 100%;\">\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n</head>\n<body>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_montly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n      <th>sales</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<p><strong>header 信息</strong></p>\n<ul>\n<li>satisfaction_level\t员工满意度</li>\n<li>last_evaluation\t员工考核评分</li>\n<li>number_project\t员工参与的项目数</li>\n<li>average_montly_hours\t每个月均工作时长</li>\n<li>time_spend_company\t员工工作年限</li>\n<li>Work_accident\t是否发生过事故</li>\n<li>left\t员工是否离职</li>\n<li>promotion_last_5years\t过去5年中是否有升职</li>\n<li>sales\t员工岗位</li>\n<li>salary 员工薪资水平</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更正列名</span></span><br><span class=\"line\">df.rename(columns=&#123;<span class=\"string\">&#x27;average_montly_hours&#x27;</span>:<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>, <span class=\"string\">&#x27;sales&#x27;</span>:<span class=\"string\">&#x27;department&#x27;</span>&#125;, </span><br><span class=\"line\">          inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n      <th>department</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 展示数据集的统计信息，仅展示数值列</span></span><br><span class=\"line\">df.describe()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.612834</td>\n      <td>0.716102</td>\n      <td>3.803054</td>\n      <td>201.050337</td>\n      <td>3.498233</td>\n      <td>0.144610</td>\n      <td>0.238083</td>\n      <td>0.021268</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.248631</td>\n      <td>0.171169</td>\n      <td>1.232592</td>\n      <td>49.943099</td>\n      <td>1.460136</td>\n      <td>0.351719</td>\n      <td>0.425924</td>\n      <td>0.144281</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.090000</td>\n      <td>0.360000</td>\n      <td>2.000000</td>\n      <td>96.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.440000</td>\n      <td>0.560000</td>\n      <td>3.000000</td>\n      <td>156.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.640000</td>\n      <td>0.720000</td>\n      <td>4.000000</td>\n      <td>200.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.820000</td>\n      <td>0.870000</td>\n      <td>5.000000</td>\n      <td>245.000000</td>\n      <td>4.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>310.000000</td>\n      <td>10.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看各元素的出现次数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;Departments:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (df[<span class=\"string\">&#x27;department&#x27;</span>].value_counts())</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;\\nSalary:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (df[<span class=\"string\">&#x27;salary&#x27;</span>].value_counts())</span><br></pre></td></tr></table></figure>\n\n<pre><code>Departments:\ndepartment\nsales          4140\ntechnical      2720\nsupport        2229\nIT             1227\nproduct_mng     902\nmarketing       858\nRandD           787\naccounting      767\nhr              739\nmanagement      630\nName: count, dtype: int64\n\nSalary:\nsalary\nlow       7316\nmedium    6446\nhigh      1237\nName: count, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 记录各特征的类型和取值范围</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">satisfaction_level | Satisfaction level of employee based on survey | Continuous | [0.09, 1]</span></span><br><span class=\"line\"><span class=\"string\">last_evaluation | Score based on employee&#x27;s last evaluation | Continuous | [0.36, 1]</span></span><br><span class=\"line\"><span class=\"string\">number_project | Number of projects | Continuous | [2, 7]</span></span><br><span class=\"line\"><span class=\"string\">average_monthly_hours | Average monthly hours | Continuous | [96, 310]</span></span><br><span class=\"line\"><span class=\"string\">time_spend_company | Years at company | Continuous | [2, 10]</span></span><br><span class=\"line\"><span class=\"string\">Work_accident | Whether employee had a work accident | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">left | Whether employee had left (Outcome Variable) | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">promotion_last_5years | Whether employee had a promotion in the last 5 years | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">department | Department employee worked in | Categorical | 10 departments</span></span><br><span class=\"line\"><span class=\"string\">salary | Level of employee&#x27;s salary | Categorical | &#123;low, medium, high&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;\\nsatisfaction_level | Satisfaction level of employee based on survey | Continuous | [0.09, 1]\\nlast_evaluation | Score based on employee&#x27;s last evaluation | Continuous | [0.36, 1]\\nnumber_project | Number of projects | Continuous | [2, 7]\\naverage_monthly_hours | Average monthly hours | Continuous | [96, 310]\\ntime_spend_company | Years at company | Continuous | [2, 10]\\nWork_accident | Whether employee had a work accident | Categorical | &#123;0, 1&#125;\\nleft | Whether employee had left (Outcome Variable) | Categorical | &#123;0, 1&#125;\\npromotion_last_5years | Whether employee had a promotion in the last 5 years | Categorical | &#123;0, 1&#125;\\ndepartment | Department employee worked in | Categorical | 10 departments\\nsalary | Level of employee&#x27;s salary | Categorical | &#123;low, medium, high&#125;\\n&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"特征工程\"><a href=\"#特征工程\" class=\"headerlink\" title=\"特征工程\"></a>特征工程</h1><ul>\n<li>查找相关性大的特征，只保留其中的一个。</li>\n<li>也可查看与标签（left）相关性较大的特征，如此数据集中的<code>satisfaction_level</code>。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 筛选 DataFrame 中的所有数值列</span></span><br><span class=\"line\">numeric_df = df.select_dtypes(include=[np.number])</span><br><span class=\"line\"><span class=\"comment\"># 计算数值列之间的相关系数</span></span><br><span class=\"line\">numeric_df.corr()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>satisfaction_level</th>\n      <td>1.000000</td>\n      <td>0.105021</td>\n      <td>-0.142970</td>\n      <td>-0.020048</td>\n      <td>-0.100866</td>\n      <td>0.058697</td>\n      <td>-0.388375</td>\n      <td>0.025605</td>\n    </tr>\n    <tr>\n      <th>last_evaluation</th>\n      <td>0.105021</td>\n      <td>1.000000</td>\n      <td>0.349333</td>\n      <td>0.339742</td>\n      <td>0.131591</td>\n      <td>-0.007104</td>\n      <td>0.006567</td>\n      <td>-0.008684</td>\n    </tr>\n    <tr>\n      <th>number_project</th>\n      <td>-0.142970</td>\n      <td>0.349333</td>\n      <td>1.000000</td>\n      <td>0.417211</td>\n      <td>0.196786</td>\n      <td>-0.004741</td>\n      <td>0.023787</td>\n      <td>-0.006064</td>\n    </tr>\n    <tr>\n      <th>average_monthly_hours</th>\n      <td>-0.020048</td>\n      <td>0.339742</td>\n      <td>0.417211</td>\n      <td>1.000000</td>\n      <td>0.127755</td>\n      <td>-0.010143</td>\n      <td>0.071287</td>\n      <td>-0.003544</td>\n    </tr>\n    <tr>\n      <th>time_spend_company</th>\n      <td>-0.100866</td>\n      <td>0.131591</td>\n      <td>0.196786</td>\n      <td>0.127755</td>\n      <td>1.000000</td>\n      <td>0.002120</td>\n      <td>0.144822</td>\n      <td>0.067433</td>\n    </tr>\n    <tr>\n      <th>Work_accident</th>\n      <td>0.058697</td>\n      <td>-0.007104</td>\n      <td>-0.004741</td>\n      <td>-0.010143</td>\n      <td>0.002120</td>\n      <td>1.000000</td>\n      <td>-0.154622</td>\n      <td>0.039245</td>\n    </tr>\n    <tr>\n      <th>left</th>\n      <td>-0.388375</td>\n      <td>0.006567</td>\n      <td>0.023787</td>\n      <td>0.071287</td>\n      <td>0.144822</td>\n      <td>-0.154622</td>\n      <td>1.000000</td>\n      <td>-0.061788</td>\n    </tr>\n    <tr>\n      <th>promotion_last_5years</th>\n      <td>0.025605</td>\n      <td>-0.008684</td>\n      <td>-0.006064</td>\n      <td>-0.003544</td>\n      <td>0.067433</td>\n      <td>0.039245</td>\n      <td>-0.061788</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\">%matplotlib inline</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看离职员工部门分布，发现HR离职员工最多</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;department&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df)</span><br><span class=\"line\">plot.set_xticklabels(rotation=<span class=\"number\">45</span>, horizontalalignment=<span class=\"string\">&#x27;right&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_10_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_10_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看工资水平和离职率的关系</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;salary&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_11_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_11_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看经理工资水平分布</span></span><br><span class=\"line\">df[df[<span class=\"string\">&#x27;department&#x27;</span>]==<span class=\"string\">&#x27;management&#x27;</span>][<span class=\"string\">&#x27;salary&#x27;</span>].value_counts().plot(kind=<span class=\"string\">&#x27;pie&#x27;</span>, title=<span class=\"string\">&#x27;Management salary level distribution&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_12_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_12_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看研发工资水平分布</span></span><br><span class=\"line\">df[df[<span class=\"string\">&#x27;department&#x27;</span>]==<span class=\"string\">&#x27;RandD&#x27;</span>][<span class=\"string\">&#x27;salary&#x27;</span>].value_counts().plot(kind=<span class=\"string\">&#x27;pie&#x27;</span>, title=<span class=\"string\">&#x27;R&amp;D dept salary level distribution&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_13_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_13_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 绘制员工满意度分布的直方图，并分为两类员工：已离职和未离职</span></span><br><span class=\"line\"><span class=\"comment\"># 生成21个等间距的数值作为直方图的区间，范围从0.0001到1.0001</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">0.0001</span>, <span class=\"number\">1.0001</span>, <span class=\"number\">21</span>)</span><br><span class=\"line\"><span class=\"comment\"># 绘制直方图。首先筛选出已离职员工（df[&#x27;left&#x27;]==1）和未离职员工（df[&#x27;left&#x27;]==0）的满意度数据，使用指定的区间（bins）、透明度（alpha）和标签（label）进行绘制。</span></span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;satisfaction_level&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.7</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;satisfaction_level&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.5</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;satisfaction_level&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 设置x轴的显示范围从0到1.05</span></span><br><span class=\"line\">plt.xlim((<span class=\"number\">0</span>,<span class=\"number\">1.05</span>))</span><br><span class=\"line\"><span class=\"comment\"># 在最合适的位置添加图例</span></span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_14_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_14_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>发现已离职员工对公司的满意度比较低（0~0.5），当然也存在满意度较高（0.8附近）的员工离职的情况。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Last evaluation</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">0.3501</span>, <span class=\"number\">1.0001</span>, <span class=\"number\">14</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;last_evaluation&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;last_evaluation&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;last_evaluation&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_16_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_16_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>公司评分高（0.8~1.0）的员工离职了很多，原因可能是这部分员工能力强，跳槽寻求更好的工作机会。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Number of projects </span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">1.5</span>, <span class=\"number\">7.5</span>, <span class=\"number\">7</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;number_project&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;number_project&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;number_project&#x27;</span>)</span><br><span class=\"line\">plt.grid(axis=<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_18_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_18_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>项目少时离职了，可能因为员工锻炼机会少。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Average monthly hours</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">75</span>, <span class=\"number\">325</span>, <span class=\"number\">11</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_20_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_20_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>工作时长少和多都容易离职。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Years at company </span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">1.5</span>, <span class=\"number\">10.5</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;time_spend_company&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;time_spend_company&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;time_spend_company&#x27;</span>)</span><br><span class=\"line\">plt.xlim((<span class=\"number\">1</span>,<span class=\"number\">11</span>))</span><br><span class=\"line\">plt.grid(axis=<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">plt.xticks(np.arange(<span class=\"number\">2</span>,<span class=\"number\">11</span>))</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_22_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_22_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>工作年限3年，离职率最高。年限越长，离职率越低。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># whether employee had work accident</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;Work_accident&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_24_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_24_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>未发生工作事故的离职率较高，难以解释。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#whether employee had promotion in last 5 years</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;promotion_last_5years&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_26_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_26_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>不升职的离职率较高。</p>\n<h1 id=\"数据预处理\"><a href=\"#数据预处理\" class=\"headerlink\" title=\"数据预处理\"></a>数据预处理</h1><h2 id=\"独热编码替换分类数据\"><a href=\"#独热编码替换分类数据\" class=\"headerlink\" title=\"独热编码替换分类数据\"></a>独热编码替换分类数据</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 丢弃标签（left）列</span></span><br><span class=\"line\">X = df.drop(<span class=\"string\">&#x27;left&#x27;</span>, axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"comment\"># 提取标签列</span></span><br><span class=\"line\">y = df[<span class=\"string\">&#x27;left&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 删除部门与工资列，后面会通过独热编码将信息添加回来</span></span><br><span class=\"line\">X.drop([<span class=\"string\">&#x27;department&#x27;</span>,<span class=\"string\">&#x27;salary&#x27;</span>], axis=<span class=\"number\">1</span>, inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># One-hot encoding</span></span><br><span class=\"line\"><span class=\"comment\"># 对工资进行独热编码</span></span><br><span class=\"line\">salary_dummy = pd.get_dummies(df[<span class=\"string\">&#x27;salary&#x27;</span>])</span><br><span class=\"line\"><span class=\"comment\"># 对部门进行独热编码</span></span><br><span class=\"line\">department_dummy = pd.get_dummies(df[<span class=\"string\">&#x27;department&#x27;</span>])</span><br><span class=\"line\">X = pd.concat([X, salary_dummy], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">X = pd.concat([X, department_dummy], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">X.head()</span><br></pre></td></tr></table></figure>\n\n<div style=\"overflow-x: auto; width: 100%;\">\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>promotion_last_5years</th>\n      <th>high</th>\n      <th>low</th>\n      <th>medium</th>\n      <th>IT</th>\n      <th>RandD</th>\n      <th>accounting</th>\n      <th>hr</th>\n      <th>management</th>\n      <th>marketing</th>\n      <th>product_mng</th>\n      <th>sales</th>\n      <th>support</th>\n      <th>technical</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h2 id=\"拆分训练集和测试集\"><a href=\"#拆分训练集和测试集\" class=\"headerlink\" title=\"拆分训练集和测试集\"></a>拆分训练集和测试集</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 划分训练集和测试集 (70%/30%)</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.3</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据标准化\"><a href=\"#数据标准化\" class=\"headerlink\" title=\"数据标准化\"></a>数据标准化</h2><ul>\n<li>比较大的数值，算法会认为其比较重要，导致结果不准确。</li>\n<li>数值差异比较大的话，模型收敛较慢。</li>\n<li>因此，需要将数据标准化。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据标准化，这里是一个例子</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">stdsc = StandardScaler()</span><br><span class=\"line\">X_example = np.array([[ <span class=\"number\">10.</span>, -<span class=\"number\">2.</span>,  <span class=\"number\">23.</span>],</span><br><span class=\"line\">                      [ <span class=\"number\">5.</span>,  <span class=\"number\">32.</span>,  <span class=\"number\">211.</span>],</span><br><span class=\"line\">                      [ <span class=\"number\">10.</span>,  <span class=\"number\">1.</span>, -<span class=\"number\">130.</span>]])</span><br><span class=\"line\">X_example = stdsc.fit_transform(X_example)</span><br><span class=\"line\">X_example = pd.DataFrame(X_example)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (X_example)</span><br><span class=\"line\">X_example.describe()</span><br></pre></td></tr></table></figure>\n\n<pre><code>          0         1         2\n0  0.707107 -0.802454 -0.083658\n1 -1.414214  1.409716  1.264429\n2  0.707107 -0.607262 -1.180771\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>3.000000e+00</td>\n      <td>3.000000e+00</td>\n      <td>3.000000e+00</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>-2.960595e-16</td>\n      <td>-1.110223e-16</td>\n      <td>7.401487e-17</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.224745e+00</td>\n      <td>1.224745e+00</td>\n      <td>1.224745e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-1.414214e+00</td>\n      <td>-8.024539e-01</td>\n      <td>-1.180771e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>-3.535534e-01</td>\n      <td>-7.048582e-01</td>\n      <td>-6.322145e-01</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>7.071068e-01</td>\n      <td>-6.072624e-01</td>\n      <td>-8.365788e-02</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.071068e-01</td>\n      <td>4.012270e-01</td>\n      <td>5.903856e-01</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>7.071068e-01</td>\n      <td>1.409716e+00</td>\n      <td>1.264429e+00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 分别对训练集和测试集进行标准化</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"></span><br><span class=\"line\">stdsc = StandardScaler()</span><br><span class=\"line\"><span class=\"comment\"># transform our training features</span></span><br><span class=\"line\">X_train_std = stdsc.fit_transform(X_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (X_train_std[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"comment\"># transform the testing features in the same way</span></span><br><span class=\"line\">X_test_std = stdsc.transform(X_test)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[ 1.40697692 -0.21068428 -0.65422416 -1.37529896 -1.02172591 -0.41080801\n -0.14595719 -0.30564365 -0.98084819  1.16499228 -0.2981308  -0.23781569\n -0.22665375 -0.23057496 -0.21332806 -0.24641294 -0.25073288  1.62416352\n -0.41712208 -0.47247431]\n</code></pre>\n<h1 id=\"构建模型\"><a href=\"#构建模型\" class=\"headerlink\" title=\"构建模型\"></a>构建模型</h1><h2 id=\"随机森林法\"><a href=\"#随机森林法\" class=\"headerlink\" title=\"随机森林法\"></a>随机森林法</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 交叉验证（Cross validation）</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> ShuffleSplit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进行20折交叉验证</span></span><br><span class=\"line\">cv = ShuffleSplit(n_splits=<span class=\"number\">20</span>, test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建随机森林模型</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\">rf_model = RandomForestClassifier()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置RF模型，建立树的数量</span></span><br><span class=\"line\">rf_param = &#123;<span class=\"string\">&#x27;n_estimators&#x27;</span>: <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 探索模型参数（最佳树的个数）</span></span><br><span class=\"line\">rf_grid = GridSearchCV(rf_model, rf_param, cv=cv)</span><br><span class=\"line\">rf_grid.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出最佳参数和最佳得分</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Parameter with best score:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(rf_grid.best_params_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Cross validation score:&#x27;</span>, rf_grid.best_score_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Parameter with best score:\n&#123;&#39;n_estimators&#39;: 9&#125;\nCross validation score: 0.9835079365079364\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在测试集上评估模型</span></span><br><span class=\"line\">best_rf = rf_grid.best_estimator_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Test score:&#x27;</span>, best_rf.score(X_test, y_test))</span><br></pre></td></tr></table></figure>\n\n<pre><code>Test score: 0.9884444444444445\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过随机森林查看特征的重要性，原理是每次打乱一个特征（或添加噪音），然后看预测结果（错误率）是否发生变化，如果变化大，则该特征对预测结果有影响，否则没有影响</span></span><br><span class=\"line\">features = X.columns</span><br><span class=\"line\">feature_importances = best_rf.feature_importances_</span><br><span class=\"line\"></span><br><span class=\"line\">features_df = pd.DataFrame(&#123;<span class=\"string\">&#x27;Features&#x27;</span>: features, <span class=\"string\">&#x27;Importance Score&#x27;</span>: feature_importances&#125;)</span><br><span class=\"line\">features_df.sort_values(<span class=\"string\">&#x27;Importance Score&#x27;</span>, inplace=<span class=\"literal\">True</span>, ascending=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">features_df</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Features</th>\n      <th>Importance Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>satisfaction_level</td>\n      <td>0.260366</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>average_monthly_hours</td>\n      <td>0.186585</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>number_project</td>\n      <td>0.179788</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>time_spend_company</td>\n      <td>0.179571</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>last_evaluation</td>\n      <td>0.144083</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Work_accident</td>\n      <td>0.011949</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>low</td>\n      <td>0.006395</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>high</td>\n      <td>0.005206</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>medium</td>\n      <td>0.003336</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>sales</td>\n      <td>0.003200</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>support</td>\n      <td>0.003070</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>technical</td>\n      <td>0.003039</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>RandD</td>\n      <td>0.002143</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>IT</td>\n      <td>0.002048</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>accounting</td>\n      <td>0.001887</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>promotion_last_5years</td>\n      <td>0.001799</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>management</td>\n      <td>0.001755</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>hr</td>\n      <td>0.001425</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>product_mng</td>\n      <td>0.001182</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>marketing</td>\n      <td>0.001173</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 计算前五项特征的重要性之和</span></span><br><span class=\"line\">features_df[<span class=\"string\">&#x27;Importance Score&#x27;</span>][:<span class=\"number\">5</span>].<span class=\"built_in\">sum</span>()</span><br></pre></td></tr></table></figure>\n\n<pre><code>np.float64(0.9503925098929926)\n</code></pre>\n<h2 id=\"基于聚类模型的分析\"><a href=\"#基于聚类模型的分析\" class=\"headerlink\" title=\"基于聚类模型的分析\"></a>基于聚类模型的分析</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\">%matplotlib inline</span><br><span class=\"line\"></span><br><span class=\"line\">data = pd.read_csv(url)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize = (<span class=\"number\">8</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">plt.plot(data.satisfaction_level[data.left == <span class=\"number\">1</span>],data.last_evaluation[data.left == <span class=\"number\">1</span>],<span class=\"string\">&#x27;o&#x27;</span>, alpha = <span class=\"number\">0.1</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Employees who left&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction level&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Employees who stayed&#x27;</span>)</span><br><span class=\"line\">plt.plot(data.satisfaction_level[data.left == <span class=\"number\">0</span>],data.last_evaluation[data.left == <span class=\"number\">0</span>],<span class=\"string\">&#x27;o&#x27;</span>, alpha = <span class=\"number\">0.1</span>)</span><br><span class=\"line\">plt.xlim([<span class=\"number\">0.4</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction level&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Text(0.5, 0, &#39;Satisfaction level&#39;)\n</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_43_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_43_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用KMeans聚类分析</span></span><br><span class=\"line\"><span class=\"comment\"># 导入KMeans聚类算法模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选取数据中已经离职的员工（left列为1），并从这些数据中删除特定的列</span></span><br><span class=\"line\"><span class=\"comment\"># 这里axis=1表示按列删除，这些列包括：项目数量、月平均工作小时、公司服务时间、工作事故、是否离职、过去5年是否晋升、销售部门和薪水等</span></span><br><span class=\"line\">kmeans_df =  data[data.left == <span class=\"number\">1</span>].drop([ <span class=\"string\">u&#x27;number_project&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">u&#x27;average_montly_hours&#x27;</span>, <span class=\"string\">u&#x27;time_spend_company&#x27;</span>, <span class=\"string\">u&#x27;Work_accident&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">u&#x27;left&#x27;</span>, <span class=\"string\">u&#x27;promotion_last_5years&#x27;</span>, <span class=\"string\">u&#x27;sales&#x27;</span>, <span class=\"string\">u&#x27;salary&#x27;</span>],axis = <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用KMeans算法对处理后的数据进行聚类，设定聚类数为3，并设置随机种子为0以确保结果的可复现性</span></span><br><span class=\"line\"><span class=\"comment\"># 这里fit方法用于训练模型，使其学习数据的聚类结构</span></span><br><span class=\"line\">kmeans = KMeans(n_clusters = <span class=\"number\">3</span>, random_state = <span class=\"number\">0</span>).fit(kmeans_df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 访问并输出每个聚类中心点的坐标，这些坐标表示了每个聚类的中心位置</span></span><br><span class=\"line\">kmeans.cluster_centers_</span><br></pre></td></tr></table></figure>\n\n<pre><code>array([[0.41014545, 0.51698182],\n       [0.80851586, 0.91170931],\n       [0.11115466, 0.86930085]])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 筛选出离职员工的数据</span></span><br><span class=\"line\">left = data[data.left == <span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用布尔索引和 .loc 方法将 KMeans 聚类的标签分配给离职员工数据</span></span><br><span class=\"line\">left_labels = (data.left == <span class=\"number\">1</span>)</span><br><span class=\"line\">data.loc[left_labels, <span class=\"string\">&#x27;label&#x27;</span>] = kmeans.labels_</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新获取带有标签的离职员工数据</span></span><br><span class=\"line\">left = data[data.left == <span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个新的图形窗口</span></span><br><span class=\"line\">plt.figure()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 x 轴标签为满意度水平</span></span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction Level&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 y 轴标签为最后一次评估结果</span></span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置图形标题为“离职员工的3个聚类”</span></span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;3 Clusters of employees who left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制不同聚类的离职员工的满意度水平和最后一次评估结果</span></span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">0</span>], left.last_evaluation[left.label==<span class=\"number\">0</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">1</span>], left.last_evaluation[left.label==<span class=\"number\">1</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">2</span>], left.last_evaluation[left.label==<span class=\"number\">2</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加图例，解释不同聚类的含义，并设置图例的位置和字体大小</span></span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;Winners&#x27;</span>, <span class=\"string\">&#x27;Frustrated&#x27;</span>, <span class=\"string\">&#x27;Bad Match&#x27;</span>], loc=<span class=\"number\">3</span>, fontsize=<span class=\"number\">15</span>, frameon=<span class=\"literal\">True</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_45_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_45_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>本文构建预测员工是否会离职的模型，并使用模型对员工进行预测。通过本文可以学习到：</p>\n<ul>\n<li>查看数据集的统计信息</li>\n<li>特征工程</li>\n<li>数据集的划分</li>\n<li>数据集的预处理</li>\n<li>数据集的可视化</li>\n<li>模型训练</li>\n<li>模型调参</li>\n<li>模型评估</li>\n<li>模型预测</li>\n</ul>\n<h1 id=\"查看数据集信息\"><a href=\"#查看数据集信息\" class=\"headerlink\" title=\"查看数据集信息\"></a>查看数据集信息</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读入数据</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/data/ML/HumanResourcesAnalytics/HR_comma_sep.csv&#x27;</span></span><br><span class=\"line\">df = pd.read_csv(url)</span><br><span class=\"line\"><span class=\"comment\">#df = pd.read_csv(&#x27;HR_comma_sep.csv&#x27;)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.info()) <span class=\"comment\">#474241623</span></span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 14999 entries, 0 to 14998\nData columns (total 10 columns):\n #   Column                 Non-Null Count  Dtype  \n---  ------                 --------------  -----  \n 0   satisfaction_level     14999 non-null  float64\n 1   last_evaluation        14999 non-null  float64\n 2   number_project         14999 non-null  int64  \n 3   average_montly_hours   14999 non-null  int64  \n 4   time_spend_company     14999 non-null  int64  \n 5   Work_accident          14999 non-null  int64  \n 6   left                   14999 non-null  int64  \n 7   promotion_last_5years  14999 non-null  int64  \n 8   sales                  14999 non-null  object \n 9   salary                 14999 non-null  object \ndtypes: float64(2), int64(6), object(2)\nmemory usage: 1.1+ MB\nNone\n</code></pre>\n<div style=\"overflow-x: auto; width: 100%;\">\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n</head>\n<body>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_montly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n      <th>sales</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<p><strong>header 信息</strong></p>\n<ul>\n<li>satisfaction_level\t员工满意度</li>\n<li>last_evaluation\t员工考核评分</li>\n<li>number_project\t员工参与的项目数</li>\n<li>average_montly_hours\t每个月均工作时长</li>\n<li>time_spend_company\t员工工作年限</li>\n<li>Work_accident\t是否发生过事故</li>\n<li>left\t员工是否离职</li>\n<li>promotion_last_5years\t过去5年中是否有升职</li>\n<li>sales\t员工岗位</li>\n<li>salary 员工薪资水平</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更正列名</span></span><br><span class=\"line\">df.rename(columns=&#123;<span class=\"string\">&#x27;average_montly_hours&#x27;</span>:<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>, <span class=\"string\">&#x27;sales&#x27;</span>:<span class=\"string\">&#x27;department&#x27;</span>&#125;, </span><br><span class=\"line\">          inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n      <th>department</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 展示数据集的统计信息，仅展示数值列</span></span><br><span class=\"line\">df.describe()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.612834</td>\n      <td>0.716102</td>\n      <td>3.803054</td>\n      <td>201.050337</td>\n      <td>3.498233</td>\n      <td>0.144610</td>\n      <td>0.238083</td>\n      <td>0.021268</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.248631</td>\n      <td>0.171169</td>\n      <td>1.232592</td>\n      <td>49.943099</td>\n      <td>1.460136</td>\n      <td>0.351719</td>\n      <td>0.425924</td>\n      <td>0.144281</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.090000</td>\n      <td>0.360000</td>\n      <td>2.000000</td>\n      <td>96.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.440000</td>\n      <td>0.560000</td>\n      <td>3.000000</td>\n      <td>156.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.640000</td>\n      <td>0.720000</td>\n      <td>4.000000</td>\n      <td>200.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.820000</td>\n      <td>0.870000</td>\n      <td>5.000000</td>\n      <td>245.000000</td>\n      <td>4.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>310.000000</td>\n      <td>10.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看各元素的出现次数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;Departments:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (df[<span class=\"string\">&#x27;department&#x27;</span>].value_counts())</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;\\nSalary:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (df[<span class=\"string\">&#x27;salary&#x27;</span>].value_counts())</span><br></pre></td></tr></table></figure>\n\n<pre><code>Departments:\ndepartment\nsales          4140\ntechnical      2720\nsupport        2229\nIT             1227\nproduct_mng     902\nmarketing       858\nRandD           787\naccounting      767\nhr              739\nmanagement      630\nName: count, dtype: int64\n\nSalary:\nsalary\nlow       7316\nmedium    6446\nhigh      1237\nName: count, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 记录各特征的类型和取值范围</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">satisfaction_level | Satisfaction level of employee based on survey | Continuous | [0.09, 1]</span></span><br><span class=\"line\"><span class=\"string\">last_evaluation | Score based on employee&#x27;s last evaluation | Continuous | [0.36, 1]</span></span><br><span class=\"line\"><span class=\"string\">number_project | Number of projects | Continuous | [2, 7]</span></span><br><span class=\"line\"><span class=\"string\">average_monthly_hours | Average monthly hours | Continuous | [96, 310]</span></span><br><span class=\"line\"><span class=\"string\">time_spend_company | Years at company | Continuous | [2, 10]</span></span><br><span class=\"line\"><span class=\"string\">Work_accident | Whether employee had a work accident | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">left | Whether employee had left (Outcome Variable) | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">promotion_last_5years | Whether employee had a promotion in the last 5 years | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">department | Department employee worked in | Categorical | 10 departments</span></span><br><span class=\"line\"><span class=\"string\">salary | Level of employee&#x27;s salary | Categorical | &#123;low, medium, high&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;\\nsatisfaction_level | Satisfaction level of employee based on survey | Continuous | [0.09, 1]\\nlast_evaluation | Score based on employee&#x27;s last evaluation | Continuous | [0.36, 1]\\nnumber_project | Number of projects | Continuous | [2, 7]\\naverage_monthly_hours | Average monthly hours | Continuous | [96, 310]\\ntime_spend_company | Years at company | Continuous | [2, 10]\\nWork_accident | Whether employee had a work accident | Categorical | &#123;0, 1&#125;\\nleft | Whether employee had left (Outcome Variable) | Categorical | &#123;0, 1&#125;\\npromotion_last_5years | Whether employee had a promotion in the last 5 years | Categorical | &#123;0, 1&#125;\\ndepartment | Department employee worked in | Categorical | 10 departments\\nsalary | Level of employee&#x27;s salary | Categorical | &#123;low, medium, high&#125;\\n&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"特征工程\"><a href=\"#特征工程\" class=\"headerlink\" title=\"特征工程\"></a>特征工程</h1><ul>\n<li>查找相关性大的特征，只保留其中的一个。</li>\n<li>也可查看与标签（left）相关性较大的特征，如此数据集中的<code>satisfaction_level</code>。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 筛选 DataFrame 中的所有数值列</span></span><br><span class=\"line\">numeric_df = df.select_dtypes(include=[np.number])</span><br><span class=\"line\"><span class=\"comment\"># 计算数值列之间的相关系数</span></span><br><span class=\"line\">numeric_df.corr()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>satisfaction_level</th>\n      <td>1.000000</td>\n      <td>0.105021</td>\n      <td>-0.142970</td>\n      <td>-0.020048</td>\n      <td>-0.100866</td>\n      <td>0.058697</td>\n      <td>-0.388375</td>\n      <td>0.025605</td>\n    </tr>\n    <tr>\n      <th>last_evaluation</th>\n      <td>0.105021</td>\n      <td>1.000000</td>\n      <td>0.349333</td>\n      <td>0.339742</td>\n      <td>0.131591</td>\n      <td>-0.007104</td>\n      <td>0.006567</td>\n      <td>-0.008684</td>\n    </tr>\n    <tr>\n      <th>number_project</th>\n      <td>-0.142970</td>\n      <td>0.349333</td>\n      <td>1.000000</td>\n      <td>0.417211</td>\n      <td>0.196786</td>\n      <td>-0.004741</td>\n      <td>0.023787</td>\n      <td>-0.006064</td>\n    </tr>\n    <tr>\n      <th>average_monthly_hours</th>\n      <td>-0.020048</td>\n      <td>0.339742</td>\n      <td>0.417211</td>\n      <td>1.000000</td>\n      <td>0.127755</td>\n      <td>-0.010143</td>\n      <td>0.071287</td>\n      <td>-0.003544</td>\n    </tr>\n    <tr>\n      <th>time_spend_company</th>\n      <td>-0.100866</td>\n      <td>0.131591</td>\n      <td>0.196786</td>\n      <td>0.127755</td>\n      <td>1.000000</td>\n      <td>0.002120</td>\n      <td>0.144822</td>\n      <td>0.067433</td>\n    </tr>\n    <tr>\n      <th>Work_accident</th>\n      <td>0.058697</td>\n      <td>-0.007104</td>\n      <td>-0.004741</td>\n      <td>-0.010143</td>\n      <td>0.002120</td>\n      <td>1.000000</td>\n      <td>-0.154622</td>\n      <td>0.039245</td>\n    </tr>\n    <tr>\n      <th>left</th>\n      <td>-0.388375</td>\n      <td>0.006567</td>\n      <td>0.023787</td>\n      <td>0.071287</td>\n      <td>0.144822</td>\n      <td>-0.154622</td>\n      <td>1.000000</td>\n      <td>-0.061788</td>\n    </tr>\n    <tr>\n      <th>promotion_last_5years</th>\n      <td>0.025605</td>\n      <td>-0.008684</td>\n      <td>-0.006064</td>\n      <td>-0.003544</td>\n      <td>0.067433</td>\n      <td>0.039245</td>\n      <td>-0.061788</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\">%matplotlib inline</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看离职员工部门分布，发现HR离职员工最多</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;department&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df)</span><br><span class=\"line\">plot.set_xticklabels(rotation=<span class=\"number\">45</span>, horizontalalignment=<span class=\"string\">&#x27;right&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_10_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看工资水平和离职率的关系</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;salary&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_11_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看经理工资水平分布</span></span><br><span class=\"line\">df[df[<span class=\"string\">&#x27;department&#x27;</span>]==<span class=\"string\">&#x27;management&#x27;</span>][<span class=\"string\">&#x27;salary&#x27;</span>].value_counts().plot(kind=<span class=\"string\">&#x27;pie&#x27;</span>, title=<span class=\"string\">&#x27;Management salary level distribution&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_12_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看研发工资水平分布</span></span><br><span class=\"line\">df[df[<span class=\"string\">&#x27;department&#x27;</span>]==<span class=\"string\">&#x27;RandD&#x27;</span>][<span class=\"string\">&#x27;salary&#x27;</span>].value_counts().plot(kind=<span class=\"string\">&#x27;pie&#x27;</span>, title=<span class=\"string\">&#x27;R&amp;D dept salary level distribution&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_13_0.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 绘制员工满意度分布的直方图，并分为两类员工：已离职和未离职</span></span><br><span class=\"line\"><span class=\"comment\"># 生成21个等间距的数值作为直方图的区间，范围从0.0001到1.0001</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">0.0001</span>, <span class=\"number\">1.0001</span>, <span class=\"number\">21</span>)</span><br><span class=\"line\"><span class=\"comment\"># 绘制直方图。首先筛选出已离职员工（df[&#x27;left&#x27;]==1）和未离职员工（df[&#x27;left&#x27;]==0）的满意度数据，使用指定的区间（bins）、透明度（alpha）和标签（label）进行绘制。</span></span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;satisfaction_level&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.7</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;satisfaction_level&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.5</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;satisfaction_level&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 设置x轴的显示范围从0到1.05</span></span><br><span class=\"line\">plt.xlim((<span class=\"number\">0</span>,<span class=\"number\">1.05</span>))</span><br><span class=\"line\"><span class=\"comment\"># 在最合适的位置添加图例</span></span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_14_0.png\" alt=\"png\"></p>\n<p>发现已离职员工对公司的满意度比较低（0~0.5），当然也存在满意度较高（0.8附近）的员工离职的情况。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Last evaluation</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">0.3501</span>, <span class=\"number\">1.0001</span>, <span class=\"number\">14</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;last_evaluation&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;last_evaluation&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;last_evaluation&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_16_0.png\" alt=\"png\"></p>\n<p>公司评分高（0.8~1.0）的员工离职了很多，原因可能是这部分员工能力强，跳槽寻求更好的工作机会。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Number of projects </span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">1.5</span>, <span class=\"number\">7.5</span>, <span class=\"number\">7</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;number_project&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;number_project&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;number_project&#x27;</span>)</span><br><span class=\"line\">plt.grid(axis=<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_18_0.png\" alt=\"png\"></p>\n<p>项目少时离职了，可能因为员工锻炼机会少。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Average monthly hours</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">75</span>, <span class=\"number\">325</span>, <span class=\"number\">11</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_20_0.png\" alt=\"png\"></p>\n<p>工作时长少和多都容易离职。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Years at company </span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">1.5</span>, <span class=\"number\">10.5</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;time_spend_company&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;time_spend_company&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;time_spend_company&#x27;</span>)</span><br><span class=\"line\">plt.xlim((<span class=\"number\">1</span>,<span class=\"number\">11</span>))</span><br><span class=\"line\">plt.grid(axis=<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">plt.xticks(np.arange(<span class=\"number\">2</span>,<span class=\"number\">11</span>))</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_22_0.png\" alt=\"png\"></p>\n<p>工作年限3年，离职率最高。年限越长，离职率越低。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># whether employee had work accident</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;Work_accident&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_24_0.png\" alt=\"png\"></p>\n<p>未发生工作事故的离职率较高，难以解释。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#whether employee had promotion in last 5 years</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;promotion_last_5years&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_26_0.png\" alt=\"png\"></p>\n<p>不升职的离职率较高。</p>\n<h1 id=\"数据预处理\"><a href=\"#数据预处理\" class=\"headerlink\" title=\"数据预处理\"></a>数据预处理</h1><h2 id=\"独热编码替换分类数据\"><a href=\"#独热编码替换分类数据\" class=\"headerlink\" title=\"独热编码替换分类数据\"></a>独热编码替换分类数据</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 丢弃标签（left）列</span></span><br><span class=\"line\">X = df.drop(<span class=\"string\">&#x27;left&#x27;</span>, axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"comment\"># 提取标签列</span></span><br><span class=\"line\">y = df[<span class=\"string\">&#x27;left&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 删除部门与工资列，后面会通过独热编码将信息添加回来</span></span><br><span class=\"line\">X.drop([<span class=\"string\">&#x27;department&#x27;</span>,<span class=\"string\">&#x27;salary&#x27;</span>], axis=<span class=\"number\">1</span>, inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># One-hot encoding</span></span><br><span class=\"line\"><span class=\"comment\"># 对工资进行独热编码</span></span><br><span class=\"line\">salary_dummy = pd.get_dummies(df[<span class=\"string\">&#x27;salary&#x27;</span>])</span><br><span class=\"line\"><span class=\"comment\"># 对部门进行独热编码</span></span><br><span class=\"line\">department_dummy = pd.get_dummies(df[<span class=\"string\">&#x27;department&#x27;</span>])</span><br><span class=\"line\">X = pd.concat([X, salary_dummy], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">X = pd.concat([X, department_dummy], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">X.head()</span><br></pre></td></tr></table></figure>\n\n<div style=\"overflow-x: auto; width: 100%;\">\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>promotion_last_5years</th>\n      <th>high</th>\n      <th>low</th>\n      <th>medium</th>\n      <th>IT</th>\n      <th>RandD</th>\n      <th>accounting</th>\n      <th>hr</th>\n      <th>management</th>\n      <th>marketing</th>\n      <th>product_mng</th>\n      <th>sales</th>\n      <th>support</th>\n      <th>technical</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h2 id=\"拆分训练集和测试集\"><a href=\"#拆分训练集和测试集\" class=\"headerlink\" title=\"拆分训练集和测试集\"></a>拆分训练集和测试集</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 划分训练集和测试集 (70%/30%)</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.3</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据标准化\"><a href=\"#数据标准化\" class=\"headerlink\" title=\"数据标准化\"></a>数据标准化</h2><ul>\n<li>比较大的数值，算法会认为其比较重要，导致结果不准确。</li>\n<li>数值差异比较大的话，模型收敛较慢。</li>\n<li>因此，需要将数据标准化。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据标准化，这里是一个例子</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">stdsc = StandardScaler()</span><br><span class=\"line\">X_example = np.array([[ <span class=\"number\">10.</span>, -<span class=\"number\">2.</span>,  <span class=\"number\">23.</span>],</span><br><span class=\"line\">                      [ <span class=\"number\">5.</span>,  <span class=\"number\">32.</span>,  <span class=\"number\">211.</span>],</span><br><span class=\"line\">                      [ <span class=\"number\">10.</span>,  <span class=\"number\">1.</span>, -<span class=\"number\">130.</span>]])</span><br><span class=\"line\">X_example = stdsc.fit_transform(X_example)</span><br><span class=\"line\">X_example = pd.DataFrame(X_example)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (X_example)</span><br><span class=\"line\">X_example.describe()</span><br></pre></td></tr></table></figure>\n\n<pre><code>          0         1         2\n0  0.707107 -0.802454 -0.083658\n1 -1.414214  1.409716  1.264429\n2  0.707107 -0.607262 -1.180771\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>3.000000e+00</td>\n      <td>3.000000e+00</td>\n      <td>3.000000e+00</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>-2.960595e-16</td>\n      <td>-1.110223e-16</td>\n      <td>7.401487e-17</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.224745e+00</td>\n      <td>1.224745e+00</td>\n      <td>1.224745e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-1.414214e+00</td>\n      <td>-8.024539e-01</td>\n      <td>-1.180771e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>-3.535534e-01</td>\n      <td>-7.048582e-01</td>\n      <td>-6.322145e-01</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>7.071068e-01</td>\n      <td>-6.072624e-01</td>\n      <td>-8.365788e-02</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.071068e-01</td>\n      <td>4.012270e-01</td>\n      <td>5.903856e-01</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>7.071068e-01</td>\n      <td>1.409716e+00</td>\n      <td>1.264429e+00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 分别对训练集和测试集进行标准化</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"></span><br><span class=\"line\">stdsc = StandardScaler()</span><br><span class=\"line\"><span class=\"comment\"># transform our training features</span></span><br><span class=\"line\">X_train_std = stdsc.fit_transform(X_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (X_train_std[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"comment\"># transform the testing features in the same way</span></span><br><span class=\"line\">X_test_std = stdsc.transform(X_test)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[ 1.40697692 -0.21068428 -0.65422416 -1.37529896 -1.02172591 -0.41080801\n -0.14595719 -0.30564365 -0.98084819  1.16499228 -0.2981308  -0.23781569\n -0.22665375 -0.23057496 -0.21332806 -0.24641294 -0.25073288  1.62416352\n -0.41712208 -0.47247431]\n</code></pre>\n<h1 id=\"构建模型\"><a href=\"#构建模型\" class=\"headerlink\" title=\"构建模型\"></a>构建模型</h1><h2 id=\"随机森林法\"><a href=\"#随机森林法\" class=\"headerlink\" title=\"随机森林法\"></a>随机森林法</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 交叉验证（Cross validation）</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> ShuffleSplit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进行20折交叉验证</span></span><br><span class=\"line\">cv = ShuffleSplit(n_splits=<span class=\"number\">20</span>, test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建随机森林模型</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\">rf_model = RandomForestClassifier()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置RF模型，建立树的数量</span></span><br><span class=\"line\">rf_param = &#123;<span class=\"string\">&#x27;n_estimators&#x27;</span>: <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 探索模型参数（最佳树的个数）</span></span><br><span class=\"line\">rf_grid = GridSearchCV(rf_model, rf_param, cv=cv)</span><br><span class=\"line\">rf_grid.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出最佳参数和最佳得分</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Parameter with best score:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(rf_grid.best_params_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Cross validation score:&#x27;</span>, rf_grid.best_score_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Parameter with best score:\n&#123;&#39;n_estimators&#39;: 9&#125;\nCross validation score: 0.9835079365079364\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在测试集上评估模型</span></span><br><span class=\"line\">best_rf = rf_grid.best_estimator_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Test score:&#x27;</span>, best_rf.score(X_test, y_test))</span><br></pre></td></tr></table></figure>\n\n<pre><code>Test score: 0.9884444444444445\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过随机森林查看特征的重要性，原理是每次打乱一个特征（或添加噪音），然后看预测结果（错误率）是否发生变化，如果变化大，则该特征对预测结果有影响，否则没有影响</span></span><br><span class=\"line\">features = X.columns</span><br><span class=\"line\">feature_importances = best_rf.feature_importances_</span><br><span class=\"line\"></span><br><span class=\"line\">features_df = pd.DataFrame(&#123;<span class=\"string\">&#x27;Features&#x27;</span>: features, <span class=\"string\">&#x27;Importance Score&#x27;</span>: feature_importances&#125;)</span><br><span class=\"line\">features_df.sort_values(<span class=\"string\">&#x27;Importance Score&#x27;</span>, inplace=<span class=\"literal\">True</span>, ascending=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">features_df</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Features</th>\n      <th>Importance Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>satisfaction_level</td>\n      <td>0.260366</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>average_monthly_hours</td>\n      <td>0.186585</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>number_project</td>\n      <td>0.179788</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>time_spend_company</td>\n      <td>0.179571</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>last_evaluation</td>\n      <td>0.144083</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Work_accident</td>\n      <td>0.011949</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>low</td>\n      <td>0.006395</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>high</td>\n      <td>0.005206</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>medium</td>\n      <td>0.003336</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>sales</td>\n      <td>0.003200</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>support</td>\n      <td>0.003070</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>technical</td>\n      <td>0.003039</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>RandD</td>\n      <td>0.002143</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>IT</td>\n      <td>0.002048</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>accounting</td>\n      <td>0.001887</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>promotion_last_5years</td>\n      <td>0.001799</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>management</td>\n      <td>0.001755</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>hr</td>\n      <td>0.001425</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>product_mng</td>\n      <td>0.001182</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>marketing</td>\n      <td>0.001173</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 计算前五项特征的重要性之和</span></span><br><span class=\"line\">features_df[<span class=\"string\">&#x27;Importance Score&#x27;</span>][:<span class=\"number\">5</span>].<span class=\"built_in\">sum</span>()</span><br></pre></td></tr></table></figure>\n\n<pre><code>np.float64(0.9503925098929926)\n</code></pre>\n<h2 id=\"基于聚类模型的分析\"><a href=\"#基于聚类模型的分析\" class=\"headerlink\" title=\"基于聚类模型的分析\"></a>基于聚类模型的分析</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\">%matplotlib inline</span><br><span class=\"line\"></span><br><span class=\"line\">data = pd.read_csv(url)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize = (<span class=\"number\">8</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">plt.plot(data.satisfaction_level[data.left == <span class=\"number\">1</span>],data.last_evaluation[data.left == <span class=\"number\">1</span>],<span class=\"string\">&#x27;o&#x27;</span>, alpha = <span class=\"number\">0.1</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Employees who left&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction level&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Employees who stayed&#x27;</span>)</span><br><span class=\"line\">plt.plot(data.satisfaction_level[data.left == <span class=\"number\">0</span>],data.last_evaluation[data.left == <span class=\"number\">0</span>],<span class=\"string\">&#x27;o&#x27;</span>, alpha = <span class=\"number\">0.1</span>)</span><br><span class=\"line\">plt.xlim([<span class=\"number\">0.4</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction level&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Text(0.5, 0, &#39;Satisfaction level&#39;)\n</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_43_1.png\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用KMeans聚类分析</span></span><br><span class=\"line\"><span class=\"comment\"># 导入KMeans聚类算法模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选取数据中已经离职的员工（left列为1），并从这些数据中删除特定的列</span></span><br><span class=\"line\"><span class=\"comment\"># 这里axis=1表示按列删除，这些列包括：项目数量、月平均工作小时、公司服务时间、工作事故、是否离职、过去5年是否晋升、销售部门和薪水等</span></span><br><span class=\"line\">kmeans_df =  data[data.left == <span class=\"number\">1</span>].drop([ <span class=\"string\">u&#x27;number_project&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">u&#x27;average_montly_hours&#x27;</span>, <span class=\"string\">u&#x27;time_spend_company&#x27;</span>, <span class=\"string\">u&#x27;Work_accident&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">u&#x27;left&#x27;</span>, <span class=\"string\">u&#x27;promotion_last_5years&#x27;</span>, <span class=\"string\">u&#x27;sales&#x27;</span>, <span class=\"string\">u&#x27;salary&#x27;</span>],axis = <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用KMeans算法对处理后的数据进行聚类，设定聚类数为3，并设置随机种子为0以确保结果的可复现性</span></span><br><span class=\"line\"><span class=\"comment\"># 这里fit方法用于训练模型，使其学习数据的聚类结构</span></span><br><span class=\"line\">kmeans = KMeans(n_clusters = <span class=\"number\">3</span>, random_state = <span class=\"number\">0</span>).fit(kmeans_df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 访问并输出每个聚类中心点的坐标，这些坐标表示了每个聚类的中心位置</span></span><br><span class=\"line\">kmeans.cluster_centers_</span><br></pre></td></tr></table></figure>\n\n<pre><code>array([[0.41014545, 0.51698182],\n       [0.80851586, 0.91170931],\n       [0.11115466, 0.86930085]])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 筛选出离职员工的数据</span></span><br><span class=\"line\">left = data[data.left == <span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用布尔索引和 .loc 方法将 KMeans 聚类的标签分配给离职员工数据</span></span><br><span class=\"line\">left_labels = (data.left == <span class=\"number\">1</span>)</span><br><span class=\"line\">data.loc[left_labels, <span class=\"string\">&#x27;label&#x27;</span>] = kmeans.labels_</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新获取带有标签的离职员工数据</span></span><br><span class=\"line\">left = data[data.left == <span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个新的图形窗口</span></span><br><span class=\"line\">plt.figure()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 x 轴标签为满意度水平</span></span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction Level&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 y 轴标签为最后一次评估结果</span></span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置图形标题为“离职员工的3个聚类”</span></span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;3 Clusters of employees who left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制不同聚类的离职员工的满意度水平和最后一次评估结果</span></span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">0</span>], left.last_evaluation[left.label==<span class=\"number\">0</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">1</span>], left.last_evaluation[left.label==<span class=\"number\">1</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">2</span>], left.last_evaluation[left.label==<span class=\"number\">2</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加图例，解释不同聚类的含义，并设置图例的位置和字体大小</span></span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;Winners&#x27;</span>, <span class=\"string\">&#x27;Frustrated&#x27;</span>, <span class=\"string\">&#x27;Bad Match&#x27;</span>], loc=<span class=\"number\">3</span>, fontsize=<span class=\"number\">15</span>, frameon=<span class=\"literal\">True</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_45_0.png\" alt=\"png\"></p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"AI","path":"api/categories/AI.json"}],"tags":[{"name":"机器学习","path":"api/tags/机器学习.json"},{"name":"Scikit-learn","path":"api/tags/Scikit-learn.json"}]}