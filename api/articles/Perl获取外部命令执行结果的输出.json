{"title":"Perl获取外部命令执行结果的输出","slug":"Perl获取外部命令执行结果的输出","date":"2019-04-19T07:54:38.000Z","updated":"2022-02-28T05:08:34.946Z","comments":true,"path":"api/articles/Perl获取外部命令执行结果的输出.json","excerpt":"有时候 perl 脚本需要与 Linux 外部命令进行交互，本文讲解如何将外部命令的执行结果的输出（此处指的不是运行结果的返回值，而是标准输出上的内容之类）赋给 perl 变量。","covers":null,"content":"<p>有时候 perl 脚本需要与 Linux 外部命令进行交互，本文讲解如何将外部命令的执行结果的输出（此处指的不是运行结果的返回值，而是标准输出上的内容之类）赋给 perl 变量。</p>\n<span id=\"more\"></span>\n<p>首先需要了解 perl 调用 shell 命令的三种方式：</p>\n</br>\n**1. system**\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">system<span class=\"token punctuation\">(</span><span class=\"token string\">\"command\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n通过system运行得到的结果是一个返回值，其实是一串数字，若外部命令运行成功，则返回值为“0”，若运行失败，则返回非0的值。\n</br>\n**2. 反引号** （ESC下面的那个键）\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">command</span><span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n通过反引号运行，会返回shell运行结果的输出，下面的脚本通过“which”查询“COG_2014.phr”的绝对路径，并将其赋值给`$path`。然后通过正则表达式获取“COG_2014.phr”所在的目录的路径，并将其赋值给变量`$cogdb_dir`。\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">my <span class=\"token variable\">$cogdb_dir</span><span class=\"token punctuation\">;</span>\nmy <span class=\"token variable\">$path</span> <span class=\"token operator\">=</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">which</span> COG_2014.phr<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token operator\">=~</span>/<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>COG_2014.*/<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$cogdb_dir</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nprint <span class=\"token variable\">$cogdb_dir</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</br>\n**3. exec**\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">exec<span class=\"token punctuation\">(</span><span class=\"token string\">\"command\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\nexec与system相似，但是执行完exec命令之后，perl会终止运行，不再执行后续的代码。\n","more":"<p>首先需要了解 perl 调用 shell 命令的三种方式：</p>\n</br>\n**1. system**\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">system<span class=\"token punctuation\">(</span><span class=\"token string\">\"command\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n通过system运行得到的结果是一个返回值，其实是一串数字，若外部命令运行成功，则返回值为“0”，若运行失败，则返回非0的值。\n</br>\n**2. 反引号** （ESC下面的那个键）\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">command</span><span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n通过反引号运行，会返回shell运行结果的输出，下面的脚本通过“which”查询“COG_2014.phr”的绝对路径，并将其赋值给`$path`。然后通过正则表达式获取“COG_2014.phr”所在的目录的路径，并将其赋值给变量`$cogdb_dir`。\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">my <span class=\"token variable\">$cogdb_dir</span><span class=\"token punctuation\">;</span>\nmy <span class=\"token variable\">$path</span> <span class=\"token operator\">=</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">which</span> COG_2014.phr<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token operator\">=~</span>/<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>COG_2014.*/<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$cogdb_dir</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nprint <span class=\"token variable\">$cogdb_dir</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</br>\n**3. exec**\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">exec<span class=\"token punctuation\">(</span><span class=\"token string\">\"command\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\nexec与system相似，但是执行完exec命令之后，perl会终止运行，不再执行后续的代码。","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]}