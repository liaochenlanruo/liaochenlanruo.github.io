{"title":"PGCGAP中文说明","slug":"PGCGAP中文说明","date":"2019-04-28T07:22:33.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/PGCGAP中文说明.json","excerpt":"为了方便广大中文用户学习PGCGAP的使用，特意书写该中文文档，但中文文档更新较慢，强烈建议大家阅读英文文档！","covers":null,"content":"<p><strong>为了方便广大中文用户学习PGCGAP的使用，特意书写该中文文档，但中文文档更新较慢，强烈建议大家阅读英文文档！</strong></p>\n<span id=\"more\"></span>\n\n<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/2019/04/28/PGCGAP%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/\">中文说明</a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>PGCGAP是用于原核生物基因组学和比较基因组学分析管道，目前该管道包含12个模块，可以接受Illumina双端reads、Oxford reads或PacBio reads作为输入，可以完成基因组组装、基因预测和注释，并可以进行比较基因组学分析，包括构建单拷贝核心蛋白进化树以及单拷贝核心基因SNPs进化树，泛基因组分析与进化树构建，全基因组平均核苷酸一致性（ANI）计算，同源蛋白家族聚类及进化树构建，COG注释，SNPs和INDELs calling，抗生素抗性基因&#x2F;毒力因子预测，Multi-FASTA进化树构建，组装后基因组短序列过滤与统计信息呈现（genome size，GC content……）。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>PGCGAP可以安装于Windows子系统Linux（WSL）、Linux x64系统以及macOS中。</p>\n<p><strong>Step1：通过<a href=\"https://bioconda.github.io/user/install.html#install-conda\">Bioconda</a>安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> create -n pgcgap python=3.7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> install pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>声明：用conda安装时一直在“Solving environment”怎么办？</strong>随着加入conda的软件越来越多，使其索引库变的庞大，因此安装新的软件时需要逐一验证软件间的兼容性，会耗费大量时间。严重的时候会无法完成软件的安装，这个时候坐以待毙是不行的。下面介绍两种办法解决此问题：<br/></p>\n\n\n<ul>\n<li><p>Method 1: 使用mamba (非常快) 替代conda。前提是已经用conda创建好了pgcgap的虚拟环境：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> install mamba -c conda-forge</span><br><span class=\"line\"><span class=\"variable\">$mamba</span> install pgcgap</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Method 2: 使用本人提供的pgcgap<a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.ym\">配置文件</a>来创建环境并安装PGCGAP：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download pgcgap_latest_env.yml</span></span><br><span class=\"line\"><span class=\"variable\">$wget</span> https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.yml</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class=\"line\"><span class=\"variable\">$conda</span> <span class=\"built_in\">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure>\n<br/></li>\n</ul>\n<p><strong>Step2：配置COG数据库</strong> (初次安装PGCGAP后需要执行此步骤)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br></pre></td></tr></table></figure>\n\n<p><strong>Step3: 升级PGCGAP(升级版本时运行)</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> update pgcgap</span><br><span class=\"line\"><span class=\"comment\"># v1.0.28以后可通过如下命令升级</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-update</span><br></pre></td></tr></table></figure>\n\n<p><strong>此外，用户也可以通过容器(docker)安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$docker</span> pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：</strong> 前提是用户电脑中安装了<a href=\"https://www.docker.com/\">Docker</a>，Docker可以跨平台使用。可用的tag可<a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">在此</a>查询，建议安装最新版。</p>\n<h2 id=\"依赖包\"><a href=\"#依赖包\" class=\"headerlink\" title=\"依赖包\"></a>依赖包</h2><ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/gubbins\">Gubbins</a> &gt;&#x3D;2.3.4</li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org/\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"PGCGAP用法\"><a href=\"#PGCGAP用法\" class=\"headerlink\" title=\"PGCGAP用法\"></a>PGCGAP用法</h2><ul>\n<li><p><strong>显示帮助信息：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>管道用法：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [modules] [options]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>展示各模块的参数：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>__展示各模块的运行示例：__（这货是我用的最多的）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> Examples</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>配置COG数据库：</strong> (初次安装PGCGAP后需要配置COG数据库)</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>功能模块：</strong></p>\n<ul>\n<li><p><strong>[--All]</strong>                          运行Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH 和 pCOG模块</p>\n</li>\n<li><p><strong>[--Assemble]</strong>                     基因组组装</p>\n</li>\n<li><p><strong>[--Annotate]</strong>                     基因预测及注释</p>\n</li>\n<li><p><strong>[--CoreTree]</strong>                     构建单拷贝核心蛋白进化树与核心SNPs进化树</p>\n</li>\n<li><p><strong>[--Pan]</strong>                          泛基因组分析并构建单拷贝核心蛋白进化树</p>\n</li>\n<li><p><strong>[--OrthoF]</strong>                       同源蛋白家族聚类及单拷贝直系同源蛋白进化树构建</p>\n</li>\n<li><p><strong>[--ANI]</strong>                          计算平均核苷酸一致性 ( ANI )</p>\n</li>\n<li><p><strong>[--MASH]</strong>                         通过MinHash估算基因组&#x2F;宏基因组相似性</p>\n</li>\n<li><p><strong>[--pCOG]</strong>                         COG注释</p>\n</li>\n<li><p><strong>[--VAR]</strong>                          变异检测并构建核心基因组进化树</p>\n</li>\n<li><p><strong>[--AntiRes]</strong>                      从基因组(contigs&#x2F;scaffolds)中预测抗生素抗性基因或毒力基因</p>\n</li>\n<li><p><strong>[--STREE]</strong>                        基于Multi-FASTA序列(所有序列在一个文件中)构建系统发育树</p>\n</li>\n<li><p><strong>[--ACC]</strong>                          一些实用的附加程序(目前只开发了”Assess”用于对基因组中的短序列进行过滤，并评估过滤前后的基因组状态)</p>\n</li>\n</ul>\n</li>\n<li><p><strong>全局参数（请参照英文版，参数有所改变，中文版暂时没有时间修改）：</strong></p>\n<ul>\n<li><p><strong>[--strain_num (INT)]</strong>             [Required by “--All”, “--CoreTree”, “--Pan”, “--VAR” and “--COG”] 用于分析的菌株数目，不包含参考基因组</p>\n</li>\n<li><p><strong>[--ReadsPath (PATH)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] 所有菌株测序reads所在的目录路径  Default .&#x2F;Reads&#x2F;Illumina)</p>\n</li>\n<li><p><strong>[--scafPath (PATH)]</strong>              [Required by “--All”, “--Assess”, “--Annotate” and “--MASH”] contigs&#x2F;scaffolds的存放路径 (Default “Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina”)</p>\n</li>\n<li><p><strong>[--AAsPath (PATH)]</strong>               [Required by “--All”, “--CoreTree”, “--OrthoF” and “--pCOG”] 所有菌株的氨基酸序列文件的存放路径 (Default “.&#x2F;Results&#x2F;Annotations&#x2F;AAs”)</p>\n</li>\n<li><p><strong>[--reads1 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 1的后缀名 (例如 reads 1 的名字为 “YBT-1520_L1_I050.R1.clean.fastq.gz”，”YBT-1520” 是菌株名，则后缀名为 “.R1.clean.fastq.gz”)</p>\n</li>\n<li><p><strong>[--reads2 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 2的后缀名</p>\n</li>\n<li><p><strong>[--Scaf_suffix (STRING)]</strong>         [Required by “--All”, “--Assess”, “--Annotate” “MASH” and “--ANI”] contigs&#x2F;scaffolds的后缀名 (Default -8.fa)</p>\n</li>\n<li><p><strong>[--filter_length (INT)]</strong>          [Required by “--All”, “--Assemble” and “--Assess”]&gt; Sequences shorter than the ‘filter_length’ will be deleted from the assembled genomes. ( Default 200 )</p>\n</li>\n<li><p><strong>[--codon (INT)]</strong>                  [Required by “--All”, “--Annotate”, “--CoreTree” and “--Pan”] 翻译密码子表 (Default 11)</p>\n<ul>\n<li>1                             Universal code</li>\n<li>2                             Vertebrate mitochondrial code</li>\n<li>3                             Yeast mitochondrial code</li>\n<li>4                             Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma&#x2F;Spiroplasma code</li>\n<li>5                             Invertebrate mitochondrial</li>\n<li>6                             Ciliate, Dasycladacean and Hexamita nuclear code</li>\n<li>9                             Echinoderm and Flatworm mitochondrial code</li>\n<li>10                            Euplotid nuclear code</li>\n<li>11                            Bacterial, archaeal and plant plastid code ( Default )</li>\n<li>12                            Alternative yeast nuclear code</li>\n<li>13                            Ascidian mitochondrial code</li>\n<li>14                            Alternative flatworm mitochondrial code</li>\n<li>15                            Blepharisma nuclear code</li>\n<li>16                            Chlorophycean mitochondrial code</li>\n<li>21                            Trematode mitochondrial code</li>\n<li>22                            Scenedesmus obliquus mitochondrial code</li>\n<li>23                            Thraustochytrium mitochondrial code</li>\n</ul>\n</li>\n<li><p><strong>[--suffix_len (INT)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] <strong>(强烈建议设置此项)</strong> reads后缀的长度。例如 “YBT-1520_L1_I050.R1.clean.fastq.gz” 的 --suffix_len 为 26 (“YBT-1520” 为菌株名) (Default 0)</p>\n</li>\n<li><p><strong>[--logs (STRING)]</strong>                Log文件的名字 (Default Logs.txt)</p>\n</li>\n<li><p><strong>[--threads (INT)]</strong>                运行程序时调用的线程数目 (Default 4)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>各模块的局部参数：</strong></p>\n<ul>\n<li><p><strong>--Assemble</strong></p>\n<ul>\n<li><p><strong>[--platform (STRING)]</strong>        [Required] 测序平台，可以选择 “illumina”, “pacbio” 和 “oxford” (Default illumina)</p>\n</li>\n<li><p><strong>[--assembler (STRING)]</strong>       [Required] 用于illumina数据组装的软件，可选”abyss”, “spades” 或”auto” ( Default abyss )</p>\n</li>\n<li><p><strong>[--kmmer (INT)]</strong>              [Required] Illumina数据组装时采用的 k-mer 大小 (Default 81)</p>\n</li>\n<li><p><strong>[--genomeSize (FLOAT)]</strong>       [Required] 预估的基因组大小，如 3.7m、2.8g，组装 PacBio data 和 Oxford data 时需要设置此项 (Default Unset)</p>\n</li>\n<li><p><strong>[--short1 (STRING)]</strong>           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--short2 (STRING)]</strong>           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--long (STRING)]</strong>             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--hout (STRING)]</strong>             [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Annotate</strong></p>\n<ul>\n<li><p><strong>[--genus (STRING)]</strong>           菌株的属名 ( Default “NA” )</p>\n</li>\n<li><p><strong>[--species (STRING)]</strong>         菌株的种名 ( Default “NA”)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--CoreTree</strong></p>\n<ul>\n<li><p><strong>[--CDsPath (PATH)]</strong>           [Required] 包含所有菌株核苷酸序列文件的路径，如果设置为”NO”，将不会构建核心SNPs进化树 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;CDs” )</p>\n</li>\n<li><p><strong>[-c (FLOAT)]</strong>                 序列一致性 (identity) 阈值 ( Default 0.5)</p>\n</li>\n<li><p><strong>[-n (INT)]</strong>                   Word_length,  -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li><p><strong>[-G (INT)]</strong>                   Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li><p><strong>[-t (INT)]</strong>                   Tolerance for redundance ( Default 0 )</p>\n</li>\n<li><p><strong>[-aL (FLOAT)]</strong>                Alignment coverage for the longer sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li><p><strong>[-aS (FLOAT)]</strong>                Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li><p><strong>[-g (INT)]</strong>                   If set to 0, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li><p><strong>[-d (INT)]</strong>                   length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--Pan</strong></p>\n<ul>\n<li><p><strong>[--GffPath (PATH)]</strong>           [Required] 存放所有菌株GFF3格式文件的路径 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;GFF” )</p>\n</li>\n<li><p><strong>[--identi (INT)]</strong>                  Minimum percentage identity for blastp ( Default 95 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n- __\\-\\-OrthoF__\n\n<pre><code>- __[\\-\\-Sprogram (STRING)]__        序列对比程序，Options: blast, mmseqs, blast_gz, diamond ( Default blast)\n</code></pre>\n<br/>\n\n<ul>\n<li><p><strong>--ANI</strong></p>\n<ul>\n<li><p><strong>[--queryL (FILE)]</strong>            [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--refL (FILE)]</strong>              [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--ANIO (FILE)]</strong>              The name of output file ( Default “Results&#x2F;ANI&#x2F;ANIs” )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--VAR</strong></p>\n<ul>\n<li><p><strong>[--refgbk (FILE)]</strong>            [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: “&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk”</p>\n</li>\n<li><p><strong>[--qualtype (STRING)]</strong>        [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p>\n</li>\n<li><p><strong>[--qual (INT)]</strong>               Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li><p><strong>[--length (INT)]</strong>             Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li><p><strong>[--mincov (INT)]</strong>             The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li><p><strong>[--minfrac (FLOAT)]</strong>          The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li><p><strong>[--minqual (INT)]</strong>            The minimum VCF variant call “quality” ( Default 100 )</p>\n</li>\n<li><p><strong>[--ram (INT)]</strong>                Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n<li><p><strong>[--tree_builder (STRING)]</strong>    Application to use for tree building [raxml|fasttree|hybrid] ( Default fasttree)</p>\n</li>\n<li><p><strong>[--iterations (INT)]</strong>         Maximum No. of iterations for gubbins ( Default 5 )</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--AntiRes</strong></p>\n<ul>\n<li><p><strong>[--db (STRING)]</strong>              [Required] 用于分析的数据库, options: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, ecoli_vf, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default ncbi )</p>\n</li>\n<li><p><strong>[--identity (INT)]</strong>           [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li><p><strong>[--coverage (INT)]</strong>           [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--STREE</strong></p>\n<ul>\n<li><p><strong>[--seqfile (STRING)]</strong>        [Required] Path of the sequence file for analysis.</p>\n</li>\n<li><p><strong>[--seqtype (INT)]</strong>           [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n<li><p><strong>[--bsnum (INT)]</strong>             [Required] Times for bootstrap. ( Default 1000 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong>         Filter short sequences in the genome and assess the status of the genome(详细参数通过”pgcgap ACC”查看)</li>\n</ul>\n</li>\n<li><p><strong>依赖软件安装目录</strong></p>\n<p>Not needed if they were in the environment variables path. Users can check with the “–check-external-programs” option for the essential programs.</p>\n<br/>\n</li>\n<li><p><strong>[--abricate-bin (PATH)]</strong>          Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--abyss-bin (PATH)]</strong>             Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--canu-bin (PATH)]</strong>              Path to canu binary file. Default tries if canu is in PATH;</p>\n</li>\n<li><p><strong>[--cd-hit-bin (PATH)]</strong>            Path to cd-hit binary file. Default tries if cd-hit is in PATH;</p>\n</li>\n<li><p><strong>[--fastANI-bin (PATH)]</strong>           Path to the fastANI binary file. Default tries if fastANI is in PATH;</p>\n</li>\n<li><p><strong>[--Gblocks-bin (PATH)]</strong>           Path to the Gblocks binary file. Default tries if Gblocks is in PATH;</p>\n</li>\n<li><p><strong>[--gubbins-bin (PATH)]</strong>           Path to the run_gubbins.py binary file. Default tries if run_gubbins.py is in PATH;</p>\n</li>\n<li><p><strong>[--iqtree-bin (PATH)]</strong>            Path to the iqtree binary file. Default tries if iqtree is in PATH;</p>\n</li>\n<li><p><strong>[--mafft-bin (PATH)]</strong>             Path to mafft binary file. Default tries if mafft is in PATH;</p>\n</li>\n<li><p><strong>[--mash-bin (PATH)]</strong>              Path to the mash binary file. Default tries if mash is in PATH.</p>\n</li>\n<li><p><strong>[--modeltest-ng-bin (PATH)]</strong>      Path to the modeltest-ng binary file. Default tries if modeltest-ng is in PATH.</p>\n</li>\n<li><p><strong>[--muscle-bin (PATH)]</strong>            Path to the muscle binary file. Default tries if muscle is in PATH.</p>\n</li>\n<li><p><strong>[--orthofinder-bin (PATH)]</strong>       Path to the orthofinder binary file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li><p><strong>[--pal2nal-bin (PATH)]</strong>           Path to the pal2nal.pl binary file. Default tries if pal2nal.pl is in PATH;</p>\n</li>\n<li><p><strong>[--prodigal-bin (PATH)]</strong>          Path to prodigal binary file. Default tries if prodigal is in PATH;</p>\n</li>\n<li><p><strong>[--prokka-bin (PATH)]</strong>            Path to prokka binary file. Default tries if prokka is in PATH;</p>\n</li>\n<li><p><strong>[--raxml-ng-bin (PATH)]</strong>          Path to the raxml-ng binary file. Default tries if raxml-ng is in PATH;</p>\n</li>\n<li><p><strong>[--roary-bin (PATH)]</strong>             Path to the roary binary file. Default tries if roary is in PATH;</p>\n</li>\n<li><p><strong>[--sickle-bin (PATH)]</strong>            Path to the sickle-trim binary file. Default tries if sickle is in PATH.</p>\n</li>\n<li><p><strong>[--snippy-bin (PATH)]</strong>            Path to the snippy binary file. Default tries if snippy is in PATH;</p>\n</li>\n<li><p><strong>[--snp-sites-bin (PATH)]</strong>         Path to the snp-sites binary file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li><p><strong>[--unicycler-bin (PATH)]</strong>         Path to the unicycler binary file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>配置COG数据库</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong>                  首次安装PGCGAP后需要执行此步</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n\n<ul>\n<li><p>检查依赖软件包是否安装 (<strong>强烈建议在安装完PGCGAP之后运行此步</strong>):</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-external-programs</span><br></pre></td></tr></table></figure></li>\n</ul>\n<br/>\n\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><ul>\n<li><p><strong>Example 1:</strong> 执行所有模块，以 <em>Escherichia coli</em> 的6个 Illumina 双端 reads 为数据集。</p>\n<p>__注__：为了提高灵活性，”VAR” 模块需要额外添加。<br/></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 2:</strong> 基因组组装。</p>\n<ul>\n<li><p><strong>Illumina双端reads组装</strong></p>\n<p>该数据集中，reads的命名格式为 “strain_1.fastq.gz” 和 “strain_2.fastq.gz”。 后缀名为 “_1.fastq.gz”，其长度为11，因此 “–suffix_len” 设置为11。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>Oxford reads组装</strong></p>\n<p>Oxford nanopore 测序仅产生一个reads文件，因此只需要设置 “–reads1” 参数，其值为 “.fasta”。 “–genomeSize” 是预估的基因组大小，用户可以到NCBI数据库中查看同物种基因组的大小作为参考，此处设置为 “4.8m”。Reads 文件的后缀名为 “.fasta”，其长度为6，因此将 “–suffix_len” 设置为6。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>PacBio reads组装</strong></li>\n</ul>\n<p> PacBio同样只产生一个文件 “pacbio.fastq”，参数设置与Oxford类似。此处，文件的后缀名为 “.fastq”，其长度为6，因此 “–suffix_len” 设置为6。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 3:</strong> 基因预测及注释。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 4:</strong> 构建单拷贝核心蛋白进化树与核心SNPs进化树。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 5:</strong> 仅构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 6:</strong> 进行泛基因组分析并构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 7:</strong> 同源蛋白家族聚类分析并构建进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 8:</strong> 计算两两基因组之间的平均核苷酸一致性(ANI)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ANI --threads 4 --queryL scaf.list --refL scaf.list --ANIO Results/ANI/ANIs --Scaf_suffix .fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 9:</strong> 通过MinHash计算基因组及宏基因组的相似性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --MASH --scafPath &lt;PATH&gt; --Scaf_suffix &lt;STRING&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 10:</strong> 对所有基因组进行COG注释。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --pCOG --threads 4 --strain_num 6 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 11:</strong> 变异(SNPs, Indels)检测与注释，并构建基于参考基因组的SNPs进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 12:</strong> 从基因组中寻找抗生素抗性基因或毒力基因。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db ncbi --identity 75 --coverage 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"准备输入文件\"><a href=\"#准备输入文件\" class=\"headerlink\" title=\"准备输入文件\"></a>准备输入文件</h2><h3 id=\"工作目录\"><a href=\"#工作目录\" class=\"headerlink\" title=\"工作目录\"></a>工作目录</h3><ul>\n<li>PGCGAP的运行目录。</li>\n</ul>\n<h3 id=\"Assemble\"><a href=\"#Assemble\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li>将所有双端reads、或PacBio reads 或 Oxford nanopore reads存于某个目录下 (Default: .&#x2F;Reads&#x2F;Illumina&#x2F;)。</li>\n</ul>\n<h3 id=\"Annotate\"><a href=\"#Annotate\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"ANI\"><a href=\"#ANI\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li>QUERY_LIST 和 REFERENCE_LIST 文件，每个文件中含有需要计算的基因组的绝对路径，每个基因组一行 (default: 工作目录下的”scaf.list”)。若先运行了 “–Assemble” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"CoreTree\"><a href=\"#CoreTree\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li>将所有菌株的氨基酸文件 (后缀名必须为 “.faa”) 和核苷酸文件 (需以 “.ffn” 为后缀) 分别存放于两个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;” 和 “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;”)。“.faa” 和 “.ffn” 文件需要有相同的前缀名字，且 protein IDs 和 gene IDs 需以菌株名开头。建议用 “Prokka” 软件获取输入文件，若已经运行了 “–Annotate” 模块，则该模块的输入文件会自动生产。若 “–CDsPath” 设置为 “NO”，则不需要提供核苷酸文件，但也不会生产核心SNPs进化树。</li>\n</ul>\n<h3 id=\"MASH\"><a href=\"#MASH\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"OrthoF\"><a href=\"#OrthoF\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li>所有菌株的fasta格式氨基酸文件(每个菌株一个文件)存放于一个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;”)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"Pan\"><a href=\"#Pan\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li>包含所有菌株GFF3 文件 (With “.gff” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;);</li>\n<li>若先运行了 “–Annotate” 模块，上述文件会自动生成。</li>\n</ul>\n<h3 id=\"pCOG\"><a href=\"#pCOG\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li>存放所有菌株的fasta格式氨基酸序列文件 (With “.faa” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"VAR\"><a href=\"#VAR\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li>包含所有菌株的 Pair-end reads 的目录路径 (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory)。</li>\n<li>fasta 格式或 GenBank 格式的参考基因组的绝对路径 (<strong>必需提供</strong>)。</li>\n</ul>\n<h3 id=\"AntiRes\"><a href=\"#AntiRes\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li>存放基因组(complete or draft)的目录 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</li>\n</ul>\n<h3 id=\"STREE\"><a href=\"#STREE\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</li>\n</ul>\n<h2 id=\"输出文件解读\"><a href=\"#输出文件解读\" class=\"headerlink\" title=\"输出文件解读\"></a>输出文件解读</h2><h3 id=\"Assemble-1\"><a href=\"#Assemble-1\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong><br/><br>Directories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong><br/><br>Directories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong><br/><br>Directories contain ONT assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong><br/><br>Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina</strong><br/><br>Directory contains Illumina contigs&#x2F;scaffolds of all strains. “*.filtered.fas” is the genome after excluding short sequences. “*.prefilter.stats” describes the stats of the genome before filtering, and “*.filtered.stats” describes the stats of the genome after filtering.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford</strong><br/><br>Directory contains Oxford nanopore contigs&#x2F;scaffolds of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio</strong><br/><br>Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"Annotate-1\"><a href=\"#Annotate-1\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation</strong><br/><br>directories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;AAs</strong><br/><br>Directory contain amino acids sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;CDs</strong><br/><br>Directory contain nucleotide sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;GFF</strong><br/><br>Directory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ANI-1\"><a href=\"#ANI-1\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong><br/><br>The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong><br/><br>file with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong><br/><br>An ANI matrix of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong><br/><br>The heatmap plot of “ANIs.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"MASH-1\"><a href=\"#MASH-1\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong><br/><br>The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong><br/><br>The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong><br/><br>A similarity matrix of all genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong><br/><br>A heat map plot of “MASH.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"CoreTree-1\"><a href=\"#CoreTree-1\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong><br/><br>Core SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.nwk</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;“Other_files”</strong><br/><br>Intermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"OrthoF-1\"><a href=\"#OrthoF-1\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong><br/><br>Same as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong><br/><br>Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong><br/><br>Phylogenetic tree constructed by FastTree.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong><br/><br>Phylogenetic tree constructed by IQ-TREE.<br/></p>\n</li>\n</ul>\n<h3 id=\"Pan-1\"><a href=\"#Pan-1\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong><br/><br>A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong><br/><br>A graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong><br/><br>A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong><br/><br>Alignments of single-copy core proteins called by roary software.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong><br/><br>see <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pCOG-1\"><a href=\"#pCOG-1\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong><br/><br>Intermediate files.</p>\n</li>\n<li><p><strong>*.2Scog.table</strong><br/><br>The super COG table of each strain.</p>\n</li>\n<li><p><strong>*.2Scog.table.pdf</strong><br/><br>A plot of super COG table in pdf format.</p>\n</li>\n<li><p><strong>All_flags_relative_abundances.table</strong><br>A table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"VAR-1\"><a href=\"#VAR-1\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong><br/><br>directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li><p><strong>Results&#x2F;Variants&#x2F;Core</strong><br/><br>The directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.*.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>gubbins.core.full.node_labelled.final_tree.tre</strong> : Phylogenetic tree of the whole genome SNP alignment constructed with <strong>gubbins</strong> (get rid of recombination).</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"AntiRes-1\"><a href=\"#AntiRes-1\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li>\n</ul>\n<h3 id=\"STREE-1\"><a href=\"#STREE-1\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n</ul>\n<h2 id=\"使用许可\"><a href=\"#使用许可\" class=\"headerlink\" title=\"使用许可\"></a>使用许可</h2><p>PGCGAP 不可商用，其它情况可使用免费(licensed under GPLv3)。</p>\n<h2 id=\"反馈与提问\"><a href=\"#反馈与提问\" class=\"headerlink\" title=\"反馈与提问\"></a>反馈与提问</h2><p>若有问题，可在 <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> 提出或通过邮件咨询 <a href=\"mailto:liaochenlanruo@webmail.hzau.edu.cn\">liaochenlanruo@webmail.hzau.edu.cn</a>。</p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><ul>\n<li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. <em>Protocol exchange</em>, 2020. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v5\">10.21203&#x2F;rs.2.21224&#x2F;v5</a></p>\n</li>\n<li><p>If you use “--Assemble”, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li><p>If you use “--Annotate”, please also cite <a href=\"https://www.pixiv.net/member_illust.php?mode=medium&illust_id=24642063\">Prokka</a>.</p>\n</li>\n<li><p>If you use “--CoreTree”, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li><p>If you use “--Pan”, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--OrthoF”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--ANI”, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li><p>If you use “--MASH”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li><p>If you use “--VAR”, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>,  <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li><p>If you use “--AntiRes”, please also cite <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li><p>If you use “--STREE”, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a> , <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><h3 id=\"Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\"><a href=\"#Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\" class=\"headerlink\" title=\"Q1 VAR founction ran failed to get annotated VCFs and Core results\"></a>Q1 VAR founction ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in “strain_name.log” under Results&#x2F;Variants&#x2F;<strain_name>&#x2F; directory. If you find a sentence like “WARNING: All frames are zero! This seems rather odd, please check that ‘frame’ information in your ‘genes’ file is accurate.” This is an snpEff error. Users can install JDK8 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install java-jdk=8.0.112</span><br></pre></td></tr></table></figure>\n\n\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a href=\"#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\" class=\"headerlink\" title=\"Q2 Could not determine version of minced please install version 2 or higher\"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running prokka of Assemble founction, this error could happened, the error message shows as following:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: A JNI error has occurred, please check your installation and try again</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass1(Native Method)</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)</span><br><span class=\"line\">\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)</span><br><span class=\"line\">\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:468)</span><br><span class=\"line\">\tat java.net.URLClassLoader.access$100(URLClassLoader.java:74)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:369)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:363)</span><br><span class=\"line\">\tat java.security.AccessController.doPrivileged(Native Method)</span><br><span class=\"line\">\tat java.net.URLClassLoader.findClass(URLClassLoader.java:362)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class=\"line\">\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class=\"line\">\tat sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)</span><br><span class=\"line\">[01:09:40] Could not determine version of minced - please install version 2.0 or higher</span><br></pre></td></tr></table></figure>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install minced=0.3</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\"><a href=\"#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\" class=\"headerlink\" title=\"Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib\"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function “VAR” on macOS. It is an error of openssl. Users can solve this problem as following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Firstly, install brew if have not installed before</span></span><br><span class=\"line\"><span class=\"variable\">$ruby</span> -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Install openssl with brew</span></span><br><span class=\"line\"><span class=\"variable\">$brew</span> install openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Create the soft link for libraries</span></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations</p>\n<h3 id=\"Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\"><a href=\"#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\" class=\"headerlink\" title=\"Q4 Use of uninitialized value in require at Encode.pm line 61\"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function “Pan”. It is a warning of Roary software.<br>The content of line 61 is “require Encode::ConfigLocal;”. Users can ignore the warning.<br>Click <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><ul>\n<li><p>V1.0.3</p>\n<ul>\n<li>Updated ANI fuction.</li>\n</ul>\n</li>\n<li><p>V1.0.4</p>\n<ul>\n<li>Add parallel for function “COG”.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.5</p>\n<ul>\n<li>Bug repair for input of gubbins.</li>\n</ul>\n</li>\n<li><p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li><p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function “COG” to “pCOG”.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.8</p>\n<ul>\n<li>Add the “MASH” function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li><p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to “Pan”.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan chart has been added.</li>\n<li>Fixed a bug for ploting the ANI matrix.</li>\n</ul>\n</li>\n<li><p>V1.0.10</p>\n<ul>\n<li>Add the “AntiRes” function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li><p>V1.0.11</p>\n<ul>\n<li>Users now can choose “abyss” or “spades” for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command “pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]“, and can look up the examples of each module with command “pgcgap Examples”.</li>\n</ul>\n</li>\n<li><p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls “ABySS” for genome assembly. When the assembled N50 is less than 50,000, it automatically calls “SPAdes” to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li><p>V1.0.13</p>\n<ul>\n<li>Fixed the “running error” bug of function “Assess” in module “ACC”.</li>\n<li>Added module “STREE” for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li><p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n</ul>\n</li>\n<li><p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li><p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running “Annotate” analysis to avoid program crash.</li>\n</ul>\n</li>\n<li><p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module “CoreTree”.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li><p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module “STREE”.</li>\n</ul>\n</li>\n<li><p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li><p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module “VAR”.</li>\n<li>Fixed a little bug of module “CoreTree” to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.21</p>\n<ul>\n<li>Change the default search program “blast” to “diamond” of module “OrthoF”.</li>\n<li>Fixed a bug of module “pCOG” to output the right figure.</li>\n</ul>\n</li>\n<li><p>V1.0.22</p>\n<ul>\n<li>The drawing function of module “ANI” and module “MASH” has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module “ANI”, that is no heatmap will be drawn when there is “NA” in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li><p>V1.0.23</p>\n<ul>\n<li>The “–Assess” function of module “ACC” was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li><p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module “Pan” to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module “CoreTree” and “Pan”.</li>\n<li>The parameter “–identi” was added into module “Pan” to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li><p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module “ANI” and “MASH”.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the “ANI” and “MASH” analysis.</li>\n</ul>\n</li>\n<li><p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li><p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command “pgcgap –check-update”.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/COG\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter “CoreTree” in the module Pan to avoid program termination caused by the “&gt;” in non-sequence lines.</li>\n</ul>\n</li>\n<li><p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the “permission denied” error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li><p>V1.0.30</p>\n</li>\n<li><p>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</p>\n</li>\n<li><p>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</p>\n</li>\n<li><p>Added the option of using FastTree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</p>\n</li>\n<li><p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li><p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try “pgcgap Examples” to have a look.</li>\n<li>Updated module AntiRes: the parameter –db had been modified to add choices of “all” and “megares”.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n</ul>\n","more":"<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/2019/04/28/PGCGAP%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/\">中文说明</a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>PGCGAP是用于原核生物基因组学和比较基因组学分析管道，目前该管道包含12个模块，可以接受Illumina双端reads、Oxford reads或PacBio reads作为输入，可以完成基因组组装、基因预测和注释，并可以进行比较基因组学分析，包括构建单拷贝核心蛋白进化树以及单拷贝核心基因SNPs进化树，泛基因组分析与进化树构建，全基因组平均核苷酸一致性（ANI）计算，同源蛋白家族聚类及进化树构建，COG注释，SNPs和INDELs calling，抗生素抗性基因&#x2F;毒力因子预测，Multi-FASTA进化树构建，组装后基因组短序列过滤与统计信息呈现（genome size，GC content……）。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>PGCGAP可以安装于Windows子系统Linux（WSL）、Linux x64系统以及macOS中。</p>\n<p><strong>Step1：通过<a href=\"https://bioconda.github.io/user/install.html#install-conda\">Bioconda</a>安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> create -n pgcgap python=3.7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> install pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>声明：用conda安装时一直在“Solving environment”怎么办？</strong>随着加入conda的软件越来越多，使其索引库变的庞大，因此安装新的软件时需要逐一验证软件间的兼容性，会耗费大量时间。严重的时候会无法完成软件的安装，这个时候坐以待毙是不行的。下面介绍两种办法解决此问题：<br/></p>\n\n\n<ul>\n<li><p>Method 1: 使用mamba (非常快) 替代conda。前提是已经用conda创建好了pgcgap的虚拟环境：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> install mamba -c conda-forge</span><br><span class=\"line\"><span class=\"variable\">$mamba</span> install pgcgap</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Method 2: 使用本人提供的pgcgap<a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.ym\">配置文件</a>来创建环境并安装PGCGAP：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download pgcgap_latest_env.yml</span></span><br><span class=\"line\"><span class=\"variable\">$wget</span> https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.yml</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class=\"line\"><span class=\"variable\">$conda</span> <span class=\"built_in\">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure>\n<br/></li>\n</ul>\n<p><strong>Step2：配置COG数据库</strong> (初次安装PGCGAP后需要执行此步骤)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br></pre></td></tr></table></figure>\n\n<p><strong>Step3: 升级PGCGAP(升级版本时运行)</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> update pgcgap</span><br><span class=\"line\"><span class=\"comment\"># v1.0.28以后可通过如下命令升级</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-update</span><br></pre></td></tr></table></figure>\n\n<p><strong>此外，用户也可以通过容器(docker)安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$docker</span> pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：</strong> 前提是用户电脑中安装了<a href=\"https://www.docker.com/\">Docker</a>，Docker可以跨平台使用。可用的tag可<a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">在此</a>查询，建议安装最新版。</p>\n<h2 id=\"依赖包\"><a href=\"#依赖包\" class=\"headerlink\" title=\"依赖包\"></a>依赖包</h2><ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/gubbins\">Gubbins</a> &gt;&#x3D;2.3.4</li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org/\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"PGCGAP用法\"><a href=\"#PGCGAP用法\" class=\"headerlink\" title=\"PGCGAP用法\"></a>PGCGAP用法</h2><ul>\n<li><p><strong>显示帮助信息：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>管道用法：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [modules] [options]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>展示各模块的参数：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>__展示各模块的运行示例：__（这货是我用的最多的）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> Examples</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>配置COG数据库：</strong> (初次安装PGCGAP后需要配置COG数据库)</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>功能模块：</strong></p>\n<ul>\n<li><p><strong>[--All]</strong>                          运行Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH 和 pCOG模块</p>\n</li>\n<li><p><strong>[--Assemble]</strong>                     基因组组装</p>\n</li>\n<li><p><strong>[--Annotate]</strong>                     基因预测及注释</p>\n</li>\n<li><p><strong>[--CoreTree]</strong>                     构建单拷贝核心蛋白进化树与核心SNPs进化树</p>\n</li>\n<li><p><strong>[--Pan]</strong>                          泛基因组分析并构建单拷贝核心蛋白进化树</p>\n</li>\n<li><p><strong>[--OrthoF]</strong>                       同源蛋白家族聚类及单拷贝直系同源蛋白进化树构建</p>\n</li>\n<li><p><strong>[--ANI]</strong>                          计算平均核苷酸一致性 ( ANI )</p>\n</li>\n<li><p><strong>[--MASH]</strong>                         通过MinHash估算基因组&#x2F;宏基因组相似性</p>\n</li>\n<li><p><strong>[--pCOG]</strong>                         COG注释</p>\n</li>\n<li><p><strong>[--VAR]</strong>                          变异检测并构建核心基因组进化树</p>\n</li>\n<li><p><strong>[--AntiRes]</strong>                      从基因组(contigs&#x2F;scaffolds)中预测抗生素抗性基因或毒力基因</p>\n</li>\n<li><p><strong>[--STREE]</strong>                        基于Multi-FASTA序列(所有序列在一个文件中)构建系统发育树</p>\n</li>\n<li><p><strong>[--ACC]</strong>                          一些实用的附加程序(目前只开发了”Assess”用于对基因组中的短序列进行过滤，并评估过滤前后的基因组状态)</p>\n</li>\n</ul>\n</li>\n<li><p><strong>全局参数（请参照英文版，参数有所改变，中文版暂时没有时间修改）：</strong></p>\n<ul>\n<li><p><strong>[--strain_num (INT)]</strong>             [Required by “--All”, “--CoreTree”, “--Pan”, “--VAR” and “--COG”] 用于分析的菌株数目，不包含参考基因组</p>\n</li>\n<li><p><strong>[--ReadsPath (PATH)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] 所有菌株测序reads所在的目录路径  Default .&#x2F;Reads&#x2F;Illumina)</p>\n</li>\n<li><p><strong>[--scafPath (PATH)]</strong>              [Required by “--All”, “--Assess”, “--Annotate” and “--MASH”] contigs&#x2F;scaffolds的存放路径 (Default “Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina”)</p>\n</li>\n<li><p><strong>[--AAsPath (PATH)]</strong>               [Required by “--All”, “--CoreTree”, “--OrthoF” and “--pCOG”] 所有菌株的氨基酸序列文件的存放路径 (Default “.&#x2F;Results&#x2F;Annotations&#x2F;AAs”)</p>\n</li>\n<li><p><strong>[--reads1 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 1的后缀名 (例如 reads 1 的名字为 “YBT-1520_L1_I050.R1.clean.fastq.gz”，”YBT-1520” 是菌株名，则后缀名为 “.R1.clean.fastq.gz”)</p>\n</li>\n<li><p><strong>[--reads2 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 2的后缀名</p>\n</li>\n<li><p><strong>[--Scaf_suffix (STRING)]</strong>         [Required by “--All”, “--Assess”, “--Annotate” “MASH” and “--ANI”] contigs&#x2F;scaffolds的后缀名 (Default -8.fa)</p>\n</li>\n<li><p><strong>[--filter_length (INT)]</strong>          [Required by “--All”, “--Assemble” and “--Assess”]&gt; Sequences shorter than the ‘filter_length’ will be deleted from the assembled genomes. ( Default 200 )</p>\n</li>\n<li><p><strong>[--codon (INT)]</strong>                  [Required by “--All”, “--Annotate”, “--CoreTree” and “--Pan”] 翻译密码子表 (Default 11)</p>\n<ul>\n<li>1                             Universal code</li>\n<li>2                             Vertebrate mitochondrial code</li>\n<li>3                             Yeast mitochondrial code</li>\n<li>4                             Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma&#x2F;Spiroplasma code</li>\n<li>5                             Invertebrate mitochondrial</li>\n<li>6                             Ciliate, Dasycladacean and Hexamita nuclear code</li>\n<li>9                             Echinoderm and Flatworm mitochondrial code</li>\n<li>10                            Euplotid nuclear code</li>\n<li>11                            Bacterial, archaeal and plant plastid code ( Default )</li>\n<li>12                            Alternative yeast nuclear code</li>\n<li>13                            Ascidian mitochondrial code</li>\n<li>14                            Alternative flatworm mitochondrial code</li>\n<li>15                            Blepharisma nuclear code</li>\n<li>16                            Chlorophycean mitochondrial code</li>\n<li>21                            Trematode mitochondrial code</li>\n<li>22                            Scenedesmus obliquus mitochondrial code</li>\n<li>23                            Thraustochytrium mitochondrial code</li>\n</ul>\n</li>\n<li><p><strong>[--suffix_len (INT)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] <strong>(强烈建议设置此项)</strong> reads后缀的长度。例如 “YBT-1520_L1_I050.R1.clean.fastq.gz” 的 --suffix_len 为 26 (“YBT-1520” 为菌株名) (Default 0)</p>\n</li>\n<li><p><strong>[--logs (STRING)]</strong>                Log文件的名字 (Default Logs.txt)</p>\n</li>\n<li><p><strong>[--threads (INT)]</strong>                运行程序时调用的线程数目 (Default 4)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>各模块的局部参数：</strong></p>\n<ul>\n<li><p><strong>--Assemble</strong></p>\n<ul>\n<li><p><strong>[--platform (STRING)]</strong>        [Required] 测序平台，可以选择 “illumina”, “pacbio” 和 “oxford” (Default illumina)</p>\n</li>\n<li><p><strong>[--assembler (STRING)]</strong>       [Required] 用于illumina数据组装的软件，可选”abyss”, “spades” 或”auto” ( Default abyss )</p>\n</li>\n<li><p><strong>[--kmmer (INT)]</strong>              [Required] Illumina数据组装时采用的 k-mer 大小 (Default 81)</p>\n</li>\n<li><p><strong>[--genomeSize (FLOAT)]</strong>       [Required] 预估的基因组大小，如 3.7m、2.8g，组装 PacBio data 和 Oxford data 时需要设置此项 (Default Unset)</p>\n</li>\n<li><p><strong>[--short1 (STRING)]</strong>           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--short2 (STRING)]</strong>           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--long (STRING)]</strong>             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--hout (STRING)]</strong>             [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Annotate</strong></p>\n<ul>\n<li><p><strong>[--genus (STRING)]</strong>           菌株的属名 ( Default “NA” )</p>\n</li>\n<li><p><strong>[--species (STRING)]</strong>         菌株的种名 ( Default “NA”)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--CoreTree</strong></p>\n<ul>\n<li><p><strong>[--CDsPath (PATH)]</strong>           [Required] 包含所有菌株核苷酸序列文件的路径，如果设置为”NO”，将不会构建核心SNPs进化树 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;CDs” )</p>\n</li>\n<li><p><strong>[-c (FLOAT)]</strong>                 序列一致性 (identity) 阈值 ( Default 0.5)</p>\n</li>\n<li><p><strong>[-n (INT)]</strong>                   Word_length,  -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li><p><strong>[-G (INT)]</strong>                   Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li><p><strong>[-t (INT)]</strong>                   Tolerance for redundance ( Default 0 )</p>\n</li>\n<li><p><strong>[-aL (FLOAT)]</strong>                Alignment coverage for the longer sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li><p><strong>[-aS (FLOAT)]</strong>                Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li><p><strong>[-g (INT)]</strong>                   If set to 0, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li><p><strong>[-d (INT)]</strong>                   length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--Pan</strong></p>\n<ul>\n<li><p><strong>[--GffPath (PATH)]</strong>           [Required] 存放所有菌株GFF3格式文件的路径 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;GFF” )</p>\n</li>\n<li><p><strong>[--identi (INT)]</strong>                  Minimum percentage identity for blastp ( Default 95 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n- __\\-\\-OrthoF__\n\n<pre><code>- __[\\-\\-Sprogram (STRING)]__        序列对比程序，Options: blast, mmseqs, blast_gz, diamond ( Default blast)\n</code></pre>\n<br/>\n\n<ul>\n<li><p><strong>--ANI</strong></p>\n<ul>\n<li><p><strong>[--queryL (FILE)]</strong>            [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--refL (FILE)]</strong>              [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--ANIO (FILE)]</strong>              The name of output file ( Default “Results&#x2F;ANI&#x2F;ANIs” )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--VAR</strong></p>\n<ul>\n<li><p><strong>[--refgbk (FILE)]</strong>            [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: “&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk”</p>\n</li>\n<li><p><strong>[--qualtype (STRING)]</strong>        [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p>\n</li>\n<li><p><strong>[--qual (INT)]</strong>               Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li><p><strong>[--length (INT)]</strong>             Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li><p><strong>[--mincov (INT)]</strong>             The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li><p><strong>[--minfrac (FLOAT)]</strong>          The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li><p><strong>[--minqual (INT)]</strong>            The minimum VCF variant call “quality” ( Default 100 )</p>\n</li>\n<li><p><strong>[--ram (INT)]</strong>                Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n<li><p><strong>[--tree_builder (STRING)]</strong>    Application to use for tree building [raxml|fasttree|hybrid] ( Default fasttree)</p>\n</li>\n<li><p><strong>[--iterations (INT)]</strong>         Maximum No. of iterations for gubbins ( Default 5 )</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--AntiRes</strong></p>\n<ul>\n<li><p><strong>[--db (STRING)]</strong>              [Required] 用于分析的数据库, options: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, ecoli_vf, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default ncbi )</p>\n</li>\n<li><p><strong>[--identity (INT)]</strong>           [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li><p><strong>[--coverage (INT)]</strong>           [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--STREE</strong></p>\n<ul>\n<li><p><strong>[--seqfile (STRING)]</strong>        [Required] Path of the sequence file for analysis.</p>\n</li>\n<li><p><strong>[--seqtype (INT)]</strong>           [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n<li><p><strong>[--bsnum (INT)]</strong>             [Required] Times for bootstrap. ( Default 1000 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong>         Filter short sequences in the genome and assess the status of the genome(详细参数通过”pgcgap ACC”查看)</li>\n</ul>\n</li>\n<li><p><strong>依赖软件安装目录</strong></p>\n<p>Not needed if they were in the environment variables path. Users can check with the “–check-external-programs” option for the essential programs.</p>\n<br/>\n</li>\n<li><p><strong>[--abricate-bin (PATH)]</strong>          Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--abyss-bin (PATH)]</strong>             Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--canu-bin (PATH)]</strong>              Path to canu binary file. Default tries if canu is in PATH;</p>\n</li>\n<li><p><strong>[--cd-hit-bin (PATH)]</strong>            Path to cd-hit binary file. Default tries if cd-hit is in PATH;</p>\n</li>\n<li><p><strong>[--fastANI-bin (PATH)]</strong>           Path to the fastANI binary file. Default tries if fastANI is in PATH;</p>\n</li>\n<li><p><strong>[--Gblocks-bin (PATH)]</strong>           Path to the Gblocks binary file. Default tries if Gblocks is in PATH;</p>\n</li>\n<li><p><strong>[--gubbins-bin (PATH)]</strong>           Path to the run_gubbins.py binary file. Default tries if run_gubbins.py is in PATH;</p>\n</li>\n<li><p><strong>[--iqtree-bin (PATH)]</strong>            Path to the iqtree binary file. Default tries if iqtree is in PATH;</p>\n</li>\n<li><p><strong>[--mafft-bin (PATH)]</strong>             Path to mafft binary file. Default tries if mafft is in PATH;</p>\n</li>\n<li><p><strong>[--mash-bin (PATH)]</strong>              Path to the mash binary file. Default tries if mash is in PATH.</p>\n</li>\n<li><p><strong>[--modeltest-ng-bin (PATH)]</strong>      Path to the modeltest-ng binary file. Default tries if modeltest-ng is in PATH.</p>\n</li>\n<li><p><strong>[--muscle-bin (PATH)]</strong>            Path to the muscle binary file. Default tries if muscle is in PATH.</p>\n</li>\n<li><p><strong>[--orthofinder-bin (PATH)]</strong>       Path to the orthofinder binary file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li><p><strong>[--pal2nal-bin (PATH)]</strong>           Path to the pal2nal.pl binary file. Default tries if pal2nal.pl is in PATH;</p>\n</li>\n<li><p><strong>[--prodigal-bin (PATH)]</strong>          Path to prodigal binary file. Default tries if prodigal is in PATH;</p>\n</li>\n<li><p><strong>[--prokka-bin (PATH)]</strong>            Path to prokka binary file. Default tries if prokka is in PATH;</p>\n</li>\n<li><p><strong>[--raxml-ng-bin (PATH)]</strong>          Path to the raxml-ng binary file. Default tries if raxml-ng is in PATH;</p>\n</li>\n<li><p><strong>[--roary-bin (PATH)]</strong>             Path to the roary binary file. Default tries if roary is in PATH;</p>\n</li>\n<li><p><strong>[--sickle-bin (PATH)]</strong>            Path to the sickle-trim binary file. Default tries if sickle is in PATH.</p>\n</li>\n<li><p><strong>[--snippy-bin (PATH)]</strong>            Path to the snippy binary file. Default tries if snippy is in PATH;</p>\n</li>\n<li><p><strong>[--snp-sites-bin (PATH)]</strong>         Path to the snp-sites binary file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li><p><strong>[--unicycler-bin (PATH)]</strong>         Path to the unicycler binary file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>配置COG数据库</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong>                  首次安装PGCGAP后需要执行此步</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n\n<ul>\n<li><p>检查依赖软件包是否安装 (<strong>强烈建议在安装完PGCGAP之后运行此步</strong>):</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-external-programs</span><br></pre></td></tr></table></figure></li>\n</ul>\n<br/>\n\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><ul>\n<li><p><strong>Example 1:</strong> 执行所有模块，以 <em>Escherichia coli</em> 的6个 Illumina 双端 reads 为数据集。</p>\n<p>__注__：为了提高灵活性，”VAR” 模块需要额外添加。<br/></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 2:</strong> 基因组组装。</p>\n<ul>\n<li><p><strong>Illumina双端reads组装</strong></p>\n<p>该数据集中，reads的命名格式为 “strain_1.fastq.gz” 和 “strain_2.fastq.gz”。 后缀名为 “_1.fastq.gz”，其长度为11，因此 “–suffix_len” 设置为11。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>Oxford reads组装</strong></p>\n<p>Oxford nanopore 测序仅产生一个reads文件，因此只需要设置 “–reads1” 参数，其值为 “.fasta”。 “–genomeSize” 是预估的基因组大小，用户可以到NCBI数据库中查看同物种基因组的大小作为参考，此处设置为 “4.8m”。Reads 文件的后缀名为 “.fasta”，其长度为6，因此将 “–suffix_len” 设置为6。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>PacBio reads组装</strong></li>\n</ul>\n<p> PacBio同样只产生一个文件 “pacbio.fastq”，参数设置与Oxford类似。此处，文件的后缀名为 “.fastq”，其长度为6，因此 “–suffix_len” 设置为6。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 3:</strong> 基因预测及注释。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 4:</strong> 构建单拷贝核心蛋白进化树与核心SNPs进化树。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 5:</strong> 仅构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 6:</strong> 进行泛基因组分析并构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 7:</strong> 同源蛋白家族聚类分析并构建进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 8:</strong> 计算两两基因组之间的平均核苷酸一致性(ANI)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ANI --threads 4 --queryL scaf.list --refL scaf.list --ANIO Results/ANI/ANIs --Scaf_suffix .fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 9:</strong> 通过MinHash计算基因组及宏基因组的相似性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --MASH --scafPath &lt;PATH&gt; --Scaf_suffix &lt;STRING&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 10:</strong> 对所有基因组进行COG注释。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --pCOG --threads 4 --strain_num 6 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 11:</strong> 变异(SNPs, Indels)检测与注释，并构建基于参考基因组的SNPs进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 12:</strong> 从基因组中寻找抗生素抗性基因或毒力基因。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db ncbi --identity 75 --coverage 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"准备输入文件\"><a href=\"#准备输入文件\" class=\"headerlink\" title=\"准备输入文件\"></a>准备输入文件</h2><h3 id=\"工作目录\"><a href=\"#工作目录\" class=\"headerlink\" title=\"工作目录\"></a>工作目录</h3><ul>\n<li>PGCGAP的运行目录。</li>\n</ul>\n<h3 id=\"Assemble\"><a href=\"#Assemble\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li>将所有双端reads、或PacBio reads 或 Oxford nanopore reads存于某个目录下 (Default: .&#x2F;Reads&#x2F;Illumina&#x2F;)。</li>\n</ul>\n<h3 id=\"Annotate\"><a href=\"#Annotate\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"ANI\"><a href=\"#ANI\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li>QUERY_LIST 和 REFERENCE_LIST 文件，每个文件中含有需要计算的基因组的绝对路径，每个基因组一行 (default: 工作目录下的”scaf.list”)。若先运行了 “–Assemble” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"CoreTree\"><a href=\"#CoreTree\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li>将所有菌株的氨基酸文件 (后缀名必须为 “.faa”) 和核苷酸文件 (需以 “.ffn” 为后缀) 分别存放于两个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;” 和 “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;”)。“.faa” 和 “.ffn” 文件需要有相同的前缀名字，且 protein IDs 和 gene IDs 需以菌株名开头。建议用 “Prokka” 软件获取输入文件，若已经运行了 “–Annotate” 模块，则该模块的输入文件会自动生产。若 “–CDsPath” 设置为 “NO”，则不需要提供核苷酸文件，但也不会生产核心SNPs进化树。</li>\n</ul>\n<h3 id=\"MASH\"><a href=\"#MASH\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"OrthoF\"><a href=\"#OrthoF\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li>所有菌株的fasta格式氨基酸文件(每个菌株一个文件)存放于一个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;”)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"Pan\"><a href=\"#Pan\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li>包含所有菌株GFF3 文件 (With “.gff” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;);</li>\n<li>若先运行了 “–Annotate” 模块，上述文件会自动生成。</li>\n</ul>\n<h3 id=\"pCOG\"><a href=\"#pCOG\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li>存放所有菌株的fasta格式氨基酸序列文件 (With “.faa” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"VAR\"><a href=\"#VAR\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li>包含所有菌株的 Pair-end reads 的目录路径 (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory)。</li>\n<li>fasta 格式或 GenBank 格式的参考基因组的绝对路径 (<strong>必需提供</strong>)。</li>\n</ul>\n<h3 id=\"AntiRes\"><a href=\"#AntiRes\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li>存放基因组(complete or draft)的目录 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</li>\n</ul>\n<h3 id=\"STREE\"><a href=\"#STREE\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</li>\n</ul>\n<h2 id=\"输出文件解读\"><a href=\"#输出文件解读\" class=\"headerlink\" title=\"输出文件解读\"></a>输出文件解读</h2><h3 id=\"Assemble-1\"><a href=\"#Assemble-1\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong><br/><br>Directories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong><br/><br>Directories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong><br/><br>Directories contain ONT assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong><br/><br>Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina</strong><br/><br>Directory contains Illumina contigs&#x2F;scaffolds of all strains. “*.filtered.fas” is the genome after excluding short sequences. “*.prefilter.stats” describes the stats of the genome before filtering, and “*.filtered.stats” describes the stats of the genome after filtering.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford</strong><br/><br>Directory contains Oxford nanopore contigs&#x2F;scaffolds of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio</strong><br/><br>Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"Annotate-1\"><a href=\"#Annotate-1\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation</strong><br/><br>directories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;AAs</strong><br/><br>Directory contain amino acids sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;CDs</strong><br/><br>Directory contain nucleotide sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;GFF</strong><br/><br>Directory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ANI-1\"><a href=\"#ANI-1\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong><br/><br>The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong><br/><br>file with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong><br/><br>An ANI matrix of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong><br/><br>The heatmap plot of “ANIs.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"MASH-1\"><a href=\"#MASH-1\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong><br/><br>The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong><br/><br>The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong><br/><br>A similarity matrix of all genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong><br/><br>A heat map plot of “MASH.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"CoreTree-1\"><a href=\"#CoreTree-1\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong><br/><br>Core SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.nwk</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;“Other_files”</strong><br/><br>Intermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"OrthoF-1\"><a href=\"#OrthoF-1\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong><br/><br>Same as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong><br/><br>Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong><br/><br>Phylogenetic tree constructed by FastTree.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong><br/><br>Phylogenetic tree constructed by IQ-TREE.<br/></p>\n</li>\n</ul>\n<h3 id=\"Pan-1\"><a href=\"#Pan-1\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong><br/><br>A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong><br/><br>A graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong><br/><br>A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong><br/><br>Alignments of single-copy core proteins called by roary software.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong><br/><br>see <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pCOG-1\"><a href=\"#pCOG-1\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong><br/><br>Intermediate files.</p>\n</li>\n<li><p><strong>*.2Scog.table</strong><br/><br>The super COG table of each strain.</p>\n</li>\n<li><p><strong>*.2Scog.table.pdf</strong><br/><br>A plot of super COG table in pdf format.</p>\n</li>\n<li><p><strong>All_flags_relative_abundances.table</strong><br>A table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"VAR-1\"><a href=\"#VAR-1\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong><br/><br>directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li><p><strong>Results&#x2F;Variants&#x2F;Core</strong><br/><br>The directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.*.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>gubbins.core.full.node_labelled.final_tree.tre</strong> : Phylogenetic tree of the whole genome SNP alignment constructed with <strong>gubbins</strong> (get rid of recombination).</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"AntiRes-1\"><a href=\"#AntiRes-1\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li>\n</ul>\n<h3 id=\"STREE-1\"><a href=\"#STREE-1\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n</ul>\n<h2 id=\"使用许可\"><a href=\"#使用许可\" class=\"headerlink\" title=\"使用许可\"></a>使用许可</h2><p>PGCGAP 不可商用，其它情况可使用免费(licensed under GPLv3)。</p>\n<h2 id=\"反馈与提问\"><a href=\"#反馈与提问\" class=\"headerlink\" title=\"反馈与提问\"></a>反馈与提问</h2><p>若有问题，可在 <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> 提出或通过邮件咨询 <a href=\"mailto:liaochenlanruo@webmail.hzau.edu.cn\">liaochenlanruo@webmail.hzau.edu.cn</a>。</p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><ul>\n<li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. <em>Protocol exchange</em>, 2020. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v5\">10.21203&#x2F;rs.2.21224&#x2F;v5</a></p>\n</li>\n<li><p>If you use “--Assemble”, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li><p>If you use “--Annotate”, please also cite <a href=\"https://www.pixiv.net/member_illust.php?mode=medium&illust_id=24642063\">Prokka</a>.</p>\n</li>\n<li><p>If you use “--CoreTree”, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li><p>If you use “--Pan”, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--OrthoF”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--ANI”, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li><p>If you use “--MASH”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li><p>If you use “--VAR”, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>,  <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li><p>If you use “--AntiRes”, please also cite <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li><p>If you use “--STREE”, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a> , <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><h3 id=\"Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\"><a href=\"#Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\" class=\"headerlink\" title=\"Q1 VAR founction ran failed to get annotated VCFs and Core results\"></a>Q1 VAR founction ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in “strain_name.log” under Results&#x2F;Variants&#x2F;<strain_name>&#x2F; directory. If you find a sentence like “WARNING: All frames are zero! This seems rather odd, please check that ‘frame’ information in your ‘genes’ file is accurate.” This is an snpEff error. Users can install JDK8 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install java-jdk=8.0.112</span><br></pre></td></tr></table></figure>\n\n\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a href=\"#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\" class=\"headerlink\" title=\"Q2 Could not determine version of minced please install version 2 or higher\"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running prokka of Assemble founction, this error could happened, the error message shows as following:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: A JNI error has occurred, please check your installation and try again</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass1(Native Method)</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)</span><br><span class=\"line\">\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)</span><br><span class=\"line\">\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:468)</span><br><span class=\"line\">\tat java.net.URLClassLoader.access$100(URLClassLoader.java:74)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:369)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:363)</span><br><span class=\"line\">\tat java.security.AccessController.doPrivileged(Native Method)</span><br><span class=\"line\">\tat java.net.URLClassLoader.findClass(URLClassLoader.java:362)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class=\"line\">\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class=\"line\">\tat sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)</span><br><span class=\"line\">[01:09:40] Could not determine version of minced - please install version 2.0 or higher</span><br></pre></td></tr></table></figure>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install minced=0.3</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\"><a href=\"#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\" class=\"headerlink\" title=\"Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib\"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function “VAR” on macOS. It is an error of openssl. Users can solve this problem as following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Firstly, install brew if have not installed before</span></span><br><span class=\"line\"><span class=\"variable\">$ruby</span> -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Install openssl with brew</span></span><br><span class=\"line\"><span class=\"variable\">$brew</span> install openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Create the soft link for libraries</span></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations</p>\n<h3 id=\"Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\"><a href=\"#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\" class=\"headerlink\" title=\"Q4 Use of uninitialized value in require at Encode.pm line 61\"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function “Pan”. It is a warning of Roary software.<br>The content of line 61 is “require Encode::ConfigLocal;”. Users can ignore the warning.<br>Click <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><ul>\n<li><p>V1.0.3</p>\n<ul>\n<li>Updated ANI fuction.</li>\n</ul>\n</li>\n<li><p>V1.0.4</p>\n<ul>\n<li>Add parallel for function “COG”.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.5</p>\n<ul>\n<li>Bug repair for input of gubbins.</li>\n</ul>\n</li>\n<li><p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li><p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function “COG” to “pCOG”.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.8</p>\n<ul>\n<li>Add the “MASH” function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li><p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to “Pan”.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan chart has been added.</li>\n<li>Fixed a bug for ploting the ANI matrix.</li>\n</ul>\n</li>\n<li><p>V1.0.10</p>\n<ul>\n<li>Add the “AntiRes” function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li><p>V1.0.11</p>\n<ul>\n<li>Users now can choose “abyss” or “spades” for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command “pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]“, and can look up the examples of each module with command “pgcgap Examples”.</li>\n</ul>\n</li>\n<li><p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls “ABySS” for genome assembly. When the assembled N50 is less than 50,000, it automatically calls “SPAdes” to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li><p>V1.0.13</p>\n<ul>\n<li>Fixed the “running error” bug of function “Assess” in module “ACC”.</li>\n<li>Added module “STREE” for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li><p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n</ul>\n</li>\n<li><p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li><p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running “Annotate” analysis to avoid program crash.</li>\n</ul>\n</li>\n<li><p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module “CoreTree”.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li><p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module “STREE”.</li>\n</ul>\n</li>\n<li><p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li><p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module “VAR”.</li>\n<li>Fixed a little bug of module “CoreTree” to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.21</p>\n<ul>\n<li>Change the default search program “blast” to “diamond” of module “OrthoF”.</li>\n<li>Fixed a bug of module “pCOG” to output the right figure.</li>\n</ul>\n</li>\n<li><p>V1.0.22</p>\n<ul>\n<li>The drawing function of module “ANI” and module “MASH” has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module “ANI”, that is no heatmap will be drawn when there is “NA” in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li><p>V1.0.23</p>\n<ul>\n<li>The “–Assess” function of module “ACC” was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li><p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module “Pan” to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module “CoreTree” and “Pan”.</li>\n<li>The parameter “–identi” was added into module “Pan” to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li><p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module “ANI” and “MASH”.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the “ANI” and “MASH” analysis.</li>\n</ul>\n</li>\n<li><p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li><p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command “pgcgap –check-update”.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/COG\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter “CoreTree” in the module Pan to avoid program termination caused by the “&gt;” in non-sequence lines.</li>\n</ul>\n</li>\n<li><p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the “permission denied” error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li><p>V1.0.30</p>\n</li>\n<li><p>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</p>\n</li>\n<li><p>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</p>\n</li>\n<li><p>Added the option of using FastTree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</p>\n</li>\n<li><p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li><p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try “pgcgap Examples” to have a look.</li>\n<li>Updated module AntiRes: the parameter –db had been modified to add choices of “all” and “megares”.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n</ul>","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"比较基因组学","path":"api/tags/比较基因组学.json"},{"name":"PGCGAP","path":"api/tags/PGCGAP.json"}]}