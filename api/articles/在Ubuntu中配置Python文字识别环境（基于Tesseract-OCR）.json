{"title":"在Ubuntu中配置Python文字识别环境（基于Tesseract OCR）","slug":"在Ubuntu中配置Python文字识别环境（基于Tesseract-OCR）","date":"2025-10-19T13:41:46.000Z","updated":"2025-10-19T13:54:23.353Z","comments":true,"path":"api/articles/在Ubuntu中配置Python文字识别环境（基于Tesseract-OCR）.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<p>文字识别（OCR）是处理图像或PDF中文字内容的重要技术，Tesseract OCR是一款开源高效的OCR引擎，结合Python库可快速实现文字提取功能。本文将详细介绍在Ubuntu系统中配置支持中文的Python文字识别环境的步骤，适用于处理图片、PDF等文件中的文字内容。</p>\n<h2 id=\"一、安装Tesseract-OCR引擎\"><a href=\"#一、安装Tesseract-OCR引擎\" class=\"headerlink\" title=\"一、安装Tesseract OCR引擎\"></a>一、安装Tesseract OCR引擎</h2><p>Tesseract是核心OCR引擎，需先安装其基础程序。</p>\n<ol>\n<li><p>打开终端，更新系统包列表：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Tesseract OCR引擎：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install tesseract-ocr</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>这一步将安装Tesseract的核心程序，支持基础的文字识别功能（默认包含英文语言包）。</p>\n<h2 id=\"二、安装并配置中文语言包\"><a href=\"#二、安装并配置中文语言包\" class=\"headerlink\" title=\"二、安装并配置中文语言包\"></a>二、安装并配置中文语言包</h2><p>默认安装的Tesseract不包含中文语言包，需单独安装并修正文件名（避免因命名格式导致识别失败）。</p>\n<ol>\n<li><p>安装中文简体语言包：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install tesseract-ocr-chi-sim</span><br></pre></td></tr></table></figure>\n\n<p> （可选）若需识别繁体中文，可额外安装：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install tesseract-ocr-chi-tra</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修正语言包文件名（关键步骤）：</p>\n</li>\n</ol>\n<p>Tesseract对语言包的文件名格式有严格规范，但实际使用中，其对文件名的识别存在一定兼容性差异：安装后中文语言包默认文件名为下划线格式（<code>chi_sim.traineddata</code> 对应简体，<code>chi_tra.traineddata</code> 对应繁体），但部分场景下程序可能要求使用连字符格式（<code>chi-sim.traineddata</code>、<code>chi-tra.traineddata</code>）。为避免因文件名格式导致识别失败，建议复制一份以连字符命名的文件，从而兼容不同场景下的调用需求。：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 修正简体中文包文件名</span></span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> /usr/share/tesseract-ocr/4.00/tessdata/chi_sim.traineddata /usr/share/tesseract-ocr/4.00/tessdata/chi-sim.traineddata</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># （可选）修正繁体中文包文件名</span></span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> /usr/share/tesseract-ocr/4.00/tessdata/chi_tra.traineddata /usr/share/tesseract-ocr/4.00/tessdata/chi-tra.traineddata</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、验证Tesseract安装与语言包配置\"><a href=\"#三、验证Tesseract安装与语言包配置\" class=\"headerlink\" title=\"三、验证Tesseract安装与语言包配置\"></a>三、验证Tesseract安装与语言包配置</h2><p>安装完成后，需确认引擎和语言包是否正常生效。</p>\n<ol>\n<li><p>检查Tesseract版本（验证引擎安装）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tesseract --version</span><br></pre></td></tr></table></figure>\n\n<p> 若输出类似<code>tesseract 4.0.0</code>的版本信息，说明引擎安装成功。</p>\n</li>\n<li><p>检查已安装的语言包（验证中文支持）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tesseract --list-langs</span><br></pre></td></tr></table></figure>\n\n<p> 若输出包含<code>chi-sim</code>（简体中文）和<code>chi-tra</code>（繁体中文），说明中文语言包配置成功。</p>\n</li>\n</ol>\n<h2 id=\"四、配置TESSDATA-PREFIX环境变量\"><a href=\"#四、配置TESSDATA-PREFIX环境变量\" class=\"headerlink\" title=\"四、配置TESSDATA_PREFIX环境变量\"></a>四、配置TESSDATA_PREFIX环境变量</h2><p>Tesseract需要通过<code>TESSDATA_PREFIX</code>环境变量定位语言包目录，需手动配置以确保引擎能正确找到语言包。</p>\n<ol>\n<li><p>编辑环境变量配置文件（以bash为例）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/&#x27;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p> 说明：<code>TESSDATA_PREFIX</code>需指向<code>tessdata</code>目录。</p>\n</li>\n<li><p>使环境变量生效：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>（若使用zsh，需将命令中的<code>~/.bashrc</code>替换为<code>~/.zshrc</code>）</p>\n<h2 id=\"五、安装Python相关依赖库\"><a href=\"#五、安装Python相关依赖库\" class=\"headerlink\" title=\"五、安装Python相关依赖库\"></a>五、安装Python相关依赖库</h2><p>通过Python调用Tesseract需安装对应的接口库，同时为处理PDF文件需补充相关工具库。</p>\n<ol>\n<li><p>安装核心Python库：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pytesseract PyPDF2 pdf2image pdfplumber opencv-python pillow</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 各库作用说明：</p>\n<ul>\n<li><p><code>pytesseract</code>：Python调用Tesseract OCR的接口库；</p>\n</li>\n<li><p><code>PyPDF2</code>&#x2F;<code>pdfplumber</code>：用于读取PDF文件（支持文本型PDF直接提取）；</p>\n</li>\n<li><p><code>pdf2image</code>：将图片型PDF转换为图片格式（以便Tesseract识别）;</p>\n</li>\n<li><p><code>opencv-python</code>：主要用于计算机视觉任务，可实现图像处理、视频分析、目标检测、边缘识别等复杂功能，是机器视觉领域的常用库；</p>\n</li>\n<li><p><code>pillow</code>：是轻量易用的 Python 图像库，核心用于基础图像操作，包括图像的读写、裁剪、尺寸调整、色彩调整及简单滤镜效果实现。</p>\n</li>\n</ul>\n</li>\n<li><p>（可选）若<code>pdf2image</code>运行时提示缺少依赖，需安装图片处理工具：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install poppler-utils</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"六、注意事项\"><a href=\"#六、注意事项\" class=\"headerlink\" title=\"六、注意事项\"></a>六、注意事项</h2><ol>\n<li><p>环境变量生效范围：上述配置仅对当前用户生效，若需全局生效，可将环境变量写入<code>/etc/profile</code>（需管理员权限）。</p>\n</li>\n<li><p>虚拟环境问题：若在Python虚拟环境中使用，需在虚拟环境激活后重新执行<code>source ~/.bashrc</code>（或手动设置<code>TESSDATA_PREFIX</code>）。</p>\n</li>\n<li><p>权限问题：确保运行程序的用户对<code>/usr/share/tesseract-ocr/4.00/tessdata/</code>目录及语言包文件有读取权限（默认权限已满足，无需额外配置）。</p>\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>通过以上步骤，即可在Ubuntu系统中完成支持中文的Python文字识别环境配置。基于Tesseract OCR和Python库，可实现图片、PDF等文件的文字提取功能，为后续的文本分析、内容处理等场景奠定基础。</p>\n<h2 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h2><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n","more":"<p>文字识别（OCR）是处理图像或PDF中文字内容的重要技术，Tesseract OCR是一款开源高效的OCR引擎，结合Python库可快速实现文字提取功能。本文将详细介绍在Ubuntu系统中配置支持中文的Python文字识别环境的步骤，适用于处理图片、PDF等文件中的文字内容。</p>\n<h2 id=\"一、安装Tesseract-OCR引擎\"><a href=\"#一、安装Tesseract-OCR引擎\" class=\"headerlink\" title=\"一、安装Tesseract OCR引擎\"></a>一、安装Tesseract OCR引擎</h2><p>Tesseract是核心OCR引擎，需先安装其基础程序。</p>\n<ol>\n<li><p>打开终端，更新系统包列表：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Tesseract OCR引擎：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install tesseract-ocr</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>这一步将安装Tesseract的核心程序，支持基础的文字识别功能（默认包含英文语言包）。</p>\n<h2 id=\"二、安装并配置中文语言包\"><a href=\"#二、安装并配置中文语言包\" class=\"headerlink\" title=\"二、安装并配置中文语言包\"></a>二、安装并配置中文语言包</h2><p>默认安装的Tesseract不包含中文语言包，需单独安装并修正文件名（避免因命名格式导致识别失败）。</p>\n<ol>\n<li><p>安装中文简体语言包：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install tesseract-ocr-chi-sim</span><br></pre></td></tr></table></figure>\n\n<p> （可选）若需识别繁体中文，可额外安装：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install tesseract-ocr-chi-tra</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修正语言包文件名（关键步骤）：</p>\n</li>\n</ol>\n<p>Tesseract对语言包的文件名格式有严格规范，但实际使用中，其对文件名的识别存在一定兼容性差异：安装后中文语言包默认文件名为下划线格式（<code>chi_sim.traineddata</code> 对应简体，<code>chi_tra.traineddata</code> 对应繁体），但部分场景下程序可能要求使用连字符格式（<code>chi-sim.traineddata</code>、<code>chi-tra.traineddata</code>）。为避免因文件名格式导致识别失败，建议复制一份以连字符命名的文件，从而兼容不同场景下的调用需求。：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 修正简体中文包文件名</span></span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> /usr/share/tesseract-ocr/4.00/tessdata/chi_sim.traineddata /usr/share/tesseract-ocr/4.00/tessdata/chi-sim.traineddata</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># （可选）修正繁体中文包文件名</span></span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> /usr/share/tesseract-ocr/4.00/tessdata/chi_tra.traineddata /usr/share/tesseract-ocr/4.00/tessdata/chi-tra.traineddata</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、验证Tesseract安装与语言包配置\"><a href=\"#三、验证Tesseract安装与语言包配置\" class=\"headerlink\" title=\"三、验证Tesseract安装与语言包配置\"></a>三、验证Tesseract安装与语言包配置</h2><p>安装完成后，需确认引擎和语言包是否正常生效。</p>\n<ol>\n<li><p>检查Tesseract版本（验证引擎安装）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tesseract --version</span><br></pre></td></tr></table></figure>\n\n<p> 若输出类似<code>tesseract 4.0.0</code>的版本信息，说明引擎安装成功。</p>\n</li>\n<li><p>检查已安装的语言包（验证中文支持）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tesseract --list-langs</span><br></pre></td></tr></table></figure>\n\n<p> 若输出包含<code>chi-sim</code>（简体中文）和<code>chi-tra</code>（繁体中文），说明中文语言包配置成功。</p>\n</li>\n</ol>\n<h2 id=\"四、配置TESSDATA-PREFIX环境变量\"><a href=\"#四、配置TESSDATA-PREFIX环境变量\" class=\"headerlink\" title=\"四、配置TESSDATA_PREFIX环境变量\"></a>四、配置TESSDATA_PREFIX环境变量</h2><p>Tesseract需要通过<code>TESSDATA_PREFIX</code>环境变量定位语言包目录，需手动配置以确保引擎能正确找到语言包。</p>\n<ol>\n<li><p>编辑环境变量配置文件（以bash为例）：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export TESSDATA_PREFIX=/usr/share/tesseract-ocr/4.00/&#x27;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p> 说明：<code>TESSDATA_PREFIX</code>需指向<code>tessdata</code>目录。</p>\n</li>\n<li><p>使环境变量生效：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>（若使用zsh，需将命令中的<code>~/.bashrc</code>替换为<code>~/.zshrc</code>）</p>\n<h2 id=\"五、安装Python相关依赖库\"><a href=\"#五、安装Python相关依赖库\" class=\"headerlink\" title=\"五、安装Python相关依赖库\"></a>五、安装Python相关依赖库</h2><p>通过Python调用Tesseract需安装对应的接口库，同时为处理PDF文件需补充相关工具库。</p>\n<ol>\n<li><p>安装核心Python库：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pytesseract PyPDF2 pdf2image pdfplumber opencv-python pillow</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 各库作用说明：</p>\n<ul>\n<li><p><code>pytesseract</code>：Python调用Tesseract OCR的接口库；</p>\n</li>\n<li><p><code>PyPDF2</code>&#x2F;<code>pdfplumber</code>：用于读取PDF文件（支持文本型PDF直接提取）；</p>\n</li>\n<li><p><code>pdf2image</code>：将图片型PDF转换为图片格式（以便Tesseract识别）;</p>\n</li>\n<li><p><code>opencv-python</code>：主要用于计算机视觉任务，可实现图像处理、视频分析、目标检测、边缘识别等复杂功能，是机器视觉领域的常用库；</p>\n</li>\n<li><p><code>pillow</code>：是轻量易用的 Python 图像库，核心用于基础图像操作，包括图像的读写、裁剪、尺寸调整、色彩调整及简单滤镜效果实现。</p>\n</li>\n</ul>\n</li>\n<li><p>（可选）若<code>pdf2image</code>运行时提示缺少依赖，需安装图片处理工具：</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install poppler-utils</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"六、注意事项\"><a href=\"#六、注意事项\" class=\"headerlink\" title=\"六、注意事项\"></a>六、注意事项</h2><ol>\n<li><p>环境变量生效范围：上述配置仅对当前用户生效，若需全局生效，可将环境变量写入<code>/etc/profile</code>（需管理员权限）。</p>\n</li>\n<li><p>虚拟环境问题：若在Python虚拟环境中使用，需在虚拟环境激活后重新执行<code>source ~/.bashrc</code>（或手动设置<code>TESSDATA_PREFIX</code>）。</p>\n</li>\n<li><p>权限问题：确保运行程序的用户对<code>/usr/share/tesseract-ocr/4.00/tessdata/</code>目录及语言包文件有读取权限（默认权限已满足，无需额外配置）。</p>\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>通过以上步骤，即可在Ubuntu系统中完成支持中文的Python文字识别环境配置。基于Tesseract OCR和Python库，可实现图片、PDF等文件的文字提取功能，为后续的文本分析、内容处理等场景奠定基础。</p>\n<h2 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h2><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"图像识别","path":"api/tags/图像识别.json"}]}