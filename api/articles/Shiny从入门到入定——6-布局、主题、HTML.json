{"title":"Shiny从入门到入定——6-布局、主题、HTML","slug":"Shiny从入门到入定——6-布局、主题、HTML","date":"2024-01-25T13:49:44.000Z","updated":"2024-03-11T13:07:17.333Z","comments":true,"path":"api/articles/Shiny从入门到入定——6-布局、主题、HTML.json","excerpt":null,"covers":["https://d33wubrfki0l68.cloudfront.net/ad1d199cecafc2c2be10425930b1dcfb5e8dd5d7/1f5c9/images/action-layout/fluid-page.png","https://d33wubrfki0l68.cloudfront.net/37aa2b1c61a6141cc95188bffd0cfc782fdb27d5/b6aa6/diagrams/action-layout/sidebar.png","https://d33wubrfki0l68.cloudfront.net/4558a562a7be6b3c8bca4a25f3122d7322b536cc/6e6a0/demos/action-layout/sidebar.png","https://d33wubrfki0l68.cloudfront.net/15ea13e6dd0ba26014225718b5541abb983e0a45/7b30e/diagrams/action-layout/multirow.png","https://d33wubrfki0l68.cloudfront.net/9c03ba6941047ea3face093a70f248673f4c824a/98580/demos/action-layout/tabset.png","https://d33wubrfki0l68.cloudfront.net/a856fa6a960d4e7e7b1cd2755c91934853e0e500/f7fbe/demos/action-layout/tabset-input-1.png","https://d33wubrfki0l68.cloudfront.net/56785160c5b2c58ecebd5c89454f41ca8ba01132/3504e/demos/action-layout/navlistpanel.png","https://d33wubrfki0l68.cloudfront.net/a2d6dc2e78a21f32db77925f1d28122e6288a44d/3c1ec/demos/action-layout/navbarpage.png","https://d33wubrfki0l68.cloudfront.net/6850c18bfcfd5671f12f1f638c2c76b4ccb5b11d/07f6a/demos/action-layout/theme-flatly.png","https://d33wubrfki0l68.cloudfront.net/0e7243ec6ca6821445c04bff6488fcf612c3fe88/e378c/demos/action-layout/thematic.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"6-布局，主题，HTML\"><a href=\"#6-布局，主题，HTML\" class=\"headerlink\" title=\"6 布局，主题，HTML\"></a>6 布局，主题，HTML</h1><ul>\n<li>第6章详细介绍了在页面上布局输入和输出组件的各种方法，以及如何使用主题定制它们的外观。</li>\n</ul>\n<h2 id=\"6-1-前言\"><a href=\"#6-1-前言\" class=\"headerlink\" title=\"6.1 前言\"></a>6.1 前言</h2><p>在本章中，你将解锁一些控制应用程序整体外观的新工具。我们将首先讨论页面布局（包括单页和“多页”），让你组织你的输入和输出。然后你将学习Bootstrap，Shiny使用的CSS工具包，以及如何用主题定制它的整体视觉外观。最后，我们将简要讨论一下幕后发生了什么，这样如果你知道HTML和CSS，你就可以进一步定制Shiny应用程序。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-2-单页布局\"><a href=\"#6-2-单页布局\" class=\"headerlink\" title=\"6.2 单页布局\"></a>6.2 单页布局</h2><p>在第2章中，你学习了构成应用程序交互组件的输入和输出。但是我没有谈到如何在页面上布局它们，而是使用 <a href=\"https://rdrr.io/pkg/shiny/man/fluidPage.html\">fluidPage()</a> 尽可能快地将它们拼凑在一起。虽然这对于学习 Shiny 来说是很好的，但它并不能创建可用或视觉上吸引人的应用程序，所以现在是时候学习一些更多的布局函数了。</p>\n<p>布局功能提供了应用程序的高级视觉结构。布局由函数调用的层次结构创建，其中R中的层次结构与生成的HTML中的层次结构相匹配。这有助于您理解布局代码。例如，当您查看这样的布局代码时：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Hello Shiny!&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;obs&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Observations:&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">1000</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;distPlot&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>关注函数调用的层次结构：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>即使你还没有学习这些函数，通过阅读它们的名字，你也可以猜到发生了什么。你可能会想象这段代码会生成一个经典的应用程序设计：顶部有一个标题栏，后面是一个侧边栏（包含一个滑块）和主面板（包含一个绘图）。通过缩进轻松查看层次结构的能力是使用一致风格的一个好主意的原因之一。</p>\n<p>在本节的剩余部分中，我将讨论帮助您设计单页应用程序的功能，然后在下一节中讨论多页应用程序。我还建议您查看Shiny Application布局指南；它有点过时，但包含一些有用的精华。</p>\n<h3 id=\"6-2-1-页面功能\"><a href=\"#6-2-1-页面功能\" class=\"headerlink\" title=\"6.2.1 页面功能\"></a>6.2.1 页面功能</h3><p>最重要的，但最无趣的布局函数是 <a href=\"https://rdrr.io/pkg/shiny/man/fluidPage.html\">fluidPage()</a>，到目前为止，您在几乎每个示例中都看到了它。但是它做了什么，如果单独使用它会怎么样？图6.1显示了结果：它看起来像一个非常无聊的应用程序，但幕后有很多事情，因为 <code>fluidPage()</code> 设置了 Shiny 所需的所有 HTML、CSS 和 JavaScript。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/ad1d199cecafc2c2be10425930b1dcfb5e8dd5d7/1f5c9/images/action-layout/fluid-page.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/ad1d199cecafc2c2be10425930b1dcfb5e8dd5d7/1f5c9/images/action-layout/fluid-page.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.1 仅由 fluidPage() 构成的UI\"></p>\n<p>除了<code>fluidPage()</code>，Shiny还提供了其他几个页面函数，在更特殊的情况下可以派上用场：<a href=\"https://rdrr.io/pkg/shiny/man/fixedPage.html\">fixedPage()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/fillPage.html\">fillPage()</a>。<code>fixedPage()</code>的工作原理类似于<code>fluidPage()</code>，但有一个固定的最大宽度，可以防止你的应用程序在更大的屏幕上变得不合理地宽。<code>fillPage()</code>填充浏览器的整个高度，如果你想制作一个占据整个屏幕的图表，它很有用。你可以在他们的文档中找到详细信息。</p>\n<h3 id=\"6-2-2-带侧边栏的页面\"><a href=\"#6-2-2-带侧边栏的页面\" class=\"headerlink\" title=\"6.2.2 带侧边栏的页面\"></a>6.2.2 带侧边栏的页面</h3><p>要制作更复杂的布局，您需要在 <code>fluidPage()</code> 中调用布局函数。例如，要制作左侧有输入、右侧有输出的两列布局，可以使用 <a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarLayout()</a>（以及它的朋友 <a href=\"https://rdrr.io/pkg/shiny/man/titlePanel.html\">titlePanel()</a>、 <a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarPanel()</a> 和 <a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">mainPanel()</a>）。以下代码显示了生成图 6.2 的基本结构：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    <span class=\"comment\"># app title/description</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      <span class=\"comment\"># inputs</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      <span class=\"comment\"># outputs</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/37aa2b1c61a6141cc95188bffd0cfc782fdb27d5/b6aa6/diagrams/action-layout/sidebar.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/37aa2b1c61a6141cc95188bffd0cfc782fdb27d5/b6aa6/diagrams/action-layout/sidebar.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.2 基础app的侧边栏结构\"></p>\n<p>为了让其更加真实，让我们增加一个输入和输出以创建一个演示中心极限定理的非常简单的应用程序，如图6.3所示。如果你自己运行这个应用程序，你可以增加样本数量以看到分布变得更加正常。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Central limit theorem&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;m&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of samples:&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;hist&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>hist <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    means <span class=\"operator\">&lt;-</span> replicate<span class=\"punctuation\">(</span><span class=\"number\">1e4</span><span class=\"punctuation\">,</span> mean<span class=\"punctuation\">(</span>runif<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>m<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    hist<span class=\"punctuation\">(</span>means<span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> <span class=\"number\">20</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/4558a562a7be6b3c8bca4a25f3122d7322b536cc/6e6a0/demos/action-layout/sidebar.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/4558a562a7be6b3c8bca4a25f3122d7322b536cc/6e6a0/demos/action-layout/sidebar.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.3 常见的应用程序设计是将控件放在侧边栏中，并将结果显示在主面板中\"></p>\n<h3 id=\"6-2-3-多行\"><a href=\"#6-2-3-多行\" class=\"headerlink\" title=\"6.2.3 多行\"></a>6.2.3 多行</h3><p>在幕后，<a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarLayout()</a>建立在灵活的多行布局之上，您可以直接使用它来创建更具视觉复杂性的应用程序。像往常一样，您从<code>fluidPage()</code>开始。然后，您使用<a href=\"https://rdrr.io/pkg/shiny/man/fluidPage.html\">fluidRow()</a>创建行，使用<a href=\"https://rdrr.io/pkg/shiny/man/column.html\">column()</a>创建列。以下模板生成图6.4所示的结构：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fluidRow<span class=\"punctuation\">(</span></span><br><span class=\"line\">    column<span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    column<span class=\"punctuation\">(</span><span class=\"number\">8</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  fluidRow<span class=\"punctuation\">(</span></span><br><span class=\"line\">    column<span class=\"punctuation\">(</span><span class=\"number\">6</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    column<span class=\"punctuation\">(</span><span class=\"number\">6</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/15ea13e6dd0ba26014225718b5541abb983e0a45/7b30e/diagrams/action-layout/multirow.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/15ea13e6dd0ba26014225718b5541abb983e0a45/7b30e/diagrams/action-layout/multirow.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.4 简单多行应用程序的基础结构\"></p>\n<p>每一行由12列组成，<code>column()</code> 的第一个参数给出了要占用的列数。12列布局为您提供极大的灵活性，因为您可以轻松创建2、3或4列布局，或使用窄列创建间隔。您可以在第4.4节中看到这种布局的示例。</p>\n<p>如果你想了解更多关于使用网格系统进行设计的知识，我强烈推荐由约瑟夫·穆勒-布罗克曼撰写的关于这个主题的经典文本：<a href=\"https://www.amazon.com/dp/3721201450\">《平面设计中的网格系统》</a>。</p>\n<h3 id=\"6-2-4-练习\"><a href=\"#6-2-4-练习\" class=\"headerlink\" title=\"6.2.4 练习\"></a>6.2.4 练习</h3><p><strong>6.2.4.1</strong> 阅读 <a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarLayout()</a> 的文档，确定侧边栏和主面板的宽度（以列为单位）。你能使用 fluidRow() 和 column() 重新创建它的外观吗？你缺少什么？</p>\n<p><strong>6.2.4.2</strong> 修改中心极限定理应用程序，将侧边栏放在右侧而不是左侧。</p>\n<p><strong>6.2.4.3</strong> 创建一个包含两个图的应用程序，每个图占一半宽度。将控件放在图下方的全宽容器中。</p>\n<h2 id=\"6-3-多页布局\"><a href=\"#6-3-多页布局\" class=\"headerlink\" title=\"6.3 多页布局\"></a>6.3 多页布局</h2><p>随着应用程序复杂性的增加，可能无法将所有内容都放在一个页面上。在本节中，您将学习 <a href=\"https://rdrr.io/pkg/shiny/man/tabPanel.html\">tabPanel()</a> 的各种用途，以创建多个页面的假象。这是一种假象，因为您仍然只有一个应用程序和一个基础 HTML 文件，但现在它被分解成多个部分，一次只能看到一个部分。</p>\n<p>多页应用程序与模块搭配得特别好，你将在第19章了解模块。模块允许你以与划分用户界面相同的方式划分server函数，创建仅通过定义良好的连接进行交互的独立组件。</p>\n<h3 id=\"6-3-1-选项卡集\"><a href=\"#6-3-1-选项卡集\" class=\"headerlink\" title=\"6.3.1 选项卡集\"></a>6.3.1 选项卡集</h3><p>将页面分解成块的简单方法是使用 <a href=\"https://rdrr.io/pkg/shiny/man/tabsetPanel.html\">tabsetPanel()</a> 及其亲密朋友 <code>tabPanel()</code>。正如您在下面的代码中看到的，<code>tabsetPanel()</code> 为任意数量的 <code>tabPanels()</code> 创建一个容器，而 <code>tabPanels()</code> 反过来又包含任何其他 HTML 组件。图 6.5 显示了一个简单的例子。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Import data&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;file&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Data&quot;</span><span class=\"punctuation\">,</span> buttonLabel <span class=\"operator\">=</span> <span class=\"string\">&quot;Upload...&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;delim&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Delimiter (leave blank to guess)&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;skip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows to skip&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;rows&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows to preview&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Set parameters&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Visualise results&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/9c03ba6941047ea3face093a70f248673f4c824a/98580/demos/action-layout/tabset.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/9c03ba6941047ea3face093a70f248673f4c824a/98580/demos/action-layout/tabset.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.5 tabsetPanel()允许用户选择单个tabPanel()进行查看\"></p>\n<p>如果您想知道用户选择了哪个选项卡，您可以将 <code>id</code> 参数提供给 <code>tabsetPanel()</code> 并将它设为输入。图6.6显示了这一点。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">        id <span class=\"operator\">=</span> <span class=\"string\">&quot;tabset&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;one&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;two&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;three&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>panel <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    paste<span class=\"punctuation\">(</span><span class=\"string\">&quot;Current panel: &quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>tabset<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/a856fa6a960d4e7e7b1cd2755c91934853e0e500/f7fbe/demos/action-layout/tabset-input-1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/a856fa6a960d4e7e7b1cd2755c91934853e0e500/f7fbe/demos/action-layout/tabset-input-1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.6 当您使用id参数时，tabset成为输入。这允许您根据当前可见的选项卡使您的应用程序表现不同。\"></p>\n<p>注意，<code>tabsetPanel()</code>可以在应用程序中的任何地方使用；如果需要，将选项卡集嵌套在其他组件（包括选项卡集！）中是完全可以的。</p>\n<h3 id=\"6-3-2-导航列表和导航栏\"><a href=\"#6-3-2-导航列表和导航栏\" class=\"headerlink\" title=\"6.3.2 导航列表和导航栏\"></a>6.3.2 导航列表和导航栏</h3><p>因为标签是水平显示的，所以你可以使用的标签数量有一个基本的限制，特别是如果它们的标题很长。<a href=\"https://rdrr.io/pkg/shiny/man/navbarPage.html\">navbarPage()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/navbarPage.html\">navbarMenu()</a>提供了两种替代布局，让你使用更多标签和更长的标题。</p>\n<p><a href=\"https://rdrr.io/pkg/shiny/man/navlistPanel.html\">navlistPanel()</a>类似于<a href=\"https://rdrr.io/pkg/shiny/man/tabsetPanel.html\">tabsetPanel()</a>，但不会水平显示标签标题，而是在侧边栏中垂直显示。它还允许您使用纯字符串添加标题，如下面的代码所示，生成图6.7。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  navlistPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    id <span class=\"operator\">=</span> <span class=\"string\">&quot;tabset&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;Heading 1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel one contents&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;Heading 2&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel two contents&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel three contents&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/56785160c5b2c58ecebd5c89454f41ca8ba01132/3504e/demos/action-layout/navlistpanel.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/56785160c5b2c58ecebd5c89454f41ca8ba01132/3504e/demos/action-layout/navlistpanel.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.7 navlistPanel()垂直显示选项卡标题，而不是水平显示\"></p>\n<p>另一种方法是使用<code>navbarPage()</code>：它仍然产生水平选项卡标题，但您可以使用<code>navbarMenu()</code>添加下拉菜单以实现额外的层次结构。图6.8显示了一个简单的示例。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> navbarPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  <span class=\"string\">&quot;Page title&quot;</span><span class=\"punctuation\">,</span>   </span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;one&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;two&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;three&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  navbarMenu<span class=\"punctuation\">(</span><span class=\"string\">&quot;subpanels&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 4a&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;four-a&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 4b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;four-b&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 4c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;four-c&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/a2d6dc2e78a21f32db77925f1d28122e6288a44d/3c1ec/demos/action-layout/navbarpage.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/a2d6dc2e78a21f32db77925f1d28122e6288a44d/3c1ec/demos/action-layout/navbarpage.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.8 navbarPage()在页面顶部生成一个水平导航栏\"></p>\n<p>这些布局为你提供了相当大的能力来创建丰富而令人满意的应用程序。要更进一步，你需要更多地了解底层设计系统。</p>\n<h2 id=\"6-4-引导程序（Bootstrap）\"><a href=\"#6-4-引导程序（Bootstrap）\" class=\"headerlink\" title=\"6.4 引导程序（Bootstrap）\"></a>6.4 引导程序（Bootstrap）</h2><p>要继续你的应用程序定制之旅，你需要更多地了解 Shiny 所使用的 <a href=\"https://getbootstrap.com/\">Bootstrap</a> 框架。Bootstrap 是一系列 HTML 约定、CSS 样式和 JS 代码片段的集合，打包成一种方便的形式。Bootstrap 最初是 Twitter 开发的一个框架，在过去的 10 年里，它已经发展成为网络上最流行的 CSS 框架之一。Bootstrap 在 R 中也很受欢迎——你无疑已经看到过许多由 <a href=\"https://pkgs.rstudio.com/rmarkdown/reference/html_document.html\">rmarkdown::html_document()</a> 生成的文档，并使用了许多由 <a href=\"http://pkgdown.r-lib.org/\">pkgdown</a> 制作的包网站，这两个网站也都使用了 Bootstrap。</p>\n<p>作为 Shiny 开发人员，您不需要过多考虑 Bootstrap，因为 Shiny 会自动为您生成与 Bootstrap 兼容的 HTML。但是知道 Bootstrap 存在是件好事，因为这样：</p>\n<ul>\n<li><p>你可以使用<a href=\"https://rstudio.github.io/bslib/reference/bs_theme.html\">bslib::bs_theme()</a>来定制代码的视觉外观，第6.5节。</p>\n</li>\n<li><p>你可以使用<code>class</code>参数来使用Bootstrap class名定制一些布局、输入和输出，正如你在第2.2.7节中所看到的。</p>\n</li>\n<li><p>你可以自己编写函数来生成 Shiny 不提供的 Bootstrap 组件，如<a href=\"https://rstudio.github.io/bslib/articles/theming.html#utility-classes\">Utility classes</a>中所述。</p>\n</li>\n</ul>\n<p>也可以使用完全不同的CSS框架。许多现有的R包通过包装流行的Bootstrap替代品来简化这一过程：</p>\n<ul>\n<li><p><a href=\"https://appsilon.com/\">Appsilon</a> 构建在 <a href=\"https://fomantic-ui.com/\">formantic UI</a> 之上的<a href=\"https://appsilon.github.io/shiny.semantic/\">shiny.semantic</a>。</p>\n</li>\n<li><p><a href=\"https://rinterface.com/\">RInterface</a> 基于 <a href=\"https://framework7.io/\">framework 7</a>  构建的  <a href=\"https://github.com/RinteRface/shinyMobile\">shinyMobile</a> ，专为移动应用程序而设计。</p>\n</li>\n<li><p>由 <a href=\"https://github.com/ericrayanderson\">Eric Anderson</a> 开发的 <a href=\"https://ericrayanderson.github.io/shinymaterial/\">shinymaterial</a>，建立在谷歌的 <a href=\"https://material.io/design\">Material</a> 设计框架之上。</p>\n</li>\n<li><p><a href=\"https://rstudio.github.io/shinydashboard/\">shinydashboard</a> 也是由RStudio开发的，它提供了一个用于创建仪表板的布局系统。</p>\n</li>\n</ul>\n<p>你可以在 <a href=\"https://github.com/nanxstats/awesome-shiny-extensions\">https://github.com/nanxstats/awesome-shiny-extensions</a> 上找到一个更完整、维护更活跃的列表。</p>\n<h2 id=\"6-5-主题\"><a href=\"#6-5-主题\" class=\"headerlink\" title=\"6.5 主题\"></a>6.5 主题</h2><p>Bootstrap在R社区中无处不在，很容易让人产生审美疲劳：过了一段时间，每个Shiny应用程序和Rmd看起来都差不多。解决方案是使用<a href=\"https://rstudio.github.io/bslib\">bslib</a>包进行主题化。bslib是一个相对较新的包，允许您覆盖许多Bootstrap默认值，以创建独特的外观。在我写这篇文章的时候，bslib主要适用于Shiny，但正在努力将其增强的主题化功能引入RMarkdown、pkgdown等。</p>\n<p>如果你正在为公司开发应用程序，我强烈建议你花点时间在主题化上——将你的应用程序主题化，以匹配你的企业风格指南，这是一种让你看起来很好的简单方法。</p>\n<h3 id=\"6-5-1-开始\"><a href=\"#6-5-1-开始\" class=\"headerlink\" title=\"6.5.1 开始\"></a>6.5.1 开始</h3><p>使用 <a href=\"https://rstudio.github.io/bslib/reference/bs_theme.html\">bslib::bs_theme()</a> 创建一个主题，然后使用页面布局函数的<code>theme</code>参数将其应用于应用程序：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  theme <span class=\"operator\">=</span> bslib<span class=\"operator\">::</span>bs_theme<span class=\"punctuation\">(</span>...<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果不特别指定，Shiny将使用其自创建以来基本上使用的经典Bootstrap v3主题。默认情况下，<code>bslib::bs_theme()</code>将使用 Bootstrap v4。如果您只使用内置组件，使用Bootstrap v4替代v3不会造成问题。如果您使用了自定义HTML，它可能会造成问题，因此您可以通过设置<code>version = 3</code>来强制它保持v3。</p>\n<h3 id=\"6-5-2-Shiny主题\"><a href=\"#6-5-2-Shiny主题\" class=\"headerlink\" title=\"6.5.2 Shiny主题\"></a>6.5.2 Shiny主题</h3><p>更改应用程序整体外观的最简单方法是使用<code>bootswatch</code>参数对<code>bslib::bs_theme()</code>选择一个预先制作的<code>bootswatch</code>主题。图6.9显示了以下代码的结果，切换其他主题为“darkly”。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  theme <span class=\"operator\">=</span> bslib<span class=\"operator\">::</span>bs_theme<span class=\"punctuation\">(</span>bootswatch <span class=\"operator\">=</span> <span class=\"string\">&quot;darkly&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;txt&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Text input:&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;text here&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Slider input:&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> <span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      h1<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;Theme: darkly&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      h2<span class=\"punctuation\">(</span><span class=\"string\">&quot;Header 2&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      p<span class=\"punctuation\">(</span><span class=\"string\">&quot;Some text&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/6850c18bfcfd5671f12f1f638c2c76b4ccb5b11d/07f6a/demos/action-layout/theme-flatly.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/6850c18bfcfd5671f12f1f638c2c76b4ccb5b11d/07f6a/demos/action-layout/theme-flatly.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.9 相同的app采用了用四个bootswatch主题风格：darkly、flatly、sandstone和united\"></p>\n<p>此外，你可以利用<code>bs_theme()</code>的其他参数创建自己的主题，如 <code>bg</code> （背景颜色），<code>fg</code>（前景色）和 <code>base_font</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme <span class=\"operator\">&lt;-</span> bslib<span class=\"operator\">::</span>bs_theme<span class=\"punctuation\">(</span></span><br><span class=\"line\">  bg <span class=\"operator\">=</span> <span class=\"string\">&quot;#0b3d91&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  fg <span class=\"operator\">=</span> <span class=\"string\">&quot;white&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  base_font <span class=\"operator\">=</span> <span class=\"string\">&quot;Source Sans Pro&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>一种预览和自定义主题的简单方法是使用<code>bslib::bs_theme_preview(theme)</code>。这将打开一个Shiny应用程序，展示该主题在应用于许多标准控件时的外观，同时还为你提供交互式控件，用于自定义最重要的参数。</p>\n<h3 id=\"6-5-3-图表主题\"><a href=\"#6-5-3-图表主题\" class=\"headerlink\" title=\"6.5.3 图表主题\"></a>6.5.3 图表主题</h3><p>如果你已经对你的应用程序样式进行了大量自定义，你可能还想自定义图表以匹配整体风格。幸运的是，这非常简单，多亏了<a href=\"https://rstudio.github.io/thematic/\">thematic</a>包，它可以自动对ggplot2、lattice和基础图表进行主题化。只需在server函数中调用<code>thematic_shiny()</code>。这将自动确定你的应用程序主题的所有设置，如图6.10所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  theme <span class=\"operator\">=</span> bslib<span class=\"operator\">::</span>bs_theme<span class=\"punctuation\">(</span>bootswatch <span class=\"operator\">=</span> <span class=\"string\">&quot;darkly&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;A themed plot&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  thematic<span class=\"operator\">::</span>thematic_shiny<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>wt<span class=\"punctuation\">,</span> mpg<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      geom_smooth<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/0e7243ec6ca6821445c04bff6488fcf612c3fe88/e378c/demos/action-layout/thematic.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/0e7243ec6ca6821445c04bff6488fcf612c3fe88/e378c/demos/action-layout/thematic.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6.10 使用thematic::thematic_shiny()确保ggplot2自动匹配应用程序主题\"></p>\n<h3 id=\"6-5-4-练习\"><a href=\"#6-5-4-练习\" class=\"headerlink\" title=\"6.5.4 练习\"></a>6.5.4 练习</h3><p><strong>6.4.5.1</strong> 使用<code>bslib::bs_theme_preview()</code>制作你能想到的最丑的主题。</p>\n<h2 id=\"6-6-面罩之下\"><a href=\"#6-6-面罩之下\" class=\"headerlink\" title=\"6.6 面罩之下\"></a>6.6 面罩之下</h2><p>Shiny的设计是为了让R用户不需要了解HTML的细节。但是，如果你知道一些HTML和CSS，你仍然可以进一步定制Shiny。不幸的是，教授HTML和CSS不在本书的范围内，但MDN的<a href=\"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML</a>和<a href=\"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS</a>基础教程是一个很好的起点。</p>\n<p>最重要的是要知道，所有输入、输出和布局函数背后都没有魔法：它们只是生成HTML。您可以通过在控制台中直接执行UI函数来查看HTML：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your name?&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group shiny-input-container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span>What&#x27;s your name?<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，这是 <code>&lt;body&gt;</code> 标签的内容；Shiny 的其他部分负责生成 <code>&lt;head&gt;</code>。如果你想包含额外的 CSS 或 JS 依赖项，你需要学习 <a href=\"https://rdrr.io/pkg/htmltools/man/htmlDependency.html\">htmltools::htmlDependency()</a>。两个好的起点是 <a href=\"https://blog.r-hub.io/2020/08/25/js-r/#web-dependency-management\">https://blog.r-hub.io/2020/08/25/js-r/#web-dependency-management</a> 和 <a href=\"https://unleash-shiny.rinterface.com/htmltools-dependencies.html\">https://unleash-shiny.rinterface.com/htmltools-dependencies.html</a>。</p>\n<p>可以将自己的 HTML 添加到 <code>ui</code>。一种方法是通过 <a href=\"https://rdrr.io/pkg/htmltools/man/HTML.html\">HTML()</a> 函数包含文本 HTML。在下面的例子中，我使用“原始字符常量”，<code>r&quot;()&quot;</code>，以便更容易在字符串中包含引号：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  HTML<span class=\"punctuation\">(</span><span class=\"string\">r&quot;(</span></span><br><span class=\"line\"><span class=\"string\">    &lt;h1&gt;This is a heading&lt;/h1&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;p class=&quot;my-class&quot;&gt;This is some text!&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;First bullet&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;Second bullet&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">  )&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果您是 HTML&#x2F;CSS 专家，您可能想知道是否可以完全跳过 <code>fluidPage()</code> 并提供原始 HTML。有关更多详细信息，请参阅“<a href=\"https://shiny.rstudio.com/articles/html-ui.html\">使用 HTML 构建整个 UI</a>”。</p>\n<p>或者，您可以使用Shiny提供的HTML辅助函数。对于最重要的元素，如<code>h1()</code>和<code>p()</code>，有常规函数，所有其他元素都可以通过其他标签辅助函数访问。命名参数成为属性，未命名参数成为子元素，因此我们可以将上面的HTML重新创建为：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  h1<span class=\"punctuation\">(</span><span class=\"string\">&quot;This is a heading&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  p<span class=\"punctuation\">(</span><span class=\"string\">&quot;This is some text&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">class</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;my-class&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tags<span class=\"operator\">$</span>ul<span class=\"punctuation\">(</span></span><br><span class=\"line\">    tags<span class=\"operator\">$</span>li<span class=\"punctuation\">(</span><span class=\"string\">&quot;First bullet&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    tags<span class=\"operator\">$</span>li<span class=\"punctuation\">(</span><span class=\"string\">&quot;Second bullet&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>使用代码生成 HTML 的一个优点是，你可以将现有的 Shiny 组件交织到自定义结构中。例如，以下代码生成了一段包含两个输出的文本段落，其中一个为粗体：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags<span class=\"operator\">$</span>p<span class=\"punctuation\">(</span></span><br><span class=\"line\">  <span class=\"string\">&quot;You made &quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  tags<span class=\"operator\">$</span>b<span class=\"punctuation\">(</span><span class=\"string\">&quot;$&quot;</span><span class=\"punctuation\">,</span> textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;amount&quot;</span><span class=\"punctuation\">,</span> inline <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot; in the last &quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;days&quot;</span><span class=\"punctuation\">,</span> inline <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot; days &quot;</span> </span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意使用<code>inline = TRUE</code>；<code>textOutput()</code>默认是生成一个完整的段落。</p>\n<p>要了解更多关于使用HTML、CSS和JavaScript制作引人注目的用户界面的知识，我强烈推荐David Granjon的<a href=\"https://unleash-shiny.rinterface.com/index.html\">《Shiny的杰出用户界面》</a>。</p>\n<h2 id=\"6-7-总结\"><a href=\"#6-7-总结\" class=\"headerlink\" title=\"6.7 总结\"></a>6.7 总结</h2><p>本章为你提供了制作复杂而吸引人的Shiny应用程序所需的工具。你已经学习了Shiny函数，这些函数允许你布局单页和多页应用程序（如<code>fluidPage()</code>和<code>tabsetPanel()</code>），以及如何使用主题定制整体视觉外观。你还学到了一些关于底层的东西：你知道Shiny使用Bootstrap，并且输入和输出函数只返回HTML，你也可以自己创建自己的HTML。</p>\n<p>在下一章中，您将了解有关应用程序中另一个重要视觉组件的更多信息：图形。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"6-布局，主题，HTML\"><a href=\"#6-布局，主题，HTML\" class=\"headerlink\" title=\"6 布局，主题，HTML\"></a>6 布局，主题，HTML</h1><ul>\n<li>第6章详细介绍了在页面上布局输入和输出组件的各种方法，以及如何使用主题定制它们的外观。</li>\n</ul>\n<h2 id=\"6-1-前言\"><a href=\"#6-1-前言\" class=\"headerlink\" title=\"6.1 前言\"></a>6.1 前言</h2><p>在本章中，你将解锁一些控制应用程序整体外观的新工具。我们将首先讨论页面布局（包括单页和“多页”），让你组织你的输入和输出。然后你将学习Bootstrap，Shiny使用的CSS工具包，以及如何用主题定制它的整体视觉外观。最后，我们将简要讨论一下幕后发生了什么，这样如果你知道HTML和CSS，你就可以进一步定制Shiny应用程序。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-2-单页布局\"><a href=\"#6-2-单页布局\" class=\"headerlink\" title=\"6.2 单页布局\"></a>6.2 单页布局</h2><p>在第2章中，你学习了构成应用程序交互组件的输入和输出。但是我没有谈到如何在页面上布局它们，而是使用 <a href=\"https://rdrr.io/pkg/shiny/man/fluidPage.html\">fluidPage()</a> 尽可能快地将它们拼凑在一起。虽然这对于学习 Shiny 来说是很好的，但它并不能创建可用或视觉上吸引人的应用程序，所以现在是时候学习一些更多的布局函数了。</p>\n<p>布局功能提供了应用程序的高级视觉结构。布局由函数调用的层次结构创建，其中R中的层次结构与生成的HTML中的层次结构相匹配。这有助于您理解布局代码。例如，当您查看这样的布局代码时：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Hello Shiny!&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;obs&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Observations:&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">1000</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;distPlot&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>关注函数调用的层次结构：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>即使你还没有学习这些函数，通过阅读它们的名字，你也可以猜到发生了什么。你可能会想象这段代码会生成一个经典的应用程序设计：顶部有一个标题栏，后面是一个侧边栏（包含一个滑块）和主面板（包含一个绘图）。通过缩进轻松查看层次结构的能力是使用一致风格的一个好主意的原因之一。</p>\n<p>在本节的剩余部分中，我将讨论帮助您设计单页应用程序的功能，然后在下一节中讨论多页应用程序。我还建议您查看Shiny Application布局指南；它有点过时，但包含一些有用的精华。</p>\n<h3 id=\"6-2-1-页面功能\"><a href=\"#6-2-1-页面功能\" class=\"headerlink\" title=\"6.2.1 页面功能\"></a>6.2.1 页面功能</h3><p>最重要的，但最无趣的布局函数是 <a href=\"https://rdrr.io/pkg/shiny/man/fluidPage.html\">fluidPage()</a>，到目前为止，您在几乎每个示例中都看到了它。但是它做了什么，如果单独使用它会怎么样？图6.1显示了结果：它看起来像一个非常无聊的应用程序，但幕后有很多事情，因为 <code>fluidPage()</code> 设置了 Shiny 所需的所有 HTML、CSS 和 JavaScript。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/ad1d199cecafc2c2be10425930b1dcfb5e8dd5d7/1f5c9/images/action-layout/fluid-page.png\" alt=\"图6.1 仅由 fluidPage() 构成的UI\"></p>\n<p>除了<code>fluidPage()</code>，Shiny还提供了其他几个页面函数，在更特殊的情况下可以派上用场：<a href=\"https://rdrr.io/pkg/shiny/man/fixedPage.html\">fixedPage()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/fillPage.html\">fillPage()</a>。<code>fixedPage()</code>的工作原理类似于<code>fluidPage()</code>，但有一个固定的最大宽度，可以防止你的应用程序在更大的屏幕上变得不合理地宽。<code>fillPage()</code>填充浏览器的整个高度，如果你想制作一个占据整个屏幕的图表，它很有用。你可以在他们的文档中找到详细信息。</p>\n<h3 id=\"6-2-2-带侧边栏的页面\"><a href=\"#6-2-2-带侧边栏的页面\" class=\"headerlink\" title=\"6.2.2 带侧边栏的页面\"></a>6.2.2 带侧边栏的页面</h3><p>要制作更复杂的布局，您需要在 <code>fluidPage()</code> 中调用布局函数。例如，要制作左侧有输入、右侧有输出的两列布局，可以使用 <a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarLayout()</a>（以及它的朋友 <a href=\"https://rdrr.io/pkg/shiny/man/titlePanel.html\">titlePanel()</a>、 <a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarPanel()</a> 和 <a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">mainPanel()</a>）。以下代码显示了生成图 6.2 的基本结构：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    <span class=\"comment\"># app title/description</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      <span class=\"comment\"># inputs</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      <span class=\"comment\"># outputs</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/37aa2b1c61a6141cc95188bffd0cfc782fdb27d5/b6aa6/diagrams/action-layout/sidebar.png\" alt=\"图6.2 基础app的侧边栏结构\"></p>\n<p>为了让其更加真实，让我们增加一个输入和输出以创建一个演示中心极限定理的非常简单的应用程序，如图6.3所示。如果你自己运行这个应用程序，你可以增加样本数量以看到分布变得更加正常。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Central limit theorem&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;m&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of samples:&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;hist&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>hist <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    means <span class=\"operator\">&lt;-</span> replicate<span class=\"punctuation\">(</span><span class=\"number\">1e4</span><span class=\"punctuation\">,</span> mean<span class=\"punctuation\">(</span>runif<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>m<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    hist<span class=\"punctuation\">(</span>means<span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> <span class=\"number\">20</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/4558a562a7be6b3c8bca4a25f3122d7322b536cc/6e6a0/demos/action-layout/sidebar.png\" alt=\"图6.3 常见的应用程序设计是将控件放在侧边栏中，并将结果显示在主面板中\"></p>\n<h3 id=\"6-2-3-多行\"><a href=\"#6-2-3-多行\" class=\"headerlink\" title=\"6.2.3 多行\"></a>6.2.3 多行</h3><p>在幕后，<a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarLayout()</a>建立在灵活的多行布局之上，您可以直接使用它来创建更具视觉复杂性的应用程序。像往常一样，您从<code>fluidPage()</code>开始。然后，您使用<a href=\"https://rdrr.io/pkg/shiny/man/fluidPage.html\">fluidRow()</a>创建行，使用<a href=\"https://rdrr.io/pkg/shiny/man/column.html\">column()</a>创建列。以下模板生成图6.4所示的结构：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fluidRow<span class=\"punctuation\">(</span></span><br><span class=\"line\">    column<span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    column<span class=\"punctuation\">(</span><span class=\"number\">8</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  fluidRow<span class=\"punctuation\">(</span></span><br><span class=\"line\">    column<span class=\"punctuation\">(</span><span class=\"number\">6</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    column<span class=\"punctuation\">(</span><span class=\"number\">6</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      ...</span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/15ea13e6dd0ba26014225718b5541abb983e0a45/7b30e/diagrams/action-layout/multirow.png\" alt=\"图6.4 简单多行应用程序的基础结构\"></p>\n<p>每一行由12列组成，<code>column()</code> 的第一个参数给出了要占用的列数。12列布局为您提供极大的灵活性，因为您可以轻松创建2、3或4列布局，或使用窄列创建间隔。您可以在第4.4节中看到这种布局的示例。</p>\n<p>如果你想了解更多关于使用网格系统进行设计的知识，我强烈推荐由约瑟夫·穆勒-布罗克曼撰写的关于这个主题的经典文本：<a href=\"https://www.amazon.com/dp/3721201450\">《平面设计中的网格系统》</a>。</p>\n<h3 id=\"6-2-4-练习\"><a href=\"#6-2-4-练习\" class=\"headerlink\" title=\"6.2.4 练习\"></a>6.2.4 练习</h3><p><strong>6.2.4.1</strong> 阅读 <a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarLayout()</a> 的文档，确定侧边栏和主面板的宽度（以列为单位）。你能使用 fluidRow() 和 column() 重新创建它的外观吗？你缺少什么？</p>\n<p><strong>6.2.4.2</strong> 修改中心极限定理应用程序，将侧边栏放在右侧而不是左侧。</p>\n<p><strong>6.2.4.3</strong> 创建一个包含两个图的应用程序，每个图占一半宽度。将控件放在图下方的全宽容器中。</p>\n<h2 id=\"6-3-多页布局\"><a href=\"#6-3-多页布局\" class=\"headerlink\" title=\"6.3 多页布局\"></a>6.3 多页布局</h2><p>随着应用程序复杂性的增加，可能无法将所有内容都放在一个页面上。在本节中，您将学习 <a href=\"https://rdrr.io/pkg/shiny/man/tabPanel.html\">tabPanel()</a> 的各种用途，以创建多个页面的假象。这是一种假象，因为您仍然只有一个应用程序和一个基础 HTML 文件，但现在它被分解成多个部分，一次只能看到一个部分。</p>\n<p>多页应用程序与模块搭配得特别好，你将在第19章了解模块。模块允许你以与划分用户界面相同的方式划分server函数，创建仅通过定义良好的连接进行交互的独立组件。</p>\n<h3 id=\"6-3-1-选项卡集\"><a href=\"#6-3-1-选项卡集\" class=\"headerlink\" title=\"6.3.1 选项卡集\"></a>6.3.1 选项卡集</h3><p>将页面分解成块的简单方法是使用 <a href=\"https://rdrr.io/pkg/shiny/man/tabsetPanel.html\">tabsetPanel()</a> 及其亲密朋友 <code>tabPanel()</code>。正如您在下面的代码中看到的，<code>tabsetPanel()</code> 为任意数量的 <code>tabPanels()</code> 创建一个容器，而 <code>tabPanels()</code> 反过来又包含任何其他 HTML 组件。图 6.5 显示了一个简单的例子。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Import data&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;file&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Data&quot;</span><span class=\"punctuation\">,</span> buttonLabel <span class=\"operator\">=</span> <span class=\"string\">&quot;Upload...&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;delim&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Delimiter (leave blank to guess)&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;skip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows to skip&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;rows&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows to preview&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Set parameters&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;Visualise results&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/9c03ba6941047ea3face093a70f248673f4c824a/98580/demos/action-layout/tabset.png\" alt=\"图6.5 tabsetPanel()允许用户选择单个tabPanel()进行查看\"></p>\n<p>如果您想知道用户选择了哪个选项卡，您可以将 <code>id</code> 参数提供给 <code>tabsetPanel()</code> 并将它设为输入。图6.6显示了这一点。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">        id <span class=\"operator\">=</span> <span class=\"string\">&quot;tabset&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;one&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;two&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;three&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>panel <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    paste<span class=\"punctuation\">(</span><span class=\"string\">&quot;Current panel: &quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>tabset<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/a856fa6a960d4e7e7b1cd2755c91934853e0e500/f7fbe/demos/action-layout/tabset-input-1.png\" alt=\"图6.6 当您使用id参数时，tabset成为输入。这允许您根据当前可见的选项卡使您的应用程序表现不同。\"></p>\n<p>注意，<code>tabsetPanel()</code>可以在应用程序中的任何地方使用；如果需要，将选项卡集嵌套在其他组件（包括选项卡集！）中是完全可以的。</p>\n<h3 id=\"6-3-2-导航列表和导航栏\"><a href=\"#6-3-2-导航列表和导航栏\" class=\"headerlink\" title=\"6.3.2 导航列表和导航栏\"></a>6.3.2 导航列表和导航栏</h3><p>因为标签是水平显示的，所以你可以使用的标签数量有一个基本的限制，特别是如果它们的标题很长。<a href=\"https://rdrr.io/pkg/shiny/man/navbarPage.html\">navbarPage()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/navbarPage.html\">navbarMenu()</a>提供了两种替代布局，让你使用更多标签和更长的标题。</p>\n<p><a href=\"https://rdrr.io/pkg/shiny/man/navlistPanel.html\">navlistPanel()</a>类似于<a href=\"https://rdrr.io/pkg/shiny/man/tabsetPanel.html\">tabsetPanel()</a>，但不会水平显示标签标题，而是在侧边栏中垂直显示。它还允许您使用纯字符串添加标题，如下面的代码所示，生成图6.7。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  navlistPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    id <span class=\"operator\">=</span> <span class=\"string\">&quot;tabset&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;Heading 1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel one contents&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;Heading 2&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel two contents&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel three contents&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/56785160c5b2c58ecebd5c89454f41ca8ba01132/3504e/demos/action-layout/navlistpanel.png\" alt=\"图6.7 navlistPanel()垂直显示选项卡标题，而不是水平显示\"></p>\n<p>另一种方法是使用<code>navbarPage()</code>：它仍然产生水平选项卡标题，但您可以使用<code>navbarMenu()</code>添加下拉菜单以实现额外的层次结构。图6.8显示了一个简单的示例。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> navbarPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  <span class=\"string\">&quot;Page title&quot;</span><span class=\"punctuation\">,</span>   </span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;one&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;two&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;three&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  navbarMenu<span class=\"punctuation\">(</span><span class=\"string\">&quot;subpanels&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 4a&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;four-a&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 4b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;four-b&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel 4c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;four-c&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/a2d6dc2e78a21f32db77925f1d28122e6288a44d/3c1ec/demos/action-layout/navbarpage.png\" alt=\"图6.8 navbarPage()在页面顶部生成一个水平导航栏\"></p>\n<p>这些布局为你提供了相当大的能力来创建丰富而令人满意的应用程序。要更进一步，你需要更多地了解底层设计系统。</p>\n<h2 id=\"6-4-引导程序（Bootstrap）\"><a href=\"#6-4-引导程序（Bootstrap）\" class=\"headerlink\" title=\"6.4 引导程序（Bootstrap）\"></a>6.4 引导程序（Bootstrap）</h2><p>要继续你的应用程序定制之旅，你需要更多地了解 Shiny 所使用的 <a href=\"https://getbootstrap.com/\">Bootstrap</a> 框架。Bootstrap 是一系列 HTML 约定、CSS 样式和 JS 代码片段的集合，打包成一种方便的形式。Bootstrap 最初是 Twitter 开发的一个框架，在过去的 10 年里，它已经发展成为网络上最流行的 CSS 框架之一。Bootstrap 在 R 中也很受欢迎——你无疑已经看到过许多由 <a href=\"https://pkgs.rstudio.com/rmarkdown/reference/html_document.html\">rmarkdown::html_document()</a> 生成的文档，并使用了许多由 <a href=\"http://pkgdown.r-lib.org/\">pkgdown</a> 制作的包网站，这两个网站也都使用了 Bootstrap。</p>\n<p>作为 Shiny 开发人员，您不需要过多考虑 Bootstrap，因为 Shiny 会自动为您生成与 Bootstrap 兼容的 HTML。但是知道 Bootstrap 存在是件好事，因为这样：</p>\n<ul>\n<li><p>你可以使用<a href=\"https://rstudio.github.io/bslib/reference/bs_theme.html\">bslib::bs_theme()</a>来定制代码的视觉外观，第6.5节。</p>\n</li>\n<li><p>你可以使用<code>class</code>参数来使用Bootstrap class名定制一些布局、输入和输出，正如你在第2.2.7节中所看到的。</p>\n</li>\n<li><p>你可以自己编写函数来生成 Shiny 不提供的 Bootstrap 组件，如<a href=\"https://rstudio.github.io/bslib/articles/theming.html#utility-classes\">Utility classes</a>中所述。</p>\n</li>\n</ul>\n<p>也可以使用完全不同的CSS框架。许多现有的R包通过包装流行的Bootstrap替代品来简化这一过程：</p>\n<ul>\n<li><p><a href=\"https://appsilon.com/\">Appsilon</a> 构建在 <a href=\"https://fomantic-ui.com/\">formantic UI</a> 之上的<a href=\"https://appsilon.github.io/shiny.semantic/\">shiny.semantic</a>。</p>\n</li>\n<li><p><a href=\"https://rinterface.com/\">RInterface</a> 基于 <a href=\"https://framework7.io/\">framework 7</a>  构建的  <a href=\"https://github.com/RinteRface/shinyMobile\">shinyMobile</a> ，专为移动应用程序而设计。</p>\n</li>\n<li><p>由 <a href=\"https://github.com/ericrayanderson\">Eric Anderson</a> 开发的 <a href=\"https://ericrayanderson.github.io/shinymaterial/\">shinymaterial</a>，建立在谷歌的 <a href=\"https://material.io/design\">Material</a> 设计框架之上。</p>\n</li>\n<li><p><a href=\"https://rstudio.github.io/shinydashboard/\">shinydashboard</a> 也是由RStudio开发的，它提供了一个用于创建仪表板的布局系统。</p>\n</li>\n</ul>\n<p>你可以在 <a href=\"https://github.com/nanxstats/awesome-shiny-extensions\">https://github.com/nanxstats/awesome-shiny-extensions</a> 上找到一个更完整、维护更活跃的列表。</p>\n<h2 id=\"6-5-主题\"><a href=\"#6-5-主题\" class=\"headerlink\" title=\"6.5 主题\"></a>6.5 主题</h2><p>Bootstrap在R社区中无处不在，很容易让人产生审美疲劳：过了一段时间，每个Shiny应用程序和Rmd看起来都差不多。解决方案是使用<a href=\"https://rstudio.github.io/bslib\">bslib</a>包进行主题化。bslib是一个相对较新的包，允许您覆盖许多Bootstrap默认值，以创建独特的外观。在我写这篇文章的时候，bslib主要适用于Shiny，但正在努力将其增强的主题化功能引入RMarkdown、pkgdown等。</p>\n<p>如果你正在为公司开发应用程序，我强烈建议你花点时间在主题化上——将你的应用程序主题化，以匹配你的企业风格指南，这是一种让你看起来很好的简单方法。</p>\n<h3 id=\"6-5-1-开始\"><a href=\"#6-5-1-开始\" class=\"headerlink\" title=\"6.5.1 开始\"></a>6.5.1 开始</h3><p>使用 <a href=\"https://rstudio.github.io/bslib/reference/bs_theme.html\">bslib::bs_theme()</a> 创建一个主题，然后使用页面布局函数的<code>theme</code>参数将其应用于应用程序：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  theme <span class=\"operator\">=</span> bslib<span class=\"operator\">::</span>bs_theme<span class=\"punctuation\">(</span>...<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果不特别指定，Shiny将使用其自创建以来基本上使用的经典Bootstrap v3主题。默认情况下，<code>bslib::bs_theme()</code>将使用 Bootstrap v4。如果您只使用内置组件，使用Bootstrap v4替代v3不会造成问题。如果您使用了自定义HTML，它可能会造成问题，因此您可以通过设置<code>version = 3</code>来强制它保持v3。</p>\n<h3 id=\"6-5-2-Shiny主题\"><a href=\"#6-5-2-Shiny主题\" class=\"headerlink\" title=\"6.5.2 Shiny主题\"></a>6.5.2 Shiny主题</h3><p>更改应用程序整体外观的最简单方法是使用<code>bootswatch</code>参数对<code>bslib::bs_theme()</code>选择一个预先制作的<code>bootswatch</code>主题。图6.9显示了以下代码的结果，切换其他主题为“darkly”。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  theme <span class=\"operator\">=</span> bslib<span class=\"operator\">::</span>bs_theme<span class=\"punctuation\">(</span>bootswatch <span class=\"operator\">=</span> <span class=\"string\">&quot;darkly&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;txt&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Text input:&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;text here&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Slider input:&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> <span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      h1<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;Theme: darkly&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      h2<span class=\"punctuation\">(</span><span class=\"string\">&quot;Header 2&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      p<span class=\"punctuation\">(</span><span class=\"string\">&quot;Some text&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/6850c18bfcfd5671f12f1f638c2c76b4ccb5b11d/07f6a/demos/action-layout/theme-flatly.png\" alt=\"图6.9 相同的app采用了用四个bootswatch主题风格：darkly、flatly、sandstone和united\"></p>\n<p>此外，你可以利用<code>bs_theme()</code>的其他参数创建自己的主题，如 <code>bg</code> （背景颜色），<code>fg</code>（前景色）和 <code>base_font</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme <span class=\"operator\">&lt;-</span> bslib<span class=\"operator\">::</span>bs_theme<span class=\"punctuation\">(</span></span><br><span class=\"line\">  bg <span class=\"operator\">=</span> <span class=\"string\">&quot;#0b3d91&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  fg <span class=\"operator\">=</span> <span class=\"string\">&quot;white&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  base_font <span class=\"operator\">=</span> <span class=\"string\">&quot;Source Sans Pro&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>一种预览和自定义主题的简单方法是使用<code>bslib::bs_theme_preview(theme)</code>。这将打开一个Shiny应用程序，展示该主题在应用于许多标准控件时的外观，同时还为你提供交互式控件，用于自定义最重要的参数。</p>\n<h3 id=\"6-5-3-图表主题\"><a href=\"#6-5-3-图表主题\" class=\"headerlink\" title=\"6.5.3 图表主题\"></a>6.5.3 图表主题</h3><p>如果你已经对你的应用程序样式进行了大量自定义，你可能还想自定义图表以匹配整体风格。幸运的是，这非常简单，多亏了<a href=\"https://rstudio.github.io/thematic/\">thematic</a>包，它可以自动对ggplot2、lattice和基础图表进行主题化。只需在server函数中调用<code>thematic_shiny()</code>。这将自动确定你的应用程序主题的所有设置，如图6.10所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  theme <span class=\"operator\">=</span> bslib<span class=\"operator\">::</span>bs_theme<span class=\"punctuation\">(</span>bootswatch <span class=\"operator\">=</span> <span class=\"string\">&quot;darkly&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  titlePanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;A themed plot&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  thematic<span class=\"operator\">::</span>thematic_shiny<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>wt<span class=\"punctuation\">,</span> mpg<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      geom_smooth<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/0e7243ec6ca6821445c04bff6488fcf612c3fe88/e378c/demos/action-layout/thematic.png\" alt=\"图6.10 使用thematic::thematic_shiny()确保ggplot2自动匹配应用程序主题\"></p>\n<h3 id=\"6-5-4-练习\"><a href=\"#6-5-4-练习\" class=\"headerlink\" title=\"6.5.4 练习\"></a>6.5.4 练习</h3><p><strong>6.4.5.1</strong> 使用<code>bslib::bs_theme_preview()</code>制作你能想到的最丑的主题。</p>\n<h2 id=\"6-6-面罩之下\"><a href=\"#6-6-面罩之下\" class=\"headerlink\" title=\"6.6 面罩之下\"></a>6.6 面罩之下</h2><p>Shiny的设计是为了让R用户不需要了解HTML的细节。但是，如果你知道一些HTML和CSS，你仍然可以进一步定制Shiny。不幸的是，教授HTML和CSS不在本书的范围内，但MDN的<a href=\"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML</a>和<a href=\"https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS</a>基础教程是一个很好的起点。</p>\n<p>最重要的是要知道，所有输入、输出和布局函数背后都没有魔法：它们只是生成HTML。您可以通过在控制台中直接执行UI函数来查看HTML：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your name?&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-group shiny-input-container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span>What&#x27;s your name?<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form-control&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，这是 <code>&lt;body&gt;</code> 标签的内容；Shiny 的其他部分负责生成 <code>&lt;head&gt;</code>。如果你想包含额外的 CSS 或 JS 依赖项，你需要学习 <a href=\"https://rdrr.io/pkg/htmltools/man/htmlDependency.html\">htmltools::htmlDependency()</a>。两个好的起点是 <a href=\"https://blog.r-hub.io/2020/08/25/js-r/#web-dependency-management\">https://blog.r-hub.io/2020/08/25/js-r/#web-dependency-management</a> 和 <a href=\"https://unleash-shiny.rinterface.com/htmltools-dependencies.html\">https://unleash-shiny.rinterface.com/htmltools-dependencies.html</a>。</p>\n<p>可以将自己的 HTML 添加到 <code>ui</code>。一种方法是通过 <a href=\"https://rdrr.io/pkg/htmltools/man/HTML.html\">HTML()</a> 函数包含文本 HTML。在下面的例子中，我使用“原始字符常量”，<code>r&quot;()&quot;</code>，以便更容易在字符串中包含引号：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  HTML<span class=\"punctuation\">(</span><span class=\"string\">r&quot;(</span></span><br><span class=\"line\"><span class=\"string\">    &lt;h1&gt;This is a heading&lt;/h1&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;p class=&quot;my-class&quot;&gt;This is some text!&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;First bullet&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;li&gt;Second bullet&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">  )&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果您是 HTML&#x2F;CSS 专家，您可能想知道是否可以完全跳过 <code>fluidPage()</code> 并提供原始 HTML。有关更多详细信息，请参阅“<a href=\"https://shiny.rstudio.com/articles/html-ui.html\">使用 HTML 构建整个 UI</a>”。</p>\n<p>或者，您可以使用Shiny提供的HTML辅助函数。对于最重要的元素，如<code>h1()</code>和<code>p()</code>，有常规函数，所有其他元素都可以通过其他标签辅助函数访问。命名参数成为属性，未命名参数成为子元素，因此我们可以将上面的HTML重新创建为：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  h1<span class=\"punctuation\">(</span><span class=\"string\">&quot;This is a heading&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  p<span class=\"punctuation\">(</span><span class=\"string\">&quot;This is some text&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">class</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;my-class&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tags<span class=\"operator\">$</span>ul<span class=\"punctuation\">(</span></span><br><span class=\"line\">    tags<span class=\"operator\">$</span>li<span class=\"punctuation\">(</span><span class=\"string\">&quot;First bullet&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    tags<span class=\"operator\">$</span>li<span class=\"punctuation\">(</span><span class=\"string\">&quot;Second bullet&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>使用代码生成 HTML 的一个优点是，你可以将现有的 Shiny 组件交织到自定义结构中。例如，以下代码生成了一段包含两个输出的文本段落，其中一个为粗体：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags<span class=\"operator\">$</span>p<span class=\"punctuation\">(</span></span><br><span class=\"line\">  <span class=\"string\">&quot;You made &quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  tags<span class=\"operator\">$</span>b<span class=\"punctuation\">(</span><span class=\"string\">&quot;$&quot;</span><span class=\"punctuation\">,</span> textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;amount&quot;</span><span class=\"punctuation\">,</span> inline <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot; in the last &quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;days&quot;</span><span class=\"punctuation\">,</span> inline <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot; days &quot;</span> </span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意使用<code>inline = TRUE</code>；<code>textOutput()</code>默认是生成一个完整的段落。</p>\n<p>要了解更多关于使用HTML、CSS和JavaScript制作引人注目的用户界面的知识，我强烈推荐David Granjon的<a href=\"https://unleash-shiny.rinterface.com/index.html\">《Shiny的杰出用户界面》</a>。</p>\n<h2 id=\"6-7-总结\"><a href=\"#6-7-总结\" class=\"headerlink\" title=\"6.7 总结\"></a>6.7 总结</h2><p>本章为你提供了制作复杂而吸引人的Shiny应用程序所需的工具。你已经学习了Shiny函数，这些函数允许你布局单页和多页应用程序（如<code>fluidPage()</code>和<code>tabsetPanel()</code>），以及如何使用主题定制整体视觉外观。你还学到了一些关于底层的东西：你知道Shiny使用Bootstrap，并且输入和输出函数只返回HTML，你也可以自己创建自己的HTML。</p>\n<p>在下一章中，您将了解有关应用程序中另一个重要视觉组件的更多信息：图形。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]}