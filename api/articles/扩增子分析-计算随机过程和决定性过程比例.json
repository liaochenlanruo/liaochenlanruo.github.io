{"title":"扩增子分析--计算随机过程和决定性过程比例","slug":"扩增子分析-计算随机过程和决定性过程比例","date":"2021-03-25T08:42:06.000Z","updated":"2022-01-08T02:16:28.447Z","comments":true,"path":"api/articles/扩增子分析-计算随机过程和决定性过程比例.json","excerpt":"确定性过程（deterministic processes）和随机性过程（stochastic processes) 是两个影响微生物群落结构系统发育组装的重要过程，本文介绍计算二者所占比例的方法。","covers":null,"content":"<p>确定性过程（deterministic processes）和随机性过程（stochastic processes) 是两个影响微生物群落结构系统发育组装的重要过程，本文介绍计算二者所占比例的方法。</p>\n<span id=\"more\"></span>\n<h1 id=\"font-colorff0000-1-软件font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-1-软件font\"></a> <font color=#FF0000 >1. 软件</font></h1>\n<ul>\n<li>NST</li>\n<li>iCAMP</li>\n<li>ape 用于读取进化树文件</li>\n<li>picante</li>\n</ul>\n<h1 id=\"font-colorff0000-2-文件准备font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-2-文件准备font\"></a> <font color=#FF0000 >2. 文件准备</font></h1>\n<h2 id=\"font-colorff0000-21-feature-tablefont\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-21-feature-tablefont\"></a> <font color=#FF0000 >2.1 Feature Table</font></h2>\n<p>行为 OTUs/ASVs，列为样本。</p>\n<table>\n<thead>\n<tr>\n<th>TaxonID</th>\n<th>Sample 1</th>\n<th>Sample 2</th>\n<th>Sample 3</th>\n<th>Sample 4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OTU1</td>\n<td>232.0</td>\n<td>209.0</td>\n<td>349.0</td>\n<td>256.0</td>\n</tr>\n<tr>\n<td>OTU2</td>\n<td>75.0</td>\n<td>35.0</td>\n<td>44.0</td>\n<td>0.0</td>\n</tr>\n<tr>\n<td>OTU3</td>\n<td>237.0</td>\n<td>224.0</td>\n<td>291.0</td>\n<td>353.0</td>\n</tr>\n<tr>\n<td>OTU4</td>\n<td>371.0</td>\n<td>80.0</td>\n<td>319.0</td>\n<td>345.0</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"font-colorff0000-22-group-filefont\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-22-group-filefont\"></a> <font color=#FF0000 >2.2 Group File</font></h2>\n<p>该文件描述了所有样本的分组情况，如实验组和对照组，或者其他分组。</p>\n<table>\n<thead>\n<tr>\n<th>Sample_ID</th>\n<th>Group</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Sample 1</td>\n<td>Group x</td>\n</tr>\n<tr>\n<td>Sample 2</td>\n<td>Group x</td>\n</tr>\n<tr>\n<td>Sample 3</td>\n<td>Group y</td>\n</tr>\n<tr>\n<td>Sample 4</td>\n<td>Group y</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"font-colorff0000-23-tree-filefont\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-23-tree-filefont\"></a> <font color=#FF0000 >2.3 Tree File</font></h2>\n<p>包含 Feature table 中所有 OTUs/ASVs 的系统发育树文件，理想条件下仅包含 Feature table 中的 OTUs/ASVs，不过大部分情况下还会包含数据库中的一些物种，在随后的分析中需要去除多余的物种（后续会讲到）。</p>\n<h1 id=\"font-colorff0000-3-开始分析font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-3-开始分析font\"></a> <font color=#FF0000 >3. 开始分析</font></h1>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\"><span class=\"token comment\">########################</span>\n<span class=\"token comment\">#!/usr/bin/env R</span>\n<span class=\"token comment\"># version 20200919</span>\n<span class=\"token comment\"># Step 1. 文件、路径和参数</span>\n\n<span class=\"token comment\"># 指定包含输入文件的目录路径，注意区分Windows和Linux的路径写法</span>\nwd<span class=\"token operator\">=</span><span class=\"token string\">\"/mnt/e/Researches/lujia16S/Analysis_20200907/exported-feature-table_2k_abund22/Raup_Crick\"</span>\n\n<span class=\"token comment\"># 指定结果文件的保存路径</span>\nsave.wd<span class=\"token operator\">=</span><span class=\"token string\">\"/mnt/e/Researches/lujia16S/Analysis_20200907/exported-feature-table_2k_abund22/Raup_Crick/Result2\"</span>\n\n<span class=\"token comment\"># 创建文件保存路径</span>\ndir.create<span class=\"token punctuation\">(</span>save.wd<span class=\"token punctuation\">,</span> recursive <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 指定Feature table（OTU表）的文件名</span>\ncom.file<span class=\"token operator\">=</span><span class=\"token string\">\"feature-table.tsv\"</span>\n\n<span class=\"token comment\"># 指定样本分组文件，每行为一个样本</span>\ngroup.file<span class=\"token operator\">=</span><span class=\"token string\">\"treatment.txt\"</span>\n\n<span class=\"token comment\"># 指定NWK格式的系统发育树文件</span>\ntree.file<span class=\"token operator\">=</span><span class=\"token string\">\"tree.nwk\"</span>\n\n<span class=\"token comment\"># 设置并行运算使用的线程数</span>\nnworker<span class=\"token operator\">=</span><span class=\"token number\">8</span>\n\n<span class=\"token comment\"># randomization time for null model analysis. 真实分析的时候一般设置为1000，如果测试的话可以设20</span>\nrand.time<span class=\"token operator\">=</span><span class=\"token number\">999</span>\n\n<span class=\"token comment\"># 输出文件的前缀名，随便设置</span>\nprefix<span class=\"token operator\">=</span><span class=\"token string\">\"Lujia\"</span>\n\n<span class=\"token comment\"># Step 2. 加载R包</span>\n\n<span class=\"token comment\"># 确保已经安装过所需的R包</span>\n<span class=\"token comment\">#install.packages(\"NST\") </span>\n\nlibrary<span class=\"token punctuation\">(</span>ape<span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>iCAMP<span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>NST<span class=\"token punctuation\">)</span> <span class=\"token comment\"># need to be NST >=3.0.3</span>\nlibrary<span class=\"token punctuation\">(</span>picante<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 3. 加载数据并匹配IDs</span>\n\nsetwd<span class=\"token punctuation\">(</span>wd<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读入Feature Table，注意自己文件的列与列之间的分隔符是什么，制表符用sep = \"\\t\"，逗号用sep = \",\"</span>\ncomm<span class=\"token operator\">=</span>t<span class=\"token punctuation\">(</span>read.table<span class=\"token punctuation\">(</span>com.file<span class=\"token punctuation\">,</span>header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> row.names <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> as.is <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> stringsAsFactors <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读入分组文件，同样注意设置分隔符</span>\ngroup<span class=\"token operator\">=</span>read.table<span class=\"token punctuation\">(</span>group.file<span class=\"token punctuation\">,</span> header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> row.names <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> as.is <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> stringsAsFactors <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#如果tree中的OTUs和Feature Table中的OTUs一一对应，可以直接用下面一个命令读入tree（注意去掉###），否则的话则运行下面LHL加入的3行命令</span>\n<span class=\"token comment\">###tree=ape::read.tree(file = tree.file) # if you have tree</span>\n\n<span class=\"token comment\"># 以下3行是LHL加入的</span>\nphy<span class=\"token operator\">&lt;-</span>read.tree<span class=\"token punctuation\">(</span>tree.file<span class=\"token punctuation\">)</span><span class=\"token comment\"># 读入树文件</span>\nprune_tree<span class=\"token operator\">&lt;-</span>prune.sample<span class=\"token punctuation\">(</span>comm<span class=\"token punctuation\">,</span>phy<span class=\"token punctuation\">)</span><span class=\"token comment\"># 使树文件和OTU表文件一一对齐</span>\ntree<span class=\"token operator\">=</span>prune_tree <span class=\"token comment\"># 此刻的Tree干净了，可用于后续分析而不会报错</span>\n\n<span class=\"token comment\"># 以下命令检测Feature Table中的样本名称是否与分组文件中的样本名一一对应</span>\nsamp.ck<span class=\"token operator\">=</span>NST<span class=\"token operator\">::</span>match.name<span class=\"token punctuation\">(</span>rn.list<span class=\"token operator\">=</span>list<span class=\"token punctuation\">(</span>comm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">,</span>group<span class=\"token operator\">=</span>group<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncomm<span class=\"token operator\">=</span>samp.ck<span class=\"token operator\">$</span>comm\ncomm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>colSums<span class=\"token punctuation\">(</span>comm<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">]</span>\ngroup<span class=\"token operator\">=</span>samp.ck<span class=\"token operator\">$</span>group\n\n<span class=\"token comment\"># 以下命令检测Feature Table中的OTUs名称是否与Tree中的OTUs名一一对应</span>\ntax.ck<span class=\"token operator\">=</span>NST<span class=\"token operator\">::</span>match.name<span class=\"token punctuation\">(</span>cn.list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">(</span>comm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>tree.list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">(</span>tree<span class=\"token operator\">=</span>tree<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># if you have tree</span>\ncomm<span class=\"token operator\">=</span>tax.ck<span class=\"token operator\">$</span>comm\ntree<span class=\"token operator\">=</span>tax.ck<span class=\"token operator\">$</span>tree\n\n<span class=\"token comment\"># Step 4. Grouping way and metacommunity seting</span>\n\n<span class=\"token comment\"># 选择分组，如果拥有多种分组方式，每次运行时选择其中的一组。此处选择的时分组文件中的第二列</span>\ngroupi<span class=\"token operator\">=</span>group<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 重新定义输出文件的前缀，以分组的名称来命名，此处以分组文件第二列的表头“Group”为前缀</span>\nprefixi<span class=\"token operator\">=</span>paste0<span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">,</span><span class=\"token string\">\".Group\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># if treatment and control are from different metacommunities, you may set meta.groupi=groupi，默认为NULL</span>\n<span class=\"token comment\">#meta.groupi=NULL</span>\nmeta.groupi<span class=\"token operator\">=</span>groupi\n\n<span class=\"token comment\"># Step 5. taxonomic NST</span>\n<span class=\"token comment\"># Step 5.1 calculate tNST</span>\n\n<span class=\"token comment\"># 指定计算距离矩阵的方法，\"jaccard\" and \"bray\" are preferred.</span>\ndist.method<span class=\"token operator\">=</span><span class=\"token string\">\"bray\"</span>\n\n<span class=\"token comment\"># 记录运行时间</span>\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 进入输出目录</span>\nsetwd<span class=\"token punctuation\">(</span>save.wd<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 计算tNST</span>\ntnst<span class=\"token operator\">=</span>tNST<span class=\"token punctuation\">(</span>comm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">,</span> group<span class=\"token operator\">=</span>groupi<span class=\"token punctuation\">,</span> meta.group<span class=\"token operator\">=</span>meta.groupi<span class=\"token punctuation\">,</span> meta.com<span class=\"token operator\">=</span><span class=\"token keyword\">NULL</span><span class=\"token punctuation\">,</span> dist.method<span class=\"token operator\">=</span>dist.method<span class=\"token punctuation\">,</span> abundance.weighted<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> rand<span class=\"token operator\">=</span>rand.time<span class=\"token punctuation\">,</span> output.rand<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> nworker<span class=\"token operator\">=</span>nworker<span class=\"token punctuation\">,</span> LB<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> null.model<span class=\"token operator\">=</span><span class=\"token string\">\"PF\"</span><span class=\"token punctuation\">,</span> between.group<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> SES<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> RC<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 以R data格式保存tNST的输出 </span>\nsave<span class=\"token punctuation\">(</span>tnst<span class=\"token punctuation\">,</span> file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span> <span class=\"token string\">\".tNST.rda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 保存其他tNST结果到多个文件中</span>\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.grp<span class=\"token punctuation\">,</span> file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span> <span class=\"token string\">\".tNST.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.pair.grp<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.pairwise.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.pair<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.pairwise.index.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.between<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.between.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.pair.between<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.pairwise.between.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nformat<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 5.2 Bootstrapping test</span>\n\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 计算Bootstrapping</span>\ntnstbt<span class=\"token operator\">=</span>nst.boot<span class=\"token punctuation\">(</span>nst.result<span class=\"token operator\">=</span>tnst<span class=\"token punctuation\">,</span> group<span class=\"token operator\">=</span>groupi<span class=\"token punctuation\">,</span> rand<span class=\"token operator\">=</span>rand.time<span class=\"token punctuation\">,</span> trace<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> two.tail<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> out.detail<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> between.group<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> nworker<span class=\"token operator\">=</span>nworker<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 保存结果</span>\nsave<span class=\"token punctuation\">(</span>tnstbt<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.boot.rda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 保存结果</span>\nwrite.table<span class=\"token punctuation\">(</span>tnstbt<span class=\"token operator\">$</span>summary<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.boot.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\nwrite.table<span class=\"token punctuation\">(</span>tnstbt<span class=\"token operator\">$</span>compare<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.boot.compare.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 5.3 PERMANOVA</span>\n\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ntnstpaov<span class=\"token operator\">=</span>nst.panova<span class=\"token punctuation\">(</span>nst.result<span class=\"token operator\">=</span>tnst<span class=\"token punctuation\">,</span> group <span class=\"token operator\">=</span> groupi<span class=\"token punctuation\">,</span> rand <span class=\"token operator\">=</span> rand.time<span class=\"token punctuation\">,</span> trace <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>tnstpaov<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.PERMANOVA.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Steo 6. phylogenetic NST</span>\n\n<span class=\"token comment\"># Step 6.1 phylogentic distance matrix # use bigmemory for big dataset</span>\n\nwd.pd<span class=\"token operator\">=</span>paste0<span class=\"token punctuation\">(</span>save.wd<span class=\"token punctuation\">,</span><span class=\"token string\">\"/pdbig\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dir.exists<span class=\"token punctuation\">(</span>wd.pd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>dir.create<span class=\"token punctuation\">(</span>wd.pd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n\nsetwd<span class=\"token punctuation\">(</span>wd.pd<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file.exists<span class=\"token punctuation\">(</span><span class=\"token string\">\"pd.desc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\"># if already done before, directly use it.</span>\n  pdbig<span class=\"token operator\">=</span>list<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  pdbig<span class=\"token operator\">$</span>tip.label<span class=\"token operator\">=</span>read.table<span class=\"token punctuation\">(</span><span class=\"token string\">\"pd.taxon.name.csv\"</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> row.names <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> stringsAsFactors <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> as.is <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  pdbig<span class=\"token operator\">$</span>pd.wd<span class=\"token operator\">=</span>wd.pd\n  pdbig<span class=\"token operator\">$</span>pd.file<span class=\"token operator\">=</span><span class=\"token string\">\"pd.desc\"</span>\n  pdbig<span class=\"token operator\">$</span>pd.name.file<span class=\"token operator\">=</span><span class=\"token string\">\"pd.taxon.name.csv\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n  pdbig<span class=\"token operator\">=</span>iCAMP<span class=\"token operator\">::</span>pdist.big<span class=\"token punctuation\">(</span>tree <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">,</span> wd <span class=\"token operator\">=</span> wd.pd<span class=\"token punctuation\">,</span> nworker <span class=\"token operator\">=</span> nworker<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Step 6.2 calculate pNST</span>\n\n<span class=\"token comment\"># to count time cost</span>\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsetwd<span class=\"token punctuation\">(</span>save.wd<span class=\"token punctuation\">)</span>\n\npnst<span class=\"token operator\">=</span>NST<span class=\"token operator\">::</span>pNST<span class=\"token punctuation\">(</span>comm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">,</span> pd.desc<span class=\"token operator\">=</span>pdbig<span class=\"token operator\">$</span>pd.file<span class=\"token punctuation\">,</span> pd.wd<span class=\"token operator\">=</span>pdbig<span class=\"token operator\">$</span>pd.wd<span class=\"token punctuation\">,</span>\npd.spname<span class=\"token operator\">=</span>pdbig<span class=\"token operator\">$</span>tip.label<span class=\"token punctuation\">,</span> group<span class=\"token operator\">=</span>groupi<span class=\"token punctuation\">,</span> meta.group<span class=\"token operator\">=</span>meta.groupi<span class=\"token punctuation\">,</span> abundance.weighted<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> rand<span class=\"token operator\">=</span>rand.time<span class=\"token punctuation\">,</span> output.rand<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> taxo.null.model<span class=\"token operator\">=</span><span class=\"token keyword\">NULL</span><span class=\"token punctuation\">,</span> phylo.shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> exclude.conspecifics<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> nworker<span class=\"token operator\">=</span>nworker<span class=\"token punctuation\">,</span> between.group<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> SES<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> RC<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># save pNST output in R data format</span>\nsave<span class=\"token punctuation\">(</span>pnst<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.rda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.grp<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.pair.grp<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.pairwise.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.pair<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.pairwise.index.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.between<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.between.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.pair.between<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.pairwise.between.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nformat<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 6.3 Bootstrapping test</span>\n\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npnstbt<span class=\"token operator\">=</span>nst.boot<span class=\"token punctuation\">(</span>nst.result<span class=\"token operator\">=</span>pnst<span class=\"token punctuation\">,</span> group<span class=\"token operator\">=</span>groupi<span class=\"token punctuation\">,</span> rand<span class=\"token operator\">=</span>rand.time<span class=\"token punctuation\">,</span> trace<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> two.tail<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> out.detail<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> between.group<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> nworker<span class=\"token operator\">=</span>nworker<span class=\"token punctuation\">)</span>\n\nsave<span class=\"token punctuation\">(</span>pnstbt<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.boot.rda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnstbt<span class=\"token operator\">$</span>summary<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.boot.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnstbt<span class=\"token operator\">$</span>compare<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.boot.compare.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 6.4 PERMANOVA</span>\n\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npnstpaov<span class=\"token operator\">=</span>nst.panova<span class=\"token punctuation\">(</span>nst.result<span class=\"token operator\">=</span>pnst<span class=\"token punctuation\">,</span> group <span class=\"token operator\">=</span> groupi<span class=\"token punctuation\">,</span> rand <span class=\"token operator\">=</span> rand.time<span class=\"token punctuation\">,</span> trace <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnstpaov<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.PERMANOVA.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"font-colorff0000-4-结果解读font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-4-结果解读font\"></a> <font color=#FF0000 >4. 结果解读</font></h1>\n<h2 id=\"font-colorff0000-41-确定性过程和随机性过程的相对重要性font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-41-确定性过程和随机性过程的相对重要性font\"></a> <font color=#FF0000 >4.1 确定性过程和随机性过程的相对重要性</font></h2>\n<ul>\n<li>\n<p>An index, normalized stochasticity ratio (NST), was developed with 50% as the boundary point between more deterministic (&lt;50%) and more stochastic (&gt;50%) assembly. <font color=#2196F3>NST &gt; 50% 时 Stochastic Processes 占主导，而 NST &lt; 50% 时，Deterministic Processes 占主导。</font></p>\n</li>\n<li>\n<p>用显著的偏差 (即 |β NTI|&gt; 2) 来表示确定性过程占主导地位和用小的偏差 (即 |β NTI| &lt; 2) 来表明随机过程占主导地位。用显著的偏差 (即 |β NTI| &gt; 2) 来表示确定性过程占主导地位和用小的偏差 (即 |β NTI| &lt; 2) 来表明随机过程占主导地位。同质性和变异性选择应分别造成小于和大于预期的群落更替；βNTI &lt;−2 或 &gt; + 2 进一步解释为表明同质性或变异性选择分别占主导地位；</p>\n</li>\n</ul>\n<h2 id=\"font-colorff0000-42-通过rcbray判断随机过程中各种过程的贡献font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-42-通过rcbray判断随机过程中各种过程的贡献font\"></a> <font color=#FF0000 >4.2 通过 RCbray 判断随机过程中各种过程的贡献</font></h2>\n<p>Modified Raup-Crick index (RCbray) is subsequently calculated by comparing empirically observed Bray-Curtis and simulated null distribution. Thus, according to themodified Raup-Crick index (RCbray), stochastic processes could be classified into 3 ecological processes: 均质分散 homogenizing dispersal (RCbray &lt; −0.95), 分散限制 dispersal limitation (RCbray &gt; +0.95) and 生态漂变 ecological drift (−0.95&lt; RCbray &lt; +0.95) <a href=\"https://doi.org/10.1038/ismej.2012.22\">Stegen et al., 2012</a>;  <a href=\"https://doi.org/10.1038/ismej.2013.93\">Stegen et al., 2013</a>.</p>\n","more":"<h1 id=\"font-colorff0000-1-软件font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-1-软件font\"></a> <font color=#FF0000 >1. 软件</font></h1>\n<ul>\n<li>NST</li>\n<li>iCAMP</li>\n<li>ape 用于读取进化树文件</li>\n<li>picante</li>\n</ul>\n<h1 id=\"font-colorff0000-2-文件准备font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-2-文件准备font\"></a> <font color=#FF0000 >2. 文件准备</font></h1>\n<h2 id=\"font-colorff0000-21-feature-tablefont\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-21-feature-tablefont\"></a> <font color=#FF0000 >2.1 Feature Table</font></h2>\n<p>行为 OTUs/ASVs，列为样本。</p>\n<table>\n<thead>\n<tr>\n<th>TaxonID</th>\n<th>Sample 1</th>\n<th>Sample 2</th>\n<th>Sample 3</th>\n<th>Sample 4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OTU1</td>\n<td>232.0</td>\n<td>209.0</td>\n<td>349.0</td>\n<td>256.0</td>\n</tr>\n<tr>\n<td>OTU2</td>\n<td>75.0</td>\n<td>35.0</td>\n<td>44.0</td>\n<td>0.0</td>\n</tr>\n<tr>\n<td>OTU3</td>\n<td>237.0</td>\n<td>224.0</td>\n<td>291.0</td>\n<td>353.0</td>\n</tr>\n<tr>\n<td>OTU4</td>\n<td>371.0</td>\n<td>80.0</td>\n<td>319.0</td>\n<td>345.0</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"font-colorff0000-22-group-filefont\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-22-group-filefont\"></a> <font color=#FF0000 >2.2 Group File</font></h2>\n<p>该文件描述了所有样本的分组情况，如实验组和对照组，或者其他分组。</p>\n<table>\n<thead>\n<tr>\n<th>Sample_ID</th>\n<th>Group</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Sample 1</td>\n<td>Group x</td>\n</tr>\n<tr>\n<td>Sample 2</td>\n<td>Group x</td>\n</tr>\n<tr>\n<td>Sample 3</td>\n<td>Group y</td>\n</tr>\n<tr>\n<td>Sample 4</td>\n<td>Group y</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"font-colorff0000-23-tree-filefont\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-23-tree-filefont\"></a> <font color=#FF0000 >2.3 Tree File</font></h2>\n<p>包含 Feature table 中所有 OTUs/ASVs 的系统发育树文件，理想条件下仅包含 Feature table 中的 OTUs/ASVs，不过大部分情况下还会包含数据库中的一些物种，在随后的分析中需要去除多余的物种（后续会讲到）。</p>\n<h1 id=\"font-colorff0000-3-开始分析font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-3-开始分析font\"></a> <font color=#FF0000 >3. 开始分析</font></h1>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\"><span class=\"token comment\">########################</span>\n<span class=\"token comment\">#!/usr/bin/env R</span>\n<span class=\"token comment\"># version 20200919</span>\n<span class=\"token comment\"># Step 1. 文件、路径和参数</span>\n\n<span class=\"token comment\"># 指定包含输入文件的目录路径，注意区分Windows和Linux的路径写法</span>\nwd<span class=\"token operator\">=</span><span class=\"token string\">\"/mnt/e/Researches/lujia16S/Analysis_20200907/exported-feature-table_2k_abund22/Raup_Crick\"</span>\n\n<span class=\"token comment\"># 指定结果文件的保存路径</span>\nsave.wd<span class=\"token operator\">=</span><span class=\"token string\">\"/mnt/e/Researches/lujia16S/Analysis_20200907/exported-feature-table_2k_abund22/Raup_Crick/Result2\"</span>\n\n<span class=\"token comment\"># 创建文件保存路径</span>\ndir.create<span class=\"token punctuation\">(</span>save.wd<span class=\"token punctuation\">,</span> recursive <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 指定Feature table（OTU表）的文件名</span>\ncom.file<span class=\"token operator\">=</span><span class=\"token string\">\"feature-table.tsv\"</span>\n\n<span class=\"token comment\"># 指定样本分组文件，每行为一个样本</span>\ngroup.file<span class=\"token operator\">=</span><span class=\"token string\">\"treatment.txt\"</span>\n\n<span class=\"token comment\"># 指定NWK格式的系统发育树文件</span>\ntree.file<span class=\"token operator\">=</span><span class=\"token string\">\"tree.nwk\"</span>\n\n<span class=\"token comment\"># 设置并行运算使用的线程数</span>\nnworker<span class=\"token operator\">=</span><span class=\"token number\">8</span>\n\n<span class=\"token comment\"># randomization time for null model analysis. 真实分析的时候一般设置为1000，如果测试的话可以设20</span>\nrand.time<span class=\"token operator\">=</span><span class=\"token number\">999</span>\n\n<span class=\"token comment\"># 输出文件的前缀名，随便设置</span>\nprefix<span class=\"token operator\">=</span><span class=\"token string\">\"Lujia\"</span>\n\n<span class=\"token comment\"># Step 2. 加载R包</span>\n\n<span class=\"token comment\"># 确保已经安装过所需的R包</span>\n<span class=\"token comment\">#install.packages(\"NST\") </span>\n\nlibrary<span class=\"token punctuation\">(</span>ape<span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>iCAMP<span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>NST<span class=\"token punctuation\">)</span> <span class=\"token comment\"># need to be NST >=3.0.3</span>\nlibrary<span class=\"token punctuation\">(</span>picante<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 3. 加载数据并匹配IDs</span>\n\nsetwd<span class=\"token punctuation\">(</span>wd<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读入Feature Table，注意自己文件的列与列之间的分隔符是什么，制表符用sep = \"\\t\"，逗号用sep = \",\"</span>\ncomm<span class=\"token operator\">=</span>t<span class=\"token punctuation\">(</span>read.table<span class=\"token punctuation\">(</span>com.file<span class=\"token punctuation\">,</span>header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> row.names <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> as.is <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> stringsAsFactors <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读入分组文件，同样注意设置分隔符</span>\ngroup<span class=\"token operator\">=</span>read.table<span class=\"token punctuation\">(</span>group.file<span class=\"token punctuation\">,</span> header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> row.names <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> as.is <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> stringsAsFactors <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#如果tree中的OTUs和Feature Table中的OTUs一一对应，可以直接用下面一个命令读入tree（注意去掉###），否则的话则运行下面LHL加入的3行命令</span>\n<span class=\"token comment\">###tree=ape::read.tree(file = tree.file) # if you have tree</span>\n\n<span class=\"token comment\"># 以下3行是LHL加入的</span>\nphy<span class=\"token operator\">&lt;-</span>read.tree<span class=\"token punctuation\">(</span>tree.file<span class=\"token punctuation\">)</span><span class=\"token comment\"># 读入树文件</span>\nprune_tree<span class=\"token operator\">&lt;-</span>prune.sample<span class=\"token punctuation\">(</span>comm<span class=\"token punctuation\">,</span>phy<span class=\"token punctuation\">)</span><span class=\"token comment\"># 使树文件和OTU表文件一一对齐</span>\ntree<span class=\"token operator\">=</span>prune_tree <span class=\"token comment\"># 此刻的Tree干净了，可用于后续分析而不会报错</span>\n\n<span class=\"token comment\"># 以下命令检测Feature Table中的样本名称是否与分组文件中的样本名一一对应</span>\nsamp.ck<span class=\"token operator\">=</span>NST<span class=\"token operator\">::</span>match.name<span class=\"token punctuation\">(</span>rn.list<span class=\"token operator\">=</span>list<span class=\"token punctuation\">(</span>comm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">,</span>group<span class=\"token operator\">=</span>group<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncomm<span class=\"token operator\">=</span>samp.ck<span class=\"token operator\">$</span>comm\ncomm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>colSums<span class=\"token punctuation\">(</span>comm<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">]</span>\ngroup<span class=\"token operator\">=</span>samp.ck<span class=\"token operator\">$</span>group\n\n<span class=\"token comment\"># 以下命令检测Feature Table中的OTUs名称是否与Tree中的OTUs名一一对应</span>\ntax.ck<span class=\"token operator\">=</span>NST<span class=\"token operator\">::</span>match.name<span class=\"token punctuation\">(</span>cn.list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">(</span>comm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>tree.list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">(</span>tree<span class=\"token operator\">=</span>tree<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># if you have tree</span>\ncomm<span class=\"token operator\">=</span>tax.ck<span class=\"token operator\">$</span>comm\ntree<span class=\"token operator\">=</span>tax.ck<span class=\"token operator\">$</span>tree\n\n<span class=\"token comment\"># Step 4. Grouping way and metacommunity seting</span>\n\n<span class=\"token comment\"># 选择分组，如果拥有多种分组方式，每次运行时选择其中的一组。此处选择的时分组文件中的第二列</span>\ngroupi<span class=\"token operator\">=</span>group<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 重新定义输出文件的前缀，以分组的名称来命名，此处以分组文件第二列的表头“Group”为前缀</span>\nprefixi<span class=\"token operator\">=</span>paste0<span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">,</span><span class=\"token string\">\".Group\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># if treatment and control are from different metacommunities, you may set meta.groupi=groupi，默认为NULL</span>\n<span class=\"token comment\">#meta.groupi=NULL</span>\nmeta.groupi<span class=\"token operator\">=</span>groupi\n\n<span class=\"token comment\"># Step 5. taxonomic NST</span>\n<span class=\"token comment\"># Step 5.1 calculate tNST</span>\n\n<span class=\"token comment\"># 指定计算距离矩阵的方法，\"jaccard\" and \"bray\" are preferred.</span>\ndist.method<span class=\"token operator\">=</span><span class=\"token string\">\"bray\"</span>\n\n<span class=\"token comment\"># 记录运行时间</span>\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 进入输出目录</span>\nsetwd<span class=\"token punctuation\">(</span>save.wd<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 计算tNST</span>\ntnst<span class=\"token operator\">=</span>tNST<span class=\"token punctuation\">(</span>comm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">,</span> group<span class=\"token operator\">=</span>groupi<span class=\"token punctuation\">,</span> meta.group<span class=\"token operator\">=</span>meta.groupi<span class=\"token punctuation\">,</span> meta.com<span class=\"token operator\">=</span><span class=\"token keyword\">NULL</span><span class=\"token punctuation\">,</span> dist.method<span class=\"token operator\">=</span>dist.method<span class=\"token punctuation\">,</span> abundance.weighted<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> rand<span class=\"token operator\">=</span>rand.time<span class=\"token punctuation\">,</span> output.rand<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> nworker<span class=\"token operator\">=</span>nworker<span class=\"token punctuation\">,</span> LB<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> null.model<span class=\"token operator\">=</span><span class=\"token string\">\"PF\"</span><span class=\"token punctuation\">,</span> between.group<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> SES<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> RC<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 以R data格式保存tNST的输出 </span>\nsave<span class=\"token punctuation\">(</span>tnst<span class=\"token punctuation\">,</span> file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span> <span class=\"token string\">\".tNST.rda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 保存其他tNST结果到多个文件中</span>\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.grp<span class=\"token punctuation\">,</span> file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span> <span class=\"token string\">\".tNST.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.pair.grp<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.pairwise.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.pair<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.pairwise.index.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.between<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.between.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>tnst<span class=\"token operator\">$</span>index.pair.between<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.pairwise.between.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nformat<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 5.2 Bootstrapping test</span>\n\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 计算Bootstrapping</span>\ntnstbt<span class=\"token operator\">=</span>nst.boot<span class=\"token punctuation\">(</span>nst.result<span class=\"token operator\">=</span>tnst<span class=\"token punctuation\">,</span> group<span class=\"token operator\">=</span>groupi<span class=\"token punctuation\">,</span> rand<span class=\"token operator\">=</span>rand.time<span class=\"token punctuation\">,</span> trace<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> two.tail<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> out.detail<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> between.group<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> nworker<span class=\"token operator\">=</span>nworker<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 保存结果</span>\nsave<span class=\"token punctuation\">(</span>tnstbt<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.boot.rda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 保存结果</span>\nwrite.table<span class=\"token punctuation\">(</span>tnstbt<span class=\"token operator\">$</span>summary<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.boot.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\nwrite.table<span class=\"token punctuation\">(</span>tnstbt<span class=\"token operator\">$</span>compare<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.boot.compare.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 5.3 PERMANOVA</span>\n\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ntnstpaov<span class=\"token operator\">=</span>nst.panova<span class=\"token punctuation\">(</span>nst.result<span class=\"token operator\">=</span>tnst<span class=\"token punctuation\">,</span> group <span class=\"token operator\">=</span> groupi<span class=\"token punctuation\">,</span> rand <span class=\"token operator\">=</span> rand.time<span class=\"token punctuation\">,</span> trace <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>tnstpaov<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".tNST.PERMANOVA.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Steo 6. phylogenetic NST</span>\n\n<span class=\"token comment\"># Step 6.1 phylogentic distance matrix # use bigmemory for big dataset</span>\n\nwd.pd<span class=\"token operator\">=</span>paste0<span class=\"token punctuation\">(</span>save.wd<span class=\"token punctuation\">,</span><span class=\"token string\">\"/pdbig\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dir.exists<span class=\"token punctuation\">(</span>wd.pd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>dir.create<span class=\"token punctuation\">(</span>wd.pd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n\nsetwd<span class=\"token punctuation\">(</span>wd.pd<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file.exists<span class=\"token punctuation\">(</span><span class=\"token string\">\"pd.desc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\"># if already done before, directly use it.</span>\n  pdbig<span class=\"token operator\">=</span>list<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  pdbig<span class=\"token operator\">$</span>tip.label<span class=\"token operator\">=</span>read.table<span class=\"token punctuation\">(</span><span class=\"token string\">\"pd.taxon.name.csv\"</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> row.names <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> stringsAsFactors <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> as.is <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  pdbig<span class=\"token operator\">$</span>pd.wd<span class=\"token operator\">=</span>wd.pd\n  pdbig<span class=\"token operator\">$</span>pd.file<span class=\"token operator\">=</span><span class=\"token string\">\"pd.desc\"</span>\n  pdbig<span class=\"token operator\">$</span>pd.name.file<span class=\"token operator\">=</span><span class=\"token string\">\"pd.taxon.name.csv\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n  pdbig<span class=\"token operator\">=</span>iCAMP<span class=\"token operator\">::</span>pdist.big<span class=\"token punctuation\">(</span>tree <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">,</span> wd <span class=\"token operator\">=</span> wd.pd<span class=\"token punctuation\">,</span> nworker <span class=\"token operator\">=</span> nworker<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Step 6.2 calculate pNST</span>\n\n<span class=\"token comment\"># to count time cost</span>\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsetwd<span class=\"token punctuation\">(</span>save.wd<span class=\"token punctuation\">)</span>\n\npnst<span class=\"token operator\">=</span>NST<span class=\"token operator\">::</span>pNST<span class=\"token punctuation\">(</span>comm<span class=\"token operator\">=</span>comm<span class=\"token punctuation\">,</span> pd.desc<span class=\"token operator\">=</span>pdbig<span class=\"token operator\">$</span>pd.file<span class=\"token punctuation\">,</span> pd.wd<span class=\"token operator\">=</span>pdbig<span class=\"token operator\">$</span>pd.wd<span class=\"token punctuation\">,</span>\npd.spname<span class=\"token operator\">=</span>pdbig<span class=\"token operator\">$</span>tip.label<span class=\"token punctuation\">,</span> group<span class=\"token operator\">=</span>groupi<span class=\"token punctuation\">,</span> meta.group<span class=\"token operator\">=</span>meta.groupi<span class=\"token punctuation\">,</span> abundance.weighted<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> rand<span class=\"token operator\">=</span>rand.time<span class=\"token punctuation\">,</span> output.rand<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> taxo.null.model<span class=\"token operator\">=</span><span class=\"token keyword\">NULL</span><span class=\"token punctuation\">,</span> phylo.shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> exclude.conspecifics<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> nworker<span class=\"token operator\">=</span>nworker<span class=\"token punctuation\">,</span> between.group<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> SES<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> RC<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># save pNST output in R data format</span>\nsave<span class=\"token punctuation\">(</span>pnst<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.rda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.grp<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.pair.grp<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.pairwise.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.pair<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.pairwise.index.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.between<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.between.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnst<span class=\"token operator\">$</span>index.pair.between<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.pairwise.between.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nformat<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 6.3 Bootstrapping test</span>\n\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npnstbt<span class=\"token operator\">=</span>nst.boot<span class=\"token punctuation\">(</span>nst.result<span class=\"token operator\">=</span>pnst<span class=\"token punctuation\">,</span> group<span class=\"token operator\">=</span>groupi<span class=\"token punctuation\">,</span> rand<span class=\"token operator\">=</span>rand.time<span class=\"token punctuation\">,</span> trace<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> two.tail<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> out.detail<span class=\"token operator\">=</span><span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> between.group<span class=\"token operator\">=</span><span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span> nworker<span class=\"token operator\">=</span>nworker<span class=\"token punctuation\">)</span>\n\nsave<span class=\"token punctuation\">(</span>pnstbt<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.boot.rda\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnstbt<span class=\"token operator\">$</span>summary<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.boot.summary.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnstbt<span class=\"token operator\">$</span>compare<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.boot.compare.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 6.4 PERMANOVA</span>\n\nt1<span class=\"token operator\">=</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npnstpaov<span class=\"token operator\">=</span>nst.panova<span class=\"token punctuation\">(</span>nst.result<span class=\"token operator\">=</span>pnst<span class=\"token punctuation\">,</span> group <span class=\"token operator\">=</span> groupi<span class=\"token punctuation\">,</span> rand <span class=\"token operator\">=</span> rand.time<span class=\"token punctuation\">,</span> trace <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">)</span>\n\nwrite.table<span class=\"token punctuation\">(</span>pnstpaov<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> paste0<span class=\"token punctuation\">(</span>prefixi<span class=\"token punctuation\">,</span><span class=\"token string\">\".pNST.PERMANOVA.csv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> quote <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">,</span>sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>format<span class=\"token punctuation\">(</span>Sys.time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"font-colorff0000-4-结果解读font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-4-结果解读font\"></a> <font color=#FF0000 >4. 结果解读</font></h1>\n<h2 id=\"font-colorff0000-41-确定性过程和随机性过程的相对重要性font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-41-确定性过程和随机性过程的相对重要性font\"></a> <font color=#FF0000 >4.1 确定性过程和随机性过程的相对重要性</font></h2>\n<ul>\n<li>\n<p>An index, normalized stochasticity ratio (NST), was developed with 50% as the boundary point between more deterministic (&lt;50%) and more stochastic (&gt;50%) assembly. <font color=#2196F3>NST &gt; 50% 时 Stochastic Processes 占主导，而 NST &lt; 50% 时，Deterministic Processes 占主导。</font></p>\n</li>\n<li>\n<p>用显著的偏差 (即 |β NTI|&gt; 2) 来表示确定性过程占主导地位和用小的偏差 (即 |β NTI| &lt; 2) 来表明随机过程占主导地位。用显著的偏差 (即 |β NTI| &gt; 2) 来表示确定性过程占主导地位和用小的偏差 (即 |β NTI| &lt; 2) 来表明随机过程占主导地位。同质性和变异性选择应分别造成小于和大于预期的群落更替；βNTI &lt;−2 或 &gt; + 2 进一步解释为表明同质性或变异性选择分别占主导地位；</p>\n</li>\n</ul>\n<h2 id=\"font-colorff0000-42-通过rcbray判断随机过程中各种过程的贡献font\"><a class=\"markdownIt-Anchor\" href=\"#font-colorff0000-42-通过rcbray判断随机过程中各种过程的贡献font\"></a> <font color=#FF0000 >4.2 通过 RCbray 判断随机过程中各种过程的贡献</font></h2>\n<p>Modified Raup-Crick index (RCbray) is subsequently calculated by comparing empirically observed Bray-Curtis and simulated null distribution. Thus, according to themodified Raup-Crick index (RCbray), stochastic processes could be classified into 3 ecological processes: 均质分散 homogenizing dispersal (RCbray &lt; −0.95), 分散限制 dispersal limitation (RCbray &gt; +0.95) and 生态漂变 ecological drift (−0.95&lt; RCbray &lt; +0.95) <a href=\"https://doi.org/10.1038/ismej.2012.22\">Stegen et al., 2012</a>;  <a href=\"https://doi.org/10.1038/ismej.2013.93\">Stegen et al., 2013</a>.</p>","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"扩增子","path":"api/tags/扩增子.json"}]}