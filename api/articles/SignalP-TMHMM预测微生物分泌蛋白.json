{"title":"SignalP+TMHMM预测微生物分泌蛋白","slug":"SignalP-TMHMM预测微生物分泌蛋白","date":"2021-10-14T01:09:45.000Z","updated":"2022-01-08T02:16:28.415Z","comments":true,"path":"api/articles/SignalP-TMHMM预测微生物分泌蛋白.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p>\n<p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的 N 端有一般由 15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度 5-30 个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的 N - 末端的氨基酸序列（有时不一定在 N 端）。<u>使用<strong> SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong> TMHMM</strong> 注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p>\n<h1 id=\"ruby软件-rtsoftwarertruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件-rtsoftwarertruby\"></a> <ruby>软件 <rt>Software</rt></ruby></h1>\n<ul>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li>\n<p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p>\n<ul>\n<li>\n<p>Sec/SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的 “标准” 分泌信号肽；<rt>&quot;Standard&quot; secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li>\n<p>Sec/SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li>\n<p>Tat/SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li>\n<p>Tat/SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li>\n<p>Sec/SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD/PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD/PibD).</rt></ruby></p>\n</li>\n<li>\n<p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a></p>\n<ul>\n<li>用于预测蛋白质中的跨膜螺旋。</li>\n</ul>\n</li>\n<li>\n<p>Python</p>\n</li>\n</ul>\n<p>SignalP 和 TMHMM 对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h 有效时间）。</p>\n<h1 id=\"ruby软件安装-rtinstallation-of-softwaresrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件安装-rtinstallation-of-softwaresrtruby\"></a> <ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1>\n<h2 id=\"安装signalp-60\"><a class=\"markdownIt-Anchor\" href=\"#安装signalp-60\"></a> 安装 SignalP 6.0</h2>\n<ul>\n<li>\n<p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\"> SignalP V6.0</a> 网站，找到 “Download”，填写相关信息，获取下载链接，下载得到 “signalp-6.0.fast.tar.gz”。有两个模式可以选择 ——“slow_sequential” 和 “fast&quot;。前者 runs the full model sequentially, taking the same amount of RAM as  <code>fast</code>  but being 6 times slower；后者 uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是 fast 模式。</p>\n</li>\n<li>\n<p><ruby>安装 <rt>Installation</rt></ruby></p>\n<ul>\n<li>\n<p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p>\n<ul>\n<li>\n<p>Python</p>\n</li>\n<li>\n<p>matplotlib&gt;3.3.2</p>\n</li>\n<li>\n<p>numpy&gt;1.19.2</p>\n</li>\n<li>\n<p>torch&gt;1.7.0</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> torch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>tqdm&gt;4.46.1</p>\n</li>\n</ul>\n</li>\n<li>\n<p>安装 SignalP 6.0</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压缩安装文件</span>\n<span class=\"token function\">tar</span> zxvf signalp-6.0.fast.tar.gz\n\n<span class=\"token comment\"># 进入解压后的软件目录，在终端运行</span>\npython setup.py <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># 测试安装</span>\nsignalp6 --help<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装tmhmm-v20c\"><a class=\"markdownIt-Anchor\" href=\"#安装tmhmm-v20c\"></a> 安装 TMHMM V2.0c</h2>\n<ul>\n<li>\n<p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\"> TMHMM V2.0c</a> 网站，找到 “Download”，填写相关信息，获取下载链接，下载得到 “tmhmm-2.0c.Linux.tar.gz”。</p>\n</li>\n<li>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压缩</span>\n<span class=\"token function\">tar</span> zxvf tmhmm-2.0c.Linux.tar.gz\n\n<span class=\"token comment\"># 进入解压后的目录</span>\n<span class=\"token builtin class-name\">cd</span> tmhmm-2.0c\n\n<span class=\"token comment\"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span>\n<span class=\"token builtin class-name\">pwd</span>\n\n<span class=\"token comment\"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span>\n\n<span class=\"token comment\"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><font color=\"#FF0000\">运行错误</font></p>\n<p>运行软件时总报 <code>Segmentation fault (core dumped)</code>  错误，暂时无解。各位可以使用其<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">在线版</a>。</p>\n</li>\n</ul>\n<h1 id=\"ruby软件用法-rtusagertruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件用法-rtusagertruby\"></a> <ruby>软件用法 <rt>Usage</rt></ruby></h1>\n<h2 id=\"signalp-60\"><a class=\"markdownIt-Anchor\" href=\"#signalp-60\"></a> SignalP 6.0</h2>\n<h3 id=\"ruby预测-rtpredictionrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby预测-rtpredictionrtruby\"></a> <ruby>预测 <rt>Prediction</rt></ruby></h3>\n<p>A command takes the following form</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>\n<p><code>fastafile</code>  <ruby>输入文件为 FASTA 格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p>\n</li>\n<li>\n<p><code>organism</code>  is either  <code>other</code>  or  <code>Eukarya</code> . Specifying  <code>Eukarya</code>  triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec/SPI).</p>\n</li>\n<li>\n<p><code>format</code>  can take the values  <code>txt</code> ,  <code>png</code> ,  <code>eps</code> ,  <code>all</code> . It defines what output files are created for individual sequences.  <code>txt</code>  produces a tabular  <code>.gff</code>  file with the per-position predictions for each sequence.  <code>png</code> ,  <code>eps</code> ,  <code>all</code>  additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p>\n</li>\n<li>\n<p><code>mode</code>  is either  <code>fast</code> ,  <code>slow</code>  or  <code>slow-sequential</code> . Default is  <code>fast</code> , which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster.  <code>slow</code>  runs the full model in parallel, which requires more than 14GB of RAM to be available.  <code>slow-sequential</code>  runs the full model sequentially, taking the same amount of RAM as  <code>fast</code>  but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p>\n</li>\n</ul>\n<h3 id=\"ruby输出rt-outputsrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby输出rt-outputsrtruby\"></a> <ruby>输出<rt> Outputs</rt></ruby></h3>\n<ul>\n<li>\n<p>output_dir/output.gff3：仅包含含有信号肽的序列信息；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"output.gff3\" /></p>\n</li>\n<li>\n<p>output_dir/prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li>\n<p>output_dir/region_output.gff3：包含所有的信号肽区域信息。</p>\n<ul>\n<li>\n<p>n-region: The n-terminal region of the signal peptide. Reported for Sec/SPI, Sec/SPII, Tat/SPI and Tat/SPII. Labeled as N</p>\n</li>\n<li>\n<p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec/SPI, Sec/SPII, Tat/SPI and Tat/SPII. Labeled as H</p>\n</li>\n<li>\n<p>c-region: The c-terminal region of the signal peptide, reported for Sec/SPI and Tat/SPI.</p>\n</li>\n<li>\n<p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p>\n</li>\n<li>\n<p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p>\n</li>\n<li>\n<p>Sec/SPIII: These signal peptides have no known region structure.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"region_output.gff3\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"批处理与结果优化\"><a class=\"markdownIt-Anchor\" href=\"#批处理与结果优化\"></a> 批处理与结果优化</h3>\n<p>脚本名：run_SignalP.pl</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 14, 2021</span>\n\n\nopen IDNOSEQ<span class=\"token punctuation\">,</span> <span class=\"token string\">\">IDNOSEQ.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@faa</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@faa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(.+).faa/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".nodesc\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$sigseq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".sigseq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$outdir</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_signalp\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\">/^(>\\S+)/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span> <span class=\"token operator\">=</span> idseq<span class=\"token punctuation\">(</span><span class=\"token variable\">$out</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gff</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$outdir</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/output.gff3\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token operator\">-z</span> <span class=\"token variable\">$gff</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$gff\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$sigseq\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> IDNOSEQ <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"$lines[0]\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tclose IN<span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"rm $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv $sigseq $outdir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IDNOSEQ<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token function\"><span class=\"token keyword\">sub</span> idseq</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 run_SignalP.pl 与后缀名为 “.faa” 的 FASTA 格式文件放在同一目录下，在终端中运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_SignalP.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"ruby结果解读rtoutput-interpretationrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby结果解读rtoutput-interpretationrtruby\"></a> <ruby>结果解读<rt>Output interpretation</rt></ruby></h3>\n<p>* 代表输入文件的名字。</p>\n<ul>\n<li>\n<p>*_signalp/output.gff3：仅包含含有信号肽的序列信息；</p>\n</li>\n<li>\n<p>*_signalp/prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li>\n<p>*_signalp/region_output.gff3：包含所有的信号肽区域信息；</p>\n</li>\n<li>\n<p><strong>*_signalp/*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作 TMHMM 的输入文件。</p>\n</li>\n</ul>\n<h2 id=\"tmhmm\"><a class=\"markdownIt-Anchor\" href=\"#tmhmm\"></a> TMHMM</h2>\n<h3 id=\"预测\"><a class=\"markdownIt-Anchor\" href=\"#预测\"></a> 预测</h3>\n<p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的 “*_signalp/*.sigseq”，将其上传至网页版<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\"> TMHMM</a>，提交任务，等待结果即可。</p>\n<h3 id=\"结果展示\"><a class=\"markdownIt-Anchor\" href=\"#结果展示\"></a> 结果展示</h3>\n<p>TMHMM 可以输出多种格式的结果文件，具体请参考其<a href=\"http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output\">官方说明</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"在TMHMM网站提交任务\" /></p>\n<ul>\n<li>\n<p><strong>Long output format</strong></p>\n<ul>\n<li>\n<p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li>\n<p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p>\n</li>\n<li>\n<p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li>\n<p>Exp number, first 60 AAs：<ruby>在蛋白的前 60 个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li>\n<p>Total prob of N-in：<ruby>N 端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p>\n</li>\n<li>\n<p>POSSIBLE N-term signal sequence：<ruby>当 “Exp number, first 60 AAs” 大于 10 时产生的警告。 <rt> A warning that is produced when &quot;Exp number, first 60 AAs&quot; is larger than 10.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li>\n<p>蛋白 F01_bin.1_00110 共计 436 个氨基酸，有 5 个跨膜螺旋结构。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"含有跨膜结构的蛋白\" /></p>\n</li>\n<li>\n<p>蛋白 F01_bin.1_00142 共计 557 个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"不含跨膜结构的蛋白\" /></p>\n</li>\n<li>\n<p><strong>Short output format</strong></p>\n<ul>\n<li>\n<p>&quot;len=&quot;： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;ExpAA=&quot;：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li>\n<p>&quot;First60=&quot;：<ruby>在蛋白的前 60 个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;PredHel=&quot;：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;Topology=&quot;：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由 “i” 分隔，如果螺旋在外部，则由 “o” 分隔。'i7-29o44-66i87-109o' 意味着它从膜内开始，在位置 7 到 29 有一个预测的 TMH，30-43 在膜外，然后是位置 44-66 的 TMH。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Short output format\" /></p>\n</li>\n</ul>\n<h3 id=\"结果汇总\"><a class=\"markdownIt-Anchor\" href=\"#结果汇总\"></a> 结果汇总</h3>\n<p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong> run_SignalP.pl</strong> 生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong> Statistics.txt</strong> 中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp/*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp/*.membrane.faa</b>文件中。该过程将通过<strong> tmhmm_parser.pl</strong> 完成。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 15, 2021</span>\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Statistics.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Strain name\\tSignal peptide numbers\\tSecretory protein numbers\\tMembrane protein numbers\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@sig</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*_signalp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sig</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@sig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$sig</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+)_signalp/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$tmhmm</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sig</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/$str\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_TMHMM_SHORT.txt\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sig</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/$str\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".sigseq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$secretory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".secretory.faa\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$membrane</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".membrane.faa\"</span><span class=\"token punctuation\">;</span>\n\topen SEC<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$secretory\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen MEM<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$membrane\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$on</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span> <span class=\"token operator\">=</span> idseq<span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$tmhmm</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#\t\tprint $_ . \"\\n\";</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">eq</span> <span class=\"token string\">\"Topology=o\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$out</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> SEC <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$on</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> MEM <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose SEC<span class=\"token punctuation\">;</span>\n\tclose MEM<span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv $secretory $membrane $sig\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$on</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$str\\t$total\\t$out\\t$on\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nclose OUT<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\"><span class=\"token keyword\">sub</span> idseq</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl tmhmm_parser.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “c886” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li>\n<p><a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a></p>\n</li>\n</ul>\n","more":"<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p>\n<p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的 N 端有一般由 15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度 5-30 个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的 N - 末端的氨基酸序列（有时不一定在 N 端）。<u>使用<strong> SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong> TMHMM</strong> 注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p>\n<h1 id=\"ruby软件-rtsoftwarertruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件-rtsoftwarertruby\"></a> <ruby>软件 <rt>Software</rt></ruby></h1>\n<ul>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li>\n<p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p>\n<ul>\n<li>\n<p>Sec/SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的 “标准” 分泌信号肽；<rt>&quot;Standard&quot; secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li>\n<p>Sec/SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li>\n<p>Tat/SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li>\n<p>Tat/SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li>\n<p>Sec/SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD/PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD/PibD).</rt></ruby></p>\n</li>\n<li>\n<p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a></p>\n<ul>\n<li>用于预测蛋白质中的跨膜螺旋。</li>\n</ul>\n</li>\n<li>\n<p>Python</p>\n</li>\n</ul>\n<p>SignalP 和 TMHMM 对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h 有效时间）。</p>\n<h1 id=\"ruby软件安装-rtinstallation-of-softwaresrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件安装-rtinstallation-of-softwaresrtruby\"></a> <ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1>\n<h2 id=\"安装signalp-60\"><a class=\"markdownIt-Anchor\" href=\"#安装signalp-60\"></a> 安装 SignalP 6.0</h2>\n<ul>\n<li>\n<p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\"> SignalP V6.0</a> 网站，找到 “Download”，填写相关信息，获取下载链接，下载得到 “signalp-6.0.fast.tar.gz”。有两个模式可以选择 ——“slow_sequential” 和 “fast&quot;。前者 runs the full model sequentially, taking the same amount of RAM as  <code>fast</code>  but being 6 times slower；后者 uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是 fast 模式。</p>\n</li>\n<li>\n<p><ruby>安装 <rt>Installation</rt></ruby></p>\n<ul>\n<li>\n<p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p>\n<ul>\n<li>\n<p>Python</p>\n</li>\n<li>\n<p>matplotlib&gt;3.3.2</p>\n</li>\n<li>\n<p>numpy&gt;1.19.2</p>\n</li>\n<li>\n<p>torch&gt;1.7.0</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> torch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>tqdm&gt;4.46.1</p>\n</li>\n</ul>\n</li>\n<li>\n<p>安装 SignalP 6.0</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压缩安装文件</span>\n<span class=\"token function\">tar</span> zxvf signalp-6.0.fast.tar.gz\n\n<span class=\"token comment\"># 进入解压后的软件目录，在终端运行</span>\npython setup.py <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># 测试安装</span>\nsignalp6 --help<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装tmhmm-v20c\"><a class=\"markdownIt-Anchor\" href=\"#安装tmhmm-v20c\"></a> 安装 TMHMM V2.0c</h2>\n<ul>\n<li>\n<p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\"> TMHMM V2.0c</a> 网站，找到 “Download”，填写相关信息，获取下载链接，下载得到 “tmhmm-2.0c.Linux.tar.gz”。</p>\n</li>\n<li>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压缩</span>\n<span class=\"token function\">tar</span> zxvf tmhmm-2.0c.Linux.tar.gz\n\n<span class=\"token comment\"># 进入解压后的目录</span>\n<span class=\"token builtin class-name\">cd</span> tmhmm-2.0c\n\n<span class=\"token comment\"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span>\n<span class=\"token builtin class-name\">pwd</span>\n\n<span class=\"token comment\"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span>\n\n<span class=\"token comment\"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><font color=\"#FF0000\">运行错误</font></p>\n<p>运行软件时总报 <code>Segmentation fault (core dumped)</code>  错误，暂时无解。各位可以使用其<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">在线版</a>。</p>\n</li>\n</ul>\n<h1 id=\"ruby软件用法-rtusagertruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件用法-rtusagertruby\"></a> <ruby>软件用法 <rt>Usage</rt></ruby></h1>\n<h2 id=\"signalp-60\"><a class=\"markdownIt-Anchor\" href=\"#signalp-60\"></a> SignalP 6.0</h2>\n<h3 id=\"ruby预测-rtpredictionrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby预测-rtpredictionrtruby\"></a> <ruby>预测 <rt>Prediction</rt></ruby></h3>\n<p>A command takes the following form</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>\n<p><code>fastafile</code>  <ruby>输入文件为 FASTA 格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p>\n</li>\n<li>\n<p><code>organism</code>  is either  <code>other</code>  or  <code>Eukarya</code> . Specifying  <code>Eukarya</code>  triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec/SPI).</p>\n</li>\n<li>\n<p><code>format</code>  can take the values  <code>txt</code> ,  <code>png</code> ,  <code>eps</code> ,  <code>all</code> . It defines what output files are created for individual sequences.  <code>txt</code>  produces a tabular  <code>.gff</code>  file with the per-position predictions for each sequence.  <code>png</code> ,  <code>eps</code> ,  <code>all</code>  additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p>\n</li>\n<li>\n<p><code>mode</code>  is either  <code>fast</code> ,  <code>slow</code>  or  <code>slow-sequential</code> . Default is  <code>fast</code> , which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster.  <code>slow</code>  runs the full model in parallel, which requires more than 14GB of RAM to be available.  <code>slow-sequential</code>  runs the full model sequentially, taking the same amount of RAM as  <code>fast</code>  but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p>\n</li>\n</ul>\n<h3 id=\"ruby输出rt-outputsrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby输出rt-outputsrtruby\"></a> <ruby>输出<rt> Outputs</rt></ruby></h3>\n<ul>\n<li>\n<p>output_dir/output.gff3：仅包含含有信号肽的序列信息；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" alt=\"output.gff3\" /></p>\n</li>\n<li>\n<p>output_dir/prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li>\n<p>output_dir/region_output.gff3：包含所有的信号肽区域信息。</p>\n<ul>\n<li>\n<p>n-region: The n-terminal region of the signal peptide. Reported for Sec/SPI, Sec/SPII, Tat/SPI and Tat/SPII. Labeled as N</p>\n</li>\n<li>\n<p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec/SPI, Sec/SPII, Tat/SPI and Tat/SPII. Labeled as H</p>\n</li>\n<li>\n<p>c-region: The c-terminal region of the signal peptide, reported for Sec/SPI and Tat/SPI.</p>\n</li>\n<li>\n<p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p>\n</li>\n<li>\n<p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p>\n</li>\n<li>\n<p>Sec/SPIII: These signal peptides have no known region structure.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" alt=\"region_output.gff3\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"批处理与结果优化\"><a class=\"markdownIt-Anchor\" href=\"#批处理与结果优化\"></a> 批处理与结果优化</h3>\n<p>脚本名：run_SignalP.pl</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 14, 2021</span>\n\n\nopen IDNOSEQ<span class=\"token punctuation\">,</span> <span class=\"token string\">\">IDNOSEQ.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@faa</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@faa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(.+).faa/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".nodesc\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$sigseq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".sigseq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$outdir</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_signalp\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\">/^(>\\S+)/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span> <span class=\"token operator\">=</span> idseq<span class=\"token punctuation\">(</span><span class=\"token variable\">$out</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gff</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$outdir</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/output.gff3\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token operator\">-z</span> <span class=\"token variable\">$gff</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$gff\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$sigseq\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> IDNOSEQ <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"$lines[0]\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tclose IN<span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"rm $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv $sigseq $outdir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IDNOSEQ<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token function\"><span class=\"token keyword\">sub</span> idseq</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 run_SignalP.pl 与后缀名为 “.faa” 的 FASTA 格式文件放在同一目录下，在终端中运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_SignalP.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"ruby结果解读rtoutput-interpretationrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby结果解读rtoutput-interpretationrtruby\"></a> <ruby>结果解读<rt>Output interpretation</rt></ruby></h3>\n<p>* 代表输入文件的名字。</p>\n<ul>\n<li>\n<p>*_signalp/output.gff3：仅包含含有信号肽的序列信息；</p>\n</li>\n<li>\n<p>*_signalp/prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li>\n<p>*_signalp/region_output.gff3：包含所有的信号肽区域信息；</p>\n</li>\n<li>\n<p><strong>*_signalp/*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作 TMHMM 的输入文件。</p>\n</li>\n</ul>\n<h2 id=\"tmhmm\"><a class=\"markdownIt-Anchor\" href=\"#tmhmm\"></a> TMHMM</h2>\n<h3 id=\"预测\"><a class=\"markdownIt-Anchor\" href=\"#预测\"></a> 预测</h3>\n<p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的 “*_signalp/*.sigseq”，将其上传至网页版<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\"> TMHMM</a>，提交任务，等待结果即可。</p>\n<h3 id=\"结果展示\"><a class=\"markdownIt-Anchor\" href=\"#结果展示\"></a> 结果展示</h3>\n<p>TMHMM 可以输出多种格式的结果文件，具体请参考其<a href=\"http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output\">官方说明</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" alt=\"在TMHMM网站提交任务\" /></p>\n<ul>\n<li>\n<p><strong>Long output format</strong></p>\n<ul>\n<li>\n<p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li>\n<p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p>\n</li>\n<li>\n<p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li>\n<p>Exp number, first 60 AAs：<ruby>在蛋白的前 60 个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li>\n<p>Total prob of N-in：<ruby>N 端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p>\n</li>\n<li>\n<p>POSSIBLE N-term signal sequence：<ruby>当 “Exp number, first 60 AAs” 大于 10 时产生的警告。 <rt> A warning that is produced when &quot;Exp number, first 60 AAs&quot; is larger than 10.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li>\n<p>蛋白 F01_bin.1_00110 共计 436 个氨基酸，有 5 个跨膜螺旋结构。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" alt=\"含有跨膜结构的蛋白\" /></p>\n</li>\n<li>\n<p>蛋白 F01_bin.1_00142 共计 557 个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" alt=\"不含跨膜结构的蛋白\" /></p>\n</li>\n<li>\n<p><strong>Short output format</strong></p>\n<ul>\n<li>\n<p>&quot;len=&quot;： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;ExpAA=&quot;：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li>\n<p>&quot;First60=&quot;：<ruby>在蛋白的前 60 个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;PredHel=&quot;：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;Topology=&quot;：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由 “i” 分隔，如果螺旋在外部，则由 “o” 分隔。'i7-29o44-66i87-109o' 意味着它从膜内开始，在位置 7 到 29 有一个预测的 TMH，30-43 在膜外，然后是位置 44-66 的 TMH。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" alt=\"Short output format\" /></p>\n</li>\n</ul>\n<h3 id=\"结果汇总\"><a class=\"markdownIt-Anchor\" href=\"#结果汇总\"></a> 结果汇总</h3>\n<p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong> run_SignalP.pl</strong> 生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong> Statistics.txt</strong> 中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp/*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp/*.membrane.faa</b>文件中。该过程将通过<strong> tmhmm_parser.pl</strong> 完成。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 15, 2021</span>\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Statistics.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Strain name\\tSignal peptide numbers\\tSecretory protein numbers\\tMembrane protein numbers\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@sig</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*_signalp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sig</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@sig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$sig</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+)_signalp/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$tmhmm</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sig</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/$str\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_TMHMM_SHORT.txt\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sig</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/$str\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".sigseq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$secretory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".secretory.faa\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$membrane</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".membrane.faa\"</span><span class=\"token punctuation\">;</span>\n\topen SEC<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$secretory\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen MEM<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$membrane\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$on</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span> <span class=\"token operator\">=</span> idseq<span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$tmhmm</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#\t\tprint $_ . \"\\n\";</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">eq</span> <span class=\"token string\">\"Topology=o\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$out</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> SEC <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$on</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> MEM <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose SEC<span class=\"token punctuation\">;</span>\n\tclose MEM<span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv $secretory $membrane $sig\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$on</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$str\\t$total\\t$out\\t$on\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nclose OUT<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\"><span class=\"token keyword\">sub</span> idseq</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl tmhmm_parser.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “c886” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li>\n<p><a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a></p>\n</li>\n</ul>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]}