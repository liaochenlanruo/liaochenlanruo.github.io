{"title":"SignalP+TMHMM预测微生物分泌蛋白","slug":"SignalP-TMHMM预测微生物分泌蛋白","date":"2021-10-14T01:09:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/SignalP-TMHMM预测微生物分泌蛋白.json","excerpt":null,"covers":["https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p>\n<p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的N 端有一般由15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度5-30个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的N-末端的氨基酸序列（有时不一定在N端）。<u>使用<strong>SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong>TMHMM</strong>注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p>\n<h1 id=\"软件-Software\"><a href=\"#软件-Software\" class=\"headerlink\" title=\"软件 Software\"></a><ruby>软件 <rt>Software</rt></ruby></h1><ul>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li><p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p>\n<ul>\n<li><p>Sec&#x2F;SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的“标准”分泌信号肽；<rt>“Standard” secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li><p>Sec&#x2F;SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li><p>Tat&#x2F;SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li><p>Tat&#x2F;SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li><p>Sec&#x2F;SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD&#x2F;PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD&#x2F;PibD).</rt></ruby></p>\n</li>\n<li><p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a></p>\n<ul>\n<li>用于预测蛋白质中的跨膜螺旋。</li>\n</ul>\n</li>\n<li><p>Python</p>\n</li>\n</ul>\n<p>SignalP和TMHMM对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h有效时间）。</p>\n<h1 id=\"软件安装-Installation-of-Softwares\"><a href=\"#软件安装-Installation-of-Softwares\" class=\"headerlink\" title=\"软件安装 Installation of Softwares\"></a><ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1><h2 id=\"安装SignalP-6-0\"><a href=\"#安装SignalP-6-0\" class=\"headerlink\" title=\"安装SignalP 6.0\"></a>安装SignalP 6.0</h2><ul>\n<li><p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“signalp-6.0.fast.tar.gz”。有两个模式可以选择——“slow_sequential”和“fast”。前者runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower；后者uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是fast模式。</p>\n</li>\n<li><p><ruby>安装 <rt>Installation</rt></ruby></p>\n<ul>\n<li><p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p>\n<ul>\n<li><p>Python</p>\n</li>\n<li><p>matplotlib&gt;3.3.2</p>\n</li>\n<li><p>numpy&gt;1.19.2</p>\n</li>\n<li><p>torch&gt;1.7.0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install torch</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>tqdm&gt;4.46.1</p>\n</li>\n</ul>\n</li>\n<li><p>安装SignalP 6.0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压缩安装文件</span></span><br><span class=\"line\">tar zxvf signalp-6.0.fast.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的软件目录，在终端运行</span></span><br><span class=\"line\">python setup.py install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试安装</span></span><br><span class=\"line\">signalp6 --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装TMHMM-V2-0c\"><a href=\"#安装TMHMM-V2-0c\" class=\"headerlink\" title=\"安装TMHMM V2.0c\"></a>安装TMHMM V2.0c</h2><ul>\n<li><p>下载</p>\n<p>  访问<a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“tmhmm-2.0c.Linux.tar.gz”。</p>\n</li>\n<li><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">tar zxvf tmhmm-2.0c.Linux.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> tmhmm-2.0c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span></span><br><span class=\"line\"><span class=\"built_in\">pwd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><font color=\"#FF0000\">运行错误</font></p>\n<p>运行软件时总报<code>Segmentation fault (core dumped)</code>错误，暂时无解。各位可以使用其<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">在线版</a>。</p>\n</li>\n</ul>\n<h1 id=\"软件用法-Usage\"><a href=\"#软件用法-Usage\" class=\"headerlink\" title=\"软件用法 Usage\"></a><ruby>软件用法 <rt>Usage</rt></ruby></h1><h2 id=\"SignalP-6-0\"><a href=\"#SignalP-6-0\" class=\"headerlink\" title=\"SignalP 6.0\"></a>SignalP 6.0</h2><h3 id=\"预测-Prediction\"><a href=\"#预测-Prediction\" class=\"headerlink\" title=\"预测 Prediction\"></a><ruby>预测 <rt>Prediction</rt></ruby></h3><p>A command takes the following form </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>fastafile</code> <ruby>输入文件为FASTA格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p>\n</li>\n<li><p><code>organism</code> is either <code>other</code> or <code>Eukarya</code>. Specifying <code>Eukarya</code> triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec&#x2F;SPI).</p>\n</li>\n<li><p><code>format</code> can take the values <code>txt</code>, <code>png</code>, <code>eps</code>, <code>all</code>. It defines what output files are created for individual sequences. <code>txt</code> produces a tabular <code>.gff</code> file with the per-position predictions for each sequence. <code>png</code>, <code>eps</code>, <code>all</code> additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p>\n</li>\n<li><p><code>mode</code> is either <code>fast</code>, <code>slow</code> or <code>slow-sequential</code>. Default is <code>fast</code>, which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster. <code>slow</code> runs the full model in parallel, which requires more than 14GB of RAM to be available. <code>slow-sequential</code> runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p>\n</li>\n</ul>\n<h3 id=\"输出-Outputs\"><a href=\"#输出-Outputs\" class=\"headerlink\" title=\"输出 Outputs\"></a><ruby>输出<rt> Outputs</rt></ruby></h3><ul>\n<li><p>output_dir&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"output.gff3\"></p>\n</li>\n<li><p>output_dir&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li><p>output_dir&#x2F;region_output.gff3：包含所有的信号肽区域信息。</p>\n<ul>\n<li><p>n-region: The n-terminal region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as N</p>\n</li>\n<li><p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as H</p>\n</li>\n<li><p>c-region: The c-terminal region of the signal peptide, reported for Sec&#x2F;SPI and Tat&#x2F;SPI.</p>\n</li>\n<li><p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p>\n</li>\n<li><p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p>\n</li>\n<li><p>Sec&#x2F;SPIII: These signal peptides have no known region structure.</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"region_output.gff3\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"批处理与结果优化\"><a href=\"#批处理与结果优化\" class=\"headerlink\" title=\"批处理与结果优化\"></a>批处理与结果优化</h3><p>脚本名：run_SignalP.pl</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 14, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IDNOSEQ, <span class=\"string\">&quot;&gt;IDNOSEQ.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">\t$_ =~ <span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.nodesc&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $sigseq = $1 . <span class=\"string\">&quot;.sigseq&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $outdir = $1 . <span class=\"string\">&quot;_signalp&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $_ || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"regexp\">/^(&gt;\\S+)/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $1 . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash = idse<span class=\"string\">q($out)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $gff = $outdir . <span class=\"string\">&quot;/output.gff3&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (! -z $gff) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$gff&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t&lt;IN&gt;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$sigseq&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$lines[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> IDNOSEQ $str . <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"string\">&quot;$lines[0]\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;rm $out&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv $sigseq $outdir&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IDNOSEQ;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">idseq</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($fasta) = @_;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $fasta || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header =~ <span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (%hash);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将run_SignalP.pl与后缀名为“.faa”的FASTA格式文件放在同一目录下，在终端中运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_SignalP.pl</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"结果解读Output-interpretation\"><a href=\"#结果解读Output-interpretation\" class=\"headerlink\" title=\"结果解读Output interpretation\"></a><ruby>结果解读<rt>Output interpretation</rt></ruby></h3><p>*代表输入文件的名字。</p>\n<ul>\n<li><p>*_signalp&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p>\n</li>\n<li><p>*_signalp&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li><p>*_signalp&#x2F;region_output.gff3：包含所有的信号肽区域信息;</p>\n</li>\n<li><p><strong>*_signalp&#x2F;*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作TMHMM的输入文件。</p>\n</li>\n</ul>\n<h2 id=\"TMHMM\"><a href=\"#TMHMM\" class=\"headerlink\" title=\"TMHMM\"></a>TMHMM</h2><h3 id=\"预测\"><a href=\"#预测\" class=\"headerlink\" title=\"预测\"></a>预测</h3><p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的“*_signalp&#x2F;*.sigseq”，将其上传至网页版<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a>，提交任务，等待结果即可。</p>\n<h3 id=\"结果展示\"><a href=\"#结果展示\" class=\"headerlink\" title=\"结果展示\"></a>结果展示</h3><p>TMHMM可以输出多种格式的结果文件，具体请参考其<a href=\"http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output\">官方说明</a>。</p>\n<p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在TMHMM网站提交任务\"></p>\n<ul>\n<li><p><strong>Long output format</strong></p>\n<ul>\n<li><p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li><p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p>\n</li>\n<li><p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li><p>Exp number, first 60 AAs：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li><p>Total prob of N-in：<ruby>N端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p>\n</li>\n<li><p>POSSIBLE N-term signal sequence：<ruby>当“Exp number, first 60 AAs”大于 10 时产生的警告。 <rt> A warning that is produced when “Exp number, first 60 AAs” is larger than 10.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li><p>蛋白F01_bin.1_00110共计436个氨基酸，有5个跨膜螺旋结构。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"含有跨膜结构的蛋白\"></p>\n</li>\n<li><p>蛋白F01_bin.1_00142共计557个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"不含跨膜结构的蛋白\"></p>\n</li>\n<li><p><strong>Short output format</strong></p>\n<ul>\n<li><p>“len&#x3D;”： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li><p>“ExpAA&#x3D;”：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li><p>“First60&#x3D;”：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li><p>“PredHel&#x3D;”：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p>\n</li>\n<li><p>“Topology&#x3D;”：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由“i”分隔，如果螺旋在外部，则由“o”分隔。’i7-29o44-66i87-109o’意味着它从膜内开始，在位置7到29有一个预测的TMH，30-43在膜外，然后是位置44-66的TMH。</p>\n</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Short output format\"></p>\n</li>\n</ul>\n<h3 id=\"结果汇总\"><a href=\"#结果汇总\" class=\"headerlink\" title=\"结果汇总\"></a>结果汇总</h3><p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong>run_SignalP.pl</strong>生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong>Statistics.txt</strong>中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp&#x2F;*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp&#x2F;*.membrane.faa</b>文件中。该过程将通过<strong>tmhmm_parser.pl</strong>完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 15, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;Statistics.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Strain name\\tSignal peptide numbers\\tSecretory protein numbers\\tMembrane protein numbers\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @sig = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*_signalp&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sig (@sig) &#123;</span><br><span class=\"line\">\t$sig=~<span class=\"regexp\">/(.+)_signalp/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $tmhmm = $sig . <span class=\"string\">&quot;/$str&quot;</span> . <span class=\"string\">&quot;_TMHMM_SHORT.txt&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $fasta = $sig . <span class=\"string\">&quot;/$str&quot;</span> . <span class=\"string\">&quot;.sigseq&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $secretory = $str . <span class=\"string\">&quot;.secretory.faa&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $membrane = $str . <span class=\"string\">&quot;.membrane.faa&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> SEC, <span class=\"string\">&quot;&gt;$secretory&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> MEM, <span class=\"string\">&quot;&gt;$membrane&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $on = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash = idse<span class=\"string\">q($fasta)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $tmhmm || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\"><span class=\"comment\">#\t\tprint $_ . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">5</span>] eq <span class=\"string\">&quot;Topology=o&quot;</span>) &#123;</span><br><span class=\"line\">\t\t\t$out++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> SEC <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t$on++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> MEM <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> SEC;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> MEM;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv $secretory $membrane $sig&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $total = $out + $on;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$str\\t$total\\t$out\\t$on\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">idseq</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($fasta) = @_;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $fasta || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header =~ <span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (%hash);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl tmhmm_parser.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“c886”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li><p><a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a></p>\n</li>\n</ul>\n","more":"<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p>\n<p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的N 端有一般由15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度5-30个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的N-末端的氨基酸序列（有时不一定在N端）。<u>使用<strong>SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong>TMHMM</strong>注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p>\n<h1 id=\"软件-Software\"><a href=\"#软件-Software\" class=\"headerlink\" title=\"软件 Software\"></a><ruby>软件 <rt>Software</rt></ruby></h1><ul>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li><p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p>\n<ul>\n<li><p>Sec&#x2F;SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的“标准”分泌信号肽；<rt>“Standard” secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li><p>Sec&#x2F;SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li><p>Tat&#x2F;SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li><p>Tat&#x2F;SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li><p>Sec&#x2F;SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD&#x2F;PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD&#x2F;PibD).</rt></ruby></p>\n</li>\n<li><p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a></p>\n<ul>\n<li>用于预测蛋白质中的跨膜螺旋。</li>\n</ul>\n</li>\n<li><p>Python</p>\n</li>\n</ul>\n<p>SignalP和TMHMM对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h有效时间）。</p>\n<h1 id=\"软件安装-Installation-of-Softwares\"><a href=\"#软件安装-Installation-of-Softwares\" class=\"headerlink\" title=\"软件安装 Installation of Softwares\"></a><ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1><h2 id=\"安装SignalP-6-0\"><a href=\"#安装SignalP-6-0\" class=\"headerlink\" title=\"安装SignalP 6.0\"></a>安装SignalP 6.0</h2><ul>\n<li><p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“signalp-6.0.fast.tar.gz”。有两个模式可以选择——“slow_sequential”和“fast”。前者runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower；后者uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是fast模式。</p>\n</li>\n<li><p><ruby>安装 <rt>Installation</rt></ruby></p>\n<ul>\n<li><p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p>\n<ul>\n<li><p>Python</p>\n</li>\n<li><p>matplotlib&gt;3.3.2</p>\n</li>\n<li><p>numpy&gt;1.19.2</p>\n</li>\n<li><p>torch&gt;1.7.0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install torch</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>tqdm&gt;4.46.1</p>\n</li>\n</ul>\n</li>\n<li><p>安装SignalP 6.0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压缩安装文件</span></span><br><span class=\"line\">tar zxvf signalp-6.0.fast.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的软件目录，在终端运行</span></span><br><span class=\"line\">python setup.py install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试安装</span></span><br><span class=\"line\">signalp6 --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装TMHMM-V2-0c\"><a href=\"#安装TMHMM-V2-0c\" class=\"headerlink\" title=\"安装TMHMM V2.0c\"></a>安装TMHMM V2.0c</h2><ul>\n<li><p>下载</p>\n<p>  访问<a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“tmhmm-2.0c.Linux.tar.gz”。</p>\n</li>\n<li><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">tar zxvf tmhmm-2.0c.Linux.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> tmhmm-2.0c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span></span><br><span class=\"line\"><span class=\"built_in\">pwd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><font color=\"#FF0000\">运行错误</font></p>\n<p>运行软件时总报<code>Segmentation fault (core dumped)</code>错误，暂时无解。各位可以使用其<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">在线版</a>。</p>\n</li>\n</ul>\n<h1 id=\"软件用法-Usage\"><a href=\"#软件用法-Usage\" class=\"headerlink\" title=\"软件用法 Usage\"></a><ruby>软件用法 <rt>Usage</rt></ruby></h1><h2 id=\"SignalP-6-0\"><a href=\"#SignalP-6-0\" class=\"headerlink\" title=\"SignalP 6.0\"></a>SignalP 6.0</h2><h3 id=\"预测-Prediction\"><a href=\"#预测-Prediction\" class=\"headerlink\" title=\"预测 Prediction\"></a><ruby>预测 <rt>Prediction</rt></ruby></h3><p>A command takes the following form </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>fastafile</code> <ruby>输入文件为FASTA格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p>\n</li>\n<li><p><code>organism</code> is either <code>other</code> or <code>Eukarya</code>. Specifying <code>Eukarya</code> triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec&#x2F;SPI).</p>\n</li>\n<li><p><code>format</code> can take the values <code>txt</code>, <code>png</code>, <code>eps</code>, <code>all</code>. It defines what output files are created for individual sequences. <code>txt</code> produces a tabular <code>.gff</code> file with the per-position predictions for each sequence. <code>png</code>, <code>eps</code>, <code>all</code> additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p>\n</li>\n<li><p><code>mode</code> is either <code>fast</code>, <code>slow</code> or <code>slow-sequential</code>. Default is <code>fast</code>, which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster. <code>slow</code> runs the full model in parallel, which requires more than 14GB of RAM to be available. <code>slow-sequential</code> runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p>\n</li>\n</ul>\n<h3 id=\"输出-Outputs\"><a href=\"#输出-Outputs\" class=\"headerlink\" title=\"输出 Outputs\"></a><ruby>输出<rt> Outputs</rt></ruby></h3><ul>\n<li><p>output_dir&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" alt=\"output.gff3\"></p>\n</li>\n<li><p>output_dir&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li><p>output_dir&#x2F;region_output.gff3：包含所有的信号肽区域信息。</p>\n<ul>\n<li><p>n-region: The n-terminal region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as N</p>\n</li>\n<li><p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as H</p>\n</li>\n<li><p>c-region: The c-terminal region of the signal peptide, reported for Sec&#x2F;SPI and Tat&#x2F;SPI.</p>\n</li>\n<li><p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p>\n</li>\n<li><p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p>\n</li>\n<li><p>Sec&#x2F;SPIII: These signal peptides have no known region structure.</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" alt=\"region_output.gff3\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"批处理与结果优化\"><a href=\"#批处理与结果优化\" class=\"headerlink\" title=\"批处理与结果优化\"></a>批处理与结果优化</h3><p>脚本名：run_SignalP.pl</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 14, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IDNOSEQ, <span class=\"string\">&quot;&gt;IDNOSEQ.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">\t$_ =~ <span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.nodesc&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $sigseq = $1 . <span class=\"string\">&quot;.sigseq&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $outdir = $1 . <span class=\"string\">&quot;_signalp&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $_ || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"regexp\">/^(&gt;\\S+)/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $1 . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash = idse<span class=\"string\">q($out)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $gff = $outdir . <span class=\"string\">&quot;/output.gff3&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (! -z $gff) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$gff&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t&lt;IN&gt;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$sigseq&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$lines[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> IDNOSEQ $str . <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"string\">&quot;$lines[0]\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;rm $out&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv $sigseq $outdir&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IDNOSEQ;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">idseq</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($fasta) = @_;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $fasta || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header =~ <span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (%hash);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将run_SignalP.pl与后缀名为“.faa”的FASTA格式文件放在同一目录下，在终端中运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_SignalP.pl</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"结果解读Output-interpretation\"><a href=\"#结果解读Output-interpretation\" class=\"headerlink\" title=\"结果解读Output interpretation\"></a><ruby>结果解读<rt>Output interpretation</rt></ruby></h3><p>*代表输入文件的名字。</p>\n<ul>\n<li><p>*_signalp&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p>\n</li>\n<li><p>*_signalp&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li><p>*_signalp&#x2F;region_output.gff3：包含所有的信号肽区域信息;</p>\n</li>\n<li><p><strong>*_signalp&#x2F;*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作TMHMM的输入文件。</p>\n</li>\n</ul>\n<h2 id=\"TMHMM\"><a href=\"#TMHMM\" class=\"headerlink\" title=\"TMHMM\"></a>TMHMM</h2><h3 id=\"预测\"><a href=\"#预测\" class=\"headerlink\" title=\"预测\"></a>预测</h3><p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的“*_signalp&#x2F;*.sigseq”，将其上传至网页版<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a>，提交任务，等待结果即可。</p>\n<h3 id=\"结果展示\"><a href=\"#结果展示\" class=\"headerlink\" title=\"结果展示\"></a>结果展示</h3><p>TMHMM可以输出多种格式的结果文件，具体请参考其<a href=\"http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output\">官方说明</a>。</p>\n<p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" alt=\"在TMHMM网站提交任务\"></p>\n<ul>\n<li><p><strong>Long output format</strong></p>\n<ul>\n<li><p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li><p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p>\n</li>\n<li><p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li><p>Exp number, first 60 AAs：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li><p>Total prob of N-in：<ruby>N端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p>\n</li>\n<li><p>POSSIBLE N-term signal sequence：<ruby>当“Exp number, first 60 AAs”大于 10 时产生的警告。 <rt> A warning that is produced when “Exp number, first 60 AAs” is larger than 10.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li><p>蛋白F01_bin.1_00110共计436个氨基酸，有5个跨膜螺旋结构。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" alt=\"含有跨膜结构的蛋白\"></p>\n</li>\n<li><p>蛋白F01_bin.1_00142共计557个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" alt=\"不含跨膜结构的蛋白\"></p>\n</li>\n<li><p><strong>Short output format</strong></p>\n<ul>\n<li><p>“len&#x3D;”： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li><p>“ExpAA&#x3D;”：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li><p>“First60&#x3D;”：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li><p>“PredHel&#x3D;”：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p>\n</li>\n<li><p>“Topology&#x3D;”：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由“i”分隔，如果螺旋在外部，则由“o”分隔。’i7-29o44-66i87-109o’意味着它从膜内开始，在位置7到29有一个预测的TMH，30-43在膜外，然后是位置44-66的TMH。</p>\n</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" alt=\"Short output format\"></p>\n</li>\n</ul>\n<h3 id=\"结果汇总\"><a href=\"#结果汇总\" class=\"headerlink\" title=\"结果汇总\"></a>结果汇总</h3><p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong>run_SignalP.pl</strong>生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong>Statistics.txt</strong>中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp&#x2F;*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp&#x2F;*.membrane.faa</b>文件中。该过程将通过<strong>tmhmm_parser.pl</strong>完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 15, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;Statistics.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Strain name\\tSignal peptide numbers\\tSecretory protein numbers\\tMembrane protein numbers\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @sig = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*_signalp&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sig (@sig) &#123;</span><br><span class=\"line\">\t$sig=~<span class=\"regexp\">/(.+)_signalp/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $tmhmm = $sig . <span class=\"string\">&quot;/$str&quot;</span> . <span class=\"string\">&quot;_TMHMM_SHORT.txt&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $fasta = $sig . <span class=\"string\">&quot;/$str&quot;</span> . <span class=\"string\">&quot;.sigseq&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $secretory = $str . <span class=\"string\">&quot;.secretory.faa&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $membrane = $str . <span class=\"string\">&quot;.membrane.faa&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> SEC, <span class=\"string\">&quot;&gt;$secretory&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> MEM, <span class=\"string\">&quot;&gt;$membrane&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $on = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash = idse<span class=\"string\">q($fasta)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $tmhmm || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\"><span class=\"comment\">#\t\tprint $_ . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">5</span>] eq <span class=\"string\">&quot;Topology=o&quot;</span>) &#123;</span><br><span class=\"line\">\t\t\t$out++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> SEC <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t$on++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> MEM <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> SEC;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> MEM;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv $secretory $membrane $sig&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $total = $out + $on;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$str\\t$total\\t$out\\t$on\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">idseq</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($fasta) = @_;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $fasta || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header =~ <span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (%hash);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl tmhmm_parser.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“c886”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li><p><a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a></p>\n</li>\n</ul>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]}