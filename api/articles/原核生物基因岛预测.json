{"title":"原核生物基因岛预测","slug":"原核生物基因岛预测","date":"2021-10-08T11:27:05.000Z","updated":"2022-01-08T02:16:28.434Z","comments":true,"path":"api/articles/原核生物基因岛预测.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"软件-software-needed\"><a class=\"markdownIt-Anchor\" href=\"#软件-software-needed\"></a> 软件 (Software needed)</h1>\n<ul>\n<li><a href=\"https://github.com/brinkmanlab/islandpath\">IslandPath-DIMOB</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"安装-installation\"><a class=\"markdownIt-Anchor\" href=\"#安装-installation\"></a> 安装 (Installation)</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token function\">install</span> islandpath\nconda <span class=\"token function\">install</span> perl-bioperl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"输入文件-input-files\"><a class=\"markdownIt-Anchor\" href=\"#输入文件-input-files\"></a> 输入文件 (Input Files)</h1>\n<ul>\n<li>GenBank (.gbk) or an embl (.embl) file</li>\n<li><font color='#ff0000'><strong>注意:</strong> 输入文件中只允许包含一条序列，否则会报错！(Please make sure you are running islandpath on a genbank file with only one contig)。</font>如果一个文件中含有多个序列，那么就要将其分割成为多个文件，然后逐个作为输入文件进行预测。切割方法见我的另一篇文章<a href=\"https://liaochenlanruo.github.io/post/d9f9.html\">按照 Contig 切割 GenBank 文件</a>。</li>\n</ul>\n<h1 id=\"运行软件-run\"><a class=\"markdownIt-Anchor\" href=\"#运行软件-run\"></a> 运行软件 (Run)</h1>\n<h2 id=\"常规运行\"><a class=\"markdownIt-Anchor\" href=\"#常规运行\"></a> 常规运行</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># gbk file</span>\nislandpath example/NC_003210.gbk NC_003210_GIs.txt\n\n<span class=\"token comment\"># embl file</span>\nislandpath example/NC_000913.embl NC_000913_GIs.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>输出结果如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"示例输出结果展示\" /></p>\n<h2 id=\"批处理\"><a class=\"markdownIt-Anchor\" href=\"#批处理\"></a> 批处理</h2>\n<p>在得到大量基因组的时候，手动提交并不像打游戏那样让人渴望敲击键盘和鼠标，为了避免烦躁，我们来写脚本 “run_islandpath.pl”，然后让机器做剩下的事情。该脚本可以实现 GenBank 文件的切割，基因岛预测，以及结果的整合，实现了 IslandPath-DIMOB 所无法完成的分析。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 8, 2021</span>\n\n<span class=\"token comment\"># Split GenBank files</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gbk</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 批处理所有后缀为.gbk的文件</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gbk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gbk/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"LOCUS\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/\\s+(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".gb\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$assession</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/ACCESSION.+/ACCESSION   $assession/g</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 添加ACCESSION number</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"LOCUS$_\"</span><span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token comment\"># predict Gene Islands</span>\n<span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gb</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gb/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".island\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"islandpath $_ $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Get features from GenBank files</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$gb</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@gb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$gb</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gb/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".list\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$seqin</span> <span class=\"token operator\">=</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token operator\">-></span>new<span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span>format <span class=\"token operator\">=></span> <span class=\"token string\">'genbank'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>file <span class=\"token operator\">=></span> <span class=\"token string\">\"$gb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$seq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seqin</span><span class=\"token operator\">-></span>next_seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sf</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>get_SeqFeatures <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>primary_tag <span class=\"token operator\">eq</span> <span class=\"token string\">'CDS'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@tags</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sf</span> <span class=\"token operator\">-></span>get_all_tags<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">#print join(\"\\t\", @tags) . \"\\n\";</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'locus_tag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>strand<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'translation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Parser the results</span>\n<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%gi</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%list</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%gif</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All_island.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Sequence IDs\tPredictor\tCategory\tGI Start\tGI End\t.\tStrand\t.\tIsland IDs\tGene IDs\tGene Start\tGene End\tStrand\tProducts\tProtein Sequences\\n\"</span><span class=\"token punctuation\">;</span>\nopen LIST<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All_island.list\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> LIST <span class=\"token string\">\"Island IDs\\tGI Start\\tGI End\\tGI Length\\tGene Number\\tGene IDs\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@GI</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.island\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@GI</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).island/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$list</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".list\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gilen</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$gif</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$gilen</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\topen GB<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$list\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;GB></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@line</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$ids</span> <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$start2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$end2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$gi</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\-/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$ids</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">$start2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token variable\">$end2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\tpush <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose GB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">print</span> LIST <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$gif</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> join <span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose LIST<span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 “run_islandpath.pl” 与 GenBank 文件放在同一目录下，在终端里运行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_islandpath.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果汇总于<strong> All_island.txt</strong> 和<strong> All_island.list</strong> 中，内容如下面二图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"All_island.txt\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"All_island.list\" /></p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “5324” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"软件-software-needed\"><a class=\"markdownIt-Anchor\" href=\"#软件-software-needed\"></a> 软件 (Software needed)</h1>\n<ul>\n<li><a href=\"https://github.com/brinkmanlab/islandpath\">IslandPath-DIMOB</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"安装-installation\"><a class=\"markdownIt-Anchor\" href=\"#安装-installation\"></a> 安装 (Installation)</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token function\">install</span> islandpath\nconda <span class=\"token function\">install</span> perl-bioperl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"输入文件-input-files\"><a class=\"markdownIt-Anchor\" href=\"#输入文件-input-files\"></a> 输入文件 (Input Files)</h1>\n<ul>\n<li>GenBank (.gbk) or an embl (.embl) file</li>\n<li><font color='#ff0000'><strong>注意:</strong> 输入文件中只允许包含一条序列，否则会报错！(Please make sure you are running islandpath on a genbank file with only one contig)。</font>如果一个文件中含有多个序列，那么就要将其分割成为多个文件，然后逐个作为输入文件进行预测。切割方法见我的另一篇文章<a href=\"https://liaochenlanruo.github.io/post/d9f9.html\">按照 Contig 切割 GenBank 文件</a>。</li>\n</ul>\n<h1 id=\"运行软件-run\"><a class=\"markdownIt-Anchor\" href=\"#运行软件-run\"></a> 运行软件 (Run)</h1>\n<h2 id=\"常规运行\"><a class=\"markdownIt-Anchor\" href=\"#常规运行\"></a> 常规运行</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># gbk file</span>\nislandpath example/NC_003210.gbk NC_003210_GIs.txt\n\n<span class=\"token comment\"># embl file</span>\nislandpath example/NC_000913.embl NC_000913_GIs.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>输出结果如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" alt=\"示例输出结果展示\" /></p>\n<h2 id=\"批处理\"><a class=\"markdownIt-Anchor\" href=\"#批处理\"></a> 批处理</h2>\n<p>在得到大量基因组的时候，手动提交并不像打游戏那样让人渴望敲击键盘和鼠标，为了避免烦躁，我们来写脚本 “run_islandpath.pl”，然后让机器做剩下的事情。该脚本可以实现 GenBank 文件的切割，基因岛预测，以及结果的整合，实现了 IslandPath-DIMOB 所无法完成的分析。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 8, 2021</span>\n\n<span class=\"token comment\"># Split GenBank files</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gbk</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 批处理所有后缀为.gbk的文件</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gbk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gbk/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"LOCUS\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/\\s+(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".gb\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$assession</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/ACCESSION.+/ACCESSION   $assession/g</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 添加ACCESSION number</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"LOCUS$_\"</span><span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token comment\"># predict Gene Islands</span>\n<span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gb</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gb/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".island\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"islandpath $_ $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Get features from GenBank files</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$gb</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@gb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$gb</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gb/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".list\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$seqin</span> <span class=\"token operator\">=</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token operator\">-></span>new<span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span>format <span class=\"token operator\">=></span> <span class=\"token string\">'genbank'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>file <span class=\"token operator\">=></span> <span class=\"token string\">\"$gb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$seq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seqin</span><span class=\"token operator\">-></span>next_seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sf</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>get_SeqFeatures <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>primary_tag <span class=\"token operator\">eq</span> <span class=\"token string\">'CDS'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@tags</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sf</span> <span class=\"token operator\">-></span>get_all_tags<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">#print join(\"\\t\", @tags) . \"\\n\";</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'locus_tag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>strand<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'translation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Parser the results</span>\n<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%gi</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%list</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%gif</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All_island.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Sequence IDs\tPredictor\tCategory\tGI Start\tGI End\t.\tStrand\t.\tIsland IDs\tGene IDs\tGene Start\tGene End\tStrand\tProducts\tProtein Sequences\\n\"</span><span class=\"token punctuation\">;</span>\nopen LIST<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All_island.list\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> LIST <span class=\"token string\">\"Island IDs\\tGI Start\\tGI End\\tGI Length\\tGene Number\\tGene IDs\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@GI</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.island\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@GI</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).island/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$list</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".list\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gilen</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$gif</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$gilen</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\topen GB<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$list\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;GB></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@line</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$ids</span> <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$start2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$end2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$gi</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\-/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$ids</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">$start2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token variable\">$end2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\tpush <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose GB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">print</span> LIST <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$gif</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> join <span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose LIST<span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 “run_islandpath.pl” 与 GenBank 文件放在同一目录下，在终端里运行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_islandpath.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果汇总于<strong> All_island.txt</strong> 和<strong> All_island.list</strong> 中，内容如下面二图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" alt=\"All_island.txt\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" alt=\"All_island.list\" /></p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “5324” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"基因岛","path":"api/tags/基因岛.json"}]}