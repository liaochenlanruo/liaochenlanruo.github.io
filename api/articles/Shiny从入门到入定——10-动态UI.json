{"title":"Shiny从入门到入定——10-动态UI","slug":"Shiny从入门到入定——10-动态UI","date":"2024-04-27T09:05:46.000Z","updated":"2024-04-27T09:19:58.639Z","comments":true,"path":"api/articles/Shiny从入门到入定——10-动态UI.json","excerpt":null,"covers":["https://d33wubrfki0l68.cloudfront.net/45d9b7c2dabd64a4597e370d2b84c0dc01cf8a2f/2dc99/demos/action-dynamic/update-basics-onload.png","https://d33wubrfki0l68.cloudfront.net/e5a1387f21bee28260731f6fb84991e188af5ec2/8cfbf/demos/action-dynamic/update-basics-max-increase.png","https://d33wubrfki0l68.cloudfront.net/fcca996a780ec2cbaf306e764a577649e6fdca4b/5ecfc/demos/action-dynamic/update-basics-min-decrease.png","https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/cc473/demos/action-dynamic/update-reset-onload.png","https://d33wubrfki0l68.cloudfront.net/b5061a18295fbec4f08dd399e32ce252d2ad6eb9/230d4/demos/action-dynamic/update-reset-set.png","https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/8c5f7/demos/action-dynamic/update-reset-reset.png","https://d33wubrfki0l68.cloudfront.net/f6604343f39fe08be631b06ddac37b2c00d73ea5/f636b/demos/action-dynamic/update-button-onload.png","https://d33wubrfki0l68.cloudfront.net/d65b9991e6b08e57700bf2cc8f5fafafe59ebc4e/03e2a/demos/action-dynamic/update-button-set1.png","https://d33wubrfki0l68.cloudfront.net/a2a75084db3d975c48dc56ef70eebd2906eae356/a924e/demos/action-dynamic/update-button-set100.png","https://d33wubrfki0l68.cloudfront.net/fe6c81ed4946e87b044fc7cc91b3bb05e4954043/7d64e/demos/action-dynamic/update-nested-territory.png","https://d33wubrfki0l68.cloudfront.net/d3a0d284501015f737373cc8e6f14b27a49de373/0e06a/demos/action-dynamic/update-nested-customername.png","https://d33wubrfki0l68.cloudfront.net/b0ae629ca1909719117abfce2d890db7bf379412/37026/demos/action-dynamic/update-nested-orders.png","https://d33wubrfki0l68.cloudfront.net/177d392d2358ae933be3c5ae9a78b2f076d8cce0/f34ae/demos/action-dynamic/dynamic-panels.png","https://d33wubrfki0l68.cloudfront.net/a4ab38457f2b2194dfd2a5e1792f1d38fff0b6dc/90b0c/demos/action-dynamic/dynamic-panels-panel2.png","https://d33wubrfki0l68.cloudfront.net/7dc90302d452a421cc68547265384f212c58db8f/0dc9c/demos/action-dynamic/dynamic-panels-panel3.png","https://d33wubrfki0l68.cloudfront.net/cce8beeaa545088bdba647ce61f6cb67f1eee04e/48a70/demos/action-dynamic/dynamic-conditional-normal.png","https://d33wubrfki0l68.cloudfront.net/d4e7bf3c6b1d72e2733aeaf06741ab542607e288/882f0/demos/action-dynamic/dynamic-conditional-uniform.png","https://d33wubrfki0l68.cloudfront.net/a5699032e1e6b89fcd6d2c87bcf2d8b616b82e8c/c0cb8/demos/action-dynamic/dynamic-conditional-exponential.png","https://d33wubrfki0l68.cloudfront.net/701f300df256124c9aa4cb5d9a6cb6245c7f70ce/e783b/demos/action-dynamic/wizard-1.png","https://d33wubrfki0l68.cloudfront.net/8b0644dfec78873a45545620af591b31323fa11c/c61f6/demos/action-dynamic/wizard-2.png","https://d33wubrfki0l68.cloudfront.net/9089ca7b0a519d51ae51c4991b26234561a41e67/18197/demos/action-dynamic/wizard-3.png","https://d33wubrfki0l68.cloudfront.net/c7a0fbee966861954422cd6a1d7fd4a39185ec9c/28819/demos/action-dynamic/render-simple-onload.png","https://d33wubrfki0l68.cloudfront.net/35b772f26ba5a178d1f693ce7de4b12c17a454f3/9cb14/demos/action-dynamic/render-simple-numeric.png","https://d33wubrfki0l68.cloudfront.net/d8a85a47b59618a13f336b7d9d0d7c705d2ef05e/9c957/demos/action-dynamic/render-simple-label.png","https://d33wubrfki0l68.cloudfront.net/5301c856f06d8eba2b98b4a7c4d3fedb574d7f11/76c4e/demos/action-dynamic/render-palette-onload.png","https://d33wubrfki0l68.cloudfront.net/6a2df96ad06c05e809774c0db7d7e3611ec9eb53/d31b7/demos/action-dynamic/render-palette-change-n.png","https://d33wubrfki0l68.cloudfront.net/cad6373c73a55bf6e79fc166e72dadf394b528e1/b0691/demos/action-dynamic/render-palette-set-cols.png","https://d33wubrfki0l68.cloudfront.net/cc1d6ffde1b8ac88f72e2b897ed187f55cecedf1/89026/demos/action-dynamic/render-palette-full-rainbow.png","https://d33wubrfki0l68.cloudfront.net/b1560598089d41fb8a7c71323c44efd7595ce615/b8927/demos/action-dynamic/render-palette-full-change-n.png","https://d33wubrfki0l68.cloudfront.net/c346538e80dd7b34a8142bdb05a537b44d581663/edd79/demos/action-dynamic/render-filter-1.png","https://d33wubrfki0l68.cloudfront.net/b5f7aa079010dea111f8cb50ff9ce875cef92b4a/4b175/demos/action-dynamic/render-filter-2.png","https://d33wubrfki0l68.cloudfront.net/539c4bcb59b7d52133c346ec6ca4a217e122e4df/9214d/demos/action-dynamic/filtering-final.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"10-动态UI\"><a href=\"#10-动态UI\" class=\"headerlink\" title=\"10 动态UI\"></a>10 动态UI</h1><p>到目前为止，我们已经看到了UI和server函数之间的清晰分离：用户界面在应用程序启动时静态定义，因此它无法对应用程序中发生的任何事情做出响应。在本章中，您将学习如何创建动态用户界面，通过server函数中运行的代码来更改UI。</p>\n<p>创建动态用户界面有三个关键技术：</p>\n<ul>\n<li>使用<code>update</code>系列的函数来修改输入控件的参数。</li>\n<li>使用<a href=\"https://rdrr.io/pkg/shiny/man/tabsetPanel.html\">tabsetPanel()</a>来有条件地显示和隐藏用户界面的部分。</li>\n<li>使用<a href=\"https://rdrr.io/pkg/shiny/man/htmlOutput.html\">uiOutput()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/renderUI.html\">renderUI()</a>通过代码生成用户界面的选定部分。</li>\n</ul>\n<p>这三个工具为您提供了相当强大的功能，通过修改输入和输出来响应用户。我将演示一些您可以应用它们的更有用的方式，但最终您的创造力是唯一的限制。同时，这些工具可能会使您的应用程序变得更难理解，因此请谨慎使用，并始终努力使用解决您问题的最简单技术。</p>\n<p>接下来是R代码库的加载部分：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">,</span> warn.conflicts <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-1-更新输入\"><a href=\"#10-1-更新输入\" class=\"headerlink\" title=\"10.1 更新输入\"></a>10.1 更新输入</h2><p>我们将从一个简单的技术开始，该技术允许您在创建后修改输入：<code>update</code>系列的函数。每个输入控件，例如<code>textInput()</code>，都配有一个更新函数，例如<code>updateTextInput()</code>，允许您在创建后修改该控件。</p>\n<p>请考虑以下代码示例，结果如<code>图10.1</code>所示。该应用程序有两个输入控件，它们控制另一个输入控件（滑块）的范围（最小值和最大值）。关键的想法是使用<a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a>来触发<a href=\"https://rdrr.io/pkg/shiny/man/updateSliderInput.html\">updateSliderInput()</a>，每当最小或最大输入发生变化时。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Minimum&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Maximum&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span><span class=\"built_in\">max</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> input<span class=\"operator\">$</span><span class=\"built_in\">max</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在这个例子中，<code>observeEvent()</code>监视<code>min</code>和<code>max</code>输入的变化，并在它们变化时调用<code>updateSliderInput()</code>来更新滑块的最小和最大值。<code>renderText()</code>用于在<code>textOutput()</code>控件中显示当前范围。</p>\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/45d9b7c2dabd64a4597e370d2b84c0dc01cf8a2f/2dc99/demos/action-dynamic/update-basics-onload.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/45d9b7c2dabd64a4597e370d2b84c0dc01cf8a2f/2dc99/demos/action-dynamic/update-basics-onload.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/e5a1387f21bee28260731f6fb84991e188af5ec2/8cfbf/demos/action-dynamic/update-basics-max-increase.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/e5a1387f21bee28260731f6fb84991e188af5ec2/8cfbf/demos/action-dynamic/update-basics-max-increase.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/fcca996a780ec2cbaf306e764a577649e6fdca4b/5ecfc/demos/action-dynamic/update-basics-min-decrease.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/fcca996a780ec2cbaf306e764a577649e6fdca4b/5ecfc/demos/action-dynamic/update-basics-min-decrease.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr>\n<td colspan=\"3\">图10.1 应用程序加载时的界面（左），增加最大值后的界面（中），然后减少最小值后的界面（右）。请访问 <a href=\"https://hadley.shinyapps.io/ms-update-basics\">https://hadley.shinyapps.io/ms-update-basics</a> 查看实时效果\n</td>\n</tr>\n</table>\n\n<p>更新函数与其他Shiny函数有些不同：它们都接受输入的名称（作为字符串）作为<code>inputId</code>参数。其余的参数对应于输入构造函数中可以在创建后修改的参数。</p>\n<p>为了帮助您掌握更新函数的使用，我将展示几个简单的示例，然后我们将深入探讨使用分层选择框的复杂案例研究，最后讨论循环引用的问题。</p>\n<h3 id=\"10-1-1-简单应用\"><a href=\"#10-1-1-简单应用\" class=\"headerlink\" title=\"10.1.1 简单应用\"></a>10.1.1 简单应用</h3><p>更新函数最简单的用法是为用户提供一些小的便利。例如，您可能希望轻松地将参数重置为其初始值。以下代码片段展示了如何结合使用<a href=\"https://rdrr.io/pkg/shiny/man/actionButton.html\">actionButton()</a>、<a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/updateSliderInput.html\">updateSliderInput()</a>，结果如<code>图10.2</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x1&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x2&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x3&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;reset&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Reset&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>reset<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;x1&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;x2&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;x3&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/cc473/demos/action-dynamic/update-reset-onload.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/cc473/demos/action-dynamic/update-reset-onload.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b5061a18295fbec4f08dd399e32ce252d2ad6eb9/230d4/demos/action-dynamic/update-reset-set.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/b5061a18295fbec4f08dd399e32ce252d2ad6eb9/230d4/demos/action-dynamic/update-reset-set.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/8c5f7/demos/action-dynamic/update-reset-reset.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/8c5f7/demos/action-dynamic/update-reset-reset.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.2 应用加载时（左图），拖动一些滑块后（中图），然后点击重置（右图）。在线查看地址：<a href=\"https://hadley.shinyapps.io/ms-update-reset\">https://hadley.shinyapps.io/ms-update-reset</a></td></tr>\n</table>\n\n<p>一个类似的应用是调整动作按钮的文本，以便你确切知道它将执行什么操作。图<code>10.3</code>展示了下面代码的结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Simulations&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;simulate&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Simulate&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    label <span class=\"operator\">&lt;-</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;Simulate &quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> <span class=\"string\">&quot; times&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateActionButton<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;simulate&quot;</span><span class=\"punctuation\">,</span> label <span class=\"operator\">=</span> label<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/f6604343f39fe08be631b06ddac37b2c00d73ea5/f636b/demos/action-dynamic/update-button-onload.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/f6604343f39fe08be631b06ddac37b2c00d73ea5/f636b/demos/action-dynamic/update-button-onload.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/d65b9991e6b08e57700bf2cc8f5fafafe59ebc4e/03e2a/demos/action-dynamic/update-button-set1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/d65b9991e6b08e57700bf2cc8f5fafafe59ebc4e/03e2a/demos/action-dynamic/update-button-set1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/a2a75084db3d975c48dc56ef70eebd2906eae356/a924e/demos/action-dynamic/update-button-set100.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/a2a75084db3d975c48dc56ef70eebd2906eae356/a924e/demos/action-dynamic/update-button-set100.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图 10.3 应用加载时（左），将模拟次数设置为 1（中），再将模拟次数设置为 100（右）。在线查看地址：<a href=\"https://hadley.shinyapps.io/ms-update-button\">https://hadley.shinyapps.io/ms-update-button</a></td></tr>\n</table>\n\n<p>有很多方法可以用这种方式使用更新函数；在开发复杂应用时，要注意找出向用户提供更多信息的方法。一个特别重要的应用是通过逐步筛选来简化从一长串可能选项中进行选择的过程。这通常是“分层选择框”的问题。</p>\n<h3 id=\"10-1-2-分层选择框\"><a href=\"#10-1-2-分层选择框\" class=\"headerlink\" title=\"10.1.2 分层选择框\"></a>10.1.2 分层选择框</h3><p>更新函数的一个更复杂但特别有用的应用是允许在多个类别之间进行交互式深入探索。我将用一个来自 <a href=\"https://www.kaggle.com/kyanyoga/sample-sales-data\">https://www.kaggle.com/kyanyoga/sample-sales-data</a> 的销售仪表板的虚拟数据来说明它们的使用方法。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sales <span class=\"operator\">&lt;-</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span><span class=\"string\">&quot;sales-dashboard/sales_data_sample.csv&quot;</span><span class=\"punctuation\">,</span> col_types <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> na <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">sales <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>TERRITORY<span class=\"punctuation\">,</span> CUSTOMERNAME<span class=\"punctuation\">,</span> ORDERNUMBER<span class=\"punctuation\">,</span> everything<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  arrange<span class=\"punctuation\">(</span>ORDERNUMBER<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 2,823 × 25</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;    TERRITORY CUSTOM…¹ ORDER…² QUANT…³ PRICE…⁴ ORDER…⁵ SALES ORDER…⁶ STATUS QTR_ID</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;    &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  1 NA        Online …   10100      30   100         3 5151  1/6/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  2 NA        Online …   10100      50    67.8       2 3390  1/6/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  3 NA        Online …   10100      22    86.5       4 1903. 1/6/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  4 NA        Online …   10100      49    34.5       1 1689. 1/6/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  5 EMEA      Blauer …   10101      25   100         4 3782  1/9/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  6 EMEA      Blauer …   10101      26   100         1 3773. 1/9/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  7 EMEA      Blauer …   10101      45    31.2       3 1404  1/9/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  8 EMEA      Blauer …   10101      46    53.8       2 2473. 1/9/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  9 NA        Vitachr…   10102      39   100         2 4808. 1/10/2… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 10 NA        Vitachr…   10102      41    50.1       1 2056. 1/10/2… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 2,813 more rows, 15 more variables: MONTH_ID &lt;dbl&gt;, YEAR_ID &lt;dbl&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   PRODUCTLINE &lt;chr&gt;, MSRP &lt;dbl&gt;, PRODUCTCODE &lt;chr&gt;, PHONE &lt;chr&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   ADDRESSLINE1 &lt;chr&gt;, ADDRESSLINE2 &lt;chr&gt;, CITY &lt;chr&gt;, STATE &lt;chr&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   POSTALCODE &lt;chr&gt;, COUNTRY &lt;chr&gt;, CONTACTLASTNAME &lt;chr&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   CONTACTFIRSTNAME &lt;chr&gt;, DEALSIZE &lt;chr&gt;, and abbreviated variable names</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   ¹​CUSTOMERNAME, ²​ORDERNUMBER, ³​QUANTITYORDERED, ⁴​PRICEEACH, ⁵​ORDERLINENUMBER,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   ⁶​ORDERDATE</span></span><br></pre></td></tr></table></figure>\n\n<p>在这个演示中，我将重点关注数据中的自然层次结构：</p>\n<ul>\n<li><p>每个区域包含客户。</p>\n</li>\n<li><p>每个客户有多个订单。</p>\n</li>\n<li><p>每个订单包含行。</p>\n</li>\n</ul>\n<p>我想创建一个用户界面，你可以：</p>\n<ul>\n<li><p>选择一个区域来查看所有客户。</p>\n</li>\n<li><p>选择一个客户来查看所有订单。</p>\n</li>\n<li><p>选择一个订单来查看底层行。</p>\n</li>\n</ul>\n<p>用户界面的核心是简单的：我将创建三个选择框和一个输出表格。<code>customername</code>和<code>ordernumber</code>选择框的选项将动态生成，因此我将设置<code>choices = NULL</code>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;territory&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Territory&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> unique<span class=\"punctuation\">(</span>sales<span class=\"operator\">$</span>TERRITORY<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;customername&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Customer&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;ordernumber&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Order number&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>在服务器函数中，我自上而下地工作：</p>\n<ol>\n<li><p>我创建了一个响应式对象 <code>territory()</code>，它包含与所选区域匹配的 <code>sales</code> 中的行。</p>\n</li>\n<li><p>每当 <code>territory()</code> 发生变化时，我都会更新 <code>input$customername</code> 选择框中的选项列表。</p>\n</li>\n<li><p>我创建了另一个响应式对象 <code>customer()</code>，它包含与所选客户匹配的 <code>territory()</code> 中的行。</p>\n</li>\n<li><p>每当 <code>customer()</code> 发生变化时，我都会更新 <code>input$ordernumber</code> 选择框中的选项列表。</p>\n</li>\n<li><p>我在 <code>output$data</code> 中显示所选订单。</p>\n</li>\n</ol>\n<p>你可以看到下面的组织结构：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  territory <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    filter<span class=\"punctuation\">(</span>sales<span class=\"punctuation\">,</span> TERRITORY <span class=\"operator\">==</span> input<span class=\"operator\">$</span>territory<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>territory<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    choices <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>territory<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">$</span>CUSTOMERNAME<span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;customername&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> choices<span class=\"punctuation\">)</span> </span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  customer <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>customername<span class=\"punctuation\">)</span></span><br><span class=\"line\">    filter<span class=\"punctuation\">(</span>territory<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> CUSTOMERNAME <span class=\"operator\">==</span> input<span class=\"operator\">$</span>customername<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>customer<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    choices <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>customer<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">$</span>ORDERNUMBER<span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;ordernumber&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> choices<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>ordernumber<span class=\"punctuation\">)</span></span><br><span class=\"line\">    customer<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      filter<span class=\"punctuation\">(</span>ORDERNUMBER <span class=\"operator\">==</span> input<span class=\"operator\">$</span>ordernumber<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      select<span class=\"punctuation\">(</span>QUANTITYORDERED<span class=\"punctuation\">,</span> PRICEEACH<span class=\"punctuation\">,</span> PRODUCTCODE<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/fe6c81ed4946e87b044fc7cc91b3bb05e4954043/7d64e/demos/action-dynamic/update-nested-territory.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/fe6c81ed4946e87b044fc7cc91b3bb05e4954043/7d64e/demos/action-dynamic/update-nested-territory.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/d3a0d284501015f737373cc8e6f14b27a49de373/0e06a/demos/action-dynamic/update-nested-customername.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/d3a0d284501015f737373cc8e6f14b27a49de373/0e06a/demos/action-dynamic/update-nested-customername.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b0ae629ca1909719117abfce2d890db7bf379412/37026/demos/action-dynamic/update-nested-orders.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/b0ae629ca1909719117abfce2d890db7bf379412/37026/demos/action-dynamic/update-nested-orders.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图 10.4 我选择“EMEA”（左），然后选择“Lyon Souveniers”（中），然后（右）查看订单。在线查看地址：<a href=\"https://hadley.shinyapps.io/ms-update-nested\">https://hadley.shinyapps.io/ms-update-nested</a></td></tr>\n</table>\n\n<p>你可以在 <a href=\"https://hadley.shinyapps.io/ms-update-nested\">https://hadley.shinyapps.io/ms-update-nested</a> 尝试这个简单的示例，或者在 <a href=\"https://github.com/hadley/mastering-shiny/tree/master/sales-dashboard\">https://github.com/hadley/mastering-shiny/tree/master/sales-dashboard</a> 查看一个更加完善的应用示例。</p>\n<h3 id=\"10-1-3-冻结响应式输入\"><a href=\"#10-1-3-冻结响应式输入\" class=\"headerlink\" title=\"10.1.3 冻结响应式输入\"></a>10.1.3 冻结响应式输入</h3><p>有时，这种分层选择会短暂地创建一个无效的输入集，导致出现不想要的输出闪烁。例如，考虑这个简单的应用，你首先选择一个数据集，然后选择要汇总的变量：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dataset&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Choose a dataset&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;pressure&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;cars&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Choose column&quot;</span><span class=\"punctuation\">,</span> character<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  verbatimTextOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;summary&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  dataset <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>get<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>summary <span class=\"operator\">&lt;-</span> renderPrint<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    summary<span class=\"punctuation\">(</span>dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>column<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你在 <a href=\"https://hadley.shinyapps.io/ms-freeze\">https://hadley.shinyapps.io/ms-freeze</a> 上尝试这个实时应用，你会注意到当你切换数据集时，摘要输出会短暂地闪烁。这是因为 <a href=\"https://rdrr.io/pkg/shiny/man/updateSelectInput.html\">updateSelectInput()</a> 只有在所有输出和观察者都运行之后才会生效，因此会暂时出现一个状态，即你拥有数据集 B 和来自数据集 A 的变量，因此输出会包含 <code>summary(NULL)</code>。</p>\n<p>你可以通过“freezing”输入值来解决这个问题，使用 <a href=\"https://rdrr.io/pkg/shiny/man/freezeReactiveValue.html\">freezeReactiveValue()</a>。这确保了任何使用输入的响应式对象或输出都不会更新，直到下一次完整的失效周期。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  dataset <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>get<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    freezeReactiveValue<span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>summary <span class=\"operator\">&lt;-</span> renderPrint<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    summary<span class=\"punctuation\">(</span>dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>column<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，你不需要“thaw”输入值；当 Shiny 检测到会话和服务器再次同步时，这会自动发生。</p>\n<p>你可能会好奇什么时候应该使用 <a href=\"https://rdrr.io/pkg/shiny/man/freezeReactiveValue.html\">freezeReactiveValue()</a>：实际上，当你动态更改输入值时，使用它总是一个好习惯。实际的修改需要一些时间才能流向浏览器，然后再返回给 Shiny，而在此期间，任何对该值的读取都可能是浪费的，在最坏的情况下可能导致错误。使用 <code>freezeReactiveValue()</code> 告诉所有下游计算，输入值是陈旧的，它们应该保存它们的努力，直到它变得有用。</p>\n<h3 id=\"10-1-4-循环引用\"><a href=\"#10-1-4-循环引用\" class=\"headerlink\" title=\"10.1.4 循环引用\"></a>10.1.4 循环引用</h3><p>如果你想使用 update 函数来改变输入的当前<code>value</code>，那么我们需要讨论一个重要的问题。从 Shiny 的角度来看，使用 update 函数来修改值与用户通过点击或输入来修改值没有区别。这意味着 update 函数可以像人类一样触发响应式更新。这意味着你现在已经超出了纯响应式编程的范围，你需要开始担心循环引用和无限循环的问题。</p>\n<p>例如，看看下面这个简单的应用。它包含一个输入控件和一个观察者，后者将其值加一并更新。每次运行 <a href=\"https://rdrr.io/pkg/shiny/man/updateNumericInput.html\">updateNumericInput()</a> 时，它都会更改 <code>input$n</code>，导致 <code>updateNumericInput()</code> 再次运行，因此应用陷入无限循环，持续增加 <code>input$n</code> 的值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span></span><br><span class=\"line\">    updateNumericInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> input<span class=\"operator\">$</span>n <span class=\"operator\">+</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>虽然你不太可能在自己的应用中创建这种显而易见的问题，但如果你在更新相互依赖的多个控件时，可能会遇到类似的问题，如下一个例子所示。</p>\n<h3 id=\"10-1-5-相互关联的输入\"><a href=\"#10-1-5-相互关联的输入\" class=\"headerlink\" title=\"10.1.5 相互关联的输入\"></a>10.1.5 相互关联的输入</h3><p>在应用中出现循环引用很容易发生在有多个“事实来源”时。例如，假设你想创建一个温度转换应用，用户既可以输入摄氏温度也可以输入华氏温度：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;temp_c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Celsius&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> step <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;temp_f&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Fahrenheit&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> step <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>temp_f<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">c</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">round</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>temp_f <span class=\"operator\">-</span> <span class=\"number\">32</span><span class=\"punctuation\">)</span> <span class=\"operator\">*</span> <span class=\"number\">5</span> <span class=\"operator\">/</span> <span class=\"number\">9</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateNumericInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;temp_c&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>temp_c<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    f <span class=\"operator\">&lt;-</span> <span class=\"built_in\">round</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>temp_c <span class=\"operator\">*</span> <span class=\"number\">9</span> <span class=\"operator\">/</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> <span class=\"number\">32</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateNumericInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;temp_f&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> f<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你尝试这个应用，<a href=\"https://hadley.shinyapps.io/ms-temperature\">https://hadley.shinyapps.io/ms-temperature</a>，你会发现它大部分时候可以正常工作，但你可能也会注意到它有时会触发多次更改。例如：</p>\n<ul>\n<li><p>将温度设为120华氏度，然后点击向下的箭头。</p>\n</li>\n<li><p>华氏度变为119，摄氏度更新为48。</p>\n</li>\n<li><p>48摄氏度转换为118华氏度，因此华氏度再次变为118。</p>\n</li>\n<li><p>幸运的是，118华氏度仍然是48摄氏度，所以更新在那里停止了。</p>\n</li>\n</ul>\n<p>这个问题没有解决办法，因为你在应用中有一个概念（温度），但有两个表达式（摄氏度和华氏度）。在这里我们很幸运，因为循环迅速收敛到一个同时满足两个约束的值。一般来说，除非你愿意非常仔细地分析你创建的底层动态系统的收敛性质，否则最好避免这种情况。</p>\n<h3 id=\"10-1-6-练习\"><a href=\"#10-1-6-练习\" class=\"headerlink\" title=\"10.1.6 练习\"></a>10.1.6 练习</h3><ol>\n<li><p>请在下面的用户界面中添加一个服务器函数，以更新<code>input$date</code>，这样你只能选择<code>input$year</code>中的日期。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;year&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;year&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">2020</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  dateInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;date&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;date&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>请在下面的用户界面中添加一个服务器函数，根据<code>input$state</code>更新<code>input$county</code>的选择。作为一个额外的挑战，请也将路易斯安那州的标签从“County”改为“Parish”，阿拉斯加州的标签改为“Borough”。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>openintro<span class=\"punctuation\">,</span> warn.conflicts <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Loading required package: airports</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Loading required package: cherryblossom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Loading required package: usdata</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Registered S3 methods overwritten by &#x27;readr&#x27;:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   method                    from </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   as.data.frame.spec_tbl_df vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   as_tibble.spec_tbl_df     vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   format.col_spec           vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   print.col_spec            vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   print.collector           vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   print.date_names          vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   print.locale              vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   str.col_spec              vroom</span></span><br><span class=\"line\">states <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>county<span class=\"operator\">$</span>state<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;state&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;State&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> states<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;county&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;County&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用服务器函数完善下面的用户界面，根据<code>input$continent</code>更新<code>input$country</code>的选择。使用<code>output$data</code>显示所有匹配的行。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>gapminder<span class=\"punctuation\">)</span></span><br><span class=\"line\">continents <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>gapminder<span class=\"operator\">$</span>continent<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;continent&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Continent&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> continents<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;country&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Country&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>扩展之前的应用，以便您还可以选择选择所有大洲，从而查看所有国家。您需要将<code>“(All)”</code>添加到选择列表中，然后在过滤时特殊处理它。</p>\n</li>\n<li><p>在<a href=\"https://community.rstudio.com/t/29307\">https://community.rstudio.com/t/29307</a>?上描述的问题的核心是什么？</p>\n</li>\n</ol>\n<h2 id=\"10-2-动态可见性\"><a href=\"#10-2-动态可见性\" class=\"headerlink\" title=\"10.2 动态可见性\"></a>10.2 动态可见性</h2><p>复杂性的下一步是有选择地显示和隐藏用户界面中的部分。如果您了解一些JavaScript和CSS，那么可以使用更复杂的方法，但有一种有用的技术不需要任何额外的知识：使用选项卡集（如在6.3.1节中介绍的）隐藏可选的用户界面。这是一种巧妙的技巧，允许您根据需要显示和隐藏用户界面，而无需从头开始重新生成它（您将在下一节中学到）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;controller&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Show&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">        id <span class=\"operator\">=</span> <span class=\"string\">&quot;switcher&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        type <span class=\"operator\">=</span> <span class=\"string\">&quot;hidden&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanelBody<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel 1 content&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanelBody<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel 2 content&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanelBody<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel 3 content&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>controller<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateTabsetPanel<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;switcher&quot;</span><span class=\"punctuation\">,</span> selected <span class=\"operator\">=</span> input<span class=\"operator\">$</span>controller<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/177d392d2358ae933be3c5ae9a78b2f076d8cce0/f34ae/demos/action-dynamic/dynamic-panels.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/177d392d2358ae933be3c5ae9a78b2f076d8cce0/f34ae/demos/action-dynamic/dynamic-panels.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/a4ab38457f2b2194dfd2a5e1792f1d38fff0b6dc/90b0c/demos/action-dynamic/dynamic-panels-panel2.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/a4ab38457f2b2194dfd2a5e1792f1d38fff0b6dc/90b0c/demos/action-dynamic/dynamic-panels-panel2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/7dc90302d452a421cc68547265384f212c58db8f/0dc9c/demos/action-dynamic/dynamic-panels-panel3.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/7dc90302d452a421cc68547265384f212c58db8f/0dc9c/demos/action-dynamic/dynamic-panels-panel3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.5 选择panel1（左），然后选择panel2（中），最后选择panel3（右）。查看实时效果请访问 <a href=\"https://hadley.shinyapps.io/ms-dynamic-panels\">https://hadley.shinyapps.io/ms-dynamic-panels</a></td></tr>\n</table>\n\n<p>这里主要有两个想法：</p>\n<ul>\n<li><p>使用带有隐藏选项卡的选项卡集面板。</p>\n</li>\n<li><p>使用<a href=\"https://rdrr.io/pkg/shiny/man/updateTabsetPanel.html\">updateTabsetPanel()</a>从服务器切换选项卡。</p>\n</li>\n</ul>\n<p>这是一个简单的想法，但结合一点创意，它将赋予你相当大的能力。接下来的两节将举例说明如何在实践中使用它的两个小例子。</p>\n<h3 id=\"10-2-1-条件用户界面\"><a href=\"#10-2-1-条件用户界面\" class=\"headerlink\" title=\"10.2.1 条件用户界面\"></a>10.2.1 条件用户界面</h3><p>想象一下，你想要一个应用，允许用户模拟正态分布、均匀分布和指数分布。每种分布都有不同的参数，因此我们需要某种方法来显示不同分布的不同控件。在这里，我将为每个分布的唯一用户界面放在它自己的<a href=\"https://rdrr.io/pkg/shiny/man/tabPanel.html\">tabPanel()</a>中，然后将三个选项卡组织成一个<a href=\"https://rdrr.io/pkg/shiny/man/tabsetPanel.html\">tabsetPanel()</a>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parameter_tabs <span class=\"operator\">&lt;-</span> tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">  id <span class=\"operator\">=</span> <span class=\"string\">&quot;params&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  type <span class=\"operator\">=</span> <span class=\"string\">&quot;hidden&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;normal&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;mean&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mean&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;sd&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;standard deviation&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;uniform&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;exponential&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;rate&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;rate&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，我将把这部分嵌入到一个更完整的用户界面中，允许用户选择样本数量，并显示结果的直方图：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dist&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Distribution&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">        choices <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;normal&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;uniform&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;exponential&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of samples&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      parameter_tabs<span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;hist&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，我已经仔细地将<code>input$dist</code>中的<code>choices</code>与选项卡面板的名称相匹配。这使得编写下面的<a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a>代码变得很容易，该代码会在分布变化时自动切换控件。该应用的其他部分使用了你已经熟悉的技术。最终结果如图10.6所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dist<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateTabsetPanel<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;params&quot;</span><span class=\"punctuation\">,</span> selected <span class=\"operator\">=</span> input<span class=\"operator\">$</span>dist<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\">  </span><br><span class=\"line\">  sample <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">switch</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dist<span class=\"punctuation\">,</span></span><br><span class=\"line\">      normal <span class=\"operator\">=</span> rnorm<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>mean<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>sd<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      uniform <span class=\"operator\">=</span> runif<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span><span class=\"built_in\">max</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      exponential <span class=\"operator\">=</span> rexp<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>rate<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>hist <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span>hist<span class=\"punctuation\">(</span>sample<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/cce8beeaa545088bdba647ce61f6cb67f1eee04e/48a70/demos/action-dynamic/dynamic-conditional-normal.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/cce8beeaa545088bdba647ce61f6cb67f1eee04e/48a70/demos/action-dynamic/dynamic-conditional-normal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/d4e7bf3c6b1d72e2733aeaf06741ab542607e288/882f0/demos/action-dynamic/dynamic-conditional-uniform.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/d4e7bf3c6b1d72e2733aeaf06741ab542607e288/882f0/demos/action-dynamic/dynamic-conditional-uniform.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/a5699032e1e6b89fcd6d2c87bcf2d8b616b82e8c/c0cb8/demos/action-dynamic/dynamic-conditional-exponential.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/a5699032e1e6b89fcd6d2c87bcf2d8b616b82e8c/c0cb8/demos/action-dynamic/dynamic-conditional-exponential.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.6 正态分布（左）、均匀分布（中）和指数分布（右）的结果。查看实时效果请访问 <a href=\"https://hadley.shinyapps.io/ms-dynamic-conditional\">https://hadley.shinyapps.io/ms-dynamic-conditional</a></td></tr>\n</table>\n\n<p>请注意，（例如）<code>input$mean</code>的值是否对用户可见是独立的。底层的HTML控件仍然存在；只是你看不到它。</p>\n<h3 id=\"10-2-2-向导界面\"><a href=\"#10-2-2-向导界面\" class=\"headerlink\" title=\"10.2.2 向导界面\"></a>10.2.2 向导界面</h3><p>你还可以使用这个想法来创建一个“wizard”，这是一种界面类型，通过将其分散到多个页面上，更容易收集大量信息。在这里，我们在每个“page”中嵌入动作按钮，使其易于向前和向后移动。结果如图10.7所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    id <span class=\"operator\">=</span> <span class=\"string\">&quot;wizard&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    type <span class=\"operator\">=</span> <span class=\"string\">&quot;hidden&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_1&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"string\">&quot;Welcome!&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_12&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;next&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_2&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"string\">&quot;Only one page to go&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_21&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;prev&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_23&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;next&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_3&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"string\">&quot;You&#x27;re done!&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_32&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;prev&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  switch_page <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>i<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateTabsetPanel<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;wizard&quot;</span><span class=\"punctuation\">,</span> selected <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_&quot;</span><span class=\"punctuation\">,</span> i<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>page_12<span class=\"punctuation\">,</span> switch_page<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>page_21<span class=\"punctuation\">,</span> switch_page<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>page_23<span class=\"punctuation\">,</span> switch_page<span class=\"punctuation\">(</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>page_32<span class=\"punctuation\">,</span> switch_page<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/701f300df256124c9aa4cb5d9a6cb6245c7f70ce/e783b/demos/action-dynamic/wizard-1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/701f300df256124c9aa4cb5d9a6cb6245c7f70ce/e783b/demos/action-dynamic/wizard-1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/8b0644dfec78873a45545620af591b31323fa11c/c61f6/demos/action-dynamic/wizard-2.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/8b0644dfec78873a45545620af591b31323fa11c/c61f6/demos/action-dynamic/wizard-2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/9089ca7b0a519d51ae51c4991b26234561a41e67/18197/demos/action-dynamic/wizard-3.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/9089ca7b0a519d51ae51c4991b26234561a41e67/18197/demos/action-dynamic/wizard-3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.7 向导界面将复杂的用户界面分割成多个页面。在这里，我们通过一个非常简单的示例来演示这个想法，点击“下一步”以进入下一页。查看实时效果请访问 <a href=\"https://hadley.shinyapps.io/ms-wizard\">https://hadley.shinyapps.io/ms-wizard</a></td></tr>\n</table>\n\n\n<p>请注意，使用<code>switch_page()</code>函数可以减少服务器代码中的重复量。我们将在第18章再次回到这个想法，然后在第<code>19.4.2</code>节中创建一个模块来自动化向导界面。</p>\n<h3 id=\"10-2-3-练习\"><a href=\"#10-2-3-练习\" class=\"headerlink\" title=\"10.2.3 练习\"></a>10.2.3 练习</h3><ol>\n<li><p>使用隐藏的选项卡集，仅当用户选中“advanced”复选框时才显示额外的控件。</p>\n</li>\n<li><p>创建一个应用，该应用绘制<code>ggplot(diamonds, aes(carat))</code>，但允许用户选择使用的geom：<a href=\"https://ggplot2.tidyverse.org/reference/geom_histogram.html\">geom_histogram()</a>、<a href=\"https://ggplot2.tidyverse.org/reference/geom_histogram.html\">geom_freqpoly()</a>或<a href=\"https://ggplot2.tidyverse.org/reference/geom_density.html\">geom_density()</a>。使用隐藏的选项卡集，允许用户根据geom选择不同的参数：<code>geom_histogram()</code>和<code>geom_freqpoly()</code>具有binwidth参数；<code>geom_density()</code>具有bw参数。</p>\n</li>\n<li><p>修改你在前一个练习中创建的应用，允许用户选择是否显示每个geom（即，而不是始终使用一个geom，他们可以选择0、1、2或3个）。确保你可以独立控制直方图和频率多边形的binwidth。</p>\n</li>\n</ol>\n<h2 id=\"10-3-使用代码创建用户界面\"><a href=\"#10-3-使用代码创建用户界面\" class=\"headerlink\" title=\"10.3 使用代码创建用户界面\"></a>10.3 使用代码创建用户界面</h2><p>有时，上面描述的技术无法提供您所需的动态性水平：更新函数只允许您更改现有的输入，而选项卡集仅在您具有固定且已知的可能组合集时才有效。有时，您需要根据其他输入创建不同类型的输入（或输出）或不同数量的输入（或输出）。这种最终技术使您能够这样做。</p>\n<p>值得注意的是，您一直使用代码创建用户界面，但到目前为止，您总是在应用启动之前这样做。这种技术使您能够在应用运行时创建和修改用户界面。这个解决方案有两个部分：</p>\n<ul>\n<li><p><a href=\"https://rdrr.io/pkg/shiny/man/htmlOutput.html\">uiOutput()</a> 在用户界面 (ui) 中插入一个占位符。这留下了一个“洞”，您的服务器代码稍后可以填充它。</p>\n</li>\n<li><p><a href=\"https://rdrr.io/pkg/shiny/man/renderUI.html\">renderUI()</a> 在 <code>server()</code> 中被调用，用于将占位符填充为动态生成的用户界面。</p>\n</li>\n</ul>\n<p>我们将通过一个简单的示例来了解这是如何工作的，然后深入探讨一些实际的应用。</p>\n<h3 id=\"10-3-1-入门\"><a href=\"#10-3-1-入门\" class=\"headerlink\" title=\"10.3.1 入门\"></a>10.3.1 入门</h3><p>让我们从一个简单的应用开始，该应用动态地创建输入控件，其类型和标签由另外两个输入控件控制。最终的应用如图<code>10.8</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;label&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;label&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;numeric&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;numeric&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>numeric <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>type <span class=\"operator\">==</span> <span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dynamic&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>label<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dynamic&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>label<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/c7a0fbee966861954422cd6a1d7fd4a39185ec9c/28819/demos/action-dynamic/render-simple-onload.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/c7a0fbee966861954422cd6a1d7fd4a39185ec9c/28819/demos/action-dynamic/render-simple-onload.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/35b772f26ba5a178d1f693ce7de4b12c17a454f3/9cb14/demos/action-dynamic/render-simple-numeric.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/35b772f26ba5a178d1f693ce7de4b12c17a454f3/9cb14/demos/action-dynamic/render-simple-numeric.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/d8a85a47b59618a13f336b7d9d0d7c705d2ef05e/9c957/demos/action-dynamic/render-simple-label.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/d8a85a47b59618a13f336b7d9d0d7c705d2ef05e/9c957/demos/action-dynamic/render-simple-label.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.8 应用加载时（左），然后将类型更改为数值（中），再将标签更改为“我的标签”。查看实时效果请访问 <a href=\"https://hadley.shinyapps.io/ms-render-simple\">https://hadley.shinyapps.io/ms-render-simple</a></td></tr>\n</table>\n\n<p>如果你自己运行这段代码，你会发现应用在加载后需要一段时间才能显示。这是因为它是响应式的：应用必须先加载，触发一个响应事件，然后调用服务器函数，生成要插入页面的HTML。这是<a href=\"https://rdrr.io/pkg/shiny/man/renderUI.html\">renderUI()</a>的一个缺点；过多地依赖它可能会导致用户界面出现延迟。为了获得良好的性能，请尽量使用本章前面描述的技术，保持用户界面的固定部分。</p>\n<p>这种方法还有一个问题：当你更改控件时，会丢失当前选定的值。在使用代码创建用户界面时，保留现有状态是一大挑战。这就是为什么如果适用，选择性显示和隐藏用户界面是更好的方法——因为你没有销毁和重新创建控件，所以不需要做任何事情来保留值。然而，在许多情况下，我们可以通过将新输入的值设置为现有控件的当前值来解决这个问题：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>numeric <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    value <span class=\"operator\">&lt;-</span> isolate<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dynamic<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>type <span class=\"operator\">==</span> <span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dynamic&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>label<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> value<span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dynamic&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>label<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> value<span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用 <a href=\"https://rdrr.io/pkg/shiny/man/isolate.html\">isolate()</a> 非常重要。我们将在 <code>15.4.1</code> 节中详细讨论它的作用，但在这里，它确保我们不会创建一个响应式依赖，导致每次 <code>input$dynamic</code> 发生变化时（每当用户修改值时都会发生）都重新运行此代码。我们只希望在 <code>input$type</code> 或 <code>input$label</code> 发生变化时更改它。</p>\n<h3 id=\"10-3-2-多个控件\"><a href=\"#10-3-2-多个控件\" class=\"headerlink\" title=\"10.3.2 多个控件\"></a>10.3.2 多个控件</h3><p>当你需要生成任意数量或类型的控件时，动态用户界面（UI）最有用。这意味着你将使用代码生成用户界面，我建议使用函数式编程来完成此类任务。在这里，我将使用 <a href=\"https://purrr.tidyverse.org/reference/map.html\">purrr::map()</a> 和 <a href=\"https://purrr.tidyverse.org/reference/reduce.html\">purrr::reduce()</a>，但你也可以使用基础的 <a href=\"https://rdrr.io/r/base/lapply.html\">lapply()</a> 和 <a href=\"https://rdrr.io/r/base/funprog.html\">Reduce()</a> 函数来实现同样的效果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>purrr<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你不熟悉函数式编程中的 <a href=\"https://purrr.tidyverse.org/reference/map.html\">map()</a> 和 <code>reduce()</code>，你可能希望在继续之前先阅读有关<a href=\"https://adv-r.hadley.nz/functionals.html\">Functional programming</a>的内容。我们也将在第 <code>18</code> 章中再次讨论这个想法。这些想法相当复杂，所以如果你在第一次阅读时没有理解，请不要担心。</p>\n<p>为了具体说明，想象一下你想要用户能够提供自己的颜色调色板。他们首先会指定他们想要的颜色的数量，然后为每个颜色提供一个值。用户界面相当简单：我们有一个 <a href=\"https://rdrr.io/pkg/shiny/man/numericInput.html\">numericInput()</a> 来控制输入的数量，一个 <a href=\"https://rdrr.io/pkg/shiny/man/htmlOutput.html\">uiOutput()</a> 用于放置生成的文本框，以及一个 <a href=\"https://rdrr.io/pkg/shiny/man/textOutput.html\">textOutput()</a> 来证明我们已经正确地将所有内容连接在一起。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of colours&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;col&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;palette&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>服务器函数很短，但包含了一些重要的想法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  col_names <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;col&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">seq_len</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>col <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    map<span class=\"punctuation\">(</span>col_names<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> textInput<span class=\"punctuation\">(</span>.x<span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>palette <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    map_chr<span class=\"punctuation\">(</span>col_names<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">%||%</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>我使用了一个响应式对象 <code>col_names()</code> 来存储即将生成的每个颜色输入的名称。</p>\n</li>\n<li><p>然后，我使用 <code>map()</code> 创建一个 <code>textInput()</code> 列表，每个列表项对应 <code>col_names()</code> 中的一个名称。<code>renderUI()</code> 随后将这个 HTML 组件列表添加到用户界面。</p>\n</li>\n<li><p>我需要使用一个新技巧来访问输入值。到目前为止，我们总是使用 <code>$</code> 来访问输入的组件，例如 <code>input$col1</code>。但在这里，我们的输入名称存储在一个字符向量中，比如 <code>var &lt;- &quot;col1&quot;</code>。在这种情况下，<code>$</code> 不再适用，因此我们需要切换到 <code>[[</code>，即 <code>input[[var]]</code>。</p>\n</li>\n<li><p>我使用 <a href=\"https://purrr.tidyverse.org/reference/map.html\">map_chr()</a> 将所有值收集到一个字符向量中，并在 <code>output$palette</code> 中显示。不幸的是，在浏览器渲染新输入之前，有一个短暂的时间段，其值会是 <code>NULL</code>。这会导致 <code>map_chr()</code> 报错，我们使用方便的 <code>%||%</code> 函数来解决这个问题：当左侧为 <code>NULL</code> 时，它返回右侧的值。</p>\n</li>\n</ul>\n<p>你可以在图 <code>10.9</code> 中看到结果。</p>\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/5301c856f06d8eba2b98b4a7c4d3fedb574d7f11/76c4e/demos/action-dynamic/render-palette-onload.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/5301c856f06d8eba2b98b4a7c4d3fedb574d7f11/76c4e/demos/action-dynamic/render-palette-onload.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/6a2df96ad06c05e809774c0db7d7e3611ec9eb53/d31b7/demos/action-dynamic/render-palette-change-n.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/6a2df96ad06c05e809774c0db7d7e3611ec9eb53/d31b7/demos/action-dynamic/render-palette-change-n.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/cad6373c73a55bf6e79fc166e72dadf394b528e1/b0691/demos/action-dynamic/render-palette-set-cols.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/cad6373c73a55bf6e79fc166e72dadf394b528e1/b0691/demos/action-dynamic/render-palette-set-cols.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.9 应用程序加载时（左），将n设置为3后（中），然后输入一些颜色（右）。请在<a href=\"https://hadley.shinyapps.io/ms-render-palette\">https://hadley.shinyapps.io/ms-render-palette</a>查看实时效果</td></tr>\n</table>\n\n<p>如果你运行这个应用程序，你会发现一个非常恼人的行为：每当你改变颜色的数量时，所有输入的数据都会消失。我们可以使用与之前相同的技术来解决这个问题：将<code>value</code>设置为（孤立的）当前值。我还会稍微调整外观，使其看起来更漂亮一些，包括在图中显示所选颜色。示例截图如图<code>10.10</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of colours&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;col&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  col_names <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;col&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">seq_len</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>col <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    map<span class=\"punctuation\">(</span>col_names<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> textInput<span class=\"punctuation\">(</span>.x<span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> isolate<span class=\"punctuation\">(</span>input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    cols <span class=\"operator\">&lt;-</span> map_chr<span class=\"punctuation\">(</span>col_names<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">%||%</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"comment\"># convert empty inputs to transparent</span></span><br><span class=\"line\">    cols<span class=\"punctuation\">[</span>cols <span class=\"operator\">==</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> <span class=\"literal\">NA</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    barplot<span class=\"punctuation\">(</span></span><br><span class=\"line\">      <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"built_in\">length</span><span class=\"punctuation\">(</span>cols<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      col <span class=\"operator\">=</span> cols<span class=\"punctuation\">,</span></span><br><span class=\"line\">      space <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      axes <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/cc1d6ffde1b8ac88f72e2b897ed187f55cecedf1/89026/demos/action-dynamic/render-palette-full-rainbow.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/cc1d6ffde1b8ac88f72e2b897ed187f55cecedf1/89026/demos/action-dynamic/render-palette-full-rainbow.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b1560598089d41fb8a7c71323c44efd7595ce615/b8927/demos/action-dynamic/render-palette-full-change-n.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/b1560598089d41fb8a7c71323c44efd7595ce615/b8927/demos/action-dynamic/render-palette-full-change-n.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\">\n</td>\n</tr>\n<tr><td colspan=\"2\">图10.10 填写彩虹的颜色（左），然后将颜色数量减少到3（右）；请注意，现有颜色被保留。实时效果请访问<a href=\"https://hadley.shinyapps.io/ms-render-palette-full\">https://hadley.shinyapps.io/ms-render-palette-full</a>查看实时效果</td></tr>\n</table>\n\n<h3 id=\"10-3-3-动态过滤\"><a href=\"#10-3-3-动态过滤\" class=\"headerlink\" title=\"10.3.3 动态过滤\"></a>10.3.3 动态过滤</h3><p>为了结束本章，我将创建一个应用程序，允许你动态过滤任何数据框。每个数值变量都会得到一个范围滑块，每个因子变量都会得到一个多选控件，所以（例如）如果一个数据框有三个数值变量和两个因子，应用程序将有三个滑块和两个选择框。</p>\n<p>我将从一个为单个变量创建用户界面的函数开始。对于数值输入，它将返回一个范围滑块；对于因子输入，它将返回一个多选控件；对于其他所有类型，它将返回NULL（无）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make_ui <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> var<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"built_in\">is.numeric</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    rng <span class=\"operator\">&lt;-</span> <span class=\"built_in\">range</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    sliderInput<span class=\"punctuation\">(</span>var<span class=\"punctuation\">,</span> var<span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> rng<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> rng<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> rng<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>is.factor<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    levs <span class=\"operator\">&lt;-</span> levels<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span></span><br><span class=\"line\">    selectInput<span class=\"punctuation\">(</span>var<span class=\"punctuation\">,</span> var<span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> levs<span class=\"punctuation\">,</span> selected <span class=\"operator\">=</span> levs<span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\"># Not supported</span></span><br><span class=\"line\">    <span class=\"literal\">NULL</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>接着，我将编写此函数的服务器端等效项：它接收输入控件的变量和值，并返回一个逻辑向量，说明是否包含每个观测值。使用逻辑向量可以轻松组合来自多个列的结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter_var <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> val<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"built_in\">is.numeric</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> <span class=\"operator\">&amp;</span> x <span class=\"operator\">&gt;=</span> val<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span> <span class=\"operator\">&amp;</span> x <span class=\"operator\">&lt;=</span> val<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>is.factor<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    x <span class=\"operator\">%in%</span> val</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\"># No control, so don&#x27;t filter</span></span><br><span class=\"line\">    <span class=\"literal\">TRUE</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，我可以手动使用这些函数为 <code>iris</code> 数据集生成一个简单的过滤用户界面：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      make_ui<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Length<span class=\"punctuation\">,</span> <span class=\"string\">&quot;Sepal.Length&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      make_ui<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Width<span class=\"punctuation\">,</span> <span class=\"string\">&quot;Sepal.Width&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      make_ui<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Species<span class=\"punctuation\">,</span> <span class=\"string\">&quot;Species&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  selected <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    filter_var<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Length<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>Sepal.Length<span class=\"punctuation\">)</span> <span class=\"operator\">&amp;</span></span><br><span class=\"line\">      filter_var<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Width<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>Sepal.Width<span class=\"punctuation\">)</span> <span class=\"operator\">&amp;</span></span><br><span class=\"line\">      filter_var<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Species<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>Species<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">[</span>selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/c346538e80dd7b34a8142bdb05a537b44d581663/edd79/demos/action-dynamic/render-filter-1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/c346538e80dd7b34a8142bdb05a537b44d581663/edd79/demos/action-dynamic/render-filter-1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图10.11 iris数据集的简单过滤界面\"></p>\n<p>你可能注意到了，我已经厌倦了复制粘贴，所以这个应用程序只适用于三列。通过使用一些函数式编程，我可以让它适用于所有列：</p>\n<ul>\n<li><p>在<code>ui</code>中，使用<a href=\"https://purrr.tidyverse.org/reference/map.html\">map()</a>为每个变量生成一个控件。</p>\n</li>\n<li><p>在<code>server()</code>，我使用<code>map()</code>为每个变量生成选择向量。然后，我使用<code>reduce()</code>将每个变量的逻辑向量组合成一个单一的逻辑向量，通过<code>&amp;</code>将每个向量连接在一起。</p>\n</li>\n</ul>\n<p>再次强调，如果你不完全理解这里发生了什么，请不要太过担心。主要的收获是，一旦你掌握了函数式编程，你就可以编写非常简洁的代码，从而生成复杂且动态的应用程序。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      map<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> make_ui<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> .x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  selected <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    each_var <span class=\"operator\">&lt;-</span> map<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> filter_var<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    reduce<span class=\"punctuation\">(</span>each_var<span class=\"punctuation\">,</span> <span class=\"operator\">~</span> .x <span class=\"operator\">&amp;</span> .y<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">[</span>selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/b5f7aa079010dea111f8cb50ff9ce875cef92b4a/4b175/demos/action-dynamic/render-filter-2.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/b5f7aa079010dea111f8cb50ff9ce875cef92b4a/4b175/demos/action-dynamic/render-filter-2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图10.12 使用函数式编程为iris数据集构建过滤应用程序\"></p>\n<p>从此处开始，对其进行简单泛化，使其可以与任何数据框配合使用。在此，我将使用datasets包中的数据框进行说明，但你可以很容易地想象如何将其扩展到用户上传的数据。结果如图<code>10.13</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dfs <span class=\"operator\">&lt;-</span> keep<span class=\"punctuation\">(</span>ls<span class=\"punctuation\">(</span><span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> is.data.frame<span class=\"punctuation\">(</span>get<span class=\"punctuation\">(</span>.x<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dataset&quot;</span><span class=\"punctuation\">,</span> label <span class=\"operator\">=</span> <span class=\"string\">&quot;Dataset&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> dfs<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;filter&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    get<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  vars <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>filter <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span></span><br><span class=\"line\">    map<span class=\"punctuation\">(</span>vars<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> make_ui<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> .x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  selected <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    each_var <span class=\"operator\">&lt;-</span> map<span class=\"punctuation\">(</span>vars<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> filter_var<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    reduce<span class=\"punctuation\">(</span>each_var<span class=\"punctuation\">,</span> `&amp;`<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span>selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/539c4bcb59b7d52133c346ec6ca4a217e122e4df/9214d/demos/action-dynamic/filtering-final.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/539c4bcb59b7d52133c346ec6ca4a217e122e4df/9214d/demos/action-dynamic/filtering-final.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图10.13 根据所选数据集的字段自动生成的动态用户界面。请访问https://hadley.shinyapps.io/ms-filtering-final查看实时效果\"></p>\n<h3 id=\"10-3-4-对话框\"><a href=\"#10-3-4-对话框\" class=\"headerlink\" title=\"10.3.4 对话框\"></a>10.3.4 对话框</h3><p>在结束本章之前，我想提一下一个相关的技术：对话框。在<code>8.4.1</code>节中，你已经看到了对话框，其内容是固定的文本字符串。但由于<a href=\"https://rdrr.io/pkg/shiny/man/modalDialog.html\">modalDialog()</a>是在服务器函数中调用的，因此你可以像<a href=\"https://rdrr.io/pkg/shiny/man/renderUI.html\">renderUI()</a>一样动态地生成内容。如果你想在继续常规应用程序流程之前强制用户做出某些决定，这是一个很有用的技术。</p>\n<h3 id=\"10-3-5-练习\"><a href=\"#10-3-5-练习\" class=\"headerlink\" title=\"10.3.5 练习\"></a>10.3.5 练习</h3><ol>\n<li><p>根据本节中的初始示例，创建一个非常简单的应用程序：</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;numeric&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;numeric&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>numeric <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>type <span class=\"operator\">==</span> <span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p> 你如何使用动态可见性来实现它？如果你实现了动态可见性，当你更改控件时，如何保持值的同步？</p>\n</li>\n<li><p>解释这个应用程序是如何工作的。为什么当你第二次点击“输入密码”按钮时，密码会消失？</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;go&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Enter password&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;text&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>go<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    showModal<span class=\"punctuation\">(</span>modalDialog<span class=\"punctuation\">(</span></span><br><span class=\"line\">      passwordInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;password&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      title <span class=\"operator\">=</span> <span class=\"string\">&quot;Please enter your password&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  output<span class=\"operator\">$</span>text <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>isTruthy<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>password<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;No password&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;Password entered&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在·10.3.1·节的应用程序中，如果你从<code>value &lt;- isolate(input$dynamic)</code>中去掉<a href=\"https://rdrr.io/pkg/shiny/man/isolate.html\">isolate()</a>会发生什么？</p>\n</li>\n<li><p>为<code>make_ui()</code>和<code>filter_var()</code>添加对日期和日期时间列的支持。</p>\n</li>\n<li><p>（高级）如果你了解S3面向对象编程（<a href=\"http://adv-r.hadley.nz/S3.html\">S3 OOP</a>）系统，请考虑如何使用通用函数替换<code>make_ui()</code>和<code>filter_var()</code>中的if块。</p>\n</li>\n</ol>\n<h2 id=\"10-4-总结\"><a href=\"#10-4-总结\" class=\"headerlink\" title=\"10.4 总结\"></a>10.4 总结</h2><p>在阅读本章之前，你只能在服务器函数运行之前静态地创建用户界面。现在你已经学会了如何根据用户操作修改用户界面并完全重新创建它。动态用户界面将极大地增加你的应用程序的复杂性，所以如果你发现自己很难调试正在发生的事情，不要感到惊讶。始终记住使用最简单的技术来解决你的问题，并回到<code>5.2</code>节中的调试建议。</p>\n<p>下一章将转向讨论书签功能，使应用程序能够与他人共享当前状态。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"10-动态UI\"><a href=\"#10-动态UI\" class=\"headerlink\" title=\"10 动态UI\"></a>10 动态UI</h1><p>到目前为止，我们已经看到了UI和server函数之间的清晰分离：用户界面在应用程序启动时静态定义，因此它无法对应用程序中发生的任何事情做出响应。在本章中，您将学习如何创建动态用户界面，通过server函数中运行的代码来更改UI。</p>\n<p>创建动态用户界面有三个关键技术：</p>\n<ul>\n<li>使用<code>update</code>系列的函数来修改输入控件的参数。</li>\n<li>使用<a href=\"https://rdrr.io/pkg/shiny/man/tabsetPanel.html\">tabsetPanel()</a>来有条件地显示和隐藏用户界面的部分。</li>\n<li>使用<a href=\"https://rdrr.io/pkg/shiny/man/htmlOutput.html\">uiOutput()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/renderUI.html\">renderUI()</a>通过代码生成用户界面的选定部分。</li>\n</ul>\n<p>这三个工具为您提供了相当强大的功能，通过修改输入和输出来响应用户。我将演示一些您可以应用它们的更有用的方式，但最终您的创造力是唯一的限制。同时，这些工具可能会使您的应用程序变得更难理解，因此请谨慎使用，并始终努力使用解决您问题的最简单技术。</p>\n<p>接下来是R代码库的加载部分：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">,</span> warn.conflicts <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-1-更新输入\"><a href=\"#10-1-更新输入\" class=\"headerlink\" title=\"10.1 更新输入\"></a>10.1 更新输入</h2><p>我们将从一个简单的技术开始，该技术允许您在创建后修改输入：<code>update</code>系列的函数。每个输入控件，例如<code>textInput()</code>，都配有一个更新函数，例如<code>updateTextInput()</code>，允许您在创建后修改该控件。</p>\n<p>请考虑以下代码示例，结果如<code>图10.1</code>所示。该应用程序有两个输入控件，它们控制另一个输入控件（滑块）的范围（最小值和最大值）。关键的想法是使用<a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a>来触发<a href=\"https://rdrr.io/pkg/shiny/man/updateSliderInput.html\">updateSliderInput()</a>，每当最小或最大输入发生变化时。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Minimum&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Maximum&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span><span class=\"built_in\">max</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> input<span class=\"operator\">$</span><span class=\"built_in\">max</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在这个例子中，<code>observeEvent()</code>监视<code>min</code>和<code>max</code>输入的变化，并在它们变化时调用<code>updateSliderInput()</code>来更新滑块的最小和最大值。<code>renderText()</code>用于在<code>textOutput()</code>控件中显示当前范围。</p>\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/45d9b7c2dabd64a4597e370d2b84c0dc01cf8a2f/2dc99/demos/action-dynamic/update-basics-onload.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/e5a1387f21bee28260731f6fb84991e188af5ec2/8cfbf/demos/action-dynamic/update-basics-max-increase.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/fcca996a780ec2cbaf306e764a577649e6fdca4b/5ecfc/demos/action-dynamic/update-basics-min-decrease.png\">\n</td>\n</tr>\n<tr>\n<td colspan=\"3\">图10.1 应用程序加载时的界面（左），增加最大值后的界面（中），然后减少最小值后的界面（右）。请访问 <a href=\"https://hadley.shinyapps.io/ms-update-basics\">https://hadley.shinyapps.io/ms-update-basics</a> 查看实时效果\n</td>\n</tr>\n</table>\n\n<p>更新函数与其他Shiny函数有些不同：它们都接受输入的名称（作为字符串）作为<code>inputId</code>参数。其余的参数对应于输入构造函数中可以在创建后修改的参数。</p>\n<p>为了帮助您掌握更新函数的使用，我将展示几个简单的示例，然后我们将深入探讨使用分层选择框的复杂案例研究，最后讨论循环引用的问题。</p>\n<h3 id=\"10-1-1-简单应用\"><a href=\"#10-1-1-简单应用\" class=\"headerlink\" title=\"10.1.1 简单应用\"></a>10.1.1 简单应用</h3><p>更新函数最简单的用法是为用户提供一些小的便利。例如，您可能希望轻松地将参数重置为其初始值。以下代码片段展示了如何结合使用<a href=\"https://rdrr.io/pkg/shiny/man/actionButton.html\">actionButton()</a>、<a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/updateSliderInput.html\">updateSliderInput()</a>，结果如<code>图10.2</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x1&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x2&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x3&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;reset&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Reset&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>reset<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;x1&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;x2&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;x3&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/cc473/demos/action-dynamic/update-reset-onload.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b5061a18295fbec4f08dd399e32ce252d2ad6eb9/230d4/demos/action-dynamic/update-reset-set.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/8c5f7/demos/action-dynamic/update-reset-reset.png\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.2 应用加载时（左图），拖动一些滑块后（中图），然后点击重置（右图）。在线查看地址：<a href=\"https://hadley.shinyapps.io/ms-update-reset\">https://hadley.shinyapps.io/ms-update-reset</a></td></tr>\n</table>\n\n<p>一个类似的应用是调整动作按钮的文本，以便你确切知道它将执行什么操作。图<code>10.3</code>展示了下面代码的结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Simulations&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;simulate&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Simulate&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    label <span class=\"operator\">&lt;-</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;Simulate &quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> <span class=\"string\">&quot; times&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateActionButton<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;simulate&quot;</span><span class=\"punctuation\">,</span> label <span class=\"operator\">=</span> label<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/f6604343f39fe08be631b06ddac37b2c00d73ea5/f636b/demos/action-dynamic/update-button-onload.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/d65b9991e6b08e57700bf2cc8f5fafafe59ebc4e/03e2a/demos/action-dynamic/update-button-set1.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/a2a75084db3d975c48dc56ef70eebd2906eae356/a924e/demos/action-dynamic/update-button-set100.png\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图 10.3 应用加载时（左），将模拟次数设置为 1（中），再将模拟次数设置为 100（右）。在线查看地址：<a href=\"https://hadley.shinyapps.io/ms-update-button\">https://hadley.shinyapps.io/ms-update-button</a></td></tr>\n</table>\n\n<p>有很多方法可以用这种方式使用更新函数；在开发复杂应用时，要注意找出向用户提供更多信息的方法。一个特别重要的应用是通过逐步筛选来简化从一长串可能选项中进行选择的过程。这通常是“分层选择框”的问题。</p>\n<h3 id=\"10-1-2-分层选择框\"><a href=\"#10-1-2-分层选择框\" class=\"headerlink\" title=\"10.1.2 分层选择框\"></a>10.1.2 分层选择框</h3><p>更新函数的一个更复杂但特别有用的应用是允许在多个类别之间进行交互式深入探索。我将用一个来自 <a href=\"https://www.kaggle.com/kyanyoga/sample-sales-data\">https://www.kaggle.com/kyanyoga/sample-sales-data</a> 的销售仪表板的虚拟数据来说明它们的使用方法。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sales <span class=\"operator\">&lt;-</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span><span class=\"string\">&quot;sales-dashboard/sales_data_sample.csv&quot;</span><span class=\"punctuation\">,</span> col_types <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> na <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">sales <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  select<span class=\"punctuation\">(</span>TERRITORY<span class=\"punctuation\">,</span> CUSTOMERNAME<span class=\"punctuation\">,</span> ORDERNUMBER<span class=\"punctuation\">,</span> everything<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">  arrange<span class=\"punctuation\">(</span>ORDERNUMBER<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 2,823 × 25</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;    TERRITORY CUSTOM…¹ ORDER…² QUANT…³ PRICE…⁴ ORDER…⁵ SALES ORDER…⁶ STATUS QTR_ID</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;    &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  1 NA        Online …   10100      30   100         3 5151  1/6/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  2 NA        Online …   10100      50    67.8       2 3390  1/6/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  3 NA        Online …   10100      22    86.5       4 1903. 1/6/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  4 NA        Online …   10100      49    34.5       1 1689. 1/6/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  5 EMEA      Blauer …   10101      25   100         4 3782  1/9/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  6 EMEA      Blauer …   10101      26   100         1 3773. 1/9/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  7 EMEA      Blauer …   10101      45    31.2       3 1404  1/9/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  8 EMEA      Blauer …   10101      46    53.8       2 2473. 1/9/20… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;  9 NA        Vitachr…   10102      39   100         2 4808. 1/10/2… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 10 NA        Vitachr…   10102      41    50.1       1 2056. 1/10/2… Shipp…      1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 2,813 more rows, 15 more variables: MONTH_ID &lt;dbl&gt;, YEAR_ID &lt;dbl&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   PRODUCTLINE &lt;chr&gt;, MSRP &lt;dbl&gt;, PRODUCTCODE &lt;chr&gt;, PHONE &lt;chr&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   ADDRESSLINE1 &lt;chr&gt;, ADDRESSLINE2 &lt;chr&gt;, CITY &lt;chr&gt;, STATE &lt;chr&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   POSTALCODE &lt;chr&gt;, COUNTRY &lt;chr&gt;, CONTACTLASTNAME &lt;chr&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   CONTACTFIRSTNAME &lt;chr&gt;, DEALSIZE &lt;chr&gt;, and abbreviated variable names</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   ¹​CUSTOMERNAME, ²​ORDERNUMBER, ³​QUANTITYORDERED, ⁴​PRICEEACH, ⁵​ORDERLINENUMBER,</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; #   ⁶​ORDERDATE</span></span><br></pre></td></tr></table></figure>\n\n<p>在这个演示中，我将重点关注数据中的自然层次结构：</p>\n<ul>\n<li><p>每个区域包含客户。</p>\n</li>\n<li><p>每个客户有多个订单。</p>\n</li>\n<li><p>每个订单包含行。</p>\n</li>\n</ul>\n<p>我想创建一个用户界面，你可以：</p>\n<ul>\n<li><p>选择一个区域来查看所有客户。</p>\n</li>\n<li><p>选择一个客户来查看所有订单。</p>\n</li>\n<li><p>选择一个订单来查看底层行。</p>\n</li>\n</ul>\n<p>用户界面的核心是简单的：我将创建三个选择框和一个输出表格。<code>customername</code>和<code>ordernumber</code>选择框的选项将动态生成，因此我将设置<code>choices = NULL</code>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;territory&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Territory&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> unique<span class=\"punctuation\">(</span>sales<span class=\"operator\">$</span>TERRITORY<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;customername&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Customer&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;ordernumber&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Order number&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>在服务器函数中，我自上而下地工作：</p>\n<ol>\n<li><p>我创建了一个响应式对象 <code>territory()</code>，它包含与所选区域匹配的 <code>sales</code> 中的行。</p>\n</li>\n<li><p>每当 <code>territory()</code> 发生变化时，我都会更新 <code>input$customername</code> 选择框中的选项列表。</p>\n</li>\n<li><p>我创建了另一个响应式对象 <code>customer()</code>，它包含与所选客户匹配的 <code>territory()</code> 中的行。</p>\n</li>\n<li><p>每当 <code>customer()</code> 发生变化时，我都会更新 <code>input$ordernumber</code> 选择框中的选项列表。</p>\n</li>\n<li><p>我在 <code>output$data</code> 中显示所选订单。</p>\n</li>\n</ol>\n<p>你可以看到下面的组织结构：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  territory <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    filter<span class=\"punctuation\">(</span>sales<span class=\"punctuation\">,</span> TERRITORY <span class=\"operator\">==</span> input<span class=\"operator\">$</span>territory<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>territory<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    choices <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>territory<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">$</span>CUSTOMERNAME<span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;customername&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> choices<span class=\"punctuation\">)</span> </span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  customer <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>customername<span class=\"punctuation\">)</span></span><br><span class=\"line\">    filter<span class=\"punctuation\">(</span>territory<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> CUSTOMERNAME <span class=\"operator\">==</span> input<span class=\"operator\">$</span>customername<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>customer<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    choices <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>customer<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">$</span>ORDERNUMBER<span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;ordernumber&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> choices<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>ordernumber<span class=\"punctuation\">)</span></span><br><span class=\"line\">    customer<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      filter<span class=\"punctuation\">(</span>ORDERNUMBER <span class=\"operator\">==</span> input<span class=\"operator\">$</span>ordernumber<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      select<span class=\"punctuation\">(</span>QUANTITYORDERED<span class=\"punctuation\">,</span> PRICEEACH<span class=\"punctuation\">,</span> PRODUCTCODE<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/fe6c81ed4946e87b044fc7cc91b3bb05e4954043/7d64e/demos/action-dynamic/update-nested-territory.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/d3a0d284501015f737373cc8e6f14b27a49de373/0e06a/demos/action-dynamic/update-nested-customername.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b0ae629ca1909719117abfce2d890db7bf379412/37026/demos/action-dynamic/update-nested-orders.png\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图 10.4 我选择“EMEA”（左），然后选择“Lyon Souveniers”（中），然后（右）查看订单。在线查看地址：<a href=\"https://hadley.shinyapps.io/ms-update-nested\">https://hadley.shinyapps.io/ms-update-nested</a></td></tr>\n</table>\n\n<p>你可以在 <a href=\"https://hadley.shinyapps.io/ms-update-nested\">https://hadley.shinyapps.io/ms-update-nested</a> 尝试这个简单的示例，或者在 <a href=\"https://github.com/hadley/mastering-shiny/tree/master/sales-dashboard\">https://github.com/hadley/mastering-shiny/tree/master/sales-dashboard</a> 查看一个更加完善的应用示例。</p>\n<h3 id=\"10-1-3-冻结响应式输入\"><a href=\"#10-1-3-冻结响应式输入\" class=\"headerlink\" title=\"10.1.3 冻结响应式输入\"></a>10.1.3 冻结响应式输入</h3><p>有时，这种分层选择会短暂地创建一个无效的输入集，导致出现不想要的输出闪烁。例如，考虑这个简单的应用，你首先选择一个数据集，然后选择要汇总的变量：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dataset&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Choose a dataset&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;pressure&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;cars&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Choose column&quot;</span><span class=\"punctuation\">,</span> character<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  verbatimTextOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;summary&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  dataset <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>get<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>summary <span class=\"operator\">&lt;-</span> renderPrint<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    summary<span class=\"punctuation\">(</span>dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>column<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你在 <a href=\"https://hadley.shinyapps.io/ms-freeze\">https://hadley.shinyapps.io/ms-freeze</a> 上尝试这个实时应用，你会注意到当你切换数据集时，摘要输出会短暂地闪烁。这是因为 <a href=\"https://rdrr.io/pkg/shiny/man/updateSelectInput.html\">updateSelectInput()</a> 只有在所有输出和观察者都运行之后才会生效，因此会暂时出现一个状态，即你拥有数据集 B 和来自数据集 A 的变量，因此输出会包含 <code>summary(NULL)</code>。</p>\n<p>你可以通过“freezing”输入值来解决这个问题，使用 <a href=\"https://rdrr.io/pkg/shiny/man/freezeReactiveValue.html\">freezeReactiveValue()</a>。这确保了任何使用输入的响应式对象或输出都不会更新，直到下一次完整的失效周期。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  dataset <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>get<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    freezeReactiveValue<span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>summary <span class=\"operator\">&lt;-</span> renderPrint<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    summary<span class=\"punctuation\">(</span>dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>column<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，你不需要“thaw”输入值；当 Shiny 检测到会话和服务器再次同步时，这会自动发生。</p>\n<p>你可能会好奇什么时候应该使用 <a href=\"https://rdrr.io/pkg/shiny/man/freezeReactiveValue.html\">freezeReactiveValue()</a>：实际上，当你动态更改输入值时，使用它总是一个好习惯。实际的修改需要一些时间才能流向浏览器，然后再返回给 Shiny，而在此期间，任何对该值的读取都可能是浪费的，在最坏的情况下可能导致错误。使用 <code>freezeReactiveValue()</code> 告诉所有下游计算，输入值是陈旧的，它们应该保存它们的努力，直到它变得有用。</p>\n<h3 id=\"10-1-4-循环引用\"><a href=\"#10-1-4-循环引用\" class=\"headerlink\" title=\"10.1.4 循环引用\"></a>10.1.4 循环引用</h3><p>如果你想使用 update 函数来改变输入的当前<code>value</code>，那么我们需要讨论一个重要的问题。从 Shiny 的角度来看，使用 update 函数来修改值与用户通过点击或输入来修改值没有区别。这意味着 update 函数可以像人类一样触发响应式更新。这意味着你现在已经超出了纯响应式编程的范围，你需要开始担心循环引用和无限循环的问题。</p>\n<p>例如，看看下面这个简单的应用。它包含一个输入控件和一个观察者，后者将其值加一并更新。每次运行 <a href=\"https://rdrr.io/pkg/shiny/man/updateNumericInput.html\">updateNumericInput()</a> 时，它都会更改 <code>input$n</code>，导致 <code>updateNumericInput()</code> 再次运行，因此应用陷入无限循环，持续增加 <code>input$n</code> 的值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span></span><br><span class=\"line\">    updateNumericInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> input<span class=\"operator\">$</span>n <span class=\"operator\">+</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>虽然你不太可能在自己的应用中创建这种显而易见的问题，但如果你在更新相互依赖的多个控件时，可能会遇到类似的问题，如下一个例子所示。</p>\n<h3 id=\"10-1-5-相互关联的输入\"><a href=\"#10-1-5-相互关联的输入\" class=\"headerlink\" title=\"10.1.5 相互关联的输入\"></a>10.1.5 相互关联的输入</h3><p>在应用中出现循环引用很容易发生在有多个“事实来源”时。例如，假设你想创建一个温度转换应用，用户既可以输入摄氏温度也可以输入华氏温度：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;temp_c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Celsius&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> step <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;temp_f&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Fahrenheit&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> step <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>temp_f<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">c</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">round</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>temp_f <span class=\"operator\">-</span> <span class=\"number\">32</span><span class=\"punctuation\">)</span> <span class=\"operator\">*</span> <span class=\"number\">5</span> <span class=\"operator\">/</span> <span class=\"number\">9</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateNumericInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;temp_c&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>temp_c<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    f <span class=\"operator\">&lt;-</span> <span class=\"built_in\">round</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>temp_c <span class=\"operator\">*</span> <span class=\"number\">9</span> <span class=\"operator\">/</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> <span class=\"number\">32</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateNumericInput<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;temp_f&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> f<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你尝试这个应用，<a href=\"https://hadley.shinyapps.io/ms-temperature\">https://hadley.shinyapps.io/ms-temperature</a>，你会发现它大部分时候可以正常工作，但你可能也会注意到它有时会触发多次更改。例如：</p>\n<ul>\n<li><p>将温度设为120华氏度，然后点击向下的箭头。</p>\n</li>\n<li><p>华氏度变为119，摄氏度更新为48。</p>\n</li>\n<li><p>48摄氏度转换为118华氏度，因此华氏度再次变为118。</p>\n</li>\n<li><p>幸运的是，118华氏度仍然是48摄氏度，所以更新在那里停止了。</p>\n</li>\n</ul>\n<p>这个问题没有解决办法，因为你在应用中有一个概念（温度），但有两个表达式（摄氏度和华氏度）。在这里我们很幸运，因为循环迅速收敛到一个同时满足两个约束的值。一般来说，除非你愿意非常仔细地分析你创建的底层动态系统的收敛性质，否则最好避免这种情况。</p>\n<h3 id=\"10-1-6-练习\"><a href=\"#10-1-6-练习\" class=\"headerlink\" title=\"10.1.6 练习\"></a>10.1.6 练习</h3><ol>\n<li><p>请在下面的用户界面中添加一个服务器函数，以更新<code>input$date</code>，这样你只能选择<code>input$year</code>中的日期。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;year&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;year&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">2020</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  dateInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;date&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;date&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>请在下面的用户界面中添加一个服务器函数，根据<code>input$state</code>更新<code>input$county</code>的选择。作为一个额外的挑战，请也将路易斯安那州的标签从“County”改为“Parish”，阿拉斯加州的标签改为“Borough”。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>openintro<span class=\"punctuation\">,</span> warn.conflicts <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Loading required package: airports</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Loading required package: cherryblossom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Loading required package: usdata</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Registered S3 methods overwritten by &#x27;readr&#x27;:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   method                    from </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   as.data.frame.spec_tbl_df vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   as_tibble.spec_tbl_df     vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   format.col_spec           vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   print.col_spec            vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   print.collector           vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   print.date_names          vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   print.locale              vroom</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   str.col_spec              vroom</span></span><br><span class=\"line\">states <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>county<span class=\"operator\">$</span>state<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;state&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;State&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> states<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;county&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;County&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用服务器函数完善下面的用户界面，根据<code>input$continent</code>更新<code>input$country</code>的选择。使用<code>output$data</code>显示所有匹配的行。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>gapminder<span class=\"punctuation\">)</span></span><br><span class=\"line\">continents <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>gapminder<span class=\"operator\">$</span>continent<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;continent&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Continent&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> continents<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;country&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Country&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>扩展之前的应用，以便您还可以选择选择所有大洲，从而查看所有国家。您需要将<code>“(All)”</code>添加到选择列表中，然后在过滤时特殊处理它。</p>\n</li>\n<li><p>在<a href=\"https://community.rstudio.com/t/29307\">https://community.rstudio.com/t/29307</a>?上描述的问题的核心是什么？</p>\n</li>\n</ol>\n<h2 id=\"10-2-动态可见性\"><a href=\"#10-2-动态可见性\" class=\"headerlink\" title=\"10.2 动态可见性\"></a>10.2 动态可见性</h2><p>复杂性的下一步是有选择地显示和隐藏用户界面中的部分。如果您了解一些JavaScript和CSS，那么可以使用更复杂的方法，但有一种有用的技术不需要任何额外的知识：使用选项卡集（如在6.3.1节中介绍的）隐藏可选的用户界面。这是一种巧妙的技巧，允许您根据需要显示和隐藏用户界面，而无需从头开始重新生成它（您将在下一节中学到）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;controller&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Show&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">        id <span class=\"operator\">=</span> <span class=\"string\">&quot;switcher&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        type <span class=\"operator\">=</span> <span class=\"string\">&quot;hidden&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanelBody<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel1&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel 1 content&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanelBody<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel 2 content&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        tabPanelBody<span class=\"punctuation\">(</span><span class=\"string\">&quot;panel3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Panel 3 content&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>controller<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateTabsetPanel<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;switcher&quot;</span><span class=\"punctuation\">,</span> selected <span class=\"operator\">=</span> input<span class=\"operator\">$</span>controller<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/177d392d2358ae933be3c5ae9a78b2f076d8cce0/f34ae/demos/action-dynamic/dynamic-panels.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/a4ab38457f2b2194dfd2a5e1792f1d38fff0b6dc/90b0c/demos/action-dynamic/dynamic-panels-panel2.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/7dc90302d452a421cc68547265384f212c58db8f/0dc9c/demos/action-dynamic/dynamic-panels-panel3.png\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.5 选择panel1（左），然后选择panel2（中），最后选择panel3（右）。查看实时效果请访问 <a href=\"https://hadley.shinyapps.io/ms-dynamic-panels\">https://hadley.shinyapps.io/ms-dynamic-panels</a></td></tr>\n</table>\n\n<p>这里主要有两个想法：</p>\n<ul>\n<li><p>使用带有隐藏选项卡的选项卡集面板。</p>\n</li>\n<li><p>使用<a href=\"https://rdrr.io/pkg/shiny/man/updateTabsetPanel.html\">updateTabsetPanel()</a>从服务器切换选项卡。</p>\n</li>\n</ul>\n<p>这是一个简单的想法，但结合一点创意，它将赋予你相当大的能力。接下来的两节将举例说明如何在实践中使用它的两个小例子。</p>\n<h3 id=\"10-2-1-条件用户界面\"><a href=\"#10-2-1-条件用户界面\" class=\"headerlink\" title=\"10.2.1 条件用户界面\"></a>10.2.1 条件用户界面</h3><p>想象一下，你想要一个应用，允许用户模拟正态分布、均匀分布和指数分布。每种分布都有不同的参数，因此我们需要某种方法来显示不同分布的不同控件。在这里，我将为每个分布的唯一用户界面放在它自己的<a href=\"https://rdrr.io/pkg/shiny/man/tabPanel.html\">tabPanel()</a>中，然后将三个选项卡组织成一个<a href=\"https://rdrr.io/pkg/shiny/man/tabsetPanel.html\">tabsetPanel()</a>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parameter_tabs <span class=\"operator\">&lt;-</span> tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">  id <span class=\"operator\">=</span> <span class=\"string\">&quot;params&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  type <span class=\"operator\">=</span> <span class=\"string\">&quot;hidden&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;normal&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;mean&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mean&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;sd&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;standard deviation&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;uniform&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;exponential&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;rate&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;rate&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，我将把这部分嵌入到一个更完整的用户界面中，允许用户选择样本数量，并显示结果的直方图：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dist&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Distribution&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">        choices <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;normal&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;uniform&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;exponential&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of samples&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      parameter_tabs<span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;hist&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，我已经仔细地将<code>input$dist</code>中的<code>choices</code>与选项卡面板的名称相匹配。这使得编写下面的<a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a>代码变得很容易，该代码会在分布变化时自动切换控件。该应用的其他部分使用了你已经熟悉的技术。最终结果如图10.6所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dist<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateTabsetPanel<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;params&quot;</span><span class=\"punctuation\">,</span> selected <span class=\"operator\">=</span> input<span class=\"operator\">$</span>dist<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\">  </span><br><span class=\"line\">  sample <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">switch</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dist<span class=\"punctuation\">,</span></span><br><span class=\"line\">      normal <span class=\"operator\">=</span> rnorm<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>mean<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>sd<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      uniform <span class=\"operator\">=</span> runif<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span><span class=\"built_in\">max</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      exponential <span class=\"operator\">=</span> rexp<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>rate<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>hist <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span>hist<span class=\"punctuation\">(</span>sample<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/cce8beeaa545088bdba647ce61f6cb67f1eee04e/48a70/demos/action-dynamic/dynamic-conditional-normal.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/d4e7bf3c6b1d72e2733aeaf06741ab542607e288/882f0/demos/action-dynamic/dynamic-conditional-uniform.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/a5699032e1e6b89fcd6d2c87bcf2d8b616b82e8c/c0cb8/demos/action-dynamic/dynamic-conditional-exponential.png\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.6 正态分布（左）、均匀分布（中）和指数分布（右）的结果。查看实时效果请访问 <a href=\"https://hadley.shinyapps.io/ms-dynamic-conditional\">https://hadley.shinyapps.io/ms-dynamic-conditional</a></td></tr>\n</table>\n\n<p>请注意，（例如）<code>input$mean</code>的值是否对用户可见是独立的。底层的HTML控件仍然存在；只是你看不到它。</p>\n<h3 id=\"10-2-2-向导界面\"><a href=\"#10-2-2-向导界面\" class=\"headerlink\" title=\"10.2.2 向导界面\"></a>10.2.2 向导界面</h3><p>你还可以使用这个想法来创建一个“wizard”，这是一种界面类型，通过将其分散到多个页面上，更容易收集大量信息。在这里，我们在每个“page”中嵌入动作按钮，使其易于向前和向后移动。结果如图10.7所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  tabsetPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    id <span class=\"operator\">=</span> <span class=\"string\">&quot;wizard&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    type <span class=\"operator\">=</span> <span class=\"string\">&quot;hidden&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_1&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"string\">&quot;Welcome!&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_12&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;next&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_2&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"string\">&quot;Only one page to go&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_21&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;prev&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_23&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;next&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tabPanel<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_3&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"string\">&quot;You&#x27;re done!&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_32&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;prev&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  switch_page <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>i<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateTabsetPanel<span class=\"punctuation\">(</span>inputId <span class=\"operator\">=</span> <span class=\"string\">&quot;wizard&quot;</span><span class=\"punctuation\">,</span> selected <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;page_&quot;</span><span class=\"punctuation\">,</span> i<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>page_12<span class=\"punctuation\">,</span> switch_page<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>page_21<span class=\"punctuation\">,</span> switch_page<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>page_23<span class=\"punctuation\">,</span> switch_page<span class=\"punctuation\">(</span><span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>page_32<span class=\"punctuation\">,</span> switch_page<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/701f300df256124c9aa4cb5d9a6cb6245c7f70ce/e783b/demos/action-dynamic/wizard-1.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/8b0644dfec78873a45545620af591b31323fa11c/c61f6/demos/action-dynamic/wizard-2.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/9089ca7b0a519d51ae51c4991b26234561a41e67/18197/demos/action-dynamic/wizard-3.png\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.7 向导界面将复杂的用户界面分割成多个页面。在这里，我们通过一个非常简单的示例来演示这个想法，点击“下一步”以进入下一页。查看实时效果请访问 <a href=\"https://hadley.shinyapps.io/ms-wizard\">https://hadley.shinyapps.io/ms-wizard</a></td></tr>\n</table>\n\n\n<p>请注意，使用<code>switch_page()</code>函数可以减少服务器代码中的重复量。我们将在第18章再次回到这个想法，然后在第<code>19.4.2</code>节中创建一个模块来自动化向导界面。</p>\n<h3 id=\"10-2-3-练习\"><a href=\"#10-2-3-练习\" class=\"headerlink\" title=\"10.2.3 练习\"></a>10.2.3 练习</h3><ol>\n<li><p>使用隐藏的选项卡集，仅当用户选中“advanced”复选框时才显示额外的控件。</p>\n</li>\n<li><p>创建一个应用，该应用绘制<code>ggplot(diamonds, aes(carat))</code>，但允许用户选择使用的geom：<a href=\"https://ggplot2.tidyverse.org/reference/geom_histogram.html\">geom_histogram()</a>、<a href=\"https://ggplot2.tidyverse.org/reference/geom_histogram.html\">geom_freqpoly()</a>或<a href=\"https://ggplot2.tidyverse.org/reference/geom_density.html\">geom_density()</a>。使用隐藏的选项卡集，允许用户根据geom选择不同的参数：<code>geom_histogram()</code>和<code>geom_freqpoly()</code>具有binwidth参数；<code>geom_density()</code>具有bw参数。</p>\n</li>\n<li><p>修改你在前一个练习中创建的应用，允许用户选择是否显示每个geom（即，而不是始终使用一个geom，他们可以选择0、1、2或3个）。确保你可以独立控制直方图和频率多边形的binwidth。</p>\n</li>\n</ol>\n<h2 id=\"10-3-使用代码创建用户界面\"><a href=\"#10-3-使用代码创建用户界面\" class=\"headerlink\" title=\"10.3 使用代码创建用户界面\"></a>10.3 使用代码创建用户界面</h2><p>有时，上面描述的技术无法提供您所需的动态性水平：更新函数只允许您更改现有的输入，而选项卡集仅在您具有固定且已知的可能组合集时才有效。有时，您需要根据其他输入创建不同类型的输入（或输出）或不同数量的输入（或输出）。这种最终技术使您能够这样做。</p>\n<p>值得注意的是，您一直使用代码创建用户界面，但到目前为止，您总是在应用启动之前这样做。这种技术使您能够在应用运行时创建和修改用户界面。这个解决方案有两个部分：</p>\n<ul>\n<li><p><a href=\"https://rdrr.io/pkg/shiny/man/htmlOutput.html\">uiOutput()</a> 在用户界面 (ui) 中插入一个占位符。这留下了一个“洞”，您的服务器代码稍后可以填充它。</p>\n</li>\n<li><p><a href=\"https://rdrr.io/pkg/shiny/man/renderUI.html\">renderUI()</a> 在 <code>server()</code> 中被调用，用于将占位符填充为动态生成的用户界面。</p>\n</li>\n</ul>\n<p>我们将通过一个简单的示例来了解这是如何工作的，然后深入探讨一些实际的应用。</p>\n<h3 id=\"10-3-1-入门\"><a href=\"#10-3-1-入门\" class=\"headerlink\" title=\"10.3.1 入门\"></a>10.3.1 入门</h3><p>让我们从一个简单的应用开始，该应用动态地创建输入控件，其类型和标签由另外两个输入控件控制。最终的应用如图<code>10.8</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;label&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;label&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;numeric&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;numeric&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>numeric <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>type <span class=\"operator\">==</span> <span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dynamic&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>label<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dynamic&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>label<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/c7a0fbee966861954422cd6a1d7fd4a39185ec9c/28819/demos/action-dynamic/render-simple-onload.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/35b772f26ba5a178d1f693ce7de4b12c17a454f3/9cb14/demos/action-dynamic/render-simple-numeric.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/d8a85a47b59618a13f336b7d9d0d7c705d2ef05e/9c957/demos/action-dynamic/render-simple-label.png\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.8 应用加载时（左），然后将类型更改为数值（中），再将标签更改为“我的标签”。查看实时效果请访问 <a href=\"https://hadley.shinyapps.io/ms-render-simple\">https://hadley.shinyapps.io/ms-render-simple</a></td></tr>\n</table>\n\n<p>如果你自己运行这段代码，你会发现应用在加载后需要一段时间才能显示。这是因为它是响应式的：应用必须先加载，触发一个响应事件，然后调用服务器函数，生成要插入页面的HTML。这是<a href=\"https://rdrr.io/pkg/shiny/man/renderUI.html\">renderUI()</a>的一个缺点；过多地依赖它可能会导致用户界面出现延迟。为了获得良好的性能，请尽量使用本章前面描述的技术，保持用户界面的固定部分。</p>\n<p>这种方法还有一个问题：当你更改控件时，会丢失当前选定的值。在使用代码创建用户界面时，保留现有状态是一大挑战。这就是为什么如果适用，选择性显示和隐藏用户界面是更好的方法——因为你没有销毁和重新创建控件，所以不需要做任何事情来保留值。然而，在许多情况下，我们可以通过将新输入的值设置为现有控件的当前值来解决这个问题：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>numeric <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    value <span class=\"operator\">&lt;-</span> isolate<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dynamic<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>type <span class=\"operator\">==</span> <span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dynamic&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>label<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> value<span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dynamic&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>label<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> value<span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用 <a href=\"https://rdrr.io/pkg/shiny/man/isolate.html\">isolate()</a> 非常重要。我们将在 <code>15.4.1</code> 节中详细讨论它的作用，但在这里，它确保我们不会创建一个响应式依赖，导致每次 <code>input$dynamic</code> 发生变化时（每当用户修改值时都会发生）都重新运行此代码。我们只希望在 <code>input$type</code> 或 <code>input$label</code> 发生变化时更改它。</p>\n<h3 id=\"10-3-2-多个控件\"><a href=\"#10-3-2-多个控件\" class=\"headerlink\" title=\"10.3.2 多个控件\"></a>10.3.2 多个控件</h3><p>当你需要生成任意数量或类型的控件时，动态用户界面（UI）最有用。这意味着你将使用代码生成用户界面，我建议使用函数式编程来完成此类任务。在这里，我将使用 <a href=\"https://purrr.tidyverse.org/reference/map.html\">purrr::map()</a> 和 <a href=\"https://purrr.tidyverse.org/reference/reduce.html\">purrr::reduce()</a>，但你也可以使用基础的 <a href=\"https://rdrr.io/r/base/lapply.html\">lapply()</a> 和 <a href=\"https://rdrr.io/r/base/funprog.html\">Reduce()</a> 函数来实现同样的效果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>purrr<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你不熟悉函数式编程中的 <a href=\"https://purrr.tidyverse.org/reference/map.html\">map()</a> 和 <code>reduce()</code>，你可能希望在继续之前先阅读有关<a href=\"https://adv-r.hadley.nz/functionals.html\">Functional programming</a>的内容。我们也将在第 <code>18</code> 章中再次讨论这个想法。这些想法相当复杂，所以如果你在第一次阅读时没有理解，请不要担心。</p>\n<p>为了具体说明，想象一下你想要用户能够提供自己的颜色调色板。他们首先会指定他们想要的颜色的数量，然后为每个颜色提供一个值。用户界面相当简单：我们有一个 <a href=\"https://rdrr.io/pkg/shiny/man/numericInput.html\">numericInput()</a> 来控制输入的数量，一个 <a href=\"https://rdrr.io/pkg/shiny/man/htmlOutput.html\">uiOutput()</a> 用于放置生成的文本框，以及一个 <a href=\"https://rdrr.io/pkg/shiny/man/textOutput.html\">textOutput()</a> 来证明我们已经正确地将所有内容连接在一起。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of colours&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;col&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;palette&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>服务器函数很短，但包含了一些重要的想法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  col_names <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;col&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">seq_len</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>col <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    map<span class=\"punctuation\">(</span>col_names<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> textInput<span class=\"punctuation\">(</span>.x<span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>palette <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    map_chr<span class=\"punctuation\">(</span>col_names<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">%||%</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>我使用了一个响应式对象 <code>col_names()</code> 来存储即将生成的每个颜色输入的名称。</p>\n</li>\n<li><p>然后，我使用 <code>map()</code> 创建一个 <code>textInput()</code> 列表，每个列表项对应 <code>col_names()</code> 中的一个名称。<code>renderUI()</code> 随后将这个 HTML 组件列表添加到用户界面。</p>\n</li>\n<li><p>我需要使用一个新技巧来访问输入值。到目前为止，我们总是使用 <code>$</code> 来访问输入的组件，例如 <code>input$col1</code>。但在这里，我们的输入名称存储在一个字符向量中，比如 <code>var &lt;- &quot;col1&quot;</code>。在这种情况下，<code>$</code> 不再适用，因此我们需要切换到 <code>[[</code>，即 <code>input[[var]]</code>。</p>\n</li>\n<li><p>我使用 <a href=\"https://purrr.tidyverse.org/reference/map.html\">map_chr()</a> 将所有值收集到一个字符向量中，并在 <code>output$palette</code> 中显示。不幸的是，在浏览器渲染新输入之前，有一个短暂的时间段，其值会是 <code>NULL</code>。这会导致 <code>map_chr()</code> 报错，我们使用方便的 <code>%||%</code> 函数来解决这个问题：当左侧为 <code>NULL</code> 时，它返回右侧的值。</p>\n</li>\n</ul>\n<p>你可以在图 <code>10.9</code> 中看到结果。</p>\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/5301c856f06d8eba2b98b4a7c4d3fedb574d7f11/76c4e/demos/action-dynamic/render-palette-onload.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/6a2df96ad06c05e809774c0db7d7e3611ec9eb53/d31b7/demos/action-dynamic/render-palette-change-n.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/cad6373c73a55bf6e79fc166e72dadf394b528e1/b0691/demos/action-dynamic/render-palette-set-cols.png\">\n</td>\n</tr>\n<tr><td colspan=\"3\">图10.9 应用程序加载时（左），将n设置为3后（中），然后输入一些颜色（右）。请在<a href=\"https://hadley.shinyapps.io/ms-render-palette\">https://hadley.shinyapps.io/ms-render-palette</a>查看实时效果</td></tr>\n</table>\n\n<p>如果你运行这个应用程序，你会发现一个非常恼人的行为：每当你改变颜色的数量时，所有输入的数据都会消失。我们可以使用与之前相同的技术来解决这个问题：将<code>value</code>设置为（孤立的）当前值。我还会稍微调整外观，使其看起来更漂亮一些，包括在图中显示所选颜色。示例截图如图<code>10.10</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of colours&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;col&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  col_names <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;col&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">seq_len</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>col <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    map<span class=\"punctuation\">(</span>col_names<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> textInput<span class=\"punctuation\">(</span>.x<span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> isolate<span class=\"punctuation\">(</span>input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    cols <span class=\"operator\">&lt;-</span> map_chr<span class=\"punctuation\">(</span>col_names<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">%||%</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"comment\"># convert empty inputs to transparent</span></span><br><span class=\"line\">    cols<span class=\"punctuation\">[</span>cols <span class=\"operator\">==</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> <span class=\"literal\">NA</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    barplot<span class=\"punctuation\">(</span></span><br><span class=\"line\">      <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"built_in\">length</span><span class=\"punctuation\">(</span>cols<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      col <span class=\"operator\">=</span> cols<span class=\"punctuation\">,</span></span><br><span class=\"line\">      space <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      axes <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/cc1d6ffde1b8ac88f72e2b897ed187f55cecedf1/89026/demos/action-dynamic/render-palette-full-rainbow.png\">\n</td>\n<td>\n<img src=\"https://d33wubrfki0l68.cloudfront.net/b1560598089d41fb8a7c71323c44efd7595ce615/b8927/demos/action-dynamic/render-palette-full-change-n.png\">\n</td>\n</tr>\n<tr><td colspan=\"2\">图10.10 填写彩虹的颜色（左），然后将颜色数量减少到3（右）；请注意，现有颜色被保留。实时效果请访问<a href=\"https://hadley.shinyapps.io/ms-render-palette-full\">https://hadley.shinyapps.io/ms-render-palette-full</a>查看实时效果</td></tr>\n</table>\n\n<h3 id=\"10-3-3-动态过滤\"><a href=\"#10-3-3-动态过滤\" class=\"headerlink\" title=\"10.3.3 动态过滤\"></a>10.3.3 动态过滤</h3><p>为了结束本章，我将创建一个应用程序，允许你动态过滤任何数据框。每个数值变量都会得到一个范围滑块，每个因子变量都会得到一个多选控件，所以（例如）如果一个数据框有三个数值变量和两个因子，应用程序将有三个滑块和两个选择框。</p>\n<p>我将从一个为单个变量创建用户界面的函数开始。对于数值输入，它将返回一个范围滑块；对于因子输入，它将返回一个多选控件；对于其他所有类型，它将返回NULL（无）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make_ui <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> var<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"built_in\">is.numeric</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    rng <span class=\"operator\">&lt;-</span> <span class=\"built_in\">range</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    sliderInput<span class=\"punctuation\">(</span>var<span class=\"punctuation\">,</span> var<span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> rng<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> rng<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> rng<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>is.factor<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    levs <span class=\"operator\">&lt;-</span> levels<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span></span><br><span class=\"line\">    selectInput<span class=\"punctuation\">(</span>var<span class=\"punctuation\">,</span> var<span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> levs<span class=\"punctuation\">,</span> selected <span class=\"operator\">=</span> levs<span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\"># Not supported</span></span><br><span class=\"line\">    <span class=\"literal\">NULL</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>接着，我将编写此函数的服务器端等效项：它接收输入控件的变量和值，并返回一个逻辑向量，说明是否包含每个观测值。使用逻辑向量可以轻松组合来自多个列的结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter_var <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> val<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"built_in\">is.numeric</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> <span class=\"operator\">&amp;</span> x <span class=\"operator\">&gt;=</span> val<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span> <span class=\"operator\">&amp;</span> x <span class=\"operator\">&lt;=</span> val<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>is.factor<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    x <span class=\"operator\">%in%</span> val</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\"># No control, so don&#x27;t filter</span></span><br><span class=\"line\">    <span class=\"literal\">TRUE</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，我可以手动使用这些函数为 <code>iris</code> 数据集生成一个简单的过滤用户界面：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      make_ui<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Length<span class=\"punctuation\">,</span> <span class=\"string\">&quot;Sepal.Length&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      make_ui<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Width<span class=\"punctuation\">,</span> <span class=\"string\">&quot;Sepal.Width&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      make_ui<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Species<span class=\"punctuation\">,</span> <span class=\"string\">&quot;Species&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  selected <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    filter_var<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Length<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>Sepal.Length<span class=\"punctuation\">)</span> <span class=\"operator\">&amp;</span></span><br><span class=\"line\">      filter_var<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Sepal.Width<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>Sepal.Width<span class=\"punctuation\">)</span> <span class=\"operator\">&amp;</span></span><br><span class=\"line\">      filter_var<span class=\"punctuation\">(</span>iris<span class=\"operator\">$</span>Species<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>Species<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">[</span>selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/c346538e80dd7b34a8142bdb05a537b44d581663/edd79/demos/action-dynamic/render-filter-1.png\" alt=\"图10.11 iris数据集的简单过滤界面\"></p>\n<p>你可能注意到了，我已经厌倦了复制粘贴，所以这个应用程序只适用于三列。通过使用一些函数式编程，我可以让它适用于所有列：</p>\n<ul>\n<li><p>在<code>ui</code>中，使用<a href=\"https://purrr.tidyverse.org/reference/map.html\">map()</a>为每个变量生成一个控件。</p>\n</li>\n<li><p>在<code>server()</code>，我使用<code>map()</code>为每个变量生成选择向量。然后，我使用<code>reduce()</code>将每个变量的逻辑向量组合成一个单一的逻辑向量，通过<code>&amp;</code>将每个向量连接在一起。</p>\n</li>\n</ul>\n<p>再次强调，如果你不完全理解这里发生了什么，请不要太过担心。主要的收获是，一旦你掌握了函数式编程，你就可以编写非常简洁的代码，从而生成复杂且动态的应用程序。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      map<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> make_ui<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> .x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  selected <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    each_var <span class=\"operator\">&lt;-</span> map<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> filter_var<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    reduce<span class=\"punctuation\">(</span>each_var<span class=\"punctuation\">,</span> <span class=\"operator\">~</span> .x <span class=\"operator\">&amp;</span> .y<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">[</span>selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/b5f7aa079010dea111f8cb50ff9ce875cef92b4a/4b175/demos/action-dynamic/render-filter-2.png\" alt=\"图10.12 使用函数式编程为iris数据集构建过滤应用程序\"></p>\n<p>从此处开始，对其进行简单泛化，使其可以与任何数据框配合使用。在此，我将使用datasets包中的数据框进行说明，但你可以很容易地想象如何将其扩展到用户上传的数据。结果如图<code>10.13</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dfs <span class=\"operator\">&lt;-</span> keep<span class=\"punctuation\">(</span>ls<span class=\"punctuation\">(</span><span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> is.data.frame<span class=\"punctuation\">(</span>get<span class=\"punctuation\">(</span>.x<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">    sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dataset&quot;</span><span class=\"punctuation\">,</span> label <span class=\"operator\">=</span> <span class=\"string\">&quot;Dataset&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> dfs<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;filter&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">      tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    get<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  vars <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>filter <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span></span><br><span class=\"line\">    map<span class=\"punctuation\">(</span>vars<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> make_ui<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> .x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  selected <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    each_var <span class=\"operator\">&lt;-</span> map<span class=\"punctuation\">(</span>vars<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"operator\">~</span> filter_var<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> input<span class=\"punctuation\">[[</span>.x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    reduce<span class=\"punctuation\">(</span>each_var<span class=\"punctuation\">,</span> `&amp;`<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span>selected<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/539c4bcb59b7d52133c346ec6ca4a217e122e4df/9214d/demos/action-dynamic/filtering-final.png\" alt=\"图10.13 根据所选数据集的字段自动生成的动态用户界面。请访问https://hadley.shinyapps.io/ms-filtering-final查看实时效果\"></p>\n<h3 id=\"10-3-4-对话框\"><a href=\"#10-3-4-对话框\" class=\"headerlink\" title=\"10.3.4 对话框\"></a>10.3.4 对话框</h3><p>在结束本章之前，我想提一下一个相关的技术：对话框。在<code>8.4.1</code>节中，你已经看到了对话框，其内容是固定的文本字符串。但由于<a href=\"https://rdrr.io/pkg/shiny/man/modalDialog.html\">modalDialog()</a>是在服务器函数中调用的，因此你可以像<a href=\"https://rdrr.io/pkg/shiny/man/renderUI.html\">renderUI()</a>一样动态地生成内容。如果你想在继续常规应用程序流程之前强制用户做出某些决定，这是一个很有用的技术。</p>\n<h3 id=\"10-3-5-练习\"><a href=\"#10-3-5-练习\" class=\"headerlink\" title=\"10.3.5 练习\"></a>10.3.5 练习</h3><ol>\n<li><p>根据本节中的初始示例，创建一个非常简单的应用程序：</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;numeric&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  uiOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;numeric&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>numeric <span class=\"operator\">&lt;-</span> renderUI<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>type <span class=\"operator\">==</span> <span class=\"string\">&quot;slider&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p> 你如何使用动态可见性来实现它？如果你实现了动态可见性，当你更改控件时，如何保持值的同步？</p>\n</li>\n<li><p>解释这个应用程序是如何工作的。为什么当你第二次点击“输入密码”按钮时，密码会消失？</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;go&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Enter password&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;text&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>go<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    showModal<span class=\"punctuation\">(</span>modalDialog<span class=\"punctuation\">(</span></span><br><span class=\"line\">      passwordInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;password&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      title <span class=\"operator\">=</span> <span class=\"string\">&quot;Please enter your password&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  output<span class=\"operator\">$</span>text <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>isTruthy<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>password<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;No password&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;Password entered&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在·10.3.1·节的应用程序中，如果你从<code>value &lt;- isolate(input$dynamic)</code>中去掉<a href=\"https://rdrr.io/pkg/shiny/man/isolate.html\">isolate()</a>会发生什么？</p>\n</li>\n<li><p>为<code>make_ui()</code>和<code>filter_var()</code>添加对日期和日期时间列的支持。</p>\n</li>\n<li><p>（高级）如果你了解S3面向对象编程（<a href=\"http://adv-r.hadley.nz/S3.html\">S3 OOP</a>）系统，请考虑如何使用通用函数替换<code>make_ui()</code>和<code>filter_var()</code>中的if块。</p>\n</li>\n</ol>\n<h2 id=\"10-4-总结\"><a href=\"#10-4-总结\" class=\"headerlink\" title=\"10.4 总结\"></a>10.4 总结</h2><p>在阅读本章之前，你只能在服务器函数运行之前静态地创建用户界面。现在你已经学会了如何根据用户操作修改用户界面并完全重新创建它。动态用户界面将极大地增加你的应用程序的复杂性，所以如果你发现自己很难调试正在发生的事情，不要感到惊讶。始终记住使用最简单的技术来解决你的问题，并回到<code>5.2</code>节中的调试建议。</p>\n<p>下一章将转向讨论书签功能，使应用程序能够与他人共享当前状态。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]}