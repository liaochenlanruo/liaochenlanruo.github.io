{"title":"Shiny从入门到入定——12-Tidy evaluation","slug":"Shiny从入门到入定——12-Tidy-evaluation","date":"2024-04-27T12:58:06.000Z","updated":"2024-04-27T12:59:49.755Z","comments":true,"path":"api/articles/Shiny从入门到入定——12-Tidy-evaluation.json","excerpt":null,"covers":["https://d33wubrfki0l68.cloudfront.net/2c131334332cadef7ec2b3e3bdf32689f3f1ebc6/f6143/demos/action-tidy/messed-up.png","https://d33wubrfki0l68.cloudfront.net/878d4b65fc1671d180c91732193924ce2f3b3ea8/ca76b/demos/action-tidy/tidied-up.png","https://d33wubrfki0l68.cloudfront.net/9defdeb8a9d4c779898f02f540feb95283b62c65/23a54/demos/action-tidy/ggplot2-scatter.png","https://d33wubrfki0l68.cloudfront.net/74cf9f3e211b5f2430a03a5c960da0ab63a1e29e/41abe/demos/action-tidy/ggplot2-swarm.png","https://d33wubrfki0l68.cloudfront.net/4b67467c8ad6e40cb3fffad24222564bf4858788/ae5b1/demos/action-tidy/dplyr.png","https://d33wubrfki0l68.cloudfront.net/a2b57fbb1d8a118a0410942708a051e92355b7a6/a504d/demos/action-tidy/user-supplied.png","https://d33wubrfki0l68.cloudfront.net/20b7acd57783cbc15cf0d64d8964bba1e093ba06/1c155/demos/action-tidy/across.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"整洁评估\"><a href=\"#整洁评估\" class=\"headerlink\" title=\"整洁评估\"></a>整洁评估</h1><p>如果你在使用Shiny与tidyverse，那么你几乎肯定会遇到整洁评估编程的挑战。整洁评估在tidyverse中被广泛使用，使交互式数据探索更加流畅，但它也有代价：很难间接引用变量，因此编程起来也更加困难。</p>\n<p>在本章中，你将学习如何在Shiny应用程序中包装ggplot2和dplyr函数。（如果你不使用tidyverse，那么可以跳过这一章😄。）将ggplot2和dplyr函数包装在函数和包中的技术略有不同，并且在其他资源如<a href=\"http://ggplot2.tidyverse.org/dev/articles/ggplot2-in-packages.html\">“在包中使用ggplot2”</a>或<a href=\"http://dplyr.tidyverse.org/articles/programming.html\">“使用dplyr编程”</a>中有所涵盖。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">,</span> warn.conflicts <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-1-动机\"><a href=\"#12-1-动机\" class=\"headerlink\" title=\"12.1 动机\"></a>12.1 动机</h2><p>假设我想创建一个应用程序，允许你过滤一个数值变量，以选择大于某个阈值的行。你可能会写出类似这样的代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_vars <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;carat&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;depth&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;table&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;price&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;z&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> num_vars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Minimum&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;output&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>var <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>output <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/2c131334332cadef7ec2b3e3bdf32689f3f1ebc6/f6143/demos/action-tidy/messed-up.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/2c131334332cadef7ec2b3e3bdf32689f3f1ebc6/f6143/demos/action-tidy/messed-up.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图12.1 一个应用程序试图选择用户选定变量中大于阈值的行\"></p>\n<p>从<code>图12.1</code>中你可以看到，该应用程序可以无错误地运行，但它并没有返回正确的结果——所有的行中，钻石的净重（<code>carat</code>）值都小于1。本章的目标是帮助你理解为什么这不起作用，以及为什么dplyr认为你请求的是<code>filter(diamonds, &quot;carat&quot; &gt; 1)</code>。</p>\n<p>这是一个<code>间接引用</code>的问题：通常在使用tidyverse函数时，你会直接在函数调用中输入变量的名称。但现在你想要间接引用它：变量（<code>carat</code>）存储在另一个变量（<code>input$var</code>）中。</p>\n<p>这句话可能对你来说很直观，但有点令人困惑，因为我在这里用“变量”来指代两种略有不同的事物。如果我们引入两个新术语来消除这两种用法之间的歧义，那么理解正在发生的事情会更容易：</p>\n<ul>\n<li><p>环境变量（<strong>env-variable</strong>）是一个“编程”变量，你用<code>&lt;-</code>来创建。<code>input$var</code>是一个环境变量。</p>\n</li>\n<li><p>数据变量（<strong>data-variable</strong>）是存储在数据框中的“统计”变量。<code>carat</code>是一个数据变量。</p>\n</li>\n</ul>\n<p>有了这些新术语，我们可以更清楚地阐述间接引用的问题：我们有一个数据变量（<code>carat</code>）存储在一个环境变量（<code>input$var</code>）中，我们需要一种方法来告诉dplyr这一点。根据你所使用的函数是“数据掩蔽”函数还是“整洁选择”函数，实现这一点的方法略有不同。</p>\n<h2 id=\"12-2-数据掩蔽\"><a href=\"#12-2-数据掩蔽\" class=\"headerlink\" title=\"12.2 数据掩蔽\"></a>12.2 数据掩蔽</h2><p>数据掩蔽函数允许你在“当前”数据框中使用变量，而无需任何额外的语法。它在许多dplyr函数（如<a href=\"https://dplyr.tidyverse.org/reference/arrange.html\">arrange()</a>、<a href=\"https://dplyr.tidyverse.org/reference/filter.html\">filter()</a>、<a href=\"https://dplyr.tidyverse.org/reference/group_by.html\">group_by()</a>、<a href=\"https://dplyr.tidyverse.org/reference/mutate.html\">mutate()</a>和<a href=\"https://dplyr.tidyverse.org/reference/summarise.html\">summarise()</a>）以及ggplot2的<a href=\"https://ggplot2.tidyverse.org/reference/aes.html\">aes()</a>中使用。数据掩蔽很有用，因为它允许你使用数据变量，而无需任何额外的语法。</p>\n<h3 id=\"12-2-1-开始\"><a href=\"#12-2-1-开始\" class=\"headerlink\" title=\"12.2.1 开始\"></a>12.2.1 开始</h3><p>让我们从调用<code>filter()</code>函数开始，它使用了一个数据变量（<code>carat</code>）和一个环境变量（<code>min</code>）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">min</span> <span class=\"operator\">&lt;-</span> 1</span><br><span class=\"line\">diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>carat <span class=\"operator\">&gt;</span> <span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 17,502 × 10</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   carat cut       color clarity depth table price     x     y     z</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1  1.17 Very Good J     I1       60.2    61  2774  6.83  6.9   4.13</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2  1.01 Premium   F     I1       61.8    60  2781  6.39  6.36  3.94</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3  1.01 Fair      E     I1       64.5    58  2788  6.29  6.21  4.03</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4  1.01 Premium   H     SI2      62.7    59  2788  6.31  6.22  3.93</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5  1.05 Very Good J     SI2      63.2    56  2789  6.49  6.45  4.09</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6  1.05 Fair      J     SI2      65.8    59  2789  6.41  6.27  4.18</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 17,496 more rows</span></span><br></pre></td></tr></table></figure>\n\n<p>与基础R的等效代码进行比较：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamonds<span class=\"punctuation\">[</span>diamonds<span class=\"operator\">$</span>carat <span class=\"operator\">&gt;</span> <span class=\"built_in\">min</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n<p>在大多数（但不是全部）基础R函数中，你需要使用<code>$</code>来引用数据变量。这意味着你经常需要多次重复数据框的名称，但这确实清楚地表明了什么是数据变量，什么是环境变量。这也使得间接引用变得直接明了，因为你可以将数据变量的名称存储在一个环境变量中，然后从<code>$</code>切换到<code>[[</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;carat&quot;</span></span><br><span class=\"line\">diamonds<span class=\"punctuation\">[</span>diamonds<span class=\"punctuation\">[[</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> <span class=\"built_in\">min</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<p>我们如何使用整洁评估来达到相同的效果呢？我们需要一种方法将<code>$</code>重新加入进来。幸运的是，在数据掩蔽函数中，如果你想明确表示你是在谈论数据变量还是环境变量，你可以使用<code>.data</code>或<code>.env</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"operator\">$</span>carat <span class=\"operator\">&gt;</span> .env<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>现在我们可以从$切换到[[：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> .env<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>让我们通过更新本章开始时使用的服务器函数来检查它是否有效：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_vars <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;carat&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;depth&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;table&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;price&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;z&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> num_vars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Minimum&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;output&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> .env<span class=\"operator\">$</span>input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>output <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/878d4b65fc1671d180c91732193924ce2f3b3ea8/ca76b/demos/action-tidy/tidied-up.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/878d4b65fc1671d180c91732193924ce2f3b3ea8/ca76b/demos/action-tidy/tidied-up.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图12.2 我们的应用现在运行良好，因为我们明确了.data和.env以及[[与$的区别。请访问https://hadley.shinyapps.io/ms-tidied-up查看实时效果\"></p>\n<p><code>图12.2</code>显示我们已经成功了——我们只看到克拉值大于1的钻石。现在你已经了解了基础知识，我们将开发几个更现实但仍然简单的Shiny应用。</p>\n<h3 id=\"12-2-2-示例：ggplot2\"><a href=\"#12-2-2-示例：ggplot2\" class=\"headerlink\" title=\"12.2.2 示例：ggplot2\"></a>12.2.2 示例：ggplot2</h3><p>让我们将这个想法应用于动态绘图，允许用户通过选择要在<code>x</code>轴和<code>y</code>轴上显示的变量来创建散点图。结果如<code>图12.3</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;X variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Y variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> .data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>y<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      geom_point<span class=\"punctuation\">(</span>position <span class=\"operator\">=</span> ggforce<span class=\"operator\">::</span>position_auto<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td><img src=\"https://d33wubrfki0l68.cloudfront.net/9defdeb8a9d4c779898f02f540feb95283b62c65/23a54/demos/action-tidy/ggplot2-scatter.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/9defdeb8a9d4c779898f02f540feb95283b62c65/23a54/demos/action-tidy/ggplot2-scatter.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></td>\n<td><img src=\"https://d33wubrfki0l68.cloudfront.net/74cf9f3e211b5f2430a03a5c960da0ab63a1e29e/41abe/demos/action-tidy/ggplot2-swarm.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/74cf9f3e211b5f2430a03a5c960da0ab63a1e29e/41abe/demos/action-tidy/ggplot2-swarm.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></td>\n</tr>\n<tr>\n<td colspan=\"2\">图12.3 一个简单的应用程序，允许您选择要在x轴和y轴上绘制的变量。请访问<a href=\"https://hadley.shinyapps.io/ms-ggplot2\">https://hadley.shinyapps.io/ms-ggplot2</a>查看实时效果</td>\n</tr>\n</table>\n\n<p>这里我使用了<a href=\"https://ggforce.data-imaginist.com/reference/position_auto.html\">ggforce::position_auto()</a>，这样无论x和y变量是连续的还是离散的，<a href=\"https://ggplot2.tidyverse.org/reference/geom_point.html\">geom_point()</a>都能很好地工作。或者，我们也可以让用户选择geom。下面的应用程序使用<a href=\"https://rdrr.io/r/base/switch.html\">switch()</a>语句生成一个反应性的geom，稍后会将其添加到图中。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;X variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Y variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;geom&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;geom&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;point&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;smooth&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;jitter&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  plot_geom <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">switch</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>geom<span class=\"punctuation\">,</span></span><br><span class=\"line\">      point <span class=\"operator\">=</span> geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      smooth <span class=\"operator\">=</span> geom_smooth<span class=\"punctuation\">(</span>se <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      jitter <span class=\"operator\">=</span> geom_jitter<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> .data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>y<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      plot_geom<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>这是使用用户选择的变量进行编程时面临的挑战之一：你的代码必须变得更加复杂，以处理用户可能生成的所有情况。</p>\n<h3 id=\"12-2-3-示例：dplyr\"><a href=\"#12-2-3-示例：dplyr\" class=\"headerlink\" title=\"12.2.3 示例：dplyr\"></a>12.2.3 示例：dplyr</h3><p>同样的技术也适用于dplyr。下面的应用程序扩展了前面简单的示例，允许您选择一个变量进行过滤，选择一个最小值进行选择，以及选择一个变量进行排序。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Select variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Minimum value&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;sort&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Sort by&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    rng <span class=\"operator\">&lt;-</span> <span class=\"built_in\">range</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span></span><br><span class=\"line\">      session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      value <span class=\"operator\">=</span> rng<span class=\"punctuation\">[[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"built_in\">min</span> <span class=\"operator\">=</span> rng<span class=\"punctuation\">[[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"built_in\">max</span> <span class=\"operator\">=</span> rng<span class=\"punctuation\">[[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    mtcars <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      arrange<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>sort<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/4b67467c8ad6e40cb3fffad24222564bf4858788/ae5b1/demos/action-tidy/dplyr.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/4b67467c8ad6e40cb3fffad24222564bf4858788/ae5b1/demos/action-tidy/dplyr.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图12.4 一个简单的应用程序，允许您选择一个变量作为阈值，并选择如何对结果进行排序。请访问https://hadley.shinyapps.io/ms-dplyr/查看实时效果\"></p>\n<p>大多数其他问题都可以通过结合<code>.data</code>和您的现有编程技能来解决。例如，如果您想要条件性地以升序或降序进行排序，应该怎么做呢？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Sort by&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;desc&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Descending order?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  sorted <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>desc<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      arrange<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> desc<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      arrange<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> .data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>sorted<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>随着你提供更多控制选项，你会发现代码变得越来越复杂，同时创建一个既全面又友好的用户界面也变得越来越难。这就是为什么我一直专注于数据分析的代码工具：创建好的用户界面真的非常难！</p>\n<h3 id=\"12-2-4-用户提供的数据\"><a href=\"#12-2-4-用户提供的数据\" class=\"headerlink\" title=\"12.2.4 用户提供的数据\"></a>12.2.4 用户提供的数据</h3><p>在继续讨论整洁选择之前，我们还需要讨论最后一个话题：用户提供的数据。以<code>图12.5</code>中显示的这个应用程序为例：它允许用户上传一个tsv文件，然后选择一个变量并根据该变量进行筛选。它适用于绝大多数你可能会尝试的输入。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dataset&quot;</span><span class=\"punctuation\">,</span> accept <span class=\"operator\">=</span> <span class=\"string\">&quot;.tsv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> character<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> step <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;output&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>data<span class=\"punctuation\">)</span></span><br><span class=\"line\">    vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>data<span class=\"operator\">$</span>datapath<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    val <span class=\"operator\">&lt;-</span> data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">    updateNumericInput<span class=\"punctuation\">(</span>session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"built_in\">min</span><span class=\"punctuation\">(</span>val<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>output <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      arrange<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      head<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/a2b57fbb1d8a118a0410942708a051e92355b7a6/a504d/demos/action-tidy/user-supplied.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/a2b57fbb1d8a118a0410942708a051e92355b7a6/a504d/demos/action-tidy/user-supplied.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图12.5 一个过滤用户提供的数据的应用程序，具有令人惊讶的故障模式。请访问https://hadley.shinyapps.io/ms-user-supplied/查看实时效果\"></p>\n<p>这里使用<a href=\"https://dplyr.tidyverse.org/reference/filter.html\">filter()</a>有一个微妙的问题。让我们把对<code>filter()</code>的调用提取出来，这样我们就可以在应用程序之外直接操作它：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">input <span class=\"operator\">&lt;-</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>var <span class=\"operator\">=</span> <span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">df <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   x y</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 1 2</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你试验这段代码，你会发现它对于绝大多数数据框都能很好地工作。然而，有一个微妙的问题：如果数据框中包含一个名为<code>input</code>的变量，会发生什么？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> input <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">df <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Error in `filter()`:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; ! Problem while computing `..1 = .data[[&quot;x&quot;]] &gt; input$min`.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Caused by error in `input$min`:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; ! $ operator is invalid for atomic vectors</span></span><br></pre></td></tr></table></figure>\n\n<p>我们收到一条错误信息，因为<code>filter()</code>正在尝试计算<code>df$input$min</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df<span class=\"operator\">$</span>input<span class=\"operator\">$</span><span class=\"built_in\">min</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Error in df$input$min: $ operator is invalid for atomic vectors</span></span><br></pre></td></tr></table></figure>\n\n<p>这个问题是由于数据变量和环境变量的歧义造成的，并且在两者都可用时，数据掩蔽更倾向于使用数据变量。我们可以通过使用<code>.env</code>来告诉<code>filter()</code>只在环境变量中查找<code>min</code>来解决这个问题：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> .env<span class=\"operator\">$</span>input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   x y input</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 1 2     3</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，这个问题只有在处理用户提供的数据时才需要考虑；在处理自己的数据时，你可以确保数据变量的名称不会与环境变量的名称冲突（如果不小心冲突了，你会立刻发现）。</p>\n<h3 id=\"12-2-5-为什么不使用基础R？\"><a href=\"#12-2-5-为什么不使用基础R？\" class=\"headerlink\" title=\"12.2.5 为什么不使用基础R？\"></a>12.2.5 为什么不使用基础R？</h3><p>到这时，你可能会想，如果没有<code>filter()</code>函数，使用等效的基础R代码会不会更好？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df<span class=\"punctuation\">[</span>df<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   x y input</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 1 2     3</span></span><br></pre></td></tr></table></figure>\n\n<p>这是一个完全合理的立场，只要你意识到<code>filter()</code>为你做的工作，以便你能生成等效的基础R代码。在这种情况下：</p>\n<ul>\n<li><p>如果df只包含一列，你需要使用<code>drop = FALSE</code>（否则你会得到一个向量而不是数据框）。</p>\n</li>\n<li><p>你需要使用<a href=\"https://rdrr.io/r/base/which.html\">which()</a>或类似函数来删除任何缺失值。</p>\n</li>\n<li><p>你不能进行分组过滤（例如，<code>df %&gt;% group_by(g) %&gt;% filter(n() == 1)</code>）。</p>\n</li>\n</ul>\n<p>一般来说，如果你只是使用dplyr来处理非常简单的案例，你可能会发现使用不使用数据掩蔽的基础R函数更容易。然而，在我看来，tidyverse的一个优势在于它仔细考虑了边缘情况，以便函数能更一致地工作。我不想夸大这一点，但同时，很容易忘记特定基础R函数的怪癖，并编写出95%以上时间都能工作，但在另外5%的时间里会以不寻常的方式失败的代码。</p>\n<h2 id=\"12-3-整洁选择-Tidy-selection\"><a href=\"#12-3-整洁选择-Tidy-selection\" class=\"headerlink\" title=\"12.3 整洁选择 Tidy-selection\"></a>12.3 整洁选择 Tidy-selection</h2><p>除了数据掩蔽之外，整洁评估还有一个重要的部分：整洁选择。整洁选择提供了一种简洁的方式来通过位置、名称或类型选择列。它在<a href=\"https://dplyr.tidyverse.org/reference/select.html\">dplyr::select()</a>和<a href=\"https://dplyr.tidyverse.org/reference/across.html\">dplyr::across()</a>以及tidyr中的许多函数（如<a href=\"https://tidyr.tidyverse.org/reference/pivot_longer.html\">pivot_longer()</a>、<a href=\"https://tidyr.tidyverse.org/reference/pivot_wider.html\">pivot_wider()</a>、<a href=\"https://tidyr.tidyverse.org/reference/separate.html\">separate()</a>、<a href=\"https://tidyr.tidyverse.org/reference/extract.html\">extract()</a>和<a href=\"https://tidyr.tidyverse.org/reference/unite.html\">unite()</a>）中使用。</p>\n<h3 id=\"12-3-1-间接引用\"><a href=\"#12-3-1-间接引用\" class=\"headerlink\" title=\"12.3.1 间接引用\"></a>12.3.1 间接引用</h3><p>要间接引用变量，可以使用<a href=\"https://tidyselect.r-lib.org/reference/all_of.html\">any_of()</a>或<a href=\"https://tidyselect.r-lib.org/reference/all_of.html\">all_of()</a>：两者都期望一个包含数据变量名称的字符向量作为环境变量。唯一的区别是，如果你提供了一个在输入中不存在的变量名，<code>all_of()</code>会引发错误，而<code>any_of()</code>则会静默地忽略它。</p>\n<p>例如，以下应用程序允许用户使用多选输入选择任意数量的变量，同时使用<code>all_of()</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;vars&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Variables&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars<span class=\"punctuation\">)</span></span><br><span class=\"line\">    mtcars <span class=\"operator\">%&gt;%</span> select<span class=\"punctuation\">(</span>all_of<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"12-3-2-整洁选择与数据掩蔽\"><a href=\"#12-3-2-整洁选择与数据掩蔽\" class=\"headerlink\" title=\"12.3.2 整洁选择与数据掩蔽\"></a>12.3.2 整洁选择与数据掩蔽</h3><p>当使用采用整洁选择的函数时，处理多个变量变得轻而易举：您只需将包含变量名的字符向量传递给<code>any_of()</code>或<code>all_of()</code>。如果我们也能在数据掩蔽函数中使用这种方法，那该有多好？这正是dplyr 1.0.0版本中添加的<a href=\"https://dplyr.tidyverse.org/reference/across.html\">across()</a>函数的设计理念。它允许您在数据掩蔽函数中使用整洁选择。</p>\n<p><code>across()</code>函数通常使用一个或两个参数。第一个参数用于选择变量，在<a href=\"https://dplyr.tidyverse.org/reference/group_by.html\">group_by()</a>或<a href=\"https://dplyr.tidyverse.org/reference/distinct.html\">distinct()</a>等函数中非常有用。例如，以下应用程序允许您选择任意数量的变量并计算它们的唯一值数量。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;vars&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Variables&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;count&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>count <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars<span class=\"punctuation\">)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    mtcars <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      group_by<span class=\"punctuation\">(</span>across<span class=\"punctuation\">(</span>all_of<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      summarise<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> .groups <span class=\"operator\">=</span> <span class=\"string\">&quot;drop&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/20b7acd57783cbc15cf0d64d8964bba1e093ba06/1c155/demos/action-tidy/across.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/20b7acd57783cbc15cf0d64d8964bba1e093ba06/1c155/demos/action-tidy/across.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图12.6 此应用程序允许您选择任意数量的变量，并计算它们的唯一组合数量。请访问https://hadley.shinyapps.io/ms-across实时查看\"></p>\n<p>第二个参数是一个函数（或函数列表），应用于每个选定的列。这使得它非常适合<a href=\"https://dplyr.tidyverse.org/reference/mutate.html\">mutate()</a>和<a href=\"https://dplyr.tidyverse.org/reference/summarise.html\">summarise()</a>等函数，因为您通常想要以某种方式转换每个变量。例如，以下代码允许用户选择任意数量的分组变量，以及任意数量的变量，以计算它们的平均值进行汇总。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;vars_g&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Group by&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;vars_s&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Summarise&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    mtcars <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      group_by<span class=\"punctuation\">(</span>across<span class=\"punctuation\">(</span>all_of<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars_g<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      summarise<span class=\"punctuation\">(</span>across<span class=\"punctuation\">(</span>all_of<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars_s<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mean<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-4-parse-eval\"><a href=\"#12-4-parse-eval\" class=\"headerlink\" title=\"12.4 parse() + eval()\"></a>12.4 parse() + eval()</h2><p>在我们继续之前，有必要对<a href=\"https://rdrr.io/r/base/paste.html\">paste()</a> + <a href=\"https://rdrr.io/r/base/parse.html\">parse()</a> + <a href=\"https://rdrr.io/r/base/eval.html\">eval()</a>组合进行简短的评论。如果你完全不了解这个组合，可以跳过这一节，但如果你已经使用过它，我想给你一个小小的警告。</p>\n<p>这是一个诱人的方法，因为它只需要学习很少的新概念。但它也有一些主要的缺点：由于你正在将字符串拼接在一起，很容易意外地创建出无效的代码，或者可能被滥用以执行你不希望的操作的代码。如果这只是你自己使用的Shiny应用程序，这可能不是非常重要，但这并不是一个值得养成的好习惯——否则，很容易在你广泛分享的应用程序中意外地创建一个安全漏洞。我们将在第<code>22章</code>中再次提及这个观点。</p>\n<p>（如果你发现这是解决问题的唯一方法，不必感到沮丧。但当你有了更多的思考空间时，我建议花些时间弄清楚如何在不进行字符串操作的情况下实现。这将有助于你成为一名更好的R程序员。）</p>\n<h2 id=\"12-5-总结\"><a href=\"#12-5-总结\" class=\"headerlink\" title=\"12.5 总结\"></a>12.5 总结</h2><p>在本章中，你学习了如何创建Shiny应用程序，让用户选择将哪些变量输入到如<a href=\"https://dplyr.tidyverse.org/reference/filter.html\">dplyr::filter()</a>和<a href=\"https://ggplot2.tidyverse.org/reference/aes.html\">ggplot2::aes()</a>这样的tidyverse函数中。这需要你理解一个你之前可能从未考虑过的关键区别：数据变量和环境变量的不同。这可能需要一些练习才能变得自然，但一旦你掌握了这些概念，你就能够解锁tidyverse的数据分析功能，并将其暴露给非R用户。</p>\n<p>这是本书<code>“Shiny实战”</code>部分的最后一章。既然你已经拥有了制作一系列有用应用程序所需的工具，我将重点提高你对Shiny底层理论的理解。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"整洁评估\"><a href=\"#整洁评估\" class=\"headerlink\" title=\"整洁评估\"></a>整洁评估</h1><p>如果你在使用Shiny与tidyverse，那么你几乎肯定会遇到整洁评估编程的挑战。整洁评估在tidyverse中被广泛使用，使交互式数据探索更加流畅，但它也有代价：很难间接引用变量，因此编程起来也更加困难。</p>\n<p>在本章中，你将学习如何在Shiny应用程序中包装ggplot2和dplyr函数。（如果你不使用tidyverse，那么可以跳过这一章😄。）将ggplot2和dplyr函数包装在函数和包中的技术略有不同，并且在其他资源如<a href=\"http://ggplot2.tidyverse.org/dev/articles/ggplot2-in-packages.html\">“在包中使用ggplot2”</a>或<a href=\"http://dplyr.tidyverse.org/articles/programming.html\">“使用dplyr编程”</a>中有所涵盖。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>dplyr<span class=\"punctuation\">,</span> warn.conflicts <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-1-动机\"><a href=\"#12-1-动机\" class=\"headerlink\" title=\"12.1 动机\"></a>12.1 动机</h2><p>假设我想创建一个应用程序，允许你过滤一个数值变量，以选择大于某个阈值的行。你可能会写出类似这样的代码：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_vars <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;carat&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;depth&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;table&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;price&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;z&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> num_vars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Minimum&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;output&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>var <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>output <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/2c131334332cadef7ec2b3e3bdf32689f3f1ebc6/f6143/demos/action-tidy/messed-up.png\" alt=\"图12.1 一个应用程序试图选择用户选定变量中大于阈值的行\"></p>\n<p>从<code>图12.1</code>中你可以看到，该应用程序可以无错误地运行，但它并没有返回正确的结果——所有的行中，钻石的净重（<code>carat</code>）值都小于1。本章的目标是帮助你理解为什么这不起作用，以及为什么dplyr认为你请求的是<code>filter(diamonds, &quot;carat&quot; &gt; 1)</code>。</p>\n<p>这是一个<code>间接引用</code>的问题：通常在使用tidyverse函数时，你会直接在函数调用中输入变量的名称。但现在你想要间接引用它：变量（<code>carat</code>）存储在另一个变量（<code>input$var</code>）中。</p>\n<p>这句话可能对你来说很直观，但有点令人困惑，因为我在这里用“变量”来指代两种略有不同的事物。如果我们引入两个新术语来消除这两种用法之间的歧义，那么理解正在发生的事情会更容易：</p>\n<ul>\n<li><p>环境变量（<strong>env-variable</strong>）是一个“编程”变量，你用<code>&lt;-</code>来创建。<code>input$var</code>是一个环境变量。</p>\n</li>\n<li><p>数据变量（<strong>data-variable</strong>）是存储在数据框中的“统计”变量。<code>carat</code>是一个数据变量。</p>\n</li>\n</ul>\n<p>有了这些新术语，我们可以更清楚地阐述间接引用的问题：我们有一个数据变量（<code>carat</code>）存储在一个环境变量（<code>input$var</code>）中，我们需要一种方法来告诉dplyr这一点。根据你所使用的函数是“数据掩蔽”函数还是“整洁选择”函数，实现这一点的方法略有不同。</p>\n<h2 id=\"12-2-数据掩蔽\"><a href=\"#12-2-数据掩蔽\" class=\"headerlink\" title=\"12.2 数据掩蔽\"></a>12.2 数据掩蔽</h2><p>数据掩蔽函数允许你在“当前”数据框中使用变量，而无需任何额外的语法。它在许多dplyr函数（如<a href=\"https://dplyr.tidyverse.org/reference/arrange.html\">arrange()</a>、<a href=\"https://dplyr.tidyverse.org/reference/filter.html\">filter()</a>、<a href=\"https://dplyr.tidyverse.org/reference/group_by.html\">group_by()</a>、<a href=\"https://dplyr.tidyverse.org/reference/mutate.html\">mutate()</a>和<a href=\"https://dplyr.tidyverse.org/reference/summarise.html\">summarise()</a>）以及ggplot2的<a href=\"https://ggplot2.tidyverse.org/reference/aes.html\">aes()</a>中使用。数据掩蔽很有用，因为它允许你使用数据变量，而无需任何额外的语法。</p>\n<h3 id=\"12-2-1-开始\"><a href=\"#12-2-1-开始\" class=\"headerlink\" title=\"12.2.1 开始\"></a>12.2.1 开始</h3><p>让我们从调用<code>filter()</code>函数开始，它使用了一个数据变量（<code>carat</code>）和一个环境变量（<code>min</code>）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">min</span> <span class=\"operator\">&lt;-</span> 1</span><br><span class=\"line\">diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>carat <span class=\"operator\">&gt;</span> <span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # A tibble: 17,502 × 10</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   carat cut       color clarity depth table price     x     y     z</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1  1.17 Very Good J     I1       60.2    61  2774  6.83  6.9   4.13</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2  1.01 Premium   F     I1       61.8    60  2781  6.39  6.36  3.94</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3  1.01 Fair      E     I1       64.5    58  2788  6.29  6.21  4.03</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4  1.01 Premium   H     SI2      62.7    59  2788  6.31  6.22  3.93</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5  1.05 Very Good J     SI2      63.2    56  2789  6.49  6.45  4.09</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6  1.05 Fair      J     SI2      65.8    59  2789  6.41  6.27  4.18</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; # … with 17,496 more rows</span></span><br></pre></td></tr></table></figure>\n\n<p>与基础R的等效代码进行比较：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamonds<span class=\"punctuation\">[</span>diamonds<span class=\"operator\">$</span>carat <span class=\"operator\">&gt;</span> <span class=\"built_in\">min</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n<p>在大多数（但不是全部）基础R函数中，你需要使用<code>$</code>来引用数据变量。这意味着你经常需要多次重复数据框的名称，但这确实清楚地表明了什么是数据变量，什么是环境变量。这也使得间接引用变得直接明了，因为你可以将数据变量的名称存储在一个环境变量中，然后从<code>$</code>切换到<code>[[</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;carat&quot;</span></span><br><span class=\"line\">diamonds<span class=\"punctuation\">[</span>diamonds<span class=\"punctuation\">[[</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> <span class=\"built_in\">min</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<p>我们如何使用整洁评估来达到相同的效果呢？我们需要一种方法将<code>$</code>重新加入进来。幸运的是，在数据掩蔽函数中，如果你想明确表示你是在谈论数据变量还是环境变量，你可以使用<code>.data</code>或<code>.env</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"operator\">$</span>carat <span class=\"operator\">&gt;</span> .env<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>现在我们可以从$切换到[[：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> .env<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>让我们通过更新本章开始时使用的服务器函数来检查它是否有效：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_vars <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;carat&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;depth&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;table&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;price&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;z&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> num_vars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Minimum&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;output&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>diamonds <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> .env<span class=\"operator\">$</span>input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>output <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/878d4b65fc1671d180c91732193924ce2f3b3ea8/ca76b/demos/action-tidy/tidied-up.png\" alt=\"图12.2 我们的应用现在运行良好，因为我们明确了.data和.env以及[[与$的区别。请访问https://hadley.shinyapps.io/ms-tidied-up查看实时效果\"></p>\n<p><code>图12.2</code>显示我们已经成功了——我们只看到克拉值大于1的钻石。现在你已经了解了基础知识，我们将开发几个更现实但仍然简单的Shiny应用。</p>\n<h3 id=\"12-2-2-示例：ggplot2\"><a href=\"#12-2-2-示例：ggplot2\" class=\"headerlink\" title=\"12.2.2 示例：ggplot2\"></a>12.2.2 示例：ggplot2</h3><p>让我们将这个想法应用于动态绘图，允许用户通过选择要在<code>x</code>轴和<code>y</code>轴上显示的变量来创建散点图。结果如<code>图12.3</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;X variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Y variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> .data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>y<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      geom_point<span class=\"punctuation\">(</span>position <span class=\"operator\">=</span> ggforce<span class=\"operator\">::</span>position_auto<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<tr>\n<td><img src=\"https://d33wubrfki0l68.cloudfront.net/9defdeb8a9d4c779898f02f540feb95283b62c65/23a54/demos/action-tidy/ggplot2-scatter.png\"></td>\n<td><img src=\"https://d33wubrfki0l68.cloudfront.net/74cf9f3e211b5f2430a03a5c960da0ab63a1e29e/41abe/demos/action-tidy/ggplot2-swarm.png\"></td>\n</tr>\n<tr>\n<td colspan=\"2\">图12.3 一个简单的应用程序，允许您选择要在x轴和y轴上绘制的变量。请访问<a href=\"https://hadley.shinyapps.io/ms-ggplot2\">https://hadley.shinyapps.io/ms-ggplot2</a>查看实时效果</td>\n</tr>\n</table>\n\n<p>这里我使用了<a href=\"https://ggforce.data-imaginist.com/reference/position_auto.html\">ggforce::position_auto()</a>，这样无论x和y变量是连续的还是离散的，<a href=\"https://ggplot2.tidyverse.org/reference/geom_point.html\">geom_point()</a>都能很好地工作。或者，我们也可以让用户选择geom。下面的应用程序使用<a href=\"https://rdrr.io/r/base/switch.html\">switch()</a>语句生成一个反应性的geom，稍后会将其添加到图中。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;X variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Y variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>iris<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;geom&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;geom&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;point&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;smooth&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;jitter&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  plot_geom <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">switch</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>geom<span class=\"punctuation\">,</span></span><br><span class=\"line\">      point <span class=\"operator\">=</span> geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      smooth <span class=\"operator\">=</span> geom_smooth<span class=\"punctuation\">(</span>se <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      jitter <span class=\"operator\">=</span> geom_jitter<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    ggplot<span class=\"punctuation\">(</span>iris<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>x<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> .data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>y<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">      plot_geom<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> res <span class=\"operator\">=</span> <span class=\"number\">96</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>这是使用用户选择的变量进行编程时面临的挑战之一：你的代码必须变得更加复杂，以处理用户可能生成的所有情况。</p>\n<h3 id=\"12-2-3-示例：dplyr\"><a href=\"#12-2-3-示例：dplyr\" class=\"headerlink\" title=\"12.2.3 示例：dplyr\"></a>12.2.3 示例：dplyr</h3><p>同样的技术也适用于dplyr。下面的应用程序扩展了前面简单的示例，允许您选择一个变量进行过滤，选择一个最小值进行选择，以及选择一个变量进行排序。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Select variable&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Minimum value&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;sort&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Sort by&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    rng <span class=\"operator\">&lt;-</span> <span class=\"built_in\">range</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateSliderInput<span class=\"punctuation\">(</span></span><br><span class=\"line\">      session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      value <span class=\"operator\">=</span> rng<span class=\"punctuation\">[[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"built_in\">min</span> <span class=\"operator\">=</span> rng<span class=\"punctuation\">[[</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"built_in\">max</span> <span class=\"operator\">=</span> rng<span class=\"punctuation\">[[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    mtcars <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      arrange<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>sort<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/4b67467c8ad6e40cb3fffad24222564bf4858788/ae5b1/demos/action-tidy/dplyr.png\" alt=\"图12.4 一个简单的应用程序，允许您选择一个变量作为阈值，并选择如何对结果进行排序。请访问https://hadley.shinyapps.io/ms-dplyr/查看实时效果\"></p>\n<p>大多数其他问题都可以通过结合<code>.data</code>和您的现有编程技能来解决。例如，如果您想要条件性地以升序或降序进行排序，应该怎么做呢？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Sort by&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;desc&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Descending order?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  sorted <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>desc<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      arrange<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> desc<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      arrange<span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">,</span> .data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>sorted<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>随着你提供更多控制选项，你会发现代码变得越来越复杂，同时创建一个既全面又友好的用户界面也变得越来越难。这就是为什么我一直专注于数据分析的代码工具：创建好的用户界面真的非常难！</p>\n<h3 id=\"12-2-4-用户提供的数据\"><a href=\"#12-2-4-用户提供的数据\" class=\"headerlink\" title=\"12.2.4 用户提供的数据\"></a>12.2.4 用户提供的数据</h3><p>在继续讨论整洁选择之前，我们还需要讨论最后一个话题：用户提供的数据。以<code>图12.5</code>中显示的这个应用程序为例：它允许用户上传一个tsv文件，然后选择一个变量并根据该变量进行筛选。它适用于绝大多数你可能会尝试的输入。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dataset&quot;</span><span class=\"punctuation\">,</span> accept <span class=\"operator\">=</span> <span class=\"string\">&quot;.tsv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> character<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> step <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;output&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>data<span class=\"punctuation\">)</span></span><br><span class=\"line\">    vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>data<span class=\"operator\">$</span>datapath<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateSelectInput<span class=\"punctuation\">(</span>session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;var&quot;</span><span class=\"punctuation\">,</span> choices <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    val <span class=\"operator\">&lt;-</span> data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">    updateNumericInput<span class=\"punctuation\">(</span>session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"built_in\">min</span><span class=\"punctuation\">(</span>val<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>output <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      arrange<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      head<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/a2b57fbb1d8a118a0410942708a051e92355b7a6/a504d/demos/action-tidy/user-supplied.png\" alt=\"图12.5 一个过滤用户提供的数据的应用程序，具有令人惊讶的故障模式。请访问https://hadley.shinyapps.io/ms-user-supplied/查看实时效果\"></p>\n<p>这里使用<a href=\"https://dplyr.tidyverse.org/reference/filter.html\">filter()</a>有一个微妙的问题。让我们把对<code>filter()</code>的调用提取出来，这样我们就可以在应用程序之外直接操作它：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">input <span class=\"operator\">&lt;-</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>var <span class=\"operator\">=</span> <span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">df <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   x y</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 1 2</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你试验这段代码，你会发现它对于绝大多数数据框都能很好地工作。然而，有一个微妙的问题：如果数据框中包含一个名为<code>input</code>的变量，会发生什么？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> input <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">df <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Error in `filter()`:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; ! Problem while computing `..1 = .data[[&quot;x&quot;]] &gt; input$min`.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Caused by error in `input$min`:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; ! $ operator is invalid for atomic vectors</span></span><br></pre></td></tr></table></figure>\n\n<p>我们收到一条错误信息，因为<code>filter()</code>正在尝试计算<code>df$input$min</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df<span class=\"operator\">$</span>input<span class=\"operator\">$</span><span class=\"built_in\">min</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Error in df$input$min: $ operator is invalid for atomic vectors</span></span><br></pre></td></tr></table></figure>\n\n<p>这个问题是由于数据变量和环境变量的歧义造成的，并且在两者都可用时，数据掩蔽更倾向于使用数据变量。我们可以通过使用<code>.env</code>来告诉<code>filter()</code>只在环境变量中查找<code>min</code>来解决这个问题：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>.data<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> .env<span class=\"operator\">$</span>input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   x y input</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 1 2     3</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，这个问题只有在处理用户提供的数据时才需要考虑；在处理自己的数据时，你可以确保数据变量的名称不会与环境变量的名称冲突（如果不小心冲突了，你会立刻发现）。</p>\n<h3 id=\"12-2-5-为什么不使用基础R？\"><a href=\"#12-2-5-为什么不使用基础R？\" class=\"headerlink\" title=\"12.2.5 为什么不使用基础R？\"></a>12.2.5 为什么不使用基础R？</h3><p>到这时，你可能会想，如果没有<code>filter()</code>函数，使用等效的基础R代码会不会更好？</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df<span class=\"punctuation\">[</span>df<span class=\"punctuation\">[[</span>input<span class=\"operator\">$</span>var<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&gt;</span> input<span class=\"operator\">$</span><span class=\"built_in\">min</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   x y input</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1 1 2     3</span></span><br></pre></td></tr></table></figure>\n\n<p>这是一个完全合理的立场，只要你意识到<code>filter()</code>为你做的工作，以便你能生成等效的基础R代码。在这种情况下：</p>\n<ul>\n<li><p>如果df只包含一列，你需要使用<code>drop = FALSE</code>（否则你会得到一个向量而不是数据框）。</p>\n</li>\n<li><p>你需要使用<a href=\"https://rdrr.io/r/base/which.html\">which()</a>或类似函数来删除任何缺失值。</p>\n</li>\n<li><p>你不能进行分组过滤（例如，<code>df %&gt;% group_by(g) %&gt;% filter(n() == 1)</code>）。</p>\n</li>\n</ul>\n<p>一般来说，如果你只是使用dplyr来处理非常简单的案例，你可能会发现使用不使用数据掩蔽的基础R函数更容易。然而，在我看来，tidyverse的一个优势在于它仔细考虑了边缘情况，以便函数能更一致地工作。我不想夸大这一点，但同时，很容易忘记特定基础R函数的怪癖，并编写出95%以上时间都能工作，但在另外5%的时间里会以不寻常的方式失败的代码。</p>\n<h2 id=\"12-3-整洁选择-Tidy-selection\"><a href=\"#12-3-整洁选择-Tidy-selection\" class=\"headerlink\" title=\"12.3 整洁选择 Tidy-selection\"></a>12.3 整洁选择 Tidy-selection</h2><p>除了数据掩蔽之外，整洁评估还有一个重要的部分：整洁选择。整洁选择提供了一种简洁的方式来通过位置、名称或类型选择列。它在<a href=\"https://dplyr.tidyverse.org/reference/select.html\">dplyr::select()</a>和<a href=\"https://dplyr.tidyverse.org/reference/across.html\">dplyr::across()</a>以及tidyr中的许多函数（如<a href=\"https://tidyr.tidyverse.org/reference/pivot_longer.html\">pivot_longer()</a>、<a href=\"https://tidyr.tidyverse.org/reference/pivot_wider.html\">pivot_wider()</a>、<a href=\"https://tidyr.tidyverse.org/reference/separate.html\">separate()</a>、<a href=\"https://tidyr.tidyverse.org/reference/extract.html\">extract()</a>和<a href=\"https://tidyr.tidyverse.org/reference/unite.html\">unite()</a>）中使用。</p>\n<h3 id=\"12-3-1-间接引用\"><a href=\"#12-3-1-间接引用\" class=\"headerlink\" title=\"12.3.1 间接引用\"></a>12.3.1 间接引用</h3><p>要间接引用变量，可以使用<a href=\"https://tidyselect.r-lib.org/reference/all_of.html\">any_of()</a>或<a href=\"https://tidyselect.r-lib.org/reference/all_of.html\">all_of()</a>：两者都期望一个包含数据变量名称的字符向量作为环境变量。唯一的区别是，如果你提供了一个在输入中不存在的变量名，<code>all_of()</code>会引发错误，而<code>any_of()</code>则会静默地忽略它。</p>\n<p>例如，以下应用程序允许用户使用多选输入选择任意数量的变量，同时使用<code>all_of()</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;vars&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Variables&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars<span class=\"punctuation\">)</span></span><br><span class=\"line\">    mtcars <span class=\"operator\">%&gt;%</span> select<span class=\"punctuation\">(</span>all_of<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"12-3-2-整洁选择与数据掩蔽\"><a href=\"#12-3-2-整洁选择与数据掩蔽\" class=\"headerlink\" title=\"12.3.2 整洁选择与数据掩蔽\"></a>12.3.2 整洁选择与数据掩蔽</h3><p>当使用采用整洁选择的函数时，处理多个变量变得轻而易举：您只需将包含变量名的字符向量传递给<code>any_of()</code>或<code>all_of()</code>。如果我们也能在数据掩蔽函数中使用这种方法，那该有多好？这正是dplyr 1.0.0版本中添加的<a href=\"https://dplyr.tidyverse.org/reference/across.html\">across()</a>函数的设计理念。它允许您在数据掩蔽函数中使用整洁选择。</p>\n<p><code>across()</code>函数通常使用一个或两个参数。第一个参数用于选择变量，在<a href=\"https://dplyr.tidyverse.org/reference/group_by.html\">group_by()</a>或<a href=\"https://dplyr.tidyverse.org/reference/distinct.html\">distinct()</a>等函数中非常有用。例如，以下应用程序允许您选择任意数量的变量并计算它们的唯一值数量。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;vars&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Variables&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;count&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>count <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars<span class=\"punctuation\">)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    mtcars <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      group_by<span class=\"punctuation\">(</span>across<span class=\"punctuation\">(</span>all_of<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      summarise<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> .groups <span class=\"operator\">=</span> <span class=\"string\">&quot;drop&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/20b7acd57783cbc15cf0d64d8964bba1e093ba06/1c155/demos/action-tidy/across.png\" alt=\"图12.6 此应用程序允许您选择任意数量的变量，并计算它们的唯一组合数量。请访问https://hadley.shinyapps.io/ms-across实时查看\"></p>\n<p>第二个参数是一个函数（或函数列表），应用于每个选定的列。这使得它非常适合<a href=\"https://dplyr.tidyverse.org/reference/mutate.html\">mutate()</a>和<a href=\"https://dplyr.tidyverse.org/reference/summarise.html\">summarise()</a>等函数，因为您通常想要以某种方式转换每个变量。例如，以下代码允许用户选择任意数量的分组变量，以及任意数量的变量，以计算它们的平均值进行汇总。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;vars_g&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Group by&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;vars_s&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Summarise&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>mtcars<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>data <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    mtcars <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      group_by<span class=\"punctuation\">(</span>across<span class=\"punctuation\">(</span>all_of<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars_g<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">      summarise<span class=\"punctuation\">(</span>across<span class=\"punctuation\">(</span>all_of<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>vars_s<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mean<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> n<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-4-parse-eval\"><a href=\"#12-4-parse-eval\" class=\"headerlink\" title=\"12.4 parse() + eval()\"></a>12.4 parse() + eval()</h2><p>在我们继续之前，有必要对<a href=\"https://rdrr.io/r/base/paste.html\">paste()</a> + <a href=\"https://rdrr.io/r/base/parse.html\">parse()</a> + <a href=\"https://rdrr.io/r/base/eval.html\">eval()</a>组合进行简短的评论。如果你完全不了解这个组合，可以跳过这一节，但如果你已经使用过它，我想给你一个小小的警告。</p>\n<p>这是一个诱人的方法，因为它只需要学习很少的新概念。但它也有一些主要的缺点：由于你正在将字符串拼接在一起，很容易意外地创建出无效的代码，或者可能被滥用以执行你不希望的操作的代码。如果这只是你自己使用的Shiny应用程序，这可能不是非常重要，但这并不是一个值得养成的好习惯——否则，很容易在你广泛分享的应用程序中意外地创建一个安全漏洞。我们将在第<code>22章</code>中再次提及这个观点。</p>\n<p>（如果你发现这是解决问题的唯一方法，不必感到沮丧。但当你有了更多的思考空间时，我建议花些时间弄清楚如何在不进行字符串操作的情况下实现。这将有助于你成为一名更好的R程序员。）</p>\n<h2 id=\"12-5-总结\"><a href=\"#12-5-总结\" class=\"headerlink\" title=\"12.5 总结\"></a>12.5 总结</h2><p>在本章中，你学习了如何创建Shiny应用程序，让用户选择将哪些变量输入到如<a href=\"https://dplyr.tidyverse.org/reference/filter.html\">dplyr::filter()</a>和<a href=\"https://ggplot2.tidyverse.org/reference/aes.html\">ggplot2::aes()</a>这样的tidyverse函数中。这需要你理解一个你之前可能从未考虑过的关键区别：数据变量和环境变量的不同。这可能需要一些练习才能变得自然，但一旦你掌握了这些概念，你就能够解锁tidyverse的数据分析功能，并将其暴露给非R用户。</p>\n<p>这是本书<code>“Shiny实战”</code>部分的最后一章。既然你已经拥有了制作一系列有用应用程序所需的工具，我将重点提高你对Shiny底层理论的理解。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]}