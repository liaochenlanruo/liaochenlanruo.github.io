{"title":"Swissprot数据库的本地化与序列比对并与其他数据库快速mapping","slug":"Swissprot数据库的本地化与序列比对","date":"2021-09-28T08:13:44.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Swissprot数据库的本地化与序列比对.json","excerpt":null,"covers":["https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"数据库下载与构建\"><a href=\"#数据库下载与构建\" class=\"headerlink\" title=\"数据库下载与构建\"></a>数据库下载与构建</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h2><ul>\n<li><p>解压缩</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip -d uniprot_sprot.fasta.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建blast+数据库</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">makeblastdb -<span class=\"keyword\">in</span> uniprot_sprot.fasta -dbtype prot -out uniprot_sprot -parse_seqids</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建DIAMOND数据库</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamond makedb --<span class=\"keyword\">in</span> uniprot_sprot.fasta -d uniprot_sprot_diamond</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"比对\"><a href=\"#比对\" class=\"headerlink\" title=\"比对\"></a>比对</h1><ul>\n<li><p>blastp蛋白比对</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blastp -query F01.faa -out F01.swissprot -db /new_data/hualin/db/uniprot_sprot -outfmt 6 -num_threads 30 -evalue 1e-5</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>diamond蛋白比对</p>\n<ul>\n<li><p>单个基因组对比</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q F01.faa -e 1e-5 -f 6 -o F01.diamond -k 1 --sensitive -p 30 --query-cover 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>多个个基因组对比</p>\n<p>不会shell没办法，写Perl脚本(run_diamond.pl)来完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\">   <span class=\"keyword\">use</span> strict;</span><br><span class=\"line\">   <span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);<span class=\"comment\"># 读取所有后缀为“.faa”的文件，可以自己更改</span></span><br><span class=\"line\">   <span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">    $_=~<span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.diamond&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\"># 将/new_data/hualin/db/uniprot_sprot_diamond换成自己的数据库路径; -p表示线程数，在笔记本上用6个即可</span></span><br><span class=\"line\">    <span class=\"keyword\">system</span>(<span class=\"string\">&quot;diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>将上述代码复制到文件中，命名为“run_diamond.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_diamond.pl</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"将比对结果mapping至其他数据库\"><a href=\"#将比对结果mapping至其他数据库\" class=\"headerlink\" title=\"将比对结果mapping至其他数据库\"></a>将比对结果mapping至其他数据库</h1><ul>\n<li><p>打开网址<a href=\"https://www.uniprot.org/uploadlists/\">https://www.uniprot.org/uploadlists/</a>, 上传比对上的swissprot ID，可以将比对结果转换为诸如KEGG等其他数据库的ID。个人感觉不是很好用。</p>\n</li>\n<li><p>我们可以把mapping文件下载下来，自己写脚本来提取信息，虽然麻烦些，但得到的更多。</p>\n<ul>\n<li><p>下载mapping文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/idmapping/idmapping_selected.tab.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压缩</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip -d idmapping_selected.tab.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>写脚本提取对应信息</p>\n<p> Diamond比对的结果文件内容如下，第一列是自己的氨基酸序列ID，第二列是SwissProt数据库中序列的ID，而我们真正需要的是第二列中两个竖线中间的内容，在稍后的脚本中将通过正则表达式把它给揪出来。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F01<span class=\"built_in\">_</span>00001\tsp|Q73G44|MDH<span class=\"built_in\">_</span>WOLPM\t47.2\t72\t38\t0\t10\t81\t243\t314\t9.55e-16\t72.8</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00003\tsp|D9PU00|TFRA<span class=\"built_in\">_</span>METTM\t41.3\t569\t301\t7\t7\t574\t4\t540\t4.89e-131\t397</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00004\tsp|P9WN88|FRDB<span class=\"built_in\">_</span>MYCTO\t32.7\t208\t118\t6\t19\t215\t23\t219\t3.84e-28\t110</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00005\tsp|Q021N6|SUCC<span class=\"built_in\">_</span>SOLUE\t62.8\t384\t141\t2\t1\t383\t1\t383\t1.45e-155\t446</span><br></pre></td></tr></table></figure>\n\n<p>开始写脚本，保存为“run_mapping.pl”。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %maps;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @diaout = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.diamond&quot;</span>);<span class=\"comment\"># 读取所有的diamond比对后的输出文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@diaout) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).diamond/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t$lines[<span class=\"number\">1</span>]=~<span class=\"regexp\">/.+\\|(.+)\\|.+/</span>;</span><br><span class=\"line\">\t\t$hash&#123;$1&#125;++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;idmapping_selected.tab&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$lines[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t$maps&#123;$lines[<span class=\"number\">0</span>]&#125; = $_;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @diaout2 = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.diamond&quot;</span>);<span class=\"comment\"># 读取所有的diamond比对后的输出文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@diaout2) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).diamond/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.mapped&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;qseqid\\tsseqid\\tpident\\tlength\\tmismatch\\tgapopen\\tqstart\\tqend\\tsstart\\tsend\\tevalue\\tbitscore\\tUniProtKB-AC\tUniProtKB-ID\tGeneID (EntrezGene)\tRefSeq\tGI\tPDB\tGO\tUniRef100\tUniRef90\tUniRef50\tUniParc\tPIR\tNCBI-taxon\tMIM\tUniGene\tPubMed\tEMBL\tEMBL-CDS\tEnsembl\tEnsembl_TRS\tEnsembl_PRO\tAdditional PubMed\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t$lines[<span class=\"number\">1</span>]=~<span class=\"regexp\">/.+\\|(.+)\\|.+/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $maps&#123;$1&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\t&quot;</span> . $maps&#123;$1&#125; . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将脚本与diamond比对的结果文件以及下载的mapping文件放在同一目录下，在终端里输入如下命令即可得到mapping后的结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_mapping.pl</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"GO-注释\"><a href=\"#GO-注释\" class=\"headerlink\" title=\"GO 注释\"></a>GO 注释</h1><ul>\n<li><p>从map后的文件中提取基因ID和GO number，各列以制表符分隔，没有GO注释的只输出gene ID。</p>\n<p>  准备脚本，命名为“get_GO.pl”，与上一步生成的“*.mapped”文件放在同一目录下。</p>\n  <figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @mapped = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.mapped&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@mapped) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).mapped/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.GO&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT $lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">18</span>]=~<span class=\"regexp\">/.+\\; /</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @terms = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\; /</span>, $lines[<span class=\"number\">18</span>];<span class=\"comment\"># 18代表文件的第19列</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @terms) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> ($lines[<span class=\"number\">18</span>]=~<span class=\"regexp\">/\\S+/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . $lines[<span class=\"number\">18</span>] . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>  在终端或者Windows命令行中运行如下命令，得到的“*.GO”为输出文件。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_GO.pl</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>GO注释与可视化</p>\n</li>\n</ul>\n<p>访问网页<a href=\"https://wego.genomics.cn/\">WEGO 2.0</a>，在网页中间位置是数据传输接口，将刚刚得到的所有结果文件拖拽上传，<strong>File format</strong>选择<u>Native Format</u>，如果自己的数据是模式物种，可以在<strong>Reference</strong>中选择对应的物种，点击<strong>Submit</strong>即可。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在WEGO 2.0网页提交数据\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"WEGO 2.0分析结果一览表\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"WEGO 2.0分析结果柱状图\"></p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e922”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"数据库下载与构建\"><a href=\"#数据库下载与构建\" class=\"headerlink\" title=\"数据库下载与构建\"></a>数据库下载与构建</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h2><ul>\n<li><p>解压缩</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip -d uniprot_sprot.fasta.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建blast+数据库</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">makeblastdb -<span class=\"keyword\">in</span> uniprot_sprot.fasta -dbtype prot -out uniprot_sprot -parse_seqids</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建DIAMOND数据库</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamond makedb --<span class=\"keyword\">in</span> uniprot_sprot.fasta -d uniprot_sprot_diamond</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"比对\"><a href=\"#比对\" class=\"headerlink\" title=\"比对\"></a>比对</h1><ul>\n<li><p>blastp蛋白比对</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blastp -query F01.faa -out F01.swissprot -db /new_data/hualin/db/uniprot_sprot -outfmt 6 -num_threads 30 -evalue 1e-5</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>diamond蛋白比对</p>\n<ul>\n<li><p>单个基因组对比</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q F01.faa -e 1e-5 -f 6 -o F01.diamond -k 1 --sensitive -p 30 --query-cover 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>多个个基因组对比</p>\n<p>不会shell没办法，写Perl脚本(run_diamond.pl)来完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\">   <span class=\"keyword\">use</span> strict;</span><br><span class=\"line\">   <span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);<span class=\"comment\"># 读取所有后缀为“.faa”的文件，可以自己更改</span></span><br><span class=\"line\">   <span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">    $_=~<span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.diamond&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\"># 将/new_data/hualin/db/uniprot_sprot_diamond换成自己的数据库路径; -p表示线程数，在笔记本上用6个即可</span></span><br><span class=\"line\">    <span class=\"keyword\">system</span>(<span class=\"string\">&quot;diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>将上述代码复制到文件中，命名为“run_diamond.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_diamond.pl</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"将比对结果mapping至其他数据库\"><a href=\"#将比对结果mapping至其他数据库\" class=\"headerlink\" title=\"将比对结果mapping至其他数据库\"></a>将比对结果mapping至其他数据库</h1><ul>\n<li><p>打开网址<a href=\"https://www.uniprot.org/uploadlists/\">https://www.uniprot.org/uploadlists/</a>, 上传比对上的swissprot ID，可以将比对结果转换为诸如KEGG等其他数据库的ID。个人感觉不是很好用。</p>\n</li>\n<li><p>我们可以把mapping文件下载下来，自己写脚本来提取信息，虽然麻烦些，但得到的更多。</p>\n<ul>\n<li><p>下载mapping文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/idmapping/idmapping_selected.tab.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压缩</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip -d idmapping_selected.tab.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>写脚本提取对应信息</p>\n<p> Diamond比对的结果文件内容如下，第一列是自己的氨基酸序列ID，第二列是SwissProt数据库中序列的ID，而我们真正需要的是第二列中两个竖线中间的内容，在稍后的脚本中将通过正则表达式把它给揪出来。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F01<span class=\"built_in\">_</span>00001\tsp|Q73G44|MDH<span class=\"built_in\">_</span>WOLPM\t47.2\t72\t38\t0\t10\t81\t243\t314\t9.55e-16\t72.8</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00003\tsp|D9PU00|TFRA<span class=\"built_in\">_</span>METTM\t41.3\t569\t301\t7\t7\t574\t4\t540\t4.89e-131\t397</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00004\tsp|P9WN88|FRDB<span class=\"built_in\">_</span>MYCTO\t32.7\t208\t118\t6\t19\t215\t23\t219\t3.84e-28\t110</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00005\tsp|Q021N6|SUCC<span class=\"built_in\">_</span>SOLUE\t62.8\t384\t141\t2\t1\t383\t1\t383\t1.45e-155\t446</span><br></pre></td></tr></table></figure>\n\n<p>开始写脚本，保存为“run_mapping.pl”。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %maps;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @diaout = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.diamond&quot;</span>);<span class=\"comment\"># 读取所有的diamond比对后的输出文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@diaout) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).diamond/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t$lines[<span class=\"number\">1</span>]=~<span class=\"regexp\">/.+\\|(.+)\\|.+/</span>;</span><br><span class=\"line\">\t\t$hash&#123;$1&#125;++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;idmapping_selected.tab&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$lines[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t$maps&#123;$lines[<span class=\"number\">0</span>]&#125; = $_;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @diaout2 = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.diamond&quot;</span>);<span class=\"comment\"># 读取所有的diamond比对后的输出文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@diaout2) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).diamond/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.mapped&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;qseqid\\tsseqid\\tpident\\tlength\\tmismatch\\tgapopen\\tqstart\\tqend\\tsstart\\tsend\\tevalue\\tbitscore\\tUniProtKB-AC\tUniProtKB-ID\tGeneID (EntrezGene)\tRefSeq\tGI\tPDB\tGO\tUniRef100\tUniRef90\tUniRef50\tUniParc\tPIR\tNCBI-taxon\tMIM\tUniGene\tPubMed\tEMBL\tEMBL-CDS\tEnsembl\tEnsembl_TRS\tEnsembl_PRO\tAdditional PubMed\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t$lines[<span class=\"number\">1</span>]=~<span class=\"regexp\">/.+\\|(.+)\\|.+/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $maps&#123;$1&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\t&quot;</span> . $maps&#123;$1&#125; . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将脚本与diamond比对的结果文件以及下载的mapping文件放在同一目录下，在终端里输入如下命令即可得到mapping后的结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_mapping.pl</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"GO-注释\"><a href=\"#GO-注释\" class=\"headerlink\" title=\"GO 注释\"></a>GO 注释</h1><ul>\n<li><p>从map后的文件中提取基因ID和GO number，各列以制表符分隔，没有GO注释的只输出gene ID。</p>\n<p>  准备脚本，命名为“get_GO.pl”，与上一步生成的“*.mapped”文件放在同一目录下。</p>\n  <figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @mapped = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.mapped&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@mapped) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).mapped/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.GO&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT $lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">18</span>]=~<span class=\"regexp\">/.+\\; /</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @terms = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\; /</span>, $lines[<span class=\"number\">18</span>];<span class=\"comment\"># 18代表文件的第19列</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @terms) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> ($lines[<span class=\"number\">18</span>]=~<span class=\"regexp\">/\\S+/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . $lines[<span class=\"number\">18</span>] . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>  在终端或者Windows命令行中运行如下命令，得到的“*.GO”为输出文件。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_GO.pl</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>GO注释与可视化</p>\n</li>\n</ul>\n<p>访问网页<a href=\"https://wego.genomics.cn/\">WEGO 2.0</a>，在网页中间位置是数据传输接口，将刚刚得到的所有结果文件拖拽上传，<strong>File format</strong>选择<u>Native Format</u>，如果自己的数据是模式物种，可以在<strong>Reference</strong>中选择对应的物种，点击<strong>Submit</strong>即可。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg\" alt=\"在WEGO 2.0网页提交数据\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg\" alt=\"WEGO 2.0分析结果一览表\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg\" alt=\"WEGO 2.0分析结果柱状图\"></p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e922”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]}