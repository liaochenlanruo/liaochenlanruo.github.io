{"title":"预测前噬菌体prophages","slug":"预测前噬菌体prophages","date":"2021-10-08T07:54:24.000Z","updated":"2022-01-08T02:16:28.472Z","comments":true,"path":"api/articles/预测前噬菌体prophages.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<p>本文介绍如何从细菌 / 古菌中预测前噬菌体。</p>\n<h1 id=\"软件选择\"><a class=\"markdownIt-Anchor\" href=\"#软件选择\"></a> 软件选择</h1>\n<ul>\n<li><a href=\"https://github.com/linsalrob/PhiSpy\">PhiSpy</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"软件安装\"><a class=\"markdownIt-Anchor\" href=\"#软件安装\"></a> 软件安装</h1>\n<h2 id=\"安装主程序\"><a class=\"markdownIt-Anchor\" href=\"#安装主程序\"></a> 安装主程序</h2>\n<ul>\n<li>\n<p>推荐使用 conda</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token function\">install</span> phispy\nconda <span class=\"token function\">install</span> perl-bioperl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"下载模型\"><a class=\"markdownIt-Anchor\" href=\"#下载模型\"></a> 下载模型</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://ftp.ncbi.nlm.nih.gov/pub/kristensen/pVOGs/downloads/All/AllvogHMMprofiles.tar.gz\n\n<span class=\"token function\">tar</span> -zxvf AllvogHMMprofiles.tar.gz\n\n<span class=\"token function\">cat</span> AllvogHMMprofiles/* <span class=\"token operator\">></span> pVOGs.hmm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"输入文件\"><a class=\"markdownIt-Anchor\" href=\"#输入文件\"></a> 输入文件</h1>\n<ul>\n<li>需要 GenBank 格式的文件，可通过<a href=\"http://rast.nmpdr.org/rast.cgi\"> RAST server</a> 或<a href=\"https://github.com/tseemann/prokka\"> PROKKA</a> 获得。</li>\n</ul>\n<h1 id=\"运行软件\"><a class=\"markdownIt-Anchor\" href=\"#运行软件\"></a> 运行软件</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PhiSpy.py genbank_file -o output_directory --phage_genes <span class=\"token number\">1</span> --color --threads <span class=\"token number\">6</span> --phmms pVOGs.hmm --min_contig_size <span class=\"token number\">5000</span> --output_choice <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>genbank file: 输入文件</li>\n<li>output directory: 输出目录</li>\n<li>--phage_genes: 区域内含有的被鉴定为噬菌体基因的最小数量。默认采用严格模式，即在每个前噬菌体区域必须鉴定得到两个或更多个 phage 基因。调高该参数的值将会减少预测到的前噬菌体的数量，反之，减小参数值，将会得到更多的移动元件。如果该参数设置为 0，将会预测 plasmids, integrons, and pathogenicity islands. Somewhat unexpectedly, it will also identify the ribosomal RNA operons as likely being mobile since they are unlike the host's backbone!</li>\n<li>--color: 根据 CDs 的功能对其着色，使用<a href=\"https://www.sanger.ac.uk/science/tools/artemis\"> Artemis</a> 查看</li>\n<li>--threads: 线程数</li>\n<li>--min_contig_size: 低于阈值的序列将被忽略，不对其进行预测</li>\n<li>--output_choice: 控制输出的文件类型，详见<a href=\"https://github.com/linsalrob/PhiSpy\">官网</a></li>\n</ul>\n<h1 id=\"报错处理\"><a class=\"markdownIt-Anchor\" href=\"#报错处理\"></a> 报错处理</h1>\n<ul>\n<li>\n<p>由于序列 ID 引发的错误</p>\n<ul>\n<li>错误信息如下：</li>\n</ul>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">Traceback (most recent call last):\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;bin&#x2F;PhiSpy.py&quot;, line 10, in &lt;module&gt;\n  sys.exit(run())\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;PhiSpyModules&#x2F;main.py&quot;, line 122, in run\n  main(sys.argv)\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;PhiSpyModules&#x2F;main.py&quot;, line 44, in main\n  args_parser.record &#x3D; PhiSpyModules.SeqioFilter(filter(lambda x: len(x.seq) &gt; args_parser.min_contig_size, SeqIO.parse(handle, &quot;genbank&quot;)))\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;PhiSpyModules&#x2F;seqio_filter.py&quot;, line 33, in __init__\n  for n, item in enumerate(content):\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;SeqIO&#x2F;Interfaces.py&quot;, line 74, in __next__\n  return next(self.records)\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;GenBank&#x2F;Scanner.py&quot;, line 516, in parse_records\n  record &#x3D; self.parse(handle, do_features)\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;GenBank&#x2F;Scanner.py&quot;, line 499, in parse\n  if self.feed(handle, consumer, do_features):\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;GenBank&#x2F;Scanner.py&quot;, line 465, in feed\n  self._feed_first_line(consumer, self.line)\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;GenBank&#x2F;Scanner.py&quot;, line 1571, in _feed_first_line\n  raise ValueError(&quot;Did not recognise the LOCUS line layout:\\n&quot; + line)\nValueError: Did not recognise the LOCUS line layout:\nLOCUS       NODE_52_length_15591_cov_14.37480715591 bp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>解决方案\n<ul>\n<li>将 sequence ID 缩短</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"批处理并整合结果\"><a class=\"markdownIt-Anchor\" href=\"#批处理并整合结果\"></a> 批处理并整合结果</h1>\n<p>撰写脚本 “run_PhiSpy.pl”。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 12, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gbk</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gbk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gbk/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_prophage\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"PhiSpy.py $_ -o $out --phage_genes 1 --min_contig_size 5000 --output_choice 1 --color --phmms pVOGs.hmm --threads 8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All.prophages.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># print prophages informations</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Strain\\tPhage ID\\tContig ID\\tStart location of the prophage\\tStop location of the prophage\\tStart of attL\\tEnd of attL\\tStart of attR\\tEnd of attR\\tsequence of attL\\tSequence of attR\\tWhy this att site was chosen for this prophage\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># attachment (att) sites</span>\nopen SEQ<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All.prophages.seq\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># print prophages sequences</span>\n<span class=\"token keyword\">print</span> SEQ <span class=\"token string\">\"Strain\\tPhage ID\\tContig ID\\tGene Start\\tGene End\\tStrand\\tAnnotation\\tProtein sequences\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@result</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*_prophage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+)_prophage/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$prophage</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/prophage_coordinates.tsv\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token operator\">-z</span> <span class=\"token variable\">$prophage</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$prophage\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$contig</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gbk</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".gbk\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$seqin</span> <span class=\"token operator\">=</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token operator\">-></span>new<span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span>format <span class=\"token operator\">=></span> <span class=\"token string\">'genbank'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>file <span class=\"token operator\">=></span> <span class=\"token string\">\"$gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#需要在gbk文件所在的目录中运行命令!</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$seq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seqin</span><span class=\"token operator\">-></span>next_seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sf</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>get_SeqFeatures <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>display_name <span class=\"token operator\">eq</span> <span class=\"token variable\">$contig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>primary_tag <span class=\"token operator\">eq</span> <span class=\"token string\">'CDS'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">#print SEQ $str, \"\\t\", $lines[0], \"\\t\", $seq->display_name, \"\\t\", $sf->start, \"\\t\", $sf->end, \"\\t\", $sf->strand, \"\\t\", $sf->get_tag_values('product'), \"\\t\", $sf->get_tag_values('translation'), $seq->seq,\"\\n\";# Also print contig sequences</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">print</span> SEQ <span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>display_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>strand<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'translation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># Only print Protein sequences</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span>\nclose SEQ<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 “run_PhiSpy.pl” 和后缀名为 “.gbk” 的 GenBank 格式的文件，以及 “pVOGs.hmm” 放在同一目录下，运行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_PhiSpy.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>得到两个汇总文件：</p>\n<ul>\n<li><strong>All.prophages.txt</strong>: 包含 prophage 信息的文件</li>\n<li><strong>All.prophages.seq</strong>: 包含 prophage 序列的文件</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"All.prophages.txt\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"All.prophages.seq\" /></p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “53f4” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://github.com/linsalrob/PhiSpy\">https://github.com/linsalrob/PhiSpy</a></li>\n</ul>\n","more":"<p>本文介绍如何从细菌 / 古菌中预测前噬菌体。</p>\n<h1 id=\"软件选择\"><a class=\"markdownIt-Anchor\" href=\"#软件选择\"></a> 软件选择</h1>\n<ul>\n<li><a href=\"https://github.com/linsalrob/PhiSpy\">PhiSpy</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"软件安装\"><a class=\"markdownIt-Anchor\" href=\"#软件安装\"></a> 软件安装</h1>\n<h2 id=\"安装主程序\"><a class=\"markdownIt-Anchor\" href=\"#安装主程序\"></a> 安装主程序</h2>\n<ul>\n<li>\n<p>推荐使用 conda</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token function\">install</span> phispy\nconda <span class=\"token function\">install</span> perl-bioperl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"下载模型\"><a class=\"markdownIt-Anchor\" href=\"#下载模型\"></a> 下载模型</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://ftp.ncbi.nlm.nih.gov/pub/kristensen/pVOGs/downloads/All/AllvogHMMprofiles.tar.gz\n\n<span class=\"token function\">tar</span> -zxvf AllvogHMMprofiles.tar.gz\n\n<span class=\"token function\">cat</span> AllvogHMMprofiles/* <span class=\"token operator\">></span> pVOGs.hmm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"输入文件\"><a class=\"markdownIt-Anchor\" href=\"#输入文件\"></a> 输入文件</h1>\n<ul>\n<li>需要 GenBank 格式的文件，可通过<a href=\"http://rast.nmpdr.org/rast.cgi\"> RAST server</a> 或<a href=\"https://github.com/tseemann/prokka\"> PROKKA</a> 获得。</li>\n</ul>\n<h1 id=\"运行软件\"><a class=\"markdownIt-Anchor\" href=\"#运行软件\"></a> 运行软件</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PhiSpy.py genbank_file -o output_directory --phage_genes <span class=\"token number\">1</span> --color --threads <span class=\"token number\">6</span> --phmms pVOGs.hmm --min_contig_size <span class=\"token number\">5000</span> --output_choice <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>genbank file: 输入文件</li>\n<li>output directory: 输出目录</li>\n<li>--phage_genes: 区域内含有的被鉴定为噬菌体基因的最小数量。默认采用严格模式，即在每个前噬菌体区域必须鉴定得到两个或更多个 phage 基因。调高该参数的值将会减少预测到的前噬菌体的数量，反之，减小参数值，将会得到更多的移动元件。如果该参数设置为 0，将会预测 plasmids, integrons, and pathogenicity islands. Somewhat unexpectedly, it will also identify the ribosomal RNA operons as likely being mobile since they are unlike the host's backbone!</li>\n<li>--color: 根据 CDs 的功能对其着色，使用<a href=\"https://www.sanger.ac.uk/science/tools/artemis\"> Artemis</a> 查看</li>\n<li>--threads: 线程数</li>\n<li>--min_contig_size: 低于阈值的序列将被忽略，不对其进行预测</li>\n<li>--output_choice: 控制输出的文件类型，详见<a href=\"https://github.com/linsalrob/PhiSpy\">官网</a></li>\n</ul>\n<h1 id=\"报错处理\"><a class=\"markdownIt-Anchor\" href=\"#报错处理\"></a> 报错处理</h1>\n<ul>\n<li>\n<p>由于序列 ID 引发的错误</p>\n<ul>\n<li>错误信息如下：</li>\n</ul>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">Traceback (most recent call last):\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;bin&#x2F;PhiSpy.py&quot;, line 10, in &lt;module&gt;\n  sys.exit(run())\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;PhiSpyModules&#x2F;main.py&quot;, line 122, in run\n  main(sys.argv)\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;PhiSpyModules&#x2F;main.py&quot;, line 44, in main\n  args_parser.record &#x3D; PhiSpyModules.SeqioFilter(filter(lambda x: len(x.seq) &gt; args_parser.min_contig_size, SeqIO.parse(handle, &quot;genbank&quot;)))\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;PhiSpyModules&#x2F;seqio_filter.py&quot;, line 33, in __init__\n  for n, item in enumerate(content):\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;SeqIO&#x2F;Interfaces.py&quot;, line 74, in __next__\n  return next(self.records)\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;GenBank&#x2F;Scanner.py&quot;, line 516, in parse_records\n  record &#x3D; self.parse(handle, do_features)\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;GenBank&#x2F;Scanner.py&quot;, line 499, in parse\n  if self.feed(handle, consumer, do_features):\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;GenBank&#x2F;Scanner.py&quot;, line 465, in feed\n  self._feed_first_line(consumer, self.line)\nFile &quot;&#x2F;home&#x2F;liu&#x2F;miniconda3&#x2F;envs&#x2F;component&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;Bio&#x2F;GenBank&#x2F;Scanner.py&quot;, line 1571, in _feed_first_line\n  raise ValueError(&quot;Did not recognise the LOCUS line layout:\\n&quot; + line)\nValueError: Did not recognise the LOCUS line layout:\nLOCUS       NODE_52_length_15591_cov_14.37480715591 bp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>解决方案\n<ul>\n<li>将 sequence ID 缩短</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"批处理并整合结果\"><a class=\"markdownIt-Anchor\" href=\"#批处理并整合结果\"></a> 批处理并整合结果</h1>\n<p>撰写脚本 “run_PhiSpy.pl”。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 12, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gbk</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gbk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gbk/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_prophage\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"PhiSpy.py $_ -o $out --phage_genes 1 --min_contig_size 5000 --output_choice 1 --color --phmms pVOGs.hmm --threads 8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All.prophages.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># print prophages informations</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Strain\\tPhage ID\\tContig ID\\tStart location of the prophage\\tStop location of the prophage\\tStart of attL\\tEnd of attL\\tStart of attR\\tEnd of attR\\tsequence of attL\\tSequence of attR\\tWhy this att site was chosen for this prophage\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># attachment (att) sites</span>\nopen SEQ<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All.prophages.seq\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># print prophages sequences</span>\n<span class=\"token keyword\">print</span> SEQ <span class=\"token string\">\"Strain\\tPhage ID\\tContig ID\\tGene Start\\tGene End\\tStrand\\tAnnotation\\tProtein sequences\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@result</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*_prophage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+)_prophage/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$prophage</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/prophage_coordinates.tsv\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token operator\">-z</span> <span class=\"token variable\">$prophage</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$prophage\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$contig</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gbk</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".gbk\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$seqin</span> <span class=\"token operator\">=</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token operator\">-></span>new<span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span>format <span class=\"token operator\">=></span> <span class=\"token string\">'genbank'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>file <span class=\"token operator\">=></span> <span class=\"token string\">\"$gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#需要在gbk文件所在的目录中运行命令!</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$seq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seqin</span><span class=\"token operator\">-></span>next_seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sf</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>get_SeqFeatures <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>display_name <span class=\"token operator\">eq</span> <span class=\"token variable\">$contig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>primary_tag <span class=\"token operator\">eq</span> <span class=\"token string\">'CDS'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t\t<span class=\"token comment\">#print SEQ $str, \"\\t\", $lines[0], \"\\t\", $seq->display_name, \"\\t\", $sf->start, \"\\t\", $sf->end, \"\\t\", $sf->strand, \"\\t\", $sf->get_tag_values('product'), \"\\t\", $sf->get_tag_values('translation'), $seq->seq,\"\\n\";# Also print contig sequences</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">print</span> SEQ <span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>display_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>strand<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'translation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># Only print Protein sequences</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span>\nclose SEQ<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 “run_PhiSpy.pl” 和后缀名为 “.gbk” 的 GenBank 格式的文件，以及 “pVOGs.hmm” 放在同一目录下，运行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_PhiSpy.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>得到两个汇总文件：</p>\n<ul>\n<li><strong>All.prophages.txt</strong>: 包含 prophage 信息的文件</li>\n<li><strong>All.prophages.seq</strong>: 包含 prophage 序列的文件</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg\" alt=\"All.prophages.txt\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg\" alt=\"All.prophages.seq\" /></p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “53f4” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://github.com/linsalrob/PhiSpy\">https://github.com/linsalrob/PhiSpy</a></li>\n</ul>\n","categories":[],"tags":[]}