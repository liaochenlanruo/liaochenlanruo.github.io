{"title":"预测前噬菌体prophages","slug":"预测前噬菌体prophages","date":"2021-10-08T07:54:24.000Z","updated":"2024-03-11T13:07:17.383Z","comments":true,"path":"api/articles/预测前噬菌体prophages.json","excerpt":null,"covers":["https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<p>本文介绍如何从细菌&#x2F;古菌中预测前噬菌体。</p>\n<h1 id=\"软件选择\"><a href=\"#软件选择\" class=\"headerlink\" title=\"软件选择\"></a>软件选择</h1><ul>\n<li><a href=\"https://github.com/linsalrob/PhiSpy\">PhiSpy</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"安装主程序\"><a href=\"#安装主程序\" class=\"headerlink\" title=\"安装主程序\"></a>安装主程序</h2><ul>\n<li><p>推荐使用conda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install phispy</span><br><span class=\"line\">conda install perl-bioperl</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"下载模型\"><a href=\"#下载模型\" class=\"headerlink\" title=\"下载模型\"></a>下载模型</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://ftp.ncbi.nlm.nih.gov/pub/kristensen/pVOGs/downloads/All/AllvogHMMprofiles.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf AllvogHMMprofiles.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> AllvogHMMprofiles/* &gt; pVOGs.hmm</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"输入文件\"><a href=\"#输入文件\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h1><ul>\n<li>需要GenBank格式的文件，可通过<a href=\"http://rast.nmpdr.org/rast.cgi\">RAST server</a>或<a href=\"https://github.com/tseemann/prokka\">PROKKA</a>获得。</li>\n</ul>\n<h1 id=\"运行软件\"><a href=\"#运行软件\" class=\"headerlink\" title=\"运行软件\"></a>运行软件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PhiSpy.py genbank_file -o output_directory --phage_genes 1 --color --threads 6 --phmms pVOGs.hmm --min_contig_size 5000 --output_choice 1</span><br></pre></td></tr></table></figure>\n<ul>\n<li>genbank file: 输入文件</li>\n<li>output directory: 输出目录</li>\n<li>--phage_genes: 区域内含有的被鉴定为噬菌体基因的最小数量。默认采用严格模式，即在每个前噬菌体区域必须鉴定得到两个或更多个phage基因。调高该参数的值将会减少预测到的前噬菌体的数量，反之，减小参数值，将会得到更多的移动元件。如果该参数设置为0，将会预测plasmids, integrons, and pathogenicity islands. Somewhat unexpectedly, it will also identify the ribosomal RNA operons as likely being mobile since they are unlike the host’s backbone!</li>\n<li>--color: 根据CDs的功能对其着色，使用<a href=\"https://www.sanger.ac.uk/science/tools/artemis\">Artemis</a>查看</li>\n<li>--threads: 线程数</li>\n<li>--min_contig_size: 低于阈值的序列将被忽略，不对其进行预测</li>\n<li>--output_choice: 控制输出的文件类型，详见<a href=\"https://github.com/linsalrob/PhiSpy\">官网</a></li>\n</ul>\n<h1 id=\"报错处理\"><a href=\"#报错处理\" class=\"headerlink\" title=\"报错处理\"></a>报错处理</h1><ul>\n<li><p>由于序列ID引发的错误</p>\n<ul>\n<li>错误信息如下：</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/bin/PhiSpy.py&quot;, line 10, in &lt;module&gt;</span><br><span class=\"line\">  sys.exit(run())</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/main.py&quot;, line 122, in run</span><br><span class=\"line\">  main(sys.argv)</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/main.py&quot;, line 44, in main</span><br><span class=\"line\">  args<span class=\"built_in\">_</span>parser.record = PhiSpyModules.SeqioFilter(filter(lambda x: len(x.seq) &gt; args<span class=\"built_in\">_</span>parser.min<span class=\"built_in\">_</span>contig<span class=\"built_in\">_</span>size, SeqIO.parse(handle, &quot;genbank&quot;)))</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/seqio<span class=\"built_in\">_</span>filter.py&quot;, line 33, in <span class=\"built_in\">_</span><span class=\"built_in\">_</span>init<span class=\"built_in\">_</span><span class=\"built_in\">_</span></span><br><span class=\"line\">  for n, item in enumerate(content):</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/SeqIO/Interfaces.py&quot;, line 74, in <span class=\"built_in\">_</span><span class=\"built_in\">_</span>next<span class=\"built_in\">_</span><span class=\"built_in\">_</span></span><br><span class=\"line\">  return next(self.records)</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 516, in parse<span class=\"built_in\">_</span>records</span><br><span class=\"line\">  record = self.parse(handle, do<span class=\"built_in\">_</span>features)</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 499, in parse</span><br><span class=\"line\">  if self.feed(handle, consumer, do<span class=\"built_in\">_</span>features):</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 465, in feed</span><br><span class=\"line\">  self.<span class=\"built_in\">_</span>feed<span class=\"built_in\">_</span>first<span class=\"built_in\">_</span>line(consumer, self.line)</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 1571, in <span class=\"built_in\">_</span>feed<span class=\"built_in\">_</span>first<span class=\"built_in\">_</span>line</span><br><span class=\"line\">  raise ValueError(&quot;Did not recognise the LOCUS line layout:<span class=\"keyword\">\\n</span>&quot; + line)</span><br><span class=\"line\">ValueError: Did not recognise the LOCUS line layout:</span><br><span class=\"line\">LOCUS       NODE<span class=\"built_in\">_</span>52<span class=\"built_in\">_</span>length<span class=\"built_in\">_</span>15591<span class=\"built_in\">_</span>cov<span class=\"built_in\">_</span>14.37480715591 bp</span><br></pre></td></tr></table></figure>\n<ul>\n<li>解决方案<ul>\n<li>将sequence ID缩短</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"批处理并整合结果\"><a href=\"#批处理并整合结果\" class=\"headerlink\" title=\"批处理并整合结果\"></a>批处理并整合结果</h1><p>撰写脚本“run_PhiSpy.pl”。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> Bio::SeqIO;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 12, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @gbk = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.gbk&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@gbk) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).gbk/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;_prophage&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;PhiSpy.py $_ -o $out --phage_genes 1 --min_contig_size 5000 --output_choice 1 --color --phmms pVOGs.hmm --threads 8&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;All.prophages.txt&quot;</span> || <span class=\"keyword\">die</span>;<span class=\"comment\"># print prophages informations</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Strain\\tPhage ID\\tContig ID\\tStart location of the prophage\\tStop location of the prophage\\tStart of attL\\tEnd of attL\\tStart of attR\\tEnd of attR\\tsequence of attL\\tSequence of attR\\tWhy this att site was chosen for this prophage\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\"># attachment (att) sites</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> SEQ, <span class=\"string\">&quot;&gt;All.prophages.seq&quot;</span> || <span class=\"keyword\">die</span>;<span class=\"comment\"># print prophages sequences</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> SEQ <span class=\"string\">&quot;Strain\\tPhage ID\\tContig ID\\tGene Start\\tGene End\\tStrand\\tAnnotation\\tProtein sequences\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @result = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*_prophage&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@result) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+)_prophage/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $prophage = $_ . <span class=\"string\">&quot;/prophage_coordinates.tsv&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (! -z $prophage) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$prophage&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $contig = $lines[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $gbk = $str . <span class=\"string\">&quot;.gbk&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $seqin = Bio::SeqIO-&gt;new( <span class=\"string\">-format =&gt;</span> <span class=\"string\">&#x27;genbank&#x27;</span>, <span class=\"string\">-file =&gt;</span> <span class=\"string\">&quot;$gbk&quot;</span>);<span class=\"comment\">#需要在gbk文件所在的目录中运行命令!</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>( (<span class=\"keyword\">my</span> $seq = $seqin-&gt;next_seq) ) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sf ( $seq-&gt;get_SeqFeatures ) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> ($seq-&gt;display_name eq $contig) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>( $sf-&gt;primary_tag eq <span class=\"string\">&#x27;CDS&#x27;</span> ) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\">#print SEQ $str, &quot;\\t&quot;, $lines[0], &quot;\\t&quot;, $seq-&gt;display_name, &quot;\\t&quot;, $sf-&gt;start, &quot;\\t&quot;, $sf-&gt;end, &quot;\\t&quot;, $sf-&gt;strand, &quot;\\t&quot;, $sf-&gt;get_tag_values(&#x27;product&#x27;), &quot;\\t&quot;, $sf-&gt;get_tag_values(&#x27;translation&#x27;), $seq-&gt;seq,&quot;\\n&quot;;# Also print contig sequences</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">print</span> SEQ $str, <span class=\"string\">&quot;\\t&quot;</span>, $lines[<span class=\"number\">0</span>], <span class=\"string\">&quot;\\t&quot;</span>, $seq-&gt;display_name, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;start, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;end, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;strand, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;product&#x27;</span>), <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;translation&#x27;</span>),<span class=\"string\">&quot;\\n&quot;</span>;<span class=\"comment\"># Only print Protein sequences</span></span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $str . <span class=\"string\">&quot;\\t&quot;</span> . $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\"><span class=\"keyword\">close</span> SEQ;</span><br></pre></td></tr></table></figure>\n\n<p>将“run_PhiSpy.pl”和后缀名为“.gbk”的GenBank格式的文件，以及“pVOGs.hmm”放在同一目录下，运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_PhiSpy.pl</span><br></pre></td></tr></table></figure>\n\n<p>得到两个汇总文件：</p>\n<ul>\n<li><strong>All.prophages.txt</strong>: 包含prophage信息的文件</li>\n<li><strong>All.prophages.seq</strong>: 包含prophage序列的文件</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"All.prophages.txt\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"All.prophages.seq\"></p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“53f4”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://github.com/linsalrob/PhiSpy\">https://github.com/linsalrob/PhiSpy</a></li>\n</ul>\n","more":"<p>本文介绍如何从细菌&#x2F;古菌中预测前噬菌体。</p>\n<h1 id=\"软件选择\"><a href=\"#软件选择\" class=\"headerlink\" title=\"软件选择\"></a>软件选择</h1><ul>\n<li><a href=\"https://github.com/linsalrob/PhiSpy\">PhiSpy</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"安装主程序\"><a href=\"#安装主程序\" class=\"headerlink\" title=\"安装主程序\"></a>安装主程序</h2><ul>\n<li><p>推荐使用conda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install phispy</span><br><span class=\"line\">conda install perl-bioperl</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"下载模型\"><a href=\"#下载模型\" class=\"headerlink\" title=\"下载模型\"></a>下载模型</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://ftp.ncbi.nlm.nih.gov/pub/kristensen/pVOGs/downloads/All/AllvogHMMprofiles.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf AllvogHMMprofiles.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> AllvogHMMprofiles/* &gt; pVOGs.hmm</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"输入文件\"><a href=\"#输入文件\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h1><ul>\n<li>需要GenBank格式的文件，可通过<a href=\"http://rast.nmpdr.org/rast.cgi\">RAST server</a>或<a href=\"https://github.com/tseemann/prokka\">PROKKA</a>获得。</li>\n</ul>\n<h1 id=\"运行软件\"><a href=\"#运行软件\" class=\"headerlink\" title=\"运行软件\"></a>运行软件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PhiSpy.py genbank_file -o output_directory --phage_genes 1 --color --threads 6 --phmms pVOGs.hmm --min_contig_size 5000 --output_choice 1</span><br></pre></td></tr></table></figure>\n<ul>\n<li>genbank file: 输入文件</li>\n<li>output directory: 输出目录</li>\n<li>--phage_genes: 区域内含有的被鉴定为噬菌体基因的最小数量。默认采用严格模式，即在每个前噬菌体区域必须鉴定得到两个或更多个phage基因。调高该参数的值将会减少预测到的前噬菌体的数量，反之，减小参数值，将会得到更多的移动元件。如果该参数设置为0，将会预测plasmids, integrons, and pathogenicity islands. Somewhat unexpectedly, it will also identify the ribosomal RNA operons as likely being mobile since they are unlike the host’s backbone!</li>\n<li>--color: 根据CDs的功能对其着色，使用<a href=\"https://www.sanger.ac.uk/science/tools/artemis\">Artemis</a>查看</li>\n<li>--threads: 线程数</li>\n<li>--min_contig_size: 低于阈值的序列将被忽略，不对其进行预测</li>\n<li>--output_choice: 控制输出的文件类型，详见<a href=\"https://github.com/linsalrob/PhiSpy\">官网</a></li>\n</ul>\n<h1 id=\"报错处理\"><a href=\"#报错处理\" class=\"headerlink\" title=\"报错处理\"></a>报错处理</h1><ul>\n<li><p>由于序列ID引发的错误</p>\n<ul>\n<li>错误信息如下：</li>\n</ul>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/bin/PhiSpy.py&quot;, line 10, in &lt;module&gt;</span><br><span class=\"line\">  sys.exit(run())</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/main.py&quot;, line 122, in run</span><br><span class=\"line\">  main(sys.argv)</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/main.py&quot;, line 44, in main</span><br><span class=\"line\">  args<span class=\"built_in\">_</span>parser.record = PhiSpyModules.SeqioFilter(filter(lambda x: len(x.seq) &gt; args<span class=\"built_in\">_</span>parser.min<span class=\"built_in\">_</span>contig<span class=\"built_in\">_</span>size, SeqIO.parse(handle, &quot;genbank&quot;)))</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/seqio<span class=\"built_in\">_</span>filter.py&quot;, line 33, in <span class=\"built_in\">_</span><span class=\"built_in\">_</span>init<span class=\"built_in\">_</span><span class=\"built_in\">_</span></span><br><span class=\"line\">  for n, item in enumerate(content):</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/SeqIO/Interfaces.py&quot;, line 74, in <span class=\"built_in\">_</span><span class=\"built_in\">_</span>next<span class=\"built_in\">_</span><span class=\"built_in\">_</span></span><br><span class=\"line\">  return next(self.records)</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 516, in parse<span class=\"built_in\">_</span>records</span><br><span class=\"line\">  record = self.parse(handle, do<span class=\"built_in\">_</span>features)</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 499, in parse</span><br><span class=\"line\">  if self.feed(handle, consumer, do<span class=\"built_in\">_</span>features):</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 465, in feed</span><br><span class=\"line\">  self.<span class=\"built_in\">_</span>feed<span class=\"built_in\">_</span>first<span class=\"built_in\">_</span>line(consumer, self.line)</span><br><span class=\"line\">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 1571, in <span class=\"built_in\">_</span>feed<span class=\"built_in\">_</span>first<span class=\"built_in\">_</span>line</span><br><span class=\"line\">  raise ValueError(&quot;Did not recognise the LOCUS line layout:<span class=\"keyword\">\\n</span>&quot; + line)</span><br><span class=\"line\">ValueError: Did not recognise the LOCUS line layout:</span><br><span class=\"line\">LOCUS       NODE<span class=\"built_in\">_</span>52<span class=\"built_in\">_</span>length<span class=\"built_in\">_</span>15591<span class=\"built_in\">_</span>cov<span class=\"built_in\">_</span>14.37480715591 bp</span><br></pre></td></tr></table></figure>\n<ul>\n<li>解决方案<ul>\n<li>将sequence ID缩短</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"批处理并整合结果\"><a href=\"#批处理并整合结果\" class=\"headerlink\" title=\"批处理并整合结果\"></a>批处理并整合结果</h1><p>撰写脚本“run_PhiSpy.pl”。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> Bio::SeqIO;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 12, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @gbk = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.gbk&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@gbk) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).gbk/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;_prophage&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;PhiSpy.py $_ -o $out --phage_genes 1 --min_contig_size 5000 --output_choice 1 --color --phmms pVOGs.hmm --threads 8&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;All.prophages.txt&quot;</span> || <span class=\"keyword\">die</span>;<span class=\"comment\"># print prophages informations</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Strain\\tPhage ID\\tContig ID\\tStart location of the prophage\\tStop location of the prophage\\tStart of attL\\tEnd of attL\\tStart of attR\\tEnd of attR\\tsequence of attL\\tSequence of attR\\tWhy this att site was chosen for this prophage\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\"># attachment (att) sites</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> SEQ, <span class=\"string\">&quot;&gt;All.prophages.seq&quot;</span> || <span class=\"keyword\">die</span>;<span class=\"comment\"># print prophages sequences</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> SEQ <span class=\"string\">&quot;Strain\\tPhage ID\\tContig ID\\tGene Start\\tGene End\\tStrand\\tAnnotation\\tProtein sequences\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @result = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*_prophage&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@result) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+)_prophage/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $prophage = $_ . <span class=\"string\">&quot;/prophage_coordinates.tsv&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (! -z $prophage) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$prophage&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $contig = $lines[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $gbk = $str . <span class=\"string\">&quot;.gbk&quot;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $seqin = Bio::SeqIO-&gt;new( <span class=\"string\">-format =&gt;</span> <span class=\"string\">&#x27;genbank&#x27;</span>, <span class=\"string\">-file =&gt;</span> <span class=\"string\">&quot;$gbk&quot;</span>);<span class=\"comment\">#需要在gbk文件所在的目录中运行命令!</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>( (<span class=\"keyword\">my</span> $seq = $seqin-&gt;next_seq) ) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sf ( $seq-&gt;get_SeqFeatures ) &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> ($seq-&gt;display_name eq $contig) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>( $sf-&gt;primary_tag eq <span class=\"string\">&#x27;CDS&#x27;</span> ) &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"comment\">#print SEQ $str, &quot;\\t&quot;, $lines[0], &quot;\\t&quot;, $seq-&gt;display_name, &quot;\\t&quot;, $sf-&gt;start, &quot;\\t&quot;, $sf-&gt;end, &quot;\\t&quot;, $sf-&gt;strand, &quot;\\t&quot;, $sf-&gt;get_tag_values(&#x27;product&#x27;), &quot;\\t&quot;, $sf-&gt;get_tag_values(&#x27;translation&#x27;), $seq-&gt;seq,&quot;\\n&quot;;# Also print contig sequences</span></span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">print</span> SEQ $str, <span class=\"string\">&quot;\\t&quot;</span>, $lines[<span class=\"number\">0</span>], <span class=\"string\">&quot;\\t&quot;</span>, $seq-&gt;display_name, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;start, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;end, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;strand, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;product&#x27;</span>), <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;translation&#x27;</span>),<span class=\"string\">&quot;\\n&quot;</span>;<span class=\"comment\"># Only print Protein sequences</span></span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $str . <span class=\"string\">&quot;\\t&quot;</span> . $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\"><span class=\"keyword\">close</span> SEQ;</span><br></pre></td></tr></table></figure>\n\n<p>将“run_PhiSpy.pl”和后缀名为“.gbk”的GenBank格式的文件，以及“pVOGs.hmm”放在同一目录下，运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_PhiSpy.pl</span><br></pre></td></tr></table></figure>\n\n<p>得到两个汇总文件：</p>\n<ul>\n<li><strong>All.prophages.txt</strong>: 包含prophage信息的文件</li>\n<li><strong>All.prophages.seq</strong>: 包含prophage序列的文件</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg\" alt=\"All.prophages.txt\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg\" alt=\"All.prophages.seq\"></p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“53f4”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://github.com/linsalrob/PhiSpy\">https://github.com/linsalrob/PhiSpy</a></li>\n</ul>\n","categories":[],"tags":[]}