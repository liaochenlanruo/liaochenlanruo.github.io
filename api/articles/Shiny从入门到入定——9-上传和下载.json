{"title":"Shiny从入门到入定——9-上传和下载","slug":"Shiny从入门到入定——9-上传和下载","date":"2024-04-27T03:01:58.000Z","updated":"2024-04-27T03:04:31.887Z","comments":true,"path":"api/articles/Shiny从入门到入定——9-上传和下载.json","excerpt":null,"covers":["https://d33wubrfki0l68.cloudfront.net/31fddd4b87d0e36141c7b8cbb2dd240f8c2d26d1/026fa/demos/action-transfer/upload.png","https://d33wubrfki0l68.cloudfront.net/24e3c954a6c32523d02cd22597227ffb7b77313e/b15ad/demos/action-transfer/download.png","https://d33wubrfki0l68.cloudfront.net/eaecc41d850e5ddb2e0258dc33b939b249add5f3/800ce/demos/action-transfer/download-data.png","https://d33wubrfki0l68.cloudfront.net/25874d076587129b1d92ceff28de69b7e5aec561/31f22/demos/action-transfer/case-study.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"9-上传和下载\"><a href=\"#9-上传和下载\" class=\"headerlink\" title=\"9 上传和下载\"></a>9 上传和下载</h1><p>在应用中，用户处上传和下载文件是一项常用功能。你可以用它来上传数据进行分析，或者将结果作为数据集或报告下载。本章将介绍在应用中进行文件上传和下载所需的用户界面和服务器组件。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9-1-上传\"><a href=\"#9-1-上传\" class=\"headerlink\" title=\"9.1 上传\"></a>9.1 上传</h2><p>我们先从文件上传开始讨论，向你展示基本的UI和server组件，然后展示它们如何在简单应用中协同工作。</p>\n<h3 id=\"9-1-1-用户界面-UI\"><a href=\"#9-1-1-用户界面-UI\" class=\"headerlink\" title=\"9.1.1 用户界面 UI\"></a>9.1.1 用户界面 UI</h3><p>支持文件上传的用户界面很简单：只需在用户界面中添加<a href=\"https://rdrr.io/pkg/shiny/man/fileInput.html\">fileInput()</a>即可。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;upload&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Upload a file&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>与其他大多数UI组件一样，这里只需要两个必需参数：<code>id</code>和<code>label</code>。<code>width</code>、<code>buttonLabel</code>和<code>placeholder</code>参数允许你以其他方式调整外观。我不会在这里讨论它们，但你可以在<a href=\"https://rdrr.io/pkg/shiny/man/fileInput.html\">?fileInput</a>中了解更多。</p>\n<h3 id=\"9-1-2-服务器-server\"><a href=\"#9-1-2-服务器-server\" class=\"headerlink\" title=\"9.1.2 服务器 server\"></a>9.1.2 服务器 server</h3><p>在server上处理<code>fileInput()</code>比处理其他输入稍微复杂一些。大多数输入返回简单的向量，但<code>fileInput()</code>返回一个包含四列的数据框：</p>\n<ul>\n<li><p><code>name</code>：用户计算机上的原始文件名。</p>\n</li>\n<li><p><code>size</code>：文件大小（以字节为单位）。默认情况下，用户只能上传最多5MB的文件。你可以在启动Shiny之前设置<code>shiny.maxRequestSize</code>选项来增加文件大小限制。例如，要允许最多10MB，可以运行<code>options(shiny.maxRequestSize = 10 * 1024^2)</code>。</p>\n</li>\n<li><p><code>type</code>：文件的<code>“MIME type”</code>。这是文件类型的正式规范，通常根据文件扩展名得出，在Shiny应用中很少需要。</p>\n</li>\n<li><p><code>datapath</code>：数据在server上上传到的路径。请将此路径视为临时路径：如果用户上传更多文件，此文件可能会被删除。数据始终保存到临时目录，并赋予临时名称。</p>\n</li>\n</ul>\n<p>作者认为理解这种数据结构最简单的方法是制作一个简单的应用。运行以下代码并上传几个文件，以了解Shiny提供的数据。在<code>图9.1</code>中，你可以看到我上传了几张小狗照片（来自第7.3节）后的结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;upload&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> buttonLabel <span class=\"operator\">=</span> <span class=\"string\">&quot;Upload...&quot;</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;files&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>files <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/31fddd4b87d0e36141c7b8cbb2dd240f8c2d26d1/026fa/demos/action-transfer/upload.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/31fddd4b87d0e36141c7b8cbb2dd240f8c2d26d1/026fa/demos/action-transfer/upload.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图9.1 这个简单的应用可以让你看到Shiny为上传的文件提供了哪些数据。可以在 https://hadley.shinyapps.io/ms-upload 查看实时效果。\"></p>\n<p>请注意，我使用了<code>label</code>和<code>buttonLabel</code>参数来微调外观，以及<code>multiple = TRUE</code>来允许用户上传多个文件。</p>\n<h3 id=\"9-1-3-上传数据\"><a href=\"#9-1-3-上传数据\" class=\"headerlink\" title=\"9.1.3 上传数据\"></a>9.1.3 上传数据</h3><p>如果用户正在上传数据集，你需要注意以下两个细节：</p>\n<ul>\n<li><p><code>input$upload</code>在页面加载时被初始化为<code>NULL</code>，因此你需要使用<code>req(input$upload)</code>来确保你的代码等待第一个文件上传。</p>\n</li>\n<li><p><code>accept</code>参数允许你限制可能的输入。最简单的方法是提供一个文件扩展名的字符向量，如<code>accept = &quot;.csv&quot;</code>。但是，accept参数只是对浏览器的建议，并不总是强制执行，因此自行验证是个好习惯（例如第8.1节）。在R中获取文件扩展名最简单的方法是使用<a href=\"https://rdrr.io/r/tools/fileutils.html\">tools::file_ext()</a>，但要注意它会删除扩展名前面的<code>.</code>。</p>\n</li>\n</ul>\n<p>将这些想法结合起来，我们得到以下应用，你可以上传一个<code>.csv</code>或<code>.tsv</code>文件，并查看前<code>n</code>行。你可以在 <a href=\"https://hadley.shinyapps.io/ms-upload-validate\">https://hadley.shinyapps.io/ms-upload-validate</a> 查看它的运行情况。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;upload&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> accept <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;.csv&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;.tsv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> step <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;head&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"punctuation\">)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    ext <span class=\"operator\">&lt;-</span> tools<span class=\"operator\">::</span>file_ext<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"operator\">$</span>name<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"built_in\">switch</span><span class=\"punctuation\">(</span>ext<span class=\"punctuation\">,</span></span><br><span class=\"line\">      csv <span class=\"operator\">=</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"operator\">$</span>datapath<span class=\"punctuation\">,</span> delim <span class=\"operator\">=</span> <span class=\"string\">&quot;,&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      tsv <span class=\"operator\">=</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"operator\">$</span>datapath<span class=\"punctuation\">,</span> delim <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      validate<span class=\"punctuation\">(</span><span class=\"string\">&quot;Invalid file; Please upload a .csv or .tsv file&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>head <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，由于<code>multiple = FALSE</code>（默认值），<code>input$file</code>将是一个单行数据框，而<code>input$file$name</code>和<code>input$file$datapath</code>将是一个长度为1的字符向量。</p>\n<h2 id=\"9-2-下载\"><a href=\"#9-2-下载\" class=\"headerlink\" title=\"9.2 下载\"></a>9.2 下载</h2><p>接下来，我们将讨论文件下载，向你展示基本的用户界面和服务器组件，然后演示如何使用它们来允许用户下载数据或报告。</p>\n<h3 id=\"9-2-1-基本操作\"><a href=\"#9-2-1-基本操作\" class=\"headerlink\" title=\"9.2.1 基本操作\"></a>9.2.1 基本操作</h3><p>同样，用户界面非常简单：使用<code>downloadButton(id)</code>或<code>downloadLink(id)</code>为用户提供一个可点击的下载文件选项。结果如<code>图9.2</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  downloadButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;download1&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  downloadLink<span class=\"punctuation\">(</span><span class=\"string\">&quot;download2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/24e3c954a6c32523d02cd22597227ffb7b77313e/b15ad/demos/action-transfer/download.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/24e3c954a6c32523d02cd22597227ffb7b77313e/b15ad/demos/action-transfer/download.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图9.2 一个下载按钮和一个下载链接\"></p>\n<p>你可以使用与<code>actionButtons()</code>相同的<code>class</code>和<code>icon</code>参数来自定义它们的外观，如第2.2.7节所述。</p>\n<p>与其他输出不同，<a href=\"https://rdrr.io/pkg/shiny/man/downloadButton.html\">downloadButton()</a>不与渲染函数配对。相反，你使用<a href=\"https://rdrr.io/pkg/shiny/man/downloadHandler.html\">downloadHandler()</a>，它看起来像这样：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output<span class=\"operator\">$</span>download <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">  filename <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    paste0<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    write.csv<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> file<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><code>downloadHandler()</code>有两个参数，都是函数：</p>\n<ul>\n<li><p><code>filename</code>应该是一个没有参数的函数，返回一个文件名（字符串）。这个函数的工作是创建将在下载对话框中显示给用户的文件名。</p>\n</li>\n<li><p><code>content</code>应该是一个带有一个参数<code>file</code>的函数，file是保存文件的路径。这个函数的工作是将文件保存在Shiny知道的位置，以便可以将其发送给用户。</p>\n</li>\n</ul>\n<p>这是一个不寻常的接口，但它允许Shiny控制文件应该保存的位置（以便可以将其放置在安全位置），同时你仍然可以控制文件的内容。</p>\n<p>接下来，我们将把这些部分组合在一起，展示如何将数据文件或报告传输给用户。</p>\n<h3 id=\"9-2-2-下载数据\"><a href=\"#9-2-2-下载数据\" class=\"headerlink\" title=\"9.2.2 下载数据\"></a>9.2.2 下载数据</h3><p>以下应用通过允许你下载<code>datasets包</code>中的任何数据集作为制表符分隔的文件，展示了数据下载的基础知识，如<code>图9.3</code>所示。我建议使用<code>.tsv</code>（制表符分隔值）而不是<code>.csv</code>（逗号分隔值），因为许多欧洲国家使用逗号来分隔数字的整数部分和小数部分（例如<code>1,23</code>与<code>1.23</code>）。这意味着它们不能使用逗号来分隔字段，而是在所谓的<code>“c”sv</code>文件中使用分号！通过使用制表符分隔的文件，你可以避免这种复杂性，因为它们在任何地方的工作方式都是相同的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dataset&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Pick a dataset&quot;</span><span class=\"punctuation\">,</span> ls<span class=\"punctuation\">(</span><span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;preview&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  downloadButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;download&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Download .tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    out <span class=\"operator\">&lt;-</span> get<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>is.data.frame<span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      validate<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;&#x27;&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;&#x27; is not a data frame&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    out</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>preview <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  output<span class=\"operator\">$</span>download <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">    filename <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      paste0<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      vroom<span class=\"operator\">::</span>vroom_write<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> file<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/eaecc41d850e5ddb2e0258dc33b939b249add5f3/800ce/demos/action-transfer/download-data.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/eaecc41d850e5ddb2e0258dc33b939b249add5f3/800ce/demos/action-transfer/download-data.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图9.3 一个更丰富的应用，允许你选择内置的数据集并在下载前预览。可以在https://hadley.shinyapps.io/ms-download-data查看实时效果。\"></p>\n<p>注意，这里使用了<a href=\"https://rdrr.io/pkg/shiny/man/validate.html\">validate()</a>来仅允许用户下载是数据框的数据集。更好的做法是对列表进行预过滤，但这样可以让您看到<code>validate()</code>的另一个应用。</p>\n<h3 id=\"9-2-3-下载报告\"><a href=\"#9-2-3-下载报告\" class=\"headerlink\" title=\"9.2.3 下载报告\"></a>9.2.3 下载报告</h3><p>除了下载数据外，您可能还希望允许您的应用下载报告，该报告总结了Shiny应用中交互式探索的结果。这是一项需要大量工作的事情，因为您还需要以不同的格式显示相同的信息，但对于高风险的应用来说，这是非常有用的。</p>\n<p>生成此类报告的一种强大方法是使用<a href=\"https://bookdown.org/yihui/rmarkdown/parameterized-reports.html\">参数化的RMarkdown文档</a>。参数化的RMarkdown文件在YAML元数据中有一个<code>params</code>字段：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title<span class=\"operator\">:</span> My Document</span><br><span class=\"line\">output<span class=\"operator\">:</span> html_document</span><br><span class=\"line\">params<span class=\"operator\">:</span></span><br><span class=\"line\">  year<span class=\"operator\">:</span> <span class=\"number\">2018</span></span><br><span class=\"line\">  region<span class=\"operator\">:</span> Europe</span><br><span class=\"line\">  printcode<span class=\"operator\">:</span> <span class=\"literal\">TRUE</span></span><br><span class=\"line\">  data<span class=\"operator\">:</span> file.csv</span><br></pre></td></tr></table></figure>\n\n<p>在文档中，您可以使用<code>params$year</code>、<code>params$region</code>等来引用这些值。YAML元数据中的值是默认值；您通常通过在调用<a href=\"https://pkgs.rstudio.com/rmarkdown/reference/render.html\">rmarkdown::render()</a>时提供<code>params</code>参数来覆盖它们。这使得从相同的<code>.Rmd</code>生成许多不同的报告变得容易。</p>\n<p>以下是一个简单的示例，改编自<a href=\"https://shiny.rstudio.com/articles/generating-reports.html\">https://shiny.rstudio.com/articles/generating-reports.html</a>，该文章更详细地描述了这种技术。关键思想是从<code>downloadHander()</code>的<code>content</code>参数中调用<code>rmarkdown::render()</code>。如果您想生成其他输出格式，只需在<code>.Rmd</code>中更改输出格式，并确保更新扩展名（例如，更改为.pdf）。请在<a href=\"https://hadley.shinyapps.io/ms-download-rmd\">https://hadley.shinyapps.io/ms-download-rmd</a>查看实时效果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of points&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> <span class=\"number\">50</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  downloadButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;report&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Generate report&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>report <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">    filename <span class=\"operator\">=</span> <span class=\"string\">&quot;report.html&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      params <span class=\"operator\">&lt;-</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> input<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      id <span class=\"operator\">&lt;-</span> showNotification<span class=\"punctuation\">(</span></span><br><span class=\"line\">        <span class=\"string\">&quot;Rendering report...&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">        duration <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">        closeButton <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"built_in\">on.exit</span><span class=\"punctuation\">(</span>removeNotification<span class=\"punctuation\">(</span>id<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> add <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">      rmarkdown<span class=\"operator\">::</span>render<span class=\"punctuation\">(</span><span class=\"string\">&quot;report.Rmd&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">        output_file <span class=\"operator\">=</span> file<span class=\"punctuation\">,</span></span><br><span class=\"line\">        params <span class=\"operator\">=</span> params<span class=\"punctuation\">,</span></span><br><span class=\"line\">        envir <span class=\"operator\">=</span> new.env<span class=\"punctuation\">(</span>parent <span class=\"operator\">=</span> <span class=\"built_in\">globalenv</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>渲染一个<code>.Rmd</code>文件通常需要几秒钟的时间，因此这是使用第8.2节中提到的通知的好地方。</p>\n<p>还有一些其他值得了解的技巧：</p>\n<ul>\n<li><p>RMarkdown在当前工作目录中运行，这在许多部署场景中可能会失败（例如，在shinyapps.io上）。您可以通过在应用启动时将报告复制到临时目录来解决此问题（即在server函数外部）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">report_path <span class=\"operator\">&lt;-</span> tempfile<span class=\"punctuation\">(</span>fileext <span class=\"operator\">=</span> <span class=\"string\">&quot;.Rmd&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">file.copy<span class=\"punctuation\">(</span><span class=\"string\">&quot;report.Rmd&quot;</span><span class=\"punctuation\">,</span> report_path<span class=\"punctuation\">,</span> overwrite <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，在调用<code>rmarkdown::render()</code>时，将<code>&quot;report.Rmd&quot;</code>替换为<code>report_path</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rmarkdown<span class=\"operator\">::</span>render<span class=\"punctuation\">(</span>report_path<span class=\"punctuation\">,</span> </span><br><span class=\"line\">  output_file <span class=\"operator\">=</span> file<span class=\"punctuation\">,</span></span><br><span class=\"line\">  params <span class=\"operator\">=</span> params<span class=\"punctuation\">,</span></span><br><span class=\"line\">  envir <span class=\"operator\">=</span> new.env<span class=\"punctuation\">(</span>parent <span class=\"operator\">=</span> <span class=\"built_in\">globalenv</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>默认情况下，RMarkdown会在当前进程中渲染报告，这意味着它将继承Shiny应用的许多设置（如加载的包、选项等）。为了获得更大的健壮性，我建议使用<code>callr包</code>在单独的R会话中运行<code>render()</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render_report <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> params<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  rmarkdown<span class=\"operator\">::</span>render<span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span></span><br><span class=\"line\">    output_file <span class=\"operator\">=</span> output<span class=\"punctuation\">,</span></span><br><span class=\"line\">    params <span class=\"operator\">=</span> params<span class=\"punctuation\">,</span></span><br><span class=\"line\">    envir <span class=\"operator\">=</span> new.env<span class=\"punctuation\">(</span>parent <span class=\"operator\">=</span> <span class=\"built_in\">globalenv</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>report <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">    filename <span class=\"operator\">=</span> <span class=\"string\">&quot;report.html&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      params <span class=\"operator\">&lt;-</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> input<span class=\"operator\">$</span>slider<span class=\"punctuation\">)</span></span><br><span class=\"line\">      callr<span class=\"operator\">::</span>r<span class=\"punctuation\">(</span></span><br><span class=\"line\">        render_report<span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>input <span class=\"operator\">=</span> report_path<span class=\"punctuation\">,</span> output <span class=\"operator\">=</span> file<span class=\"punctuation\">,</span> params <span class=\"operator\">=</span> params<span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>您可以在Mastering Shiny GitHub仓库中的<a href=\"https://github.com/hadley/mastering-shiny/tree/master/rmarkdown-report\">rmarkdown-report&#x2F;</a>文件夹中看到所有这些组件组合在一起。</p>\n<p><a href=\"https://github.com/rstudio/shinymeta\">shinymeta</a>包解决了一个相关的问题：有时您需要将Shiny应用的当前状态转换为可在未来重新运行的可重复报告。要了解更多信息，请查阅Joe Cheng在useR! 2019年主题演讲中介绍的“<a href=\"https://www.youtube.com/watch?v=5KByRC6eqC8\">Shiny的神圣目标：交互性与可重复性</a>”。</p>\n<h2 id=\"9-3-案例研究\"><a href=\"#9-3-案例研究\" class=\"headerlink\" title=\"9.3 案例研究\"></a>9.3 案例研究</h2><p>最后，我们将通过一个简单的案例研究来结束本章。在这个案例中，我们将上传一个文件（用户可以指定分隔符），预览它，使用Sam Firke的<a href=\"http://sfirke.github.io/janitor\">janitor</a>包进行一些可选的转换，然后让用户将其下载为<code>.tsv</code>文件。</p>\n<p>为了更容易地理解如何使用这个应用，我使用了<a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarLayout()</a>来将应用分为三个主要步骤：</p>\n<ul>\n<li><p>上传和解析文件</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui_upload <span class=\"operator\">&lt;-</span> sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;file&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Data&quot;</span><span class=\"punctuation\">,</span> buttonLabel <span class=\"operator\">=</span> <span class=\"string\">&quot;Upload...&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;delim&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Delimiter (leave blank to guess)&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;skip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows to skip&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;rows&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows to preview&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    h3<span class=\"punctuation\">(</span><span class=\"string\">&quot;Raw data&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;preview1&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清理文件</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui_clean <span class=\"operator\">&lt;-</span> sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;snake&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rename columns to snake case?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;constant&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Remove constant columns?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;empty&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Remove empty cols?&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    h3<span class=\"punctuation\">(</span><span class=\"string\">&quot;Cleaner data&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;preview2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载文件</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui_download <span class=\"operator\">&lt;-</span> fluidRow<span class=\"punctuation\">(</span></span><br><span class=\"line\">  column<span class=\"punctuation\">(</span>width <span class=\"operator\">=</span> <span class=\"number\">12</span><span class=\"punctuation\">,</span> downloadButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;download&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">class</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;btn-block&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，这些文件被组合成一个单独的<a href=\"https://rdrr.io/pkg/shiny/man/fluidPage.html\">fluidPage()</a>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  ui_upload<span class=\"punctuation\">,</span></span><br><span class=\"line\">  ui_clean<span class=\"punctuation\">,</span></span><br><span class=\"line\">  ui_download</span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>这种相同的组织方式使得理解应用程序变得更加容易。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\"># Upload ---------------------------------------------------------</span></span><br><span class=\"line\">  raw <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>file<span class=\"punctuation\">)</span></span><br><span class=\"line\">    delim <span class=\"operator\">&lt;-</span> <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>delim <span class=\"operator\">==</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">else</span> input<span class=\"operator\">$</span>delim</span><br><span class=\"line\">    vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>file<span class=\"operator\">$</span>datapath<span class=\"punctuation\">,</span> delim <span class=\"operator\">=</span> delim<span class=\"punctuation\">,</span> skip <span class=\"operator\">=</span> input<span class=\"operator\">$</span>skip<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>preview1 <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>raw<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>rows<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Clean ----------------------------------------------------------</span></span><br><span class=\"line\">  tidied <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    out <span class=\"operator\">&lt;-</span> raw<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>snake<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>make_clean_names<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>empty<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      out <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>remove_empty<span class=\"punctuation\">(</span>out<span class=\"punctuation\">,</span> <span class=\"string\">&quot;cols&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>constant<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      out <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>remove_constant<span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    out</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>preview2 <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>tidied<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>rows<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Download -------------------------------------------------------</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>download <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">    filename <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      paste0<span class=\"punctuation\">(</span>tools<span class=\"operator\">::</span>file_path_sans_ext<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>file<span class=\"operator\">$</span>name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      vroom<span class=\"operator\">::</span>vroom_write<span class=\"punctuation\">(</span>tidied<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> file<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/25874d076587129b1d92ceff28de69b7e5aec561/31f22/demos/action-transfer/case-study.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/25874d076587129b1d92ceff28de69b7e5aec561/31f22/demos/action-transfer/case-study.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图9.4 一个允许用户上传文件、执行一些简单的清理操作，然后下载结果的应用程序。可访问 https://hadley.shinyapps.io/ms-case-study 查看实时效果。\"></p>\n</li>\n</ul>\n<h2 id=\"9-4-练习\"><a href=\"#9-4-练习\" class=\"headerlink\" title=\"9.4 练习\"></a>9.4 练习</h2><ol>\n<li><p>使用Thomas Lin Pedersen的<a href=\"https://ambient.data-imaginist.com/\">ambient</a>包生成<a href=\"https://ambient.data-imaginist.com/reference/noise_worley.html\">Worley噪声</a>，并下载其PNG图像。</p>\n</li>\n<li><p>创建一个应用程序，允许用户上传CSV文件，选择一个变量，然后对该变量执行<a href=\"https://rdrr.io/r/stats/t.test.html\">t.test()</a>。在用户上传CSV文件后，您需要使用<a href=\"https://rdrr.io/pkg/shiny/man/updateSelectInput.html\">updateSelectInput()</a>来填充可用的变量。详情请参阅第10.1节。</p>\n</li>\n<li><p>创建一个应用程序，允许用户上传CSV文件，选择一个变量，绘制直方图，然后下载直方图。作为额外的挑战，允许用户从<code>.png</code>、<code>.pdf</code>和<code>.svg</code>输出格式中进行选择。</p>\n</li>\n<li><p>编写一个应用程序，允许用户使用Ryan Timpe的<a href=\"https://github.com/ryantimpe/brickr\">brickr</a>包从任何<code>.png</code>文件创建乐高马赛克。完成基本功能后，添加控件以允许用户选择马赛克的大小（以砖块为单位），并选择使用<code>“universal”</code>或<code>“generic”</code>颜色调色板。</p>\n</li>\n<li><p>第9.3节中的最后一个应用程序包含了一个大型的响应式表达式：</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tidied <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  out <span class=\"operator\">&lt;-</span> raw<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>snake<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>make_clean_names<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>empty<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    out <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>remove_empty<span class=\"punctuation\">(</span>out<span class=\"punctuation\">,</span> <span class=\"string\">&quot;cols&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>constant<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    out <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>remove_constant<span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  out</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p> 将其分解为多个部分，以便当<code>input$empty</code>发生变化时，不会重新运行<code>janitor::make_clean_names()</code>。</p>\n</li>\n</ol>\n<h2 id=\"9-5-总结\"><a href=\"#9-5-总结\" class=\"headerlink\" title=\"9.5 总结\"></a>9.5 总结</h2><p>在本章中，您学习了如何使用<code>fileInput()</code>和<code>downloadButton()</code>来在用户之间传输文件。大多数挑战要么来自处理上传的文件，要么来自生成要下载的文件，因此我向您展示了如何处理一些常见的情况。如果我没有涵盖您在此处的特定挑战，那么您需要将您独特的创造力应用于问题中。</p>\n<p>下一章将帮助您处理在处理用户提供的数据时遇到的一个常见挑战：您需要动态地调整用户界面以更好地适应数据。我将从一些易于理解且可以在许多情况下应用的简单技术开始，逐渐过渡到完全动态的用户界面。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"9-上传和下载\"><a href=\"#9-上传和下载\" class=\"headerlink\" title=\"9 上传和下载\"></a>9 上传和下载</h1><p>在应用中，用户处上传和下载文件是一项常用功能。你可以用它来上传数据进行分析，或者将结果作为数据集或报告下载。本章将介绍在应用中进行文件上传和下载所需的用户界面和服务器组件。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9-1-上传\"><a href=\"#9-1-上传\" class=\"headerlink\" title=\"9.1 上传\"></a>9.1 上传</h2><p>我们先从文件上传开始讨论，向你展示基本的UI和server组件，然后展示它们如何在简单应用中协同工作。</p>\n<h3 id=\"9-1-1-用户界面-UI\"><a href=\"#9-1-1-用户界面-UI\" class=\"headerlink\" title=\"9.1.1 用户界面 UI\"></a>9.1.1 用户界面 UI</h3><p>支持文件上传的用户界面很简单：只需在用户界面中添加<a href=\"https://rdrr.io/pkg/shiny/man/fileInput.html\">fileInput()</a>即可。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;upload&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Upload a file&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>与其他大多数UI组件一样，这里只需要两个必需参数：<code>id</code>和<code>label</code>。<code>width</code>、<code>buttonLabel</code>和<code>placeholder</code>参数允许你以其他方式调整外观。我不会在这里讨论它们，但你可以在<a href=\"https://rdrr.io/pkg/shiny/man/fileInput.html\">?fileInput</a>中了解更多。</p>\n<h3 id=\"9-1-2-服务器-server\"><a href=\"#9-1-2-服务器-server\" class=\"headerlink\" title=\"9.1.2 服务器 server\"></a>9.1.2 服务器 server</h3><p>在server上处理<code>fileInput()</code>比处理其他输入稍微复杂一些。大多数输入返回简单的向量，但<code>fileInput()</code>返回一个包含四列的数据框：</p>\n<ul>\n<li><p><code>name</code>：用户计算机上的原始文件名。</p>\n</li>\n<li><p><code>size</code>：文件大小（以字节为单位）。默认情况下，用户只能上传最多5MB的文件。你可以在启动Shiny之前设置<code>shiny.maxRequestSize</code>选项来增加文件大小限制。例如，要允许最多10MB，可以运行<code>options(shiny.maxRequestSize = 10 * 1024^2)</code>。</p>\n</li>\n<li><p><code>type</code>：文件的<code>“MIME type”</code>。这是文件类型的正式规范，通常根据文件扩展名得出，在Shiny应用中很少需要。</p>\n</li>\n<li><p><code>datapath</code>：数据在server上上传到的路径。请将此路径视为临时路径：如果用户上传更多文件，此文件可能会被删除。数据始终保存到临时目录，并赋予临时名称。</p>\n</li>\n</ul>\n<p>作者认为理解这种数据结构最简单的方法是制作一个简单的应用。运行以下代码并上传几个文件，以了解Shiny提供的数据。在<code>图9.1</code>中，你可以看到我上传了几张小狗照片（来自第7.3节）后的结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;upload&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> buttonLabel <span class=\"operator\">=</span> <span class=\"string\">&quot;Upload...&quot;</span><span class=\"punctuation\">,</span> multiple <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;files&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>files <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/31fddd4b87d0e36141c7b8cbb2dd240f8c2d26d1/026fa/demos/action-transfer/upload.png\" alt=\"图9.1 这个简单的应用可以让你看到Shiny为上传的文件提供了哪些数据。可以在 https://hadley.shinyapps.io/ms-upload 查看实时效果。\"></p>\n<p>请注意，我使用了<code>label</code>和<code>buttonLabel</code>参数来微调外观，以及<code>multiple = TRUE</code>来允许用户上传多个文件。</p>\n<h3 id=\"9-1-3-上传数据\"><a href=\"#9-1-3-上传数据\" class=\"headerlink\" title=\"9.1.3 上传数据\"></a>9.1.3 上传数据</h3><p>如果用户正在上传数据集，你需要注意以下两个细节：</p>\n<ul>\n<li><p><code>input$upload</code>在页面加载时被初始化为<code>NULL</code>，因此你需要使用<code>req(input$upload)</code>来确保你的代码等待第一个文件上传。</p>\n</li>\n<li><p><code>accept</code>参数允许你限制可能的输入。最简单的方法是提供一个文件扩展名的字符向量，如<code>accept = &quot;.csv&quot;</code>。但是，accept参数只是对浏览器的建议，并不总是强制执行，因此自行验证是个好习惯（例如第8.1节）。在R中获取文件扩展名最简单的方法是使用<a href=\"https://rdrr.io/r/tools/fileutils.html\">tools::file_ext()</a>，但要注意它会删除扩展名前面的<code>.</code>。</p>\n</li>\n</ul>\n<p>将这些想法结合起来，我们得到以下应用，你可以上传一个<code>.csv</code>或<code>.tsv</code>文件，并查看前<code>n</code>行。你可以在 <a href=\"https://hadley.shinyapps.io/ms-upload-validate\">https://hadley.shinyapps.io/ms-upload-validate</a> 查看它的运行情况。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;upload&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> accept <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;.csv&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;.tsv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> step <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;head&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"punctuation\">)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    ext <span class=\"operator\">&lt;-</span> tools<span class=\"operator\">::</span>file_ext<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"operator\">$</span>name<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"built_in\">switch</span><span class=\"punctuation\">(</span>ext<span class=\"punctuation\">,</span></span><br><span class=\"line\">      csv <span class=\"operator\">=</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"operator\">$</span>datapath<span class=\"punctuation\">,</span> delim <span class=\"operator\">=</span> <span class=\"string\">&quot;,&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      tsv <span class=\"operator\">=</span> vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>upload<span class=\"operator\">$</span>datapath<span class=\"punctuation\">,</span> delim <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      validate<span class=\"punctuation\">(</span><span class=\"string\">&quot;Invalid file; Please upload a .csv or .tsv file&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>head <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，由于<code>multiple = FALSE</code>（默认值），<code>input$file</code>将是一个单行数据框，而<code>input$file$name</code>和<code>input$file$datapath</code>将是一个长度为1的字符向量。</p>\n<h2 id=\"9-2-下载\"><a href=\"#9-2-下载\" class=\"headerlink\" title=\"9.2 下载\"></a>9.2 下载</h2><p>接下来，我们将讨论文件下载，向你展示基本的用户界面和服务器组件，然后演示如何使用它们来允许用户下载数据或报告。</p>\n<h3 id=\"9-2-1-基本操作\"><a href=\"#9-2-1-基本操作\" class=\"headerlink\" title=\"9.2.1 基本操作\"></a>9.2.1 基本操作</h3><p>同样，用户界面非常简单：使用<code>downloadButton(id)</code>或<code>downloadLink(id)</code>为用户提供一个可点击的下载文件选项。结果如<code>图9.2</code>所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  downloadButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;download1&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  downloadLink<span class=\"punctuation\">(</span><span class=\"string\">&quot;download2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/24e3c954a6c32523d02cd22597227ffb7b77313e/b15ad/demos/action-transfer/download.png\" alt=\"图9.2 一个下载按钮和一个下载链接\"></p>\n<p>你可以使用与<code>actionButtons()</code>相同的<code>class</code>和<code>icon</code>参数来自定义它们的外观，如第2.2.7节所述。</p>\n<p>与其他输出不同，<a href=\"https://rdrr.io/pkg/shiny/man/downloadButton.html\">downloadButton()</a>不与渲染函数配对。相反，你使用<a href=\"https://rdrr.io/pkg/shiny/man/downloadHandler.html\">downloadHandler()</a>，它看起来像这样：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output<span class=\"operator\">$</span>download <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">  filename <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    paste0<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    write.csv<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> file<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><code>downloadHandler()</code>有两个参数，都是函数：</p>\n<ul>\n<li><p><code>filename</code>应该是一个没有参数的函数，返回一个文件名（字符串）。这个函数的工作是创建将在下载对话框中显示给用户的文件名。</p>\n</li>\n<li><p><code>content</code>应该是一个带有一个参数<code>file</code>的函数，file是保存文件的路径。这个函数的工作是将文件保存在Shiny知道的位置，以便可以将其发送给用户。</p>\n</li>\n</ul>\n<p>这是一个不寻常的接口，但它允许Shiny控制文件应该保存的位置（以便可以将其放置在安全位置），同时你仍然可以控制文件的内容。</p>\n<p>接下来，我们将把这些部分组合在一起，展示如何将数据文件或报告传输给用户。</p>\n<h3 id=\"9-2-2-下载数据\"><a href=\"#9-2-2-下载数据\" class=\"headerlink\" title=\"9.2.2 下载数据\"></a>9.2.2 下载数据</h3><p>以下应用通过允许你下载<code>datasets包</code>中的任何数据集作为制表符分隔的文件，展示了数据下载的基础知识，如<code>图9.3</code>所示。我建议使用<code>.tsv</code>（制表符分隔值）而不是<code>.csv</code>（逗号分隔值），因为许多欧洲国家使用逗号来分隔数字的整数部分和小数部分（例如<code>1,23</code>与<code>1.23</code>）。这意味着它们不能使用逗号来分隔字段，而是在所谓的<code>“c”sv</code>文件中使用分号！通过使用制表符分隔的文件，你可以避免这种复杂性，因为它们在任何地方的工作方式都是相同的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dataset&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Pick a dataset&quot;</span><span class=\"punctuation\">,</span> ls<span class=\"punctuation\">(</span><span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;preview&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  downloadButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;download&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Download .tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    out <span class=\"operator\">&lt;-</span> get<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;package:datasets&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>is.data.frame<span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      validate<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;&#x27;&quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;&#x27; is not a data frame&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    out</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>preview <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    head<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  output<span class=\"operator\">$</span>download <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">    filename <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      paste0<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>dataset<span class=\"punctuation\">,</span> <span class=\"string\">&quot;.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      vroom<span class=\"operator\">::</span>vroom_write<span class=\"punctuation\">(</span>data<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> file<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/eaecc41d850e5ddb2e0258dc33b939b249add5f3/800ce/demos/action-transfer/download-data.png\" alt=\"图9.3 一个更丰富的应用，允许你选择内置的数据集并在下载前预览。可以在https://hadley.shinyapps.io/ms-download-data查看实时效果。\"></p>\n<p>注意，这里使用了<a href=\"https://rdrr.io/pkg/shiny/man/validate.html\">validate()</a>来仅允许用户下载是数据框的数据集。更好的做法是对列表进行预过滤，但这样可以让您看到<code>validate()</code>的另一个应用。</p>\n<h3 id=\"9-2-3-下载报告\"><a href=\"#9-2-3-下载报告\" class=\"headerlink\" title=\"9.2.3 下载报告\"></a>9.2.3 下载报告</h3><p>除了下载数据外，您可能还希望允许您的应用下载报告，该报告总结了Shiny应用中交互式探索的结果。这是一项需要大量工作的事情，因为您还需要以不同的格式显示相同的信息，但对于高风险的应用来说，这是非常有用的。</p>\n<p>生成此类报告的一种强大方法是使用<a href=\"https://bookdown.org/yihui/rmarkdown/parameterized-reports.html\">参数化的RMarkdown文档</a>。参数化的RMarkdown文件在YAML元数据中有一个<code>params</code>字段：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title<span class=\"operator\">:</span> My Document</span><br><span class=\"line\">output<span class=\"operator\">:</span> html_document</span><br><span class=\"line\">params<span class=\"operator\">:</span></span><br><span class=\"line\">  year<span class=\"operator\">:</span> <span class=\"number\">2018</span></span><br><span class=\"line\">  region<span class=\"operator\">:</span> Europe</span><br><span class=\"line\">  printcode<span class=\"operator\">:</span> <span class=\"literal\">TRUE</span></span><br><span class=\"line\">  data<span class=\"operator\">:</span> file.csv</span><br></pre></td></tr></table></figure>\n\n<p>在文档中，您可以使用<code>params$year</code>、<code>params$region</code>等来引用这些值。YAML元数据中的值是默认值；您通常通过在调用<a href=\"https://pkgs.rstudio.com/rmarkdown/reference/render.html\">rmarkdown::render()</a>时提供<code>params</code>参数来覆盖它们。这使得从相同的<code>.Rmd</code>生成许多不同的报告变得容易。</p>\n<p>以下是一个简单的示例，改编自<a href=\"https://shiny.rstudio.com/articles/generating-reports.html\">https://shiny.rstudio.com/articles/generating-reports.html</a>，该文章更详细地描述了这种技术。关键思想是从<code>downloadHander()</code>的<code>content</code>参数中调用<code>rmarkdown::render()</code>。如果您想生成其他输出格式，只需在<code>.Rmd</code>中更改输出格式，并确保更新扩展名（例如，更改为.pdf）。请在<a href=\"https://hadley.shinyapps.io/ms-download-rmd\">https://hadley.shinyapps.io/ms-download-rmd</a>查看实时效果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number of points&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> <span class=\"number\">50</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  downloadButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;report&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Generate report&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>report <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">    filename <span class=\"operator\">=</span> <span class=\"string\">&quot;report.html&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      params <span class=\"operator\">&lt;-</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> input<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      id <span class=\"operator\">&lt;-</span> showNotification<span class=\"punctuation\">(</span></span><br><span class=\"line\">        <span class=\"string\">&quot;Rendering report...&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">        duration <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">        closeButton <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"built_in\">on.exit</span><span class=\"punctuation\">(</span>removeNotification<span class=\"punctuation\">(</span>id<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> add <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">      rmarkdown<span class=\"operator\">::</span>render<span class=\"punctuation\">(</span><span class=\"string\">&quot;report.Rmd&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">        output_file <span class=\"operator\">=</span> file<span class=\"punctuation\">,</span></span><br><span class=\"line\">        params <span class=\"operator\">=</span> params<span class=\"punctuation\">,</span></span><br><span class=\"line\">        envir <span class=\"operator\">=</span> new.env<span class=\"punctuation\">(</span>parent <span class=\"operator\">=</span> <span class=\"built_in\">globalenv</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>渲染一个<code>.Rmd</code>文件通常需要几秒钟的时间，因此这是使用第8.2节中提到的通知的好地方。</p>\n<p>还有一些其他值得了解的技巧：</p>\n<ul>\n<li><p>RMarkdown在当前工作目录中运行，这在许多部署场景中可能会失败（例如，在shinyapps.io上）。您可以通过在应用启动时将报告复制到临时目录来解决此问题（即在server函数外部）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">report_path <span class=\"operator\">&lt;-</span> tempfile<span class=\"punctuation\">(</span>fileext <span class=\"operator\">=</span> <span class=\"string\">&quot;.Rmd&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">file.copy<span class=\"punctuation\">(</span><span class=\"string\">&quot;report.Rmd&quot;</span><span class=\"punctuation\">,</span> report_path<span class=\"punctuation\">,</span> overwrite <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，在调用<code>rmarkdown::render()</code>时，将<code>&quot;report.Rmd&quot;</code>替换为<code>report_path</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rmarkdown<span class=\"operator\">::</span>render<span class=\"punctuation\">(</span>report_path<span class=\"punctuation\">,</span> </span><br><span class=\"line\">  output_file <span class=\"operator\">=</span> file<span class=\"punctuation\">,</span></span><br><span class=\"line\">  params <span class=\"operator\">=</span> params<span class=\"punctuation\">,</span></span><br><span class=\"line\">  envir <span class=\"operator\">=</span> new.env<span class=\"punctuation\">(</span>parent <span class=\"operator\">=</span> <span class=\"built_in\">globalenv</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>默认情况下，RMarkdown会在当前进程中渲染报告，这意味着它将继承Shiny应用的许多设置（如加载的包、选项等）。为了获得更大的健壮性，我建议使用<code>callr包</code>在单独的R会话中运行<code>render()</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render_report <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> params<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  rmarkdown<span class=\"operator\">::</span>render<span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span></span><br><span class=\"line\">    output_file <span class=\"operator\">=</span> output<span class=\"punctuation\">,</span></span><br><span class=\"line\">    params <span class=\"operator\">=</span> params<span class=\"punctuation\">,</span></span><br><span class=\"line\">    envir <span class=\"operator\">=</span> new.env<span class=\"punctuation\">(</span>parent <span class=\"operator\">=</span> <span class=\"built_in\">globalenv</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>report <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">    filename <span class=\"operator\">=</span> <span class=\"string\">&quot;report.html&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      params <span class=\"operator\">&lt;-</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> input<span class=\"operator\">$</span>slider<span class=\"punctuation\">)</span></span><br><span class=\"line\">      callr<span class=\"operator\">::</span>r<span class=\"punctuation\">(</span></span><br><span class=\"line\">        render_report<span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>input <span class=\"operator\">=</span> report_path<span class=\"punctuation\">,</span> output <span class=\"operator\">=</span> file<span class=\"punctuation\">,</span> params <span class=\"operator\">=</span> params<span class=\"punctuation\">)</span></span><br><span class=\"line\">      <span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>您可以在Mastering Shiny GitHub仓库中的<a href=\"https://github.com/hadley/mastering-shiny/tree/master/rmarkdown-report\">rmarkdown-report&#x2F;</a>文件夹中看到所有这些组件组合在一起。</p>\n<p><a href=\"https://github.com/rstudio/shinymeta\">shinymeta</a>包解决了一个相关的问题：有时您需要将Shiny应用的当前状态转换为可在未来重新运行的可重复报告。要了解更多信息，请查阅Joe Cheng在useR! 2019年主题演讲中介绍的“<a href=\"https://www.youtube.com/watch?v=5KByRC6eqC8\">Shiny的神圣目标：交互性与可重复性</a>”。</p>\n<h2 id=\"9-3-案例研究\"><a href=\"#9-3-案例研究\" class=\"headerlink\" title=\"9.3 案例研究\"></a>9.3 案例研究</h2><p>最后，我们将通过一个简单的案例研究来结束本章。在这个案例中，我们将上传一个文件（用户可以指定分隔符），预览它，使用Sam Firke的<a href=\"http://sfirke.github.io/janitor\">janitor</a>包进行一些可选的转换，然后让用户将其下载为<code>.tsv</code>文件。</p>\n<p>为了更容易地理解如何使用这个应用，我使用了<a href=\"https://rdrr.io/pkg/shiny/man/sidebarLayout.html\">sidebarLayout()</a>来将应用分为三个主要步骤：</p>\n<ul>\n<li><p>上传和解析文件</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui_upload <span class=\"operator\">&lt;-</span> sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    fileInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;file&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Data&quot;</span><span class=\"punctuation\">,</span> buttonLabel <span class=\"operator\">=</span> <span class=\"string\">&quot;Upload...&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;delim&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Delimiter (leave blank to guess)&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;skip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows to skip&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;rows&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rows to preview&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    h3<span class=\"punctuation\">(</span><span class=\"string\">&quot;Raw data&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;preview1&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清理文件</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui_clean <span class=\"operator\">&lt;-</span> sidebarLayout<span class=\"punctuation\">(</span></span><br><span class=\"line\">  sidebarPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;snake&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rename columns to snake case?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;constant&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Remove constant columns?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;empty&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Remove empty cols?&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  mainPanel<span class=\"punctuation\">(</span></span><br><span class=\"line\">    h3<span class=\"punctuation\">(</span><span class=\"string\">&quot;Cleaner data&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;preview2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载文件</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui_download <span class=\"operator\">&lt;-</span> fluidRow<span class=\"punctuation\">(</span></span><br><span class=\"line\">  column<span class=\"punctuation\">(</span>width <span class=\"operator\">=</span> <span class=\"number\">12</span><span class=\"punctuation\">,</span> downloadButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;download&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">class</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;btn-block&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，这些文件被组合成一个单独的<a href=\"https://rdrr.io/pkg/shiny/man/fluidPage.html\">fluidPage()</a>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  ui_upload<span class=\"punctuation\">,</span></span><br><span class=\"line\">  ui_clean<span class=\"punctuation\">,</span></span><br><span class=\"line\">  ui_download</span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>这种相同的组织方式使得理解应用程序变得更加容易。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\"># Upload ---------------------------------------------------------</span></span><br><span class=\"line\">  raw <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    req<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>file<span class=\"punctuation\">)</span></span><br><span class=\"line\">    delim <span class=\"operator\">&lt;-</span> <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>delim <span class=\"operator\">==</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">else</span> input<span class=\"operator\">$</span>delim</span><br><span class=\"line\">    vroom<span class=\"operator\">::</span>vroom<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>file<span class=\"operator\">$</span>datapath<span class=\"punctuation\">,</span> delim <span class=\"operator\">=</span> delim<span class=\"punctuation\">,</span> skip <span class=\"operator\">=</span> input<span class=\"operator\">$</span>skip<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>preview1 <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>raw<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>rows<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Clean ----------------------------------------------------------</span></span><br><span class=\"line\">  tidied <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    out <span class=\"operator\">&lt;-</span> raw<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>snake<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>make_clean_names<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>empty<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      out <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>remove_empty<span class=\"punctuation\">(</span>out<span class=\"punctuation\">,</span> <span class=\"string\">&quot;cols&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>constant<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      out <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>remove_constant<span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    out</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>preview2 <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>tidied<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>rows<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># Download -------------------------------------------------------</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>download <span class=\"operator\">&lt;-</span> downloadHandler<span class=\"punctuation\">(</span></span><br><span class=\"line\">    filename <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      paste0<span class=\"punctuation\">(</span>tools<span class=\"operator\">::</span>file_path_sans_ext<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>file<span class=\"operator\">$</span>name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;.tsv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    content <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>file<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      vroom<span class=\"operator\">::</span>vroom_write<span class=\"punctuation\">(</span>tidied<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> file<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/25874d076587129b1d92ceff28de69b7e5aec561/31f22/demos/action-transfer/case-study.png\" alt=\"图9.4 一个允许用户上传文件、执行一些简单的清理操作，然后下载结果的应用程序。可访问 https://hadley.shinyapps.io/ms-case-study 查看实时效果。\"></p>\n</li>\n</ul>\n<h2 id=\"9-4-练习\"><a href=\"#9-4-练习\" class=\"headerlink\" title=\"9.4 练习\"></a>9.4 练习</h2><ol>\n<li><p>使用Thomas Lin Pedersen的<a href=\"https://ambient.data-imaginist.com/\">ambient</a>包生成<a href=\"https://ambient.data-imaginist.com/reference/noise_worley.html\">Worley噪声</a>，并下载其PNG图像。</p>\n</li>\n<li><p>创建一个应用程序，允许用户上传CSV文件，选择一个变量，然后对该变量执行<a href=\"https://rdrr.io/r/stats/t.test.html\">t.test()</a>。在用户上传CSV文件后，您需要使用<a href=\"https://rdrr.io/pkg/shiny/man/updateSelectInput.html\">updateSelectInput()</a>来填充可用的变量。详情请参阅第10.1节。</p>\n</li>\n<li><p>创建一个应用程序，允许用户上传CSV文件，选择一个变量，绘制直方图，然后下载直方图。作为额外的挑战，允许用户从<code>.png</code>、<code>.pdf</code>和<code>.svg</code>输出格式中进行选择。</p>\n</li>\n<li><p>编写一个应用程序，允许用户使用Ryan Timpe的<a href=\"https://github.com/ryantimpe/brickr\">brickr</a>包从任何<code>.png</code>文件创建乐高马赛克。完成基本功能后，添加控件以允许用户选择马赛克的大小（以砖块为单位），并选择使用<code>“universal”</code>或<code>“generic”</code>颜色调色板。</p>\n</li>\n<li><p>第9.3节中的最后一个应用程序包含了一个大型的响应式表达式：</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tidied <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  out <span class=\"operator\">&lt;-</span> raw<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>snake<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>make_clean_names<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>empty<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    out <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>remove_empty<span class=\"punctuation\">(</span>out<span class=\"punctuation\">,</span> <span class=\"string\">&quot;cols&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>constant<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    out <span class=\"operator\">&lt;-</span> janitor<span class=\"operator\">::</span>remove_constant<span class=\"punctuation\">(</span>out<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  out</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p> 将其分解为多个部分，以便当<code>input$empty</code>发生变化时，不会重新运行<code>janitor::make_clean_names()</code>。</p>\n</li>\n</ol>\n<h2 id=\"9-5-总结\"><a href=\"#9-5-总结\" class=\"headerlink\" title=\"9.5 总结\"></a>9.5 总结</h2><p>在本章中，您学习了如何使用<code>fileInput()</code>和<code>downloadButton()</code>来在用户之间传输文件。大多数挑战要么来自处理上传的文件，要么来自生成要下载的文件，因此我向您展示了如何处理一些常见的情况。如果我没有涵盖您在此处的特定挑战，那么您需要将您独特的创造力应用于问题中。</p>\n<p>下一章将帮助您处理在处理用户提供的数据时遇到的一个常见挑战：您需要动态地调整用户界面以更好地适应数据。我将从一些易于理解且可以在许多情况下应用的简单技术开始，逐渐过渡到完全动态的用户界面。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]}