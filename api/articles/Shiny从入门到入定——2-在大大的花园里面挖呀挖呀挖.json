{"title":"Shiny从入门到入定——2-在大大的花园里面挖呀挖呀挖","slug":"Shiny从入门到入定——2-在大大的花园里面挖呀挖呀挖","date":"2023-11-18T12:14:50.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Shiny从入门到入定——2-在大大的花园里面挖呀挖呀挖.json","excerpt":null,"covers":["https://d33wubrfki0l68.cloudfront.net/e7b5aeb0678eac89f60033eb84640779ad510c41/f7ade/demos/basic-ui/free-text.png","https://d33wubrfki0l68.cloudfront.net/dcd1cdd3477e7f859c8d5388b435ca75836d74ba/cdd56/demos/basic-ui/numeric.png","https://d33wubrfki0l68.cloudfront.net/585b8dcaf38038e5c2768e8a4858171baa04e308/02979/demos/basic-ui/date.png","https://d33wubrfki0l68.cloudfront.net/2605fed791b02e16d28d2c389df9130d349bf1b3/4dc8e/demos/basic-ui/limited-choices.png","https://d33wubrfki0l68.cloudfront.net/eab54ba86e9dda3fd9cd417553de341695d46d34/0eb0f/demos/basic-ui/radio-icon.png","https://d33wubrfki0l68.cloudfront.net/c53795ad09b7866f0ed7adc1b3adabdd6fc120db/437be/images/basic-ui/multi-select.png","https://d33wubrfki0l68.cloudfront.net/d3d61d703bac03a0d2823da98e2dbba03d6619d4/51e34/demos/basic-ui/multi-radio.png","https://d33wubrfki0l68.cloudfront.net/92e2422e9b00cec1d6a852cbdb484071ce51ae4e/85324/demos/basic-ui/upload.png","https://d33wubrfki0l68.cloudfront.net/30a4be90f407bf28ef9a780e78c6d48b8e9e3112/b196c/demos/basic-ui/action.png","https://d33wubrfki0l68.cloudfront.net/0250dd2b285e770d5fd2a66670a6604775bb7f1e/eaa81/demos/basic-ui/placeholder.png","https://d33wubrfki0l68.cloudfront.net/95326f3d91fd5e3c1eba0cfb8aa69a65f1cc0953/ae529/demos/basic-ui/date-slider.png","https://d33wubrfki0l68.cloudfront.net/61f37c119d66f0b25bb834d6773274856b764727/a9ae2/demos/basic-ui/output-text.png","https://d33wubrfki0l68.cloudfront.net/086a9fbcf20ad02bb679141fbe4f263d6cd7646c/dda5c/demos/basic-ui/text-vs-print.png","https://d33wubrfki0l68.cloudfront.net/2fe4c674645896fa18d345ad162f479434746dd2/2e28c/demos/basic-ui/output-table.png","https://d33wubrfki0l68.cloudfront.net/c87e58475e7a0c2e0d12f06ac28169c0c670dc91/b2f86/demos/basic-ui/output-plot.png","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png"],"content":"<h1 id=\"基础UI\"><a href=\"#基础UI\" class=\"headerlink\" title=\"基础UI\"></a>基础UI</h1><h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>现在，您已经具备了基本的Shiny应用程序，我们可以开始详细探索使Shiny起作用的内容。正如您在上一章所看到的，Shiny鼓励将生成用户界面（前端）的代码与驱动应用程序行为的代码（后端）分开。</p>\n<p>在本章中，我们将重点关注前端，并向您展示由Shiny提供的HTML输入和输出的大致情况。这使您能够捕获许多类型的表单数据，并显示许多类型的R输出。到目前为止，您可能还没有很多将输入和输出拼接在一起的方法，我们将在第6章中回顾这一点。</p>\n<p>在这里，我将主要关注Shiny自身内置的输入和输出。但是，还有一个丰富而充满活力的社区扩展包，例如<a href=\"https://github.com/dreamRs/shinyWidgets\">shinyWidgets</a>、<a href=\"https://github.com/daattali/colourpicker\">colorpicker</a>和<a href=\"https://rstudio.github.io/sortable/\">sorttable</a>。您可以在<a href=\"https://github.com/nanxstats/awesome-shiny-extensions\">https://github.com/nanxstats/awesome-shiny-extensions</a>找到其他全面且维护良好的包列表，该列表由<a href=\"https://nanx.me/\">Nan Xiao</a>维护。</p>\n<p>与往常一样，我们将从加载shiny包开始：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>正如我们在上一章所看到的，您使用诸如<code>sliderInput()</code>、<code>selectInput()</code>、<code>textInput()</code>和<code>numericInput()</code>之类的函数将输入控件插入到您的UI规范中。现在我们将讨论所有输入函数所共有的常见结构，并为内置在Shiny中的输入提供快速概述。</p>\n<h3 id=\"常见结构\"><a href=\"#常见结构\" class=\"headerlink\" title=\"常见结构\"></a>常见结构</h3><p>所有输入函数都具有相同的第一个参数：<code>inputId</code>。这是用于将前端与后端连接的标识符：如果您的用户界面具有ID为<code>name</code>的输入，则server函数将使用<code>input$name</code>来访问它。</p>\n<p><code>inputId</code>有两个约束：</p>\n<ul>\n<li><p>它必须是一个简单的字符串，只包含字母、数字和下划线（不允许空格、破折号、句点或其他特殊字符！）以R命名变量。</p>\n</li>\n<li><p>它必须是唯一的。如果它不是唯一的，那么您将无法在server函数中引用此控件！</p>\n</li>\n</ul>\n<p>大多数输入函数都有一个称为<code>label</code>的第二个参数。这是用于为控件创建一个人类可读的标签。Shiny对此字符串没有任何限制，但您需要仔细考虑，以确保您的应用程序对人类可用！第三个参数通常是<code>value</code>，在可能的情况下，允许您设置默认值。其余参数是控件特有的。</p>\n<p>创建输入时，我建议按位置提供inputId和label参数，并按名称提供所有其他参数：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Limit (minimum)&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">50</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>以下部分描述了Shiny内置的输入，根据它们创建的控制类型松散分组。目标是让您快速了解您的选项，而不是详尽地描述所有参数。下面我将展示每个控件最重要的参数，但您需要阅读文档以获得完整详细信息。</p>\n<h3 id=\"自由文本\"><a href=\"#自由文本\" class=\"headerlink\" title=\"自由文本\"></a>自由文本</h3><p>使用<code>textInput()</code>收集少量文本，使用<code>passwordInput()</code><sup>3</sup>收集密码，使用<code>textAreaInput()</code>收集段落文本。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your name?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  passwordInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;password&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your password?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textAreaInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;story&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Tell me about yourself&quot;</span><span class=\"punctuation\">,</span> rows <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/e7b5aeb0678eac89f60033eb84640779ad510c41/f7ade/demos/basic-ui/free-text.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/e7b5aeb0678eac89f60033eb84640779ad510c41/f7ade/demos/basic-ui/free-text.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"text\"></p>\n<p>如果你想确保文本具有某些属性，你可以使用<code>validate()</code>，我们将在第8章中介绍这个函数。</p>\n<h3 id=\"数值输入\"><a href=\"#数值输入\" class=\"headerlink\" title=\"数值输入\"></a>数值输入</h3><p>要收集数值，请使用<code>numericInput()</code>创建一个受约束的文本框，或使用<code>sliderInput()</code>创建一个滑块。如果你为sliderInput()的默认值提供一个长度为2的数值向量，你将获得一个带有两个端点的“范围”滑块。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;num&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number one&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;num2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number two&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">50</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;rng&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Range&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"number\">20</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/dcd1cdd3477e7f859c8d5388b435ca75836d74ba/cdd56/demos/basic-ui/numeric.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/dcd1cdd3477e7f859c8d5388b435ca75836d74ba/cdd56/demos/basic-ui/numeric.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"numeric\"></p>\n<p>一般来说，我只建议在范围较小或者精确数值不太重要的情况下使用滑块。尝试在小的滑块上精确选择一个数字是一件很令人沮丧的事情！</p>\n<p>滑块非常可定制，有很多方法可以调整它们的外观。更多细节请参见<code>?sliderInput</code>和<a href=\"https://shiny.rstudio.com/articles/sliders.html\">https://shiny.rstudio.com/articles/sliders.html</a>。</p>\n<h3 id=\"日期\"><a href=\"#日期\" class=\"headerlink\" title=\"日期\"></a>日期</h3><p>使用<code>dateInput()</code>收集单个日期，或使用<code>dateRangeInput()</code>收集两个日期之间的范围。这些都提供了一个方便的日历选择器，额外的参数如<code>datesdisabled</code>和<code>daysofweekdisabled</code>允许您限制有效的输入集。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  dateInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dob&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;When were you born?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  dateRangeInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;holiday&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;When do you want to go on vacation next?&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/585b8dcaf38038e5c2768e8a4858171baa04e308/02979/demos/basic-ui/date.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/585b8dcaf38038e5c2768e8a4858171baa04e308/02979/demos/basic-ui/date.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"date\"></p>\n<p>日期格式、语言和一周开始的日期默认采用美国标准。如果您正在为国际用户创建应用程序，请设置格式、语言和一周开始日期，以便日期对您的用户来说是自然的。</p>\n<h3 id=\"有限制的选择\"><a href=\"#有限制的选择\" class=\"headerlink\" title=\"有限制的选择\"></a>有限制的选择</h3><p>有两种不同的方法允许用户从预设的选项集中进行选择：<code>selectInput()</code>和<code>radioButtons()</code>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animals <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;dog&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;cat&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mouse&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;bird&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;other&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;I hate animals&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;state&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your favourite state?&quot;</span><span class=\"punctuation\">,</span> state.name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  radioButtons<span class=\"punctuation\">(</span><span class=\"string\">&quot;animal&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your favourite animal?&quot;</span><span class=\"punctuation\">,</span> animals<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/2605fed791b02e16d28d2c389df9130d349bf1b3/4dc8e/demos/basic-ui/limited-choices.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/2605fed791b02e16d28d2c389df9130d349bf1b3/4dc8e/demos/basic-ui/limited-choices.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"choice\"></p>\n<p>单选按钮有两个很好的特点：它们显示所有可能的选项，适合于短列表，并且通过<code>choiceNames/choiceValues</code>参数，它们可以显示除普通文本之外的其他选项。<code>choiceNames</code>确定向用户显示的内容；<code>choiceValues</code>确定在您的server函数中返回的内容。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  radioButtons<span class=\"punctuation\">(</span><span class=\"string\">&quot;rb&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Choose one:&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    choiceNames <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span></span><br><span class=\"line\">      icon<span class=\"punctuation\">(</span><span class=\"string\">&quot;angry&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      icon<span class=\"punctuation\">(</span><span class=\"string\">&quot;smile&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      icon<span class=\"punctuation\">(</span><span class=\"string\">&quot;sad-tear&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    choiceValues <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;angry&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;happy&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sad&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; This Font Awesome icon (&#x27;angry&#x27;) does not exist:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; This Font Awesome icon (&#x27;smile&#x27;) does not exist:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; This Font Awesome icon (&#x27;sad-tear&#x27;) does not exist:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/eab54ba86e9dda3fd9cd417553de341695d46d34/0eb0f/demos/basic-ui/radio-icon.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/eab54ba86e9dda3fd9cd417553de341695d46d34/0eb0f/demos/basic-ui/radio-icon.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"单选按钮\"></p>\n<p>使用<code>selectInput()</code>创建的下拉菜单无论选项数量多少，都占用相同数量的空间，这使得它们更适合于更长的选项。您还可以设置<code>multiple = TRUE</code>以允许用户选择多个元素。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  selectInput(</span><br><span class=\"line\">    &quot;state&quot;, &quot;What&#x27;s your favourite state?&quot;, state.name,</span><br><span class=\"line\">    multiple = TRUE</span><br><span class=\"line\">  )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/c53795ad09b7866f0ed7adc1b3adabdd6fc120db/437be/images/basic-ui/multi-select.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/c53795ad09b7866f0ed7adc1b3adabdd6fc120db/437be/images/basic-ui/multi-select.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下拉菜单\"></p>\n<p>如果你有一组非常大的可能选项，你可能想要使用“server-side”<code>selectInput()</code>，这样完整的可能选项集不被嵌入到UI中（这可能会使加载变慢），而是由服务器按需发送。您可以了解有关此高级主题的更多信息，请访问<a href=\"https://shiny.rstudio.com/articles/selectize.html#server-side-selectize\">https://shiny.rstudio.com/articles/selectize.html#server-side-selectize</a>。</p>\n<p>没有方法可以在单选按钮中选择多个值，但有一个概念上类似的替代方案：<code>checkboxGroupInput()</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  checkboxGroupInput(&quot;animal&quot;, &quot;What animals do you like?&quot;, animals)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/d3d61d703bac03a0d2823da98e2dbba03d6619d4/51e34/demos/basic-ui/multi-radio.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/d3d61d703bac03a0d2823da98e2dbba03d6619d4/51e34/demos/basic-ui/multi-radio.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p>如果您想要一个单选框来回答一个<code>Yes/No</code>问题，请使用<code>checkboxInput()</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  checkboxInput(&quot;cleanup&quot;, &quot;Clean up?&quot;, value = TRUE),</span><br><span class=\"line\">  checkboxInput(&quot;shutdown&quot;, &quot;Shutdown?&quot;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><p>允许用户通过 <code>fileInput()</code>上传文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  fileInput(&quot;upload&quot;, NULL)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/92e2422e9b00cec1d6a852cbdb484071ce51ae4e/85324/demos/basic-ui/upload.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/92e2422e9b00cec1d6a852cbdb484071ce51ae4e/85324/demos/basic-ui/upload.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"上传文件\"></p>\n<p>fileInput()需要在server端进行特殊处理，并在第9章中详细讨论。</p>\n<h3 id=\"动作按钮\"><a href=\"#动作按钮\" class=\"headerlink\" title=\"动作按钮\"></a>动作按钮</h3><p>使用<code>actionButton()</code>或<code>actionLink()</code>让用户执行动作。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  actionButton(&quot;click&quot;, &quot;Click me!&quot;),</span><br><span class=\"line\">  actionButton(&quot;drink&quot;, &quot;Drink me!&quot;, icon = icon(&quot;cocktail&quot;))</span><br><span class=\"line\">)</span><br><span class=\"line\">#&gt; This Font Awesome icon (&#x27;cocktail&#x27;) does not exist:</span><br><span class=\"line\">#&gt; * if providing a custom `html_dependency` these `name` checks can </span><br><span class=\"line\">#&gt;   be deactivated with `verify_fa = FALSE`</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/30a4be90f407bf28ef9a780e78c6d48b8e9e3112/b196c/demos/basic-ui/action.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/30a4be90f407bf28ef9a780e78c6d48b8e9e3112/b196c/demos/basic-ui/action.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"按钮\"></p>\n<p>动作链接和按钮最自然地与server函数中的<code>observeEvent()</code>或<code>eventReactive()</code>配对。您还没有学习这些重要的函数，但我们在第3.5节中会回到它们。</p>\n<p>您可以使用<code>class</code>参数来自定义外观，使用<code>&quot;btn-primary&quot;</code>，<code>&quot;btn-success&quot;</code>，<code>&quot;btn-info&quot;</code>，<code>&quot;btn-warning&quot;</code>或<code>&quot;btn-danger&quot;</code>之一。您还可以使用<code>&quot;btn-lg&quot;</code>，<code>&quot;btn-sm&quot;</code>，<code>&quot;btn-xs&quot;</code>更改大小。最后，您可以使用<code>&quot;btn-block&quot;</code>使按钮跨越其嵌入的元素的整个宽度。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    actionButton(&quot;click&quot;, &quot;Click me!&quot;, class = &quot;btn-danger&quot;),</span><br><span class=\"line\">    actionButton(&quot;drink&quot;, &quot;Drink me!&quot;, class = &quot;btn-lg btn-success&quot;)</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    actionButton(&quot;eat&quot;, &quot;Eat me!&quot;, class = &quot;btn-block&quot;)</span><br><span class=\"line\">  )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><code>class</code>参数通过设置底层HTML的<code>class</code>属性来工作，这会影响元素的样式。要查看其他选项，您可以阅读Shiny使用的CSS设计系统Bootstrap的文档：<a href=\"http://bootstrapdocs.com/v3.3.6/docs/css/#buttons\">http://bootstrapdocs.com/v3.3.6/docs/css/#buttons</a>。</p>\n<h3 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h3><p>2.2.8.1 当空间不足时，使用一个出现在文本输入区域内的占位符来标记文本框很有用。您如何调用<code>textInput()</code>生成下面的UI？</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/0250dd2b285e770d5fd2a66670a6604775bb7f1e/eaa81/demos/basic-ui/placeholder.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/0250dd2b285e770d5fd2a66670a6604775bb7f1e/eaa81/demos/basic-ui/placeholder.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"2.2.8.1\"></p>\n<p>2.2.8.2 认真阅读<code>sliderInput()</code>的文档以了解如何创建日期滑块，如下：</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/95326f3d91fd5e3c1eba0cfb8aa69a65f1cc0953/ae529/demos/basic-ui/date-slider.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/95326f3d91fd5e3c1eba0cfb8aa69a65f1cc0953/ae529/demos/basic-ui/date-slider.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"日历滑块\"></p>\n<p>2.2.8.3 如何创建日期滑块，使得用户可以在0到100之间选择日期，滑块上每个可选值的间隔为5。然后，为输入小部件添加动画，以便当用户按下播放时，输入小部件会自动滚动到该范围。</p>\n<p>2.2.8.4 如果您有一个中等长度的<code>selectInput()</code>列表，创建子标签是有用的，它可以将列表分成几部分。阅读文档以了解如何操作。（提示：底层HTML称为<code>&lt;optgroup&gt;</code>。）</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>用户界面中的输出创建了占位符，稍后将由server函数填充。与输入一样，输出需要一个唯一的ID作为其第一个参数：如果您的用户界面规范创建了一个ID为<code>plot</code>的输出，您可以通过<code>output$plot</code>在服务器函数中访问它。</p>\n<p>前端中的每个输出函数都与后端的渲染函数配对。有三种主要的输出类型，对应于您通常在报告中包含的三件事：<code>文本</code>、<code>表格</code>和<code>图形</code>。以下部分向您展示了前端输出函数的基本知识，以及后端相应的渲染函数。</p>\n<h3 id=\"文本\"><a href=\"#文本\" class=\"headerlink\" title=\"文本\"></a>文本</h3><p>使用<code>textOutput()</code>输出普通文本，使用<code>verbatimTextOutput()</code>输出固定代码和控制台输出。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  textOutput(&quot;text&quot;),</span><br><span class=\"line\">  verbatimTextOutput(&quot;code&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$text &lt;- renderText(&#123; </span><br><span class=\"line\">    &quot;Hello friend!&quot; </span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  output$code &lt;- renderPrint(&#123; </span><br><span class=\"line\">    summary(1:10) </span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/61f37c119d66f0b25bb834d6773274856b764727/a9ae2/demos/basic-ui/output-text.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/61f37c119d66f0b25bb834d6773274856b764727/a9ae2/demos/basic-ui/output-text.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p>请注意，只有在需要运行多行代码时，<code>&#123;&#125;</code>才需要在渲染函数中使用。正如您即将了解的那样，您应该在渲染函数中尽可能少地进行计算，这意味着您通常可以省略它们。以下是上述server函数更简洁的方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$text &lt;- renderText(&quot;Hello friend!&quot;)</span><br><span class=\"line\">  output$code &lt;- renderPrint(summary(1:10))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意，有两种渲染函数的行为略有不同：</p>\n<ul>\n<li><p><code>renderText()</code>将结果合并成一个字符串，通常与<code>textOutput()</code>配对</p>\n</li>\n<li><p><code>renderPrint()</code>打印结果，就像在R控制台中一样，通常与<code>verbatimTextOutput()</code>配对。</p>\n</li>\n</ul>\n<p>我们可以通过一个玩具应用程序看到这种差异：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  textOutput(&quot;text&quot;),</span><br><span class=\"line\">  verbatimTextOutput(&quot;print&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$text &lt;- renderText(&quot;hello!&quot;)</span><br><span class=\"line\">  output$print &lt;- renderPrint(&quot;hello!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/086a9fbcf20ad02bb679141fbe4f263d6cd7646c/dda5c/demos/basic-ui/text-vs-print.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/086a9fbcf20ad02bb679141fbe4f263d6cd7646c/dda5c/demos/basic-ui/text-vs-print.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p>二者的区别与R中的 <code>cat()</code> and <code>print()</code>一样。</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>有三种方法可以在表格中显示数据框：</p>\n<ul>\n<li><p><code>tableOutput()</code>和<code>renderTable()</code>呈现静态数据表，一次显示所有数据。</p>\n</li>\n<li><p><code>dataTableOutput()</code>和<code>renderDataTable()</code>呈现动态数据表，一次显示固定数量的行，同时显示控件以更改可见行。</p>\n</li>\n</ul>\n<p><code>tableOutput()</code>最适合小型、固定的摘要（例如模型系数）；如果您想向用户展示完整的数据框，<code>dataTableOutput()</code>最为合适。如果您想更精确地控制<code>dataTableOutput()</code>的输出，我强烈推荐Greg Lin的<a href=\"https://glin.github.io/reactable/index.html\">reactable</a>包。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  tableOutput(&quot;static&quot;),</span><br><span class=\"line\">  dataTableOutput(&quot;dynamic&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$static &lt;- renderTable(head(mtcars))</span><br><span class=\"line\">  output$dynamic &lt;- renderDataTable(mtcars, options = list(pageLength = 5))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/2fe4c674645896fa18d345ad162f479434746dd2/2e28c/demos/basic-ui/output-table.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/2fe4c674645896fa18d345ad162f479434746dd2/2e28c/demos/basic-ui/output-table.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"表格\"></p>\n<h3 id=\"图形\"><a href=\"#图形\" class=\"headerlink\" title=\"图形\"></a>图形</h3><p>您可以使用<code>plotOutput()</code>和<code>renderPlot()</code>显示任何类型的R图形（基础、ggplot2或其他）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  plotOutput(&quot;plot&quot;, width = &quot;400px&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$plot &lt;- renderPlot(plot(1:5), res = 96)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/c87e58475e7a0c2e0d12f06ac28169c0c670dc91/b2f86/demos/basic-ui/output-plot.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/c87e58475e7a0c2e0d12f06ac28169c0c670dc91/b2f86/demos/basic-ui/output-plot.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"绘图\"></p>\n<p>默认情况下，<code>plotOutput()</code>将占据其容器的全部宽度（稍后将详细介绍），高度为400像素。您可以使用<code>height</code>和<code>width</code>参数覆盖这些默认值。我们建议始终将<code>res</code>设置为<strong>96</strong>，这样您的Shiny图形就会尽可能与RStudio中看到的图形相匹配。</p>\n<p>图形是特殊的输出，因为它们也可以作为输入。<code>plotOutput()</code>具有许多参数，如<code>click</code>、<code>dblclick</code>和<code>hover</code>。如果您将这些参数传递给字符串，例如<code>click = &quot;plot_click&quot;</code>，则它们将创建一个可响应的输入（<code>input$plot_click</code>），您可以使用它来处理与图形的用户交互，例如单击图形。我们将在第7章中再次讨论Shiny中的交互式图形。</p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>您可以使用<code>downloadButton()</code>或<code>downloadLink()</code>让用户下载文件。这些需要在server函数中使用新技术，因此我们将在第9章中详细介绍。</p>\n<h3 id=\"练习-1\"><a href=\"#练习-1\" class=\"headerlink\" title=\"练习\"></a>练习</h3><p>2.3.5.1 下列哪个应与<code>textOutput()</code>和<code>verbatimTextOutput()</code>配对？</p>\n<p>a. renderPrint(summary(mtcars))</p>\n<p>b. renderText(“Good morning!”)</p>\n<p>c. renderPrint(t.test(1:5, 2:6))</p>\n<p>d. renderText(str(lm(mpg ~ wt, data &#x3D; mtcars)))</p>\n<p>2.3.5.2 重新创建第2.3.3节的Shiny应用程序，这次将高度设置为300像素，宽度设置为700像素。设置图的“alt”文本，以便视障用户可以判断其是五个随机数的散点图。</p>\n<p>2.3.5.3 更新以下调用<code>renderDataTable()</code>的选项，以便仅显示数据，但其他控件均被抑制（即删除搜索、排序和过滤命令）。您需要阅读<a href=\"https://rdrr.io/pkg/shiny/man/renderDataTable.html\">?renderDataTable</a>并回顾<a href=\"https://datatables.net/reference/option/\">https://datatables.net/reference/option/</a>中的选项。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  dataTableOutput(&quot;table&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$table &lt;- renderDataTable(mtcars, options = list(pageLength = 5))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.3.5.4 或者，您可以阅读<a href=\"https://glin.github.io/reactable\">reactable</a>的文档，并将上面的应用程序转换为使用它。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本章向您介绍了Shiny应用程序前端的主要输入和输出功能。这是一次大量的信息灌输，因此不要期望在一次阅读后就能记住所有内容。相反，当您需要查找特定组件时，请返回本章：您可以快速浏览图示，然后找到您需要的代码。</p>\n<p>下一章我们将介绍Shiny应用程序的后端：使您的用户界面生动起来的R代码。</p>\n<h1 id=\"练习题答案获取\"><a href=\"#练习题答案获取\" class=\"headerlink\" title=\"练习题答案获取\"></a>练习题答案获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“5369”获取习题答案。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","more":"<h1 id=\"基础UI\"><a href=\"#基础UI\" class=\"headerlink\" title=\"基础UI\"></a>基础UI</h1><h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>现在，您已经具备了基本的Shiny应用程序，我们可以开始详细探索使Shiny起作用的内容。正如您在上一章所看到的，Shiny鼓励将生成用户界面（前端）的代码与驱动应用程序行为的代码（后端）分开。</p>\n<p>在本章中，我们将重点关注前端，并向您展示由Shiny提供的HTML输入和输出的大致情况。这使您能够捕获许多类型的表单数据，并显示许多类型的R输出。到目前为止，您可能还没有很多将输入和输出拼接在一起的方法，我们将在第6章中回顾这一点。</p>\n<p>在这里，我将主要关注Shiny自身内置的输入和输出。但是，还有一个丰富而充满活力的社区扩展包，例如<a href=\"https://github.com/dreamRs/shinyWidgets\">shinyWidgets</a>、<a href=\"https://github.com/daattali/colourpicker\">colorpicker</a>和<a href=\"https://rstudio.github.io/sortable/\">sorttable</a>。您可以在<a href=\"https://github.com/nanxstats/awesome-shiny-extensions\">https://github.com/nanxstats/awesome-shiny-extensions</a>找到其他全面且维护良好的包列表，该列表由<a href=\"https://nanx.me/\">Nan Xiao</a>维护。</p>\n<p>与往常一样，我们将从加载shiny包开始：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h2><p>正如我们在上一章所看到的，您使用诸如<code>sliderInput()</code>、<code>selectInput()</code>、<code>textInput()</code>和<code>numericInput()</code>之类的函数将输入控件插入到您的UI规范中。现在我们将讨论所有输入函数所共有的常见结构，并为内置在Shiny中的输入提供快速概述。</p>\n<h3 id=\"常见结构\"><a href=\"#常见结构\" class=\"headerlink\" title=\"常见结构\"></a>常见结构</h3><p>所有输入函数都具有相同的第一个参数：<code>inputId</code>。这是用于将前端与后端连接的标识符：如果您的用户界面具有ID为<code>name</code>的输入，则server函数将使用<code>input$name</code>来访问它。</p>\n<p><code>inputId</code>有两个约束：</p>\n<ul>\n<li><p>它必须是一个简单的字符串，只包含字母、数字和下划线（不允许空格、破折号、句点或其他特殊字符！）以R命名变量。</p>\n</li>\n<li><p>它必须是唯一的。如果它不是唯一的，那么您将无法在server函数中引用此控件！</p>\n</li>\n</ul>\n<p>大多数输入函数都有一个称为<code>label</code>的第二个参数。这是用于为控件创建一个人类可读的标签。Shiny对此字符串没有任何限制，但您需要仔细考虑，以确保您的应用程序对人类可用！第三个参数通常是<code>value</code>，在可能的情况下，允许您设置默认值。其余参数是控件特有的。</p>\n<p>创建输入时，我建议按位置提供inputId和label参数，并按名称提供所有其他参数：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;min&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Limit (minimum)&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">50</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>以下部分描述了Shiny内置的输入，根据它们创建的控制类型松散分组。目标是让您快速了解您的选项，而不是详尽地描述所有参数。下面我将展示每个控件最重要的参数，但您需要阅读文档以获得完整详细信息。</p>\n<h3 id=\"自由文本\"><a href=\"#自由文本\" class=\"headerlink\" title=\"自由文本\"></a>自由文本</h3><p>使用<code>textInput()</code>收集少量文本，使用<code>passwordInput()</code><sup>3</sup>收集密码，使用<code>textAreaInput()</code>收集段落文本。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your name?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  passwordInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;password&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your password?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textAreaInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;story&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Tell me about yourself&quot;</span><span class=\"punctuation\">,</span> rows <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/e7b5aeb0678eac89f60033eb84640779ad510c41/f7ade/demos/basic-ui/free-text.png\" alt=\"text\"></p>\n<p>如果你想确保文本具有某些属性，你可以使用<code>validate()</code>，我们将在第8章中介绍这个函数。</p>\n<h3 id=\"数值输入\"><a href=\"#数值输入\" class=\"headerlink\" title=\"数值输入\"></a>数值输入</h3><p>要收集数值，请使用<code>numericInput()</code>创建一个受约束的文本框，或使用<code>sliderInput()</code>创建一个滑块。如果你为sliderInput()的默认值提供一个长度为2的数值向量，你将获得一个带有两个端点的“范围”滑块。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;num&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number one&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;num2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Number two&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">50</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  sliderInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;rng&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Range&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"number\">20</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/dcd1cdd3477e7f859c8d5388b435ca75836d74ba/cdd56/demos/basic-ui/numeric.png\" alt=\"numeric\"></p>\n<p>一般来说，我只建议在范围较小或者精确数值不太重要的情况下使用滑块。尝试在小的滑块上精确选择一个数字是一件很令人沮丧的事情！</p>\n<p>滑块非常可定制，有很多方法可以调整它们的外观。更多细节请参见<code>?sliderInput</code>和<a href=\"https://shiny.rstudio.com/articles/sliders.html\">https://shiny.rstudio.com/articles/sliders.html</a>。</p>\n<h3 id=\"日期\"><a href=\"#日期\" class=\"headerlink\" title=\"日期\"></a>日期</h3><p>使用<code>dateInput()</code>收集单个日期，或使用<code>dateRangeInput()</code>收集两个日期之间的范围。这些都提供了一个方便的日历选择器，额外的参数如<code>datesdisabled</code>和<code>daysofweekdisabled</code>允许您限制有效的输入集。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  dateInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;dob&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;When were you born?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  dateRangeInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;holiday&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;When do you want to go on vacation next?&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/585b8dcaf38038e5c2768e8a4858171baa04e308/02979/demos/basic-ui/date.png\" alt=\"date\"></p>\n<p>日期格式、语言和一周开始的日期默认采用美国标准。如果您正在为国际用户创建应用程序，请设置格式、语言和一周开始日期，以便日期对您的用户来说是自然的。</p>\n<h3 id=\"有限制的选择\"><a href=\"#有限制的选择\" class=\"headerlink\" title=\"有限制的选择\"></a>有限制的选择</h3><p>有两种不同的方法允许用户从预设的选项集中进行选择：<code>selectInput()</code>和<code>radioButtons()</code>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animals <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;dog&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;cat&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mouse&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;bird&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;other&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;I hate animals&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;state&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your favourite state?&quot;</span><span class=\"punctuation\">,</span> state.name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  radioButtons<span class=\"punctuation\">(</span><span class=\"string\">&quot;animal&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;What&#x27;s your favourite animal?&quot;</span><span class=\"punctuation\">,</span> animals<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/2605fed791b02e16d28d2c389df9130d349bf1b3/4dc8e/demos/basic-ui/limited-choices.png\" alt=\"choice\"></p>\n<p>单选按钮有两个很好的特点：它们显示所有可能的选项，适合于短列表，并且通过<code>choiceNames/choiceValues</code>参数，它们可以显示除普通文本之外的其他选项。<code>choiceNames</code>确定向用户显示的内容；<code>choiceValues</code>确定在您的server函数中返回的内容。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  radioButtons<span class=\"punctuation\">(</span><span class=\"string\">&quot;rb&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Choose one:&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    choiceNames <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span></span><br><span class=\"line\">      icon<span class=\"punctuation\">(</span><span class=\"string\">&quot;angry&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      icon<span class=\"punctuation\">(</span><span class=\"string\">&quot;smile&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      icon<span class=\"punctuation\">(</span><span class=\"string\">&quot;sad-tear&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    choiceValues <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;angry&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;happy&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sad&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; This Font Awesome icon (&#x27;angry&#x27;) does not exist:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; This Font Awesome icon (&#x27;smile&#x27;) does not exist:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; This Font Awesome icon (&#x27;sad-tear&#x27;) does not exist:</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class=\"line\"><span class=\"comment\">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/eab54ba86e9dda3fd9cd417553de341695d46d34/0eb0f/demos/basic-ui/radio-icon.png\" alt=\"单选按钮\"></p>\n<p>使用<code>selectInput()</code>创建的下拉菜单无论选项数量多少，都占用相同数量的空间，这使得它们更适合于更长的选项。您还可以设置<code>multiple = TRUE</code>以允许用户选择多个元素。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  selectInput(</span><br><span class=\"line\">    &quot;state&quot;, &quot;What&#x27;s your favourite state?&quot;, state.name,</span><br><span class=\"line\">    multiple = TRUE</span><br><span class=\"line\">  )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/c53795ad09b7866f0ed7adc1b3adabdd6fc120db/437be/images/basic-ui/multi-select.png\" alt=\"下拉菜单\"></p>\n<p>如果你有一组非常大的可能选项，你可能想要使用“server-side”<code>selectInput()</code>，这样完整的可能选项集不被嵌入到UI中（这可能会使加载变慢），而是由服务器按需发送。您可以了解有关此高级主题的更多信息，请访问<a href=\"https://shiny.rstudio.com/articles/selectize.html#server-side-selectize\">https://shiny.rstudio.com/articles/selectize.html#server-side-selectize</a>。</p>\n<p>没有方法可以在单选按钮中选择多个值，但有一个概念上类似的替代方案：<code>checkboxGroupInput()</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  checkboxGroupInput(&quot;animal&quot;, &quot;What animals do you like?&quot;, animals)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/d3d61d703bac03a0d2823da98e2dbba03d6619d4/51e34/demos/basic-ui/multi-radio.png\"></p>\n<p>如果您想要一个单选框来回答一个<code>Yes/No</code>问题，请使用<code>checkboxInput()</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  checkboxInput(&quot;cleanup&quot;, &quot;Clean up?&quot;, value = TRUE),</span><br><span class=\"line\">  checkboxInput(&quot;shutdown&quot;, &quot;Shutdown?&quot;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><p>允许用户通过 <code>fileInput()</code>上传文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  fileInput(&quot;upload&quot;, NULL)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/92e2422e9b00cec1d6a852cbdb484071ce51ae4e/85324/demos/basic-ui/upload.png\" alt=\"上传文件\"></p>\n<p>fileInput()需要在server端进行特殊处理，并在第9章中详细讨论。</p>\n<h3 id=\"动作按钮\"><a href=\"#动作按钮\" class=\"headerlink\" title=\"动作按钮\"></a>动作按钮</h3><p>使用<code>actionButton()</code>或<code>actionLink()</code>让用户执行动作。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  actionButton(&quot;click&quot;, &quot;Click me!&quot;),</span><br><span class=\"line\">  actionButton(&quot;drink&quot;, &quot;Drink me!&quot;, icon = icon(&quot;cocktail&quot;))</span><br><span class=\"line\">)</span><br><span class=\"line\">#&gt; This Font Awesome icon (&#x27;cocktail&#x27;) does not exist:</span><br><span class=\"line\">#&gt; * if providing a custom `html_dependency` these `name` checks can </span><br><span class=\"line\">#&gt;   be deactivated with `verify_fa = FALSE`</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/30a4be90f407bf28ef9a780e78c6d48b8e9e3112/b196c/demos/basic-ui/action.png\" alt=\"按钮\"></p>\n<p>动作链接和按钮最自然地与server函数中的<code>observeEvent()</code>或<code>eventReactive()</code>配对。您还没有学习这些重要的函数，但我们在第3.5节中会回到它们。</p>\n<p>您可以使用<code>class</code>参数来自定义外观，使用<code>&quot;btn-primary&quot;</code>，<code>&quot;btn-success&quot;</code>，<code>&quot;btn-info&quot;</code>，<code>&quot;btn-warning&quot;</code>或<code>&quot;btn-danger&quot;</code>之一。您还可以使用<code>&quot;btn-lg&quot;</code>，<code>&quot;btn-sm&quot;</code>，<code>&quot;btn-xs&quot;</code>更改大小。最后，您可以使用<code>&quot;btn-block&quot;</code>使按钮跨越其嵌入的元素的整个宽度。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    actionButton(&quot;click&quot;, &quot;Click me!&quot;, class = &quot;btn-danger&quot;),</span><br><span class=\"line\">    actionButton(&quot;drink&quot;, &quot;Drink me!&quot;, class = &quot;btn-lg btn-success&quot;)</span><br><span class=\"line\">  ),</span><br><span class=\"line\">  fluidRow(</span><br><span class=\"line\">    actionButton(&quot;eat&quot;, &quot;Eat me!&quot;, class = &quot;btn-block&quot;)</span><br><span class=\"line\">  )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><code>class</code>参数通过设置底层HTML的<code>class</code>属性来工作，这会影响元素的样式。要查看其他选项，您可以阅读Shiny使用的CSS设计系统Bootstrap的文档：<a href=\"http://bootstrapdocs.com/v3.3.6/docs/css/#buttons\">http://bootstrapdocs.com/v3.3.6/docs/css/#buttons</a>。</p>\n<h3 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h3><p>2.2.8.1 当空间不足时，使用一个出现在文本输入区域内的占位符来标记文本框很有用。您如何调用<code>textInput()</code>生成下面的UI？</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/0250dd2b285e770d5fd2a66670a6604775bb7f1e/eaa81/demos/basic-ui/placeholder.png\" alt=\"2.2.8.1\"></p>\n<p>2.2.8.2 认真阅读<code>sliderInput()</code>的文档以了解如何创建日期滑块，如下：</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/95326f3d91fd5e3c1eba0cfb8aa69a65f1cc0953/ae529/demos/basic-ui/date-slider.png\" alt=\"日历滑块\"></p>\n<p>2.2.8.3 如何创建日期滑块，使得用户可以在0到100之间选择日期，滑块上每个可选值的间隔为5。然后，为输入小部件添加动画，以便当用户按下播放时，输入小部件会自动滚动到该范围。</p>\n<p>2.2.8.4 如果您有一个中等长度的<code>selectInput()</code>列表，创建子标签是有用的，它可以将列表分成几部分。阅读文档以了解如何操作。（提示：底层HTML称为<code>&lt;optgroup&gt;</code>。）</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>用户界面中的输出创建了占位符，稍后将由server函数填充。与输入一样，输出需要一个唯一的ID作为其第一个参数：如果您的用户界面规范创建了一个ID为<code>plot</code>的输出，您可以通过<code>output$plot</code>在服务器函数中访问它。</p>\n<p>前端中的每个输出函数都与后端的渲染函数配对。有三种主要的输出类型，对应于您通常在报告中包含的三件事：<code>文本</code>、<code>表格</code>和<code>图形</code>。以下部分向您展示了前端输出函数的基本知识，以及后端相应的渲染函数。</p>\n<h3 id=\"文本\"><a href=\"#文本\" class=\"headerlink\" title=\"文本\"></a>文本</h3><p>使用<code>textOutput()</code>输出普通文本，使用<code>verbatimTextOutput()</code>输出固定代码和控制台输出。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  textOutput(&quot;text&quot;),</span><br><span class=\"line\">  verbatimTextOutput(&quot;code&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$text &lt;- renderText(&#123; </span><br><span class=\"line\">    &quot;Hello friend!&quot; </span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  output$code &lt;- renderPrint(&#123; </span><br><span class=\"line\">    summary(1:10) </span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/61f37c119d66f0b25bb834d6773274856b764727/a9ae2/demos/basic-ui/output-text.png\"></p>\n<p>请注意，只有在需要运行多行代码时，<code>&#123;&#125;</code>才需要在渲染函数中使用。正如您即将了解的那样，您应该在渲染函数中尽可能少地进行计算，这意味着您通常可以省略它们。以下是上述server函数更简洁的方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$text &lt;- renderText(&quot;Hello friend!&quot;)</span><br><span class=\"line\">  output$code &lt;- renderPrint(summary(1:10))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意，有两种渲染函数的行为略有不同：</p>\n<ul>\n<li><p><code>renderText()</code>将结果合并成一个字符串，通常与<code>textOutput()</code>配对</p>\n</li>\n<li><p><code>renderPrint()</code>打印结果，就像在R控制台中一样，通常与<code>verbatimTextOutput()</code>配对。</p>\n</li>\n</ul>\n<p>我们可以通过一个玩具应用程序看到这种差异：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  textOutput(&quot;text&quot;),</span><br><span class=\"line\">  verbatimTextOutput(&quot;print&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$text &lt;- renderText(&quot;hello!&quot;)</span><br><span class=\"line\">  output$print &lt;- renderPrint(&quot;hello!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/086a9fbcf20ad02bb679141fbe4f263d6cd7646c/dda5c/demos/basic-ui/text-vs-print.png\"></p>\n<p>二者的区别与R中的 <code>cat()</code> and <code>print()</code>一样。</p>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><p>有三种方法可以在表格中显示数据框：</p>\n<ul>\n<li><p><code>tableOutput()</code>和<code>renderTable()</code>呈现静态数据表，一次显示所有数据。</p>\n</li>\n<li><p><code>dataTableOutput()</code>和<code>renderDataTable()</code>呈现动态数据表，一次显示固定数量的行，同时显示控件以更改可见行。</p>\n</li>\n</ul>\n<p><code>tableOutput()</code>最适合小型、固定的摘要（例如模型系数）；如果您想向用户展示完整的数据框，<code>dataTableOutput()</code>最为合适。如果您想更精确地控制<code>dataTableOutput()</code>的输出，我强烈推荐Greg Lin的<a href=\"https://glin.github.io/reactable/index.html\">reactable</a>包。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  tableOutput(&quot;static&quot;),</span><br><span class=\"line\">  dataTableOutput(&quot;dynamic&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$static &lt;- renderTable(head(mtcars))</span><br><span class=\"line\">  output$dynamic &lt;- renderDataTable(mtcars, options = list(pageLength = 5))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/2fe4c674645896fa18d345ad162f479434746dd2/2e28c/demos/basic-ui/output-table.png\" alt=\"表格\"></p>\n<h3 id=\"图形\"><a href=\"#图形\" class=\"headerlink\" title=\"图形\"></a>图形</h3><p>您可以使用<code>plotOutput()</code>和<code>renderPlot()</code>显示任何类型的R图形（基础、ggplot2或其他）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  plotOutput(&quot;plot&quot;, width = &quot;400px&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$plot &lt;- renderPlot(plot(1:5), res = 96)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/c87e58475e7a0c2e0d12f06ac28169c0c670dc91/b2f86/demos/basic-ui/output-plot.png\" alt=\"绘图\"></p>\n<p>默认情况下，<code>plotOutput()</code>将占据其容器的全部宽度（稍后将详细介绍），高度为400像素。您可以使用<code>height</code>和<code>width</code>参数覆盖这些默认值。我们建议始终将<code>res</code>设置为<strong>96</strong>，这样您的Shiny图形就会尽可能与RStudio中看到的图形相匹配。</p>\n<p>图形是特殊的输出，因为它们也可以作为输入。<code>plotOutput()</code>具有许多参数，如<code>click</code>、<code>dblclick</code>和<code>hover</code>。如果您将这些参数传递给字符串，例如<code>click = &quot;plot_click&quot;</code>，则它们将创建一个可响应的输入（<code>input$plot_click</code>），您可以使用它来处理与图形的用户交互，例如单击图形。我们将在第7章中再次讨论Shiny中的交互式图形。</p>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p>您可以使用<code>downloadButton()</code>或<code>downloadLink()</code>让用户下载文件。这些需要在server函数中使用新技术，因此我们将在第9章中详细介绍。</p>\n<h3 id=\"练习-1\"><a href=\"#练习-1\" class=\"headerlink\" title=\"练习\"></a>练习</h3><p>2.3.5.1 下列哪个应与<code>textOutput()</code>和<code>verbatimTextOutput()</code>配对？</p>\n<p>a. renderPrint(summary(mtcars))</p>\n<p>b. renderText(“Good morning!”)</p>\n<p>c. renderPrint(t.test(1:5, 2:6))</p>\n<p>d. renderText(str(lm(mpg ~ wt, data &#x3D; mtcars)))</p>\n<p>2.3.5.2 重新创建第2.3.3节的Shiny应用程序，这次将高度设置为300像素，宽度设置为700像素。设置图的“alt”文本，以便视障用户可以判断其是五个随机数的散点图。</p>\n<p>2.3.5.3 更新以下调用<code>renderDataTable()</code>的选项，以便仅显示数据，但其他控件均被抑制（即删除搜索、排序和过滤命令）。您需要阅读<a href=\"https://rdrr.io/pkg/shiny/man/renderDataTable.html\">?renderDataTable</a>并回顾<a href=\"https://datatables.net/reference/option/\">https://datatables.net/reference/option/</a>中的选项。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui &lt;- fluidPage(</span><br><span class=\"line\">  dataTableOutput(&quot;table&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  output$table &lt;- renderDataTable(mtcars, options = list(pageLength = 5))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.3.5.4 或者，您可以阅读<a href=\"https://glin.github.io/reactable\">reactable</a>的文档，并将上面的应用程序转换为使用它。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本章向您介绍了Shiny应用程序前端的主要输入和输出功能。这是一次大量的信息灌输，因此不要期望在一次阅读后就能记住所有内容。相反，当您需要查找特定组件时，请返回本章：您可以快速浏览图示，然后找到您需要的代码。</p>\n<p>下一章我们将介绍Shiny应用程序的后端：使您的用户界面生动起来的R代码。</p>\n<h1 id=\"练习题答案获取\"><a href=\"#练习题答案获取\" class=\"headerlink\" title=\"练习题答案获取\"></a>练习题答案获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“5369”获取习题答案。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]}