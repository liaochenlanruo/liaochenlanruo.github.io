[{"title":"CAZy碳水化合物活性酶预测","slug":"CAZy碳水化合物活性酶预测","date":"2021-09-30T01:18:19.000Z","updated":"2022-01-08T02:16:28.396Z","comments":true,"path":"api/articles/CAZy碳水化合物活性酶预测.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg","content":"<h1 id=\"cazy数据库简介\"><a class=\"markdownIt-Anchor\" href=\"#cazy数据库简介\"></a> CAZy 数据库简介</h1>\n<p><a href=\"http://www.cazy.org/Home.html\">CAZy</a> 全称为 Carbohydrate-Active enZYmes Database，碳水化合物酶相关的专业数据库，内容包括能催化碳水化合物降解、修饰、以及生物合成的相关酶系家族。其包含五个主要分类：糖苷水解酶（Glycoside Hydrolases, GHs）、糖基转移酶（GlycosylTransferases, GTs）、多糖裂解酶（Polysaccharide Lyases, PLs）、糖酯酶（Carbohydrate Esterases, CEs）和氧化还原酶（Auxiliary Activities, AAs）。此外，还包含与碳水化合物结合结构域（Carbohydrate-Binding Modules， CBMs）。五大分类和一个结构域下，都分别建立了多个 Family。</p>\n<ul>\n<li>\n<p><a href=\"http://www.cazy.org/Glycoside-Hydrolases.html\">GHs</a>：糖苷键的水解和 / 或重排</p>\n</li>\n<li>\n<p><a href=\"http://www.cazy.org/GlycosylTransferases.html\">GTs</a>：糖苷键的形成</p>\n</li>\n<li>\n<p><a href=\"http://www.cazy.org/Polysaccharide-Lyases.html\">PLs</a>：糖苷键的非水解裂解</p>\n</li>\n<li>\n<p><a href=\"http://www.cazy.org/Carbohydrate-Esterases.html\">CEs</a>：水解碳水化合物的酯类</p>\n</li>\n<li>\n<p><a href=\"http://www.cazy.org/Auxiliary-Activities.html\">AAs</a>：与 CAZymes 协同作用的氧化还原酶</p>\n</li>\n<li>\n<p><a href=\"http://www.cazy.org/Carbohydrate-Binding-Modules.html\">CBMs</a>：与碳水化合物结合</p>\n</li>\n</ul>\n<h1 id=\"cazy数据库的准备\"><a class=\"markdownIt-Anchor\" href=\"#cazy数据库的准备\"></a> CAZy 数据库的准备</h1>\n<p>在进行预测之前需要准备数据库，CAZy 貌似没有提供 FASTA 格式的序列数据库，而仅提供了序列的 Assenssion number，需要我们自己从 NCBI 数据库中下载序列。下载方法参照我之前的文章《<a href=\"https://liaochenlanruo.github.io/post/e7e9.html\">根据 assession number 批量从 NCB 下载数据</a>》，在文章中提供了下载 CAZy 序列的方法和脚本，此处不再赘述。</p>\n<p>在上一篇文章结尾获得的 “All.sequences.fas” 文件包含了所有的 CAZy 数据库序列，在正式预测之前需要完成数据库的格式化。后面我们将通过 Diamond 软件从基因组中预测 CAZy 蛋白，因此采用 Diamond 格式化数据库。</p>\n<ul>\n<li>\n<p>序列预处理</p>\n<p>不知道什么原因，下载的序列存在两个问题，其一，下一条序列的 ID 连接着上一条序列的末尾，没有断行；其二，序列中存在着一段网页代码。因此，需要分两步进行修正。</p>\n<ul>\n<li>\n<p>解决断行问题</p>\n<p>撰写脚本 “add_linebreak.pl”，内容如下：</p>\n  <pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Sep 30, 2021</span>\n\n<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span><span class=\"token operator\">=</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"All.sequences.fas\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">CAZy.fas\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\">$_\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\nclose OUT<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将脚本与 &quot;All.sequences.fas&quot; 放在同一目录下，在终端或者命令行中运行如下命令，得到 “CAZy.fas”。</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl add_linebreak.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>删除无关内容</p>\n<p>用 EmEditor 软件打开 CAZy.fas，Ctrl+F 调出查找功能，搜索 “www.” 可以看到如下内容，手动将其删除，并保存文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"数据库中需要手动删除的网页信息\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>构建 Diamond 数据库</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">diamond makedb --in CAZy.fas -d CAZy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"开始序列比对\"><a class=\"markdownIt-Anchor\" href=\"#开始序列比对\"></a> 开始序列比对</h1>\n<p>当然，我们选择用 Perl 进行批量比对</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Sep 30, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@faa</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 读取所有后缀为“.faa”的文件，可以自己更改</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@faa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).faa/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".CAZy.diamond\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\"># -p表示线程数，在笔记本上用6个即可</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"diamond blastp -d CAZy -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将上述代码复制到文件中，命名为 “run_diamond_CAZy.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析，得到 “*.CAZy.diamond”：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_diamond_CAZy.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"比对结果过滤\"><a class=\"markdownIt-Anchor\" href=\"#比对结果过滤\"></a> 比对结果过滤</h1>\n<p>在比对过程中我们控制了 evalue 和 query coverage，但是没有控制 identity。但是很多时候，需要设定一个 identity 的阈值，低于阈值的比对将会被删除，该步骤可以将比对结果拷贝到 Excel 中根据 identity 排序，手动删除阈值以下的行，然而我选择用 Perl 批处理。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Sep 30, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@cazy</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.CAZy.diamond\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@cazy</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).CAZy.diamond/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".CAZy.diamond.filtered\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose OUT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将上述代码复制到文件中，命名为 “filter_cazy_diamond.pl”，将其和上一步产生的文件放在同一目录下，并在终端中输入如下命令，完成过滤，保留 identity &gt;= 40% 的行，得到 “*.CAZy.diamond.filtered”。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl filter_cazy_diamond.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"你以为完了还得mapping\"><a class=\"markdownIt-Anchor\" href=\"#你以为完了还得mapping\"></a> 你以为完了？还得 mapping！</h1>\n<p>得到的结果如下图所示，第二列的 Hits 是 NCBI 的 Assession number，我们根本只知道这是什么 CAZy 家族，因此需要 mapping！</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Diamond比对结果\" /></p>\n<p>回头找到我们下载的<a href=\"http://www.cazy.org/IMG/cazy_data/cazy_data.zip\"> cazy_data.txt</a>，里面保存的是 CAZy 家族与 Assession number 的对应关系。比较闲的兄弟可以用查找 - 复制 - 粘贴的方法将 “*.CAZy.diamond.filtered” 中的 Assession number 替换为 CAZy 家族。我为比较忙的兄弟准备了下面的代码，批处理。不过我输出的是一个矩阵。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Sep 30, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%cazy</span><span class=\"token punctuation\">;</span>\n\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cazy_data.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$cazy</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%samples</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%ids</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@filtered</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.CAZy.diamond.filtered\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@filtered</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).CAZy.diamond.filtered/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$sample</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$samples</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@line</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$cazy</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$ids</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$cazy</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$sample</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$cazy</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">CAZy.Matrix.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@samples</span> <span class=\"token operator\">=</span> sort keys <span class=\"token variable\">%samples</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@ids</span> <span class=\"token operator\">=</span> sort keys <span class=\"token variable\">%ids</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> join<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@samples</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token variable\">@ids</span> <span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$ids</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$j</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span><span class=\"token operator\">&lt;</span><span class=\"token variable\">@samples</span> <span class=\"token punctuation\">;</span><span class=\"token variable\">$j</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$samples</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$ids</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\t$hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\t0\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将上述代码复制到文件中，命名为 “<a href=\"http://assession2cazy.pl\">assession2cazy.pl</a>“，将其和”cazy_data.txt“，及上一步产生的文件 “*.CAZy.diamond.filtered” 放在同一目录下，并在终端中输入如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl assession2cazy.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>得到一个矩阵 “CAZy.Matrix.txt”，内容如下，行为 CAZy 家族，列为基因组 / 样本名。拿到本文件后，可以做热图看 CAZy 家族在各样本中的分布情况，然而这个热图将会比鞋帮子脸还要长，可读性不高，因此我选择将这些 family 合并为大类，生成一个新的矩阵。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Mapping后的矩阵\" /></p>\n<p>二话不说，上代码。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Sep 30, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%category</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@samples</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$count</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CAZy.Matrix.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$count</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token variable\">@samples</span> <span class=\"token operator\">=</span> split<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+?)\\d+/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$cate</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$category</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$cate</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token variable\">@samples</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$samples</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$cate</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\n\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">CAZy.Category.Matrix.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@category</span> <span class=\"token operator\">=</span> sort keys <span class=\"token variable\">%category</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> join<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@samples</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token variable\">@category</span> <span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$category</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$j</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span><span class=\"token operator\">&lt;</span><span class=\"token variable\">@samples</span> <span class=\"token punctuation\">;</span><span class=\"token variable\">$j</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$samples</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$category</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\t$hash&#123;$samples[$j]&#125;&#123;$category[$i]&#125;\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\t0\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将上述代码复制到文件中，命名为 “<a href=\"http://cazyfamily2categories.pl\">cazyfamily2categories.pl</a>”，将其和上一步产生的文件 “CAZy.Matrix.txt” 放在同一目录下，并在终端中输入如下命令，得到文件 “CAZy.Category.Matrix.txt”。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl cazyfamily2categories.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_4.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"CAZy.Category.Matrix.txt内容概览\" /></p>\n<p>接下来是要做柱状图还是 heatmap，就随便了。</p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “9052” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"CAZy","path":"api/tags/CAZy.json"},{"name":"SY179","path":"api/tags/SY179.json"}]},{"title":"Swissprot数据库的本地化与序列比对并与其他数据库快速mapping","slug":"Swissprot数据库的本地化与序列比对","date":"2021-09-28T08:13:44.000Z","updated":"2022-01-08T02:16:28.416Z","comments":true,"path":"api/articles/Swissprot数据库的本地化与序列比对.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg","content":"<h1 id=\"数据库下载与构建\"><a class=\"markdownIt-Anchor\" href=\"#数据库下载与构建\"></a> 数据库下载与构建</h1>\n<h2 id=\"下载\"><a class=\"markdownIt-Anchor\" href=\"#下载\"></a> 下载</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"构建\"><a class=\"markdownIt-Anchor\" href=\"#构建\"></a> 构建</h2>\n<ul>\n<li>\n<p>解压缩</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gunzip -d uniprot_sprot.fasta.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>构建 blast + 数据库</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">makeblastdb -in uniprot_sprot.fasta -dbtype prot -out uniprot_sprot -parse_seqids<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>构建 DIAMOND 数据库</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">diamond makedb --in uniprot_sprot.fasta -d uniprot_sprot_diamond<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"比对\"><a class=\"markdownIt-Anchor\" href=\"#比对\"></a> 比对</h1>\n<ul>\n<li>\n<p>blastp 蛋白比对</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">blastp -query F01.faa -out F01.swissprot -db /new_data/hualin/db/uniprot_sprot -outfmt <span class=\"token number\">6</span> -num_threads <span class=\"token number\">30</span> -evalue 1e-5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>diamond 蛋白比对</p>\n<ul>\n<li>\n<p>单个基因组对比</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q F01.faa -e 1e-5 -f <span class=\"token number\">6</span> -o F01.diamond -k <span class=\"token number\">1</span> --sensitive -p <span class=\"token number\">30</span> --query-cover <span class=\"token number\">50</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>多个个基因组对比</p>\n<p>不会 shell 没办法，写 Perl 脚本 (run_diamond.pl) 来完成。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n   <span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Sep 28, 2021</span>\n\n   <span class=\"token keyword\">my</span> <span class=\"token variable\">@faa</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 读取所有后缀为“.faa”的文件，可以自己更改</span>\n   <span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@faa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).faa/</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".diamond\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\"># 将/new_data/hualin/db/uniprot_sprot_diamond换成自己的数据库路径; -p表示线程数，在笔记本上用6个即可</span>\n    system<span class=\"token punctuation\">(</span><span class=\"token string\">\"diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将上述代码复制到文件中，命名为 “run_diamond.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_diamond.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"将比对结果mapping至其他数据库\"><a class=\"markdownIt-Anchor\" href=\"#将比对结果mapping至其他数据库\"></a> 将比对结果 mapping 至其他数据库</h1>\n<ul>\n<li>\n<p>打开网址<a href=\"https://www.uniprot.org/uploadlists/\"> https://www.uniprot.org/uploadlists/</a>, 上传比对上的 swissprot ID，可以将比对结果转换为诸如 KEGG 等其他数据库的 ID。个人感觉不是很好用。</p>\n</li>\n<li>\n<p>我们可以把 mapping 文件下载下来，自己写脚本来提取信息，虽然麻烦些，但得到的更多。</p>\n<ul>\n<li>\n<p>下载 mapping 文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/idmapping/idmapping_selected.tab.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>解压缩</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gunzip -d idmapping_selected.tab.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>写脚本提取对应信息</p>\n<p>Diamond 比对的结果文件内容如下，第一列是自己的氨基酸序列 ID，第二列是 SwissProt 数据库中序列的 ID，而我们真正需要的是第二列中两个竖线中间的内容，在稍后的脚本中将通过正则表达式把它给揪出来。</p>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">F01_00001\tsp|Q73G44|MDH_WOLPM\t47.2\t72\t38\t0\t10\t81\t243\t314\t9.55e-16\t72.8\n   F01_00003\tsp|D9PU00|TFRA_METTM\t41.3\t569\t301\t7\t7\t574\t4\t540\t4.89e-131\t397\n   F01_00004\tsp|P9WN88|FRDB_MYCTO\t32.7\t208\t118\t6\t19\t215\t23\t219\t3.84e-28\t110\n   F01_00005\tsp|Q021N6|SUCC_SOLUE\t62.8\t384\t141\t2\t1\t383\t1\t383\t1.45e-155\t446<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>开始写脚本，保存为 “run_mapping.pl”。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Sep 28, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">%maps</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@diaout</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.diamond\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 读取所有的diamond比对后的输出文件</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@diaout</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(\\S+).diamond/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=~</span><span class=\"token regex\">/.+\\|(.+)\\|.+/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"idmapping_selected.tab\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$maps</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@diaout2</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.diamond\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 读取所有的diamond比对后的输出文件</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@diaout2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(\\S+).diamond/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".mapped\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"qseqid\\tsseqid\\tpident\\tlength\\tmismatch\\tgapopen\\tqstart\\tqend\\tsstart\\tsend\\tevalue\\tbitscore\\tUniProtKB-AC\tUniProtKB-ID\tGeneID (EntrezGene)\tRefSeq\tGI\tPDB\tGO\tUniRef100\tUniRef90\tUniRef50\tUniParc\tPIR\tNCBI-taxon\tMIM\tUniGene\tPubMed\tEMBL\tEMBL-CDS\tEnsembl\tEnsembl_TRS\tEnsembl_PRO\tAdditional PubMed\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=~</span><span class=\"token regex\">/.+\\|(.+)\\|.+/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$maps</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$maps</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$1</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose OUT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将脚本与 diamond 比对的结果文件以及下载的 mapping 文件放在同一目录下，在终端里输入如下命令即可得到 mapping 后的结果：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_mapping.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"go-注释\"><a class=\"markdownIt-Anchor\" href=\"#go-注释\"></a> GO 注释</h1>\n<ul>\n<li>\n<p>从 map 后的文件中提取基因 ID 和 GO number，各列以制表符分隔，没有 GO 注释的只输出 gene ID。</p>\n<p>准备脚本，命名为 “get_GO.pl”，与上一步生成的 “*.mapped” 文件放在同一目录下。</p>\n  <pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Sep 28, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@mapped</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.mapped\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@mapped</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).mapped/</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".GO\"</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=~</span><span class=\"token regex\">/.+\\; /</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@terms</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\; /</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 18代表文件的第19列</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> join<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@terms</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=~</span><span class=\"token regex\">/\\S+/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose OUT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在终端或者 Windows 命令行中运行如下命令，得到的 “*.GO” 为输出文件。</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl get_GO.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>GO 注释与可视化</p>\n</li>\n</ul>\n<p>访问网页<a href=\"https://wego.genomics.cn/\"> WEGO 2.0</a>，在网页中间位置是数据传输接口，将刚刚得到的所有结果文件拖拽上传，<strong>File format</strong> 选择<u>Native Format</u>，如果自己的数据是模式物种，可以在<strong> Reference</strong> 中选择对应的物种，点击<strong> Submit</strong> 即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"在WEGO 2.0网页提交数据\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"WEGO 2.0分析结果一览表\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"WEGO 2.0分析结果柱状图\" /></p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “e922” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"生物信息学2：VirtualBox虚拟机及Bio-Linux安装","slug":"生物信息学2：VirtualBox及Bio-Linux","date":"2018-11-20T02:40:21.000Z","updated":"2022-01-08T02:16:28.460Z","comments":true,"path":"api/articles/生物信息学2：VirtualBox及Bio-Linux.json","excerpt":null,"keywords":null,"cover":"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","content":"<p>前言：<a href=\"https://www.jianshu.com/p/2f765a81e7dd\" target=\"_blank\">上一篇</a>文章讲到了利用 Vmware 虚拟机加载 Bio-Linux，但有的小伙伴表示 Vmware 无法安装，也未见有效的错误提示，因此推荐第二款常用的老牌虚拟机软件 ——VirtualBox。</p>\n<span id=\"more\"></span>\n<p>1. <a href=\"https://www.virtualbox.org/\" target=\"_blank\">VirtualBox</a>下载与安装。</p><p>    该软件的安装比较简单，双击后根据提示一步步往下走即可。安装完毕后打开软件。</p><p><br></p><hr><p>2. 导入及配置Bio-Linux</p><p>（1）依次点击菜单栏的 “管理”——“导入虚拟电脑”</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 1 导入虚拟电脑1</div>\n</div><p>（2）在弹出的窗口中选择下载的 “Bio-Linux-8.0.7.ovf”进行导入</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-a6c955cec07389b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-a6c955cec07389b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 2 选择系统文件</div>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ce38f58eb9d87d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ce38f58eb9d87d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 3 准备导入虚拟电脑</div>\n</div><p>（3）虚拟电脑导入设置：此处有三项可以设置，分别是处理器的数量、内存大小和最后面的虚拟硬盘位置。前两者根据自己的电脑配置情况进行设置，硬盘位置一定要选择剩余容量大于50-60G的分区。点击“导入”等待完成即可，此时电脑可能会断网，重新连接一下即可。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-bbda5c1ad0811dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-bbda5c1ad0811dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 4 处理器及内存设置</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-140370931dbc3b86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-140370931dbc3b86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 5 虚拟硬盘位置自设</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-5b261a13f79e7291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-5b261a13f79e7291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 6 等待虚拟电脑导入完毕</div></p>\n</div><p>（4）鼠标单击导入完成的系统，菜单栏的 “设置”变成彩色可点击状态，点击进行系统设置。所有设置按如下5图（Figure 7-Figure 11）进行。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-7136bffed8701961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-7136bffed8701961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 7 粘贴板与拖放共享</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-520fee7dd398e306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-520fee7dd398e306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 8 存储控制 器输入输出</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ca76c38fb47dc821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ca76c38fb47dc821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 9 开启固态驱动器</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-75ccf98fbbf97d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-75ccf98fbbf97d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 10 显存设置（根据配置自设大小）</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-333bd34368d9b4ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-333bd34368d9b4ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 11 创建虚拟光盘</div></p>\n</div><p>（5）保存设置后，启动系统。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-f26c49cedf490ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-f26c49cedf490ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 12 启动虚拟电脑</div></p>\n</div><p>（6）进入系统后不需要更新，可以通过浏览器测试是否可以上网。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6e83ecb2661fc193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6e83ecb2661fc193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 13 系统启动完成</div></p>\n</div><p>（7）安装增强功能，参照如下4图（Figure12-Figure 15）</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ba16243bb4520ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ba16243bb4520ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 14 安装增强功能 1</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-1626909ed7b36761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-1626909ed7b36761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 15 安装增强功能 2</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-83e661db9b1fde93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-83e661db9b1fde93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 16 安装增强功能 3（密码：manager）</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-0e3aa0b41841928b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-0e3aa0b41841928b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 17 安装增强功能 4（输入 yes 回车）</div></p>\n</div><p>（8）提示按 “Press Return to close this window ...”的时候按一下回车键即可，重启Linux。</p><h3>问题：目前无法实现从windows到虚拟机的文件拷贝，暂时未找到解决方案，可通过共享文件夹解决。</h3><p>(9)共享文件夹设置</p><p>通过设置共享文件夹可以实现windows和虚拟机之间的同步，而不需要复制粘贴。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-8032463856bf4c85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-8032463856bf4c85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 18 共享文件夹设置 1</div></p>\n</div><p>        点击右上角的 “文件夹+”图标，选择共享文件夹路径（windows上的一个文件夹），共享文件夹名称会自动分配，勾选 “自动挂载” 和 “固定分配”。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ead5f24448be0c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ead5f24448be0c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 19 共享文件夹设置 2</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-054fbf18099da74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-054fbf18099da74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 20 共享文件夹设置 3</div></p>\n</div><p>        设置完成后重启Linux系统，打开目录，即可看到共享文件夹 “sf_softwares”。若不成功可重新安装增强功能并重启。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6dfe1cdbe1153fd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6dfe1cdbe1153fd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n<p>Figure 21 共享文件夹设置 4</div></p>\n</div><p>以上为基于VirtualBox 的 Bio-Linux配置，有问题的可以在下方留言，统一解答。</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"虚拟机","path":"api/tags/虚拟机.json"}]}]