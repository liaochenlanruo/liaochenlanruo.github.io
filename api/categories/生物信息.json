{"name":"生物信息","postlist":[{"title":"16S扩增子测序及宏基因组测序","slug":"16S扩增子测序及宏基因组测序","date":"2023-11-13T01:15:23.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/16S扩增子测序及宏基因组测序.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p>在本文中，我将着重介绍两种高通量测序技术：<code>16S rDNA扩增子测序</code>和<code>Shot-gun宏基因组测序</code>。我们的主要目的是帮助大家深入了解这些技术的原理、应用场景以及如何解读数据分析结果。</p>\n<p>随着高通量测序技术的快速发展，我们能够更全面、更深入地了解微生物群落结构和功能。16S rDNA扩增子测序作为一种常用的方法，可以通过对16S rRNA基因进行扩增和测序，快速揭示微生物群落的组成和多样性。而Shot-gun宏基因组测序则针对整个样本的全部基因组进行测序，提供了更全面的信息，包括微生物种类和功能丰度等。</p>\n<p>通过阅读本文，我们希望您能够掌握以下几个方面的内容：</p>\n<ul>\n<li>理解16S rDNA扩增子测序和Shot-gun宏基因组测序的基本原理和流程；</li>\n<li>了解两种技术在微生物学组学研究中的应用场景；</li>\n<li>学会收集、保存和运输样本时需要注意的细节；</li>\n<li>掌握如何解读和分析16S rDNA扩增子测序和Shot-gun宏基因组测序的数据结果。</li>\n</ul>\n<p>我相信，通过这次学习，您将能够更好地理解和应用这些高通量测序技术，并在自己的研究中获得更准确、全面的数据和结论。现在，让我们开始深入探索16S rDNA扩增子测序和Shot-gun宏基因组测序的世界吧！</p>\n<h1 id=\"高通量测序概述\"><a href=\"#高通量测序概述\" class=\"headerlink\" title=\"高通量测序概述\"></a>高通量测序概述</h1><p>高通量测序，也被称为下一代测序（Next Generation Sequencing, NGS），是一种革命性的DNA或RNA序列分析技术。与传统的Sanger测序方法相比，高通量测序具有更快、更便宜和更高通量的特点。</p>\n<p>高通量测序技术的核心原理是将待测样本中的DNA或RNA分子通过特定的方法进行扩增，并将其分成数百万个片段。然后，这些片段将被同时测序，产生大量的短序列片段，称为reads。这些reads可以根据其碱基序列进行排序和分析，以揭示样本中的遗传信息。</p>\n<h2 id=\"高通量测序在生物学研究中的重要性\"><a href=\"#高通量测序在生物学研究中的重要性\" class=\"headerlink\" title=\"高通量测序在生物学研究中的重要性\"></a>高通量测序在生物学研究中的重要性</h2><p>高通量测序技术在生物学研究中发挥着重要作用，对于我们理解生物系统的复杂性和多样性具有重要意义。以下是高通量测序在生物学研究中的几个重要应用：</p>\n<ul>\n<li><p><strong>基因组学研究</strong>：高通量测序可以帮助我们解析生物体的基因组组成、结构和功能，揭示基因与表型之间的关系。例如，它可以用于全基因组测序，鉴定和研究与疾病相关的基因突变。</p>\n</li>\n<li><p><strong>转录组学研究</strong>：通过高通量测序，我们可以了解到不同细胞或组织中正在表达的所有基因，进而研究基因的表达调控机制、信号通路以及与疾病相关的差异基因表达。</p>\n</li>\n<li><p><strong>蛋白质组学研究</strong>：高通量测序还可以用于蛋白质组学研究，帮助我们理解蛋白质的组成和功能。通过RNA测序和质谱分析相结合的方法，可以更全面地研究细胞内蛋白质的表达水平、亚细胞定位和相互作用网络等。</p>\n</li>\n<li><p><strong>微生物学研究</strong>：高通量测序在微生物学研究中广泛应用。通过对微生物群落DNA测序，我们可以揭示不同环境中微生物的多样性、组成和功能，为环境保护、药物开发和人类健康等领域提供重要依据。</p>\n</li>\n</ul>\n<p>总的来说，高通量测序技术推动了生物学研究的进步，并为我们提供了更全面、更深入的遗传信息。它为解决重要生物学问题和促进医学领域的发展提供了强大工具和资源。</p>\n<h1 id=\"16S-rDNA扩增子测序介绍\"><a href=\"#16S-rDNA扩增子测序介绍\" class=\"headerlink\" title=\"16S rDNA扩增子测序介绍\"></a>16S rDNA扩增子测序介绍</h1><p>16S rDNA是细菌和古细菌中的一个高度保守的基因区域，它编码了小亚基核糖体RNA（Small Subunit Ribosomal RNA），在细菌和古细菌的细胞中普遍存在。由于16S rDNA具有高度保守性和变异性的特点，它成为了研究微生物群落结构和多样性的理想标记。</p>\n<h2 id=\"16S-rDNA扩增子测序原理和流程：\"><a href=\"#16S-rDNA扩增子测序原理和流程：\" class=\"headerlink\" title=\"16S rDNA扩增子测序原理和流程：\"></a>16S rDNA扩增子测序原理和流程：</h2><ul>\n<li><strong>样品提取与PCR扩增：</strong> 首先，从样品中提取总DNA，包括微生物组成的DNA。然后，利用引物对16S rDNA进行PCR扩增，产生包含16S rDNA片段的扩增子。</li>\n<li><strong>文库构建：</strong> 将扩增子进行文库构建，即将其转化为适合高通量测序平台测序的文库。</li>\n<li><strong>高通量测序：</strong> 使用高通量测序技术（如Illumina MiSeq或Ion Torrent等）对文库进行测序，得到数百万个短序列片段，称为reads。</li>\n<li><strong>数据分析：</strong> 对测序数据进行质量控制、去除噪音和低质量reads，并对reads进行比对和聚类，得到OTU（Operational Taxonomic Unit）或ASV表格，用来表示不同的微生物分类单元。</li>\n<li><strong>分类学注释与功能预测：</strong> 对OTU&#x2F;ASV进行分类学注释，将其与已知的16S rDNA数据库比对，确定微生物群落的组成。此外，还可以使用相应的工具对OTU&#x2F;ASV进行功能预测，以了解微生物群落的功能潜力。</li>\n</ul>\n<h2 id=\"16S-rDNA扩增子测序在微生物群落分析中的应用：\"><a href=\"#16S-rDNA扩增子测序在微生物群落分析中的应用：\" class=\"headerlink\" title=\"16S rDNA扩增子测序在微生物群落分析中的应用：\"></a>16S rDNA扩增子测序在微生物群落分析中的应用：</h2><ul>\n<li><p><strong>多样性研究：</strong> 通过16S rDNA扩增子测序，我们可以了解到微生物群落的多样性、丰度和组成。这对于研究环境中的微生物生态系统、人体内的菌群结构和变化等具有重要意义。</p>\n</li>\n<li><p><strong>疾病相关研究：</strong> 微生物与宿主之间存在着复杂的相互关系，16S rDNA扩增子测序可帮助我们揭示微生物与疾病之间的关联。例如，可以研究肠道菌群在肠炎、肠癌等疾病中的变化，为疾病的早期诊断和治疗提供依据。</p>\n</li>\n<li><p><strong>环境监测：</strong> 通过16S rDNA扩增子测序，可以对环境中的微生物进行评估和监测。这有助于了解环境中的微生物多样性、菌群结构的变化等，为环境保护和资源管理提供科学依据。</p>\n<p>16S rDNA扩增子测序在微生物群落分析中的应用，有助于我们深入了解微生物的组成和功能特征，揭示微生物在各种生态系统中的作用和影响。</p>\n</li>\n</ul>\n<h1 id=\"Shot-gun宏基因组测序介绍\"><a href=\"#Shot-gun宏基因组测序介绍\" class=\"headerlink\" title=\"Shot-gun宏基因组测序介绍\"></a>Shot-gun宏基因组测序介绍</h1><h2 id=\"宏基因组测序概述\"><a href=\"#宏基因组测序概述\" class=\"headerlink\" title=\"宏基因组测序概述\"></a>宏基因组测序概述</h2><p>宏基因组测序是一种用于研究环境微生物的基因组的技术。与常规基因组测序不同，宏基因组测序可以同时测序一个样品中的所有DNA片段，而不仅仅是特定基因或区域。这使得我们能够获得更全面的宏基因组信息，了解生物群体的遗传多样性和功能潜力。</p>\n<h2 id=\"Shot-gun宏基因组测序原理和流程：\"><a href=\"#Shot-gun宏基因组测序原理和流程：\" class=\"headerlink\" title=\"Shot-gun宏基因组测序原理和流程：\"></a>Shot-gun宏基因组测序原理和流程：</h2><ul>\n<li><strong>样品提取与DNA纯化：</strong> 首先，从样品中提取总DNA（原核、真核、宿主等）。</li>\n<li><strong>文库构建：</strong> 将提取到的DNA进行碎片化处理，然后将其转化为适合高通量测序平台的文库，其中每个DNA片段都被连接到测序适配器上。</li>\n<li><strong>高通量测序：</strong> 利用高通量测序技术（如Illumina NovaSeq或PacBio等）对文库进行测序，产生海量的短读段或长读段。</li>\n<li><strong>数据处理与组装：</strong> 对测序数据进行质量控制（去宿主序列）、去除低质量reads，并将reads进行拼接组装，以重建原始DNA序列的完整性。</li>\n<li><strong>功能注释与分析：</strong> 对宏基因组进行进一步的数据处理和分析，包括基因预测、基因注释、物种注释、代谢通路分析等，以了解宏基因组的功能潜力。</li>\n</ul>\n<h2 id=\"Shot-gun宏基因组测序在宏基因组学研究中的应用：\"><a href=\"#Shot-gun宏基因组测序在宏基因组学研究中的应用：\" class=\"headerlink\" title=\"Shot-gun宏基因组测序在宏基因组学研究中的应用：\"></a>Shot-gun宏基因组测序在宏基因组学研究中的应用：</h2><ul>\n<li><strong>功能和代谢潜力分析：</strong> 通过Shot-gun宏基因组测序，我们可以预测宏生物体内存在的基因，并进一步推断其功能和代谢潜力。这有助于理解宏生物体对环境的适应性和功能特征。</li>\n<li><strong>群落结构和相互作用分析：</strong> 宏基因组测序可以揭示宏生物群落的组成和结构，以及不同种群之间的相互作用模式。这对于研究宏生态系统的稳定性、共生共存关系和复杂网络等方面具有重要意义。</li>\n</ul>\n<p>Shot-gun宏基因组测序提供了了解宏生物的遗传多样性、功能潜力和生态作用的强大工具。它在宏基因组学研究中发挥着重要作用，为我们深入了解生物的基因组特征和生态系统功能提供了新的视角。</p>\n<h1 id=\"16S-rDNA扩增子测序与Shot-gun宏基因组测序的区别\"><a href=\"#16S-rDNA扩增子测序与Shot-gun宏基因组测序的区别\" class=\"headerlink\" title=\"16S rDNA扩增子测序与Shot-gun宏基因组测序的区别\"></a>16S rDNA扩增子测序与Shot-gun宏基因组测序的区别</h1><table>\n<thead>\n<tr>\n<th>特点</th>\n<th>宏基因组测序</th>\n<th>16S测序</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>分析范围</td>\n<td>微生物群落中的所有微生物种类和全基因组信息</td>\n<td>微生物群落中的16S rRNA基因信息</td>\n</tr>\n<tr>\n<td>精度和分辨率</td>\n<td>高（种水平）</td>\n<td>相对较低（属水平）</td>\n</tr>\n<tr>\n<td>数据处理和分析复杂性</td>\n<td>复杂</td>\n<td>相对简单</td>\n</tr>\n<tr>\n<td>优势</td>\n<td>提供全面性信息，高分辨率，功能分析，适用于各种生态系统研究</td>\n<td>揭示微生物的多样性、群落结构、系统发育关系，成本低</td>\n</tr>\n<tr>\n<td>宿主影响</td>\n<td>易</td>\n<td>不易</td>\n</tr>\n<tr>\n<td>局限性</td>\n<td>昂贵，需要大量计算资源和专业知识</td>\n<td>仅提供关于16S rRNA基因（细菌和古细菌）的信息，分辨率有限，无法提供详细的功能和代谢潜力信息。</td>\n</tr>\n<tr>\n<td>以上是宏基因组测序和16S测序的主要差别。16S rDNA扩增子测序更加注重微生物群落的结构和多样性分析，尽管宏基因组测序具有更广泛的应用和更高的解析能力，但同时也存在着一些局限性，如成本高昂、数据处理和分析的复杂性以及对专业知识的依赖。因此，在选择使用哪种技术时，研究人员需要根据自身的研究目的、样品类型和预算进行权衡。</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"样本收集保存和运输注意事项\"><a href=\"#样本收集保存和运输注意事项\" class=\"headerlink\" title=\"样本收集保存和运输注意事项\"></a>样本收集保存和运输注意事项</h1><h2 id=\"扩增子和宏基因组测序前样本的采集方法和注意事项：\"><a href=\"#扩增子和宏基因组测序前样本的采集方法和注意事项：\" class=\"headerlink\" title=\"扩增子和宏基因组测序前样本的采集方法和注意事项：\"></a>扩增子和宏基因组测序前样本的采集方法和注意事项：</h2><h3 id=\"样本采集方法：\"><a href=\"#样本采集方法：\" class=\"headerlink\" title=\"样本采集方法：\"></a>样本采集方法：</h3><ul>\n<li>对于微生物群落研究，例如16S rDNA扩增子测序，通常采集环境样品（如土壤、水体、肠道内容物）或临床样品（如口腔拭子、粪便样品）。</li>\n<li>采集时要避免污染，使用无菌工具（如消毒的手套、取样器具等）进行采集。</li>\n<li>采集前应了解目标生物的分布情况、适宜的时间和地点，并进行采样地点的描述和记录。</li>\n<li>宏基因组测序涉及更广泛的样品类型，包括细菌、古细菌、真核生物等。采集方法根据样品类型有所不同。</li>\n</ul>\n<h3 id=\"注意事项：\"><a href=\"#注意事项：\" class=\"headerlink\" title=\"注意事项：\"></a>注意事项：</h3><ul>\n<li>样品采集和处理过程中，必须遵守无菌操作规范，以减少外部污染对样品的影响。</li>\n<li>避免使用可能含有RNase或DNase酶的试剂和工具，以防止核酸降解。</li>\n<li>了解目标生物的生态环境和特性，选择合适的采集时间和地点，确保获得代表性的样品。</li>\n<li>根据不同采样类型，选择合适的容器（如离心管、冰袋、采集棒等）进行样品收集，并在收集后立即进行处理或冷冻保存。</li>\n<li>在采集样品前，将采样工具彻底清洁消毒，尽量避免重复采样和交叉污染。</li>\n<li>通过宏基因组测序研究宿主相关微生物时，需要注意尽可能避免采集到宿主组织，否则会导致测序数据中微生物序列占比过小。</li>\n</ul>\n<h2 id=\"样本保存和运输以保持完整性和稳定性：\"><a href=\"#样本保存和运输以保持完整性和稳定性：\" class=\"headerlink\" title=\"样本保存和运输以保持完整性和稳定性：\"></a>样本保存和运输以保持完整性和稳定性：</h2><ul>\n<li><p><strong>保存方法：</strong></p>\n<ul>\n<li>样品保存应根据实验需求和样品特性选择适当的方法。常见的保存方法包括低温冷冻、保护液保存等。</li>\n<li>对于微生物样品，通常将其迅速冷冻保存在-80°C的冰箱中，以减缓DNA降解和生物活性的损失。</li>\n</ul>\n</li>\n<li><p><strong>运输方法：</strong></p>\n<ul>\n<li>在样品运输过程中，应确保样品的温度稳定性和完整性。</li>\n<li>使用合适的运输容器，如冷箱、干冰盒等，以保持低温和防止样品破裂或泄漏。</li>\n<li>对于国际运输，遵守相关法规和运输限制，确保样品能够顺利通过海关和检疫。</li>\n</ul>\n</li>\n</ul>\n<p>在采集样本和进行扩增子或宏基因组测序之前，正确的采集方法和样品处理是确保数据质量和可靠性的重要步骤。选择适当的保存和运输方法可以确保样品的完整性和稳定性，并最大程度地保护其中的生物信息。</p>\n<p>请注意，不同类型的样品可能需要采用不同的保存和运输方法。因此，在进行扩增子或宏基因组测序之前，建议咨询专业人士或参考相关文献以获取针对特定样品类型的最佳实践建议。</p>\n<h1 id=\"数据分析结果解读\"><a href=\"#数据分析结果解读\" class=\"headerlink\" title=\"数据分析结果解读\"></a>数据分析结果解读</h1><h2 id=\"16S-rDNA和宏基因组数据分析的基本流程：\"><a href=\"#16S-rDNA和宏基因组数据分析的基本流程：\" class=\"headerlink\" title=\"16S rDNA和宏基因组数据分析的基本流程：\"></a>16S rDNA和宏基因组数据分析的基本流程：</h2><h3 id=\"16S-rDNA数据分析流程：\"><a href=\"#16S-rDNA数据分析流程：\" class=\"headerlink\" title=\"16S rDNA数据分析流程：\"></a>16S rDNA数据分析流程：</h3><ul>\n<li>质量控制：对原始测序数据进行质量过滤和去除接头、低质量序列。</li>\n<li>序列拼接：将质量控制后的序列根据重叠区域进行拼接，得到高质量的长序列。</li>\n<li>物种注释：使用参考数据库（如Greengenes、SILVA）进行物种注释，将序列与已知物种进行比对并分类。</li>\n<li>多样性分析：计算物种多样性指数、绘制稀释曲线、构建物种共生网络等。</li>\n<li>群落结构分析：通过聚类分析（如OTU聚类）和Beta多样性分析（如PCoA、NMDS）研究群落结构差异。</li>\n<li>寻找Biomarker：通过LESFE分析寻找差异物种。</li>\n<li>功能预测：通过软件（picrust2，FAPROTAX）预测群落功能。</li>\n</ul>\n<h3 id=\"宏基因组数据分析流程：\"><a href=\"#宏基因组数据分析流程：\" class=\"headerlink\" title=\"宏基因组数据分析流程：\"></a>宏基因组数据分析流程：</h3><ul>\n<li>质量控制：对原始测序数据进行质量过滤和去除低质量序列。</li>\n<li>去宿主序列：将质量控制后的序列与宿主参考基因组进行比对，剩余的为微生物序列。</li>\n<li>基因预测：对微生物序列进行基因预测。</li>\n<li>功能注释：使用参考数据库（如KEGG、COG、GO、CAZY）对预测的功能基因进行注释。</li>\n<li>Alpha和Beta多样性分析：计算Alpha多样性指数和Beta多样性，比较不同样本之间的功能结构差异。</li>\n</ul>\n<h3 id=\"常见的分析软件和工具：\"><a href=\"#常见的分析软件和工具：\" class=\"headerlink\" title=\"常见的分析软件和工具：\"></a>常见的分析软件和工具：</h3><ul>\n<li>16S rDNA数据分析：QIIME2，mothur，DADA2，UPARSE, RDPipeline，vegan，PICRUSt……</li>\n<li>宏基因组数据分析：MetaPhlAn, HUMAnN, MG-RAST, MEGAN, kraken2……</li>\n</ul>\n<h1 id=\"结论和展望\"><a href=\"#结论和展望\" class=\"headerlink\" title=\"结论和展望\"></a>结论和展望</h1><h2 id=\"16S-rDNA扩增子和Shot-gun宏基因组测序的特点和应用：\"><a href=\"#16S-rDNA扩增子和Shot-gun宏基因组测序的特点和应用：\" class=\"headerlink\" title=\"16S rDNA扩增子和Shot-gun宏基因组测序的特点和应用：\"></a>16S rDNA扩增子和Shot-gun宏基因组测序的特点和应用：</h2><h3 id=\"16S-rDNA扩增子测序特点和应用：\"><a href=\"#16S-rDNA扩增子测序特点和应用：\" class=\"headerlink\" title=\"16S rDNA扩增子测序特点和应用：\"></a>16S rDNA扩增子测序特点和应用：</h3><ul>\n<li>特点：通过放大和测序16S rDNA基因区域，可以研究微生物群落的组成和结构。</li>\n<li>应用：<ul>\n<li>揭示微生物群落的多样性和相对丰度，了解不同环境中的微生物群落变化。</li>\n<li>研究微生物与健康、疾病之间的关联，如肠道菌群与肠道疾病的关系。</li>\n<li>探索环境中未知微生物种类，发现新的微生物资源。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Shot-gun宏基因组测序特点和应用：\"><a href=\"#Shot-gun宏基因组测序特点和应用：\" class=\"headerlink\" title=\"Shot-gun宏基因组测序特点和应用：\"></a>Shot-gun宏基因组测序特点和应用：</h3><ul>\n<li>特点：对整个基因组进行测序，包括微生物和宿主的DNA，提供更全面的信息。</li>\n<li>应用：<ul>\n<li>研究微生物和宿主基因组之间的相互作用，如微生物的代谢功能对宿主健康的影响。</li>\n<li>分析微生物的功能潜力，如预测微生物群落参与的代谢途径和信号通路。</li>\n<li>研究微生物基因组的进化和遗传多样性，理解微生物演化和适应策略。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"未来发展方向和潜在的研究前景：\"><a href=\"#未来发展方向和潜在的研究前景：\" class=\"headerlink\" title=\"未来发展方向和潜在的研究前景：\"></a>未来发展方向和潜在的研究前景：</h2><h3 id=\"方法改进：\"><a href=\"#方法改进：\" class=\"headerlink\" title=\"方法改进：\"></a>方法改进：</h3><ul>\n<li>提高测序技术的精度和通量，降低成本，使得扩增子和宏基因组测序更加高效和经济。</li>\n<li>开发新的分析工具和算法，以提高数据处理和解释的准确性和效率。</li>\n</ul>\n<h3 id=\"整合多组学数据：\"><a href=\"#整合多组学数据：\" class=\"headerlink\" title=\"整合多组学数据：\"></a>整合多组学数据：</h3><ul>\n<li>结合16S rDNA&#x2F;宏基因组测序数据与转录组、蛋白质组和代谢组等多组学数据，构建全面的系统生物学模型，深入了解微生物与宿主之间的复杂相互关系。</li>\n</ul>\n<h3 id=\"功能预测和代谢网络建模：\"><a href=\"#功能预测和代谢网络建模：\" class=\"headerlink\" title=\"功能预测和代谢网络建模：\"></a>功能预测和代谢网络建模：</h3><ul>\n<li>进一步发展和完善基于宏基因组数据的功能预测方法，从而揭示微生物群落的代谢功能和关键信号通路。</li>\n<li>基于大规模宏基因组数据，构建微生物群落的代谢网络模型，深入理解微生物共生和协同作用的机制。</li>\n</ul>\n<h3 id=\"环境和临床应用：\"><a href=\"#环境和临床应用：\" class=\"headerlink\" title=\"环境和临床应用：\"></a>环境和临床应用：</h3><ul>\n<li>运用16S rDNA扩增子和宏基因组测序技术，研究不同环境（如土壤、水体、大气）中的微生物群落动态和功能。</li>\n<li>在临床领域，通过微生物组学的研究，探索微生物与健康、疾病之间的关系，并开发个性化微生物介入策略。</li>\n</ul>\n<p>总的来说，未来的发展方向包括技术改进、多组学数据整合、功能预测和代谢网络建模，以及在环境和临床应用方面的深入研究。这些发展将进一步推动微生物组学的应用和理解，为我们揭示微生物的奥秘提供更深入的视角。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"测序","path":"api/tags/测序.json"},{"name":"扩增子","path":"api/tags/扩增子.json"},{"name":"宏基因组","path":"api/tags/宏基因组.json"}]},{"title":"CAZy碳水化合物活性酶预测","slug":"CAZy碳水化合物活性酶预测","date":"2021-09-30T01:18:19.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/CAZy碳水化合物活性酶预测.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg","content":"<h1 id=\"CAZy数据库简介\"><a href=\"#CAZy数据库简介\" class=\"headerlink\" title=\"CAZy数据库简介\"></a>CAZy数据库简介</h1><p><a href=\"http://www.cazy.org/Home.html\">CAZy</a> 全称为Carbohydrate-Active enZYmes Database，碳水化合物酶相关的专业数据库，内容包括能催化碳水化合物降解、修饰、以及生物合成的相关酶系家族。其包含五个主要分类：糖苷水解酶（Glycoside Hydrolases, GHs）、糖基转移酶（GlycosylTransferases, GTs）、多糖裂解酶（Polysaccharide Lyases, PLs）、糖酯酶（Carbohydrate Esterases, CEs）和氧化还原酶（Auxiliary Activities, AAs）。此外，还包含与碳水化合物结合结构域（Carbohydrate-Binding Modules， CBMs）。五大分类和一个结构域下，都分别建立了多个Family。</p>\n<ul>\n<li><p><a href=\"http://www.cazy.org/Glycoside-Hydrolases.html\">GHs</a>：糖苷键的水解和&#x2F;或重排</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/GlycosylTransferases.html\">GTs</a>：糖苷键的形成</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/Polysaccharide-Lyases.html\">PLs</a>：糖苷键的非水解裂解</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/Carbohydrate-Esterases.html\">CEs</a>：水解碳水化合物的酯类</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/Auxiliary-Activities.html\">AAs</a>：与 CAZymes 协同作用的氧化还原酶</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/Carbohydrate-Binding-Modules.html\">CBMs</a>：与碳水化合物结合</p>\n</li>\n</ul>\n<h1 id=\"CAZy数据库的准备\"><a href=\"#CAZy数据库的准备\" class=\"headerlink\" title=\"CAZy数据库的准备\"></a>CAZy数据库的准备</h1><p>在进行预测之前需要准备数据库，CAZy貌似没有提供FASTA格式的序列数据库，而仅提供了序列的Assenssion number，需要我们自己从NCBI数据库中下载序列。下载方法参照我之前的文章《<a href=\"https://liaochenlanruo.github.io/post/e7e9.html\">根据assession number批量从NCB下载数据</a>》，在文章中提供了下载CAZy序列的方法和脚本，此处不再赘述。</p>\n<p>在上一篇文章结尾获得的“All.sequences.fas”文件包含了所有的CAZy数据库序列，在正式预测之前需要完成数据库的格式化。后面我们将通过Diamond软件从基因组中预测CAZy蛋白，因此采用Diamond格式化数据库。</p>\n<ul>\n<li><p>序列预处理</p>\n<p>  不知道什么原因，下载的序列存在两个问题，其一，下一条序列的ID连接着上一条序列的末尾，没有断行；其二，序列中存在着一段网页代码。因此，需要分两步进行修正。</p>\n<ul>\n<li><p>解决断行问题</p>\n<p>  撰写脚本“add_linebreak.pl”，内容如下：</p>\n  <figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> $/=<span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;All.sequences.fas&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;CAZy.fas&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;&gt;$_\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n<p>  将脚本与”All.sequences.fas”放在同一目录下，在终端或者命令行中运行如下命令，得到“CAZy.fas”。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl add_linebreak.pl</span><br></pre></td></tr></table></figure></li>\n<li><p>删除无关内容</p>\n<p>  用EmEditor软件打开CAZy.fas，Ctrl+F调出查找功能，搜索“www.” 可以看到如下内容，手动将其删除，并保存文件。</p>\n<p>  <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"数据库中需要手动删除的网页信息\"></p>\n</li>\n</ul>\n</li>\n<li><p>构建Diamond数据库</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamond makedb --<span class=\"keyword\">in</span> CAZy.fas -d CAZy</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"开始序列比对\"><a href=\"#开始序列比对\" class=\"headerlink\" title=\"开始序列比对\"></a>开始序列比对</h1><p>当然，我们选择用Perl进行批量比对</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);<span class=\"comment\"># 读取所有后缀为“.faa”的文件，可以自己更改</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.CAZy.diamond&quot;</span>;</span><br><span class=\"line\">\t<span class=\"comment\"># -p表示线程数，在笔记本上用6个即可</span></span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;diamond blastp -d CAZy -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将上述代码复制到文件中，命名为“run_diamond_CAZy.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析，得到“*.CAZy.diamond”：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_diamond_CAZy.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"比对结果过滤\"><a href=\"#比对结果过滤\" class=\"headerlink\" title=\"比对结果过滤\"></a>比对结果过滤</h1><p>在比对过程中我们控制了evalue和query coverage，但是没有控制identity。但是很多时候，需要设定一个identity的阈值，低于阈值的比对将会被删除，该步骤可以将比对结果拷贝到Excel中根据identity排序，手动删除阈值以下的行，然而我选择用Perl批处理。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @cazy = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.CAZy.diamond&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@cazy) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).CAZy.diamond/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.CAZy.diamond.filtered&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">2</span>] &gt;= <span class=\"number\">40</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>将上述代码复制到文件中，命名为“filter_cazy_diamond.pl”，将其和上一步产生的文件放在同一目录下，并在终端中输入如下命令，完成过滤，保留identity &gt;&#x3D; 40% 的行，得到“*.CAZy.diamond.filtered”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl filter_cazy_diamond.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"你以为完了？还得mapping！\"><a href=\"#你以为完了？还得mapping！\" class=\"headerlink\" title=\"你以为完了？还得mapping！\"></a>你以为完了？还得mapping！</h1><p>得到的结果如下图所示，第二列的Hits是NCBI的Assession number，我们根本只知道这是什么CAZy家族，因此需要mapping！</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Diamond比对结果\"></p>\n<p>回头找到我们下载的<a href=\"http://www.cazy.org/IMG/cazy_data/cazy_data.zip\">cazy_data.txt</a>，里面保存的是CAZy家族与Assession number的对应关系。比较闲的兄弟可以用查找-复制-粘贴的方法将“*.CAZy.diamond.filtered”中的Assession number替换为CAZy家族。我为比较忙的兄弟准备了下面的代码，批处理。不过我输出的是一个矩阵。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %cazy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;cazy_data.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t$cazy&#123;$lines[<span class=\"number\">2</span>]&#125; = $lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %samples;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %ids;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @filtered = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.CAZy.diamond.filtered&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@filtered) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).CAZy.diamond.filtered/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $sample = $1;</span><br><span class=\"line\">\t$samples&#123;$1&#125;++;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @line = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $cazy&#123;$line[<span class=\"number\">1</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t$ids&#123;$cazy&#123;$line[<span class=\"number\">1</span>]&#125;&#125;++;</span><br><span class=\"line\">\t\t\t$hash&#123;$sample&#125;&#123;$cazy&#123;$line[<span class=\"number\">1</span>]&#125;&#125;++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;CAZy.Matrix.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @samples = <span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %samples;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @ids = <span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %ids;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @samples) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $i=<span class=\"number\">0</span>; $i&lt;@ids ;$i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT $ids[$i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $j=<span class=\"number\">0</span>; $j&lt;@samples ;$j++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t$hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t0&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n\n<p>将上述代码复制到文件中，命名为“assession2cazy.pl“，将其和”cazy_data.txt“，及上一步产生的文件“*.CAZy.diamond.filtered”放在同一目录下，并在终端中输入如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl assession2cazy.pl</span><br></pre></td></tr></table></figure>\n\n<p>得到一个矩阵“CAZy.Matrix.txt”，内容如下，行为CAZy家族，列为基因组&#x2F;样本名。拿到本文件后，可以做热图看CAZy家族在各样本中的分布情况，然而这个热图将会比鞋帮子脸还要长，可读性不高，因此我选择将这些family合并为大类，生成一个新的矩阵。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Mapping后的矩阵\"></p>\n<p>二话不说，上代码。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %category;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @samples;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;CAZy.Matrix.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t$count++;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($count == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t@samples = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t$lines[<span class=\"number\">0</span>]=~<span class=\"regexp\">/(.+?)\\d+/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $cate = $1;</span><br><span class=\"line\">\t\t$category&#123;$cate&#125;++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $i=<span class=\"number\">0</span>; $i&lt;@samples; $i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $j = $i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t$hash&#123;$samples[$i]&#125;&#123;$cate&#125; += $lines[$j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;CAZy.Category.Matrix.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @category = <span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %category;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @samples) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $i=<span class=\"number\">0</span>; $i&lt;@category ;$i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT $category[$i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $j=<span class=\"number\">0</span>; $j&lt;@samples ;$j++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$samples[$j]&#125;&#123;$category[$i]&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t$hash&#123;$samples[$j]&#125;&#123;$category[$i]&#125;&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t0&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n<p>将上述代码复制到文件中，命名为“cazyfamily2categories.pl”，将其和上一步产生的文件“CAZy.Matrix.txt”放在同一目录下，并在终端中输入如下命令，得到文件“CAZy.Category.Matrix.txt”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl cazyfamily2categories.pl</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_4.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"CAZy.Category.Matrix.txt内容概览\"></p>\n<p>接下来是要做柱状图还是heatmap，就随便了。</p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“9052”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"CAZy","path":"api/tags/CAZy.json"},{"name":"SY179","path":"api/tags/SY179.json"}]},{"title":"BtToxin_Digger--A high-throughput Bacillus thuringiensis toxin mining pipeline","slug":"BtToxin_Digger","date":"2020-11-04T07:38:43.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/BtToxin_Digger.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>BtToxin_Digger is the latest high-throughput Bacillus thuringiensis virulence factor mining pipeline on the whole network, including the basic web version and the local advanced version.</p>\n<span id=\"more\"></span>\n\n<h2 id=\"What-is-BtToxin-Digger\"><a href=\"#What-is-BtToxin-Digger\" class=\"headerlink\" title=\"What is BtToxin_Digger?\"></a>What is BtToxin_Digger?</h2><p>BtToxin_Digger is a high-throughput, automatic gene mining tool that can mine toxin genes, such as Cry, Cyt and Vip, etc, from <em>Bacillus thuringiensis</em>. The pipeline accepts multiple forms of input data including Reads, assembled genomes, CDSs, and protein sequences and can output rich and useful results. It is derived from the re-design of the tool <a href=\"https://bcam.hzau.edu.cn/BtToxin_Digger/\">BtToxin_Digger</a> we developed previously. Compared with BtToxin_Digger, BtToxin_Digger has many improvements, as follows:</p>\n<ul>\n<li><p>Can be run in batches, suitable for large-scale genome analysis.</p>\n</li>\n<li><p>Added genome assembly functions, including second-generation short-reads assembly, third-generation long-reads assembly, and hybrid assembly of short-reads and long-reads, to realize the full-automatic mining of genes from Reads to virulence factors. The previous three input files (assembled genomes, ORFs and protein sequences) are still supported, and genome assembly can be used independently.</p>\n</li>\n<li><p>Fixed a bug where BtToxin_Digger often reported errors when processing assembled genomes.</p>\n</li>\n<li><p>Added support for CDSs and not limited to ORFs.</p>\n</li>\n<li><p>The database has been updated, adding support for App, Gpp, Mcf, Mpf, Mpp, Mtx, Pra, Prb, Spp, Tpp, Cyt, Vip, Vpa, Vpb, Xpp and other virulence factors.</p>\n</li>\n<li><p>BtToxin_Digger generates comprehensive and readable outputs including toxin list and sequence for each input; a matrix of all strains and the virulence factors it contains (behavior strain names, listed as virulence factor names), which can be used as virulence factors contained in the strain Database; and a file writes the information and sequences of all toxins (Table 1) to facilitate centralized processing and downstream analysis and experiment designs.</p>\n</li>\n<li><p>Added multi-thread support, greatly improving the running speed of the pipeline.</p>\n</li>\n</ul>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><ul>\n<li><p>Required dependencies<br>– <a href=\"http://metacpan.org/pod/BioPerl\">BioPerl</a><br>– <a href=\"https://www.ebi.ac.uk/Tools/hmmer/\">HMMER</a><br>– <a href=\"https://github.com/cjlin1/libsvm\">libsvm</a><br>– <a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&amp;PAGE_TYPE=BlastDocs&amp;DOC_TYPE=Download\">NCBI-blast+</a><br>– <a href=\"http://www.perl.org/get.html\">Perl</a><br>– <a href=\"https://liaochenlanruo.hzaubmb.org/pgcgap\">PGCGAP</a></p>\n</li>\n<li><p>Source codes</p>\n</li>\n</ul>\n<p>The BtToxin_Digger codes can be downloaded from <a href=\"https://github.com/liaochenlanruo/BtToxin_Digger\">GitHub</a>.</p>\n<ul>\n<li>Install with Bioconda - OSX&#x2F;Linux&#x2F;WSL</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n toxin python=3</span><br><span class=\"line\">conda activate toxin</span><br><span class=\"line\">conda install bttoxin_digger</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Install with the docker container</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull quay.io/biocontainers/bttoxin_digger:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n<p>(See <a href=\"https://quay.io/repository/biocontainers/bttoxin_digger?tab=tags\">bttoxin_digger&#x2F;tags</a> for valid values for <tag>)</p>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger [Options]</span><br></pre></td></tr></table></figure>\n\n<p>Options:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[--help]                      Print the help message and exit</span><br><span class=\"line\">[--version]                   Show version number of BtToxin_Digger and exit</span><br><span class=\"line\">[--threads (INT)]             Number of threads to be used ( Default 4 )</span><br><span class=\"line\">[--SeqPath (PATH)]            [Required] The path of input sequences ( Default &quot;the current directory&quot; )</span><br><span class=\"line\">[--SequenceType (STRING)]     [Required] Sequence type for inputs. &quot;reads&quot;, &quot;nucl&quot;, &quot;orfs&quot;, and &quot;prot&quot; avaliable ( Default nucl )</span><br><span class=\"line\">[--platform (STRING)]         [Required] Sequencing Platform, &quot;illumina&quot;, &quot;pacbio&quot;, &quot;oxford&quot; and &quot;hybrid&quot; available ( Default illumina )</span><br><span class=\"line\">[--assemble_only (STRING)]    Only perform genome assembly without predicting toxins.</span><br><span class=\"line\">[--reads1 (STRING)]           [Required by &quot;reads&quot;] The suffix name of reads 1 ( for example: if the name of reads 1 is &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot;, &quot;YBT-1520&quot; is the strain same, so the suffix name should be &quot;.R1.clean.fastq.gz&quot; )</span><br><span class=\"line\">[--reads2 (STRING)]           [Required by &quot;reads&quot;] The suffix name of reads 2( not required by &quot;oxford&quot; and &quot;pacbio&quot;. For example: if the name of reads 2 is &quot;YBT-1520_2.fq&quot;, the suffix name should be _2.fq&quot; )</span><br><span class=\"line\">[--suffix_len (INT)]          [Required by &quot;reads&quot;] (Strongly recommended) The suffix length of the reads file, that is the length of the reads name minus the length of the strain name. For example the --suffix_len of &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot; is 26 ( &quot;YBT-1520&quot; is the strain name ) ( Default 0 )</span><br><span class=\"line\">[--short1 (STRING)]           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</span><br><span class=\"line\">[--short2 (STRING)]           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</span><br><span class=\"line\">[--long (STRING)]             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</span><br><span class=\"line\">[--hout (STRING)]             [Required] Output directory for hybrid assembly ( Default &quot;../../Results/Assembles/Hybrid&quot; )</span><br><span class=\"line\">[--genomeSize (STRING)]       [Required] An estimate of the size of the genome. Common suffixes are allowed, for example, 3.7m or 2.8g. Needed by PacBio data and Oxford data ( Default 6.07m )</span><br><span class=\"line\">[--Scaf_suffix (STRING)]      The suffix of scaffolds or genomes ( Default &quot;.filtered.fas&quot; )</span><br><span class=\"line\">[--orfs_suffix (STRING)]      The suffix of orfs files ( Default &quot;.ffn&quot; )</span><br><span class=\"line\">[--prot_suffix (STRING)]      The suffix of protein files ( Default &quot;.faa&quot; )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><ul>\n<li>Processing Illumina paired-end Reads</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Illumina Reads PATH&gt; --SequenceType reads --platform illumina --reads1 &lt;suffix name of reads 1&gt; -reads2 &lt;suffix name of reads 2&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing PacBio long Reads</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;PacBio Reads PATH&gt; --SequenceType reads --platform pacbio --reads1 &lt;suffix name of PacBio reads&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Oxford long Reads</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Oxford Reads PATH&gt; --SequenceType reads --platform oxford --reads1 &lt;suffix name of Oxford reads&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Hybrid Reads (Long reads + illumina short reads)</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Reads PATH&gt; --SequenceType reads --platform hybrid --short1 &lt;short reads 1&gt; --short2 &lt;short reads 2&gt; --long &lt;long reads&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Assembled genomes</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Assembled genome PATH&gt; --SequenceType nucl --Scaf_suffix &lt;suffix of genomes&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Protein sequences</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Protein file PATH&gt; --SequenceType prot --prot_suffix &lt;suffix of protein files&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Coding sequences</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;CDSs file PATH&gt; --SequenceType orfs --orfs_suffix &lt;suffix of orfs files&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Outputs\"><a href=\"#Outputs\" class=\"headerlink\" title=\"Outputs\"></a>Outputs</h2><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;*</strong>: Genome assembly results;</p>\n</li>\n<li><p><strong>Results&#x2F;Toxins&#x2F;*.list</strong>: Toxin list of each strain;</p>\n</li>\n<li><p><strong>Results&#x2F;Toxins&#x2F;*.gbk</strong>: Toxin sequences in Genbank format of each strain;</p>\n</li>\n<li><p><strong>Results&#x2F;Toxins&#x2F;Btallgenes.table</strong>: A matrix describes Strains vs. Toxins;</p>\n</li>\n<li><p><strong>Results&#x2F;Toxins&#x2F;All_Toxins.txt</strong>: A table containing all information and sequences of all toxin genes. See table 1 for details.</p>\n</li>\n</ul>\n<h2 id=\"Contents-of-list\"><a href=\"#Contents-of-list\" class=\"headerlink\" title=\"Contents of *.list:\"></a>Contents of *.list:</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Overview of prediction \t Sequence type: nucl</span><br><span class=\"line\">Name\tCry\tCyt\tVip\tOthers\tSummary</span><br><span class=\"line\">Rank1\t1\t0\t0\t0\t1</span><br><span class=\"line\">Rank2\t0\t0\t0\t0\t0</span><br><span class=\"line\">Rank3\t0\t0\t0\t0\t0</span><br><span class=\"line\">Rank4\t10\t0\t1\t1\t12</span><br><span class=\"line\">HMM_SVM\t0\t0\t0\t0</span><br><span class=\"line\">Summary\t11\t0\t1\t1\t13</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Toxin type: Cry protein</span><br><span class=\"line\">ID\tProtein_ID\t\tProtein_description\tLength\tRank\tBLAST\tBest_hit\tHit length\tCoverage\tIdentity\tSVM\tHMM</span><br><span class=\"line\">1\tNHPK02000085.1_00018\t+2 19034-20206 len=391\t391\tRank1\tYES\tCry78Aa1\t359\t\t97.21\t\t32.66\t\tNO\tNO</span><br><span class=\"line\">2\tNHPK02000099.1_00001\t-1 5374-7407 len=678\t678\tRank4\tYES\tCry2Ab35\t633\t\t100.00\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">3\tNHPK02000115.1_00002\t+2 2-1342 len=447\t447\tRank4\tYES\tCry1Da2\t\t1165\t\t38.37\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">4\tNHPK02000115.1_00006\t+3 4275-7898 len=1208\t1208\tRank4\tYES\tCry1Ca15\t1189\t\t100.00\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">5\tNHPK02000153.1_00001\t-1 4176-6365 len=730\t730\tRank4\tYES\tCry1Ia40\t719\t\t100.00\t\t100.00\t\tYES\tYES</span><br><span class=\"line\">6\tNHPK02000168.1_00002\t-3 1673-5146 len=1158\t1158\tRank4\tYES\tCry9Ea9\t\t1150\t\t100.00\t\t100.00\t\tYES\tYES</span><br><span class=\"line\">7\tNHPK02000196.1_00001\t+3 723-2942 len=740\t740\tRank4\tYES\tCry1Da2\t\t1165\t\t63.43\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">8\tNHPK02000240.1_00001\t+2 2-1813 len=604\t604\tRank4\tYES\tCry1Ac16\t1178\t\t51.27\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">9\tNHPK02000243.1_00001\t+2 2-1738 len=579\t579\tRank4\tYES\tCry1Aa18\t1225\t\t47.27\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">10\tNHPK02000256.1_00001\t+2 2-1294 len=431\t431\tRank4\tYES\tCry1Ac30\t1178\t\t36.59\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">11\tNHPK02000386.1_00001\t-2 3-530 len=176\t176\tRank4\tYES\tCry1Ab11\t695\t\t25.32\t\t99.43\t\tNO\tYES</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Toxin type: Cyt protein</span><br><span class=\"line\">ID\tProtein_ID\tProtein_description\tLength\tRank\tBLAST\tBest_hit\tHit length\tCoverage\tIdentity\tSVM\tHMM</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Toxin type: Vip protein</span><br><span class=\"line\">ID\tProtein_ID\t\tProtein_description\tLength\tRank\tBLAST\tBest_hit\tHit length\tCoverage\tIdentity\tSVM\tHMM</span><br><span class=\"line\">1\tNHPK02000099.1_00004\t-3 10013-12397 len=795\t795\tRank4\tYES\tVip3Aa12\t789\t\t100.00\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Toxin type: Other toxins</span><br><span class=\"line\">ID\tProtein_ID\t\tProtein_description\tLength\tRank\tBLAST\tBest_hit\tHit length\tCoverage\tIdentity\tSVM\tHMM</span><br><span class=\"line\">1\tNHPK02000017.1_00027\t-3 15272-16258 len=329\t329\tRank4\tYES\tZwa5B-other\t322\t\t100.00\t\t99.07\t\tNO\tNA</span><br><span class=\"line\">//</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Contents-of-gbk-Partial\"><a href=\"#Contents-of-gbk-Partial\" class=\"headerlink\" title=\"Contents of *.gbk (Partial):\"></a>Contents of *.gbk (Partial):</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOCUS       NHPK02000017.1_00027        77664 bp    dna     linear   UNK</span><br><span class=\"line\">ACCESSION   NHPK02000017.1_00027</span><br><span class=\"line\">FEATURES             Location/Qualifiers</span><br><span class=\"line\">     Segment         complement(15272..16258)</span><br><span class=\"line\">                     /ETX_MTX2=&quot;NO&quot;</span><br><span class=\"line\">                     /Endotoxin_C=&quot;NO&quot;</span><br><span class=\"line\">                     /Endotoxin_M=&quot;NO&quot;</span><br><span class=\"line\">                     /Endotoxin_N=&quot;NO&quot;</span><br><span class=\"line\">                     /Endotoxin_mid=&quot;NO&quot;</span><br><span class=\"line\">                     /Rank=&quot;Rank4&quot;</span><br><span class=\"line\">                     /Segment_name=&quot;NHPK02000017.1_00027&quot;</span><br><span class=\"line\">                     /Toxin_10=&quot;NO&quot;</span><br><span class=\"line\">                     /blast_detail=&quot;Query_desc:-3 15272-16258 len=329</span><br><span class=\"line\">                     Query_Length:329\tQuery_Start-End:8-329\tHit_id:Zwa5B-other</span><br><span class=\"line\">                     Hit_desc:AAZ67352.1\tHit_length:322\tHit_Start-End:1-322</span><br><span class=\"line\">                     Aln_length:322\tPercent_identity:99.0683229813665</span><br><span class=\"line\">                     E-value:0.0&quot;</span><br><span class=\"line\">                     /blast_prediction=&quot;YES&quot;</span><br><span class=\"line\">                     /hmm_detail=&quot;&quot;</span><br><span class=\"line\">                     /hmm_prediction=&quot;NA&quot;</span><br><span class=\"line\">                     /locus_tag=&quot;NHPK02000017.1_00027&quot;</span><br><span class=\"line\">                     /protein_desc=&quot;-3 15272-16258 len=329&quot;</span><br><span class=\"line\">                     /protein_id=&quot;NHPK02000017.1_00027&quot;</span><br><span class=\"line\">                     /protein_len=&quot;329&quot;</span><br><span class=\"line\">                     /svm_prediction=&quot;NO&quot;</span><br><span class=\"line\">                     /translation=&quot;YRNEEAIMMYLNTKHINEMGVNWEETINVISKAVQSLDAEDFSQ</span><br><span class=\"line\">                     PIKPYLRFDDPANRIIAMPAYIGGEFKVSGIKWIASFPKNIEKGIQRAHSVTILNDAM</span><br><span class=\"line\">                     TGKPFATLNTAMVSVIRTASVTGLMIREFAKLRDLNNVKVGIIGFGPIGQMHLKMVTA</span><br><span class=\"line\">                     LLGDKIESVYLYDINGIKDELIPEDIYSKTQKVNAYEEAYNDADIFITCTVSAEGYID</span><br><span class=\"line\">                     KKPKDGALLLNVSLRDFKPDILEYTKSLVVDNWEEVCREKTDVERMHLERGLQKEDTV</span><br><span class=\"line\">                     SIADVVIRGALQNFPYDKAILFNPMGMAIFDVAIAAYYYQRAREKEIGVLLED&quot;</span><br><span class=\"line\">ORIGIN      </span><br><span class=\"line\">        1 cttctaaccg caaggactgc ggggttagcc taatcaatta gagttcgata gaactcttta</span><br><span class=\"line\">       61 cttaggaatc cctcacttct aaacgaagtg aaagtggggt tagttcaaaa ctattaacta</span><br><span class=\"line\">      121 taatataccc tttcaagaaa ttttaaaaag gttgaagtag ccaaaaaata ttttccggaa</span><br><span class=\"line\">      181 taattagatt aatttctctt ttttgtatat ttatgttaaa ttattgttat cactacaaat</span><br><span class=\"line\">      241 ttattgaata attttaatac tctccccttt atactatggt aatatgtttt tcacaataca</span><br><span class=\"line\">      301 tattaccact ataattgcaa acatatataa acccatattt agaattttta agattctttc</span><br><span class=\"line\">      361 atagcattaa gatatttttt accttttagt ttgtttattc ttaattttta aactaaaata</span><br><span class=\"line\">      421 atatatattg gtaataatta aataaaattc caataattat aggaaggaga aaattatgaa</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Table-1-Description-of-“All-Toxins-txt”\"><a href=\"#Table-1-Description-of-“All-Toxins-txt”\" class=\"headerlink\" title=\"Table 1. Description of “All_Toxins.txt”\"></a>Table 1. Description of “All_Toxins.txt”</h2><table>\n<thead>\n<tr>\n<th align=\"left\">Header</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Strain</td>\n<td align=\"left\">The name of your input</td>\n</tr>\n<tr>\n<td align=\"left\">Protein_id</td>\n<td align=\"left\">The protein ID</td>\n</tr>\n<tr>\n<td align=\"left\">Protein_len</td>\n<td align=\"left\">The length of protein sequence</td>\n</tr>\n<tr>\n<td align=\"left\">Strand</td>\n<td align=\"left\">Positive or negative strand where the gene comes from</td>\n</tr>\n<tr>\n<td align=\"left\">Gene location on scaffold</td>\n<td align=\"left\">Gene coordinates on the genome</td>\n</tr>\n<tr>\n<td align=\"left\">SVM</td>\n<td align=\"left\">Is the protein predicted by SVM</td>\n</tr>\n<tr>\n<td align=\"left\">BLAST</td>\n<td align=\"left\">Is the protein predicted by BLAST</td>\n</tr>\n<tr>\n<td align=\"left\">HMM</td>\n<td align=\"left\">Is the protein predicted by HMM</td>\n</tr>\n<tr>\n<td align=\"left\">Hit_id</td>\n<td align=\"left\">The subject sequence ID</td>\n</tr>\n<tr>\n<td align=\"left\">Hit_length</td>\n<td align=\"left\">The length of subject sequence</td>\n</tr>\n<tr>\n<td align=\"left\">Aln_length</td>\n<td align=\"left\">alignment length (sequence overlap)</td>\n</tr>\n<tr>\n<td align=\"left\">Query start-end</td>\n<td align=\"left\">Start and end of alignment in query</td>\n</tr>\n<tr>\n<td align=\"left\">Hit stard-end</td>\n<td align=\"left\">Start and end of alignment in subject</td>\n</tr>\n<tr>\n<td align=\"left\">Identity</td>\n<td align=\"left\">Percentage of identical matches</td>\n</tr>\n<tr>\n<td align=\"left\">Evalue of blast</td>\n<td align=\"left\">Expect value of BLAST</td>\n</tr>\n<tr>\n<td align=\"left\">Hmm hit</td>\n<td align=\"left\">The subject model ID</td>\n</tr>\n<tr>\n<td align=\"left\">Hmm hit length</td>\n<td align=\"left\">The length of subject model sequence</td>\n</tr>\n<tr>\n<td align=\"left\">Evalue of Hmm</td>\n<td align=\"left\">Expect value of HMM</td>\n</tr>\n<tr>\n<td align=\"left\">Nomenclature</td>\n<td align=\"left\"><a href=\"http://www.lifesci.sussex.ac.uk/home/Neil_Crickmore/Bt\">Bt nomenclature</a> containing 4 Ranks</td>\n</tr>\n<tr>\n<td align=\"left\">Endotoxin_N</td>\n<td align=\"left\">Whether the Cry protein contain Endotoxin_N domain</td>\n</tr>\n<tr>\n<td align=\"left\">Endotoxin_M</td>\n<td align=\"left\">Whether the Cry protein contain Endotoxin_M domain</td>\n</tr>\n<tr>\n<td align=\"left\">Endotoxin_C</td>\n<td align=\"left\">Whether the Cry protein contain Endotoxin_C domain</td>\n</tr>\n<tr>\n<td align=\"left\">Endotoxin_mid</td>\n<td align=\"left\">Whether the Cry protein contain Endotoxin_mid domain</td>\n</tr>\n<tr>\n<td align=\"left\">Toxin_10</td>\n<td align=\"left\">Whether the Cry protein contain Toxin_10 domain</td>\n</tr>\n<tr>\n<td align=\"left\">ETX_MTX2</td>\n<td align=\"left\">Whether the Cry protein contain ETX_MTX2 domain</td>\n</tr>\n<tr>\n<td align=\"left\">Gene sequence</td>\n<td align=\"left\">The nucleotide sequence of the toxin</td>\n</tr>\n<tr>\n<td align=\"left\">Protein sequence</td>\n<td align=\"left\">Amino acid sequence of the toxin</td>\n</tr>\n<tr>\n<td align=\"left\">Scaffold sequence</td>\n<td align=\"left\">The scaffold sequence where the toxin gene is located</td>\n</tr>\n</tbody></table>\n<h2 id=\"Table-2-The-contents-of-“All-Toxins-txt”-Partial\"><a href=\"#Table-2-The-contents-of-“All-Toxins-txt”-Partial\" class=\"headerlink\" title=\"Table 2. The contents of “All_Toxins.txt” (Partial)\"></a>Table 2. The contents of “All_Toxins.txt” (Partial)</h2><table>\n<thead>\n<tr>\n<th align=\"center\">Strain</th>\n<th align=\"center\">Protein_id</th>\n<th align=\"center\">Protein_len</th>\n<th align=\"center\">Strand</th>\n<th align=\"center\">Gene location on scaffold</th>\n<th align=\"center\">SVM</th>\n<th align=\"center\">BLAST</th>\n<th align=\"center\">HMM</th>\n<th align=\"center\">Hit_id</th>\n<th align=\"center\">Hit_length</th>\n<th align=\"center\">Aln_length</th>\n<th align=\"center\">Query start-end</th>\n<th align=\"center\">Hit stard-end</th>\n<th align=\"center\">Identity</th>\n<th align=\"center\">Evalue of blast</th>\n<th align=\"center\">Hmm hit</th>\n<th align=\"center\">Hmm hit length</th>\n<th align=\"center\">Evalue of Hmm</th>\n<th align=\"center\">Nomenclature</th>\n<th align=\"center\">Endotoxin_N</th>\n<th align=\"center\">Endotoxin_M</th>\n<th align=\"center\">Endotoxin_C</th>\n<th align=\"center\">Endotoxin_mid</th>\n<th align=\"center\">Toxin_10</th>\n<th align=\"center\">ETX_MTX2</th>\n<th align=\"center\">Gene sequence</th>\n<th align=\"center\">Protein sequence</th>\n<th align=\"center\">Scaffold sequence</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1126_1</td>\n<td align=\"center\">NHPK02000017.1_00027</td>\n<td align=\"center\">329</td>\n<td align=\"center\">-3</td>\n<td align=\"center\">10001-10987</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">YES</td>\n<td align=\"center\">NA</td>\n<td align=\"center\">Zwa5B-other</td>\n<td align=\"center\">322</td>\n<td align=\"center\">322</td>\n<td align=\"center\">8-329</td>\n<td align=\"center\">1-322</td>\n<td align=\"center\">99.0683229813665</td>\n<td align=\"center\">0.0</td>\n<td align=\"center\">NA</td>\n<td align=\"center\">NA</td>\n<td align=\"center\">NA</td>\n<td align=\"center\">Rank4</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">GTCTTCTAATAAAACACCTATTTCCTTTTCCCTAGCCCTTTGATAGTAATAAGCAGCAATGGCTACATCAAAAATGGCCATACCCATTGGATTAAATAATATTGCTTTGTCATAAGGGAAGTTTTGCAGTGCTCCTCGGATTACAACGTCAGCAATTGATACTGTATCTTCTTTTTGTAAACCTCTTTCAAGGTGCATCCTTTCAACATCAGTTTTTTCACGACAGACTTCTTCCCAATTATCAACAACTAGGGATTTTGTATATTCTAAGATATCAGGCTTAAAATCACGAAGAGAAACATTGAGTAGTAGCGCTCCATCTTTAGGTTTCTTATCAATATAACCTTCTGCAGAAACAGTACAAGTAATAAAAATATCAGCATCATTATAGGCTTCTTCATAAGCATTAACCTTTTGAGTTTTAGAATAAATATCCTCAGGAATTAATTCGTCTTTAATTCCATTGATATCATATAGGTAAACACTTTCGATTTTATCGCCTAATAGGGCAGTTACCATCTTTAAATGCATCTGACCAATAGGTCCAAATCCAATAATTCCAACTTTAACATTATTTAAATCTCTTAACTTGGCAAACTCTCGAATCATTAACCCTGTTACAGAAGCTGTTCGTATTACACTGACCATTGCTGTATTAAGCGTCGCAAATGGTTTTCCAGTCATAGCATCATTTAATATAGTAACTGAATGAGCACGTTGAATACCTTTCTCAATATTCTTCGGAAAACTAGCTATCCATTTGATTCCTGAAACCTTAAATTCTCCTCCAATATAAGCTGGCATAGCAATAATTCTATTAGCCGGATCATCAAAACGTAAGTATGGCTTAATTGGCTGAGAAAAATCTTCTGCATCAAGACTTTGTACTGCCTTTGAAATGACATTTATTGTTTCTTCCCAATTAACACCCATTTCATTGATATGTTTAGTATTTAAATACATCATAATTGCTTCCTCATTTCTATA</td>\n<td align=\"center\">YRNEEAIMMYLNTKHINEMGVNWEETINVISKAVQSLDAEDFSQPIKPYLRFDDPANRIIAMPAYIGGEFKVSGIKWIASFPKNIEKGIQRAHSVTILNDAMTGKPFATLNTAMVSVIRTASVTGLMIREFAKLRDLNNVKVGIIGFGPIGQMHLKMVTALLGDKIESVYLYDINGIKDELIPEDIYSKTQKVNAYEEAYNDADIFITCTVSAEGYIDKKPKDGALLLNVSLRDFKPDILEYTKSLVVDNWEEVCREKTDVERMHLERGLQKEDTVSIADVVIRGALQNFPYDKAILFNPMGMAIFDVAIAAYYYQRAREKEIGVLLED</td>\n<td align=\"center\">TCTCAATACGAACCAGTAAAAATGGTTCAGGGCGTTGAAGATACTGGACGTAATTCTTTTAGCCAAGCTAGTTTTTCAAACGTACTTCTAAGAACAGATACATCTGGAGCTACCTACAAAAGTTGGAACGGTTCAATTTCTTCCTCATTTTCTAAACACGGTACTTATGGTAACAGTTTCACAGTTTATTCTCAAGTGCCATTAAGCGCAAGTTTACGCTAAAATTGTTCTTGTATACGAATAATTTTGTGAAAAAGGTAGCTGTACTTTTGTACAGCTACCTTTTTCATATGGTGAATTTTTAATAGATATTGTATCAGACATAAGTTACATTCTTCATATTTTAACTTCTTTGAATTCAATAATACTTAATCAGCTTGTCTTATTACTTCACTTAACGTATCGAGATACAGCTTATAGCAACTACAACACGCTTTATTATTAATAATACCACTCTTCTTAATTTAACTTTAATTCCATTGCATTGATTTTTTAATAATAAATATACAACTTAGTAATGATAATAGATATACAATAAGAATAATATACAACTGTTTTGGTTCAATGCTATCGATATAAAGACTCATAATTGGATATGACCAAGGAAACAGTATCCAATAGTTTGTATGCGAGATAAAAAAGCTACCCAACCCGCCTATAACCCCTACTAATAATGAAAGTAACGGGATTTTATAAAATATTATATTTATTAAAAAATGTAAATTCACAATAGTTAAAGAGCTAATCACCATAAAAAGTATAGAAAAAATTAATCTTTGATAAACAGTCCCAAGATTATCAACCGTTAATACTATAGGTATACTAGTTATGACTAAAGCACATATTAAATAACCAAAAGTAATTATTAAGCAAAACAAAAACTTATTACTTAATATAGTTTTTAAAGTGATTCCGTGATAAATAGCAGACATATATCCTTTTCTTCTGAACTCGTTTACAAAAGAAAATGACACTAATAGACCTATTGCAATAGGTAAAAATAATCTACAAAAAAGACTTAGAATCGCTATATGCATGAAAACGCCATCTTTTGATTGAGATGATACAGTTAGAAAGATTTGAAAACTAATTGGTATCAACAGAAATACTAGTAACAGGATATACAATCCATTATGAAGACTTTTTTTATATTCACCTAATATACCCACTTATTTCACCCTTTATTATTCATATGTATAATATTTAAAACTCACAGCTAATAACATAATTCCTAAAATATAGATTGAAGAACTTGCAAGATATATTAAAATAGTTGTTTCTTTCATCATTACATCACTTACTATATTCAATGCATAAAATATTGGAAATGTCTTTGTGAATACTACAGGAAATAATCCATAAGTTACGCTAAAAAAAATCCAAATAACTGACAAGGACGCCGCAAGAATTCCCTTTTTTATAATCAAATGAAAAAGTAATTGAGAATATGGTATTGCTAAAGATAGAATTGTACAAAGCATCAACATTTTCAAAAAATAAAGTATAGATATTTCATATCCATTTATAAAAATATAGATACCCATAACTGAAAAATTTAAAATATTAAAGATTAAATAAAACAGTATAAACAATAAATTTTTAGCTACCAATAATTTAAATTTTGAAATTGGCTTTGTATAGATAATGGCCCAAGTACCATATTTATTTTCAGAAGAAATGATAAAATACCACATACAAGCAGAAAAAATGCTTAATGTTAGTGTATTAAAGTTTACTGTAATTGCTATAAGATTGGTAGATTGAAACATATCGGGATTATTCTTGTTAAAAATAAAATAACTTATACACAAAAAGCTTGATAATAATGAAAAAAACAAAGAAAATAACAATAATTTTCTCCCACCAATTTTCCTCATCTCACTATTCACACTTTTAAAGATAAATTGCATTATGATAGTAACTCCTTTTGTTTAGTTAAAGATAAAAATACTTCCTCTAATGTTAGCTTTTTAGGGCTAACTTCAAAAATATCTATATCATTTTCAATTAATATTCTGGTTAAATTAGGAACACTATTTTGATCTATCATTAGTTTGAATACCCCTTCTTTTTCTATGCTATAAGGTATATCCTTTGTATTTAAAATCCTTTCTGTGGCAGTAGTGTCATTAACATGAACAATATATTCTCTAGAAGTAATAATACTGTTTAAATTCCCTTCATAGAGTAAGTTACCCTTATGCAGTAATGCTATGTAATCTGCTATCATTTCGATTTCAGCTAAATTATGACTAGAAATAAATATTGTCTTCCCCTCATTTTTTACTAAATGAAGTAATAAGCGCCTTATCTCGTGTACTCCCTCTGGGTCTAATCCATTTGTCGGCTCATCAAGAATTAGTATTTTAGGATCATTAAGAATAGCAAAGGAAATACCTAGCCTTTGTTTCATTCCTAAAGAAAAATCTTTCACTTTTTTATCTTTTGCTTTATATATTCCTGTAATTTTTAATACTCTGTCTATTTCATCTAAAGGCTTATTAATCATTTTTTGTACATAGGCTAAATTTTCATATGCTGTCAAATTAGGATAGTAGGTAGGTGAATCAATAAAACAACCCACATTTTCAAATAATTCTTCTTTCCAATCTTTGATATCTTTATTATTAAATAATATCGTTCCTTTATCTAATGGAATTAATCCTAATAGCATTCGCATTGTTGTTGTTTTTCCTGCACCATTTGGTCCAATAAAAGCATATAAACTTCCTTCAGGAACAGATAAGTTTAAATCCCTTACAATGGATTGATTGTCAAAAGACTTTGTTAAATTTTTAGTTTGGATTGCTAATTTCATTTTGTTCCTCACTTTCTTATTCTCAAATAAAAGTAAGTATCTATTAAATTCTTGATCTATTAGATATTCTATTTACCCTTTACCTAATGTTTGCAATTTGGATTTAGAAAATATTTCTCGTTGTTTTAATTTTTTATCAGTAAGTTCATAAACTCTATCTACACGCTCTAAAATATTTTCATCATGAGTGATAATAATCTTAGTGGATGGTATGGCAAATATATTTTCAATAACAGCATTTGCCGTTTCCCTATCTAAATGGTTAGTTGGTTCATCCAAAATAAGAATCGGATATTCTTTCATGAACAATCGTAACATAGCCAACCTTTGTCTTTGGCCACCGGAGAAATTTGTTCCTCCCTCTGAGATTAAAATATCATTTATACTTTGAAATTGAATATAATTACTCAGATTCAATTTATCAATAGACTCCTGGATTTTTGAAGGATCATAATTTATATCAAAGTAAGATAAATTCTCAGATAAACTTCCTCTAAATAAAACTCCATCCTGAGTCATTAGTCCTACATTTTTTCTTAGTTCCTCACTGTTCCAATCTTTAATATCTCTATCGTCTATTAATATATTACCCTTATCGGGAGTATGCAATTTTAATAATAAGTTAGCTAAAGTGGACTTACCACTGCCACTTTCTCCAACAATAGCAATACTTTCGTTATTTTTAATGTTCAAACTTAAGTTTTCTATTATTTTTTTGTCATCAAAACTAAACGAAATATTATTAAATTGAATCGATCCTCTAAGAATGTTTACTTTAGTATCCGATCCATCTTTTTCTAGTTCCTCTTCCAAGATATCTAAAGTTCTTAATAAAAGTGGTTTAACTGAATTCCAATTTAAAATTGATCCTATAATTGTTGAAACCGGAGAAAATATAATACTAGATATAGCAATAAAGAAGAAAATATTACTTAAATCCCCTTCTCCTTTACTAAAATTATAAAATCCTACAGCAAGCATTATGATAATAAATATTGTTGATAGGGAACTATTAAATGATTCTAAAGCATTTTGTTTTAGCGCTCGTTTATGTACTGTATCTAAGTATTTATTATAATCTTTTTGCCATACAGATTTAATTCTAGAAAAAATCCCTGTAGCCTTTACATAATACATCGCTTTTAATGATTCATTAATTTTCCCTCTATGTTCTCCTAGGTAATACGTTTCGACTAAATTAGCATTATATATGAATTTCCCTAAGGAAATATTGATAAATAGGGAACTAGCAATAAAAAACATCAATATTAAAGTATAAAAAGTCTCAGTATATAATAGATACATCAATAATGGAATGATAACTACTATTGATATAATCATTTCAATTAGATCCTCTAAAATATATCCTCGTATTGATTCTAGGCTCATGATTCTTACATTTAAATCCCCTGCATGACGTGTAGTAATTTTTTCTATGGGGGTATTAAACATATGCTCAAAAACTTTTGTTGTACTTTTTCTATCAATTTCTTTCTGAAAGTTTACTTTTATAATAGAAGTTATAGATTTTATCCCTATAACAACGATTAAACTTCCCAAAATAATTAAAAGGTATCTTACATCCACTTCCTTTGAAGCATTCAAAATATCCATAAACTTTTTCAAAATAAAGGGGAAAGCAAGAATTGAGATTTGTGCTAACAATGCTAATAGTGCTAATAAAACAATCTGGCTAGGAGATACAAAATGATCAATATATCTAAGTAATATATGTTTTTCACGCCTTTTAGTATTTGGCTGTATATCTTTTTTGTTTTCTATTACTAGGATATAGTCACAGAACATTTCCTCAAAACTTCTTATATCAATTATCATCGGCCCTGCCTTAGGATCTACAATATAAAATTTATTTGCTTTAACCCTTTCAATAATTACAAAGTGATTAAAGCCCCAAAATGCTATCATCGGCTTTTGTATCCTTTGTAAATCAGTTATATTTTCTATCCTATATGCAGTTGCAGAAAGTCCATACGATTTACTAACTTTTTTAATATCCAACAAACTCCATGCCGATTTTTTATTGATAATTTTACTATTTCTAATTTCCGAAGCTTGTACTGCTGAACCATAATAATGCATAATCATTGCTAGACAACTAGGCCCACAATCAAAAGATGTCATTTGCGGTATAAATTTAATTTTCTTCCTTAACATATTTATCACCTATTCTAGGCATTAAAGTATAAAATGCTATTTAGTTTATTATCCTCTAACCTTTGTAAAAAATACAAAATACTTCCTAGCCCTGTAAATAATGCGATTTTATGAGGATTAAAATCTTCTATATCAAAATTATTCAAAAAGTTATTTGTTACTTTCATAACAATTTGTTTTTCATTGCGCTCGAGCATACCTCTATTTTCTAGCTCCAATAAAAAGTCTAGTTTCCCCATTAAACCATGACATAAACAATAATCACTATTTTCATGTAATGTACTTAAGATTTGTTTTTTAAAAAAAATTAAATCTGATTGTATATCCTCATTTTGATACGATTCTAAAATTTTAATTCTCGAGATTCCCATTCCACTAAATCCTTTACACCAGCTATCTGTATACTCATATTCACTCATACTCATTTTCTCACTTTTATGTATACCATGTATTACTCTATCGTACTTATTTGTTTTTAATATGCCTTTTAACTTATAAAATGCGAGAAGTTGTCCTGATAATCCATGAACAAACCCCTTTAATGAATCCTCTAAATTTAGAGTATCGTGAGCTTTCCAATATACAAATTCATTATGTGTTTGCATATTATTGACAATGTAGTCACCGAGATTTTCAGCCACTTTAAGCAATATTTTATAATTAGGATTAATTTGATAGAACTTAACTGCCGTTAAAATTAGACCAGCTGAACCCCCTAATATATCAAAATGCTTATCGCTATATTTACCTTTTTCAATATCAGAGTTGACATCCATAAATATTTGCAATATCAATCTTTCATCGATAGATGTTATATGTGGTAAATTTGTTAAATAGTAAGAAATAATTGCATTAACACCATTTACAAAACCATAATTATTTTTATTTTTGTTTAATATTTCTTGCAGGGCTTTTTGTTCAAGTTTATTTATAATTTCAATCTGATTAGGATCAGCATTATTTCTCAATAATGAACTTATTCCCAATAATCCATCATATATTCCACTATTCAAATGGTTTATCTCAAGCTCCCCTTGCCAATTTGTTTTTAATCCAATAAAATCTACAGCACCGTCTTTTGATATATAACTGCCATCAAGAATTTTCCCTGTAATTGCTTCCTTTATTTTATTTGTAGGTAAATTAGTTCGAAAATTAATTGTTTCCTTTACTGTATTCAGCTTATATAGATTGTCATTTTGATTAGAAAGGGATATTTCTATAATTTTTCTTTGTAATAAAAAGTCAGCATATGAAATTTTTTTAAATTTTGTTTCTAGATCTATTTCATTATTTGATAAACTTTCGCAAGACTCCCATTCATACTTATTAAAGAAATATGGAACATCATAGGATAATAGTGCCTCTATCTCTTTTTGAATAATATCTTTCCTAGTAGCCAAGTATATGTTTTTTTCAAGAATATTCCGCAAATATTTTATAGTCTTTAATTTATTCTCTAATAAATCCGGAACATTTAGTCTATCTAATAAAAGGGTATAGACTTTTGTATTTCGATATACTTTTCGATAATTCCATTTAGAAACACTATTTTTTAATATACACATATACTCCTCTTTGTTTTTTAAAACTGAGTTATATGCATTCTCAAAACCTTTAATAATATCATCTATATAATTATCATACTCGTATATATCATCGTTAAGAAACGGTAAATTCTGAACCGTATCTTCTACTATTGTCTCTTCTCTTATTTCAATTGGATTCGATGTAAATTCATTTTTTATTTTAATTGTTTTTACCAAAGACTTCATTACTCTCCCAATTGCACTGTAATCTCTTATTACCTCCCTACCTCCACTAAACCTTATAGGTAGCATTCTAGAATTTAATACTGAATTAGATAATATAAAACTACTGGTTTCTTCAGTAACACTTGGATTTAATGTACTTCCTAATGTCTCAAAATCAATTATGACTGGTGAGGATTGTTTAGCTATGATATTTTCATTATGTATGTCACTTCCATTAATCAAATACATTACCGAAAGCACTACACCTAAATTATAATAATAATCTTTAATTTGCTCATTAGATTCACATGATTCATGATTAATGTATTCCATATATCCATAATTTCTTTTATTAACTACTTGCGGAATAAAGATATCCGTATTTAAATCTTTATTCAGTTGATTAATTAAACTATGATATAGTATAGAATTTTTCAAATCGACTGGTTTTAAAATTACCTTATTATTAAATTTATCTTCTAAAAGAATTGTTCTCTTTCCATTATTATGGTAGTCACCTAGGTTAATAACTTTTTCTACATGCATAATATTAAAACCCGACATTTTATGAATTTCTTTTTGATCTTTTTCAAGAGCACCTTGCAACCAAATCATATAATTTATTTCATTTTCAATGATTGTAAAAATTTTTTCGTTTAATACGGGTAATATTTTAAAAAAATTCATATAAAATTTTTTAAAATGAAAGAAGTTCTTTGTAAAATACTTATATTCTTCATTGGTATCCATTCCTCTTAAAGCATTTTCTACCCTAAGTTTATTTATGTATACAATTAAGGATGGCCTTAATACTTGGTATAGTCTTTTTTCTAAATCAAACATTATCGATTCAGAAACCTTCTCAAAATTACCAAAAAAATCAATTTTATTTATTATCATATTTTTAAAGAATACTACATATGTTTGTATTATTTTTTGAAAGTTATAGTTTTCGTCATCCTTAATGACATCATTACATGAAAAACCCTCTAAAAAGATAACAAAATTTTTTTCTAGATATTCTTTTGTTACTAAAGAATGTGATCCATTATCTATTGTATTCAAAATTCCATGTGAATTATTTTTCATAATAACCTCTTCTTTTTATAGGTAGGAGAAACAGTTAGAAATTCATTCTCATTAAAGAGAGTAAGGCCTTTCGCCTTACTCTCTTTAACTATTAGTAGCATTTTTTACAAATTCTTTGTCCCATAATCGTGACACATGCTACAGGCACATTCCAAGGACAATCTTTAGTTAAAGTTTCAACCCAACCAGGTCCTGCTCCACCAACTAATTGTTCAATCTCTTCATCTTCTACGACTTGTAAATATTTTTCAGTTTCCATTTCAATACCTACCTTTTATTTTTTTGAAAATGATGTTATAAATTCAATAATTTACCACAACATTATCTAAAAACAATATACCATTAAATGTTAATAAAAAAAAGATATATTTATAGAAAAATAAAATAATAGGATATTTAACTATATTAATATAATTAAAGGAGACTCACTTACTATATCATTAAAATTTAAAGGCTATTTTCCAAGTTAATATTTTTAAAATTTTATAAATTTATTAATAATCAATGCTGTTTAATAATTTAAATAATTCTTCTAATACCTGAATAACGATTAAGAATATTAATTAAACTTGTAAAAAATAGATTTTCAGAAGATATAGCTCAAGAATATTTTACCATAAAATAGGATAATCAATTCTTTTTTTAATAGTATAATGCTTCGTCAGAAAATTTTAATCATGAATTGCAAAAAGCATGTTAAAAATAAAAAGATGAAATTGCAAGTATATTCACTTCACAATCCCATCTCTTCTAAAAATTGTATATCATCAACTCTCTTGATCCTCGCAATTCTACCAAATTAATAGCAACACATTATGTAGATATAGGTTTATACTATTCTACATTTAAATACATGTAATATTGCCTATACTTTGTTATTTTCATGTGAAACTAATTCACTATATATCTCTTTCTCTATATTTTTCAAGAGAATTTCCAACCTATTTTTTGTAGCTAGATTAAAATGTGGATTTAATTCTTTTATTATAAATTCAAGTATCTCAAAGCTTATGTAATCTCCTAATTCAAGTGAATATTGATCACCCAAGAAAGTTTTTAATTTTTTAGAGATCTCCACTTTATCTTTTTTGGTAATATTTACCCCATCCGATAACAAACCTCTCTTAGATTAGTCTTAAATACTAATTCAAAAAGTTTTTATAACATAATAAAAATATTTTGGAATTAATATAAATCATATAATGAAATTTTTACAAATAAATAAAAAATATACATCATAATCATTAAACAATATATTAAGCATCGTAAACATATATTGGCTCGTCATAAAGGCGTAAACATTTTGACCAATTTCCACATAACGTTTCCCATTCACCAGCAGGATATACTTCCGTACGCAATATATGAAGTGGTATACGTAAATTCAATAACCGACCACTAAGCGTCGTACGAGTAACTCCCGCTGGCATTAAAAACTTTGCTTCAATTACCTTTTTCAGTTCCATCAACGAGTATTCTGGATAACTCATCAATATTTCATTTGAATGAGGCCAGACCTCAGTATCATTTGAATGACGGCGTACCGTATACTCATGTTGATATAAGCTGACAATACGATGCCATATCTCTAAATGATTAAATAAATCGCTATTTAAATCCCTTGCATATAAAAAATGTACTTGTTTATTTGCTTCTGTAATTTTTGCAAGCAAACGTTTATTAGCAATAATCTTACCTGACCAAATTATTGTAGGTTCTTTCTTTAAATTATTTACCCATTCCCCCATTGGTAATAAATGATTCCAAGCACGAATTTTTATTTTTTCATCAGGTACTACCTGTACAGCAACGCGTTTACAACCTAATGCCATCATAGCCTTCATACGATGGGCACCATCAAGTAACAGATAATTACCATCACTAAGCTCAGATACTAAGGGAGGATTCCGTAAAACACCTTCGCTTTCCATTACACGACAAATTTGTTCCAATCTTTTGTGTTCATATGATTCATGAAAGCGAATTTGCTTGGGATGTAAGAGATCTAAGGCCGAAATAATTTCACTCATAAAAACAGCTCCTCAAATAATTACATAAATTCTAAGCTTATCAAATAACTAATTTTCTATAATGATTAGTCGTGTTTACCGATATTTAGCAGCTATTAGACAATTATTTCAAACTACGTTTAATAATTTTACTAGTCTTCTAATAAAACACCTATTTCCTTTTCCCTAGCCCTTTGATAGTAATAAGCAGCAATGGCTACATCAAAAATGGCCATACCCATTGGATTAAATAATATTGCTTTGTCATAAGGGAAGTTTTGCAGTGCTCCTCGGATTACAACGTCAGCAATTGATACTGTATCTTCTTTTTGTAAACCTCTTTCAAGGTGCATCCTTTCAACATCAGTTTTTTCACGACAGACTTCTTCCCAATTATCAACAACTAGGGATTTTGTATATTCTAAGATATCAGGCTTAAAATCACGAAGAGAAACATTGAGTAGTAGCGCTCCATCTTTAGGTTTCTTATCAATATAACCTTCTGCAGAAACAGTACAAGTAATAAAAATATCAGCATCATTATAGGCTTCTTCATAAGCATTAACCTTTTGAGTTTTAGAATAAATATCCTCAGGAATTAATTCGTCTTTAATTCCATTGATATCATATAGGTAAACACTTTCGATTTTATCGCCTAATAGGGCAGTTACCATCTTTAAATGCATCTGACCAATAGGTCCAAATCCAATAATTCCAACTTTAACATTATTTAAATCTCTTAACTTGGCAAACTCTCGAATCATTAACCCTGTTACAGAAGCTGTTCGTATTACACTGACCATTGCTGTATTAAGCGTCGCAAATGGTTTTCCAGTCATAGCATCATTTAATATAGTAACTGAATGAGCACGTTGAATACCTTTCTCAATATTCTTCGGAAAACTAGCTATCCATTTGATTCCTGAAACCTTAAATTCTCCTCCAATATAAGCTGGCATAGCAATAATTCTATTAGCCGGATCATCAAAACGTAAGTATGGCTTAATTGGCTGAGAAAAATCTTCTGCATCAAGACTTTGTACTGCCTTTGAAATGACATTTATTGTTTCTTCCCAATTAACACCCATTTCATTGATATGTTTAGTATTTAAATACATCATAATTGCTTCCTCATTTCTATATCATTTTTATAAAGAAACTAATTGGTCTTCTACTGATTTTTTTGTATTAAGCCATTCTACCCATTCTACGTTGTAAATAGTTGATGTGTAAGCTTGTCCATTATCAGGACACAAGAAAACAACATTAGGTGTATTTTGAACATCCCTATTTTCAAAATACTTTTGGATTGCATAATATGAAGTCCCTGATGATCCACCAGCAAATATTGCATGTTTATTAAATAGCTCATAACAACCTGCAACAGTATGGACCTCCGGTACAATCATTACATCATCAATCAATGCTTTTTTAACCATACCAGGTATCATACTGGCACCAATTCCTGGTATGTACCGTTTACGAGGCTTATCACCAAAAATAATGGACCCTTGACTATCTACCGCAATAATTTTAATATTAGGGAATTTTTCTTTTAATCGTGTAGATACCCCAGCGATAGTTCCTCCAGTACTCACTCCAATGAAGGCATAATCTAACTGTTTAAAATCATTAGATATTTCTTCACCAATTCCTTGATAATGGGCTTCAAAGTTATCAGCATTATTATATTGATTTGTCCAGTATGCATTAGGAATAGTATTTAAAAGTTCTTCCACCTTATTTAAACGCGTTAATAAATAGCCACCTGTTTCATCTCGTTCATCCACTTTAGCTACTTGATAGGAAGTTGCTCTCAAAAAATTCTCATAACTATCATTAATATTTGGATCAATAACTGGTATGAATTTCAGGCCGATATACCTACAAAGAGTAGCAAGAGCAACCGCAAAGTTACCAGATGAAGATTCGATAATTGTAGAATTTTCAGTCACTTCACCGCGACTTATTGCTGATTTTAAAATATGGTGAGCAGCACGCACTTTAACACTATTCATTAAATTGTGATATTCTAGTTTTGCATACAGATTAATCTTTTCATGCTCTAATTTAATCATAGGTGTGTTGCCGATTACCCTTTCTAAACTCTCTAATTTCTTGAGCATAATTTGCTTCCTTTCTTGGTTAAAATCTAAAAAAATAATTAAAGATAAATAGTTGTAAATGTTCTTTCGAATGTATTTCAAATAGAACTTATACCTGAAAGACAATAAATGCTAGATTCTTTAGTATCGATAAGCTAAGCACCATTCAAGTACTGCCATAGCACTATTTAGCTTGTTTTCGGCCTGGGTAAATACAATACTTTTCGGTCCATCAATAACTGTTGCTGCTACTTCTTCCCCCCGGTGTGCTGGGAGGTCATGCATGAAAGTAGCTTCCGGATATAAAGTCAAAATTCTCTCTGTCACTGCAAATGGATTAAAGGCATCTTTCCATAAAGGATCTATTTTGCTTGTCCCTGTTGTTTGCCACCTTGTTGTATATACAACATCCACTTCACTAGGTAACATTTTTATATCATGACATTCAATAACTTTAGCACCAGATAATCGTGCATATTCTTTTGATTTTTCAAGCACACTTGGAGACACTCCATAACCAGCAGGTGTAAAAAGATATAACTCCGTACCTGGAAAACGAGATAAAGAAAGAGCTAGAGCTGCAGCACTGTTATTACCTTCTCCCATATATAAAACCCGTAATCCAGCTATTTCACCAAATTTTTGTTTCATTGTTGTTAAGTCTGTTAGCGCTTGTGTTGGATGTTCTTCCGTACTCATTGCATTAATGACTGCCATACGACTTTGAGATGCCAGCTTTTCCATTTCCTTTTGACTATCTGCAGTTCTTGCTACTAGTGCATCCAGCATTCGCGAAAGTACTTGAGTAGTGTCTTCTATAGACTCCCCTGTATTTTCTTGCAAATCATTTGGACCATACGTTACAATTTGTGCACCCATCTTTAATGCTGCAACAGAAAATGCCGATCGAGTTCTAGTCGATGTTTTACGGAAGTAAATCCCAATTATATTTCCCGCTAATATTTGATTAGGTTGTGATTTACCTGTGGCAAACTCTACCCCACGAGTTACAATTTGGTTAATATCACTATCAGTAAGATCCTCAAGAGTAATTAAATGTTTTCGAATAGCCATTATTATATTACCTCCCTTTTGAATAATTGCATGTAACAAAAATGTATTTACATATGTATGTAAATAAAAACTACTAAACAGCTAAAGTAAAAATAATAGATTGGAAATATAATTCATGTGGATCCATTACCACACTTTTCTATAATTTTTTTTAAACTAATGTATAGCAGTTGATATATAGCCTATATGAACTCGAATACTATTTTTACTCAGAAATACTTACATATAATTCTATTGTTAGTCTATATTCCTATTTTTTATGATATAGCTCTGCTGAATATATTACACACTACAACACTAAAAATATACTCAAAATACAGAATTTTCAGCTTTCTCAATTCTTTCATCAATTTTCTGTCAATTCATACTCAAATTATCTTTTTTACTAATAATATACATACAATGTTGGCTGTTTCTTTTATAGCCCACTTCTAAAAAATCCACCCATTCAAAAATAACGTTTTCCGGATTGTCAGTTAAGATACAAATTACTGCTGCAGTCATTAAAGAGTCCTCTTTAAAAGAGATATACTCCTTCTACTGGCTCGCTATTTTTAGTTATGATAACCTCTTAATTGTTACAGCTATAACGCTAACAATTGTTATTGCAACCATTGATCTAAGTAAACAAACAATGAATGACATACTAATATATACACAAAGTAATCTATTAAGCGTAAAATGATTGCATCTCCAGCAAGTTTAATTACTTATTCAGATCTTTGCTTTTATAATTTTCAAAATTAAATTTCCGAAAATTTTCTTTCCTTAAGGAAATATCGATCATTTTAAACTATGTAAGAATGCTTATCTTCTATAAAGTAATTACACAAATCAACAAAGTCAATTTCAATTATTGATTCTGGAAAACTATCTAAAGAAGCACAACAAGAAAGCTTATAATCTTTACCAATAGTAAACTTTTTATAATAAACCTCATTAGATAGCATGTCACCATAAAATATTATATTTTTTTTAATAACAAAAGAGTTTAAAGGTATAGTTAGTCCTTTCCCTATCCATTTAACAAAGCTTTCTTTTATAGTCCATAATTCATAAAACACATCTAATTGTTGTTCTACATTTAATGAATTTAAATAATTAAATTCTTCCTCAGTAAATATATTTTTAATCATTGTAGTATCCATGGGCCGGACTTTTTCTACATCTATTCCTACTTCTTCCTCATGAATAGCTCCAACAACCCAACTTTCGGAATGCGATATATTAAAATGAAAATTATTTAACTCATCCACATAAGGCTTTCCGTATTCATTGTATTTATATTTAATATCTTTATTTTCTTTTGAGAAATTTGTAATAATTAAATATCTTATTATAATGTCTCCAATTAAGGCGCTATATTGGTCGGGCTTTCTTTTATATTTCTGTATTTTCATCTGCTTTTCTTTTGAGACCAAACTCATAAGTTTCTGCATAATGTTATGTTCTATATTTCCTGGCACACGTACCTTATATATATTCATTATTTCCTTCCCACCTAACTTCTTATATAAATATAAAAAACTCTCAATGAATAATTCCTATTTATTTTTGATTAGTAAAAAACATTTTCAGAGGATAATATTCTATTTTACATTCATATTTTCGACTTATTTTCTAACCTCTTTATGTCTATTATTGAATGGGCTCAAAGAAAAAAGTCTCATAATATGTTATACACGAATTTATGAGACTTTTAGAAAACTAATAGTGTACAATTTCAAATAATATTTCACCTATTTACATGTGCTAATAAGAGCATTTGTTTAAAACTCATTTTTATACTCTTTACCAACTCATGAATATGCGGTTTCTCTAACATACTCAGATGGGAACCTGGCACTTGCAAAGCGTATACTTCCCCTGATGTATATTCATTCCATCTGTTATAATCTACTAGTGGGTGAATGTCATTAATAGATGCATTAAATAGAAAGATATCTGCTTTTATTTTTTGTTTACAATTATATTTTAGGTATGCATATCTATTAGCTATCATTACTTTTAACTTATTCATCATTGGATCTTCAAAATTTTGCTGACAACTATTTTTATTCAATGTAAATTTTTTCAGTAAAGATTCTATTAATTGTTCTTCACTCATTTGCTCAAAACTAATTTTCTCAATCCCTAACTGATCATTGAATTTTTCCAATTCTTCAAAGGCATTCTTAATATTTAAACTAAGAATCTCCTTACCTTGTTCAATAGGATGAACATCAAGTAAACCTAGAAAACTAACTTTATCACCTAGTTCTTCTAATTTTCTAGCCATTTCAAATGCAACTATTCCTCCAAAAGACCATCCTAATAAGGCATATGGCCCTTCTTTTTTTACTTGTTTAATCTCTTCTATATATCTTACCGCCATTTCCTCTACAGATAAGTTTGAAAATCTATTATCATCATATCCTATAGATTGTAACCCATATACAGTCTTATCCTCTCCTAATTCTCTAGCCAAATCATAATAGTTTAATATGCCCCCTCCTTGTCCATGAACAATGAACCATTGACTATCCTTGTTTGTCCCATTTTGAATTGGAATTAAACACTCACTGTCTATTCCTTTATTCCTACTTATTACATCACTTAATTGTTCAATAGTAGCATTTTGAAATAATAAACTTAATGGCAGTTGCACATTAAACATTCTCTTGATATTTTCGAATAACTTTAATCCCTTAAGAGAATGACCACCTAATTCAAAGAAATTATCATTTATACCAATATTATTTACGCCTAATATACTACTCCAAATATCAATTAAACTACTATCTATGTCATTTCTTGGTGGTACATAATTACTATTGTCCAGTGTATTTAGCTTCGGTAACTTACTTCTATCTATTTTCCCATTTTGTGTTAATGGTATATTGTGAATTGGTATGAGTTGTTGAGGTATCATATAATGTGGTAACTTTGTTGCCAAATATGCTCTTACCTCTGGAATAGGAATATCTTTTTCTGTAACTACGTATGCACATAAATACTTTTCCCCAGCTTCATCTTCTTGATCTATTACTACGGCCGTTTTGATTGTCTCATATTTTAACAAACTCGCTTCTATCTCACCTAGTTCTATTCGATATCCCCTTATTTTTACTTGATGATCGACTCGGCCCAAGTATTCAATGTTACCATCAGGTAGCCACCTTGCTATATCCCCTGTTTTATATAGTTTCTCACCTCGTTCAAATGGATGATCAATAAATTTATCTGCTGTTAATTCTGTTCGATTGATGTATCCTCTAGCTAACCCTATGCCAGAGATACATATTTCACCTGGAACACCTATAGGTTGTATCCTATAAAATGAATCCAATATATAAATTTTAGTATTTAACAATGGTGAACCTATCGGTACGTTTTGTGTTGTAATTTCTTTATTACTCTCATATCGATAAGATGTACAACAAACTGTAGCCTCTGTAGGTCCGTATCCATTTAATATTTGGAGGTTCCCCCTAAATAGATGATCGTATTTTGCGAGTAATTCTGTTTTAATGGGTTCTACTCCCACAAGTAGCTTATTTAACACTATCTTCTGGTTATCTCTAACAAAATAATCATATATTTCATTTAATAAAGTAGGTGGAATATATGATAATGTAACCTGTTCTTCAAGAATAACTTGTACAAGTTTTGATACATCAAACTTCTCACCTTGATAAATAGTCATTCTTGCGCCATATATCAATGGGACAAATATCTCAAAAATAGTAACATCAAAAGAAATACTACTTGAGAATAGAACGTTATCAGTTATCCCTATATCTTGAGAGAAATCTTCATACATTGCACACAAAAAATTAGTCAAGGATCGATGTTCAATCATTACTCCTTTAGGTTGTCCTGTAGAACCTGATGTATAAATAACATACGCTAAGTTGTGAGGTTCTATCATCATTTGCATGTCTTCTCCTGGTTCTTCTTCAAAAGACATATCCATTAGATCTATTACATTACCTTGGAATTCTATCCCCTTTATAATAGAGTTTTGATGTACTAATACATGTGAACACCCACTGTCTGTCAGCATATATTCCACTCTTTGTTTTGGTAAGGCGGTATCAATTGGTAAATACGCCCCACCTGCTTTTAAAACACCTAATATACCTATAACCATCTCGATGGATCGTTCCATCATCACACCAACAATGGATTCTCTTTTAACTCCTTGGTCTAATAACCTTCTCGCCAACTGATTAGCTTTTATATTTAATTCATTATATGTAATTCCTTTTTCATTACATACAACGGCTATTTGATTAGGGTTCCGTTTTACTTGTTCTTCAAACATTTTATGCACTAATAAATGATTAGAATTTGAATTCTCTTTTTTGTTAAATTCATTCATAATACAATGTTCTTCTTCTATAGATAACATATTAATATTACGCAATCGTACTCTAGGGTTATTAGTTACTTCCTCAACTATATTTGTAAAATGTACCATTAACCTTTCTATTGTCTCCGCTTTAAATAACTTAGTACTATATTCTACTTTTAAATGAATGTTATTATCTATTTCCGTTGCTACTAATGACAAATCAAATTTTGAAACTGACTGCTTAAACGGATACGGTGTAAATTCTAATTCACCAATAGATATTGGATTCATATCCATGTTTTGAAAAACAAACATGGTATCAAATAATGGATTTCTACTTGTATCCCTATGCAAGTCTAAACCTTCTAATAGTTCTTCAAAAGGATAGTCTTGATTTTCATAAGCTTCTAATGTATTGAGTTTTAATCTACTCAAAAACTCAATAAACTCATCGTCATTTTCTAGATAATTTCTCATTACCAAAGTATTAATAAACATACCAATCATATGATTAGTATCAGAATGAGACCTTCCAGCAATAGGCGAACCTACAATAATGTCTTCTTGACCTGTGTATCTAGATAAAAGTATGTTATAAATGGCCAATAAAATCATATATGGCGTAGTACCAGTTTCAGTTGCTAGCTTATTTACTTTAAAAGTTAAATCTCTTCCCAAATTAAAAGAACAAACATTACCTTTAAAGCTTTGTATAGTCGGTCTTTGAAAATCGGTTGGAAAATTTAAAACCGGGAGTTCTCCTTTTAAAGTTGTTAACCAATAATTCTTTTGTTCACTAATTAGATTCTTATAGTAAGGTCCATTTTGCCACATCACATAGTCTTTGTACTGCACTCTCAATTTTGGAAGCTCATTTCCTTTATACAATTCTACAAACTCTTTTATTAATATCCCCATTGATAAACCATCAGATATTATATGATGCATATCTACTACAAGGATATGTCTTTCTTCTGCTATCCTTAAAAGCAACACCCTTAATAATGGAGGTTTTGATAAATCAAATGGACTTATAAACTCATGTATTAAATAATCCGCATCTTTTTCATTTACATGAACGTATTCAATATTGAAATCTACATTAGGCTCAATTTTCTGCACTAATTCCCCATCTAAAATTTGAAAAGAAGTTCTTAATATTTCATGTCTCTCAATTAAAGATTGAAATATATTTTCAAACTTATCTTTACAAATATCCCCTTCTACTTTAAGTATTGTGGGCATATTATAAGTTGTATTTGTACCATCTTCGAATTGATCTACTATAAACATTCTCTTTTGTGACGTAGAAGCTAAATAATACTCTTGTTGTTTTACAGGTTCTATGGAAATATAATTACTTTTTTCCATTTCTAATATACATTTTGAAAAATCAACCAAAATAGGAAACTTAAATAGGGATTTAATAGATAATTGCACATTAAATTCTTTATTAACGATAGAAATTAGCCTAGCAGCCTTTAATGAATGACCACCTATCTCAAAAAAATTATCCCGTATTCCTACCCTTTGTATTCCTAATACATCTTTCCAAATCTCAACTAATTTTCTTTCTGTAGAATTTGTCGGCTCTAGATGACTAGATTTCAAATTATTTATAGGTTGAGGTAATTTTTTTCTATCTATTTTTCCGTTTTGTGTTAACGGTATGTTTTGAATGGATATGATTTGTTGAGGTATCATATAATATGGTAACTTGGTTGCTAAATATGCTCTTACCTCTGGAATAGGAATATCTTTTTCGGTAACTACATACGCACATAAATACTTTTCTCCACTTTCATCTTCTCGCTGTATTACTACGGCGGTTTTGATTGTCTCATATTTTAACAAACTTGCTTCTATCTCACCTAGTTCTATTCGATATCCCCTTATTTTCACTTGATGATCAACTCGTCCCAAGTATTCTATGTTACCATCAGGTAGCCATCTCGCTATATCTCCTGTTTTATATAATTTCTCACCATGTTCAAATGGATGATCAATAAATTTATCTGCTGTTAATTCTTTTCGATTGATGTATCCCCTAGCTAACCCTATGCCAGAAATACATATTTCTCCTGGAACACCTATAGGTTGTAGCCTGTGAAATGAATCCAATATATAAATTTTAGTATTTAACAATGGCGAACCTATTGGTACGTTTTGTATTGTAATTTCTTTATCCCTCTCATATTGATAAGATGTACAACAGACTGTAGCCTCTGTAGGTCCGTATAAATTTAATATTTGGAGGTTCCCCCTAAATAGATGATCGTATTTTGCAAGTAATTCTGTTTTAATTGGTTCTACTCCCACGAAAAGTTTATTTAACGATATCTTCTGATTCGCCCTTACAAAATAATCATATATTTCATTTAATAAGGTAGGTGGAATATATGCTAACGTGACCTGTTCCTCAAGAATGACTTGTACAAGTTTTGGTACATCAAACTTCTCACCTTGATAAATAGTCATTCTTGCTCCATATACCAATGGGACAAATATTTCAAATATAGTAACATCAAAAGAAATACTACTTGAGAATAGTACATTATCACTTATCCCTATATCTTGAGAGAAGTCCTCATACATTGCACACAAAAAATTAGTTAAGGAACGATGTTCAATCATTACCCCTTTGGGCTGGCCTGTAGAACCTGATGTATAAATAACATATGCCAAATTTTGAGGTTCCATCGTTATCTGCAAATCTTCTACTTGTTCTTCTTCAAAAGGAATATCCATTAGATTTATTACACTACCTTGAAATGCTACTCCCTTTATAATAGAGTTTTGATATGTTAGTACATGTGAACACCCGCTGTCTGTCAGCATATATTCCACTCTTTGTTTTGGTAACTCGGTATCAATCGGTAAATACGCCCCACCCGCTTTTAAGATACCTAATATGCCTACAATCATCTCAATAGAGCGTTCCATCATCACACCAACAATGGATTCTCTTTTAACTCCCTGGTCTAATAACCTTCTCGCCAACTGATTAGCTTTTATATTTAATTGTTTATATGTAATTTCTTTTCCATTACATACAATCGCTATTTGATTAGGATTCTGTTTTACCTGCTCTTCAAATAATTGAGGAGCTGTTACAGTCTCACAAAGTAATGTTTTATGAACTCTAGTCGTATGATTGAAATCAAATAATATTTGATTCTTTTCTGTTTTAGGCATTACATCTAGATCCATTGCAGATTTATTTGGATCTTTCATTAATATATCTAAAATATTATATAAATGATTAACTATTCTACTAACTAATCCTTCACTATATAAAATAGAATTGTAATCCACTTGAACCTTTAACTGTTCTTCATTTTTCATAAACCTAATAACCATATCAGAGTTTATTTTATCTGTACTCTCATAACAATGAATATCATCTAACATTACTATTGTATTTAATAAGGGAAGATTATTACTCTCTCCATCTAGACTTAATAATTGAGTAAGTTTATTAAAAGGAAAATGACAATGTTCATTTGACTCTAAAATTGTTTCTTTAATTTTATATATTATTTCTTTAAAATTATCTTCTTGATTTATTTGAGTACGTAATAATAAAAAGTTGTTTTGAAAAACCGTCTCTTCTTGACCTTGTTTAAA</td>\n</tr>\n</tbody></table>\n<h2 id=\"Table-3-The-contents-of-“Bt-all-genes-table”\"><a href=\"#Table-3-The-contents-of-“Bt-all-genes-table”\" class=\"headerlink\" title=\"Table 3. The contents of “Bt_all_genes.table”\"></a>Table 3. The contents of “Bt_all_genes.table”</h2><table>\n<thead>\n<tr>\n<th align=\"center\">-</th>\n<th align=\"center\">Cry1Ac16</th>\n<th align=\"center\">Cry1Ca15</th>\n<th align=\"center\">Cry1Da2</th>\n<th align=\"center\">Cry1Ia40</th>\n<th align=\"center\">Cry2Aa10</th>\n<th align=\"center\">Cry2Ab35</th>\n<th align=\"center\">Cry78Aa1</th>\n<th align=\"center\">Cry9Ea9</th>\n<th align=\"center\">HMM_Cry_len_492</th>\n<th align=\"center\">HMM_Cyt_len_531</th>\n<th align=\"center\">HMM_Cyt_len_533</th>\n<th align=\"center\">HMM_Cyt_len_615</th>\n<th align=\"center\">Sip1A2-other</th>\n<th align=\"center\">Vip1Aa2</th>\n<th align=\"center\">Vip3Aa12</th>\n<th align=\"center\">Zwa5B-other</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1126_1</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\"></td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">32.66</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">99.07</td>\n</tr>\n<tr>\n<td align=\"center\">AFS094730</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">36.14</td>\n<td align=\"center\"></td>\n<td align=\"center\">1</td>\n<td align=\"center\">1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">92.41</td>\n<td align=\"center\">29.46</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">AFS095482</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">1</td>\n<td align=\"center\"></td>\n<td align=\"center\">1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">AK47</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n</tr>\n</tbody></table>\n<p><strong>Footnote:</strong> The float number represent the identity of blast search, and the integer number represent the number of toxins predicted by HMM and SVM.</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>BtToxin_Digger is free software, licensed under <a href=\"https://github.com/liaochenlanruo/BtToxin_Digger/blob/master/LICENSE\">GPLv3</a>.</p>\n<h2 id=\"Feedback-Issues\"><a href=\"#Feedback-Issues\" class=\"headerlink\" title=\"Feedback&#x2F;Issues\"></a>Feedback&#x2F;Issues</h2><p>Please report any issues about usage of the software to the <a href=\"https://github.com/liaochenlanruo/BtToxin_Digger/issues\">issues page</a>.</p>\n<h2 id=\"Citation\"><a href=\"#Citation\" class=\"headerlink\" title=\"Citation\"></a>Citation</h2><ul>\n<li><p>If you use this software please cite: <strong>Hualin Liu</strong>, Jinshui Zheng, Dexin Bo, Yun Yu, Weixing Ye, Donghai Peng, Ming Sun. (2021) BtToxin_Digger: a comprehensive and high-throughput pipeline for mining toxin protein genes from <em>Bacillus thuringiensis</em>. <em><strong>Bioinformatics</strong></em>, 2021;, btab506, <a href=\"https://doi.org/10.1093/bioinformatics/btab506\">https://doi.org/10.1093/bioinformatics/btab506</a>.</p>\n</li>\n<li><p>If you used the genome assembly function, please also cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. Protocol exchange, 2021. DOI: <a href=\"https://dx.doi.org/10.21203/rs.2.21224/v5\">10.21203&#x2F;rs.2.21224&#x2F;v5+</a>.</p>\n</li>\n</ul>\n<h2 id=\"FAQs\"><a href=\"#FAQs\" class=\"headerlink\" title=\"FAQs\"></a>FAQs</h2><h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><ul>\n<li><p>v1.0.2</p>\n<ul>\n<li>Fixed a “Can not find path” error.</li>\n</ul>\n</li>\n<li><p>v1.0.3</p>\n<ul>\n<li>Fixed a bug of “get_all_info_nucl.pl”, which can not get the gene location and strand information of some toxins.</li>\n</ul>\n</li>\n<li><p>v1.0.4</p>\n<ul>\n<li>Updated the database and models to support <a href=\"https://www.bpprc.org/\">the latest clasiffication of Bt toxins</a>.</li>\n</ul>\n</li>\n<li><p>v1.0.5</p>\n<ul>\n<li>The name of strains with no toxin found will be outputed into the file “Strains_without_toxins_found.txt”.</li>\n</ul>\n</li>\n<li><p>v1.0.6</p>\n<ul>\n<li>Update to adapt to PGCGAP v1.0.23, and to delete the intermediate files.</li>\n</ul>\n</li>\n<li><p>v1.0.7</p>\n<ul>\n<li>To delete the intermediate files.</li>\n</ul>\n</li>\n<li><p>v1.0.8</p>\n<ul>\n<li>To delete the intermediate files.</li>\n</ul>\n</li>\n<li><p>v1.0.9</p>\n<ul>\n<li>Update the database to keep it consistent with the BPPRC (to 2021-06-07).<br>More HMM models are added.<br>The filter length of amino acid sequence was reduced from 115 to 75.<br>Solved a problem: BioPerl reported an error when the length of the sequence in the input file was inconsistent.</li>\n</ul>\n</li>\n<li><p>v1.0.10</p>\n<ul>\n<li>Users can use the command “BtToxin_Digger –update-db” to update their local database.<br>The toxin database was updated to 2021.08.02.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"}]},{"title":"Bioconda贡献指南","slug":"Bioconda贡献指南","date":"2019-05-19T09:39:00.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Bioconda贡献指南.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg","content":"<p>本文介绍了如何为软件添加Bioconda recipe，以便可以通过conda安装自己的软件。</p>\n<span id=\"more\"></span>\n\n<p><strong>注：本文适用于非 Bioconda 成员</strong></p>\n<p><B>Step0：软件开发与GitHub操作</B></p>\n<br/>\n(1) 将开发完成的软件上传到GitHub\n\n<br/>\n(2) 在本地软件目录下创建tag\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> tag v1.0.0 -m <span class=\"string\">&#x27;first version&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<br/>\n(3) 上传到GitHub\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> push origin v1.0.0</span><br></pre></td></tr></table></figure>\n\n<p><strong>注</strong>：如果需要删除有bug的tag：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> tag -d tagname</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$git</span> push origin :refs/tags/tagname</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<br/>\n(4) 存档tag(非必需)\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> archive -v --format=tar v1.0.0 &gt; v1.0.0.tar.gz</span><br></pre></td></tr></table></figure>\n\n<br/>\n(5) 计算压缩包的\"sha256\"以供bioconda校验\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sha256sum</span> v1.0.0.tar.gz</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step1：fork bioconda-recipes</B>\n\n<br/>\n\n\n<p>(1)进入 bio-conda <a href=\"https://github.com/bioconda/bioconda-recipes\">GitHub页</a>；</p>\n<br/>\n(2)点击右上角的 “Fork”；\n\n<br/>\n(3)操作完成后在用户自己的 GitHub 内得到了一份 “<USERNAME>/bioconda-recipes”，我的用户名为 “liaochenlanruo”，因此我得到的是 “liaochenlanruo/bioconda-recipes”。\n\n<br/>\n<B>Step2：将项目克隆到本地</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> <span class=\"built_in\">clone</span> https://github.com/liaochenlanruo/bioconda-recipes.git</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step3: Then add the main bioconda-recipes repo as an upstream remote to more easily update your branch with the upstream master branch:</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cd</span> bioconda-recipes</span><br><span class=\"line\"><span class=\"variable\">$git</span> remote add upstream https://github.com/bioconda/bioconda-recipes.git</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step4：更新 repo</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> checkout master</span><br><span class=\"line\"><span class=\"variable\">$git</span> pull upstream master</span><br><span class=\"line\"><span class=\"variable\">$git</span> push origin master</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step5：写自己的 recipe</B>\n\n<br/>\n例如，创建并切换到一个名字为 “pgcgap” 的 新分支\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> checkout -b pgcgap</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<p>在”bioconda-recipes&#x2F;recipes&#x2F;“目录下新建”pgcgap”目录，并将撰写好的<a href=\"https://docs.conda.io/projects/conda-build/en/latest/resources/build-scripts.html\">build.sh</a>和<a href=\"https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#architecture-independent-packages\">meta.yaml</a>存入其中。</p>\n<br/>\n注：Step6和Step7可以跳过\n\n<br/>\n<B>Step6：本地测试 recipe</B> （可选，即可以直接在线测试）\n\n<br/>\n在\"bioconda-recipes/\"目录下依次运行如下命令：\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$./bootstrap.py /tmp/miniconda</span><br><span class=\"line\"><span class=\"variable\">$source</span> ~/.config/bioconda/activate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># optional linting</span></span><br><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils lint recipes config.yml --git-range master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># build and test</span></span><br><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils build recipes config.yml --docker --mulled-test --git-range master</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step7：更新 recipes</B> (可选）\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils update-pinning recipes/ config.yml --packages pgcgap --create-pr</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step8：推送修改，等待测试通过，提交 pull 请求</B>\n\n<br/>\n(1) 将本地更改同步到自己的pgcgap分枝\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> push -u origin pgcgap</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<p>(2) 在“liaochenlanruo&#x2F;bioconda-recipes”的“pgcgap”分支下点击“New pull request”。base repository选择“liaochenlanruo&#x2F;bioconda-recipes”，base选择“pgcgap”；head repository选择“bioconda&#x2F;bioconda-recipes”，compare 选择”master”。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"new_pull_request\"></p>\n<center>Create a new pull request</center>\n\n<br/>\n\n<p>比较完成后提交，标题自定义，内容根据提示酌情填写。若存在问题可以 @其<a href=\"https://bioconda.github.io/#core\">核心团队成员</a>中的任何一位，如输入“@epruesse”，将会 @ Elmar Pruesse。若想成为bioconda成员，以及要merge自己的分支，同样需要@核心成员中的任何一位。</p>\n<p>实例：</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"create_pull_request_info\"></p>\n<center>Request 信息填写</center>\n\n<br/>\n上述步骤完成后，可以在GitHub项目下的“Pull requests”选项卡下查看处理状态。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"view_pull_request\"></p>\n<center>查看pull request</center>\n\n<br/>\n根据提示修改自己的recipe，再次pull，循环往复，直至修复所有错误（下图表示需要修改）。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"pull_error\"></p>\n<center>pull出错了</center>\n\n<br/>\n点击“details”可以查看进程和详细信息。下图所示，正在测试recipe。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"bioconder_checking2\"></p>\n<center>正在测试recipe</center>\n\n<br/>\n如下图所示，表明测试成功，等待管理员合并自己的分支。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"test_success\"></p>\n<center>所有测试均成功</center>\n\n<br/>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"bioconda_check\"></p>\n<center>非Bioconda成员测试成功后的“Pull requests”界面</center>\n\n<br/>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"squash_and_merge\"></p>\n<center>Bioconda成员测试成功后的“Pull requests”界面</center>\n\n<br/>\n如上两图分别为非bioconda成员以及bioconda成员测试通过的界面，非成员需要新建一条评论并 @一位核心成员，请求其merge自己的pull requests，bioconda成员则可以点击“Squash and merge”来合并自己的pull requests。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"merge_successfully\"></p>\n<center>Bioconda成员“Pull requests”合并成功</center>\n\n<br/>\n## 附：\n1. 加入bioconda\n\n<p>1）在第一个recipe推送成功后可以在评论中 @ 一位核心成员，要求加入组织<br>2）收到邀请链接，点击加入</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"invited2bioconda\"></p>\n<center>被邀请加入Bioconda</center>\n\n<br/>\n## 常见错误\n1. If linting fails：\n\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git pull upstream master</span><br><span class=\"line\">git checkout pgcgap</span><br><span class=\"line\">git merge master</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"},{"name":"Bioconda","path":"api/tags/Bioconda.json"}]},{"title":"Linux和基因组测序技术初识","slug":"Linux和基因组测序技术初识","date":"2019-10-31T14:05:49.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Linux和基因组测序技术初识.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png","content":"<p>该文档可以帮助读者入门Linux系统，掌握常用命令和多种软件安装方式。此外还简述了全基因组测序技术，希望读者可以通过此文档初步了解生物信息学。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Linux初识\"><a href=\"#Linux初识\" class=\"headerlink\" title=\"Linux初识\"></a>Linux初识</h1><h2 id=\"目录结构与路径\"><a href=\"#目录结构与路径\" class=\"headerlink\" title=\"目录结构与路径\"></a>目录结构与路径</h2><h3 id=\"根目录\"><a href=\"#根目录\" class=\"headerlink\" title=\"根目录\"></a>根目录</h3><p>根目录（root）是系统最顶级目录，以“&#x2F;”表示，其他目录均为根目录的下级目录。</p>\n<h3 id=\"家目录\"><a href=\"#家目录\" class=\"headerlink\" title=\"家目录\"></a>家目录</h3><p>家目录（home）是用户的最顶级目录，以“~&#x2F;”表示，用户所有的目录均为家目录的下级目录。</p>\n<h3 id=\"绝对路径\"><a href=\"#绝对路径\" class=\"headerlink\" title=\"绝对路径\"></a>绝对路径</h3><p>绝对路径指的是目录或文件的绝对位置，是从根目录开始的完整路径，如“&#x2F;home&#x2F;bio&#x2F;”。可通过“pwd”命令获取当前目录的绝对路径。</p>\n<h3 id=\"相对路径\"><a href=\"#相对路径\" class=\"headerlink\" title=\"相对路径\"></a>相对路径</h3><p>相对路径不需要从根目录开始，只要指定与当前目录的相对位置即可。</p>\n<h3 id=\"当前目录\"><a href=\"#当前目录\" class=\"headerlink\" title=\"当前目录\"></a>当前目录</h3><p>当前所在的路径，以“.&#x2F;“表示。</p>\n<h3 id=\"上级目录\"><a href=\"#上级目录\" class=\"headerlink\" title=\"上级目录\"></a>上级目录</h3><p>也称为父目录，以“..&#x2F;“表示向上一级的目录，以“..&#x2F;..&#x2F;”表示向上两级的目录，以此类推。</p>\n<h2 id=\"命名法则\"><a href=\"#命名法则\" class=\"headerlink\" title=\"命名法则\"></a>命名法则</h2><ul>\n<li>文档与目录均以英文命名，可使用字母、数字和下划线；</li>\n<li>文档与目录的名称不允许存在空格；</li>\n<li>名称区分大小写。</li>\n</ul>\n<h2 id=\"终端工具\"><a href=\"#终端工具\" class=\"headerlink\" title=\"终端工具\"></a>终端工具</h2><p>终端（terminal）是运行Linux命令的工具，类似于Windows的命令行工具。Linux各发行版均自带终端。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Linux自带终端\"></p>\n<p>远程操控Linux服务器时，可以使用第三方的终端工具，如PuTTy软件。输入IP地址即可远程登录服务器运行命令。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Putty\"></p>\n<p>本地计算机与服务器之间的文件传输可以通过FTP软件实现,如FileZilla。输入服务器的IP地址、用户名、密码以及端口即可链接服务器。如果服务器采用的时FTP协议，则端口填写21，若采用的是SFTP协议，则端口设置为22。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"FileZilla\"></p>\n<h2 id=\"常用的命令\"><a href=\"#常用的命令\" class=\"headerlink\" title=\"常用的命令\"></a>常用的命令</h2><p><strong>pwd：</strong> 获取当前位置的绝对路径</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">pwd</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"获取当前位置的绝对路径\"></p>\n<p><strong>mkdir：</strong> 创建目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mkdir</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"创建tools目录\"></p>\n<p><strong>ls：</strong> 查看当前目录包含的内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录包含的内容\"></p>\n<p>查看所有的目录和文件（包含隐藏的内容）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> -a</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录包含的所有内容\"></p>\n<p>查看根目录所含内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> /</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看根目录所含内容\"></p>\n<p>查看家目录所含内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ~/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看家目录所含内容\"></p>\n<p><strong>cd：</strong> 切换路径</p>\n<p>进入“tools”目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> tools</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入“tools”目录\"></p>\n<p><strong>vim：</strong> 创建&#x2F;编辑文档</p>\n<p>以下所有操作均需在英文输入法状态下进行。首先创建一个新文档“example.txt”，并输入内容。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim example.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"创建“example.txt”文档\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"此时无法输入内容\"></p>\n<p>此时无法输入内容，需要按一下字母“i”键切换到输入模式。当左下角出现“–NSERT –” 字样时，可以输入文字。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"vim插入模式\"></p>\n<p>输入相关的内容。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"vim输入内容\"></p>\n<p>输入完毕时需要先按一下“ESC”键退出编辑模式，此时“–NSERT –” 字样消失。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"退出vim编辑模式\"></p>\n<p>按住组合键“shift + :”切换到vim操作模式，此时左下角出现一个“:”。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"shift + :\"></p>\n<p>输入“wq!”保存修改并退出。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"保存并退出vim\"></p>\n<p>查看创建的文件是否在于目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录下的文件及目录\"></p>\n<p><strong>cp：</strong> 复制目录或文件</p>\n<p>将创建的“example.txt”文档复制到上一级目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cp</span> example.txt ../</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"向上级目录复制文件\"></p>\n<p>查看上一级目录下是否存在刚刚复制的文档。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ../</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看父目录下的文件及目录\"></p>\n<p><strong>rm：</strong> 删除目录或文件</p>\n<p>删除tools目录下的“example.txt”文档。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">rm</span> example.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"删除tools目录下的“example.txt”文档\"></p>\n<p>查看文档是否被删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看是否成功删除文件\"></p>\n<p><strong>mv：</strong> 移动&#x2F;重命名</p>\n<p>将上一级目录下的“example.txt”文档移动到当前目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mv</span> ../example.txt ./</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"移动文件\"></p>\n<p>查看文档是否移动成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ../</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看是否成功移动文件\"></p>\n<p>将“example.txt”文档重命名为“examp2.txt”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mv</span> example.txt examp2.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"文档重命名\"></p>\n<p>查看重命名结果。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看重命名结果\"></p>\n<p><strong>wget：</strong> 下载</p>\n<p>使用wget工具下载基因组拼接软件“AbySS”到tools目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://www.bcgsc.ca/platform/bioinfo/software/abyss/releases/2.1.5/abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载AbySS软件\"></p>\n<p><strong>tar：</strong> 压缩&#x2F;解压缩</p>\n<p>tar.gz格式的文件可用“tar zxvf”进行解压，将刚才下载的“abyss-2.1.5.tar.gz”解压缩。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar zxvf abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"解压缩AbySS软件\"></p>\n<p><strong>top：</strong> 查看系统进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ top</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过top查看系统进程\"></p>\n<p>按字母键“q”退出。Ubuntu还带有另一个更加直观的查看系统进程的工具“htop”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ htop</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过htop查看系统进程\"></p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>在软件安装的时候经常需要设置环境变量，所谓的环境变量就是告诉计算机软件的安装位置。存放环境变量的文件在用户的家目录下，为隐藏文件，可通过“ls -a”命令查看。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> -a ~/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看家目录中的所有文档和目录\"></p>\n<p>“.bashrc”和“.profile”均为环境变量配置文件，通常我们只需要编辑“.bashrc”。</p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><h3 id=\"源码编译安装\"><a href=\"#源码编译安装\" class=\"headerlink\" title=\"源码编译安装\"></a>源码编译安装</h3><p>源码安装适合于所有的Linux发行版以及macOS。以刚下载的“AbySS”基因组拼接软件为例演示源码编译安装，一共分三步：配置（.&#x2F;configure）、编译（make）和安装（sudo make install）。首先进入“AbySS”软件目录下，并查看目录中的文件，找到配置文件“configure”，根据“README.md”中的指示对软件进行配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> abyss-2.1.5/</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入AbySS目录并查看其所含内容\"></p>\n<p>“.&#x2F;configure”表示运行configure进行安装前配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./configure</span><br></pre></td></tr></table></figure>\n\n<p>进行编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br></pre></td></tr></table></figure>\n\n<p>进行安装，需要“sudo”命令提供对系统目录的写入权限。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo make install</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong> 以上只演示了一般的安装方法，但是“AbySS”软件依赖其他的一些软件，需要先安装依赖包，最后安装“AbySS”，否则会安装失败。</p>\n<h2 id=\"通过包管理工具安装\"><a href=\"#通过包管理工具安装\" class=\"headerlink\" title=\"通过包管理工具安装\"></a>通过包管理工具安装</h2><p>不同的Linux发行版具有各自的软件包管理器。目前常用的Linux发行版主要是基于“RedHat”和“Debian”而制作的。<br>RedHat 系列的包管理器为“yum”，使用方法为在终端输入“sudo yum install -y 软件名称”。</p>\n<p>Debian 系列的包管理器为“apt-get”，使用方法为在终端输入“sudo apt-get install 软件名称”。</p>\n<p>示例：通过apt-get在Ubuntu中安装AbySS软件，输入命令和密码后，根据提示输入“Y”并按回车键进行自动安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install abyss</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过apt-get安装AbySS\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过apt-get安装AbySS\"></p>\n<h2 id=\"添加环境变量\"><a href=\"#添加环境变量\" class=\"headerlink\" title=\"添加环境变量\"></a>添加环境变量</h2><p>以原核生物基因预测软件“Prodigal”为例演示。首先在Github上找到prodigal的源码，点击“Clone or download”，并按照图示点击链接右侧的图标以复制git地址。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"复制prodigal链接\"></p>\n<p>在终端中进入tools目录，并输入克隆命令将项目克隆到本地计算机。命令公式为“git clone link”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/hyattpd/Prodigal.git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"克隆prodigal\"></p>\n<p>克隆完成后进入“Prodigal”目录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> Prodigal</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入Prodigal目录\"></p>\n<p>编译软件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"编译prodigal\"></p>\n<p>报错信息提示找不到gcc命令，因此需要首先安装gcc，输入命令后根据提示输入密码，直至安装完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install gcc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"安装gcc\"></p>\n<p>重新编译prodigal</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal编译结果\"></p>\n<p>编译完成后得到了可执行程序，但是系统无法找到prodigal的路径，因此需要我们将其所在的路径加入到环境变量中。通过vim打开环境变量配置文件“.bashrc”，进入编辑模式。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"打开环境变量文件\"></p>\n<p>在文档末尾添加配置语句 <strong>“export PATH&#x3D;$PATH:$HOME&#x2F;tools&#x2F;Prodigal”</strong> 。$HOME代表家目录，“$HOME&#x2F;tools&#x2F;Prodigal”代表prodigal可执行程序所在的目录。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在环境变量中添加prodigal路径\"></p>\n<p>编辑完成后保存并退出。然后执行“source ~&#x2F;.bashrc”命令刷新，通知系统“.bashrc”文档已经更改。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"刷新环境变量\"></p>\n<p>测试配置是否成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prodigal -h</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal帮助信息\"></p>\n<p>若要将其他软件加入到环境变量，只需在后面加入其他软件所在路径即可，各软件的路径间以英文“:“分割，不得有空格。下图为将多个软件加入到环境变量的示例。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"添加多个软件路径\"></p>\n<h2 id=\"创建软链接\"><a href=\"#创建软链接\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h2><p>软链接（Soft Link）相当于Windows系统中的快捷方式，可以将可执行程序的软链接存放至系统默认的环境变量之中，如“&#x2F;usr&#x2F;bin&#x2F;”或“&#x2F;usr&#x2F;local&#x2F;bin”之中。仍旧以刚编译好的prodigal软件为例，创建软链接的公式为 <strong>“sudo ln -s &#x2F;home&#x2F;bio&#x2F;tools&#x2F;Prodigal&#x2F;prodigal &#x2F;usr&#x2F;local&#x2F;bin&#x2F;prodigal”</strong> ，根据提示输入密码完成创建。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo <span class=\"built_in\">ln</span> -s /home/bio/tools/Prodigal/prodigal /usr/local/bin/prodigal</span><br></pre></td></tr></table></figure>\n\n<p>通过“whereis”命令查看软链接是否创建成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ whereis prodigal</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal安装路径\"></p>\n<p><strong>注意：</strong> 创建软链接时要输入绝对路径，否则会报错“Too many levels of symbolic links”。</p>\n<h2 id=\"通过Anaconda包管理器进行安装\"><a href=\"#通过Anaconda包管理器进行安装\" class=\"headerlink\" title=\"通过Anaconda包管理器进行安装\"></a>通过Anaconda包管理器进行安装</h2><p><a href=\"https://www.anaconda.com/\">Anaconda</a>是一款比较易用的跨平台软件包管理器，<a href=\"http://bioconda.github.io/\">Bioconda</a>是conda的一个通道，专门管理生物信息学软件。通过conda安装软件时可以一键安装所有的依赖包，大大节约了时间并降低了安装难度。Bioconda目前有超过600个贡献者和500个成员，大部分生物信息学软件都被包含其中。用户可以到其官网搜索需要的软件是否被囊括其中。</p>\n<p><strong>（1）安装conda</strong></p>\n<p>此处，我们安装Miniconda，进入<a href=\"https://docs.conda.io/en/latest/miniconda.html\">官网</a>，选择适应自身系统及python版本的安装文件。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看Miniconda安装包\"></p>\n<p>查看系统python版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -v</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看python版本\"></p>\n<p>可以看出该系统已经安装了python3，因此下载Linux Python 3.7 64-bit (bash installer)。右键单击相应安装包获取链接，使用wget下载至tools目录下。建议用户安装Python 3，因为Python 软件基金会将于2020年元旦停止对Python 2的维护（<a href=\"https://pythonclock.org/%EF%BC%89%E3%80%82\">https://pythonclock.org/）。</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载Miniconda\"></p>\n<p>开始安装Miniconda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bash Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>根据提示按“Enter”键查看license，并输入“yes” 按“Enter”继续，按“Enter”确认安装位置，miniconda被安装到家目录下的miniconda3目录中。最后输入“yes”，按“Enter”进行初始化。最后，通过“source ~&#x2F;.bashrc”命令刷新。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"初始化Miniconda\"></p>\n<p><strong>（2）设置bioconda channel</strong></p>\n<p>在终端中输入以下三条命令添加channels：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda config --add channels defaults</span><br><span class=\"line\">$ conda config --add channels bioconda</span><br><span class=\"line\">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure>\n\n<p>至此，bioconda配置完毕，可以通过conda安装生物信息学软件。下面通过conda安装mapping软件“bwa”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install bwa</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"安装bwa\"></p>\n<p>根据提示输入“y”完成安装。</p>\n<h2 id=\"MacOS相关操作\"><a href=\"#MacOS相关操作\" class=\"headerlink\" title=\"MacOS相关操作\"></a>MacOS相关操作</h2><p>MacOS与Linux系统相似，基本命令相同，但是软件安装存在一些差异。</p>\n<h3 id=\"MacOS安装生物信息学软件\"><a href=\"#MacOS安装生物信息学软件\" class=\"headerlink\" title=\"MacOS安装生物信息学软件\"></a>MacOS安装生物信息学软件</h3><h3 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h3><p>源码安装方式与Linux安装方式一致。</p>\n<h3 id=\"创建软链接-1\"><a href=\"#创建软链接-1\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h3><p>配置方法与Linux一致。</p>\n<h3 id=\"环境变量-1\"><a href=\"#环境变量-1\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>MacOS环境变量配置方法与Linux配置方法一致，但配置文件为家目录下的“.bash_profile”，即运行如下命令进行编辑。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<p>编辑完成并保存后需要运行source命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"包管理器\"><a href=\"#包管理器\" class=\"headerlink\" title=\"包管理器\"></a>包管理器</h3><p>MacOS的软件包管理器为Homebrew，可以在终端中通过以下命令安装Homebrew。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ruby -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过Homebrew安装mapping软件“bwa”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install bwa</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MacOS配置Anaconda\"><a href=\"#MacOS配置Anaconda\" class=\"headerlink\" title=\"MacOS配置Anaconda\"></a>MacOS配置Anaconda</h3><p>安装Miniconda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh</span><br><span class=\"line\">$ sh Miniconda3-latest-MacOSX-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>添加Bioconda通道</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda config --add channels defaults</span><br><span class=\"line\">$ conda config --add channels bioconda</span><br><span class=\"line\">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure>\n\n<p>安装软件bwa</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install bwa</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"现代测序技术\"><a href=\"#现代测序技术\" class=\"headerlink\" title=\"现代测序技术\"></a>现代测序技术</h1><h2 id=\"二代测序-“Next-generation”-sequencing-technology\"><a href=\"#二代测序-“Next-generation”-sequencing-technology\" class=\"headerlink\" title=\"二代测序(“Next-generation” sequencing technology)\"></a>二代测序(“Next-generation” sequencing technology)</h2><p>第二代测序技术的核心思想是边合成边测序（Sequencing by Synthesis），即通过捕捉新合成的末端的标记来确定DNA的序列。应用最广的技术平台主要为Illumina公司的产品。其优点为高通量、错误率低、成本低等。</p>\n<ul>\n<li>Illumina测序中的几个名词</li>\n<li>   <strong>Read length：</strong> 测序的DNA片段的碱基长度。</li>\n<li>   <strong>Insert size：</strong> 双端测序时接头（adapter）中间序列的长度。</li>\n<li>   <strong>Junction：</strong> insert序列中间未被测序的部分。</li>\n<li>   <strong>Flowcell：</strong> 是指Illumina测序时，测序反应发生的位置，1个flowcell含有8条lane。</li>\n<li>   <strong>Lane：</strong> 每一个flowcell上都有8条泳道，用于测序反应，可以添加试剂，洗脱等等。</li>\n<li>   <strong>Raw data：</strong> 测序完成后未去接头、引物以及去除低质量序列的数据。</li>\n<li>   <strong>Clean data：</strong> 去除Raw data中的接头序列、linker、低质量reads、长度较短的reads及核糖体RNA和ncRNA产生的reads。</li>\n<li>   <strong>数据量：</strong> read长度乘以reads数目。</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"二代测序名词示意图\"></p>\n<h2 id=\"三代测序\"><a href=\"#三代测序\" class=\"headerlink\" title=\"三代测序\"></a>三代测序</h2><p>三代测序又称为单分子测序，测序过程无需进行PCR扩增，可以产生超长的reads，因此能够跨越高GC含量区域和高度重复区域。目前常用的测序平台包括Pacific Biosciences（PacBio）和Oxford Nanopore。</p>\n<p>PacBio以SMRT Cell为载体进行测序反应，SMRT Cell是一张带有纳米孔的超薄金属片。PacBio采用边合成便测序的方式，测序反应在纳米孔中进行，一个纳米孔中固定一个DNA聚合酶和一条DNA模板。延伸反应的过程中检测dNTP荧光信号以确定碱基顺序。</p>\n<p>Oxford开发的纳米单分子测序技术属于真正的实时测序，它基于电信号来判读碱基。</p>\n<caption>Table 1. Characteristics, strengths and weaknesses of commonly used sequencing platforms (Besser et al. 2018)</caption>\n<table border=\"1\">\n<tr>\n<th>Platform\\Instrument</th>\n<th>Throughput (Gb)</th>\n<th>Read length (bp)</th>\n<th>Strength</th>\n<th>Weakness</th>\n</tr>\n<tr>\n<td><B>Sanger sequencing</B></td>\n</tr>\n<tr>\n<td>ABI 3500/3730</td>\n<td>0.0003</td>\n<td>Up to 1 kb</td>\n<td>Read accuracy and length</td>\n<td>Cost and throughput</td>\n</tr>\n<tr>\n<td><B>Illumina</B></td>\n</tr>\n<tr>\n<td>MiniSeq</td>\n<td>1.7–7.5</td>\n<td>1×75 to ×150</td>\n<td>Low initial investment</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>MiSeq</td>\n<td>0.3–15</td>\n<td>1×36 to 2×300</td>\n<td>Read length, scalability</td>\n<td>Run length</td>\n</tr>\n<tr>\n<td>NextSeq</td>\n<td>10–120</td>\n<td>1×75 to 2×150</td>\n<td>Throughput</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>HiSeq (2500)</td>\n<td>10–1000</td>\n<td>×50 to ×250</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td>NovaSeq 5000/6000</td>\n<td>2000–6000</td>\n<td>2×50 to ×150</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td><B>IonTorrent</B></td>\n</tr>\n<tr>\n<td>PGM</td>\n<td>0.08–2</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Throughput, homopolymers</td>\n</tr>\n<tr>\n<td>S5</td>\n<td>0.6–15</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td>Proton</td>\n<td>10–15</td>\n<td>Up to 200</td>\n<td>Speed, throughput</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td><B>Pacific BioSciences</B></td>\n</tr>\n<tr>\n<td>PacBio RSII</td>\n<td>0.5–1</td>\n<td>Up to 60 kb</td>\n<td>ead length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate and initial</td>\n</tr>\n<tr>\n<td>Sequel</td>\n<td>5–10</td>\n<td>Up to 60 kb</td>\n<td>Read length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate</td>\n</tr>\n<tr>\n<td><B>Oxford Nanopore</B></td>\n</tr>\n<tr>\n<td>MInION</td>\n<td>0.1–1</td>\n<td>Up to 100 kb</td>\n<td>Read length, portability</td>\n<td>High error rate, run length</td>\n</tr>\n</table>\n\n<h2 id=\"常见序列格式\"><a href=\"#常见序列格式\" class=\"headerlink\" title=\"常见序列格式\"></a>常见序列格式</h2><h3 id=\"Fastq\"><a href=\"#Fastq\" class=\"headerlink\" title=\"Fastq\"></a>Fastq</h3><p>我们得到的下机序列一般为fastq格式，每一条read包含4行，第一行为测序仪器信息以及测序信息，第二行为碱基序列，第三行一般无信息，第四行为对应第二行中每个碱基的测序质量信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"fastq文件内容\"></p>\n<caption>Table 2. Descriptions of the first line of the fastq file</caption>\n<table border=\"1\">\n<tr>\n<th>Strings</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>@ST-E00310</td>\n<td>The unique instrument name</td>\n</tr>\n<tr>\n<td>147</td>\n<td>The run id</td>\n</tr>\n<tr>\n<td>HVT25CCXX</td>\n<td>The flowcell id</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Flowcell lane</td>\n</tr>\n<tr>\n<td>1011</td>\n<td>The number within the flowcell lane</td>\n</tr>\n<tr>\n<td>13382</td>\n<td>‘x’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1819</td>\n<td>‘y’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1</td>\n<td>The number of a pair, 1 or 2 (paired-end or mate-pair reads only)</td>\n</tr>\n<tr>\n<td>N</td>\n<td>Y if the read fails filter (read is bad), N otherwise</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0 when none of the control bits are on, otherwise it is an even number</td>\n</tr>\n<tr>\n<td>TGAAGACA</td>\n<td>Index sequence</td>\n</tr>\n</table>\n\n\n<h3 id=\"Fasta\"><a href=\"#Fasta\" class=\"headerlink\" title=\"Fasta\"></a>Fasta</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.fasta.html?highlight=fasta#module-skbio.io.format.fasta\">FASTA</a>格式为文本文档，内含核苷酸或氨基酸序列以及其IDs。每条序列包含两部分，第一部分为ID及注释信息，以 <strong>“&gt;”</strong> 开头，at the start, 第二部分为核苷酸序列或氨基酸序列。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"fasta文件内容\"></p>\n<h3 id=\"Genbank\"><a href=\"#Genbank\" class=\"headerlink\" title=\"Genbank\"></a>Genbank</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.genbank.html\">GenBank</a>格式包含了基因组序列和注释信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Genbank文件内容\"></p>\n<h3 id=\"GFF3\"><a href=\"#GFF3\" class=\"headerlink\" title=\"GFF3\"></a>GFF3</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.gff3.html?highlight=gff#module-skbio.io.format.gff3\">GFF3</a> (Generic Feature Format version 3) 格式描述了序列的特征，每一行含有9列数据，列与列之间以制表符分割。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"GFF3文件内容\"></p>\n<h2 id=\"基因组拼接基本概念\"><a href=\"#基因组拼接基本概念\" class=\"headerlink\" title=\"基因组拼接基本概念\"></a>基因组拼接基本概念</h2><h3 id=\"测序深度\"><a href=\"#测序深度\" class=\"headerlink\" title=\"测序深度\"></a>测序深度</h3><p>测序深度（Sequencing depth）指测序得到的总碱基数（read长度x reads数目）与待测基因组大小的比值。假设一个基因组大小为2M，测序深度为10X，那么获得的总数据量为20M。</p>\n<h3 id=\"测序覆盖度\"><a href=\"#测序覆盖度\" class=\"headerlink\" title=\"测序覆盖度\"></a>测序覆盖度</h3><p>指测序获得的序列占整个基因组的比例。由于基因组中的高GC、重复序列等复杂区域的存在，测序获得的序列经常无法覆盖基因组上所有的区域。例如覆盖度是96%，表明还有4%的序列区域未测到。</p>\n<h3 id=\"Read、Contig、Scaffold\"><a href=\"#Read、Contig、Scaffold\" class=\"headerlink\" title=\"Read、Contig、Scaffold\"></a>Read、Contig、Scaffold</h3><p>测序得到的序列被称作reads，在一个read中连续的N个碱基所组成的序列称作k-mer，把k-mer集合拼接起来形成的长DNA序列称为contig。通过pair ends信息将contigs按顺序进行排列得到scaffold。</p>\n<h3 id=\"N50\"><a href=\"#N50\" class=\"headerlink\" title=\"N50\"></a>N50</h3><p>将contigs或scaffolds根据长度从大到小排列并累加，当其累计长度达到全部组装序列总长度的50%时，加上去的最后一个contig或scaffold的大小即为N50的大小，N50是评价基因组拼接质量的重要参数。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>Besser J, Carleton HA, Gerner-Smidt P, Lindsey RL, Trees E. Next-generation sequencing technologies and their application to the study and control of bacterial infections. <em>Clinical Microbiology and Infection</em>, 2018, 24: 335-341</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"NCBI上传基因簇之table2asn的使用","slug":"NCBI上传基因簇之table2asn的使用","date":"2024-08-28T12:44:49.000Z","updated":"2024-08-28T13:12:11.597Z","comments":true,"path":"api/articles/NCBI上传基因簇之table2asn的使用.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>向<a href=\"https://www.ncbi.nlm.nih.gov/\">NCBI</a>提交基因簇的时候需要提供sqn格式的文件，之前我在文章<a href=\"http://liaochenlanruo.fun/post/d444.html\">《NCBI上传基因簇之tbl2asn的使用》</a>中介绍过如何使用<a href=\"https://www.ncbi.nlm.nih.gov/genbank/tbl2asn2/\">tbl2asn</a>生成<code>sqn</code>文件，遗憾的是<code>tbl2asn</code>官方已经<a href=\"https://ftp.ncbi.nih.gov/toolbox/ncbi_tools/converters/by_program/tbl2asn/README\">不再提供软件下载了</a>，提供的新工具为<a href=\"https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/\">table2asn</a>，本文介绍<code>table2asn</code>的使用方法。</p>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"下载table2asn\"><a href=\"#下载table2asn\" class=\"headerlink\" title=\"下载table2asn\"></a>下载table2asn</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此处下载Linux版，Windows和MacOS请自行到https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/下载</span></span><br><span class=\"line\">wget https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/linux64.table2asn.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>解压缩文件后得到可执行程序，将其重命名为<code>table2asn</code>，并将其加入环境变量即可，环境变量的设置请自行搜索。</p>\n<h1 id=\"文件准备\"><a href=\"#文件准备\" class=\"headerlink\" title=\"文件准备\"></a>文件准备</h1><p>table2asn依赖三个文件来生成sqn文件：</p>\n<ul>\n<li>文件1：fasta格式的基因组序列文件，文件后缀需要为<code>.fsa</code>，如<code>Toyoncin.fas</code>。</li>\n</ul>\n<p><strong>注意Header处需要添加中括号部分，及相关描述信息。</strong></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Toyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster [organism=Bacillus toyonensis] [strain=XIN-YC13] [topology=linear] [moltype=DNA] [tech=wgs] [gcode=11] [country=China] Bacillus toyonensis strain XIN-YC13 Toyoncin biosynthesis gene cluster, complete sequence</span><br><span class=\"line\">ttaaaa taatttaata</span><br><span class=\"line\">gggaagtttt ttagttgttt tggactcttc ccaaacactg ctttaagtgt tggattaaca</span><br><span class=\"line\"> tcatccctat tccccgaaaa cataatgtga ggatttatga ataatgcata tgctctaaca</span><br><span class=\"line\">ttattatcat caacaccact ctctgaacga gccataatac ccttatcaat taattttcta</span><br><span class=\"line\">accaatggac taactttagt ttcatgtctt ccaatttttt tagctaattc tcgctgagtt</span><br><span class=\"line\"> aatgggattt gttctttcga attaatatca ttaactaaac aattacttaa aaaacctaca</span><br><span class=\"line\">cacattgaaa tatctactaa aaataccttc tcagcatttg ttaaataatc aatttcgaac</span><br><span class=\"line\"> aaatactgga tattttgttg aataatctga acaaacttcg ctttattttt cactttacgc</span><br><span class=\"line\"> tcaggaacta atttcattcc tcttgaacga gcttttgatt gaagtttatt tgctaaatac</span><br><span class=\"line\"> atctcttctt cagacaagac ctttaaatcc tcaatatctc tcaatcttga atttttttca</span><br><span class=\"line\"> gcttgttcta agttgataaa ctttgacata ttctttttgc tcctcttttc taagattttc</span><br><span class=\"line\"> aactagagaa ggaaaaaatt ttatgttatg attcctgtag aatttacaat tcaatatgta</span><br><span class=\"line\"> caaaagaact ccccttttct aattgatagt ttggtcgctt tcaattataa tacaagggga</span><br><span class=\"line\"> ttttttacat cttaaaattt ttcatttttg aatcaatccc tgaaaatata aagaacacat</span><br><span class=\"line\"> cacataaatt attcttaata ttttataatc gaaaaaataa taggaataaa gaaaaatact</span><br><span class=\"line\"> gcaataaata tattcatctg tttcttactc aaaccggcca ctatatttaa tcccattcct</span><br><span class=\"line\"> ataataatta attcccaaat tgaaaacact tcaaatttac tacaaattat atatagtaat</span><br><span class=\"line\"> gtacctggtt caaatattga acccaaacta gtatacgtta ctatttctcc tcctataaat</span><br><span class=\"line\"> agtgttaata atgtattaat taatttacct aaaatagaaa ttacactagc aaatattgta</span><br><span class=\"line\"> atagatacta actttttata agaaacatct ttactcatca gcatcattac aatctttaaa</span><br><span class=\"line\"> ataatccccc aaataaaagg tgtaattaaa gcaatgaaaa tcgatgcaaa acctcctaac</span><br><span class=\"line\"> atcatttggg aaacaagggg tatttccata tctgcaaata cttctttttg aattttaacc</span><br><span class=\"line\"> aattctggat tgctatgtct tgcatataca gataaaatcc ctattattgc ttgtataact</span><br><span class=\"line\"> gataaataca taagaggaaa ccatatcgga ctaattattt tcatacgctc gaattcagaa</span><br><span class=\"line\"> ataggagatg taatcataaa aattagagat ggtttttcat aattgttttt ttctttattc</span><br><span class=\"line\"> actactaaac tattatccat atattaacac cttctttttt tattcataac gtaatgcttc</span><br><span class=\"line\"> aattggatct aattttgcag ccttattggc tggaatcaat ccaaatataa taccaagcga</span><br><span class=\"line\"> catcgaaaat aatacgccac ccacaacaac ttcccatgaa acaagaggcg gccattttgc</span><br><span class=\"line\"> aaatgtggac acaatgtacg ctccacaata accaagtcca atcccaatca atccaccaag</span><br><span class=\"line\"> aagtgtcaac ataattgctt caattaaaaa ttgcaacaaa attttaccac gcgttgctcc</span><br><span class=\"line\">aagtgcttta cgtaccccaa tctcacgtgt acgctctgtt acagaaacaa gcatgatatt</span><br><span class=\"line\">cataactcca attccgccta caactaaaga aatacttgca atacctgcaa taatcattgt</span><br><span class=\"line\">cataatatta gtaactttag aaataccttt ttggatttct tctaaattta caatttcata</span><br><span class=\"line\"> tttcccttta aactcttcag attgtctatc atttaataat tttactccct tttttccagc</span><br><span class=\"line\">tgtttgtaat tgatcaaccc ctattgcttg aattgtaata gattgttgag agttatcatc</span><br><span class=\"line\"> tccatataat attggccata ttgaaagtgg tattaaaatt tctgacattc caaaaccaag</span><br><span class=\"line\"> ctcttcatct cctgaactga atagaccaat aatttgaagt ggctgacctt taatttctat</span><br><span class=\"line\"> aattttacca atgactgatt catgctcatt aggaaataac tctttcacta atgtttgatt</span><br><span class=\"line\"> aaccattatt acattattac cttgcatcaa atcatcttca ttaagagaac gacctttctc</span><br><span class=\"line\"> tattttcatt ttagtcatat taaaatattc ttttgtaata ccatttatat tagttacaac</span><br><span class=\"line\">ctttttatca tcaccaatta atgtctctgt actagagttt tgaacaatta catttttaat</span><br><span class=\"line\"> ttcttttatc ttttttaact caaaaagatc ttcttcactt acagatggtt ttttgtcatt</span><br><span class=\"line\"> catagatcct gttgttaata actcattaat atcttcttta tatgtaatcg gaatagtgtt</span><br><span class=\"line\"> attgccagaa gcggtaaatt gtgatttaag cattgcttct ccacctttac caatggctac</span><br><span class=\"line\"> aacagtaata atagaaccta caccaataat aattccaagc atcgtaagag ctgagcgcag</span><br><span class=\"line\"> tttatgagct aaaatagaag ataaggcaat ttttatacta tctaataaac tcataccata</span><br><span class=\"line\"> caccttctat cttctgtaat tttcccatct cgcaatatga tgcgacgtga agaataagct</span><br><span class=\"line\"> gctacctctt cttcatgtgt aaccataacg attgtcgtac cttctgcatt taacttcgta</span><br><span class=\"line\"> aagatatcca taacttgtgc accagacttc gtatcaagcg caccagttgg ctcatcagcc</span><br><span class=\"line\"> ataataaacg ttggattatt cgcaatcgat cttgcaatag caacacgctg cttctgtcca</span><br><span class=\"line\"> cctgacagct cactaggtaa atgatgtact ctatccgcta atccaacttt cccaagcgct</span><br><span class=\"line\"> tcgagcgctc tttgacgacg ctctgctttc ttcactccac cataaatcag tggtaattca</span><br><span class=\"line\"> acgttttcca ctgcggaaag gcgcggcaat aaattaaaat gctggaacac aaaaccgata</span><br><span class=\"line\">tattcattac gaattaaagc aagttttgac tcatctgctg ttaaaatatt cacatcattc</span><br><span class=\"line\">agcatatatt cgccttctgt tggacgatct aaacaaccga taatattcat aagagttgat</span><br><span class=\"line\">ttaccagaac cagacggtcc cataattgaa acaaattcac caccttgaat agttaaacta</span><br><span class=\"line\">ataccgtgca aaataggaac cgccattttt ccttgataat acgttttagc aatattattt</span><br><span class=\"line\">aacgtaatca tttctctttc acttccattc cgtcatatac gttgtcggaa ggatttttaa</span><br><span class=\"line\">ccaccttttg ccccactgtt gcgccctcta caatctctgt ccaatctcca tcagtagcac</span><br><span class=\"line\">cttttttcac attttgttta cgaagcttac ctttctcttc gatatataca aatgcatcat</span><br><span class=\"line\">      cgcctttttc aacaatactc ttacttggaa cagcaatcat tcttttattc tctaaattta</span><br><span class=\"line\">      cttgtaacga aacatgataa cctggagata aaccatcttg actatcaaga cttgctttat</span><br><span class=\"line\">      atgtatattg agacatattt tgagtcactt cccccatgcc atcagcttga gccatttcta</span><br><span class=\"line\">      cacttgttgg gaactcactt acctctgtaa tcttccctgt ccactttttc ttactatttg</span><br><span class=\"line\">      ctttcgcagt tacagtaaac gtttgatcct tttgaatttg cgacttctga agctcagtta</span><br><span class=\"line\">      atgttccttg aatttggaat ggatctttag aagcaacttg taaaaaggct ttcccttgac</span><br><span class=\"line\">      cacctaacgc ttgtgatgaa ctttgtgctg catctttatc taacttttga acaacaccag</span><br><span class=\"line\">      caaaattgct ataaatcgta agttcgttct gctttttatt taactcttct ttttgtaact</span><br><span class=\"line\">      tccctttctc tttctcaagg tctgttgtct tttgcgctat ttctaattca cttacttgct</span><br><span class=\"line\">      cttccatcgg atctattact tctttcccag ctccgctatc tttcgccttc ttaatttctt</span><br><span class=\"line\">      tcttcaacga atcaatcttc tttttccctt ggtcataacg catatctgcc atcttttgat</span><br><span class=\"line\">      caagcacagc ttgcttcatt tgcaaattaa tttcttcatt atcgtaagaa aacaatttcg</span><br><span class=\"line\">      ttcccttttc tatttcttgt ccttctttca cttcaatatc tttcactttt cctttagtca</span><br><span class=\"line\">      gatccgcgta gaaactttca atattccccg gcttcacttg accagaaatt aactttgtat</span><br><span class=\"line\">      tattaagatt gcgctctgtg actttttcaa aactaacagt atctattttt gttaccgctt</span><br><span class=\"line\">      tcttcttact ttgcactacg aaaatattaa taaatgtaac aataacaatt aacgcaataa</span><br><span class=\"line\">      ctccaataat agctcctttc tttttatttt taaaaataaa aagttctttt ttaatcacaa</span><br><span class=\"line\">      caatcttctc cttattcata tctaaaattt aaacttttaa attttacata aaaatttaaa</span><br><span class=\"line\">      acttctaaaa tataacatgt ataatttacc atagatgatt tattttgtat aatataaaaa</span><br><span class=\"line\">      tatctatata aataatgcta attttcaaac aatggggtgg aagatactaa tgttagaaaa</span><br><span class=\"line\">      aaaagataga ctaacagaaa tagaggaaca aattatatac ttaatttcaa aggaattagg</span><br><span class=\"line\">      aaataaagaa atagcggaaa aattaaatta ttcacaacgt agcatcggtt acaaaataaa</span><br><span class=\"line\">      taatattttt aaaaaattaa atgttaattc aagaatcgga ctgattatag aagctgtaaa</span><br><span class=\"line\">      aaaaaatata atttaaatat aagaatgctt tcatgttaat attttataga aactaaatat</span><br><span class=\"line\">      agaggtgatt aaaatgcaaa aattttttga agctattagt gctataggta tagtaggtta</span><br><span class=\"line\">      ctttttaggt aaattcacaa gtattccttt aatagacaaa tatacattgt atttcggcgt</span><br><span class=\"line\">      aatgttgatg attggggtta ttggaagatt tattataaaa gtaattaact cagaagaaga</span><br><span class=\"line\">      gacacatgat tcaaacaaat aaaatactct aataaaaatg gaagaagatt gcacttaagt</span><br><span class=\"line\">      gcaatcttct tccattttta ttgaaaattg attaaataat gttaatattg caattgtgtg</span><br><span class=\"line\">      gtgcagatta gggtgattat gtaatagggg gaaattaaaa atgatcaata cagcttggaa</span><br><span class=\"line\">      aattattaaa gcactacaaa aatacggtac aaaagcatac aatgttatca aaaaaggcgg</span><br><span class=\"line\">      ccaagcaatg tacgacagct tcatggcagc taaagctaaa ggttggacac atgcagcttg</span><br><span class=\"line\">      gtggctagta gaacatggtt caactttagg aacattctat gatttattaa aagctgctgg</span><br><span class=\"line\">      attaatcgac taattacagc aactaaacaa ctaaacaact aaacaactta aaaatacaaa</span><br><span class=\"line\">      ttaccctaaa ctgtacccct attacatatt aactaattat tttaaaggtt ggatgataat</span><br><span class=\"line\">      atgtcaaata acatcatatc tgtaaaaaat ttaattaaaa gcttcgataa caaaatagta</span><br><span class=\"line\">      ttagataaat taaatttcga aatgaaagaa aactccactg ttgtaataat aggtaaaaac</span><br><span class=\"line\">      ggtgcaggta aaagtgtctt tctaaattgt ttacttggat ttattcatta caaccaaggt</span><br><span class=\"line\">      tcaatactaa tagatggaca acctgtagaa aatcgattac atctccgcaa gattacatcg</span><br><span class=\"line\">      ttaatttctt cagaccatca agaacatcta aatttattaa cccccaatga atatttttct</span><br><span class=\"line\">      tttttacaag atatttacca actaaaaagt aataataaag acaaaattca aaattactca</span><br><span class=\"line\">     gaagatctat atgttactaa agaactcaat actgtatttt catcactttc ttttggaaca</span><br><span class=\"line\">     aaaaagaaaa tacaattaat tggtagccta ttatattctc ctaaattatt gatttgcgac</span><br><span class=\"line\">     gaaatatttg aagggcttga tacagactca gtaaaatggg ttaaaaactt atttcaacaa</span><br><span class=\"line\">     agaaaacaag aaaatctttc tactttattt acaactcata ttactgaaca tataacagat</span><br><span class=\"line\">     ataacagaaa aaaattacat acttgaaaat ggaaaattaa ttgtgtaagt ttaaccactt</span><br><span class=\"line\">     atatttaaag ctaaaattaa ggagcttaaa atatgaattt taatatatat aagagactat</span><br><span class=\"line\">     atgataaatc aacagaagaa aaaagcaaaa caataacaaa acaaatatta tttggaatta</span><br><span class=\"line\">     taaatagttc tatattaata ggtatactac tcacatgttt ggagattttc aactttaaaa</span><br><span class=\"line\">     tttcaactgt aatgtatggt tatttcacta tatatataat actagaactt ttactattat</span><br><span class=\"line\">     tctctgcaaa tcaactatat gaaagtacag aattcataat aaaattcctt aaatatacac</span><br><span class=\"line\">     caataaccat aaataaacta tatttctcac attttctaag ttctaaatat tcattttcca</span><br><span class=\"line\">     atctttttga aataataact ctcacatcaa ttttattaat atataatgtc gatatcttat</span><br><span class=\"line\">     attcatttat tttcataatt agcttacaaa ttattagctt aataagaaca tatttagaat</span><br><span class=\"line\">     ttttactatt atattctcaa aaaaaacagg ttaaaatttt tactctaacc cattttgttt</span><br><span class=\"line\">     tcataatatc tatggttttt tatattattg ttaaaacaaa atcgatagat ttagtattct</span><br><span class=\"line\">     ttgaaaacac aaatatgtta attatatctg ttcttctcat aacattcttg atatcacttt</span><br><span class=\"line\">     taacatataa acatattata gaatacttaa tgaaaaataa tgaaattgta tataatgcta</span><br><span class=\"line\">     tttttatcaa gttaactttt aacacagcta atttaattag taaattattt aaatttaata</span><br><span class=\"line\">     catcaattgc atctttaata aaaatacata taatacgatt attacgtaat caagactata</span><br><span class=\"line\">     taagtagatt actaaaaata ggaatattac tatttatttt ttcttctata agctttctat</span><br><span class=\"line\">     ttttcgataa atcatcaaca aacaatgaaa tgagtgatat actttacttt tcatttttta</span><br><span class=\"line\">     tttccttatt tagtttttct aacatacgat tagactataa cttagtttct aaattaagct</span><br><span class=\"line\">     tagaggatta tccaataaca aaattacaat caagattaag cattgatata gcacatggaa</span><br><span class=\"line\">     ttttactatt tatactatct ttatttcttt tattaacaca atacttattg aatccaacaa</span><br><span class=\"line\">     atattctaac tctaattgat ggtttattat catttatttg tttttatttt ctaagtcttg</span><br><span class=\"line\">     gtatagaaaa agcagatatt ataataacac caaaaacaaa atggaaaatg tatccattat</span><br><span class=\"line\">     tttttgtgat gggattaata attgaagcaa tatttctatt aaaattcaaa atatggataa</span><br><span class=\"line\">     aattaataac tttattcctt tgtatactgt ggtcatattt acgtgtttat tggaaattaa</span><br><span class=\"line\">     aaaaacaata aacacaatta aaaagttccc ttcatatttt ttgaagggaa cttttatttt</span><br><span class=\"line\">     aaacaaaaat tacaaacaag caaagttatt taaaagtaaa cttttaaaat tattgaatta</span><br><span class=\"line\">     ataacaatta gtctaagata tatcagccaa atttaatttt taaacaaacc gaaaaaccct</span><br><span class=\"line\">     ttccgttttt gtttctgatt ttggctctgt atttctctaa tgttttcaag caataactga</span><br><span class=\"line\">     tctcgttttt caaatttttt ctctataaaa acctctaatt caatattttt atcttctact</span><br><span class=\"line\">     tcctttaatt ttctctccgt attagccaaa tgttcttttg tggtaactaa ttcattcgta</span><br><span class=\"line\">     atctcttgta atttttgaac aagcgtttga ttgaactgat tttgtaattg ttgattttct</span><br><span class=\"line\">     aatacttcat ccaacttctt ttctaattcc gatttttcct ctcttgaaac aaacaaatca</span><br><span class=\"line\">     agttctccat tccgccatgc tcgaacttga tcataagacc atttttgcac ctgtattttt</span><br><span class=\"line\">     tctttaattg ctatcaattc ttctatattt tcctttgagt acctacgatg ccctccctga</span><br><span class=\"line\">     cttcgctccg tttgtatatt aaattcgttt gaccatgctt ttaacaagtc aggggtaatc</span><br><span class=\"line\">     cctaaacgat ccgcaacaat tttcggtgta tacatttctg attttaattc caa</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件2：描述基因特征的feature table文件（.tbl），文件名与FASTA文件一致，如<code>Toyoncin.tbl</code>。</li>\n</ul>\n<p>该文件可以用prokka对文件1进行注释而得到，但是需要自己加以修改，加上gene相关的信息，<code>product</code>部分也要自己修改，该文件共<code>5</code>列，各列之间用制表符分隔。Header部分的名称要与Fasta文件中的一致，但开头需要加上<code>Feature</code>。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Feature Toyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster</span><br><span class=\"line\">585\t1\tgene</span><br><span class=\"line\">\t\t\tgene\torf1</span><br><span class=\"line\">585\t1\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00001</span><br><span class=\"line\">\t\t\tproduct\tMarR family transcriptional regulator</span><br><span class=\"line\">1476\t811\tgene</span><br><span class=\"line\">\t\t\tgene\torf2</span><br><span class=\"line\">1476\t811\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00002</span><br><span class=\"line\">\t\t\tproduct\tYIP1 family membrane protein</span><br><span class=\"line\">2710\t1496\tgene</span><br><span class=\"line\">\t\t\tgene\torf3</span><br><span class=\"line\">2710\t1496\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00003</span><br><span class=\"line\">\t\t\tproduct\tABC transporter permease</span><br><span class=\"line\">3387\t2707\tgene</span><br><span class=\"line\">\t\t\tgene\torf4</span><br><span class=\"line\">3387\t2707\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00004</span><br><span class=\"line\">\t\t\tproduct\tABC transporter ATP-binding protein</span><br><span class=\"line\">4595\t3384\tgene</span><br><span class=\"line\">\t\t\tgene\torf5</span><br><span class=\"line\">4595\t3384\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00005</span><br><span class=\"line\">\t\t\tproduct\tRND family efflux transporter, MFP subunit</span><br><span class=\"line\">4746\t4952\tgene</span><br><span class=\"line\">\t\t\tgene\torf6</span><br><span class=\"line\">4746\t4952\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00006</span><br><span class=\"line\">\t\t\tproduct\tHelix-turn-helix transcriptional regulator</span><br><span class=\"line\">5010\t5198\tgene</span><br><span class=\"line\">\t\t\tgene\torf7</span><br><span class=\"line\">5010\t5198\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00007</span><br><span class=\"line\">\t\t\tproduct\tPutative membrane protein</span><br><span class=\"line\">5337\t5549\tgene</span><br><span class=\"line\">\t\t\tgene\ttoyA</span><br><span class=\"line\">5337\t5549\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00008</span><br><span class=\"line\">\t\t\tproduct\tToyonsin precusor</span><br><span class=\"line\">5657\t6304\tgene</span><br><span class=\"line\">\t\t\tgene\torf9</span><br><span class=\"line\">5657\t6304\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00009</span><br><span class=\"line\">\t\t\tproduct\tABC transporter ATP-binding protein</span><br><span class=\"line\">6349\t7707\tgene</span><br><span class=\"line\">\t\t\tgene\torf10</span><br><span class=\"line\">6349\t7707\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00010</span><br><span class=\"line\">\t\t\tproduct\tPutative membrane protein</span><br><span class=\"line\">8391\t7849\tgene</span><br><span class=\"line\">\t\t\tgene\torf11</span><br><span class=\"line\">8391\t7849\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00011</span><br><span class=\"line\">\t\t\tproduct\tMarR family transcriptional regulator</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件3：描述作者信息的模板文件（.sbt）</li>\n</ul>\n<p>可以在<a href=\"https://submit.ncbi.nlm.nih.gov/genbank/template/submission/\">NCBI</a>上生成该文件。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Submit-block ::= &#123;</span><br><span class=\"line\">  contact &#123;</span><br><span class=\"line\">    contact &#123;</span><br><span class=\"line\">      name name &#123;</span><br><span class=\"line\">        last &quot;xin&quot;,</span><br><span class=\"line\">        first &quot;bingyue&quot;,</span><br><span class=\"line\">        middle &quot;&quot;,</span><br><span class=\"line\">        initials &quot;&quot;,</span><br><span class=\"line\">        suffix &quot;&quot;,</span><br><span class=\"line\">        title &quot;&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      affil std &#123;</span><br><span class=\"line\">        affil &quot;Huaibei Normal University&quot;,</span><br><span class=\"line\">        div &quot;College of Life Sciences&quot;,</span><br><span class=\"line\">        city &quot;Huaibei&quot;,</span><br><span class=\"line\">        sub &quot;Anhui&quot;,</span><br><span class=\"line\">        country &quot;China&quot;,</span><br><span class=\"line\">        street &quot;Dongshan road No.100&quot;,</span><br><span class=\"line\">        email &quot;xinbingyuex@163.com&quot;,</span><br><span class=\"line\">        postal-code &quot;235000&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  cit &#123;</span><br><span class=\"line\">    authors &#123;</span><br><span class=\"line\">      names std &#123;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          name name &#123;</span><br><span class=\"line\">            last &quot;Xin&quot;,</span><br><span class=\"line\">            first &quot;Bingyue&quot;,</span><br><span class=\"line\">            middle &quot;&quot;,</span><br><span class=\"line\">            initials &quot;&quot;,</span><br><span class=\"line\">            suffix &quot;&quot;,</span><br><span class=\"line\">            title &quot;&quot;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      affil std &#123;</span><br><span class=\"line\">        affil &quot;Huaibei Normal University&quot;,</span><br><span class=\"line\">        div &quot;College of Life Sciences&quot;,</span><br><span class=\"line\">        city &quot;Huaibei&quot;,</span><br><span class=\"line\">        sub &quot;Anhui&quot;,</span><br><span class=\"line\">        country &quot;China&quot;,</span><br><span class=\"line\">        street &quot;Dongshan road No.100&quot;,</span><br><span class=\"line\">        postal-code &quot;235000&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  subtype new</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= pub &#123;</span><br><span class=\"line\">  pub &#123;</span><br><span class=\"line\">    gen &#123;</span><br><span class=\"line\">      cit &quot;unpublished&quot;,</span><br><span class=\"line\">      authors &#123;</span><br><span class=\"line\">        names std &#123;</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name name &#123;</span><br><span class=\"line\">              last &quot;Xin&quot;,</span><br><span class=\"line\">              first &quot;Bingyue&quot;,</span><br><span class=\"line\">              middle &quot;&quot;,</span><br><span class=\"line\">              initials &quot;&quot;,</span><br><span class=\"line\">              suffix &quot;&quot;,</span><br><span class=\"line\">              title &quot;&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      title &quot;Purification and characterization of a novel leaderless bacteriocin, toyoncin, produced by Bacillus toyonensis XIN-YC13 that specifically active against Bacilus cereus and Listeria monocytogenes&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= user &#123;</span><br><span class=\"line\">  type str &quot;Submission&quot;,</span><br><span class=\"line\">  data &#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      label str &quot;AdditionalComment&quot;,</span><br><span class=\"line\">      data str &quot;ALT EMAIL:xinbingyuex@163.com&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= user &#123;</span><br><span class=\"line\">  type str &quot;Submission&quot;,</span><br><span class=\"line\">  data &#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      label str &quot;AdditionalComment&quot;,</span><br><span class=\"line\">      data str &quot;Submission Title:None&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>注意</strong>：文件1和文件2的序列描述信息必须一致，此例中均为“Toyoncin_biosynthesis_gene_cluster”。</p>\n<h1 id=\"文件生成\"><a href=\"#文件生成\" class=\"headerlink\" title=\"文件生成\"></a>文件生成</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table2asn -i Toyoncin.fas -t template.sbt -V vb</span><br></pre></td></tr></table></figure>\n\n<p>-i 指定FASTA文件<br>-t 指定模板文件<br>-V<br>  -v 生成验证文件，保存错误信息<br>  -b 生成gbf文件<br>-x 文件1（FASTA文件）的后缀名，根据实际情况填写</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://ftp.ncbi.nih.gov/toolbox/ncbi_tools/converters/by_program/table2asn_GFF/DOCUMENTATION/table2asn_readme.txt\">table2asn</a></p>\n</li>\n<li><p><a href=\"http://liaochenlanruo.fun/post/d444.html\">《NCBI上传基因簇之tbl2asn的使用》</a></p>\n</li>\n</ul>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>扫码关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"NCBI","path":"api/tags/NCBI.json"},{"name":"序列处理","path":"api/tags/序列处理.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"NCBI上传基因簇之tbl2asn的使用","slug":"NCBI上传基因簇之tbl2asn的使用","date":"2021-11-12T11:47:28.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/NCBI上传基因簇之tbl2asn的使用.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>向<a href=\"https://www.ncbi.nlm.nih.gov/\">NCBI</a>提交基因簇的时候需要提供sqn格式的文件，这个文件需要通过<a href=\"https://www.ncbi.nlm.nih.gov/genbank/tbl2asn2/\">tbl2asn</a>生成。</p>\n<h1 id=\"文件准备\"><a href=\"#文件准备\" class=\"headerlink\" title=\"文件准备\"></a>文件准备</h1><p>tbl2asn依赖三个文件来生成sqn文件：</p>\n<ul>\n<li>文件1：fasta格式的基因组序列文件</li>\n</ul>\n<p>Header处的中括号部分可以不写。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Toyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster [organism=Bacillus toyonensis] [strain=XIN-YC13] [topology=linear] [moltype=DNA] [tech=wgs] [gcode=11] [country=China] Bacillus toyonensis strain XIN-YC13 Toyoncin biosynthesis gene cluster, complete sequence</span><br><span class=\"line\">ttaaaa taatttaata</span><br><span class=\"line\">gggaagtttt ttagttgttt tggactcttc ccaaacactg ctttaagtgt tggattaaca</span><br><span class=\"line\"> tcatccctat tccccgaaaa cataatgtga ggatttatga ataatgcata tgctctaaca</span><br><span class=\"line\">ttattatcat caacaccact ctctgaacga gccataatac ccttatcaat taattttcta</span><br><span class=\"line\">accaatggac taactttagt ttcatgtctt ccaatttttt tagctaattc tcgctgagtt</span><br><span class=\"line\"> aatgggattt gttctttcga attaatatca ttaactaaac aattacttaa aaaacctaca</span><br><span class=\"line\">cacattgaaa tatctactaa aaataccttc tcagcatttg ttaaataatc aatttcgaac</span><br><span class=\"line\"> aaatactgga tattttgttg aataatctga acaaacttcg ctttattttt cactttacgc</span><br><span class=\"line\"> tcaggaacta atttcattcc tcttgaacga gcttttgatt gaagtttatt tgctaaatac</span><br><span class=\"line\"> atctcttctt cagacaagac ctttaaatcc tcaatatctc tcaatcttga atttttttca</span><br><span class=\"line\"> gcttgttcta agttgataaa ctttgacata ttctttttgc tcctcttttc taagattttc</span><br><span class=\"line\"> aactagagaa ggaaaaaatt ttatgttatg attcctgtag aatttacaat tcaatatgta</span><br><span class=\"line\"> caaaagaact ccccttttct aattgatagt ttggtcgctt tcaattataa tacaagggga</span><br><span class=\"line\"> ttttttacat cttaaaattt ttcatttttg aatcaatccc tgaaaatata aagaacacat</span><br><span class=\"line\"> cacataaatt attcttaata ttttataatc gaaaaaataa taggaataaa gaaaaatact</span><br><span class=\"line\"> gcaataaata tattcatctg tttcttactc aaaccggcca ctatatttaa tcccattcct</span><br><span class=\"line\"> ataataatta attcccaaat tgaaaacact tcaaatttac tacaaattat atatagtaat</span><br><span class=\"line\"> gtacctggtt caaatattga acccaaacta gtatacgtta ctatttctcc tcctataaat</span><br><span class=\"line\"> agtgttaata atgtattaat taatttacct aaaatagaaa ttacactagc aaatattgta</span><br><span class=\"line\"> atagatacta actttttata agaaacatct ttactcatca gcatcattac aatctttaaa</span><br><span class=\"line\"> ataatccccc aaataaaagg tgtaattaaa gcaatgaaaa tcgatgcaaa acctcctaac</span><br><span class=\"line\"> atcatttggg aaacaagggg tatttccata tctgcaaata cttctttttg aattttaacc</span><br><span class=\"line\"> aattctggat tgctatgtct tgcatataca gataaaatcc ctattattgc ttgtataact</span><br><span class=\"line\"> gataaataca taagaggaaa ccatatcgga ctaattattt tcatacgctc gaattcagaa</span><br><span class=\"line\"> ataggagatg taatcataaa aattagagat ggtttttcat aattgttttt ttctttattc</span><br><span class=\"line\"> actactaaac tattatccat atattaacac cttctttttt tattcataac gtaatgcttc</span><br><span class=\"line\"> aattggatct aattttgcag ccttattggc tggaatcaat ccaaatataa taccaagcga</span><br><span class=\"line\"> catcgaaaat aatacgccac ccacaacaac ttcccatgaa acaagaggcg gccattttgc</span><br><span class=\"line\"> aaatgtggac acaatgtacg ctccacaata accaagtcca atcccaatca atccaccaag</span><br><span class=\"line\"> aagtgtcaac ataattgctt caattaaaaa ttgcaacaaa attttaccac gcgttgctcc</span><br><span class=\"line\">aagtgcttta cgtaccccaa tctcacgtgt acgctctgtt acagaaacaa gcatgatatt</span><br><span class=\"line\">cataactcca attccgccta caactaaaga aatacttgca atacctgcaa taatcattgt</span><br><span class=\"line\">cataatatta gtaactttag aaataccttt ttggatttct tctaaattta caatttcata</span><br><span class=\"line\"> tttcccttta aactcttcag attgtctatc atttaataat tttactccct tttttccagc</span><br><span class=\"line\">tgtttgtaat tgatcaaccc ctattgcttg aattgtaata gattgttgag agttatcatc</span><br><span class=\"line\"> tccatataat attggccata ttgaaagtgg tattaaaatt tctgacattc caaaaccaag</span><br><span class=\"line\"> ctcttcatct cctgaactga atagaccaat aatttgaagt ggctgacctt taatttctat</span><br><span class=\"line\"> aattttacca atgactgatt catgctcatt aggaaataac tctttcacta atgtttgatt</span><br><span class=\"line\"> aaccattatt acattattac cttgcatcaa atcatcttca ttaagagaac gacctttctc</span><br><span class=\"line\"> tattttcatt ttagtcatat taaaatattc ttttgtaata ccatttatat tagttacaac</span><br><span class=\"line\">ctttttatca tcaccaatta atgtctctgt actagagttt tgaacaatta catttttaat</span><br><span class=\"line\"> ttcttttatc ttttttaact caaaaagatc ttcttcactt acagatggtt ttttgtcatt</span><br><span class=\"line\"> catagatcct gttgttaata actcattaat atcttcttta tatgtaatcg gaatagtgtt</span><br><span class=\"line\"> attgccagaa gcggtaaatt gtgatttaag cattgcttct ccacctttac caatggctac</span><br><span class=\"line\"> aacagtaata atagaaccta caccaataat aattccaagc atcgtaagag ctgagcgcag</span><br><span class=\"line\"> tttatgagct aaaatagaag ataaggcaat ttttatacta tctaataaac tcataccata</span><br><span class=\"line\"> caccttctat cttctgtaat tttcccatct cgcaatatga tgcgacgtga agaataagct</span><br><span class=\"line\"> gctacctctt cttcatgtgt aaccataacg attgtcgtac cttctgcatt taacttcgta</span><br><span class=\"line\"> aagatatcca taacttgtgc accagacttc gtatcaagcg caccagttgg ctcatcagcc</span><br><span class=\"line\"> ataataaacg ttggattatt cgcaatcgat cttgcaatag caacacgctg cttctgtcca</span><br><span class=\"line\"> cctgacagct cactaggtaa atgatgtact ctatccgcta atccaacttt cccaagcgct</span><br><span class=\"line\"> tcgagcgctc tttgacgacg ctctgctttc ttcactccac cataaatcag tggtaattca</span><br><span class=\"line\"> acgttttcca ctgcggaaag gcgcggcaat aaattaaaat gctggaacac aaaaccgata</span><br><span class=\"line\">tattcattac gaattaaagc aagttttgac tcatctgctg ttaaaatatt cacatcattc</span><br><span class=\"line\">agcatatatt cgccttctgt tggacgatct aaacaaccga taatattcat aagagttgat</span><br><span class=\"line\">ttaccagaac cagacggtcc cataattgaa acaaattcac caccttgaat agttaaacta</span><br><span class=\"line\">ataccgtgca aaataggaac cgccattttt ccttgataat acgttttagc aatattattt</span><br><span class=\"line\">aacgtaatca tttctctttc acttccattc cgtcatatac gttgtcggaa ggatttttaa</span><br><span class=\"line\">ccaccttttg ccccactgtt gcgccctcta caatctctgt ccaatctcca tcagtagcac</span><br><span class=\"line\">cttttttcac attttgttta cgaagcttac ctttctcttc gatatataca aatgcatcat</span><br><span class=\"line\">      cgcctttttc aacaatactc ttacttggaa cagcaatcat tcttttattc tctaaattta</span><br><span class=\"line\">      cttgtaacga aacatgataa cctggagata aaccatcttg actatcaaga cttgctttat</span><br><span class=\"line\">      atgtatattg agacatattt tgagtcactt cccccatgcc atcagcttga gccatttcta</span><br><span class=\"line\">      cacttgttgg gaactcactt acctctgtaa tcttccctgt ccactttttc ttactatttg</span><br><span class=\"line\">      ctttcgcagt tacagtaaac gtttgatcct tttgaatttg cgacttctga agctcagtta</span><br><span class=\"line\">      atgttccttg aatttggaat ggatctttag aagcaacttg taaaaaggct ttcccttgac</span><br><span class=\"line\">      cacctaacgc ttgtgatgaa ctttgtgctg catctttatc taacttttga acaacaccag</span><br><span class=\"line\">      caaaattgct ataaatcgta agttcgttct gctttttatt taactcttct ttttgtaact</span><br><span class=\"line\">      tccctttctc tttctcaagg tctgttgtct tttgcgctat ttctaattca cttacttgct</span><br><span class=\"line\">      cttccatcgg atctattact tctttcccag ctccgctatc tttcgccttc ttaatttctt</span><br><span class=\"line\">      tcttcaacga atcaatcttc tttttccctt ggtcataacg catatctgcc atcttttgat</span><br><span class=\"line\">      caagcacagc ttgcttcatt tgcaaattaa tttcttcatt atcgtaagaa aacaatttcg</span><br><span class=\"line\">      ttcccttttc tatttcttgt ccttctttca cttcaatatc tttcactttt cctttagtca</span><br><span class=\"line\">      gatccgcgta gaaactttca atattccccg gcttcacttg accagaaatt aactttgtat</span><br><span class=\"line\">      tattaagatt gcgctctgtg actttttcaa aactaacagt atctattttt gttaccgctt</span><br><span class=\"line\">      tcttcttact ttgcactacg aaaatattaa taaatgtaac aataacaatt aacgcaataa</span><br><span class=\"line\">      ctccaataat agctcctttc tttttatttt taaaaataaa aagttctttt ttaatcacaa</span><br><span class=\"line\">      caatcttctc cttattcata tctaaaattt aaacttttaa attttacata aaaatttaaa</span><br><span class=\"line\">      acttctaaaa tataacatgt ataatttacc atagatgatt tattttgtat aatataaaaa</span><br><span class=\"line\">      tatctatata aataatgcta attttcaaac aatggggtgg aagatactaa tgttagaaaa</span><br><span class=\"line\">      aaaagataga ctaacagaaa tagaggaaca aattatatac ttaatttcaa aggaattagg</span><br><span class=\"line\">      aaataaagaa atagcggaaa aattaaatta ttcacaacgt agcatcggtt acaaaataaa</span><br><span class=\"line\">      taatattttt aaaaaattaa atgttaattc aagaatcgga ctgattatag aagctgtaaa</span><br><span class=\"line\">      aaaaaatata atttaaatat aagaatgctt tcatgttaat attttataga aactaaatat</span><br><span class=\"line\">      agaggtgatt aaaatgcaaa aattttttga agctattagt gctataggta tagtaggtta</span><br><span class=\"line\">      ctttttaggt aaattcacaa gtattccttt aatagacaaa tatacattgt atttcggcgt</span><br><span class=\"line\">      aatgttgatg attggggtta ttggaagatt tattataaaa gtaattaact cagaagaaga</span><br><span class=\"line\">      gacacatgat tcaaacaaat aaaatactct aataaaaatg gaagaagatt gcacttaagt</span><br><span class=\"line\">      gcaatcttct tccattttta ttgaaaattg attaaataat gttaatattg caattgtgtg</span><br><span class=\"line\">      gtgcagatta gggtgattat gtaatagggg gaaattaaaa atgatcaata cagcttggaa</span><br><span class=\"line\">      aattattaaa gcactacaaa aatacggtac aaaagcatac aatgttatca aaaaaggcgg</span><br><span class=\"line\">      ccaagcaatg tacgacagct tcatggcagc taaagctaaa ggttggacac atgcagcttg</span><br><span class=\"line\">      gtggctagta gaacatggtt caactttagg aacattctat gatttattaa aagctgctgg</span><br><span class=\"line\">      attaatcgac taattacagc aactaaacaa ctaaacaact aaacaactta aaaatacaaa</span><br><span class=\"line\">      ttaccctaaa ctgtacccct attacatatt aactaattat tttaaaggtt ggatgataat</span><br><span class=\"line\">      atgtcaaata acatcatatc tgtaaaaaat ttaattaaaa gcttcgataa caaaatagta</span><br><span class=\"line\">      ttagataaat taaatttcga aatgaaagaa aactccactg ttgtaataat aggtaaaaac</span><br><span class=\"line\">      ggtgcaggta aaagtgtctt tctaaattgt ttacttggat ttattcatta caaccaaggt</span><br><span class=\"line\">      tcaatactaa tagatggaca acctgtagaa aatcgattac atctccgcaa gattacatcg</span><br><span class=\"line\">      ttaatttctt cagaccatca agaacatcta aatttattaa cccccaatga atatttttct</span><br><span class=\"line\">      tttttacaag atatttacca actaaaaagt aataataaag acaaaattca aaattactca</span><br><span class=\"line\">     gaagatctat atgttactaa agaactcaat actgtatttt catcactttc ttttggaaca</span><br><span class=\"line\">     aaaaagaaaa tacaattaat tggtagccta ttatattctc ctaaattatt gatttgcgac</span><br><span class=\"line\">     gaaatatttg aagggcttga tacagactca gtaaaatggg ttaaaaactt atttcaacaa</span><br><span class=\"line\">     agaaaacaag aaaatctttc tactttattt acaactcata ttactgaaca tataacagat</span><br><span class=\"line\">     ataacagaaa aaaattacat acttgaaaat ggaaaattaa ttgtgtaagt ttaaccactt</span><br><span class=\"line\">     atatttaaag ctaaaattaa ggagcttaaa atatgaattt taatatatat aagagactat</span><br><span class=\"line\">     atgataaatc aacagaagaa aaaagcaaaa caataacaaa acaaatatta tttggaatta</span><br><span class=\"line\">     taaatagttc tatattaata ggtatactac tcacatgttt ggagattttc aactttaaaa</span><br><span class=\"line\">     tttcaactgt aatgtatggt tatttcacta tatatataat actagaactt ttactattat</span><br><span class=\"line\">     tctctgcaaa tcaactatat gaaagtacag aattcataat aaaattcctt aaatatacac</span><br><span class=\"line\">     caataaccat aaataaacta tatttctcac attttctaag ttctaaatat tcattttcca</span><br><span class=\"line\">     atctttttga aataataact ctcacatcaa ttttattaat atataatgtc gatatcttat</span><br><span class=\"line\">     attcatttat tttcataatt agcttacaaa ttattagctt aataagaaca tatttagaat</span><br><span class=\"line\">     ttttactatt atattctcaa aaaaaacagg ttaaaatttt tactctaacc cattttgttt</span><br><span class=\"line\">     tcataatatc tatggttttt tatattattg ttaaaacaaa atcgatagat ttagtattct</span><br><span class=\"line\">     ttgaaaacac aaatatgtta attatatctg ttcttctcat aacattcttg atatcacttt</span><br><span class=\"line\">     taacatataa acatattata gaatacttaa tgaaaaataa tgaaattgta tataatgcta</span><br><span class=\"line\">     tttttatcaa gttaactttt aacacagcta atttaattag taaattattt aaatttaata</span><br><span class=\"line\">     catcaattgc atctttaata aaaatacata taatacgatt attacgtaat caagactata</span><br><span class=\"line\">     taagtagatt actaaaaata ggaatattac tatttatttt ttcttctata agctttctat</span><br><span class=\"line\">     ttttcgataa atcatcaaca aacaatgaaa tgagtgatat actttacttt tcatttttta</span><br><span class=\"line\">     tttccttatt tagtttttct aacatacgat tagactataa cttagtttct aaattaagct</span><br><span class=\"line\">     tagaggatta tccaataaca aaattacaat caagattaag cattgatata gcacatggaa</span><br><span class=\"line\">     ttttactatt tatactatct ttatttcttt tattaacaca atacttattg aatccaacaa</span><br><span class=\"line\">     atattctaac tctaattgat ggtttattat catttatttg tttttatttt ctaagtcttg</span><br><span class=\"line\">     gtatagaaaa agcagatatt ataataacac caaaaacaaa atggaaaatg tatccattat</span><br><span class=\"line\">     tttttgtgat gggattaata attgaagcaa tatttctatt aaaattcaaa atatggataa</span><br><span class=\"line\">     aattaataac tttattcctt tgtatactgt ggtcatattt acgtgtttat tggaaattaa</span><br><span class=\"line\">     aaaaacaata aacacaatta aaaagttccc ttcatatttt ttgaagggaa cttttatttt</span><br><span class=\"line\">     aaacaaaaat tacaaacaag caaagttatt taaaagtaaa cttttaaaat tattgaatta</span><br><span class=\"line\">     ataacaatta gtctaagata tatcagccaa atttaatttt taaacaaacc gaaaaaccct</span><br><span class=\"line\">     ttccgttttt gtttctgatt ttggctctgt atttctctaa tgttttcaag caataactga</span><br><span class=\"line\">     tctcgttttt caaatttttt ctctataaaa acctctaatt caatattttt atcttctact</span><br><span class=\"line\">     tcctttaatt ttctctccgt attagccaaa tgttcttttg tggtaactaa ttcattcgta</span><br><span class=\"line\">     atctcttgta atttttgaac aagcgtttga ttgaactgat tttgtaattg ttgattttct</span><br><span class=\"line\">     aatacttcat ccaacttctt ttctaattcc gatttttcct ctcttgaaac aaacaaatca</span><br><span class=\"line\">     agttctccat tccgccatgc tcgaacttga tcataagacc atttttgcac ctgtattttt</span><br><span class=\"line\">     tctttaattg ctatcaattc ttctatattt tcctttgagt acctacgatg ccctccctga</span><br><span class=\"line\">     cttcgctccg tttgtatatt aaattcgttt gaccatgctt ttaacaagtc aggggtaatc</span><br><span class=\"line\">     cctaaacgat ccgcaacaat tttcggtgta tacatttctg attttaattc caa</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件2：描述基因特征的feature table文件（.tbl）</li>\n</ul>\n<p>该文件可以用prokka对文件1进行注释而得到，但是需要自己加以修改，加上文件前几行以及gene相关的信息，各列之间用制表符分隔。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Feature Toyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster</span><br><span class=\"line\">1\t8409\tsource</span><br><span class=\"line\">\t\t\torganism\tBacillus toyonensis</span><br><span class=\"line\">\t\t\tmol<span class=\"built_in\">_</span>type\tgenomic DNA</span><br><span class=\"line\">\t\t\tstrain\tXIN-YC13</span><br><span class=\"line\">585\t1\tgene</span><br><span class=\"line\">\t\t\tgene\torf1</span><br><span class=\"line\">585\t1\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00001</span><br><span class=\"line\">\t\t\tproduct\tMarR family transcriptional regulator</span><br><span class=\"line\">1476\t811\tgene</span><br><span class=\"line\">\t\t\tgene\torf2</span><br><span class=\"line\">1476\t811\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00002</span><br><span class=\"line\">\t\t\tproduct\tYIP1 family membrane protein</span><br><span class=\"line\">2710\t1496\tgene</span><br><span class=\"line\">\t\t\tgene\torf3</span><br><span class=\"line\">2710\t1496\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00003</span><br><span class=\"line\">\t\t\tproduct\tABC transporter permease</span><br><span class=\"line\">3387\t2707\tgene</span><br><span class=\"line\">\t\t\tgene\torf4</span><br><span class=\"line\">3387\t2707\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00004</span><br><span class=\"line\">\t\t\tproduct\tABC transporter ATP-binding protein</span><br><span class=\"line\">4595\t3384\tgene</span><br><span class=\"line\">\t\t\tgene\torf5</span><br><span class=\"line\">4595\t3384\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00005</span><br><span class=\"line\">\t\t\tproduct\tRND family efflux transporter, MFP subunit</span><br><span class=\"line\">4746\t4952\tgene</span><br><span class=\"line\">\t\t\tgene\torf6</span><br><span class=\"line\">4746\t4952\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00006</span><br><span class=\"line\">\t\t\tproduct\tHelix-turn-helix transcriptional regulator</span><br><span class=\"line\">5010\t5198\tgene</span><br><span class=\"line\">\t\t\tgene\torf7</span><br><span class=\"line\">5010\t5198\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00007</span><br><span class=\"line\">\t\t\tproduct\tPutative membrane protein</span><br><span class=\"line\">5337\t5549\tgene</span><br><span class=\"line\">\t\t\tgene\ttoyA</span><br><span class=\"line\">5337\t5549\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00008</span><br><span class=\"line\">\t\t\tproduct\tToyonsin precusor</span><br><span class=\"line\">5657\t6304\tgene</span><br><span class=\"line\">\t\t\tgene\torf9</span><br><span class=\"line\">5657\t6304\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00009</span><br><span class=\"line\">\t\t\tproduct\tABC transporter ATP-binding protein</span><br><span class=\"line\">6349\t7707\tgene</span><br><span class=\"line\">\t\t\tgene\torf10</span><br><span class=\"line\">6349\t7707\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00010</span><br><span class=\"line\">\t\t\tproduct\tPutative membrane protein</span><br><span class=\"line\">8391\t7849\tgene</span><br><span class=\"line\">\t\t\tgene\torf11</span><br><span class=\"line\">8391\t7849\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00011</span><br><span class=\"line\">\t\t\tproduct\tMarR family transcriptional regulator</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件3：描述作者信息的模板文件（.sbt）</li>\n</ul>\n<p>可以在<a href=\"https://submit.ncbi.nlm.nih.gov/genbank/template/submission/\">NCBI</a>上生成该文件。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Submit-block ::= &#123;</span><br><span class=\"line\">  contact &#123;</span><br><span class=\"line\">    contact &#123;</span><br><span class=\"line\">      name name &#123;</span><br><span class=\"line\">        last &quot;xin&quot;,</span><br><span class=\"line\">        first &quot;bingyue&quot;,</span><br><span class=\"line\">        middle &quot;&quot;,</span><br><span class=\"line\">        initials &quot;&quot;,</span><br><span class=\"line\">        suffix &quot;&quot;,</span><br><span class=\"line\">        title &quot;&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      affil std &#123;</span><br><span class=\"line\">        affil &quot;Huaibei Normal University&quot;,</span><br><span class=\"line\">        div &quot;College of Life Sciences&quot;,</span><br><span class=\"line\">        city &quot;Huaibei&quot;,</span><br><span class=\"line\">        sub &quot;Anhui&quot;,</span><br><span class=\"line\">        country &quot;China&quot;,</span><br><span class=\"line\">        street &quot;Dongshan road No.100&quot;,</span><br><span class=\"line\">        email &quot;xinbingyuex@163.com&quot;,</span><br><span class=\"line\">        postal-code &quot;235000&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  cit &#123;</span><br><span class=\"line\">    authors &#123;</span><br><span class=\"line\">      names std &#123;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          name name &#123;</span><br><span class=\"line\">            last &quot;Xin&quot;,</span><br><span class=\"line\">            first &quot;Bingyue&quot;,</span><br><span class=\"line\">            middle &quot;&quot;,</span><br><span class=\"line\">            initials &quot;&quot;,</span><br><span class=\"line\">            suffix &quot;&quot;,</span><br><span class=\"line\">            title &quot;&quot;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      affil std &#123;</span><br><span class=\"line\">        affil &quot;Huaibei Normal University&quot;,</span><br><span class=\"line\">        div &quot;College of Life Sciences&quot;,</span><br><span class=\"line\">        city &quot;Huaibei&quot;,</span><br><span class=\"line\">        sub &quot;Anhui&quot;,</span><br><span class=\"line\">        country &quot;China&quot;,</span><br><span class=\"line\">        street &quot;Dongshan road No.100&quot;,</span><br><span class=\"line\">        postal-code &quot;235000&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  subtype new</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= pub &#123;</span><br><span class=\"line\">  pub &#123;</span><br><span class=\"line\">    gen &#123;</span><br><span class=\"line\">      cit &quot;unpublished&quot;,</span><br><span class=\"line\">      authors &#123;</span><br><span class=\"line\">        names std &#123;</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name name &#123;</span><br><span class=\"line\">              last &quot;Xin&quot;,</span><br><span class=\"line\">              first &quot;Bingyue&quot;,</span><br><span class=\"line\">              middle &quot;&quot;,</span><br><span class=\"line\">              initials &quot;&quot;,</span><br><span class=\"line\">              suffix &quot;&quot;,</span><br><span class=\"line\">              title &quot;&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      title &quot;Purification and characterization of a novel leaderless bacteriocin, toyoncin, produced by Bacillus toyonensis XIN-YC13 that specifically active against Bacilus cereus and Listeria monocytogenes&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= user &#123;</span><br><span class=\"line\">  type str &quot;Submission&quot;,</span><br><span class=\"line\">  data &#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      label str &quot;AdditionalComment&quot;,</span><br><span class=\"line\">      data str &quot;ALT EMAIL:xinbingyuex@163.com&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= user &#123;</span><br><span class=\"line\">  type str &quot;Submission&quot;,</span><br><span class=\"line\">  data &#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      label str &quot;AdditionalComment&quot;,</span><br><span class=\"line\">      data str &quot;Submission Title:None&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>注意</strong>：文件1和文件2的序列描述信息必须一致，此例中均为“Toyoncin_biosynthesis_gene_cluster”。</p>\n<h1 id=\"文件生成\"><a href=\"#文件生成\" class=\"headerlink\" title=\"文件生成\"></a>文件生成</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tbl2asn -t template.sbt -p ./ -V vb -x .fna</span><br></pre></td></tr></table></figure>\n\n<p>-t 模板文件<br>-p 输入文件所在路径<br>-V<br>  -v 生成验证文件，保存错误信息<br>  -b 生成gbf文件<br>-x 文件1（FASTA文件）的后缀名，根据实际情况填写</p>\n<p><strong>注意</strong>：如果用Prokka带的tbl2asn，生成的sqn和gbf文件中的日期通常是1-JAN-2019，需要自己手动改正为当前时间，这是因为Prokka里的tbl2asn是经过修改的。建议使用官方版的<a href=\"https://ftp.ncbi.nih.gov/toolbox/ncbi_tools/converters/by_program/tbl2asn/\">tbl2asn</a>，可避免日期错误。</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://www.ncbi.nlm.nih.gov/genbank/tbl2asn2/\">tbl2asn</a></li>\n<li><a href=\"http://www.chenlianfu.com/?p=2171\">上传基因组数据到NCBI</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"NCBI","path":"api/tags/NCBI.json"},{"name":"序列处理","path":"api/tags/序列处理.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"Nanopore基因组组装","slug":"Nanopore基因组组装","date":"2022-02-26T02:37:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Nanopore基因组组装.json","excerpt":null,"keywords":null,"cover":"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png","content":"<h1 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mamba install miniasm minipolish raven-assembler flye medaka python=3.8 fastp bwa masurca trycycler</span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/rrwick/Minipolish.git</span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/rrwick/Polypolish.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Polypolish</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install cargo</span><br><span class=\"line\">cargo build --release</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Step-1-Generating-assemblies\"><a href=\"#Step-1-Generating-assemblies\" class=\"headerlink\" title=\"Step 1: Generating assemblies\"></a>Step 1: <a href=\"https://github.com/rrwick/Trycycler/wiki/Generating-assemblies\">Generating assemblies</a></h1><h2 id=\"准备三代数据\"><a href=\"#准备三代数据\" class=\"headerlink\" title=\"准备三代数据\"></a>准备三代数据</h2><p>如果是含有多个文件的话，需要合并到一个文件里</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> WHQ17/barcode14/*.fastq &gt; WHQ17.fastq</span><br></pre></td></tr></table></figure>\n<h2 id=\"质控\"><a href=\"#质控\" class=\"headerlink\" title=\"质控\"></a>质控</h2><p>This will discard short reads (less than 1 kbp) and very bad reads (the worst 5%)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filtlong --min_length 1000 --keep_percent 95 WHQ17.fastq &gt; WHQ17.good.fastq</span><br></pre></td></tr></table></figure>\n<h2 id=\"取子集-Subsampling-reads\"><a href=\"#取子集-Subsampling-reads\" class=\"headerlink\" title=\"取子集 Subsampling reads\"></a>取子集 Subsampling reads</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler subsample --reads WHQ17.good.fastq --out_dir read_subsets --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--count: 输出的Reads子集的数量，大部分情况使用默认的12即可。</li>\n<li>--genome_size: 预估的基因组大小 (e.g. –genome_size 5.5m)。不提供的话会通过miniasm 组装基因组，以估计大小，但是速度会慢。此值用于计算reads深度，不需要很精确，10%的错误是允许的。</li>\n<li>--min_read_depth: 允许的最小read深度，控制着取子集的深度。</li>\n<li>--threads: 使用的线程数（越大越好），影响miniasm 的组装速度。<br>+++</li>\n</ul>\n<p><strong>得到</strong>：<code>read_subsets/sample_*.fastq</code></p>\n<h2 id=\"组装-Generating-assemblies\"><a href=\"#组装-Generating-assemblies\" class=\"headerlink\" title=\"组装 Generating assemblies\"></a>组装 Generating assemblies</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">threads=6  <span class=\"comment\"># change as appropriate for your system</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> assemblies</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_01.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_01 &amp;&amp; <span class=\"built_in\">cp</span> assembly_01/assembly.fasta assemblies/assembly_01.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_01</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_02.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_02.gfa &amp;&amp; any2fasta assembly_02.gfa &gt; assemblies/assembly_02.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_02.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_03.fastq &gt; assemblies/assembly_03.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_04.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_04 &amp;&amp; <span class=\"built_in\">cp</span> assembly_04/assembly.fasta assemblies/assembly_04.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_04</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_05.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_05.gfa &amp;&amp; any2fasta assembly_05.gfa &gt; assemblies/assembly_05.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_05.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_06.fastq &gt; assemblies/assembly_06.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_07.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_07 &amp;&amp; <span class=\"built_in\">cp</span> assembly_07/assembly.fasta assemblies/assembly_07.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_07</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_08.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_08.gfa &amp;&amp; any2fasta assembly_08.gfa &gt; assemblies/assembly_08.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_08.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_09.fastq &gt; assemblies/assembly_09.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_10.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_10 &amp;&amp; <span class=\"built_in\">cp</span> assembly_10/assembly.fasta assemblies/assembly_10.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_10</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_11.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_11.gfa &amp;&amp; any2fasta assembly_11.gfa &gt; assemblies/assembly_11.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_11.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_12.fastq &gt; assemblies/assembly_12.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br></pre></td></tr></table></figure>\n\n<p><strong>得到</strong>：<code>assemblies/*.fasta</code></p>\n<p><strong>删除中间文件：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -r read_subsets</span><br></pre></td></tr></table></figure>\n<h1 id=\"Step-2-Clustering-contigs\"><a href=\"#Step-2-Clustering-contigs\" class=\"headerlink\" title=\"Step 2: Clustering contigs\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Clustering-contigs\">Step 2: Clustering contigs</a></h1><h2 id=\"Running-Trycycler-cluster\"><a href=\"#Running-Trycycler-cluster\" class=\"headerlink\" title=\"Running Trycycler cluster\"></a>Running Trycycler cluster</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler cluster --assemblies assemblies/*.fasta --reads WHQ17.good.fastq --out_dir trycycler --threads 10</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--min_contig_len: 最小contig长度（默认1000），短于该长度的contigs将被丢弃。如果你的基因组含有长度更小的质粒，将该值设低。</li>\n<li>--min_contig_depth: 覆盖contigs的reads的最低深度。For example, if an assembly has a mean depth of 90× and this setting is 0.1 (the default), then any contig with &lt;9× depth will be removed.</li>\n<li>--distance: this is the Mash distance threshold used when defining clusters, and the default threshold is 0.01. Smaller thresholds (e.g. 0.005) can result in a larger number of tighter clusters. Larger thresholds (e.g. 0.02) can result in a smaller number of looser clusters.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><ul>\n<li><code>trycycler/contigs.phylip</code>: a matrix of the Mash distances between all contigs in PHYLIP format.</li>\n<li><code>trycycler/contigs.newick</code>: a FastME tree of the contigs built from the distance matrix. This can be visualised in a phylogenetic tree viewer such as FigTree, Dendroscope or Archaeopteryx.</li>\n<li>One directory for each of the clusters: <code>trycycler/cluster_001, trycycler/cluster_002, etc</code>. These directories will each contain a subdirectory named 1_contigs which includes the FASTA files for the contigs in the cluster.</li>\n</ul>\n<h2 id=\"筛选-clusters\"><a href=\"#筛选-clusters\" class=\"headerlink\" title=\"筛选 clusters\"></a><font color=\"#FF0000\">筛选 clusters</font></h2><p>将<code>contigs.newick</code>导入进化树查看软件，肉眼观察，主观意愿挑选，有问题的cluster删掉。参照<a href=\"https://github.com/rrwick/Trycycler/wiki/Clustering-contigs\">Trycycler官方说明</a>。</p>\n<h1 id=\"Step-3-Reconciling-contigs\"><a href=\"#Step-3-Reconciling-contigs\" class=\"headerlink\" title=\"Step 3: Reconciling contigs\"></a>Step 3: <a href=\"https://github.com/rrwick/Trycycler/wiki/Reconciling-contigs\">Reconciling contigs</a></h1><h2 id=\"Running-Trycycler-reconcile\"><a href=\"#Running-Trycycler-reconcile\" class=\"headerlink\" title=\"Running Trycycler reconcile\"></a>Running Trycycler reconcile</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_001 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_002 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_003 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_004 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_005 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_006 --threads 10</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析<br>General settings:</p>\n<ul>\n<li>--linear: use this option if your input contigs are not circular. It will disable the circularisation-correction steps in Trycycler reconcile.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.</li>\n<li>--verbose: use this flag to display extra output. Mainly there for debugging purposes.</li>\n</ul>\n<p>Initial check:</p>\n<ul>\n<li>--max_mash_dist: if any of the sequences have a pairwise Mash distance of more than this (default &#x3D; 0.02), then the contigs will fail the initial check.</li>\n<li>--max_length_diff: if any of the sequences have a pairwise relative length factor of more than this, then the contigs will fail the initial check. For example, if set to 1.1 (the default), then no contig can be more than 10% longer than any other.</li>\n</ul>\n<p>Circularisation:</p>\n<ul>\n<li>--max_add_seq and –max_add_seq_percent: these control how much sequence Trycycler is willing to add to a contig to circularise it. For example, if they are set to 1000 and 5 (the defaults), then Trycycler will be willing to add up to 1000 bp or 5% of a contig’s length (whichever is smaller) to circularise it. Any contig which requires more than 1000 bp or 5% of its length added to circularise will cause Trycycler reconcile to fail.</li>\n<li>--max_trim_seq and –max_trim_seq_percent: these control how much sequence Trycycler is willing to remove from a contig to circularise it. For example, if they are set to 50000 and 10 (the defaults), then Trycycler will be willing to remove up to 50000 bp or 10% of a contig’s length (whichever is smaller) to circularise it. Any contig which requires more than 50000 bp or 10% of its length removed to circularise will cause Trycycler reconcile to fail.</li>\n</ul>\n<p>Final check:</p>\n<ul>\n<li>--min_identity: if any of the sequences have a pairwise global alignment percent identity of less than this (default &#x3D; 98), then the contigs will fail the final check.</li>\n<li>--max_indel_size: if any of the sequences have a pairwise alignment indel size of more than this (default &#x3D; 250), then the contigs will fail the final check.<br>+++</li>\n</ul>\n<h2 id=\"输出-1\"><a href=\"#输出-1\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, Trycycler reconcile will make <code>2_all_seqs.fasta</code> in the cluster directory, a multi-FASTA file containing each of the contigs ready for multiple sequence alignment.</p>\n<h2 id=\"Dotplots\"><a href=\"#Dotplots\" class=\"headerlink\" title=\"Dotplots\"></a>Dotplots</h2><p>You can optionally run Trycycler dotplot on any problematic clusters to visualise the relationship between the sequences. For example:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler dotplot --cluster_dir trycycler/cluster_002</span><br></pre></td></tr></table></figure>\n\n<p>This will create an image file (dotplots.png) in the cluster directory with a dotplot for all pairwise combinations of sequences. Same-strand k-mer matches are drawn in blue, and opposite-strand k-mer matches are drawn in red. For example:</p>\n<p><img src=\"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png\" class=\"lazyload placeholder\" data-srcset=\"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Dotplot\"><br>In the above example (taken from cluster 2 of the good demo dataset), you can see that most of the sequences are in very nice agreement with each other. They have shifted start positions relative to each other, but that’s expected for contigs of a circular sequence. One of the contigs (E_contig_2) is on the opposite strand as the others, but that too is normal. Sequence D_contig_2, however, is a problem! It contains two entire copies of the same sequence, visible in the dotplot with itself and the dotplots with other sequences. It will need to be excluded or trimmed in order for reconciliation to succeed.</p>\n<h1 id=\"Step-4-Multiple-sequence-alignment\"><a href=\"#Step-4-Multiple-sequence-alignment\" class=\"headerlink\" title=\"Step 4: Multiple sequence alignment\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Multiple-sequence-alignment\">Step 4: Multiple sequence alignment</a></h1><h2 id=\"Running-Trycycler-msa\"><a href=\"#Running-Trycycler-msa\" class=\"headerlink\" title=\"Running Trycycler msa\"></a>Running Trycycler msa</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_001 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_002 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_003 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_004 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_005 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_006 --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析<br>除了线程数外，其他三个参数可以用默认值。</p>\n<ul>\n<li>--kmer: the k-mer size used for sequence partitioning (default &#x3D; 32).</li>\n<li>--step: the step size used for sequence partitioning (default &#x3D; 1000).</li>\n<li>--lookahead: the look-ahead margin used for sequence partitioning (default &#x3D; 10000).</li>\n<li>--threads: this is how many parallel instances of MUSCLE will be used when aligning the sequence partitions. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出-2\"><a href=\"#输出-2\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, Trycycler reconcile will make a <code>3_msa.fasta</code> file in the cluster directory, a FASTA-formatted multiple sequence alignment of the contigs ready for use in generating a consensus. </p>\n<h1 id=\"Step-5-Partitioning-reads\"><a href=\"#Step-5-Partitioning-reads\" class=\"headerlink\" title=\"Step 5: Partitioning reads\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Partitioning-reads\">Step 5: Partitioning reads</a></h1><h2 id=\"Running-Trycycler-partition\"><a href=\"#Running-Trycycler-partition\" class=\"headerlink\" title=\"Running Trycycler partition\"></a>Running Trycycler partition</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler partition --reads WHQ17.good.fastq --cluster_dirs trycycler/cluster_* --threads 8</span><br></pre></td></tr></table></figure>\n\n<p>+++ info 参数解析</p>\n<ul>\n<li>--min_aligned_len: reads with less than this many bases aligned (default &#x3D; 1000) will be ignored.</li>\n<li>--min_read_cov: reads with less than this percentage of their length covered by alignments (default &#x3D; 90.0) will be ignored.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出-3\"><a href=\"#输出-3\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>After Trycycler partition completes, each of the cluster directories should have a <code>4_reads.fastq</code> file which contains its share of the total reads.</p>\n<h1 id=\"Step-6-Generating-a-consensus\"><a href=\"#Step-6-Generating-a-consensus\" class=\"headerlink\" title=\"Step 6: Generating a consensus\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Generating-a-consensus\">Step 6: Generating a consensus</a></h1><h2 id=\"Running-Trycycler-consensus\"><a href=\"#Running-Trycycler-consensus\" class=\"headerlink\" title=\"Running Trycycler consensus\"></a>Running Trycycler consensus</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_001 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_002 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_003 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_004 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_005 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_006 --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--linear: use this option if your input contigs are not circular. It will disable the circularisation steps when aligning reads and choosing variants.</li>\n<li>--min_aligned_len: reads with less than this many bases aligned (default &#x3D; 1000) will be ignored.</li>\n<li>--min_read_cov: reads with less than this percentage of their length aligned (default &#x3D; 90.0) will be ignored.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.</li>\n<li>--verbose: use this flag to display extra output. For every read-assessed variant, this will show the alternative sequences and their read alignment scores.<br>+++</li>\n</ul>\n<h2 id=\"输出-4\"><a href=\"#输出-4\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, you should have a <code>7_final_consensus.fasta</code> file in each of your cluster directories. If you have multiple clusters, you can combine their consensus sequences into a single FASTA file like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> trycycler/cluster_*/7_final_consensus.fasta &gt; trycycler/consensus.fasta</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Step-7-Polishing-after-Trycycler\"><a href=\"#Step-7-Polishing-after-Trycycler\" class=\"headerlink\" title=\"Step 7: Polishing after Trycycler\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Polishing-after-Trycycler\">Step 7: Polishing after Trycycler</a></h1><h2 id=\"Medaka-需要知道测序仪信息basecalling\"><a href=\"#Medaka-需要知道测序仪信息basecalling\" class=\"headerlink\" title=\"Medaka (需要知道测序仪信息basecalling)\"></a>Medaka (需要知道测序仪信息basecalling)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> trycycler/cluster_*; <span class=\"keyword\">do</span></span><br><span class=\"line\">    medaka_consensus -i <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/4_reads.fastq -d <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/7_final_consensus.fasta -o <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka -m r941_prom_hac_g507 -t 8</span><br><span class=\"line\">    <span class=\"built_in\">mv</span> <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka/consensus.fasta <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/8_medaka.fasta</span><br><span class=\"line\">    <span class=\"built_in\">rm</span> -r <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/*.fai <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/*.mmi  <span class=\"comment\"># clean up</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> trycycler/cluster_*/8_medaka.fasta &gt; trycycler/consensus.fasta</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Short-read-polishing\"><a href=\"#Short-read-polishing\" class=\"headerlink\" title=\"Short-read polishing\"></a>Short-read polishing</h2><h3 id=\"Step-1-read-QC\"><a href=\"#Step-1-read-QC\" class=\"headerlink\" title=\"Step 1: read QC\"></a>Step 1: read QC</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastp --in1 WHQ17_BDMS190038054-1a_1.clean.fq.gz --in2 WHQ17_BDMS190038054-1a_2.clean.fq.gz --out1 WHQ17_1.fastq.gz --out2 WHQ17_2.fastq.gz --unpaired1 WHQ17_u.fastq.gz --unpaired2 WHQ17-u.fastq.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Step-2-Polypolish\"><a href=\"#Step-2-Polypolish\" class=\"headerlink\" title=\"Step 2: Polypolish\"></a>Step 2: Polypolish</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bwa index trycycler/consensus.fasta</span><br><span class=\"line\">bwa mem -t 8 -a trycycler/consensus.fasta WHQ17_1.fastq.gz &gt; alignments_1.sam</span><br><span class=\"line\">bwa mem -t 8 -a trycycler/consensus.fasta WHQ17_2.fastq.gz &gt; alignments_2.sam</span><br><span class=\"line\">polypolish trycycler/consensus.fasta alignments_1.sam alignments_2.sam &gt; trycycler/polypolish.fasta</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Step-3-POLCA\"><a href=\"#Step-3-POLCA\" class=\"headerlink\" title=\"Step 3: POLCA\"></a>Step 3: POLCA</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这一步报错，暂未执行</span></span><br><span class=\"line\">polca.sh -a trycycler/polypolish.fasta -r <span class=\"string\">&quot;WHQ17_1.fastq.gz WHQ17_2.fastq.gz&quot;</span> -t 8 -m 10G</span><br><span class=\"line\"><span class=\"built_in\">mv</span> *.PolcaCorrected.fa polypolish_polca.fasta</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"删除无用信息\"><a href=\"#删除无用信息\" class=\"headerlink\" title=\"删除无用信息\"></a>删除无用信息</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> alignments_1.sam alignments_2.sam fastp.*</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf *.read_subsets</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"OrthoFinder2—同源蛋白家族聚类","slug":"OrthoFinder2—同源蛋白家族聚类","date":"2019-03-20T02:42:16.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/OrthoFinder2—同源蛋白家族聚类.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png","content":"<p>寻找同源蛋白家族用的比较多的是Orthomcl，但是该软件多年前已经停止更新，且使用的时候需要安装和使用MySQL，操作起来比较繁琐。因此OrthoFinder应运而生，并且更新到版本2。后者不但可以寻找同源家族，并且可以构建基因家族进化树。</p>\n<span id=\"more\"></span>\n<ol>\n<li>OrthoFinder及依赖包的安装</li>\n</ol>\n<ul>\n<li>下载<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/davidemms/OrthoFinder/releases/download/v2.2.7/OrthoFinder-2.2.7.tar.gz</span><br></pre></td></tr></table></figure></li>\n<li>解压<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf OrthoFinder-2.2.7.tar.gz</span><br></pre></td></tr></table></figure></li>\n<li>安装（加入环境变量即可）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/tools/OrthoFinder-2.2.7</span><br><span class=\"line\"></span><br><span class=\"line\">Esc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">shift</span> + ;</span><br><span class=\"line\"></span><br><span class=\"line\">wq!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n依赖包</li>\n</ul>\n<p>（1）<a href=\"url:https://github.com/bbuchfink/diamond/releases\">DIAMOND</a></p>\n<p>下载对应版本，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/bbuchfink/diamond/releases/download/v0.9.24/diamond-linux64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar xzf diamond-linux64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> diamond /usr/local/bin</span><br></pre></td></tr></table></figure>\n\n<p>没有root权限的可以把diamond所在目录加入环境变量。</p>\n<p>(2) <a href=\"url:https://github.com/soedinglab/MMseqs2/releases\">MMseqs2</a></p>\n<p>下载对应版本，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/soedinglab/MMseqs2/releases/download/7-4e23d/MMseqs2-Linux-AVX2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar xzf MMseqs2-Linux-AVX2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> mmseqs2/bin/mmseqs /usr/local/bin</span><br></pre></td></tr></table></figure>\n\n<p>(3) <a href=\"url:http://micans.org/mcl/\">MCL</a></p>\n<ul>\n<li><p>Ubuntu, Debian, Linux Mint安装方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mcl</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Centos, Redhat安装方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://micans.org/mcl/src/mcl-latest.tar.gz</span><br><span class=\"line\">tar zxvf mcl-latest.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> mcl-14-137（视具体情况而定）</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make check</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p>(4) <a href=\"url:http://www.atgc-montpellier.fr/fastme/binaries.php\">FastME</a></p>\n</li>\n</ul>\n<p>下载二进制文件，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.atgc-montpellier.fr/download/sources/fastme/fastme-2.1.5.tar.gz</span><br><span class=\"line\">tar zxvf fastme-2.1.5.tar.gz</span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> fastme-2.1.5/binaries/fastme-2.1.5-linux64 /usr/local/bin/fastme</span><br></pre></td></tr></table></figure>\n<p>(5) 可选: <a href=\"url:ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/\">BLAST+</a></p>\n<ul>\n<li>Ubuntu, Debian, Linux Mint安装方法：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ncbi-blast+</span><br></pre></td></tr></table></figure></li>\n<li>Centos, Redhat安装方法：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.8.1+-x64-linux.tar.gz</span><br><span class=\"line\">tar zxvf ncbi-blast-2.8.1+-x64-linux.tar.gz</span><br><span class=\"line\">vim ~/.bashrc</span><br><span class=\"line\">i</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/tools/ncbi-blast-2.8.1+/bin</span><br><span class=\"line\">Esc</span><br><span class=\"line\"><span class=\"built_in\">shift</span> + ;</span><br><span class=\"line\">wq!</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"2\">\n<li>运行 OrthoFinder<br>(1) 运行示例数据：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> OrthoFinder-2.2.7</span><br><span class=\"line\">orthofinder -f ExampleData</span><br></pre></td></tr></table></figure>\n运行结果如下，会显示输出文件的路径，表明运行成功：</li>\n</ol>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"示例数据运行结果\"></p>\n<p>(2) 运行自己的数据：</p>\n<ul>\n<li>step1：数据准备</li>\n</ul>\n<p>下载氨基酸序列，要求为fasta格式，每个物种一个文件。将所有fasta文件存于一个目录中（如Data目录），如下图所示。文件名要简洁并有区分性，因为文件名会作为最终的物种ID。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder02.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder02.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"目录结构与文件准备\"></p>\n<ul>\n<li>step2：运行程序</li>\n</ul>\n<p>在Data目录的上一级目录打开终端，运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orthofinder -f Data -t 线程数</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>结果解读</li>\n</ol>\n<p>(1) Results Files: Orthogroups</p>\n<p>包含一个主文件“Orthogroups.csv”和两个支持文件：</p>\n<ul>\n<li><p>Orthogroups.csv，每一行为一个group，每一列为一个物种，行列交汇处为基因名称。</p>\n</li>\n<li><p>Orthogroups_UnassignedGenes.csv，包含所有未分配到任何group的基因名称。</p>\n</li>\n<li><p>Orthogroups.txt，OrthoMCL格式的输出结果，内容等同于Orthogroups.csv。</p>\n</li>\n</ul>\n<p>（2）Results Files: Orthogroup Statistics</p>\n<p>包含一些统计数据，可用于比较基因组分析、绘图以及质控。</p>\n<ul>\n<li><p>Statistics_Overall.csv和Statistics_PerSpecies.csv，提供基本的描述信息</p>\n</li>\n<li><p>Orthogroups_SpeciesOverlaps.csv，两两物种的group共享矩阵</p>\n</li>\n<li><p>Species-specific orthogroup：该group仅包含一个物种的基因。</p>\n</li>\n<li><p>G50：group中的基因数，使得50％的基因处于该大小或更大的group中。</p>\n</li>\n<li><p>O50：最小数量的group，使得50％的基因处于该大小或更大的group中。</p>\n</li>\n<li><p>Single-copy orthogroup：每个物种中只有一个基因的group（相当于单拷贝核心基因）。这些group是构建物种树和许多其他分析的理想选择。</p>\n</li>\n<li><p>Unassigned gene：未与任何其他基因划分到一个group的基因。</p>\n</li>\n</ul>\n<p>(3) Results Files: Orthologues</p>\n<p>两两物种间的直系同源基因，每一行为一个group，第一列为group编号，第二列为第一个物种的基因，第三列为第二个物种的基因。同一物种的基因名以“,”分割。直向同源物可以是一对一，一对多或多对多。</p>\n<p>(4) Results Files: Gene Trees and Species Tree</p>\n<p>每个group的基因树和定根的物种树以newick格式输出，可以用各种看树软件展示，如MEGA、iTOL、Dendroscope和FigTree等，个人推荐用iTOL。</p>\n<ol start=\"4\">\n<li>高级用法</li>\n</ol>\n<p>（1）添加新物种到之前的分析<br>（previous_orthofinder_directory指的是包含“SpeciesIDs.txt”的目录）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orthofinder -b previous_orthofinder_directory -f new_fasta_directory</span><br></pre></td></tr></table></figure>\n<p>（2）从之前的分析中移除物种</p>\n<p>从输出目录下找到工作目录“WorkingDirectory”中的“SpeciesIDs.txt”文件，在要移除的物种那一行最前面加上一个“#”并保存，然后运行（previous_orthofinder_directory指的是包含“SpeciesIDs.txt”的目录）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orthofinder -b previous_orthofinder_directory</span><br></pre></td></tr></table></figure>\n<p>（3）同时添加和删除物种</p>\n<p>编辑好“SpeciesIDs.txt”后，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orthofinder -b previous_orthofinder_directory -f new_fasta_directory</span><br></pre></td></tr></table></figure>\n<p>（4）更多高级功能请阅读官方文档<br>主要包括“Inferring MSA Gene Trees”、并行计算、单独运行BLAST、使用预先计算的BLAST结果以及回归检测。</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"同源家族","path":"api/tags/同源家族.json"}]},{"title":"PGCGAP - the Prokaryotic Genomics and Comparative Genomics Analysis Pipeline v1.0.33","slug":"PGCGAP-v1.0.33","date":"2022-03-15T11:14:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/PGCGAP-v1.0.33.json","excerpt":null,"keywords":null,"cover":"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green","content":"<table>\n<thead>\n<tr>\n<th><img src=\"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></th>\n<th><a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/liaochenlanruo/pgcgap\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/github/license/liaochenlanruo/pgcgap\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"License\"></a></th>\n<th><a href=\"https://anaconda.org/bioconda/pgcgap\"><img src=\"https://anaconda.org/bioconda/pgcgap/badges/version.svg\" class=\"lazyload placeholder\" data-srcset=\"https://anaconda.org/bioconda/pgcgap/badges/version.svg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"GitHubversion\"></a></th>\n<th><img src=\"https://img.shields.io/conda/dn/bioconda/pgcgap.svg?style=flat\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/conda/dn/bioconda/pgcgap.svg?style=flat\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></th>\n<th><a href=\"http://bioconda.github.io/recipes/pgcgap/README.html\"><img src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"install with bioconda\"></a></th>\n<th><a href=\"//shang.qq.com/wpa/qunwpa?idkey=fd4637eecd73bf0a5a8caa274843a07afdf1fbbc40a86630df5d4b029749cc7b\"><img src=\"https://pub.idqqimg.com/wpa/images/group.png\" class=\"lazyload placeholder\" data-srcset=\"https://pub.idqqimg.com/wpa/images/group.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅\" title=\"945751012\"></a></th>\n</tr>\n</thead>\n</table>\n<p><center>\n<script type=\"text/javascript\" src=\"//rf.revolvermaps.com/0/0/4.js?i=0ett3z77b0x&amp;m=0&amp;h=128&amp;c=ff0000&amp;r=0\" async=\"async\"></script>\n&nbsp;&nbsp;&nbsp;&nbsp;\n<script type=\"text/javascript\" src=\"//rf.revolvermaps.com/0/0/0.js?i=0ett3z77b0x&amp;d=3&amp;p=1&amp;b=1&amp;w=293&amp;g=2&amp;f=arial&amp;fs=13&amp;r=0&amp;c0=ff8a00&amp;c1=0006ff&amp;c2=000000&amp;ic0=0&amp;ic1=0\" async=\"async\"></script>\n</center></p>\n\n<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/post/848f.html\">中文说明</a></p>\n<pre><code>      ____       ____      ____     ____       _        ____    \n    U|  _&quot;\\ u U /&quot;___|u U /&quot;___| U /&quot;___|u U  /&quot;\\  u  U|  _&quot;\\ u \n    \\| |_) |/ \\| |  _ / \\| | u   \\| |  _ /  \\/ _ \\/   \\| |_) |/ \n     |  __/    | |_| |   | |/__   | |_| |   / ___ \\    |  __/   \n     |_|        \\____|    \\____|   \\____|  /_/   \\_\\   |_|      \n     ||&gt;&gt;_      _)(|_    _// \\\\    _)(|_    \\\\    &gt;&gt;   ||&gt;&gt;_    \n    (__)__)    (__)__)  (__)(__)  (__)__)  (__)  (__) (__)__)   \n</code></pre>\n<h2 id=\"Multi-version-instructions-This-one-for-the-latest-version\"><a href=\"#Multi-version-instructions-This-one-for-the-latest-version\" class=\"headerlink\" title=\"Multi-version instructions (This one for the latest version)\"></a>Multi-version instructions (This one for the latest version)</h2><hr>\n<ul>\n<li><a href=\"./index-v1.0.29.html\">Instructions for V1.0.29</a></li>\n<li><a href=\"./index-v1.0.32.html\">Instructions for V1.0.32</a></li>\n<li><a href=\"./index.html\">Instructions for the latest version</a></li>\n</ul>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><hr>\n<p>PGCGAP is a pipeline for prokaryotic comparative genomics analysis. It can take the pair-end reads, ONT reads or PacBio reads as input. In addition to genome assembly, gene prediction and annotation, it can also get common comparative genomics analysis results such as phylogenetic trees of single-core proteins and core SNPs, pan-genome, whole-genome Average Nucleotide Identity (ANI), orthogroups and orthologs, COG annotations, substitutions (SNPs) and insertions&#x2F;deletions (indels), and antimicrobial and virulence genes mining with only one line of commands. <strong><u>To follow this document, please upgrade PGCGAP to version v1.0.33 or later</u></strong>.</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><hr>\n<p>The software was tested successfully on Windows WSL, Linux x64 platform, and macOS. Because this software relies on a large number of other software, so it is recommended to install with <strong><a href=\"https://bioconda.github.io/index.html\">Bioconda</a></strong>.</p>\n<p><strong>Step1: Install PGCGAP</strong></p>\n<ul>\n<li><p>Method 1: use mamba to install PGCGAP</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install mamba first</span></span><br><span class=\"line\">conda install mamba</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Usually specify the latest version of PGCGAP (v1.0.33 is coming soon)</span></span><br><span class=\"line\">mamba create -n pgcgap pgcgap=1.0.33</span><br></pre></td></tr></table></figure>\n\n<p>  <strong>Notice</strong>: <u>I had submitted the latest version (v1.0.33) of the Bioconda recipe for PGCGAP for a test. However, Bioconda moved to a new test server which allocated very little memory, causing the test to fail. As a result, I had to remove some dependencies from the Bioconda recipe to pass the test, so after installing the main program of PGCGAP v1.0.33 through Conda, users still need to install some dependencies (Installing V1.0.32 and previous versions does not require an additional dependency package installation). This situation will be resolved soon with the release of Conda v4.12 as Bioconda will switch to the less memory-consuming Mamba for recipe testing. After that, users will still be able to install PGCGAP and its dependencies just using the above commands.</u> However, at present, after the previous step, the user needs to execute the following command to complete the installation of the dependency packages:</p>\n<p>  当安装PGCGAP v1.0.33的时候还需要单独安装依赖包，这是由于Bioconda换了新的测试服务器。我在提交最新版本的recipe并进行测试的时候，服务器仅分配了极小的内存，导致测试失败。因此，我不得不从Bioconda recipe中移除一些依赖包以通过测试。所以，在通过conda安装完PGCGAP的主程序后，还需要安装一些依赖包。这种状况将在不久的将来得到解决，即随着conda v4.12释放以后，Bioconda将转用耗费内存更小的mamba来进行recipe的测试，此后，用户仍可通过上述命令完成PGCGAP和其依赖包的安装。目前，在执行完上一步操作之后，用户还需要执行下面这条命令完成依赖包的安装（当然，安装v1.0.32及以前的版本不需要单独再安装依赖包了）：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate pgcgap</span><br><span class=\"line\">mamba install -y abricate canu roary orthofinder fastani fastp snippy sickle-trim unicycler perl-file-copy-recursive prokka pal2nal mash trimal</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Method 2: use &quot;environment.yaml&quot;. Run the following commands to download the <a href=\"https://bcam.hzau.edu.cn/PGCGAP/conda/pgcgap_latest_env.yml\">latest environmental file</a> and install PGCGAP:</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install mamba first</span></span><br><span class=\"line\">conda install mamba</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download pgcgap_latest_env.yml</span></span><br><span class=\"line\">wget --no-check-certificate https://bcam.hzau.edu.cn/PGCGAP/conda/pgcgap_latest_env.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class=\"line\">mamba <span class=\"built_in\">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>Step2: Setup COG database</strong> (Users should execute this after the first installation of pgcgap)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate pgcgap</span><br><span class=\"line\">pgcgap --setup-COGdb</span><br><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure>\n\n<p>Users with <a href=\"https://hub.docker.com/\">docker container</a> installed have another choice to install PGCGAP.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n\n<p>(see <a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">pgcgap&#x2F;tags</a> for valid values for &lt;tag&gt;)</p>\n<h2 id=\"Required-dependencies\"><a href=\"#Required-dependencies\" class=\"headerlink\" title=\"Required dependencies\"></a>Required dependencies</h2><hr>\n<ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org/\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><hr>\n<ul>\n<li><p><strong>Print the help messages:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Check for update:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --check-update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>General usage:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap [modules] [options]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Show parameters for each module:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Show examples of each module:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap Examples</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Setup COG database:</strong> (Users should execute this after the first installation of pgcgap)</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --setup-COGdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Modules:</strong></p>\n<ul>\n<li><p><strong>[--All]</strong> Perform Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH, AntiRes and pCOG functions with one command</p>\n</li>\n<li><p><strong>[--Assemble]</strong> Assemble reads (short, long or hybrid) into contigs</p>\n</li>\n<li><p><strong>[--Annotate]</strong> Genome annotation</p>\n</li>\n<li><p><strong>[--CoreTree]</strong> Construct single-core proteins tree and SNPs tree of single-copy core genes</p>\n</li>\n<li><p><strong>[--Pan]</strong> Run &quot;roary&quot; pan-genome pipeline with gff3 files, and construct a phylogenetic tree with the sing-copy core proteins called by roary</p>\n</li>\n<li><p><strong>[--OrthoF]</strong> Identify orthologous protein sequence families with &quot;OrthoFinder&quot;, and construct a phylogenetic tree with the sing-copy core Orthologues</p>\n</li>\n<li><p><strong>[--ANI]</strong> Compute whole-genome Average Nucleotide Identity ( ANI )</p>\n</li>\n<li><p><strong>[--MASH]</strong> Genome and metagenome similarity estimation using MinHash</p>\n</li>\n<li><p><strong>[--pCOG]</strong> Run COG annotation for each strain (*.faa), and generate a table containing the relative abundance of each flag for all strains</p>\n</li>\n<li><p><strong>[--VAR]</strong> Rapid haploid variant calling and core genome alignment with &quot;Snippy&quot;</p>\n</li>\n<li><p><strong>[--AntiRes]</strong> Screening of contigs for antimicrobial and virulence genes</p>\n</li>\n<li><p><strong>[--STREE]</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n</li>\n<li><p><strong>[--ACC]</strong> Other useful gadgets (now includes &#39;Assess&#39; for filtering short sequences in the genome and assessing the statistics of the genome only)</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Global Options:</strong></p>\n<ul>\n<li><p><strong>[--strain_num (INT)]</strong> [Required by &quot;--All&quot;, &quot;--CoreTree&quot;, &quot;--Pan&quot;, &quot;--VAR&quot; and &quot;--pCOG&quot;] The total number of strains used for analysis, not including the reference genome</p>\n</li>\n<li><p><strong>[--ReadsPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] Reads of all strains as file paths ( Default .&#x2F;Reads&#x2F;Illumina )</p>\n</li>\n<li><p><strong>[--scafPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot;, &quot;--MASH&quot; and &quot;--AntiRes&quot;] Path for contigs&#x2F;scaffolds (Default &quot;Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina&quot;)</p>\n</li>\n<li><p><strong>[--AAsPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Pan&quot;, &quot;--OrthoF&quot; and &quot;--pCOG&quot;] Amino acids of all strains as fasta file paths, ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;AAs&quot; )</p>\n</li>\n<li><p><strong>[--reads1 (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] The suffix name of reads 1 ( for example: if the name of reads 1 is &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot;, &quot;YBT-1520&quot; is the strain same, so the suffix name should be &quot;.R1.clean.fastq.gz&quot;)</p>\n</li>\n<li><p><strong>[--reads2 (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] The suffix name of reads 2( for example: if the name of reads 2 is &quot;YBT-1520_2.fq&quot;, the suffix name should be &quot;_2.fq&quot; )</p>\n</li>\n<li><p><strong>[--Scaf_suffix (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot; &quot;--MASH&quot;, &quot;--ANI&quot; and &quot;--AntiRes&quot;] The suffix of scaffolds or genome files. This is an important parameter that must be set (Default -8.fa)</p>\n</li>\n<li><p><strong>[--filter_length (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--Assess&quot;]&gt; Sequences shorter than the &#39;filter_length&#39; will be removed from the assembled genomes. ( Default 200 )</p>\n</li>\n<li><p><strong>[--codon (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Annotate&quot;, &quot;--CoreTree&quot; and &quot;--Pan&quot;] Translation table ( Default 11 )</p>\n<pre><code>- 1 Universal code\n- 2 Vertebrate mitochondrial code\n- 3 Yeast mitochondrial code\n- 4 Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma/Spiroplasma code\n- 5 Invertebrate mitochondrial\n- 6 Ciliate, Dasycladacean and Hexamita nuclear code\n- 9 Echinoderm and Flatworm mitochondrial code\n- 10 Euplotid nuclear code\n- 11 Bacterial, archaeal and plant plastid code ( Default )\n- 12 Alternative yeast nuclear code\n- 13 Ascidian mitochondrial code\n- 14 Alternative flatworm mitochondrial code\n- 15 Blepharisma nuclear code\n- 16 Chlorophycean mitochondrial code\n- 21 Trematode mitochondrial code\n- 22 Scenedesmus obliquus mitochondrial code\n- 23 Thraustochytrium mitochondrial code\n</code></pre>\n</li>\n<li><p><strong>[--suffix_len (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] <strong><u>(Strongly recommended)</u></strong> The suffix length of the reads, that is the length of your reads name minus the length of your strain name. For example the --suffix_len of &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot; is 26 ( &quot;YBT-1520&quot; is the strain name ) ( Default 0 )</p>\n</li>\n<li><p><strong>[--fasttree]</strong> [Can be used with &quot;CoreTree&quot;, &quot;Pan&quot; and &quot;OrthoF&quot;] Use FastTree to construct phylogenetic tree quickly instead of IQ-TREE</p>\n</li>\n<li><p><strong>[--bsnum (INT)]</strong> [Required by &quot;CoreTree&quot;, &quot;Pan&quot;, &quot;OrthoF&quot;, &quot;STREE&quot;, and &quot;VAR&quot;] Replicates for bootstrap of IQ-TREE ( Default 500 )</p>\n</li>\n<li><p><strong>[--fastboot (INT)]</strong> [Required by &quot;CoreTree&quot;, &quot;Pan&quot;, &quot;OrthoF&quot;, &quot;STREE&quot;, and &quot;VAR&quot;] Replicates for ultrafast bootstrap of IQ-TREE. ( must &gt;&#x3D; 1000, Default 1000 )</p>\n</li>\n<li><p><strong>[--logs (STRING)]</strong> Name of the log file ( Default Logs.txt )</p>\n</li>\n<li><p><strong>[--threads (INT)]</strong> Number of threads to be used ( Default 4 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Local Options:</strong></p>\n<ul>\n<li><p><strong>--Assemble</strong></p>\n<ul>\n<li><p><strong>[--platform (STRING)]</strong> [Required] Sequencing Platform, &quot;illumina&quot;, &quot;pacbio&quot;, &quot;oxford&quot; and &quot;hybrid&quot; available ( Default illumina )</p>\n</li>\n<li><p><strong>[--assembler (STRING)]</strong> [Required] Software used for illumina reads assembly, &quot;abyss&quot; and &quot;spades&quot; available ( Default auto )</p>\n</li>\n<li><p><strong>[--kmmer (INT)]</strong> [Required] k-mer size for genome assembly of Illumina data ( Default 81 )</p>\n</li>\n<li><p><strong>[--genomeSize (STRING)]</strong> [Required] An estimate of the size of the genome. Common suffixes are allowed, for example, 3.7m or 2.8g. Needed by PacBio data and ONT data ( Default Unset )</p>\n</li>\n<li><p><strong>[--short1 (STRING)]</strong> [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--short2 (STRING)]</strong> [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--long (STRING)]</strong> [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--hout (STRING)]</strong> [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Annotate</strong></p>\n<ul>\n<li><p><strong>[--genus (STRING)]</strong> Genus name of your strain ( Default &quot;NA&quot; )</p>\n</li>\n<li><p><strong>[--species (STRING)]</strong> Species name of your strain ( Default &quot;NA&quot;)\\</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--CoreTree</strong></p>\n<ul>\n<li><p><strong>[--CDsPath (PATH)]</strong> [Required] CDs of all strains as fasta file paths ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;CDs&quot; ), if set to &quot;NO&quot;, the SNPs of single-copy core genes will not be called</p>\n</li>\n<li><p><strong>[-c (FLOAT)]</strong> Sequence identity threshold, ( Default 0.5)</p>\n</li>\n<li><p><strong>[-n (INT)]</strong> Word_length, -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li><p><strong>[-G (INT)]</strong> Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li><p><strong>[-t (INT)]</strong> Tolerance for redundance ( Default 0 )</p>\n</li>\n<li><p><strong>[-aL (FLOAT)]</strong> Alignment coverage for the longer sequence. If set to 0.9, the alignment must cover 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li><p><strong>[-aS (FLOAT)]</strong> Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li><p><strong>[-g (INT)]</strong> If set to 0, a sequence is clustered to the first cluster that meets the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meets the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li><p><strong>[-d (INT)]</strong> length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Pan</strong></p>\n<ul>\n<li><strong>[--GffPath (PATH)]</strong> [Required] Gff files of all strains as paths ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;GFF&quot; )</li>\n<li><strong>[--PanTree]</strong> Construct a phylogenetic tree of single-copy core proteins called by roary</li>\n<li><strong>[--identi (INT)]</strong> Minimum percentage identity for blastp ( Default 95 )</li>\n</ul>\n</li>\n<li><p><strong>--OrthoF</strong></p>\n<ul>\n<li><strong>[--Sprogram (STRING)]</strong> Sequence search program, Options: blast, mmseqs, blast_gz, diamond ( Default diamond)</li>\n</ul>\n</li>\n<li><p><strong>--ANI</strong></p>\n<ul>\n<li><p><strong>[--queryL (FILE)]</strong> [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--refL (FILE)]</strong> [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--VAR</strong></p>\n<ul>\n<li><p><strong>[--refgbk (FILE)]</strong> [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: &quot;&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk&quot;</p>\n</li>\n<li><p><strong>[--qualtype (STRING)]</strong> [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p>\n</li>\n<li><p><strong>[--qual (INT)]</strong> Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li><p><strong>[--length (INT)]</strong> Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li><p><strong>[--mincov (INT)]</strong> The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li><p><strong>[--minfrac (FLOAT)]</strong> The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li><p><strong>[--minqual (INT)]</strong> The minimum VCF variant call &quot;quality&quot; ( Default 100 )</p>\n</li>\n<li><p><strong>[--ram (INT)]</strong> Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--AntiRes</strong></p>\n<ul>\n<li><p><strong>[--db (STRING)]</strong> [Required] The database to use, options: all, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, <a href=\"https://github.com/phac-nml/ecoli_vf\">ecoli_vf</a>, <a href=\"https://megares.meglab.org/\">megares</a>, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default all )</p>\n</li>\n<li><p><strong>[--identity (INT)]</strong> [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li><p><strong>[--coverage (INT)]</strong> [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--STREE</strong></p>\n<ul>\n<li><p><strong>[--seqfile (STRING)]</strong> [Required] Path of the sequence file for analysis.</p>\n</li>\n<li><p><strong>[--seqtype (INT)]</strong> [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--pCOG</strong></p>\n<ul>\n<li><p><strong>[--evalue (FLOAT)]</strong> [Required] Maximum e-value to report alignments, ( Default 1e-3 )</p>\n</li>\n<li><p><strong>[--id (INT)]</strong> [Required] Minimum identity% to report an alignment, ( Default 40 )</p>\n</li>\n<li><p><strong>[--query_cover (INT)]</strong> [Required] Minimum query cover% to report an alignment, ( Default 70 )</p>\n</li>\n<li><p><strong>[--subject_cover (INT)]</strong> [Required] Minimum subject cover% to report an alignment, ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong> Filter short sequences in the genome and assess the status of the genome</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>Paths of external programs</strong></p>\n<p>  Not needed if they were in the environment variables path. Users can check with the &quot;--check-external-programs&quot; option for the essential programs.</p>\n<ul>\n<li><p><strong>[--abricate-bin (PATH)]</strong> Path to abyss binary file.<br>Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--abyss-bin (PATH)]</strong> Path to abyss binary file. Default<br>tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--canu-bin (PATH)]</strong> Path to canu binary file. Default<br>tries if canu is in PATH;</p>\n</li>\n<li><p><strong>[--cd-hit-bin (PATH)]</strong> Path to cd-hit binary file. Default<br>tries if cd-hit is in PATH;</p>\n</li>\n<li><p><strong>[--fastANI-bin (PATH)]</strong> Path to the fastANI binary file.<br>Default tries if fastANI is in PATH;</p>\n</li>\n<li><p><strong>[--iqtree-bin (PATH)]</strong> Path to the iqtree binary file.<br>Default tries if iqtree is in PATH;</p>\n</li>\n<li><p><strong>[--mafft-bin (PATH)]</strong> Path to mafft binary file. Default<br>tries if mafft is in PATH;</p>\n</li>\n<li><p><strong>[--mash-bin (PATH)]</strong> Path to the mash binary file. Default<br>tries if mash is in PATH.</p>\n</li>\n<li><p><strong>[--muscle-bin (PATH)]</strong> Path to the muscle binary file.<br>Default tries if muscle is in PATH.</p>\n</li>\n<li><p><strong>[--orthofinder-bin (PATH)]</strong> Path to the orthofinder binary<br>file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li><p><strong>[--pal2nal-bin (PATH)]</strong> Path to the pal2nal.pl binary<br>file. Default tries if pal2nal.pl is in PATH;</p>\n</li>\n<li><p><strong>[--prodigal-bin (PATH)]</strong> Path to prodigal binary file.<br>Default tries if prodigal is in PATH;</p>\n</li>\n<li><p><strong>[--prokka-bin (PATH)]</strong> Path to prokka binary file. Default<br>tries if prokka is in PATH;</p>\n</li>\n<li><p><strong>[--roary-bin (PATH)]</strong> Path to the roary binary file.<br>Default tries if roary is in PATH;</p>\n</li>\n<li><p><strong>[--sickle-bin (PATH)]</strong> Path to the sickle-trim binary<br>file. Default tries if sickle is in PATH.</p>\n</li>\n<li><p><strong>[--snippy-bin (PATH)]</strong> Path to the snippy binary file.<br>Default tries if snippy is in PATH;</p>\n</li>\n<li><p><strong>[--snp-sites-bin (PATH)]</strong> Path to the snp-sites binary<br>file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li><p><strong>[--trimAL-bin (PATH)]</strong> Path to the trimAL binary file.<br>Default tries if trimAL is in PATH;</p>\n</li>\n<li><p><strong>[--unicycler-bin (PATH)]</strong> Path to the unicycler binary<br>file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Setup COG database</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong> Users should execute this after first<br>installation of pgcgap.</li>\n</ul>\n</li>\n<li><p>Check the required external programs (<strong>It is strongly recommended that this step be performed after the installation of PGCGAP</strong>):</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --check-external-programs</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><p>Example dataset can be download <a href=\"http://bcam.hzau.edu.cn/PGCGAP/PGCGAP_Examples.tar.gz\">here</a>.</p>\n<ul>\n<li><p><strong>Example 1:</strong> Perform all functions, take the <em>Escherichia coli</em> as an example, total 6 strains for analysis.</p>\n<p>  <strong>Notice</strong>: For the sake of flexibility, The &quot;VAR&quot; function needs to be added additionally.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --PanTree --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 2:</strong> Genome assembly.</p>\n<ul>\n<li><p>Illumina reads assembly</p>\n<p>In this dataset, the naming format of the genome is “strain_1.fastq.gz” and “strain_2.fastq.gz”. The string after the strain name is “_1.fastq.gz”, and its length is 11, so &quot;--suffix_len&quot; was set to 11.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Assemble with ABySS</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Assemble with SPAdes</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Assemble with AUTO</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ONT reads assembly</p>\n<p>Oxford nanopore sequencing usually produces one reads file, so only the parameter of &quot;--reads1&quot; needs to be set, where the value is &quot;.fasta&quot;. “--genomeSize” is the estimated genome size, and users can check the genome size of similar strains in the NCBI database for reference. The parameter was set to &quot;4.8m&quot; here. The suffix of the reads file here is &quot;.fasta&quot; and its length is 6, so &quot;--suffix_len&quot; was set to 6.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>PacBio reads assembly</p>\n<p>PacBio also usually produces only one reads file &quot;pacbio.fastq&quot;, the parameter settings are similar to Oxford. The strain name is 6, so &quot;--suffix_len&quot; was set to 6.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Hybrid assembly of short reads and long reads</p>\n<p>Paired-end short reads and long reads in the directory “Reads&#x2F;Hybrid&#x2F;“ were used as inputs. Illumina reads and long reads must be from the same isolates.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform hybrid --ReadsPath Reads/Hybrid --short1 short_reads_1.fastq.gz --short2 short_reads_2.fastq.gz --long long_reads_high_depth.fastq.gz --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>Example 3</strong>: Gene prediction and annotation</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 4</strong>: Constructing single-copy core protein tree and core SNPs tree</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 5:</strong> Constructing single-copy core protein tree only.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 6:</strong> Conduct pan-genome analysis and construct a phylogenetic tree of single-copy core proteins called by roary. <strong><u>Applicable to v1.0.27 and later</u></strong>.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 7:</strong> Inference of orthologous gene groups and construct a phylogenetic tree of single-copy Orthologue proteins. <strong><u>Applicable to v1.0.29 and later</u></strong>.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 8:</strong> Compute whole-genome Average Nucleotide Identity (ANI).</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --ANI --threads 4 --queryL scaf.list --refL scaf.list --Scaf_suffix .fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 9:</strong> Genome and metagenome similarity estimation using MinHash.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --MASH --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 10:</strong> Run COG annotation for each strain.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --pCOG --threads 4 --strain_num 6 --<span class=\"built_in\">id</span> 40 --query_cover 70 --subject_cover 50 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 11:</strong> Variants calling and phylogenetic tree construction based on the reference genome.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 12:</strong> Screening of contigs for antimicrobial and virulence genes.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db all --identity 75 --coverage 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Generating-Input-files\"><a href=\"#Generating-Input-files\" class=\"headerlink\" title=\"Generating Input files\"></a>Generating Input files</h2><hr>\n<h3 id=\"Working-directory\"><a href=\"#Working-directory\" class=\"headerlink\" title=\"Working directory\"></a>Working directory</h3><p>The directory where the PGCGAP software runs.</p>\n<h3 id=\"Assemble\"><a href=\"#Assemble\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><p>Pair-end reads of all strains in a directory or PacBio reads or ONT reads (Default: .&#x2F;Reads&#x2F;Illumina&#x2F; under the working directory).</p>\n<h3 id=\"Annotate\"><a href=\"#Annotate\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"ANI\"><a href=\"#ANI\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><p>QUERY_LIST and REFERENCE_LIST files containing full paths to genomes, one per line (default: scaf.list under the working directory). If the “--Assemble” function was run first, the list file will be generated automatically.</p>\n<h3 id=\"MASH\"><a href=\"#MASH\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"CoreTree\"><a href=\"#CoreTree\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><p>Amino acids file (With “.faa” as the suffix) and nucleotide (With “.ffn” as the suffix) file of each strain placed into two directories (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;“ and “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;“). The “.faa” and “.ffn” files of the same strain should have the same prefix name. The name of protein IDs and gene IDs should be started with the strain name. The “Prokka” software was suggested to generate the input files. If the “--Annotate” function was run first, the files will be generated automatically. If the “--CDsPath” was set to “NO”, the nucleotide files will not be needed.</p>\n<h3 id=\"OrthoF\"><a href=\"#OrthoF\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><p>A set of protein sequence files (one per species) in FASTA format under a directory (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;“). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"Pan\"><a href=\"#Pan\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><p>GFF3 files (With “.gff” as the suffix) of each strain placed into a directory. They must contain the nucleotide sequence at the end of the file. All GFF3 files created by Prokka are valid (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"pCOG\"><a href=\"#pCOG\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><p>Amino acids file (With “.faa” as the suffix) of each strain placed into a directory (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"VAR\"><a href=\"#VAR\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p>Pair-end reads of all strains in a directory (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory).</p>\n</li>\n<li><p>The full path of reference genome in FASTA format or GenBank format (<strong>must be provided</strong>).</p>\n</li>\n</ul>\n<h3 id=\"AntiRes\"><a href=\"#AntiRes\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"STREE\"><a href=\"#STREE\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><p>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</p>\n<h2 id=\"Output-Files\"><a href=\"#Output-Files\" class=\"headerlink\" title=\"Output Files\"></a>Output Files</h2><hr>\n<h3 id=\"Assemble-1\"><a href=\"#Assemble-1\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong></p>\n<p>  Directories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong></p>\n<p>  Directories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong></p>\n<p>  Directories contain ONT assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong></p>\n<p>  Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina&#x2F;</strong></p>\n<p>  Directory contains Illumina contigs&#x2F;scaffolds of all strains. &quot;*.filtered.fas&quot; is the genome after excluding short sequences. &quot;*.prefilter.stats&quot; describes the stats of the genome before filtering, and &quot;*.filtered.stats&quot; describes the stats of the genome after filtering.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford&#x2F;</strong></p>\n<p>  Directory contains ONT contigs&#x2F;scaffolds of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio&#x2F;</strong></p>\n<p>  Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"Annotate-1\"><a href=\"#Annotate-1\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation&#x2F;</strong></p>\n<p>  directories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;AAs&#x2F;</strong></p>\n<p>  Directory contain amino acids sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;CDs&#x2F;</strong></p>\n<p>  Directory contain nucleotide sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;GFF&#x2F;</strong></p>\n<p>  Directory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ANI-1\"><a href=\"#ANI-1\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong></p>\n<p>  The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong></p>\n<p>  file with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong></p>\n<p>  An ANI matrix of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong></p>\n<p>  The heatmap plot of &quot;ANIs.heatmap&quot;.</p>\n</li>\n</ul>\n<h3 id=\"MASH-1\"><a href=\"#MASH-1\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong></p>\n<p>  The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong></p>\n<p>  The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong></p>\n<p>  A similarity matrix of all genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong></p>\n<p>  A heat map plot of &quot;MASH.heatmap&quot;.</p>\n</li>\n</ul>\n<h3 id=\"CoreTree-1\"><a href=\"#CoreTree-1\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong></p>\n<p>  Concatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong></p>\n<p>  The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong></p>\n<p>  The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong></p>\n<p>  Concatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong></p>\n<p>  Core SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.treefile</strong></p>\n<p>  The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;&quot;Other_files&quot;</strong></p>\n<p>  Intermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"OrthoF-1\"><a href=\"#OrthoF-1\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong></p>\n<p>  Same as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong></p>\n<p>  Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong></p>\n<p>  Phylogenetic tree constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong></p>\n<p>  Phylogenetic tree constructed by IQ-TREE.</p>\n</li>\n</ul>\n<h3 id=\"Pan-1\"><a href=\"#Pan-1\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong></p>\n<p>  A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong></p>\n<p>  A graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong></p>\n<p>  A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong></p>\n<p>  Alignments of single-copy core proteins called by roary software.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong></p>\n<p>  A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong></p>\n<p>  A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong></p>\n<p>  see <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pCOG-1\"><a href=\"#pCOG-1\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong></p>\n<p>  Intermediate files.</p>\n</li>\n<li><p><strong>*.2Scog.table</strong></p>\n<p>  The super COG table of each strain.</p>\n</li>\n<li><p><strong>*.2Scog.table.pdf</strong></p>\n<p>  A plot of super COG table in pdf format.</p>\n</li>\n<li><p><strong>All_flags_relative_abundances.table</strong></p>\n<p>  A table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"VAR-1\"><a href=\"#VAR-1\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong></p>\n<p>  directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li><p><strong>Results&#x2F;Variants&#x2F;Core</strong></p>\n<p>  The directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.aln.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>core.aln.treefile</strong> : The best-fit model of evolution selected using IQ-TREE can be found in this file.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"AntiRes-1\"><a href=\"#AntiRes-1\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li>\n</ul>\n<h3 id=\"STREE-1\"><a href=\"#STREE-1\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.iqtree</strong> : Log of IQ-TREE.</li>\n</ul>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><hr>\n<p>PGCGAP is free software, licensed under GPLv3.</p>\n<h2 id=\"Feedback-and-Issues\"><a href=\"#Feedback-and-Issues\" class=\"headerlink\" title=\"Feedback and Issues\"></a>Feedback and Issues</h2><hr>\n<p>Please report any issues to the <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> or email us at <a href=\"mailto:&#x6c;&#x69;&#97;&#x6f;&#x63;&#x68;&#101;&#110;&#108;&#x61;&#110;&#114;&#117;&#x6f;&#x40;&#119;&#x65;&#x62;&#109;&#x61;&#105;&#x6c;&#x2e;&#x68;&#122;&#97;&#117;&#x2e;&#101;&#100;&#x75;&#46;&#x63;&#110;\">&#x6c;&#x69;&#97;&#x6f;&#x63;&#x68;&#101;&#110;&#108;&#x61;&#110;&#114;&#117;&#x6f;&#x40;&#119;&#x65;&#x62;&#109;&#x61;&#105;&#x6c;&#x2e;&#x68;&#122;&#97;&#117;&#x2e;&#101;&#100;&#x75;&#46;&#x63;&#110;</a>.</p>\n<h2 id=\"Citation\"><a href=\"#Citation\" class=\"headerlink\" title=\"Citation\"></a>Citation</h2><hr>\n<ul>\n<li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative<br>  genomics. <em>Protocol exchange</em>, 2022. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v6\">10.21203&#x2F;rs.2.21224&#x2F;v6</a></p>\n</li>\n<li><p>If you use &quot;--Assemble&quot;, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li><p>If you use &quot;--Annotate&quot;, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btu153\">Prokka</a>.</p>\n</li>\n<li><p>If you use &quot;--CoreTree&quot;, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li><p>If you use &quot;--Pan&quot;, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>.</p>\n</li>\n<li><p>If you use &quot;--OrthoF&quot;, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>.</p>\n</li>\n<li><p>If you use &quot;--ANI&quot;, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li><p>If you use &quot;--MASH&quot;, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li><p>If you use &quot;--VAR&quot;, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li><p>If you use &quot;--AntiRes&quot;, please also cite<br>  <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li><p>If you use &quot;--STREE&quot;, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><hr>\n<h3 id=\"Q1-VAR-function-ran-failed-to-get-annotated-VCFs-and-Core-results\"><a href=\"#Q1-VAR-function-ran-failed-to-get-annotated-VCFs-and-Core-results\" class=\"headerlink\" title=\"Q1 VAR function ran failed to get annotated VCFs and Core results\"></a>Q1 VAR function ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in &quot;strain_name.log&quot; under Results&#x2F;Variants&#x2F;&lt;strain_name&gt;&#x2F; directory. If you find a sentence like &quot;WARNING: All frames are zero! This seems rather odd, please check that &#39;frame&#39; information in your &#39;genes&#39; file is accurate.&quot; This is a snpEff error. Users can install JDK8 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install java-jdk=8.0.112</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a href=\"#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\" class=\"headerlink\" title=\"Q2 Could not determine version of minced please install version 2 or higher\"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running the Annotate function, this error could happen, the error message shows as following:</p>\n<pre><code>Error: A JNI error has occurred, please check your installation and try again\nException in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:763)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)\n    at java.net.URLClassLoader.access$100(URLClassLoader.java:74)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:369)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:363)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:362)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)\n[01:09:40] Could not determine version of minced - please install version 2.0 or higher\n</code></pre>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install minced=0.3</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\"><a href=\"#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\" class=\"headerlink\" title=\"Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib\"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function &quot;VAR&quot; on macOS. It is an error of openssl. Users can solve this problem as the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Firstly, install brew if have not installed before</span></span><br><span class=\"line\">ruby -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Install openssl with brew</span></span><br><span class=\"line\">brew install openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Create the soft link for libraries</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations.</p>\n<h3 id=\"Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\"><a href=\"#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\" class=\"headerlink\" title=\"Q4 Use of uninitialized value in require at Encode.pm line 61\"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function &quot;Pan&quot;. It is a warning of Roary software. The content of line 61 is &quot;require Encode::ConfigLocal;&quot;. Users can ignore the warning. Click <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><hr>\n<ul>\n<li><p>V1.0.3</p>\n<ul>\n<li>Updated ANI function.</li>\n</ul>\n</li>\n<li><p>V1.0.4</p>\n<ul>\n<li>Add parallel for function &quot;pCOG&quot;.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.5</p>\n<ul>\n<li>Bug repair for the input of gubbins.</li>\n</ul>\n</li>\n<li><p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li><p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third-generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function &quot;COG&quot; to &quot;pCOG&quot;.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.8</p>\n<ul>\n<li>Add the &quot;MASH&quot; function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li><p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to &quot;Pan&quot;.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan<br>chart has been added.</li>\n<li>Fixed a bug for plotting the ANI matrix.</li>\n</ul>\n</li>\n<li><p>V1.0.10</p>\n<ul>\n<li>Add the &quot;AntiRes&quot; function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li><p>V1.0.11</p>\n<ul>\n<li>Users now can choose &quot;abyss&quot; or &quot;spades&quot; for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command &quot;pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]&quot;, and can look up the examples of each module with command &quot;pgcgap Examples&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls &quot;ABySS&quot; for genome assembly. When the assembled N50 is less than 50,000, it automatically calls &quot;SPAdes&quot; to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li><p>V1.0.13</p>\n<ul>\n<li>Fixed the &quot;running error&quot; bug of function &quot;Assess&quot; in module &quot;ACC&quot;.</li>\n<li>Added module &quot;STREE&quot; for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li><p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n<li>Fixed the error of function &quot;Assess&quot; in module &quot;ACC&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li><p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running &quot;Annotate&quot; analysis to avoid program crash.</li>\n</ul>\n</li>\n<li><p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module &quot;CoreTree&quot;.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li><p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module &quot;STREE&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li><p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module &quot;VAR&quot;.</li>\n<li>Fixed a little bug of module &quot;CoreTree&quot; to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.21</p>\n<ul>\n<li>Change the default search program &quot;blast&quot; to &quot;diamond&quot; of<br>module &quot;OrthoF&quot;.</li>\n<li>Fixed a bug of module &quot;pCOG&quot; to output the right figure.</li>\n</ul>\n</li>\n<li><p>V1.0.22</p>\n<ul>\n<li>The drawing function of module &quot;ANI&quot; and module &quot;MASH&quot; has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module &quot;ANI&quot;, that is no heatmap will be drawn when there is &quot;NA&quot; in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li><p>V1.0.23</p>\n<ul>\n<li>The &quot;--Assess&quot; function of module &quot;ACC&quot; was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li><p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module &quot;Pan&quot; to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module &quot;CoreTree&quot; and &quot;Pan&quot;.</li>\n<li>The parameter &quot;--identi&quot; was added into module &quot;Pan&quot; to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li><p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module &quot;ANI&quot; and &quot;MASH&quot;.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the &quot;ANI&quot; and &quot;MASH&quot; analysis.</li>\n</ul>\n</li>\n<li><p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li><p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command &quot;pgcgap --check-update&quot;.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter &quot;CoreTree&quot; in the module Pan to avoid program termination caused by the &quot;&gt;&quot; in non-sequence lines.</li>\n</ul>\n</li>\n<li><p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the &quot;permission denied&quot; error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li><p>V1.0.30</p>\n<ul>\n<li>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</li>\n<li>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</li>\n<li>Added the option of using fasttree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</li>\n</ul>\n</li>\n<li><p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing of IQ-TREE was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li><p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try &quot;pgcgap Examples&quot; to have a look.</li>\n<li>Updated module AntiRes: the parameter --db had been modified to add choices of &quot;all&quot; and &quot;megares&quot;.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n<li><p>V1.0.33</p>\n<ul>\n<li>Updated module CoreTree: <a href=\"https://bitsandbugs.org/2019/11/06/two-easy-ways-to-run-iq-tree-with-the-correct-number-of-constant-sites/\">Run IQ-TREE with the correct number of constant sites</a> when constructing the single-copy core SNPs tree.</li>\n<li>Updated module VAR: Use &quot;SNP-SITE&quot; and &quot;IQ-TREE -fconst&quot; to generate SNP sites from the &quot;core.full.aln&quot; and construct the phylogenetic tree.</li>\n<li>Updated module pCOG: Replace blast with diamond to speed up analysis.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"比较基因组学","path":"api/tags/比较基因组学.json"},{"name":"PGCGAP","path":"api/tags/PGCGAP.json"}]},{"title":"R语言安装依赖包错误集锦","slug":"R语言安装依赖包错误集锦","date":"2021-11-02T04:56:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/R语言安装依赖包错误集锦.json","excerpt":null,"keywords":null,"cover":null,"content":"<h1 id=\"devtools安装错误\"><a href=\"#devtools安装错误\" class=\"headerlink\" title=\"devtools安装错误\"></a>devtools安装错误</h1><h2 id=\"XML包-安装之-ERROR-configuration-failed-for-package-‘XML’\"><a href=\"#XML包-安装之-ERROR-configuration-failed-for-package-‘XML’\" class=\"headerlink\" title=\"XML包 安装之 ERROR: configuration failed for package ‘XML’\"></a>XML包 安装之 ERROR: configuration failed for package ‘XML’</h2><ul>\n<li><p>CentOS解决方案</p>\n<p>在Linux终端中运行如下命令即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y libxml2-devel</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"qiime2R安装错误\"><a href=\"#qiime2R安装错误\" class=\"headerlink\" title=\"qiime2R安装错误\"></a>qiime2R安装错误</h1><h2 id=\"rjcommon-h-11-21-fatal-error-jpeglib-h-No-such-file-or-directory\"><a href=\"#rjcommon-h-11-21-fatal-error-jpeglib-h-No-such-file-or-directory\" class=\"headerlink\" title=\"rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory\"></a>rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory</h2><p>该错误是安装依赖包“jpeg”时发生的。</p>\n<ul>\n<li><p>CentOS解决方案</p>\n<p>在Linux终端中运行如下命令即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install sudo yum install -y libjpeg-turbo-devel.x86_64</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"WGCNA安装错误\"><a href=\"#WGCNA安装错误\" class=\"headerlink\" title=\"WGCNA安装错误\"></a>WGCNA安装错误</h1><p>Warning in install.packages :<br>  没有’‘impute’, ‘preprocessCore’, ‘GO.db’, ‘AnnotationDbi’’这种相依关系</p>\n<ul>\n<li>解决方案：在R环境下通过<code>BiocManager</code>安装<code>GO.db</code>。<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>requireNamespace<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">,</span> quietly <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">BiocManager<span class=\"operator\">::</span>install<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;GO.db&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;impute&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;preprocessCore&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"PGCGAP中文说明","slug":"PGCGAP中文说明","date":"2019-04-28T07:22:33.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/PGCGAP中文说明.json","excerpt":null,"keywords":null,"cover":null,"content":"<p><strong>为了方便广大中文用户学习PGCGAP的使用，特意书写该中文文档，但中文文档更新较慢，强烈建议大家阅读英文文档！</strong></p>\n<span id=\"more\"></span>\n\n<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/2019/04/28/PGCGAP%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/\">中文说明</a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>PGCGAP是用于原核生物基因组学和比较基因组学分析管道，目前该管道包含12个模块，可以接受Illumina双端reads、Oxford reads或PacBio reads作为输入，可以完成基因组组装、基因预测和注释，并可以进行比较基因组学分析，包括构建单拷贝核心蛋白进化树以及单拷贝核心基因SNPs进化树，泛基因组分析与进化树构建，全基因组平均核苷酸一致性（ANI）计算，同源蛋白家族聚类及进化树构建，COG注释，SNPs和INDELs calling，抗生素抗性基因&#x2F;毒力因子预测，Multi-FASTA进化树构建，组装后基因组短序列过滤与统计信息呈现（genome size，GC content……）。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>PGCGAP可以安装于Windows子系统Linux（WSL）、Linux x64系统以及macOS中。</p>\n<p><strong>Step1：通过<a href=\"https://bioconda.github.io/user/install.html#install-conda\">Bioconda</a>安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> create -n pgcgap python=3.7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> install pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>声明：用conda安装时一直在“Solving environment”怎么办？</strong>随着加入conda的软件越来越多，使其索引库变的庞大，因此安装新的软件时需要逐一验证软件间的兼容性，会耗费大量时间。严重的时候会无法完成软件的安装，这个时候坐以待毙是不行的。下面介绍两种办法解决此问题：<br/></p>\n\n\n<ul>\n<li><p>Method 1: 使用mamba (非常快) 替代conda。前提是已经用conda创建好了pgcgap的虚拟环境：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> install mamba -c conda-forge</span><br><span class=\"line\"><span class=\"variable\">$mamba</span> install pgcgap</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Method 2: 使用本人提供的pgcgap<a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.ym\">配置文件</a>来创建环境并安装PGCGAP：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download pgcgap_latest_env.yml</span></span><br><span class=\"line\"><span class=\"variable\">$wget</span> https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.yml</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class=\"line\"><span class=\"variable\">$conda</span> <span class=\"built_in\">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure>\n<br/></li>\n</ul>\n<p><strong>Step2：配置COG数据库</strong> (初次安装PGCGAP后需要执行此步骤)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br></pre></td></tr></table></figure>\n\n<p><strong>Step3: 升级PGCGAP(升级版本时运行)</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> update pgcgap</span><br><span class=\"line\"><span class=\"comment\"># v1.0.28以后可通过如下命令升级</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-update</span><br></pre></td></tr></table></figure>\n\n<p><strong>此外，用户也可以通过容器(docker)安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$docker</span> pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：</strong> 前提是用户电脑中安装了<a href=\"https://www.docker.com/\">Docker</a>，Docker可以跨平台使用。可用的tag可<a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">在此</a>查询，建议安装最新版。</p>\n<h2 id=\"依赖包\"><a href=\"#依赖包\" class=\"headerlink\" title=\"依赖包\"></a>依赖包</h2><ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/gubbins\">Gubbins</a> &gt;&#x3D;2.3.4</li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org/\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"PGCGAP用法\"><a href=\"#PGCGAP用法\" class=\"headerlink\" title=\"PGCGAP用法\"></a>PGCGAP用法</h2><ul>\n<li><p><strong>显示帮助信息：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>管道用法：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [modules] [options]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>展示各模块的参数：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>__展示各模块的运行示例：__（这货是我用的最多的）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> Examples</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>配置COG数据库：</strong> (初次安装PGCGAP后需要配置COG数据库)</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>功能模块：</strong></p>\n<ul>\n<li><p><strong>[--All]</strong>                          运行Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH 和 pCOG模块</p>\n</li>\n<li><p><strong>[--Assemble]</strong>                     基因组组装</p>\n</li>\n<li><p><strong>[--Annotate]</strong>                     基因预测及注释</p>\n</li>\n<li><p><strong>[--CoreTree]</strong>                     构建单拷贝核心蛋白进化树与核心SNPs进化树</p>\n</li>\n<li><p><strong>[--Pan]</strong>                          泛基因组分析并构建单拷贝核心蛋白进化树</p>\n</li>\n<li><p><strong>[--OrthoF]</strong>                       同源蛋白家族聚类及单拷贝直系同源蛋白进化树构建</p>\n</li>\n<li><p><strong>[--ANI]</strong>                          计算平均核苷酸一致性 ( ANI )</p>\n</li>\n<li><p><strong>[--MASH]</strong>                         通过MinHash估算基因组&#x2F;宏基因组相似性</p>\n</li>\n<li><p><strong>[--pCOG]</strong>                         COG注释</p>\n</li>\n<li><p><strong>[--VAR]</strong>                          变异检测并构建核心基因组进化树</p>\n</li>\n<li><p><strong>[--AntiRes]</strong>                      从基因组(contigs&#x2F;scaffolds)中预测抗生素抗性基因或毒力基因</p>\n</li>\n<li><p><strong>[--STREE]</strong>                        基于Multi-FASTA序列(所有序列在一个文件中)构建系统发育树</p>\n</li>\n<li><p><strong>[--ACC]</strong>                          一些实用的附加程序(目前只开发了”Assess”用于对基因组中的短序列进行过滤，并评估过滤前后的基因组状态)</p>\n</li>\n</ul>\n</li>\n<li><p><strong>全局参数（请参照英文版，参数有所改变，中文版暂时没有时间修改）：</strong></p>\n<ul>\n<li><p><strong>[--strain_num (INT)]</strong>             [Required by “--All”, “--CoreTree”, “--Pan”, “--VAR” and “--COG”] 用于分析的菌株数目，不包含参考基因组</p>\n</li>\n<li><p><strong>[--ReadsPath (PATH)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] 所有菌株测序reads所在的目录路径  Default .&#x2F;Reads&#x2F;Illumina)</p>\n</li>\n<li><p><strong>[--scafPath (PATH)]</strong>              [Required by “--All”, “--Assess”, “--Annotate” and “--MASH”] contigs&#x2F;scaffolds的存放路径 (Default “Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina”)</p>\n</li>\n<li><p><strong>[--AAsPath (PATH)]</strong>               [Required by “--All”, “--CoreTree”, “--OrthoF” and “--pCOG”] 所有菌株的氨基酸序列文件的存放路径 (Default “.&#x2F;Results&#x2F;Annotations&#x2F;AAs”)</p>\n</li>\n<li><p><strong>[--reads1 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 1的后缀名 (例如 reads 1 的名字为 “YBT-1520_L1_I050.R1.clean.fastq.gz”，”YBT-1520” 是菌株名，则后缀名为 “.R1.clean.fastq.gz”)</p>\n</li>\n<li><p><strong>[--reads2 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 2的后缀名</p>\n</li>\n<li><p><strong>[--Scaf_suffix (STRING)]</strong>         [Required by “--All”, “--Assess”, “--Annotate” “MASH” and “--ANI”] contigs&#x2F;scaffolds的后缀名 (Default -8.fa)</p>\n</li>\n<li><p><strong>[--filter_length (INT)]</strong>          [Required by “--All”, “--Assemble” and “--Assess”]&gt; Sequences shorter than the ‘filter_length’ will be deleted from the assembled genomes. ( Default 200 )</p>\n</li>\n<li><p><strong>[--codon (INT)]</strong>                  [Required by “--All”, “--Annotate”, “--CoreTree” and “--Pan”] 翻译密码子表 (Default 11)</p>\n<ul>\n<li>1                             Universal code</li>\n<li>2                             Vertebrate mitochondrial code</li>\n<li>3                             Yeast mitochondrial code</li>\n<li>4                             Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma&#x2F;Spiroplasma code</li>\n<li>5                             Invertebrate mitochondrial</li>\n<li>6                             Ciliate, Dasycladacean and Hexamita nuclear code</li>\n<li>9                             Echinoderm and Flatworm mitochondrial code</li>\n<li>10                            Euplotid nuclear code</li>\n<li>11                            Bacterial, archaeal and plant plastid code ( Default )</li>\n<li>12                            Alternative yeast nuclear code</li>\n<li>13                            Ascidian mitochondrial code</li>\n<li>14                            Alternative flatworm mitochondrial code</li>\n<li>15                            Blepharisma nuclear code</li>\n<li>16                            Chlorophycean mitochondrial code</li>\n<li>21                            Trematode mitochondrial code</li>\n<li>22                            Scenedesmus obliquus mitochondrial code</li>\n<li>23                            Thraustochytrium mitochondrial code</li>\n</ul>\n</li>\n<li><p><strong>[--suffix_len (INT)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] <strong>(强烈建议设置此项)</strong> reads后缀的长度。例如 “YBT-1520_L1_I050.R1.clean.fastq.gz” 的 --suffix_len 为 26 (“YBT-1520” 为菌株名) (Default 0)</p>\n</li>\n<li><p><strong>[--logs (STRING)]</strong>                Log文件的名字 (Default Logs.txt)</p>\n</li>\n<li><p><strong>[--threads (INT)]</strong>                运行程序时调用的线程数目 (Default 4)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>各模块的局部参数：</strong></p>\n<ul>\n<li><p><strong>--Assemble</strong></p>\n<ul>\n<li><p><strong>[--platform (STRING)]</strong>        [Required] 测序平台，可以选择 “illumina”, “pacbio” 和 “oxford” (Default illumina)</p>\n</li>\n<li><p><strong>[--assembler (STRING)]</strong>       [Required] 用于illumina数据组装的软件，可选”abyss”, “spades” 或”auto” ( Default abyss )</p>\n</li>\n<li><p><strong>[--kmmer (INT)]</strong>              [Required] Illumina数据组装时采用的 k-mer 大小 (Default 81)</p>\n</li>\n<li><p><strong>[--genomeSize (FLOAT)]</strong>       [Required] 预估的基因组大小，如 3.7m、2.8g，组装 PacBio data 和 Oxford data 时需要设置此项 (Default Unset)</p>\n</li>\n<li><p><strong>[--short1 (STRING)]</strong>           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--short2 (STRING)]</strong>           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--long (STRING)]</strong>             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--hout (STRING)]</strong>             [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Annotate</strong></p>\n<ul>\n<li><p><strong>[--genus (STRING)]</strong>           菌株的属名 ( Default “NA” )</p>\n</li>\n<li><p><strong>[--species (STRING)]</strong>         菌株的种名 ( Default “NA”)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--CoreTree</strong></p>\n<ul>\n<li><p><strong>[--CDsPath (PATH)]</strong>           [Required] 包含所有菌株核苷酸序列文件的路径，如果设置为”NO”，将不会构建核心SNPs进化树 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;CDs” )</p>\n</li>\n<li><p><strong>[-c (FLOAT)]</strong>                 序列一致性 (identity) 阈值 ( Default 0.5)</p>\n</li>\n<li><p><strong>[-n (INT)]</strong>                   Word_length,  -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li><p><strong>[-G (INT)]</strong>                   Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li><p><strong>[-t (INT)]</strong>                   Tolerance for redundance ( Default 0 )</p>\n</li>\n<li><p><strong>[-aL (FLOAT)]</strong>                Alignment coverage for the longer sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li><p><strong>[-aS (FLOAT)]</strong>                Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li><p><strong>[-g (INT)]</strong>                   If set to 0, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li><p><strong>[-d (INT)]</strong>                   length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--Pan</strong></p>\n<ul>\n<li><p><strong>[--GffPath (PATH)]</strong>           [Required] 存放所有菌株GFF3格式文件的路径 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;GFF” )</p>\n</li>\n<li><p><strong>[--identi (INT)]</strong>                  Minimum percentage identity for blastp ( Default 95 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n- __\\-\\-OrthoF__\n\n<pre><code>- __[\\-\\-Sprogram (STRING)]__        序列对比程序，Options: blast, mmseqs, blast_gz, diamond ( Default blast)\n</code></pre>\n<br/>\n\n<ul>\n<li><p><strong>--ANI</strong></p>\n<ul>\n<li><p><strong>[--queryL (FILE)]</strong>            [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--refL (FILE)]</strong>              [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--ANIO (FILE)]</strong>              The name of output file ( Default “Results&#x2F;ANI&#x2F;ANIs” )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--VAR</strong></p>\n<ul>\n<li><p><strong>[--refgbk (FILE)]</strong>            [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: “&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk”</p>\n</li>\n<li><p><strong>[--qualtype (STRING)]</strong>        [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p>\n</li>\n<li><p><strong>[--qual (INT)]</strong>               Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li><p><strong>[--length (INT)]</strong>             Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li><p><strong>[--mincov (INT)]</strong>             The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li><p><strong>[--minfrac (FLOAT)]</strong>          The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li><p><strong>[--minqual (INT)]</strong>            The minimum VCF variant call “quality” ( Default 100 )</p>\n</li>\n<li><p><strong>[--ram (INT)]</strong>                Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n<li><p><strong>[--tree_builder (STRING)]</strong>    Application to use for tree building [raxml|fasttree|hybrid] ( Default fasttree)</p>\n</li>\n<li><p><strong>[--iterations (INT)]</strong>         Maximum No. of iterations for gubbins ( Default 5 )</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--AntiRes</strong></p>\n<ul>\n<li><p><strong>[--db (STRING)]</strong>              [Required] 用于分析的数据库, options: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, ecoli_vf, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default ncbi )</p>\n</li>\n<li><p><strong>[--identity (INT)]</strong>           [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li><p><strong>[--coverage (INT)]</strong>           [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--STREE</strong></p>\n<ul>\n<li><p><strong>[--seqfile (STRING)]</strong>        [Required] Path of the sequence file for analysis.</p>\n</li>\n<li><p><strong>[--seqtype (INT)]</strong>           [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n<li><p><strong>[--bsnum (INT)]</strong>             [Required] Times for bootstrap. ( Default 1000 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong>         Filter short sequences in the genome and assess the status of the genome(详细参数通过”pgcgap ACC”查看)</li>\n</ul>\n</li>\n<li><p><strong>依赖软件安装目录</strong></p>\n<p>Not needed if they were in the environment variables path. Users can check with the “–check-external-programs” option for the essential programs.</p>\n<br/>\n</li>\n<li><p><strong>[--abricate-bin (PATH)]</strong>          Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--abyss-bin (PATH)]</strong>             Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--canu-bin (PATH)]</strong>              Path to canu binary file. Default tries if canu is in PATH;</p>\n</li>\n<li><p><strong>[--cd-hit-bin (PATH)]</strong>            Path to cd-hit binary file. Default tries if cd-hit is in PATH;</p>\n</li>\n<li><p><strong>[--fastANI-bin (PATH)]</strong>           Path to the fastANI binary file. Default tries if fastANI is in PATH;</p>\n</li>\n<li><p><strong>[--Gblocks-bin (PATH)]</strong>           Path to the Gblocks binary file. Default tries if Gblocks is in PATH;</p>\n</li>\n<li><p><strong>[--gubbins-bin (PATH)]</strong>           Path to the run_gubbins.py binary file. Default tries if run_gubbins.py is in PATH;</p>\n</li>\n<li><p><strong>[--iqtree-bin (PATH)]</strong>            Path to the iqtree binary file. Default tries if iqtree is in PATH;</p>\n</li>\n<li><p><strong>[--mafft-bin (PATH)]</strong>             Path to mafft binary file. Default tries if mafft is in PATH;</p>\n</li>\n<li><p><strong>[--mash-bin (PATH)]</strong>              Path to the mash binary file. Default tries if mash is in PATH.</p>\n</li>\n<li><p><strong>[--modeltest-ng-bin (PATH)]</strong>      Path to the modeltest-ng binary file. Default tries if modeltest-ng is in PATH.</p>\n</li>\n<li><p><strong>[--muscle-bin (PATH)]</strong>            Path to the muscle binary file. Default tries if muscle is in PATH.</p>\n</li>\n<li><p><strong>[--orthofinder-bin (PATH)]</strong>       Path to the orthofinder binary file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li><p><strong>[--pal2nal-bin (PATH)]</strong>           Path to the pal2nal.pl binary file. Default tries if pal2nal.pl is in PATH;</p>\n</li>\n<li><p><strong>[--prodigal-bin (PATH)]</strong>          Path to prodigal binary file. Default tries if prodigal is in PATH;</p>\n</li>\n<li><p><strong>[--prokka-bin (PATH)]</strong>            Path to prokka binary file. Default tries if prokka is in PATH;</p>\n</li>\n<li><p><strong>[--raxml-ng-bin (PATH)]</strong>          Path to the raxml-ng binary file. Default tries if raxml-ng is in PATH;</p>\n</li>\n<li><p><strong>[--roary-bin (PATH)]</strong>             Path to the roary binary file. Default tries if roary is in PATH;</p>\n</li>\n<li><p><strong>[--sickle-bin (PATH)]</strong>            Path to the sickle-trim binary file. Default tries if sickle is in PATH.</p>\n</li>\n<li><p><strong>[--snippy-bin (PATH)]</strong>            Path to the snippy binary file. Default tries if snippy is in PATH;</p>\n</li>\n<li><p><strong>[--snp-sites-bin (PATH)]</strong>         Path to the snp-sites binary file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li><p><strong>[--unicycler-bin (PATH)]</strong>         Path to the unicycler binary file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>配置COG数据库</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong>                  首次安装PGCGAP后需要执行此步</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n\n<ul>\n<li><p>检查依赖软件包是否安装 (<strong>强烈建议在安装完PGCGAP之后运行此步</strong>):</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-external-programs</span><br></pre></td></tr></table></figure></li>\n</ul>\n<br/>\n\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><ul>\n<li><p><strong>Example 1:</strong> 执行所有模块，以 <em>Escherichia coli</em> 的6个 Illumina 双端 reads 为数据集。</p>\n<p>__注__：为了提高灵活性，”VAR” 模块需要额外添加。<br/></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 2:</strong> 基因组组装。</p>\n<ul>\n<li><p><strong>Illumina双端reads组装</strong></p>\n<p>该数据集中，reads的命名格式为 “strain_1.fastq.gz” 和 “strain_2.fastq.gz”。 后缀名为 “_1.fastq.gz”，其长度为11，因此 “–suffix_len” 设置为11。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>Oxford reads组装</strong></p>\n<p>Oxford nanopore 测序仅产生一个reads文件，因此只需要设置 “–reads1” 参数，其值为 “.fasta”。 “–genomeSize” 是预估的基因组大小，用户可以到NCBI数据库中查看同物种基因组的大小作为参考，此处设置为 “4.8m”。Reads 文件的后缀名为 “.fasta”，其长度为6，因此将 “–suffix_len” 设置为6。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>PacBio reads组装</strong></li>\n</ul>\n<p> PacBio同样只产生一个文件 “pacbio.fastq”，参数设置与Oxford类似。此处，文件的后缀名为 “.fastq”，其长度为6，因此 “–suffix_len” 设置为6。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 3:</strong> 基因预测及注释。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 4:</strong> 构建单拷贝核心蛋白进化树与核心SNPs进化树。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 5:</strong> 仅构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 6:</strong> 进行泛基因组分析并构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 7:</strong> 同源蛋白家族聚类分析并构建进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 8:</strong> 计算两两基因组之间的平均核苷酸一致性(ANI)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ANI --threads 4 --queryL scaf.list --refL scaf.list --ANIO Results/ANI/ANIs --Scaf_suffix .fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 9:</strong> 通过MinHash计算基因组及宏基因组的相似性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --MASH --scafPath &lt;PATH&gt; --Scaf_suffix &lt;STRING&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 10:</strong> 对所有基因组进行COG注释。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --pCOG --threads 4 --strain_num 6 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 11:</strong> 变异(SNPs, Indels)检测与注释，并构建基于参考基因组的SNPs进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 12:</strong> 从基因组中寻找抗生素抗性基因或毒力基因。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db ncbi --identity 75 --coverage 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"准备输入文件\"><a href=\"#准备输入文件\" class=\"headerlink\" title=\"准备输入文件\"></a>准备输入文件</h2><h3 id=\"工作目录\"><a href=\"#工作目录\" class=\"headerlink\" title=\"工作目录\"></a>工作目录</h3><ul>\n<li>PGCGAP的运行目录。</li>\n</ul>\n<h3 id=\"Assemble\"><a href=\"#Assemble\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li>将所有双端reads、或PacBio reads 或 Oxford nanopore reads存于某个目录下 (Default: .&#x2F;Reads&#x2F;Illumina&#x2F;)。</li>\n</ul>\n<h3 id=\"Annotate\"><a href=\"#Annotate\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"ANI\"><a href=\"#ANI\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li>QUERY_LIST 和 REFERENCE_LIST 文件，每个文件中含有需要计算的基因组的绝对路径，每个基因组一行 (default: 工作目录下的”scaf.list”)。若先运行了 “–Assemble” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"CoreTree\"><a href=\"#CoreTree\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li>将所有菌株的氨基酸文件 (后缀名必须为 “.faa”) 和核苷酸文件 (需以 “.ffn” 为后缀) 分别存放于两个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;” 和 “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;”)。“.faa” 和 “.ffn” 文件需要有相同的前缀名字，且 protein IDs 和 gene IDs 需以菌株名开头。建议用 “Prokka” 软件获取输入文件，若已经运行了 “–Annotate” 模块，则该模块的输入文件会自动生产。若 “–CDsPath” 设置为 “NO”，则不需要提供核苷酸文件，但也不会生产核心SNPs进化树。</li>\n</ul>\n<h3 id=\"MASH\"><a href=\"#MASH\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"OrthoF\"><a href=\"#OrthoF\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li>所有菌株的fasta格式氨基酸文件(每个菌株一个文件)存放于一个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;”)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"Pan\"><a href=\"#Pan\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li>包含所有菌株GFF3 文件 (With “.gff” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;);</li>\n<li>若先运行了 “–Annotate” 模块，上述文件会自动生成。</li>\n</ul>\n<h3 id=\"pCOG\"><a href=\"#pCOG\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li>存放所有菌株的fasta格式氨基酸序列文件 (With “.faa” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"VAR\"><a href=\"#VAR\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li>包含所有菌株的 Pair-end reads 的目录路径 (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory)。</li>\n<li>fasta 格式或 GenBank 格式的参考基因组的绝对路径 (<strong>必需提供</strong>)。</li>\n</ul>\n<h3 id=\"AntiRes\"><a href=\"#AntiRes\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li>存放基因组(complete or draft)的目录 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</li>\n</ul>\n<h3 id=\"STREE\"><a href=\"#STREE\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</li>\n</ul>\n<h2 id=\"输出文件解读\"><a href=\"#输出文件解读\" class=\"headerlink\" title=\"输出文件解读\"></a>输出文件解读</h2><h3 id=\"Assemble-1\"><a href=\"#Assemble-1\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong><br/><br>Directories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong><br/><br>Directories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong><br/><br>Directories contain ONT assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong><br/><br>Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina</strong><br/><br>Directory contains Illumina contigs&#x2F;scaffolds of all strains. “*.filtered.fas” is the genome after excluding short sequences. “*.prefilter.stats” describes the stats of the genome before filtering, and “*.filtered.stats” describes the stats of the genome after filtering.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford</strong><br/><br>Directory contains Oxford nanopore contigs&#x2F;scaffolds of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio</strong><br/><br>Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"Annotate-1\"><a href=\"#Annotate-1\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation</strong><br/><br>directories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;AAs</strong><br/><br>Directory contain amino acids sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;CDs</strong><br/><br>Directory contain nucleotide sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;GFF</strong><br/><br>Directory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ANI-1\"><a href=\"#ANI-1\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong><br/><br>The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong><br/><br>file with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong><br/><br>An ANI matrix of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong><br/><br>The heatmap plot of “ANIs.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"MASH-1\"><a href=\"#MASH-1\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong><br/><br>The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong><br/><br>The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong><br/><br>A similarity matrix of all genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong><br/><br>A heat map plot of “MASH.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"CoreTree-1\"><a href=\"#CoreTree-1\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong><br/><br>Core SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.nwk</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;“Other_files”</strong><br/><br>Intermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"OrthoF-1\"><a href=\"#OrthoF-1\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong><br/><br>Same as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong><br/><br>Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong><br/><br>Phylogenetic tree constructed by FastTree.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong><br/><br>Phylogenetic tree constructed by IQ-TREE.<br/></p>\n</li>\n</ul>\n<h3 id=\"Pan-1\"><a href=\"#Pan-1\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong><br/><br>A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong><br/><br>A graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong><br/><br>A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong><br/><br>Alignments of single-copy core proteins called by roary software.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong><br/><br>see <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pCOG-1\"><a href=\"#pCOG-1\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong><br/><br>Intermediate files.</p>\n</li>\n<li><p><strong>*.2Scog.table</strong><br/><br>The super COG table of each strain.</p>\n</li>\n<li><p><strong>*.2Scog.table.pdf</strong><br/><br>A plot of super COG table in pdf format.</p>\n</li>\n<li><p><strong>All_flags_relative_abundances.table</strong><br>A table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"VAR-1\"><a href=\"#VAR-1\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong><br/><br>directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li><p><strong>Results&#x2F;Variants&#x2F;Core</strong><br/><br>The directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.*.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>gubbins.core.full.node_labelled.final_tree.tre</strong> : Phylogenetic tree of the whole genome SNP alignment constructed with <strong>gubbins</strong> (get rid of recombination).</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"AntiRes-1\"><a href=\"#AntiRes-1\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li>\n</ul>\n<h3 id=\"STREE-1\"><a href=\"#STREE-1\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n</ul>\n<h2 id=\"使用许可\"><a href=\"#使用许可\" class=\"headerlink\" title=\"使用许可\"></a>使用许可</h2><p>PGCGAP 不可商用，其它情况可使用免费(licensed under GPLv3)。</p>\n<h2 id=\"反馈与提问\"><a href=\"#反馈与提问\" class=\"headerlink\" title=\"反馈与提问\"></a>反馈与提问</h2><p>若有问题，可在 <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> 提出或通过邮件咨询 <a href=\"mailto:liaochenlanruo@webmail.hzau.edu.cn\">liaochenlanruo@webmail.hzau.edu.cn</a>。</p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><ul>\n<li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. <em>Protocol exchange</em>, 2020. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v5\">10.21203&#x2F;rs.2.21224&#x2F;v5</a></p>\n</li>\n<li><p>If you use “--Assemble”, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li><p>If you use “--Annotate”, please also cite <a href=\"https://www.pixiv.net/member_illust.php?mode=medium&illust_id=24642063\">Prokka</a>.</p>\n</li>\n<li><p>If you use “--CoreTree”, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li><p>If you use “--Pan”, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--OrthoF”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--ANI”, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li><p>If you use “--MASH”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li><p>If you use “--VAR”, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>,  <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li><p>If you use “--AntiRes”, please also cite <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li><p>If you use “--STREE”, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a> , <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><h3 id=\"Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\"><a href=\"#Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\" class=\"headerlink\" title=\"Q1 VAR founction ran failed to get annotated VCFs and Core results\"></a>Q1 VAR founction ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in “strain_name.log” under Results&#x2F;Variants&#x2F;<strain_name>&#x2F; directory. If you find a sentence like “WARNING: All frames are zero! This seems rather odd, please check that ‘frame’ information in your ‘genes’ file is accurate.” This is an snpEff error. Users can install JDK8 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install java-jdk=8.0.112</span><br></pre></td></tr></table></figure>\n\n\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a href=\"#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\" class=\"headerlink\" title=\"Q2 Could not determine version of minced please install version 2 or higher\"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running prokka of Assemble founction, this error could happened, the error message shows as following:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: A JNI error has occurred, please check your installation and try again</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass1(Native Method)</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)</span><br><span class=\"line\">\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)</span><br><span class=\"line\">\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:468)</span><br><span class=\"line\">\tat java.net.URLClassLoader.access$100(URLClassLoader.java:74)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:369)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:363)</span><br><span class=\"line\">\tat java.security.AccessController.doPrivileged(Native Method)</span><br><span class=\"line\">\tat java.net.URLClassLoader.findClass(URLClassLoader.java:362)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class=\"line\">\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class=\"line\">\tat sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)</span><br><span class=\"line\">[01:09:40] Could not determine version of minced - please install version 2.0 or higher</span><br></pre></td></tr></table></figure>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install minced=0.3</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\"><a href=\"#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\" class=\"headerlink\" title=\"Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib\"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function “VAR” on macOS. It is an error of openssl. Users can solve this problem as following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Firstly, install brew if have not installed before</span></span><br><span class=\"line\"><span class=\"variable\">$ruby</span> -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Install openssl with brew</span></span><br><span class=\"line\"><span class=\"variable\">$brew</span> install openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Create the soft link for libraries</span></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations</p>\n<h3 id=\"Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\"><a href=\"#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\" class=\"headerlink\" title=\"Q4 Use of uninitialized value in require at Encode.pm line 61\"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function “Pan”. It is a warning of Roary software.<br>The content of line 61 is “require Encode::ConfigLocal;”. Users can ignore the warning.<br>Click <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><ul>\n<li><p>V1.0.3</p>\n<ul>\n<li>Updated ANI fuction.</li>\n</ul>\n</li>\n<li><p>V1.0.4</p>\n<ul>\n<li>Add parallel for function “COG”.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.5</p>\n<ul>\n<li>Bug repair for input of gubbins.</li>\n</ul>\n</li>\n<li><p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li><p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function “COG” to “pCOG”.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.8</p>\n<ul>\n<li>Add the “MASH” function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li><p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to “Pan”.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan chart has been added.</li>\n<li>Fixed a bug for ploting the ANI matrix.</li>\n</ul>\n</li>\n<li><p>V1.0.10</p>\n<ul>\n<li>Add the “AntiRes” function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li><p>V1.0.11</p>\n<ul>\n<li>Users now can choose “abyss” or “spades” for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command “pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]“, and can look up the examples of each module with command “pgcgap Examples”.</li>\n</ul>\n</li>\n<li><p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls “ABySS” for genome assembly. When the assembled N50 is less than 50,000, it automatically calls “SPAdes” to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li><p>V1.0.13</p>\n<ul>\n<li>Fixed the “running error” bug of function “Assess” in module “ACC”.</li>\n<li>Added module “STREE” for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li><p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n</ul>\n</li>\n<li><p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li><p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running “Annotate” analysis to avoid program crash.</li>\n</ul>\n</li>\n<li><p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module “CoreTree”.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li><p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module “STREE”.</li>\n</ul>\n</li>\n<li><p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li><p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module “VAR”.</li>\n<li>Fixed a little bug of module “CoreTree” to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.21</p>\n<ul>\n<li>Change the default search program “blast” to “diamond” of module “OrthoF”.</li>\n<li>Fixed a bug of module “pCOG” to output the right figure.</li>\n</ul>\n</li>\n<li><p>V1.0.22</p>\n<ul>\n<li>The drawing function of module “ANI” and module “MASH” has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module “ANI”, that is no heatmap will be drawn when there is “NA” in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li><p>V1.0.23</p>\n<ul>\n<li>The “–Assess” function of module “ACC” was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li><p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module “Pan” to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module “CoreTree” and “Pan”.</li>\n<li>The parameter “–identi” was added into module “Pan” to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li><p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module “ANI” and “MASH”.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the “ANI” and “MASH” analysis.</li>\n</ul>\n</li>\n<li><p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li><p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command “pgcgap –check-update”.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/COG\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter “CoreTree” in the module Pan to avoid program termination caused by the “&gt;” in non-sequence lines.</li>\n</ul>\n</li>\n<li><p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the “permission denied” error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li><p>V1.0.30</p>\n</li>\n<li><p>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</p>\n</li>\n<li><p>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</p>\n</li>\n<li><p>Added the option of using FastTree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</p>\n</li>\n<li><p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li><p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try “pgcgap Examples” to have a look.</li>\n<li>Updated module AntiRes: the parameter –db had been modified to add choices of “all” and “megares”.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"比较基因组学","path":"api/tags/比较基因组学.json"},{"name":"PGCGAP","path":"api/tags/PGCGAP.json"}]},{"title":"Swissprot数据库的本地化与序列比对并与其他数据库快速mapping","slug":"Swissprot数据库的本地化与序列比对","date":"2021-09-28T08:13:44.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Swissprot数据库的本地化与序列比对.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg","content":"<h1 id=\"数据库下载与构建\"><a href=\"#数据库下载与构建\" class=\"headerlink\" title=\"数据库下载与构建\"></a>数据库下载与构建</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h2><ul>\n<li><p>解压缩</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip -d uniprot_sprot.fasta.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建blast+数据库</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">makeblastdb -<span class=\"keyword\">in</span> uniprot_sprot.fasta -dbtype prot -out uniprot_sprot -parse_seqids</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建DIAMOND数据库</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamond makedb --<span class=\"keyword\">in</span> uniprot_sprot.fasta -d uniprot_sprot_diamond</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"比对\"><a href=\"#比对\" class=\"headerlink\" title=\"比对\"></a>比对</h1><ul>\n<li><p>blastp蛋白比对</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blastp -query F01.faa -out F01.swissprot -db /new_data/hualin/db/uniprot_sprot -outfmt 6 -num_threads 30 -evalue 1e-5</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>diamond蛋白比对</p>\n<ul>\n<li><p>单个基因组对比</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q F01.faa -e 1e-5 -f 6 -o F01.diamond -k 1 --sensitive -p 30 --query-cover 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>多个个基因组对比</p>\n<p>不会shell没办法，写Perl脚本(run_diamond.pl)来完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\">   <span class=\"keyword\">use</span> strict;</span><br><span class=\"line\">   <span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);<span class=\"comment\"># 读取所有后缀为“.faa”的文件，可以自己更改</span></span><br><span class=\"line\">   <span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">    $_=~<span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">    <span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.diamond&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\"># 将/new_data/hualin/db/uniprot_sprot_diamond换成自己的数据库路径; -p表示线程数，在笔记本上用6个即可</span></span><br><span class=\"line\">    <span class=\"keyword\">system</span>(<span class=\"string\">&quot;diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>将上述代码复制到文件中，命名为“run_diamond.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_diamond.pl</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"将比对结果mapping至其他数据库\"><a href=\"#将比对结果mapping至其他数据库\" class=\"headerlink\" title=\"将比对结果mapping至其他数据库\"></a>将比对结果mapping至其他数据库</h1><ul>\n<li><p>打开网址<a href=\"https://www.uniprot.org/uploadlists/\">https://www.uniprot.org/uploadlists/</a>, 上传比对上的swissprot ID，可以将比对结果转换为诸如KEGG等其他数据库的ID。个人感觉不是很好用。</p>\n</li>\n<li><p>我们可以把mapping文件下载下来，自己写脚本来提取信息，虽然麻烦些，但得到的更多。</p>\n<ul>\n<li><p>下载mapping文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/idmapping/idmapping_selected.tab.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压缩</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip -d idmapping_selected.tab.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>写脚本提取对应信息</p>\n<p> Diamond比对的结果文件内容如下，第一列是自己的氨基酸序列ID，第二列是SwissProt数据库中序列的ID，而我们真正需要的是第二列中两个竖线中间的内容，在稍后的脚本中将通过正则表达式把它给揪出来。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F01<span class=\"built_in\">_</span>00001\tsp|Q73G44|MDH<span class=\"built_in\">_</span>WOLPM\t47.2\t72\t38\t0\t10\t81\t243\t314\t9.55e-16\t72.8</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00003\tsp|D9PU00|TFRA<span class=\"built_in\">_</span>METTM\t41.3\t569\t301\t7\t7\t574\t4\t540\t4.89e-131\t397</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00004\tsp|P9WN88|FRDB<span class=\"built_in\">_</span>MYCTO\t32.7\t208\t118\t6\t19\t215\t23\t219\t3.84e-28\t110</span><br><span class=\"line\">   F01<span class=\"built_in\">_</span>00005\tsp|Q021N6|SUCC<span class=\"built_in\">_</span>SOLUE\t62.8\t384\t141\t2\t1\t383\t1\t383\t1.45e-155\t446</span><br></pre></td></tr></table></figure>\n\n<p>开始写脚本，保存为“run_mapping.pl”。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %maps;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @diaout = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.diamond&quot;</span>);<span class=\"comment\"># 读取所有的diamond比对后的输出文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@diaout) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).diamond/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t$lines[<span class=\"number\">1</span>]=~<span class=\"regexp\">/.+\\|(.+)\\|.+/</span>;</span><br><span class=\"line\">\t\t$hash&#123;$1&#125;++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;idmapping_selected.tab&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$lines[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t$maps&#123;$lines[<span class=\"number\">0</span>]&#125; = $_;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @diaout2 = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.diamond&quot;</span>);<span class=\"comment\"># 读取所有的diamond比对后的输出文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@diaout2) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).diamond/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.mapped&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;qseqid\\tsseqid\\tpident\\tlength\\tmismatch\\tgapopen\\tqstart\\tqend\\tsstart\\tsend\\tevalue\\tbitscore\\tUniProtKB-AC\tUniProtKB-ID\tGeneID (EntrezGene)\tRefSeq\tGI\tPDB\tGO\tUniRef100\tUniRef90\tUniRef50\tUniParc\tPIR\tNCBI-taxon\tMIM\tUniGene\tPubMed\tEMBL\tEMBL-CDS\tEnsembl\tEnsembl_TRS\tEnsembl_PRO\tAdditional PubMed\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t$lines[<span class=\"number\">1</span>]=~<span class=\"regexp\">/.+\\|(.+)\\|.+/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $maps&#123;$1&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\t&quot;</span> . $maps&#123;$1&#125; . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将脚本与diamond比对的结果文件以及下载的mapping文件放在同一目录下，在终端里输入如下命令即可得到mapping后的结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_mapping.pl</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"GO-注释\"><a href=\"#GO-注释\" class=\"headerlink\" title=\"GO 注释\"></a>GO 注释</h1><ul>\n<li><p>从map后的文件中提取基因ID和GO number，各列以制表符分隔，没有GO注释的只输出gene ID。</p>\n<p>  准备脚本，命名为“get_GO.pl”，与上一步生成的“*.mapped”文件放在同一目录下。</p>\n  <figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @mapped = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.mapped&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@mapped) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).mapped/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.GO&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT $lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">18</span>]=~<span class=\"regexp\">/.+\\; /</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @terms = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\; /</span>, $lines[<span class=\"number\">18</span>];<span class=\"comment\"># 18代表文件的第19列</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @terms) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> ($lines[<span class=\"number\">18</span>]=~<span class=\"regexp\">/\\S+/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . $lines[<span class=\"number\">18</span>] . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>  在终端或者Windows命令行中运行如下命令，得到的“*.GO”为输出文件。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_GO.pl</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>GO注释与可视化</p>\n</li>\n</ul>\n<p>访问网页<a href=\"https://wego.genomics.cn/\">WEGO 2.0</a>，在网页中间位置是数据传输接口，将刚刚得到的所有结果文件拖拽上传，<strong>File format</strong>选择<u>Native Format</u>，如果自己的数据是模式物种，可以在<strong>Reference</strong>中选择对应的物种，点击<strong>Submit</strong>即可。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在WEGO 2.0网页提交数据\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"WEGO 2.0分析结果一览表\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"WEGO 2.0分析结果柱状图\"></p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e922”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"SignalP+TMHMM预测微生物分泌蛋白","slug":"SignalP-TMHMM预测微生物分泌蛋白","date":"2021-10-14T01:09:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/SignalP-TMHMM预测微生物分泌蛋白.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg","content":"<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p>\n<p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的N 端有一般由15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度5-30个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的N-末端的氨基酸序列（有时不一定在N端）。<u>使用<strong>SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong>TMHMM</strong>注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p>\n<h1 id=\"软件-Software\"><a href=\"#软件-Software\" class=\"headerlink\" title=\"软件 Software\"></a><ruby>软件 <rt>Software</rt></ruby></h1><ul>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li><p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p>\n<ul>\n<li><p>Sec&#x2F;SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的“标准”分泌信号肽；<rt>“Standard” secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li><p>Sec&#x2F;SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li><p>Tat&#x2F;SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li><p>Tat&#x2F;SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li><p>Sec&#x2F;SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD&#x2F;PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD&#x2F;PibD).</rt></ruby></p>\n</li>\n<li><p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a></p>\n<ul>\n<li>用于预测蛋白质中的跨膜螺旋。</li>\n</ul>\n</li>\n<li><p>Python</p>\n</li>\n</ul>\n<p>SignalP和TMHMM对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h有效时间）。</p>\n<h1 id=\"软件安装-Installation-of-Softwares\"><a href=\"#软件安装-Installation-of-Softwares\" class=\"headerlink\" title=\"软件安装 Installation of Softwares\"></a><ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1><h2 id=\"安装SignalP-6-0\"><a href=\"#安装SignalP-6-0\" class=\"headerlink\" title=\"安装SignalP 6.0\"></a>安装SignalP 6.0</h2><ul>\n<li><p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“signalp-6.0.fast.tar.gz”。有两个模式可以选择——“slow_sequential”和“fast”。前者runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower；后者uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是fast模式。</p>\n</li>\n<li><p><ruby>安装 <rt>Installation</rt></ruby></p>\n<ul>\n<li><p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p>\n<ul>\n<li><p>Python</p>\n</li>\n<li><p>matplotlib&gt;3.3.2</p>\n</li>\n<li><p>numpy&gt;1.19.2</p>\n</li>\n<li><p>torch&gt;1.7.0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install torch</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>tqdm&gt;4.46.1</p>\n</li>\n</ul>\n</li>\n<li><p>安装SignalP 6.0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压缩安装文件</span></span><br><span class=\"line\">tar zxvf signalp-6.0.fast.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的软件目录，在终端运行</span></span><br><span class=\"line\">python setup.py install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试安装</span></span><br><span class=\"line\">signalp6 --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装TMHMM-V2-0c\"><a href=\"#安装TMHMM-V2-0c\" class=\"headerlink\" title=\"安装TMHMM V2.0c\"></a>安装TMHMM V2.0c</h2><ul>\n<li><p>下载</p>\n<p>  访问<a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“tmhmm-2.0c.Linux.tar.gz”。</p>\n</li>\n<li><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">tar zxvf tmhmm-2.0c.Linux.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> tmhmm-2.0c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span></span><br><span class=\"line\"><span class=\"built_in\">pwd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><font color=\"#FF0000\">运行错误</font></p>\n<p>运行软件时总报<code>Segmentation fault (core dumped)</code>错误，暂时无解。各位可以使用其<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">在线版</a>。</p>\n</li>\n</ul>\n<h1 id=\"软件用法-Usage\"><a href=\"#软件用法-Usage\" class=\"headerlink\" title=\"软件用法 Usage\"></a><ruby>软件用法 <rt>Usage</rt></ruby></h1><h2 id=\"SignalP-6-0\"><a href=\"#SignalP-6-0\" class=\"headerlink\" title=\"SignalP 6.0\"></a>SignalP 6.0</h2><h3 id=\"预测-Prediction\"><a href=\"#预测-Prediction\" class=\"headerlink\" title=\"预测 Prediction\"></a><ruby>预测 <rt>Prediction</rt></ruby></h3><p>A command takes the following form </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>fastafile</code> <ruby>输入文件为FASTA格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p>\n</li>\n<li><p><code>organism</code> is either <code>other</code> or <code>Eukarya</code>. Specifying <code>Eukarya</code> triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec&#x2F;SPI).</p>\n</li>\n<li><p><code>format</code> can take the values <code>txt</code>, <code>png</code>, <code>eps</code>, <code>all</code>. It defines what output files are created for individual sequences. <code>txt</code> produces a tabular <code>.gff</code> file with the per-position predictions for each sequence. <code>png</code>, <code>eps</code>, <code>all</code> additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p>\n</li>\n<li><p><code>mode</code> is either <code>fast</code>, <code>slow</code> or <code>slow-sequential</code>. Default is <code>fast</code>, which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster. <code>slow</code> runs the full model in parallel, which requires more than 14GB of RAM to be available. <code>slow-sequential</code> runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p>\n</li>\n</ul>\n<h3 id=\"输出-Outputs\"><a href=\"#输出-Outputs\" class=\"headerlink\" title=\"输出 Outputs\"></a><ruby>输出<rt> Outputs</rt></ruby></h3><ul>\n<li><p>output_dir&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"output.gff3\"></p>\n</li>\n<li><p>output_dir&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li><p>output_dir&#x2F;region_output.gff3：包含所有的信号肽区域信息。</p>\n<ul>\n<li><p>n-region: The n-terminal region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as N</p>\n</li>\n<li><p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as H</p>\n</li>\n<li><p>c-region: The c-terminal region of the signal peptide, reported for Sec&#x2F;SPI and Tat&#x2F;SPI.</p>\n</li>\n<li><p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p>\n</li>\n<li><p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p>\n</li>\n<li><p>Sec&#x2F;SPIII: These signal peptides have no known region structure.</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"region_output.gff3\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"批处理与结果优化\"><a href=\"#批处理与结果优化\" class=\"headerlink\" title=\"批处理与结果优化\"></a>批处理与结果优化</h3><p>脚本名：run_SignalP.pl</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 14, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IDNOSEQ, <span class=\"string\">&quot;&gt;IDNOSEQ.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">\t$_ =~ <span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.nodesc&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $sigseq = $1 . <span class=\"string\">&quot;.sigseq&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $outdir = $1 . <span class=\"string\">&quot;_signalp&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $_ || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"regexp\">/^(&gt;\\S+)/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $1 . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash = idse<span class=\"string\">q($out)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $gff = $outdir . <span class=\"string\">&quot;/output.gff3&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (! -z $gff) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$gff&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t&lt;IN&gt;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$sigseq&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$lines[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> IDNOSEQ $str . <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"string\">&quot;$lines[0]\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;rm $out&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv $sigseq $outdir&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IDNOSEQ;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">idseq</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($fasta) = @_;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $fasta || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header =~ <span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (%hash);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将run_SignalP.pl与后缀名为“.faa”的FASTA格式文件放在同一目录下，在终端中运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_SignalP.pl</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"结果解读Output-interpretation\"><a href=\"#结果解读Output-interpretation\" class=\"headerlink\" title=\"结果解读Output interpretation\"></a><ruby>结果解读<rt>Output interpretation</rt></ruby></h3><p>*代表输入文件的名字。</p>\n<ul>\n<li><p>*_signalp&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p>\n</li>\n<li><p>*_signalp&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li><p>*_signalp&#x2F;region_output.gff3：包含所有的信号肽区域信息;</p>\n</li>\n<li><p><strong>*_signalp&#x2F;*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作TMHMM的输入文件。</p>\n</li>\n</ul>\n<h2 id=\"TMHMM\"><a href=\"#TMHMM\" class=\"headerlink\" title=\"TMHMM\"></a>TMHMM</h2><h3 id=\"预测\"><a href=\"#预测\" class=\"headerlink\" title=\"预测\"></a>预测</h3><p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的“*_signalp&#x2F;*.sigseq”，将其上传至网页版<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a>，提交任务，等待结果即可。</p>\n<h3 id=\"结果展示\"><a href=\"#结果展示\" class=\"headerlink\" title=\"结果展示\"></a>结果展示</h3><p>TMHMM可以输出多种格式的结果文件，具体请参考其<a href=\"http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output\">官方说明</a>。</p>\n<p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在TMHMM网站提交任务\"></p>\n<ul>\n<li><p><strong>Long output format</strong></p>\n<ul>\n<li><p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li><p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p>\n</li>\n<li><p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li><p>Exp number, first 60 AAs：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li><p>Total prob of N-in：<ruby>N端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p>\n</li>\n<li><p>POSSIBLE N-term signal sequence：<ruby>当“Exp number, first 60 AAs”大于 10 时产生的警告。 <rt> A warning that is produced when “Exp number, first 60 AAs” is larger than 10.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li><p>蛋白F01_bin.1_00110共计436个氨基酸，有5个跨膜螺旋结构。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"含有跨膜结构的蛋白\"></p>\n</li>\n<li><p>蛋白F01_bin.1_00142共计557个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"不含跨膜结构的蛋白\"></p>\n</li>\n<li><p><strong>Short output format</strong></p>\n<ul>\n<li><p>“len&#x3D;”： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li><p>“ExpAA&#x3D;”：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li><p>“First60&#x3D;”：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li><p>“PredHel&#x3D;”：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p>\n</li>\n<li><p>“Topology&#x3D;”：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由“i”分隔，如果螺旋在外部，则由“o”分隔。’i7-29o44-66i87-109o’意味着它从膜内开始，在位置7到29有一个预测的TMH，30-43在膜外，然后是位置44-66的TMH。</p>\n</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Short output format\"></p>\n</li>\n</ul>\n<h3 id=\"结果汇总\"><a href=\"#结果汇总\" class=\"headerlink\" title=\"结果汇总\"></a>结果汇总</h3><p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong>run_SignalP.pl</strong>生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong>Statistics.txt</strong>中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp&#x2F;*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp&#x2F;*.membrane.faa</b>文件中。该过程将通过<strong>tmhmm_parser.pl</strong>完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 15, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;Statistics.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Strain name\\tSignal peptide numbers\\tSecretory protein numbers\\tMembrane protein numbers\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @sig = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*_signalp&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sig (@sig) &#123;</span><br><span class=\"line\">\t$sig=~<span class=\"regexp\">/(.+)_signalp/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $tmhmm = $sig . <span class=\"string\">&quot;/$str&quot;</span> . <span class=\"string\">&quot;_TMHMM_SHORT.txt&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $fasta = $sig . <span class=\"string\">&quot;/$str&quot;</span> . <span class=\"string\">&quot;.sigseq&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $secretory = $str . <span class=\"string\">&quot;.secretory.faa&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $membrane = $str . <span class=\"string\">&quot;.membrane.faa&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> SEC, <span class=\"string\">&quot;&gt;$secretory&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> MEM, <span class=\"string\">&quot;&gt;$membrane&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $on = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash = idse<span class=\"string\">q($fasta)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $tmhmm || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\"><span class=\"comment\">#\t\tprint $_ . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">5</span>] eq <span class=\"string\">&quot;Topology=o&quot;</span>) &#123;</span><br><span class=\"line\">\t\t\t$out++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> SEC <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t$on++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> MEM <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> SEC;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> MEM;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv $secretory $membrane $sig&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $total = $out + $on;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$str\\t$total\\t$out\\t$on\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">idseq</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($fasta) = @_;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $fasta || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header =~ <span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (%hash);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl tmhmm_parser.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“c886”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li><p><a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"Use microeco分析扩增子数据","slug":"Use_microeco分析扩增子数据","date":"2021-03-14T07:01:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Use_microeco分析扩增子数据.json","excerpt":null,"keywords":null,"cover":"#/images/lujia/show_15_taxa_at_Class_level.jpg","content":"<p>本文阐述使用microeco分析扩增子数据……</p>\n<span id=\"more\"></span>\n\n<h1 id=\"1-安装microeco\"><a href=\"#1-安装microeco\" class=\"headerlink\" title=\"1. 安装microeco\"></a><font color=#FF0000 >1. 安装microeco</font></h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># If devtools package is not installed, first install it</span></span><br><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;devtools&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># then install microeco</span></span><br><span class=\"line\">devtools<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;ChiLiubio/microeco&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>requireNamespace<span class=\"punctuation\">(</span><span class=\"string\">&quot;devtools&quot;</span><span class=\"punctuation\">,</span> quietly <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span>install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;devtools&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">devtools<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;jbisanz/qiime2R&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-准备数据\"><a href=\"#2-准备数据\" class=\"headerlink\" title=\"2. 准备数据\"></a><font color=#FF0000 >2. 准备数据</font></h1><h2 id=\"otu-table\"><a href=\"#otu-table\" class=\"headerlink\" title=\"otu_table\"></a><font color=#FF9800 >otu_table</font></h2><p>OTU表</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Sample 1</th>\n<th>Sample 2</th>\n<th>Sample 3</th>\n<th>Sample 4</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>OTU1</td>\n<td>232.0</td>\n<td>209.0</td>\n<td>349.0</td>\n<td>256.0</td>\n</tr>\n<tr>\n<td>OTU2</td>\n<td>75.0</td>\n<td>35.0</td>\n<td>44.0</td>\n<td>0.0</td>\n</tr>\n<tr>\n<td>OTU3</td>\n<td>237.0</td>\n<td>224.0</td>\n<td>291.0</td>\n<td>353.0</td>\n</tr>\n<tr>\n<td>OTU4</td>\n<td>371.0</td>\n<td>80.0</td>\n<td>319.0</td>\n<td>345.0</td>\n</tr>\n</tbody></table>\n<h2 id=\"taxonomy-table\"><a href=\"#taxonomy-table\" class=\"headerlink\" title=\"taxonomy_table\"></a><font color=#FF9800 >taxonomy_table</font></h2><p>分类表</p>\n<div style=\"overflow-x:auto;\">\n<table>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Kingdom</th>\n<th>Phylum</th>\n<th>Class</th>\n<th>Order</th>\n<th>Family</th>\n<th>Genus</th>\n<th>Species</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>OTU1</td>\n<td>d__Bacteria</td>\n<td>p__Desulfobacterota</td>\n<td>c__Desulfobacteria</td>\n<td>o__Desulfatiglandales</td>\n<td>f__Desulfatiglandaceae</td>\n<td>g__Desulfatiglans</td>\n<td></td>\n</tr>\n<tr>\n<td>OTU2</td>\n<td>d__Bacteria</td>\n<td>p__Sva0485</td>\n<td>c__Sva0485</td>\n<td>o__Sva0485</td>\n<td>f__Sva0485</td>\n<td>g__Sva0485</td>\n<td>s__uncultured_hydrocarbon</td>\n</tr>\n<tr>\n<td>OTU3</td>\n<td>d__Bacteria</td>\n<td>p__Desulfobacterota</td>\n<td>c__Syntrophobacteria</td>\n<td>o__Syntrophobacterales</td>\n<td>f__uncultured</td>\n<td>g__uncultured</td>\n<td>s__uncultured_delta</td>\n</tr>\n<tr>\n<td>OTU4</td>\n<td>d__Bacteria</td>\n<td>p__Myxococcota</td>\n<td>c__Polyangia</td>\n<td>o__Polyangiales</td>\n<td>f__Sandaracinaceae</td>\n<td>g__uncultured</td>\n<td></td>\n</tr>\n</tbody></table>\n</table>\n</div>\n\n<h2 id=\"sample-info\"><a href=\"#sample-info\" class=\"headerlink\" title=\"sample_info\"></a><font color=#FF9800 >sample_info</font></h2><p>样本元数据</p>\n<table>\n<thead>\n<tr>\n<th>SampleID</th>\n<th>Group</th>\n<th>Type</th>\n<th>Saline</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Sample 1</td>\n<td>G1</td>\n<td>T1</td>\n<td>Non-saline</td>\n</tr>\n<tr>\n<td>Sample 2</td>\n<td>G1</td>\n<td>T1</td>\n<td>Non-saline</td>\n</tr>\n<tr>\n<td>Sample 3</td>\n<td>G2</td>\n<td>T1</td>\n<td>Saline</td>\n</tr>\n<tr>\n<td>Sample 4</td>\n<td>G2</td>\n<td>T2</td>\n<td>Saline</td>\n</tr>\n</tbody></table>\n<h2 id=\"env-data\"><a href=\"#env-data\" class=\"headerlink\" title=\"env_data\"></a><font color=#FF9800 >env_data</font></h2><p>环境因子</p>\n<table>\n<thead>\n<tr>\n<th>SampleID</th>\n<th>Depth</th>\n<th>Longitude</th>\n<th>Latitude</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Sample 1</td>\n<td>0</td>\n<td>23.0</td>\n<td>20</td>\n</tr>\n<tr>\n<td>Sample 2</td>\n<td>10</td>\n<td>35.0</td>\n<td>44.0</td>\n</tr>\n<tr>\n<td>Sample 3</td>\n<td>20</td>\n<td>43.0</td>\n<td>70.0</td>\n</tr>\n<tr>\n<td>Sample 4</td>\n<td>30</td>\n<td>60.0</td>\n<td>69.0</td>\n</tr>\n</tbody></table>\n<h2 id=\"phylo-tree\"><a href=\"#phylo-tree\" class=\"headerlink\" title=\"phylo_tree\"></a><font color=#FF9800 >phylo_tree</font></h2><p>进化树</p>\n<h1 id=\"3-导入数据\"><a href=\"#3-导入数据\" class=\"headerlink\" title=\"3. 导入数据\"></a><font color=#FF0000 >3. 导入数据</font></h1><ul>\n<li><p>加载R包</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>microeco<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ape<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>qiime2R<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># use pipe operator in magrittr package</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>magrittr<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># set.seed is used to fix the random number generation to make the results repeatable</span></span><br><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">123</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># make the plotting background same with the tutorial</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">theme_set<span class=\"punctuation\">(</span>theme_bw<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>导入数据</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单独导入环境因子文件</span></span><br><span class=\"line\">env_data <span class=\"operator\">&lt;-</span> read.delim<span class=\"punctuation\">(</span><span class=\"string\">&quot;E:/Researches/lujia16S/Analysis_20200907/Ordination_analyses/env4.txt&quot;</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> row.names <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义数据导入函数</span></span><br><span class=\"line\">qiimed2meco <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>ASV_data<span class=\"punctuation\">,</span> sample_data<span class=\"punctuation\">,</span> taxonomy_data<span class=\"punctuation\">,</span> phylo_tree <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\"># Read ASV data</span></span><br><span class=\"line\">\tASV <span class=\"operator\">&lt;-</span> as.data.frame<span class=\"punctuation\">(</span>read_qza<span class=\"punctuation\">(</span>ASV_data<span class=\"punctuation\">)</span><span class=\"operator\">$</span>data<span class=\"punctuation\">)</span></span><br><span class=\"line\">\t<span class=\"comment\">#  Read metadata</span></span><br><span class=\"line\">\tmetadata <span class=\"operator\">&lt;-</span> read_q2metadata<span class=\"punctuation\">(</span>sample_data<span class=\"punctuation\">)</span></span><br><span class=\"line\">\trownames<span class=\"punctuation\">(</span>metadata<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>metadata<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">\t<span class=\"comment\"># Read taxonomy table</span></span><br><span class=\"line\">\ttaxa_table <span class=\"operator\">&lt;-</span> read_qza<span class=\"punctuation\">(</span>taxonomy_data<span class=\"punctuation\">)</span></span><br><span class=\"line\">\ttaxa_table <span class=\"operator\">&lt;-</span> parse_taxonomy<span class=\"punctuation\">(</span>taxa_table<span class=\"operator\">$</span>data<span class=\"punctuation\">)</span></span><br><span class=\"line\">\t<span class=\"comment\"># Make the taxonomic table clean, this is very important.</span></span><br><span class=\"line\">\ttaxa_table <span class=\"operator\">%&lt;&gt;%</span> tidy_taxonomy</span><br><span class=\"line\">\t<span class=\"comment\"># Read phylo tree</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span><span class=\"punctuation\">(</span><span class=\"operator\">!</span><span class=\"built_in\">is.null</span><span class=\"punctuation\">(</span>phylo_tree<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t\tphylo_tree <span class=\"operator\">&lt;-</span> read_qza<span class=\"punctuation\">(</span>phylo_tree<span class=\"punctuation\">)</span><span class=\"operator\">$</span>data</span><br><span class=\"line\">\t<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">\tdataset <span class=\"operator\">&lt;-</span> microtable<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>sample_table <span class=\"operator\">=</span> metadata<span class=\"punctuation\">,</span> tax_table <span class=\"operator\">=</span> taxa_table<span class=\"punctuation\">,</span> otu_table <span class=\"operator\">=</span> ASV<span class=\"punctuation\">,</span> phylo_tree <span class=\"operator\">=</span> phylo_tree<span class=\"punctuation\">)</span></span><br><span class=\"line\">\tdataset</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入本地数据，包括OTU表、样本元数据、分类表、tree文件。这几个文件均有QIIME2生成。</span></span><br><span class=\"line\">meco_dataset <span class=\"operator\">&lt;-</span> qiimed2meco<span class=\"punctuation\">(</span>ASV_data <span class=\"operator\">=</span> <span class=\"string\">&quot;E:/Researches/lujia16S/Analysis_20200907/dada2_table.qza&quot;</span><span class=\"punctuation\">,</span> sample_data <span class=\"operator\">=</span> <span class=\"string\">&quot;E:/Researches/lujia16S/Analysis_20200907/metadata.tsv&quot;</span><span class=\"punctuation\">,</span> taxonomy_data <span class=\"operator\">=</span> <span class=\"string\">&quot;E:/Researches/lujia16S/Analysis_20200907/taxonomy.qza&quot;</span><span class=\"punctuation\">,</span> phylo_tree <span class=\"operator\">=</span> <span class=\"string\">&quot;E:/Researches/lujia16S/Analysis_20200907/tree.qza&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">meco_dataset</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"4-数据预处理\"><a href=\"#4-数据预处理\" class=\"headerlink\" title=\"4. 数据预处理\"></a><font color=#FF0000 >4. 数据预处理</font></h1><ul>\n<li><p>移除未被分配到 “k__Archaea” 或 “k__Bacteria”的OTUs</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meco_dataset<span class=\"operator\">$</span>tax_table <span class=\"operator\">%&lt;&gt;%</span> base<span class=\"operator\">::</span>subset<span class=\"punctuation\">(</span>Kingdom <span class=\"operator\">==</span> <span class=\"string\">&quot;k__Archaea&quot;</span> <span class=\"operator\">|</span> Kingdom <span class=\"operator\">==</span> <span class=\"string\">&quot;k__Bacteria&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">print<span class=\"punctuation\">(</span>meco_dataset<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>移除注释为线粒体和叶绿体的OTUs</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 移除tax_table中包含taxa名字的行，无论分类等级（taxonomic ranks），不区分大小写字母。简言之，taxa = c(&quot;mitochondria&quot;, &quot;chloroplast&quot;)定义了删除包含mitochondria和chloroplast的行。</span></span><br><span class=\"line\"></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>filter_pollution<span class=\"punctuation\">(</span>taxa <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;mitochondria&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;chloroplast&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">print<span class=\"punctuation\">(</span>meco_dataset<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>为了使otu_table、tax_table和phylo_tree中的OTUs相同，我们再次使用tidy_dataset() 函数</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meco_dataset<span class=\"operator\">$</span>tidy_dataset<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">print<span class=\"punctuation\">(</span>meco_dataset<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>调用sample_sums()检查各样本中的序列数量</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meco_dataset<span class=\"operator\">$</span>sample_sums<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> <span class=\"built_in\">range</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>有时，为了减少物种数目对多样性度量的影响，我们需要进行重采样，使每个样本中的序列数量相等。函数rarefy_samples可以在稀疏（rarefying）前后自动调用函数tidy_dataset。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># As an example, we use 20001 sequences in each sample</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>rarefy_samples<span class=\"punctuation\">(</span>sample.size <span class=\"operator\">=</span> <span class=\"number\">20001</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>sample_sums<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> <span class=\"built_in\">range</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"5-alpha多样性\"><a href=\"#5-alpha多样性\" class=\"headerlink\" title=\"5. alpha多样性\"></a><font color=#FF0000 >5. alpha多样性</font></h1><ul>\n<li><p>然后，我们使用cal_abund()计算每个分类等级的分类单元丰度（taxa abundance）。此函数返回一个名为taxa_abund的列表，其中包含每个分类等级上的丰度信息的多个数据框。列表自动存储在microtable object中。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">meco_dataset<span class=\"operator\">$</span>cal_abund<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return dataset$taxa_abund</span></span><br><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>meco_dataset<span class=\"operator\">$</span>taxa_abund<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>通过save_abund()将taxa abundance保存至本地文件</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dir.create<span class=\"punctuation\">(</span><span class=\"string\">&quot;taxa_abund&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>save_abund<span class=\"punctuation\">(</span>dirpath <span class=\"operator\">=</span> <span class=\"string\">&quot;taxa_abund&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算alpha多样性。结果自动存储在microtable object中。<font color=#2196F3>作为示例，此处未计算系统发育多样性（phylogenetic diversity）</font>。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 若要计算Faith&#x27;s phylogenetic diversity，设置PD = TRUE，计算速度会较慢</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>cal_alphadiv<span class=\"punctuation\">(</span>PD <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># return dataset$alpha_diversity</span></span><br><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>meco_dataset<span class=\"operator\">$</span>alpha_diversity<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># save dataset$alpha_diversity to a directory</span></span><br><span class=\"line\">dir.create<span class=\"punctuation\">(</span><span class=\"string\">&quot;alpha_diversity&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>save_alphadiv<span class=\"punctuation\">(</span>dirpath <span class=\"operator\">=</span> <span class=\"string\">&quot;alpha_diversity&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"6-β多样性\"><a href=\"#6-β多样性\" class=\"headerlink\" title=\"6. β多样性\"></a><font color=#FF0000 >6. β多样性</font></h1><ul>\n<li><p>利用函数cal_betadiv()计算beta-多样性的距离矩阵。我们提供了四个最常用的索引：Bray-curtis、Jaccard、加权Unifrac和未加权Unifrac。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># If you do not want to calculate unifrac metrics, use unifrac = FALSE</span></span><br><span class=\"line\"><span class=\"comment\"># 需要GUniFrac package</span></span><br><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;GUniFrac&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>cal_betadiv<span class=\"punctuation\">(</span>unifrac <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return dataset$beta_diversity</span></span><br><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>meco_dataset<span class=\"operator\">$</span>beta_diversity<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># save dataset$beta_diversity to a directory</span></span><br><span class=\"line\">dir.create<span class=\"punctuation\">(</span><span class=\"string\">&quot;beta_diversity&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>save_betadiv<span class=\"punctuation\">(</span>dirpath <span class=\"operator\">=</span> <span class=\"string\">&quot;beta_diversity&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"7-trans-abund-class\"><a href=\"#7-trans-abund-class\" class=\"headerlink\" title=\"7. trans_abund class\"></a><font color=#FF0000 >7. trans_abund class</font></h1><ul>\n<li><p>绘制Barplot。转换分类丰度数据，以便使用ggplot2包绘制分类单元丰度。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># create trans_abund object</span></span><br><span class=\"line\"><span class=\"comment\"># use 12 Phyla with the highest abundance in the dataset.</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_abund<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> taxrank <span class=\"operator\">=</span> <span class=\"string\">&quot;Phylum&quot;</span><span class=\"punctuation\">,</span> ntaxa <span class=\"operator\">=</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># t1 object now include the transformed abundance data t1$abund_data and other elements for the following plotting</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>绘制Barplot. We remove the sample names in x axis and add the facet to show abundance according to groups.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1<span class=\"operator\">$</span>plot_bar<span class=\"punctuation\">(</span>others_color <span class=\"operator\">=</span> <span class=\"string\">&quot;grey70&quot;</span><span class=\"punctuation\">,</span> facet <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> xtext_keep <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> legend_text_italic <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return a ggplot2 object</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取组内平均值。The groupmean parameter can be used to obtain the group-mean barplot.</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_abund<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> taxrank <span class=\"operator\">=</span> <span class=\"string\">&quot;Phylum&quot;</span><span class=\"punctuation\">,</span> ntaxa <span class=\"operator\">=</span> <span class=\"number\">12</span><span class=\"punctuation\">,</span> groupmean <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_bar<span class=\"punctuation\">(</span>others_color <span class=\"operator\">=</span> <span class=\"string\">&quot;grey70&quot;</span><span class=\"punctuation\">,</span> legend_text_italic <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Then alluvial plot is implemented in the plot_bar function.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;ggalluvial&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_abund<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> taxrank <span class=\"operator\">=</span> <span class=\"string\">&quot;Phylum&quot;</span><span class=\"punctuation\">,</span> ntaxa <span class=\"operator\">=</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># use_alluvium = TRUE make the alluvial plot, clustering =TRUE can be used to reorder the samples by clustering</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_bar<span class=\"punctuation\">(</span>use_alluvium <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> clustering <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> xtext_type_hor <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> xtext_size <span class=\"operator\">=</span> <span class=\"number\">6</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>The box plot is an excellent way to intuitionally show data distribution across groups.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># show 15 taxa at Class level</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_abund<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> taxrank <span class=\"operator\">=</span> <span class=\"string\">&quot;Class&quot;</span><span class=\"punctuation\">,</span> ntaxa <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_box<span class=\"punctuation\">(</span>group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"#/images/lujia/show_15_taxa_at_Class_level.jpg\" class=\"lazyload placeholder\" data-srcset=\"#/images/lujia/show_15_taxa_at_Class_level.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"show 15 taxa at Class level\"></p>\n<ul>\n<li><p>Then we show the heatmap with the high abundant genera.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># show 40 taxa at Genus level</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_abund<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> taxrank <span class=\"operator\">=</span> <span class=\"string\">&quot;Genus&quot;</span><span class=\"punctuation\">,</span> ntaxa <span class=\"operator\">=</span> <span class=\"number\">40</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_heatmap<span class=\"punctuation\">(</span>facet <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> xtext_keep <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> withmargin <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Then, we show the pie chart.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_abund<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> taxrank <span class=\"operator\">=</span> <span class=\"string\">&quot;Phylum&quot;</span><span class=\"punctuation\">,</span> ntaxa <span class=\"operator\">=</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span> groupmean <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># all pie chart in one row</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_pie<span class=\"punctuation\">(</span>facet_nrow <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"8-trans-venn-class\"><a href=\"#8-trans-venn-class\" class=\"headerlink\" title=\"8. trans_venn class\"></a><font color=#FF0000 >8. trans_venn class</font></h1><ul>\n<li><p>The trans_venn class is used for venn analysis. To analyze the unique and shared OTUs of groups, we first merge samples according to the “Group” column of sample_table.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># merge samples as one community for each group</span></span><br><span class=\"line\">dataset1 <span class=\"operator\">&lt;-</span> meco_dataset<span class=\"operator\">$</span>merge_samples<span class=\"punctuation\">(</span>use_group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># dataset1 is a new microtable object</span></span><br><span class=\"line\"><span class=\"comment\"># create trans_venn object</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_venn<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset1<span class=\"punctuation\">,</span> ratio <span class=\"operator\">=</span> <span class=\"string\">&quot;seqratio&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_venn<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># The integer data is OTU number</span></span><br><span class=\"line\"><span class=\"comment\"># The percentage data is the sequence number/total sequence number</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>When the groups are too many to show with venn plot, we can use petal plot.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># use &quot;Type&quot; column in sample_table</span></span><br><span class=\"line\">dataset1 <span class=\"operator\">&lt;-</span> meco_dataset<span class=\"operator\">$</span>merge_samples<span class=\"punctuation\">(</span>use_group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_venn<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset1<span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_venn<span class=\"punctuation\">(</span>petal_plot <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Sometimes, we are interested in the unique and shared species. In another words, the composition of the unique or shared species may account for the different and similar parts of ecological characteristics across groups[10]. For this goal, we first transform the results of venn plot to the traditional species-sample table, that is, another object of microtable class.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataset1 <span class=\"operator\">&lt;-</span> meco_dataset<span class=\"operator\">$</span>merge_samples<span class=\"punctuation\">(</span>use_group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_venn<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset1<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># transform venn results to the sample-species table, here do not consider abundance, only use presence/absence information.</span></span><br><span class=\"line\">t2 <span class=\"operator\">&lt;-</span> t1<span class=\"operator\">$</span>trans_venn_com<span class=\"punctuation\">(</span>use_OTUs_frequency <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># t2 is a new microtable class, each part is considered as a sample</span></span><br><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>t2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>We use bar plot to show the composition at the Genus level.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># calculate taxa abundance, that is, the frequency</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>cal_abund<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># transform and plot</span></span><br><span class=\"line\">t3 <span class=\"operator\">&lt;-</span> trans_abund<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> t2<span class=\"punctuation\">,</span> taxrank <span class=\"operator\">=</span> <span class=\"string\">&quot;Genus&quot;</span><span class=\"punctuation\">,</span> ntaxa <span class=\"operator\">=</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t3<span class=\"operator\">$</span>plot_bar<span class=\"punctuation\">(</span>bar_type <span class=\"operator\">=</span> <span class=\"string\">&quot;part&quot;</span><span class=\"punctuation\">,</span> legend_text_italic <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">,</span> ylab_title <span class=\"operator\">=</span> <span class=\"string\">&quot;Frequency (%)&quot;</span><span class=\"punctuation\">,</span> xtext_type_hor <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>We also try to use pie chart to show the compositions at the Phylum level</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t3 <span class=\"operator\">&lt;-</span> trans_abund<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> t2<span class=\"punctuation\">,</span> taxrank <span class=\"operator\">=</span> <span class=\"string\">&quot;Phylum&quot;</span><span class=\"punctuation\">,</span> ntaxa <span class=\"operator\">=</span> <span class=\"number\">8</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t3<span class=\"operator\">$</span>plot_pie<span class=\"punctuation\">(</span>facet_nrow <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span> use_colors <span class=\"operator\">=</span> rev<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span>RColorBrewer<span class=\"operator\">::</span>brewer.pal<span class=\"punctuation\">(</span><span class=\"number\">8</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Dark2&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;grey50&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"9-trans-alpha-class\"><a href=\"#9-trans-alpha-class\" class=\"headerlink\" title=\"9. trans_alpha class\"></a><font color=#FF0000 >9. trans_alpha class</font></h1><ul>\n<li><p>Alpha diversity can be transformed and plotted using trans_alpha class. Creating trans_alpha object can return two data frame: alpha_data and alpha_stat.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_alpha<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$alpha_stat</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>alpha_stat<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Then, we test the differences among groups using the KW rank sum test and anova with multiple comparisons.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1<span class=\"operator\">$</span>cal_diff<span class=\"punctuation\">(</span>method <span class=\"operator\">=</span> <span class=\"string\">&quot;KW&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_alpha_diff</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>res_alpha_diff<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Groups</th>\n<th>Measure</th>\n<th>Test method</th>\n<th>p.value</th>\n<th>Significance</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>T16 vs T18</td>\n<td>Observed</td>\n<td>KW</td>\n<td>2.601895e-03</td>\n<td>**</td>\n</tr>\n<tr>\n<td>2</td>\n<td>T16 vs T20</td>\n<td>Observed</td>\n<td>KW</td>\n<td>3.011399e-08</td>\n<td>***</td>\n</tr>\n<tr>\n<td>3</td>\n<td>T16 vs T21</td>\n<td>Observed</td>\n<td>KW</td>\n<td>2.174162e-04</td>\n<td>***</td>\n</tr>\n<tr>\n<td>4</td>\n<td>T16 vs T17</td>\n<td>Observed</td>\n<td>KW</td>\n<td>1.234229e-03</td>\n<td>**</td>\n</tr>\n<tr>\n<td>5</td>\n<td>T18 vs T20</td>\n<td>Observed</td>\n<td>KW</td>\n<td>7.319258e-08</td>\n<td>***</td>\n</tr>\n</tbody></table>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1<span class=\"operator\">$</span>cal_diff<span class=\"punctuation\">(</span>method <span class=\"operator\">=</span> <span class=\"string\">&quot;anova&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_alpha_diff</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>res_alpha_diff</span><br></pre></td></tr></table></figure>\n  <div style=\"overflow-x:auto;\">\n  <table>\n\n<table>\n<thead>\n<tr>\n<th>Observed</th>\n<th>Chao1</th>\n<th>ACE</th>\n<th>Shannon</th>\n<th>Simpson</th>\n<th>InvSimpson</th>\n<th>Fisher</th>\n<th>Coverage</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>T18</td>\n<td>a</td>\n<td>a</td>\n<td>a</td>\n<td>a</td>\n<td>a</td>\n<td>a</td>\n<td>a</td>\n</tr>\n<tr>\n<td>T16</td>\n<td>b</td>\n<td>b</td>\n<td>b</td>\n<td>a</td>\n<td>a</td>\n<td>a</td>\n<td>b</td>\n</tr>\n<tr>\n<td>T17</td>\n<td>c</td>\n<td>c</td>\n<td>c</td>\n<td>b</td>\n<td>a</td>\n<td>b</td>\n<td>c</td>\n</tr>\n<tr>\n<td>T21</td>\n<td>d</td>\n<td>d</td>\n<td>d</td>\n<td>c</td>\n<td>a</td>\n<td>c</td>\n<td>d</td>\n</tr>\n<tr>\n<td>T20</td>\n<td>e</td>\n<td>e</td>\n<td>e</td>\n<td>d</td>\n<td>b</td>\n<td>d</td>\n<td>e</td>\n</tr>\n<tr>\n<td></table></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></div></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n</li>\n<li><p>Now, let us plot the mean and se of alpha diversity for each group, and add the duncan.test (agricolae package) result.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1<span class=\"operator\">$</span>plot_alpha<span class=\"punctuation\">(</span>add_letter <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> measure <span class=\"operator\">=</span> <span class=\"string\">&quot;Chao1&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>We can also use the boxplot to show the paired comparisons directly.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1<span class=\"operator\">$</span>plot_alpha<span class=\"punctuation\">(</span>pair_compare <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> measure <span class=\"operator\">=</span> <span class=\"string\">&quot;Chao1&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"10-trans-beta-class\"><a href=\"#10-trans-beta-class\" class=\"headerlink\" title=\"10. trans_beta class\"></a><font color=#FF0000 >10. trans_beta class</font></h1><ul>\n<li><p>The distance matrix of beta diversity can be transformed and plotted using trans_beta class. The analysis referred to the beta diversity in this class mainly include ordination, group distance, clustering and manova. We first show the ordination using PCoA.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># we first create an object and select PCoA for ordination</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_beta<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> measure <span class=\"operator\">=</span> <span class=\"string\">&quot;bray&quot;</span><span class=\"punctuation\">,</span> ordination <span class=\"operator\">=</span> <span class=\"string\">&quot;PCoA&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># t1$res_ordination is the ordination result list</span></span><br><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>t1<span class=\"operator\">$</span>res_ordination<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># plot the PCoA result</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_ordination<span class=\"punctuation\">(</span>plot_color <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> plot_shape <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> plot_group_ellipse <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Then we plot and compare the group distances.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># calculate and plot sample distances within groups</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_group_distance<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_group_distance</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_group_distance<span class=\"punctuation\">(</span>distance_pair_stat <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># calculate and plot sample distances between groups (报错：错误: Insufficient values in manual scale. 10 needed but only 8 provided.)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_group_distance<span class=\"punctuation\">(</span>within_group <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_group_distance<span class=\"punctuation\">(</span>distance_pair_stat <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Clustering plot is also a frequently used method.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># use replace_name to set the label name, group parameter used to set the color (报错：找不到对象&#x27;dataset&#x27;)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_clustering<span class=\"punctuation\">(</span>group <span class=\"operator\">=</span> <span class=\"string\">&quot;Indexs&quot;</span><span class=\"punctuation\">,</span> replace_name <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Water-depth(m)&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Indexs&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>perMANOVA is often used in the differential test of distances among groups.</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># manova for all groups</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_manova<span class=\"punctuation\">(</span>cal_manova_all <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>res_manova<span class=\"operator\">$</span>aov.tab</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>Permutation: free</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Number of permutations: 999</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Terms added sequentially (first to last)</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Df</td>\n<td>SumsOfSqs</td>\n<td>MeanSqs</td>\n<td>F.Model</td>\n<td>R<sup>2</sup></td>\n<td>Pr(&gt;F)</td>\n</tr>\n<tr>\n<td>Site</td>\n<td>4</td>\n<td>15.669</td>\n<td>3.9173</td>\n<td>19.445</td>\n<td>0.48077</td>\n<td>0.001 ***</td>\n</tr>\n<tr>\n<td>Residuals</td>\n<td>84</td>\n<td>16.923</td>\n<td>0.2015</td>\n<td></td>\n<td>0.51923</td>\n<td></td>\n</tr>\n<tr>\n<td>Total</td>\n<td>88</td>\n<td>32.592</td>\n<td></td>\n<td></td>\n<td>1.00000</td>\n<td></td>\n</tr>\n</tbody></table>\n<p> &gt; Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># manova for each paired groups</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_manova<span class=\"punctuation\">(</span>cal_manova_paired <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>res_manova</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>Groups</th>\n<th>measure</th>\n<th>permutations</th>\n<th>R<sup>2</sup></th>\n<th>p.value</th>\n<th>Significance</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>T16 vs T18</td>\n<td>bray</td>\n<td>999</td>\n<td>0.2748773</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>2</td>\n<td>T16 vs T20</td>\n<td>bray</td>\n<td>999</td>\n<td>0.4539103</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>3</td>\n<td>T16 vs T21</td>\n<td>bray</td>\n<td>999</td>\n<td>0.4102009</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>4</td>\n<td>T16 vs T17</td>\n<td>bray</td>\n<td>999</td>\n<td>0.2243404</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>5</td>\n<td>T18 vs T20</td>\n<td>bray</td>\n<td>999</td>\n<td>0.3736482</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>6</td>\n<td>T18 vs T21</td>\n<td>bray</td>\n<td>999</td>\n<td>0.3504104</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>7</td>\n<td>T18 vs T17</td>\n<td>bray</td>\n<td>999</td>\n<td>0.2147055</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>8</td>\n<td>T20 vs T21</td>\n<td>bray</td>\n<td>999</td>\n<td>0.3575765</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>9</td>\n<td>T20 vs T17</td>\n<td>bray</td>\n<td>999</td>\n<td>0.4589248</td>\n<td>0.001</td>\n</tr>\n<tr>\n<td>10</td>\n<td>T21 vs T17</td>\n<td>bray</td>\n<td>999</td>\n<td>0.4395176</td>\n<td>0.001</td>\n</tr>\n</tbody></table>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\"># manova for specified group set: here &quot;Group + Type&quot;</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_manova<span class=\"punctuation\">(</span>cal_manova_set <span class=\"operator\">=</span> <span class=\"string\">&quot;Site+ Indexs&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>res_manova<span class=\"operator\">$</span>aov.tab</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>Permutation: free</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Number of permutations: 999</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Terms added sequentially (first to last)</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Df</td>\n<td>SumsOfSqs</td>\n<td>MeanSqs</td>\n<td>F.Model</td>\n<td>R<sup>2</sup></td>\n<td>Pr(F)</td>\n</tr>\n<tr>\n<td>Site</td>\n<td>4</td>\n<td>15.669</td>\n<td>4</td>\n<td>0</td>\n<td>0.48077</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Indexs</td>\n<td>84</td>\n<td>16.923</td>\n<td>0</td>\n<td>0</td>\n<td>0.51923</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Residuals</td>\n<td>0</td>\n<td>0.000</td>\n<td>Inf</td>\n<td></td>\n<td>0.00000</td>\n<td></td>\n</tr>\n<tr>\n<td>Total</td>\n<td>88</td>\n<td>32.592</td>\n<td></td>\n<td></td>\n<td>1.00000</td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"11-trans-diff-class\"><a href=\"#11-trans-diff-class\" class=\"headerlink\" title=\"11. trans_diff class\"></a><font color=#FF0000 >11. trans_diff class</font></h1><ul>\n<li><p>Differential abundance test is a very important part in the microbial community data analysis. It can be used to find the significant taxa in determining the community differences across groups. Currently, trans_diff class have three famous approaches to perform this analysis: metastat[11], LEfSe[12] and random forest. Metastat depends on the permutations and t-test and performs well on the sparse data. It is used for the comparisons between two groups.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># metastat analysis at Genus level</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_diff<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;metastat&quot;</span><span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> metastat_taxa_level <span class=\"operator\">=</span> <span class=\"string\">&quot;Genus&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># t1$res_metastat is the result</span></span><br><span class=\"line\"><span class=\"comment\"># t1$res_metastat_group_matrix is the group comparisons order for plotting</span></span><br><span class=\"line\"><span class=\"comment\"># plot the first paired groups, choose_group = 1</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_metastat<span class=\"punctuation\">(</span>use_number <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> qvalue <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">,</span> choose_group <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>LEfSe combines the non-parametric test and linear discriminant analysis. We implement this approach in this package instead of the python version.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_diff<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;lefse&quot;</span><span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> alpha <span class=\"operator\">=</span> <span class=\"number\">0.01</span><span class=\"punctuation\">,</span> lefse_subgroup <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># t1$res_lefse is the LEfSe result</span></span><br><span class=\"line\"><span class=\"comment\"># t1$res_abund is the abundance information</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_lefse_bar<span class=\"punctuation\">(</span>LDA_score <span class=\"operator\">=</span> <span class=\"number\">4</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>We can also plot the abundance of taxa detected using LEfSe.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1<span class=\"operator\">$</span>plot_diff_abund<span class=\"punctuation\">(</span>use_number <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Then, we show the cladogram of the differential features in the taxonomic tree. There are too many taxa in this dataset. As an example, we only use the highest 200 abundant taxa in the tree and 50 differential features. We only show the full taxonomic label at Phylum level and use letters at other levels to reduce the text overlap.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># clade_label_level 5 represent phylum level in this analysis</span></span><br><span class=\"line\"><span class=\"comment\"># require ggtree package</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_lefse_cladogram<span class=\"punctuation\">(</span>use_taxa_num <span class=\"operator\">=</span> <span class=\"number\">200</span><span class=\"punctuation\">,</span> use_feature_num <span class=\"operator\">=</span> <span class=\"number\">50</span><span class=\"punctuation\">,</span> clade_label_level <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>There may be a problem related with the taxonomic labels in the plot. When the levels used are too many, the taxonomic labels may have too much overlap. However, if we only indicate the Phylum labels, the taxa in the legend with marked letters are too many. At this time, you can select the taxa that you want to show in the plot manually like the following operation.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># choose some taxa according to the positions in the previous picture; those taxa labels have minimum overlap</span></span><br><span class=\"line\">use_labels <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;c__Deltaproteobacteria&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;c__Actinobacteria&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;o__Rhizobiales&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;p__Proteobacteria&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;p__Bacteroidetes&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">\t<span class=\"string\">&quot;o__Micrococcales&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;p__Acidobacteria&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;p__Verrucomicrobia&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;p__Firmicutes&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">\t<span class=\"string\">&quot;p__Chloroflexi&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;c__Acidobacteria&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;c__Gammaproteobacteria&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;c__Betaproteobacteria&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;c__KD4-96&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;c__Bacilli&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;o__Gemmatimonadales&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;f__Gemmatimonadaceae&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;o__Bacillales&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;o__Rhodobacterales&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># then use parameter select_show_labels to show</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_lefse_cladogram<span class=\"punctuation\">(</span>use_taxa_num <span class=\"operator\">=</span> <span class=\"number\">200</span><span class=\"punctuation\">,</span> use_feature_num <span class=\"operator\">=</span> <span class=\"number\">50</span><span class=\"punctuation\">,</span> select_show_labels <span class=\"operator\">=</span> use_labels<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Now we can see that more taxa names appear in the tree</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>If you are interested in taxonomic tree, you can also use metacoder package[13] to plot the taxonomic tree based on the selected taxa. We do not show the usage here.</p>\n</li>\n<li><p>The third approach is rf, which depends on the random forest[14, 15] and the non-parametric test. The current method can calculate random forest by bootstrapping like the method in LEfSe and only use the significant features. MeanDecreaseGini is selected as the indicator value in the analysis.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># use Genus level for parameter rf_taxa_level, if you want to use all taxa, change to &quot;all&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># nresam = 1 and boots = 1 represent no bootstrapping and use all samples directly</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_diff<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;rf&quot;</span><span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> rf_taxa_level <span class=\"operator\">=</span> <span class=\"string\">&quot;Genus&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># t1$res_rf is the result stored in the object</span></span><br><span class=\"line\"><span class=\"comment\"># plot the result</span></span><br><span class=\"line\">t2 <span class=\"operator\">&lt;-</span> t1<span class=\"operator\">$</span>plot_diff_abund<span class=\"punctuation\">(</span>use_number <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">20</span><span class=\"punctuation\">,</span> only_abund_plot <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">gridExtra<span class=\"operator\">::</span>grid.arrange<span class=\"punctuation\">(</span>t2<span class=\"operator\">$</span>p1<span class=\"punctuation\">,</span> t2<span class=\"operator\">$</span>p2<span class=\"punctuation\">,</span> ncol<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> nrow <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> widths <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># the middle asterisk represent the significances</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"12-trans-env-class\"><a href=\"#12-trans-env-class\" class=\"headerlink\" title=\"12. trans_env class\"></a><font color=#FF0000 >12. trans_env class</font></h1><ul>\n<li><p>分析环境因子对微生物群落结构和组装的影响：RDA分析(db-RDA和RDA).</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># add_data is used to add the environmental data</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_env<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> add_data <span class=\"operator\">=</span> env_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">7</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use bray-curtis distance to do dbrda</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_rda<span class=\"punctuation\">(</span>use_dbrda <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> use_measure <span class=\"operator\">=</span> <span class=\"string\">&quot;bray&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># t1$res_rda is the result list stored in the object</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>trans_rda<span class=\"punctuation\">(</span>adjust_arrow_length <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> max_perc_env <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># t1$res_rda_trans is the transformed result for plotting</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_rda<span class=\"punctuation\">(</span>plot_color <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use Genus</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_rda<span class=\"punctuation\">(</span>use_dbrda <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> taxa_level <span class=\"operator\">=</span> <span class=\"string\">&quot;Genus&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># As the main results of RDA are related with the projection and angles between different arrows,</span></span><br><span class=\"line\"><span class=\"comment\"># we adjust the length of the arrow to show them clearly using several parameters.</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>trans_rda<span class=\"punctuation\">(</span>show_taxa <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span> adjust_arrow_length <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> max_perc_env <span class=\"operator\">=</span> <span class=\"number\">1500</span><span class=\"punctuation\">,</span> max_perc_tax <span class=\"operator\">=</span> <span class=\"number\">3000</span><span class=\"punctuation\">,</span> min_perc_env <span class=\"operator\">=</span> <span class=\"number\">200</span><span class=\"punctuation\">,</span> min_perc_tax <span class=\"operator\">=</span> <span class=\"number\">300</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># t1$res_rda_trans is the transformed result for plotting</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_rda<span class=\"punctuation\">(</span>plot_color <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Mantel test 用于检测环境因子和距离矩阵之间是否具有显著的相关性。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1<span class=\"operator\">$</span>cal_mantel<span class=\"punctuation\">(</span>use_measure <span class=\"operator\">=</span> <span class=\"string\">&quot;bray&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_mantel</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>res_mantel</span><br></pre></td></tr></table></figure>\n\n  <div style=\"overflow-x:auto;\">\n  <table>\n  \n<table>\n<thead>\n<tr>\n<th></th>\n<th>variable_name</th>\n<th>cor_method</th>\n<th>corr_res</th>\n<th>p_res</th>\n<th>significance</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td><strong>TN</strong></td>\n<td>pearson</td>\n<td>0.5571885</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>2</td>\n<td><strong>TC</strong></td>\n<td>pearson</td>\n<td>0.5712239</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>3</td>\n<td><strong>TS</strong></td>\n<td>pearson</td>\n<td>0.2665453</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>4</td>\n<td><strong>TOC</strong></td>\n<td>pearson</td>\n<td>0.3540337</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>5</td>\n<td><strong>Salinity</strong></td>\n<td>pearson</td>\n<td>0.2782537</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Temperature</td>\n<td>pearson</td>\n<td>0.5856050</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>7</td>\n<td><strong>Dissolved.oxygen</strong></td>\n<td>pearson</td>\n<td>0.4358422</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>8</td>\n<td>Surface.chlorophyll.concentrations</td>\n<td>pearson</td>\n<td>0.2586823</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>9</td>\n<td>pH</td>\n<td>pearson</td>\n<td>0.4498964</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>10</td>\n<td><strong>PAR</strong></td>\n<td>pearson</td>\n<td>0.1712861</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>11</td>\n<td>Density</td>\n<td>pearson</td>\n<td>0.5682679</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td>12</td>\n<td>Turbidity</td>\n<td>pearson</td>\n<td>0.2260436</td>\n<td>0.001</td>\n<td>***</td>\n</tr>\n<tr>\n<td></table></div></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n</li>\n<li><p>环境变量与分类群（taxa）的相关性对分析和推断影响群落结构的因素具有重要意义。在本例中，我们首先进行了差异丰度检验（differential abundance test）和随机森林分析（random forest），得到了重要的属（Genus）。然后利用这些分类单元进行相关性分析。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># first create trans_diff object</span></span><br><span class=\"line\">t2 <span class=\"operator\">&lt;-</span> trans_diff<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;rf&quot;</span><span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> rf_taxa_level <span class=\"operator\">=</span> <span class=\"string\">&quot;Genus&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># then create trans_env object</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_env<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> add_data <span class=\"operator\">=</span> env_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">7</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># calculate correlation</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_cor<span class=\"punctuation\">(</span>use_data <span class=\"operator\">=</span> <span class=\"string\">&quot;other&quot;</span><span class=\"punctuation\">,</span> p_adjust_method <span class=\"operator\">=</span> <span class=\"string\">&quot;fdr&quot;</span><span class=\"punctuation\">,</span> other_taxa <span class=\"operator\">=</span> t2<span class=\"operator\">$</span>res_rf<span class=\"operator\">$</span>Taxa<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">60</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_cor </span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用ggplot2或pheatmap进行可视化</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># default ggplot2 method</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_corr<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># clustering heatmap; require pheatmap package</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_corr<span class=\"punctuation\">(</span>pheatmap <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"#/images/lujia/7%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E7%BE%A4ggplot2.jpg\" class=\"lazyload placeholder\" data-srcset=\"#/images/lujia/7%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E7%BE%A4ggplot2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"7个环境变量与分类群ggplot2\"></p>\n<p><img src=\"#/images/lujia/7%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E7%BE%A4%E7%9B%B8%E5%85%B3%E6%80%A7_pheatmap.jpg\" class=\"lazyload placeholder\" data-srcset=\"#/images/lujia/7%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E7%BE%A4%E7%9B%B8%E5%85%B3%E6%80%A7_pheatmap.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"7个环境变量与分类群相关性_pheatmap\"></p>\n<ul>\n<li><p>各组内的环境变量与分类群taxa之间的关系</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># calculate correlations for different groups using parameter by_group</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_cor<span class=\"punctuation\">(</span>by_group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> use_data <span class=\"operator\">=</span> <span class=\"string\">&quot;other&quot;</span><span class=\"punctuation\">,</span> p_adjust_method <span class=\"operator\">=</span> <span class=\"string\">&quot;fdr&quot;</span><span class=\"punctuation\">,</span> other_taxa <span class=\"operator\">=</span> t2<span class=\"operator\">$</span>res_rf<span class=\"operator\">$</span>Taxa<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">60</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_cor</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_corr<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"#/images/lujia/correlations_between_environmental_variables_and_60_taxa.jpg\" class=\"lazyload placeholder\" data-srcset=\"#/images/lujia/correlations_between_environmental_variables_and_60_taxa.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"correlations_between_environmental_variables_and_60_taxa\"></p>\n<ul>\n<li><p>环境因子与alpha-多样性之间的关系</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_env<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> add_data <span class=\"operator\">=</span> env_data<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">7</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># use add_abund_table parameter to add the extra data table</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_cor<span class=\"punctuation\">(</span>add_abund_table <span class=\"operator\">=</span> meco_dataset<span class=\"operator\">$</span>alpha_diversity<span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_corr<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"#/images/lujia/relationship_between_7_environmental_factors_and_alpha_diversity.jpg\" class=\"lazyload placeholder\" data-srcset=\"#/images/lujia/relationship_between_7_environmental_factors_and_alpha_diversity.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"relationship_between_7_environmental_factors_and_alpha_diversity\"></p>\n<h1 id=\"13-trans-nullmodel-class\"><a href=\"#13-trans-nullmodel-class\" class=\"headerlink\" title=\"13. trans_nullmodel class\"></a><font color=#FF0000 >13. trans_nullmodel class</font></h1><ul>\n<li><p>近几十年来，系统发育分析和空模型（null model）的结合，通过增加系统发育维度（phylogeny dimension），更加有力地促进了生态位和中性（niche and neutral）对群落组装影响的推断[16，17]。trans_nullmodel class提供了一个封装，包括对系统发育信号、beta平均成对系统发育距离（beta mean pairwise phylogenetic distance，betaMPD）、beta平均最近分类单元距离（beta mean nearest taxon distance，betaMNTD）、beta最近分类单元指数（beta nearest taxon index，betaNTI）、beta净相关指数（beta net relatedness index，betaNRI）和基于Bray-Curtis的Raup-Crick（Bray-Curtis-based Raup-Crick，RCbray）的计算。系统发育信号分析的方法基于mantel相关图（mantel correlogram）[18]，与其他方法相比，系统发育信号的变化是直观而清晰的。betaMNTD和betaMPD的算法已经过优化，比picante包中的算法更快[3]。RCbray和betaNTI（或betaNRI）之间的组合可用于推断在特定假设下支配群落装配（community assembly）的每个生态过程（ecological process）的强度[17]。这可以通过函数cal_process()来解析每个推断进程（ecological process）的百分比来实现。<font color=#2196F3 ><strong>我们首先检查系统发育信号：</strong></font></p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># generate trans_nullmodel object; use 10000 OTUs as example</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_nullmodel<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>meco_dataset<span class=\"punctuation\">,</span> taxa_number <span class=\"operator\">=</span> <span class=\"number\">10000</span><span class=\"punctuation\">,</span> add_data <span class=\"operator\">=</span> env_data<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># use TOC as the test variable (__报错：Error in cor(as.vector(xdis), ydis, method = method, use = use) : </span></span><br><span class=\"line\">  cov<span class=\"operator\">/</span>cor中有遗漏值__<span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_mantel_corr<span class=\"punctuation\">(</span>use_env <span class=\"operator\">=</span> <span class=\"string\">&quot;TOC&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_mantel_corr</span></span><br><span class=\"line\"><span class=\"comment\"># plot the mantel correlogram(__报错：Error in names(x) &lt;- value : &#x27;names&#x27;属性的长度[4]必需和矢量的长度[0]一样__)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_mantel_corr<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>betaNRI（ses.betampd）用于显示“basal”系统发育转换（phylogenetic turnover）[18]。与betaNTI相比，它能捕获更多与深层系统发育（deep phylogeny）相关的转换信息（turnover information）。值得注意的是，经过几十年的发展，出现了许多空模型（null models）。在trans-nullmodel class中，我们随机化了物种的系统发育相关性。这种洗牌方法（shuffling approach）固定了观察到的物种α-多样性和β-多样性的水平，以探讨观察到的系统发育转换是否与空模型（物种间的系统发育关系是随机的）显著不同。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 运行500次null model</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_ses_betampd<span class=\"punctuation\">(</span>runs<span class=\"operator\">=</span><span class=\"number\">500</span><span class=\"punctuation\">,</span> abundance.weighted <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 返回t1$res_ses_betampd</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以使用trans_beta class中的plot_group_distance function绘制betaNRI图。结果表明T20和T21的平均betaNRI 显著高于其它三者，表明T20和T21中的basal phylogenetic turnover是高的。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将betaNRI矩阵加入到beta_diversity列表中</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>beta_diversity<span class=\"punctuation\">[[</span><span class=\"string\">&quot;betaNRI&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> t1<span class=\"operator\">$</span>res_ses_betampd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用measure &quot;betaNRI&quot;创建trans_beta class</span></span><br><span class=\"line\">t2 <span class=\"operator\">&lt;-</span> trans_beta<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> measure <span class=\"operator\">=</span> <span class=\"string\">&quot;betaNRI&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># transform the distance for each group</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>cal_group_distance<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果可视化</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">g1 <span class=\"operator\">&lt;-</span> t2<span class=\"operator\">$</span>plot_group_distance<span class=\"punctuation\">(</span>distance_pair_stat <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">g1 <span class=\"operator\">+</span> geom_hline<span class=\"punctuation\">(</span>yintercept <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> linetype <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> geom_hline<span class=\"punctuation\">(</span>yintercept <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> linetype <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"#/images/lujia/betaNRI_all.jpg\" class=\"lazyload placeholder\" data-srcset=\"#/images/lujia/betaNRI_all.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"betaNRI all\"></p>\n<ul>\n<li><p>若要单独的对每个组进行 null model analysis，例如每个组作为一个物种池（species pool），我们可以分别为每个组计算结果。 我们发现，当分别对每个组进行betaNRI 分析时，CW和TW间的mean betaNRI没有显著差异，且二者均显著高于IW ，揭示了在将每个区域视为特定物种库的条件下，CW和TW中变量选择的强度（strength of variable selection）可能相似。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建一个列表用于存放trans_nullmodel的结果</span></span><br><span class=\"line\">sesbeta_each <span class=\"operator\">&lt;-</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">group_col <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;Site&quot;</span></span><br><span class=\"line\">all_groups <span class=\"operator\">&lt;-</span> unique<span class=\"punctuation\">(</span>meco_dataset<span class=\"operator\">$</span>sample_table<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> group_col<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对每个组分别进行计算</span></span><br><span class=\"line\"><span class=\"keyword\">for</span><span class=\"punctuation\">(</span>i <span class=\"keyword\">in</span> all_groups<span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\"># like the above operation, but need provide &#x27;group&#x27; and &#x27;select_group&#x27;</span></span><br><span class=\"line\">\ttest <span class=\"operator\">&lt;-</span> trans_nullmodel<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>meco_dataset<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> group_col<span class=\"punctuation\">,</span> select_group <span class=\"operator\">=</span> i<span class=\"punctuation\">,</span> taxa_number <span class=\"operator\">=</span> <span class=\"number\">1000</span><span class=\"punctuation\">,</span> add_data <span class=\"operator\">=</span> env_data<span class=\"punctuation\">)</span></span><br><span class=\"line\">\ttest<span class=\"operator\">$</span>cal_ses_betampd<span class=\"punctuation\">(</span>runs <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span> abundance.weighted <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">\tsesbeta_each<span class=\"punctuation\">[[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> test<span class=\"operator\">$</span>res_ses_betampd</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 合并结果并重塑（reshape），得到一个对称矩阵（symmetrical matrix）</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>reshape2<span class=\"punctuation\">)</span></span><br><span class=\"line\">test <span class=\"operator\">&lt;-</span> lapply<span class=\"punctuation\">(</span>sesbeta_each<span class=\"punctuation\">,</span> melt<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> do.call<span class=\"punctuation\">(</span>rbind<span class=\"punctuation\">,</span> .<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> reshape2<span class=\"operator\">::</span>dcast<span class=\"punctuation\">(</span>.<span class=\"punctuation\">,</span> Var1<span class=\"operator\">~</span>Var2<span class=\"punctuation\">,</span> value.var <span class=\"operator\">=</span> <span class=\"string\">&quot;value&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> `row.names&lt;-`<span class=\"punctuation\">(</span>.<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> .<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"operator\">-</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> drop <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如同上述操作</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>beta_diversity<span class=\"punctuation\">[[</span><span class=\"string\">&quot;betaNRI&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> test</span><br><span class=\"line\">t2 <span class=\"operator\">&lt;-</span> trans_beta<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> measure <span class=\"operator\">=</span> <span class=\"string\">&quot;betaNRI&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>cal_group_distance<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">g1 <span class=\"operator\">&lt;-</span> t2<span class=\"operator\">$</span>plot_group_distance<span class=\"punctuation\">(</span>distance_pair_stat <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">g1 <span class=\"operator\">+</span> geom_hline<span class=\"punctuation\">(</span>yintercept <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> linetype <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> geom_hline<span class=\"punctuation\">(</span>yintercept <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> linetype <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"#/images/lujia/betaNRI_individual.jpg\" class=\"lazyload placeholder\" data-srcset=\"#/images/lujia/betaNRI_individual.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"betaNRI individual\"></p>\n<ul>\n<li><p>BetaNTI(ses.betamntd) 可用于指示系统发育的末端转换（ phylogenetic terminal turnover） [17]</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 运行500次null model</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_ses_betamntd<span class=\"punctuation\">(</span>runs<span class=\"operator\">=</span><span class=\"number\">500</span><span class=\"punctuation\">,</span> abundance.weighted <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 返回t1$res_ses_betamntd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将betaNTI矩阵加入到beta_diversity列表中</span></span><br><span class=\"line\">meco_dataset<span class=\"operator\">$</span>beta_diversity<span class=\"punctuation\">[[</span><span class=\"string\">&quot;betaNTI&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> t1<span class=\"operator\">$</span>res_ses_betamntd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用measure &quot;betaNRI&quot;创建trans_beta class</span></span><br><span class=\"line\">t2 <span class=\"operator\">&lt;-</span> trans_beta<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> <span class=\"string\">&quot;Site&quot;</span><span class=\"punctuation\">,</span> measure <span class=\"operator\">=</span> <span class=\"string\">&quot;betaNTI&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># transform the distance for each group</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>cal_group_distance<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果可视化</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">g1 <span class=\"operator\">&lt;-</span> t2<span class=\"operator\">$</span>plot_group_distance<span class=\"punctuation\">(</span>distance_pair_stat <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">g1 <span class=\"operator\">+</span> geom_hline<span class=\"punctuation\">(</span>yintercept <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> linetype <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> geom_hline<span class=\"punctuation\">(</span>yintercept <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> linetype <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>cal_rcbray()功能用于计算RCbray (Bray-Curtis-based Raup-Crick) ，以评估成分转换（compositional turnover）是否主要受漂移控制[19]。我们应用空模型（null model）通过从每个物种池中随机采样个体来模拟物种分布，同时保留物种发生频率（species occurrence frequency）和样本物种丰富度（sample species richness）[18]。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># result stored in t1$res_rcbray</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_rcbray<span class=\"punctuation\">(</span>runs <span class=\"operator\">=</span> <span class=\"number\">1000</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_rcbray</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>作为一个例子，我们还计算了引用文献[17，18]中所示的在群落组装（community assembly）上推断过程（ inferred processes ）所占的比例。在此示例中，具有显着betaNTI值（|βNTI|&gt; 2）的成对比较部分是估计的选择（Selection）造成影响； βNTI&gt; 2代表异构选择（heterogeneous ）； βNTI&lt;-2表示同质选择（homogeneous ）。 RCbray值表征了随机分配（randomization）下观察到的Bray-Curtis和Bray-Curtis期望值之间的偏差大小（magnitude of deviation）。 | RCbray | &gt; 0.95被认为是显着的。 |βNTI| &lt; 2和RCbray &gt; +0.95被视为受散播限制（Dispersal Limitation）与漂移（Drift）相结合的影响。 |βNTI| &lt; 2和RCbray &lt; -0.95被视为均质分散（Homogenizing Dispersal）影响的估计值。 |βNTI| &lt; 2和|RCbray| &lt; 0.95估算了漂移单独作用的影响。</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># use betaNTI and rcbray to evaluate processes</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_process<span class=\"punctuation\">(</span>use_betamntd <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_process</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>res_process</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>process</th>\n<th>percentage</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>variable selection</td>\n<td>0.4341164</td>\n</tr>\n<tr>\n<td>2</td>\n<td>homogeneous selection</td>\n<td>63.6874362</td>\n</tr>\n<tr>\n<td>3</td>\n<td>dispersal limitation</td>\n<td>0.0000000</td>\n</tr>\n<tr>\n<td>4</td>\n<td>homogeneous dispersal</td>\n<td>14.8365679</td>\n</tr>\n<tr>\n<td>5</td>\n<td>drift</td>\n<td>21.0418795</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h1 id=\"14-trans-network-class\"><a href=\"#14-trans-network-class\" class=\"headerlink\" title=\"14. trans_network class\"></a><font color=#FF0000 >14. trans_network class</font></h1><h2 id=\"correlation-based-network\"><a href=\"#correlation-based-network\" class=\"headerlink\" title=\"correlation-based network\"></a><font color=#FF9800 >correlation-based network</font></h2><ul>\n<li>准备R包并进行计算相关性  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;WGCNA&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>WGCNA<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 以下3选1</span></span><br><span class=\"line\"><span class=\"comment\"># 1. Use R base cor.test, slow</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_network<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> cal_cor <span class=\"operator\">=</span> <span class=\"string\">&quot;base&quot;</span><span class=\"punctuation\">,</span> taxa_level <span class=\"operator\">=</span> <span class=\"string\">&quot;OTU&quot;</span><span class=\"punctuation\">,</span> filter_thres <span class=\"operator\">=</span> <span class=\"number\">0.0001</span><span class=\"punctuation\">,</span> cor_method <span class=\"operator\">=</span> <span class=\"string\">&quot;spearman&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_cor_p list; one table: correlation; another: p value</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. SparCC method, require SpiecEasi package</span></span><br><span class=\"line\"><span class=\"comment\"># SparCC is very slow, so consider filtering more species with low abundance</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_network<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> meco_dataset<span class=\"punctuation\">,</span> cal_cor <span class=\"operator\">=</span> <span class=\"string\">&quot;SparCC&quot;</span><span class=\"punctuation\">,</span> taxa_level <span class=\"operator\">=</span> <span class=\"string\">&quot;OTU&quot;</span><span class=\"punctuation\">,</span> filter_thres <span class=\"operator\">=</span> <span class=\"number\">0.001</span><span class=\"punctuation\">,</span> SparCC_simu_num <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. When the OTU number is large, use R WGCNA package to replace R base to calculate correlations</span></span><br><span class=\"line\"><span class=\"comment\"># require WGCNA package</span></span><br><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_network<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> dataset<span class=\"punctuation\">,</span> cal_cor <span class=\"operator\">=</span> <span class=\"string\">&quot;WGCNA&quot;</span><span class=\"punctuation\">,</span> taxa_level <span class=\"operator\">=</span> <span class=\"string\">&quot;OTU&quot;</span><span class=\"punctuation\">,</span> filter_thres <span class=\"operator\">=</span> <span class=\"number\">0.0001</span><span class=\"punctuation\">,</span> cor_method <span class=\"operator\">=</span> <span class=\"string\">&quot;spearman&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"构建网络\"><a href=\"#构建网络\" class=\"headerlink\" title=\"构建网络\"></a><font color=#FF9800 >构建网络</font></h2><ul>\n<li><p>COR_optimization &#x3D; TRUE represent using RMT theory to find the optimized correlation threshold instead of the COR_cut.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># construct network; require igraph package</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_network<span class=\"punctuation\">(</span>p_thres <span class=\"operator\">=</span> <span class=\"number\">0.01</span><span class=\"punctuation\">,</span> COR_optimization <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_network</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (可选) use arbitrary coefficient threshold to contruct network</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_network<span class=\"punctuation\">(</span>p_thres <span class=\"operator\">=</span> <span class=\"number\">0.01</span><span class=\"punctuation\">,</span> COR_cut <span class=\"operator\">=</span> <span class=\"number\">0.73</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># save network</span></span><br><span class=\"line\"><span class=\"comment\"># open the gexf file using Gephi(https://gephi.org/)</span></span><br><span class=\"line\"><span class=\"comment\"># require rgexf package</span></span><br><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;rgexf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>save_network<span class=\"punctuation\">(</span>filepath <span class=\"operator\">=</span> <span class=\"string\">&quot;network.gexf&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Now, we show the node colors with the Phylum information and the edges colors with the positive and negative correlations. All the data used has been stored in the network.gexf file, including modules classifications, Phylum information and edges classifications.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># calculate network attributes</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_network_attr<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_network_attr</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># classify the node; return t1$res_node_type</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_node_type<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_node_type</span></span><br><span class=\"line\"><span class=\"comment\"># we retain the file for the following example in trans_func part</span></span><br><span class=\"line\">network_node_type <span class=\"operator\">&lt;-</span> t1<span class=\"operator\">$</span>res_node_type</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plot node roles in terms of the within-module connectivity and among-module connectivity</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_taxa_roles<span class=\"punctuation\">(</span>use_type <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># plot node roles with phylum information</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_taxa_roles<span class=\"punctuation\">(</span>use_type <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Now, we show the eigengene analysis of modules. The eigengene of a module, i.e. the first principal component of PCA, represents the main variance of the abundance in the species of the module.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1<span class=\"operator\">$</span>cal_eigen<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_eigen</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>出错了</strong>！Then we perform correlation heatmap to show the relationships between eigengenes and environmental factors.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># create trans_env object like the above operation</span></span><br><span class=\"line\">t2 <span class=\"operator\">&lt;-</span> trans_env<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>dataset <span class=\"operator\">=</span> dataset<span class=\"punctuation\">,</span> add_data <span class=\"operator\">=</span> env_data_16S<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"operator\">:</span><span class=\"number\">11</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># calculate correlations</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>cal_cor<span class=\"punctuation\">(</span>add_abund_table <span class=\"operator\">=</span> t1<span class=\"operator\">$</span>res_eigen<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># plot the correlation heatmap</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>plot_corr<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>The function cal_sum_links() is used to sum the links (edge) number from one taxa to another or in the same taxa. The function plot_sum_links() is used to show the result from the function cal_sum_links(). This is very useful to fast see how many nodes are connected between different taxa or within one taxa. In terms of “Phylum” level in the tutorial, the function cal_sum_links() sum the linkages number from one Phylum to another Phylum or the linkages in the same Phylum. So the numbers along the outside of the circular plot represent how many edges or linkages are related with the Phylum. For example, in terms of Proteobacteria, there are roughly total 900 edges associated with the OTUs in Proteobacteria, in which roughly 200 edges connect both OTUs in Proteobacteria and roughly 150 edges connect the OTUs from Proteobacteria with the OTUs from Chloroflexi.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devtools<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;mattflor/chorddiag&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># calculate the links between or within taxonomic ranks (报错：Error in ecount(network) : 没有&quot;ecount&quot;这个函数)</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_sum_links<span class=\"punctuation\">(</span>taxa_level <span class=\"operator\">=</span> <span class=\"string\">&quot;Phylum&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t1$res_sum_links_pos and t1$res_sum_links_neg</span></span><br><span class=\"line\"><span class=\"comment\"># require chorddiag package</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>plot_sum_links<span class=\"punctuation\">(</span>plot_pos <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> plot_num <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"15-trans-func-class\"><a href=\"#15-trans-func-class\" class=\"headerlink\" title=\"15. trans_func class\"></a><font color=#FF0000 >15. trans_func class</font></h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Identify microbial traits</span></span><br><span class=\"line\"><span class=\"comment\"># create object of trans_func</span></span><br><span class=\"line\">t2 <span class=\"operator\">&lt;-</span> trans_func<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>meco_dataset<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># mapping the taxonomy to the database</span></span><br><span class=\"line\"><span class=\"comment\"># the function can recognize prokaryotes or fungi automatically</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>cal_spe_func<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t2$res_spe_func, 1 represent function exists, 0 represent no or cannot confirmed.</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>The percentages of the OTUs having the same trait can reflect the functional redundancy of this function in the community or the module in the network.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># calculate the percentages of OTUs for each trait in each module of network</span></span><br><span class=\"line\"><span class=\"comment\"># use_community = FALSE represent calculating module, not community, node_type_table provide the module information</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>cal_spe_func_perc<span class=\"punctuation\">(</span>use_community <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> node_type_table <span class=\"operator\">=</span> network_node_type<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return t2$res_spe_func_perc</span></span><br><span class=\"line\"><span class=\"comment\"># we only plot some important traits, so we use the default group list to filter and show the traits.</span></span><br><span class=\"line\">t2<span class=\"operator\">$</span>plot_spe_func_perc<span class=\"punctuation\">(</span>select_samples <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;M&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># M represents module, ordered by the nodes number from high to low</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Tax4Fun requires a strict input file demand on the taxonomic information. To analyze the trimmed or changed OTU data in R with Tax4Fun, we provide a link to the Tax4Fun functional prediction.</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t1 <span class=\"operator\">&lt;-</span> trans_func<span class=\"operator\">$</span>new<span class=\"punctuation\">(</span>meco_dataset<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># install Tax4Fun package and download SILVA123 ref data from  http://tax4fun.gobics.de/</span></span><br><span class=\"line\">wget https<span class=\"operator\">:</span><span class=\"operator\">/</span><span class=\"operator\">/</span>github.com<span class=\"operator\">/</span>bwemheu<span class=\"operator\">/</span>Tax4Fun2<span class=\"operator\">/</span>releases<span class=\"operator\">/</span>download<span class=\"operator\">/</span><span class=\"number\">1.1</span>.5<span class=\"operator\">/</span>Tax4Fun2_1.1.5.tar.gz</span><br><span class=\"line\">install.packages<span class=\"punctuation\">(</span>pkgs <span class=\"operator\">=</span> <span class=\"string\">&quot;Tax4Fun2_1.1.5.tar.gz&quot;</span><span class=\"punctuation\">,</span> repos <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> source <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># decompress SILVA123; provide path in folderReferenceData as you put</span></span><br><span class=\"line\">t1<span class=\"operator\">$</span>cal_tax4fun<span class=\"punctuation\">(</span>folderReferenceData <span class=\"operator\">=</span> <span class=\"string\">&quot;./SILVA123&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># return two files: t1$tax4fun_KO: KO file; t1$tax4fun_path: pathway file.</span></span><br><span class=\"line\"><span class=\"comment\"># t1$tax4fun_KO$Tax4FunProfile[1:5, 1:2]</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"16-知识点\"><a href=\"#16-知识点\" class=\"headerlink\" title=\"16. 知识点\"></a><font color=#FF0000 >16. 知识点</font></h1><h2 id=\"确定性过程和随机过程\"><a href=\"#确定性过程和随机过程\" class=\"headerlink\" title=\"确定性过程和随机过程\"></a><font color=#FF9800 >确定性过程和随机过程</font></h2><ul>\n<li><p>The term <font color=#2196F3 size=5><b>“deterministic process”</b></font> refers to two types of selective forces, namely, those that lead to either more (i.e. homogeneous selection) or less (i.e. heterogeneous selection) similar structures among communities due to homogeneous and heterogeneous environmental pressures, respectively (Zhou &amp; Ning, 2017).  <font color=#2196F3 size=5><b>确定性过程</b></font>包括两种选择力，即分别导致更加相似（即同质选择）或更少相似（即异质选择）的群落间的结构的同质和异质环境压力。</p>\n</li>\n<li><p>The term<font color=#2196F3 size=5><b> “stochastic process” </b></font>refers to homogenizing dispersal, dispersal limitation (combined with drift) and pure drift, which can obscure the turnover among microbial communities due to high dispersal; low dispersal; and random changes in birth, death and reproduction, respectively (Zhou &amp; Ning, 2017). <font color=#2196F3 size=5><b>随机过程</b></font>是指均匀分散、分散限制（结合漂变）和纯漂变，它们可以通过高度分散、低分散和出生、死亡和繁殖的随机变化来掩盖&#x2F;减弱微生物群落之间的更替。</p>\n</li>\n</ul>\n<p><img src=\"/images/lujia/nullmodel.png\" alt=\"Community assembly processes by Stegen *et al.* https://www.nature.com/articles/ismej201393\n\"></p>\n<ul>\n<li>An NTI of &gt;+2 indicates that the ASVs in a local community are more closely related than expected by chance, suggesting the role of selective pressures (e.g. environmental conditions) in phylogenetic clustering. An NTI of &lt;−2 represents phylogenetic overdispersion, indicating two possible biotic interactions: competition and facilitation. In contrast, a mean NTI across multiple communities that is significantly greater or less than zero indicates phylogenetic clustering or overdispersion, respectively (Zhou &amp; Ning, 2017). NTI &gt;2表明，在一个地方群落中，ASVs的亲缘关系比预期的更为密切，表明选择压力（如环境条件）在系统发育聚类中的作用。NTI &lt;-2表示系统发育过度分散，表明两种可能的生物相互作用：竞争和促进。相反，多个群落间的平均NTI显著大于或小于零，分别表明系统发育聚类或过度分散（Zhou和Ning，2017）。</li>\n<li>βNTI&gt;+2 or &lt;−2 signified heterogeneous selection or homogeneous selection, respectively. βNTI&gt;+2 or &lt;−2 分别指示异质选择和同质选择。</li>\n</ul>\n<h1 id=\"17-参考\"><a href=\"#17-参考\" class=\"headerlink\" title=\"17. 参考\"></a><font color=#FF0000 >17. 参考</font></h1><ul>\n<li><a href=\"https://chiliubio.github.io/microeco/\">https://chiliubio.github.io/microeco/</a></li>\n<li>Zhou, J., &amp; Ning, D. (2017). Stochastic community assembly: Does it matter in microbial ecology? Microbiology and Molecular Biology Reviews, 81(4), e00002–17. <a href=\"https://doi.org/10.1128/MMBR.00002%E2%80%9017\">https://doi.org/10.1128/MMBR.00002‐17</a></li>\n<li><a href=\"http://www.360doc.com/content/20/1223/07/71874948_952966442.shtml\">http://www.360doc.com/content/20/1223/07/71874948_952966442.shtml</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"扩增子","path":"api/tags/扩增子.json"}]},{"title":"kSNP3寻找SNPs并构建进化树","slug":"kSNP3寻找SNPs并构建进化树","date":"2018-12-14T06:17:23.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/kSNP3寻找SNPs并构建进化树.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>kSNP3可以利用reads、draft genomes或complete genomes寻找SNPs，并构建进化树。操作比较简单，小白比较容易上手。</p>\n<span id=\"more\"></span>\n\n<p><strong>1. kSNP3 安装</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/tools</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://sourceforge.net/projects/ksnp/files/kSNP3.1_Linux_package.zip</span><br><span class=\"line\"></span><br><span class=\"line\">unzip kSNP3.1_Linux_package.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#加入环境变量：</span></span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/tools/kSNP3.1_Linux_package/kSNP3</span><br><span class=\"line\"></span><br><span class=\"line\">ESC</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">shift</span> + ：</span><br><span class=\"line\"></span><br><span class=\"line\">wq!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p>编辑主程序kSNP3的第8行：</p>\n<p>将 set kSNP&#x3D;&#x2F;usr&#x2F;local&#x2F;kSNP3</p>\n<p>改为：set kSNP&#x3D;&#x2F;home&#x2F;lhl&#x2F;tools&#x2F;kSNP3.1_Linux_package&#x2F;kSNP3</p>\n<p>注：根据自己的路径进行修改</p>\n<p><strong>2. 基本用法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将所有的基因组文件放于988_ksnp目录之中，在其上一级目录下运行命令创建输入列表：</span></span><br><span class=\"line\"></span><br><span class=\"line\">MakeKSNP3infile 988_ksnp inlist A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#运行命令创建输入序列集合：</span></span><br><span class=\"line\"></span><br><span class=\"line\">MakeFasta inlist fastainput_988</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#计算最佳K值：</span></span><br><span class=\"line\"></span><br><span class=\"line\">Kchooser fastainput_988</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#寻找SNPs并构建进化树：</span></span><br><span class=\"line\"></span><br><span class=\"line\">kSNP3 -<span class=\"keyword\">in</span> inlist -outdir SNPs_20181214 -k 23 -ML -NJ -vcf  -CPU 30 -core -min_frac 0.5 |<span class=\"built_in\">tee</span> Log_988_20181214.txt</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"SNPs","path":"api/tags/SNPs.json"},{"name":"进化","path":"api/tags/进化.json"}]},{"title":"为PubMed添加功能","slug":"为PubMed添加功能","date":"2019-03-18T03:29:24.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/为PubMed添加功能.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png","content":"<p>对于搞科研的小伙伴们来说，PubMed是一个必不可少的文献查阅数据库，然而输入关键字后，出来的文章少则几十篇，多则上百篇。而这些文章的质量却参差不齐，那么如何高效的选择高水平的文章来下载和阅读呢？</br></p>\n<span id=\"more\"></span>\n<p>首先上图，看一下我的PubMed界面：</br><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"PubMed\"><br></br>从图片中可以看出，文章的影响因子、分区一目了然，甚至提供了全文下载链接，解决了学校图书馆未购买杂志数据库而需付费下载的烦恼。该效果是通过两个谷歌浏览器插件实现的，分别是<a href=\"https://www.novoprolabs.com/support/articles/pubmedy-a-chrome-extension-for-ncbi-201712191285.html\">PubMedy</a>和<a href=\"https://www.scholarscope.cn/\">Scholarscope</a>。前者可以展示影响因子、参考文献格式，并提供全文下载链接；后者可以展示期刊影响因子、领域排名、引用次数及中科院分区。<br></br>这两个插件都可以在谷歌商店中下载，墙内的小伙伴需要想办法科学上网，这里推荐另一款插件——“<a href=\"https://www.skyzip.de/\">skyZIP™ Proxy</a>”。<br></br>插件可以自行搜索下载，也可以加入QQ群（945751012）下载。</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"PubMed","path":"api/tags/PubMed.json"}]},{"title":"从GenBank文件中提取Features","slug":"从GenBank文件中提取Features","date":"2021-10-09T06:15:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/从GenBank文件中提取Features.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>二话不说，上代码，需要安装BioPerl</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> Bio::SeqIO;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 9, 2021</span></span><br><span class=\"line\"><span class=\"comment\"># Usage: perl get_gbk_features.pl &lt;in&gt; &lt;out&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $in = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $out = <span class=\"keyword\">shift</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $seqin = Bio::SeqIO-&gt;new( <span class=\"string\">-format =&gt;</span> <span class=\"string\">&#x27;genbank&#x27;</span>, <span class=\"string\">-file =&gt;</span> <span class=\"string\">&quot;$in&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>( (<span class=\"keyword\">my</span> $seq = $seqin-&gt;next_seq) ) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sf ( $seq-&gt;get_SeqFeatures ) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( $sf-&gt;primary_tag eq <span class=\"string\">&#x27;CDS&#x27;</span> ) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @tags = $sf -&gt;get_all_tags();</span><br><span class=\"line\">\t\t\t<span class=\"comment\">#print join(&quot;\\t&quot;, @tags) . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $sf-&gt;get_tag_values(<span class=\"string\">&#x27;locus_tag&#x27;</span>), <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;start, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;end, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;strand, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;product&#x27;</span>), <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;translation&#x27;</span>),<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_gbk_features.pl examples/INPUT/LHL010.gbk LHL010.list</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“3a23”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"序列处理","path":"api/tags/序列处理.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"},{"name":"BioPerl","path":"api/tags/BioPerl.json"}]},{"title":"代谢组相关软件的安装及使用","slug":"代谢组相关软件的安装及使用","date":"2023-02-02T05:42:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/代谢组相关软件的安装及使用.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"MZconvert\"><a href=\"#MZconvert\" class=\"headerlink\" title=\"MZconvert\"></a><a href=\"http://www.proteowizard.org/download.html\">MZconvert</a></h2><p>下载ProteoWizard项目下的Linux native 64-bit，上传至服务器并解压缩 (会将所有文件解压至当前目录，建议提前单独建一个目录)，解压后的文件即为可执行程序，需将该目录写入环境变量。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar jxvf pwiz-bin-linux-x86_64-gcc7-release-3_0_23032_0cc4840.tar.bz2</span><br></pre></td></tr></table></figure>\n\n<p><strong>注</strong>：在运行<code>msconvert</code>时，如果遇到报错<code>terminate called after throwing an instance of &#39;std::runtime_error&#39;</code>，<code>what():  locale::facet::_S_create_c_locale name not valid</code>，则在终端里运行命令<code>export LC_ALL=C</code>（去除所有本地化的设置，让命令能正确执行），为了永远生效，可将此命令写入环境变量。</p>\n<h2 id=\"MS-DIAL\"><a href=\"#MS-DIAL\" class=\"headerlink\" title=\"MS-DIAL\"></a><a href=\"http://prime.psc.riken.jp/compms/msdial/main.html\">MS-DIAL</a></h2><p>下载Linux最新版，解压后将路径添加至环境变量即可，有可能需要为主程序（MsdialConsoleApp）添加可执行权限（chmod +x MsdialConsoleApp）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -c http://prime.psc.riken.jp/compms/msdial/download/repository/Linux/MSDIAL%20ver.4.9.221218%20Linuxx64.zip</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"代谢组","path":"api/tags/代谢组.json"}]},{"title":"使用DeepARG预测抗生素抗性基因ARGs","slug":"使用DeepARG预测抗生素抗性基因ARGs","date":"2022-01-07T11:50:33.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/使用DeepARG预测抗生素抗性基因ARGs.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png","content":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>DeepARG 是一种机器学习解决方案，它使用深度学习来表征和注释宏基因组中的抗生素抗性基因。它由两种输入模型组成：短序列Reads和gene-like序列。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Automatic annotation of highly homologous ARGs\"></p>\n<h1 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h1><ul>\n<li><p>通过<code>conda</code>安装</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建环境</span></span><br><span class=\"line\">conda create -n deeparg_env python=2.7.18</span><br><span class=\"line\">conda activate deeparg_env</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装diamond</span></span><br><span class=\"line\">conda install -c bioconda diamond==0.9.24</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装其他依赖</span></span><br><span class=\"line\">conda install trimmomatic vsearch bedtools bowtie2 samtools</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装DeepARG</span></span><br><span class=\"line\">pip install deeparg==1.0.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载数据库等， -o指定下载路径</span></span><br><span class=\"line\">deeparg download_data -o tools/deeparg</span><br></pre></td></tr></table></figure></li>\n<li><p>通过其他方法安装</p>\n<p>  参考<a href=\"https://bitbucket.org/gusphdproj/deeparg-ss/src/master/\">官方文档</a>进行。</p>\n</li>\n</ul>\n<h1 id=\"使用软件\"><a href=\"#使用软件\" class=\"headerlink\" title=\"使用软件\"></a>使用软件</h1><h2 id=\"预测Reads中的ARGs\"><a href=\"#预测Reads中的ARGs\" class=\"headerlink\" title=\"预测Reads中的ARGs\"></a>预测Reads中的ARGs</h2><h3 id=\"输入文件\"><a href=\"#输入文件\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h3><p>双端Reads。</p>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deeparg short_reads_pipeline --forward_pe_file Reads/LD201221-0003_S20210104-0015_F01_clean.R1.fq.gz --reverse_pe_file Reads/LD201221-0003_S20210104-0015_F01_clean.R2.fq.gz --output_file F01.deeparg -d ~/tools/deeparg/</span><br></pre></td></tr></table></figure>\n\n<p>+++primary 参数解析</p>\n<p><code>-h, --help</code>            show this help message and exit<br><code>--forward_pe_file</code> <strong>FORWARD_PE_FILE</strong>:           forward mate from paired end library<br><code>--reverse_pe_file</code> <strong>REVERSE_PE_FILE</strong>:             reverse mate from paired end library<br><code>--output_file</code> <strong>OUTPUT_FILE</strong>:           save results to this file prefix<br><code>-d</code> <strong>DEEPARG_DATA_PATH</strong>:               Path where data was downloaded [see deeparg download-data –help for details]<br><code>--deeparg_identity</code> <strong>DEEPARG_IDENTITY</strong>:      minimum identity for ARG alignments [default 80]<br><code>--deeparg_probability</code> <strong>DEEPARG_PROBABILITY</strong>:      minimum probability for considering a reads as ARG-like [default 0.8]<br><code>--deeparg_evalue</code> <strong>DEEPARG_EVALUE</strong>:     minimum e-value for ARG alignments [default 1e-10]<br><code>--gene_coverage</code> <strong>GENE_COVERAGE</strong>:        minimum coverage required for considering a full gene in percentage. This parameter looks at the full gene and all hits that align to the gene. If the overlap of all hits is below the threshold the gene is discarded. Use with caution [default 1]</p>\n<p>+++</p>\n<h2 id=\"预测FASTA序列中的ARGs\"><a href=\"#预测FASTA序列中的ARGs\" class=\"headerlink\" title=\"预测FASTA序列中的ARGs\"></a>预测FASTA序列中的ARGs</h2><h3 id=\"输入文件-1\"><a href=\"#输入文件-1\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h3><p>可以是<code>核苷酸序列</code>或者是<code>氨基酸序列</code>。</p>\n<h3 id=\"命令-1\"><a href=\"#命令-1\" class=\"headerlink\" title=\"命令\"></a>命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1) Annotate gene-like sequences when the input is a nucleotide FASTA file:</span></span><br><span class=\"line\">    deeparg predict --model LS --<span class=\"built_in\">type</span> nucl --input /path/file.fasta --out /path/to/out/file.out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2) Annotate gene-like sequences when the input is an amino acid FASTA file:</span></span><br><span class=\"line\">    deeparg predict --model LS --<span class=\"built_in\">type</span> prot --input /path/file.fasta --out /path/to/out/file.out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3) Annotate short sequence reads when the input is a nucleotide FASTA file:</span></span><br><span class=\"line\">    deeparg predict --model SS --<span class=\"built_in\">type</span> nucl --input /path/file.fasta --out /path/to/out/file.out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4) Annotate short sequence reads when the input is a protein FASTA file (unusual case):</span></span><br><span class=\"line\">    deeparg predict --model SS --<span class=\"built_in\">type</span> prot --input /path/file.fasta --out /path/to/out/file.out</span><br></pre></td></tr></table></figure>\n\n<p>+++primary 参数解析<br>usage: deeparg predict<br>    <code>-h, --help</code>            show this help message and exit<br>    <code>--model</code> <strong>MODEL</strong>:         Select model to use (short sequences for reads | long sequences for genes) SS|LS [No default]<br>    <code>-i, --input-file</code> <strong>INPUT_FILE</strong>:     Input file (Fasta input file)<br>    <code>-o, --output-file</code> <strong>OUTPUT_FILE</strong>:    Output file where to store results<br>    <code>-d, --data-path</code> <strong>DATA_PATH</strong>:       Path where data was downloaded [see deeparg download-data –help for details]<br>    <code>--type</code> <strong>TYPE</strong>:       Molecular data type prot&#x2F;nucl [Default: nucl]<br>    <code>--min-prob</code> <strong>MIN_PROB</strong>:   Minimum probability cutoff [Default: 0.8]<br>    <code>--arg-alignment-identity</code> <strong>ARG_ALIGNMENT_IDENTITY</strong>:          Identity cutoff for sequence alignment [Default: 50]<br>    <code>--arg-alignment-evalue</code> <strong>ARG_ALIGNMENT_EVALUE</strong>:                  Evalue cutoff [Default: 1e-10]<br>    <code>--arg-alignment-overlap</code> <strong>ARG_ALIGNMENT_OVERLAP</strong>:                 Alignment read overlap [Default: 0.8]<br>    <code>--arg-num-alignments-per-entry</code> <strong>ARG_NUM_ALIGNMENTS_PER_ENTRY</strong>:    Diamond, minimum number of alignments per entry [Default: 1000]<br>    <code>--model-version</code> <strong>MODEL_VERSION</strong>:     Model deepARG version [Default: v2]</p>\n<p>+++</p>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>DeepARG产生两个文件： <code>.ARG</code>包含probability &gt;&#x3D; –prob (0.8 default)的序列，<code>.potential.ARG</code>包含probability &lt; –prob (0.8 default)的序列。<code>*.potential.ARG</code>文件中仍可能含有ARG-like序列，但是需要对这些序列进行检查。 </p>\n<p>两个文件的文件头如下所示：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* ARG<span class=\"built_in\">_</span>NAME</span><br><span class=\"line\">* QUERY<span class=\"built_in\">_</span>START</span><br><span class=\"line\">* QUERY<span class=\"built_in\">_</span>END</span><br><span class=\"line\">* QUERY<span class=\"built_in\">_</span>ID</span><br><span class=\"line\">* PREDICTED<span class=\"built_in\">_</span>ARG<span class=\"built_in\">_</span>CLASS</span><br><span class=\"line\">* BEST<span class=\"built_in\">_</span>HIT<span class=\"built_in\">_</span>FROM<span class=\"built_in\">_</span>DATABASE</span><br><span class=\"line\">* PREDICTION<span class=\"built_in\">_</span>PROBABILITY</span><br><span class=\"line\">* ALIGNMENT<span class=\"built_in\">_</span>BESTHIT<span class=\"built_in\">_</span>IDENTITY (<span class=\"comment\">%)</span></span><br><span class=\"line\">* ALIGNMENT<span class=\"built_in\">_</span>BESTHIT<span class=\"built_in\">_</span>LENGTH</span><br><span class=\"line\">* ALIGNMENT<span class=\"built_in\">_</span>BESTHIT<span class=\"built_in\">_</span>BITSCORE</span><br><span class=\"line\">* ALIGNMENT<span class=\"built_in\">_</span>BESTHIT<span class=\"built_in\">_</span>EVALUE</span><br><span class=\"line\">* COUNTS</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"批处理\"><a href=\"#批处理\" class=\"headerlink\" title=\"批处理\"></a>批处理</h3><ul>\n<li>Run_deepARG_reads.pl</li>\n<li>Run_deepARG_scafs.pl</li>\n</ul>\n<h3 id=\"样本间比较\"><a href=\"#样本间比较\" class=\"headerlink\" title=\"样本间比较\"></a>样本间比较</h3><h4 id=\"生成样本VS-ARGs矩阵\"><a href=\"#生成样本VS-ARGs矩阵\" class=\"headerlink\" title=\"生成样本VS. ARGs矩阵\"></a>生成样本VS. ARGs矩阵</h4><ul>\n<li>co_type.pl</li>\n</ul>\n<h4 id=\"绘制气泡图\"><a href=\"#绘制气泡图\" class=\"headerlink\" title=\"绘制气泡图\"></a>绘制气泡图</h4><ul>\n<li>Bubble_plot.R</li>\n</ul>\n<h4 id=\"绘制热图\"><a href=\"#绘制热图\" class=\"headerlink\" title=\"绘制热图\"></a>绘制热图</h4><ul>\n<li>Plot_heatmap.R</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://bench.cs.vt.edu/deeparg\">DeepARG官网</a></li>\n<li><a href=\"https://bitbucket.org/gusphdproj/deeparg-ss/src/master/\">DeepARG Repository</a></li>\n</ul>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“92eb”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"ARGs","path":"api/tags/ARGs.json"}]},{"title":"使用EffectiveT3预测微生物中的III型分泌系统效应蛋白","slug":"使用EffectiveT3预测微生物中的III型分泌系统效应蛋白","date":"2021-10-13T02:01:56.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/使用EffectiveT3预测微生物中的III型分泌系统效应蛋白.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg","content":"<p>III 型分泌系统 (Type III secretion system，T3SS) 主要是革兰氏阴性菌的分泌蛋白分泌到细胞外的运输途径，T3SS效应蛋白 (Type III secretion system Effector protein) 与革兰氏阴性致病菌致病机理有关。</p>\n<p>通常用软件<a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveT3</a> 预测T3SS，通过其内部特定的计算模型对每条氨基酸序列进行评分，分值越高，可信度越高，选出评分高于阈值的序列，认为这些序列为III 型分泌系统效应蛋白。</p>\n<p>EffectiveT3 的更新版本加强了 Effective 中 N 端信号肽的识别。对于更新，开发者收集了新的训练数据集，将来自 T3SEdb 的 504 个经过验证的分泌蛋白与其原始的训练数据结合在一起。新模型同样基于朴素贝叶斯分类器（Naive Bayesian Classifier），只是用了更多数据进行训练。在执行遗漏交叉验证测试（leave-one-taxon-out test ）时，其精度为 0.87，与其之前的报告相当。</p>\n<p>新模型现已嵌入到 Effective 中，也可供下载。在新模型中，朴素贝叶斯分类器对“secreted”类的默认最小分数为 0.9999。该默认值在网页上称为“selective”，而 0.95 称为“sensitive”。阈值也可以自由选择。</p>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><ul>\n<li><p>主程序</p>\n<ul>\n<li><a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveT3</a></li>\n</ul>\n</li>\n<li><p>依赖</p>\n<ul>\n<li>openjdk &gt;&#x3D;6</li>\n</ul>\n</li>\n<li><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用conda安装时依赖Pyton 2.7，3.5，3.6，需要首先创建相应版本的Python环境（自行创建）</span></span><br><span class=\"line\">conda install effectivet3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数据库（modules）配置</p>\n<p><font color=\"#FF0000\">记录一个深坑</font>：程序默认在module的路径前加了一个”.&#x2F;module”路径，因此，虽然程序安装的过程中自动下载了modules，然而我们并没有办法调用它们，只能重新下载。用户每次运行软件前需要在当前目录下创建了module目录，并下载modules，然后将其存到module目录中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p module</span><br><span class=\"line\"></span><br><span class=\"line\">curl -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar</span><br><span class=\"line\"></span><br><span class=\"line\">curl -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar</span><br><span class=\"line\"></span><br><span class=\"line\">curl -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar</span><br><span class=\"line\"></span><br><span class=\"line\">curl -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"输入数据\"><a href=\"#输入数据\" class=\"headerlink\" title=\"输入数据\"></a>输入数据</h1><p>包含蛋白序列的FASTA格式文件</p>\n<h1 id=\"运行软件\"><a href=\"#运行软件\" class=\"headerlink\" title=\"运行软件\"></a>运行软件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">effectivet3 -f F02_bin.1.faa -m TTSS_TTSS_STD-2.0.2.jar -t selective -o F02_bin.1.out -q</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>-f: 输入文件</li>\n<li>-m: 模型，可选”TTSS_ANIMAL-1.0.1.jar”，”TTSS_PLANT-1.0.1.jar”，”TTSS_STD-1.0.1.jar”和“TTSS_STD-2.0.2.jar”，建议用“TTSS_STD-2.0.2.jar”</li>\n<li>-t: 模式，”sensitive” and “selective”二选一，建议使用”selective”</li>\n<li>-o: 输出文件</li>\n<li>-q: 启动命令行模式</li>\n</ul>\n<h1 id=\"输出文件解读\"><a href=\"#输出文件解读\" class=\"headerlink\" title=\"输出文件解读\"></a>输出文件解读</h1><ul>\n<li><p>English: The table of results displays all query proteins sorted by prediction score. Effector classification (true&#x2F;false) according to the applied threshold is shown in the last column.</p>\n</li>\n<li><p>简体中文: 结果包含了输入文件中所有的查询序列IDs，根据得分进行排序。一共包含4列，第一列为序列ID，第二列为序列描述，第三列为预测得分，第四列描述该序列是否为效应因子。各列间以英文的分号（;）分隔。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"F01_bin.1.out\"></p>\n</li>\n</ul>\n<h1 id=\"批处理与结果整合\"><a href=\"#批处理与结果整合\" class=\"headerlink\" title=\"批处理与结果整合\"></a>批处理与结果整合</h1><p><strong>脚本名</strong>：run_effectiveT3.pl</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 13, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Download modules</span></span><br><span class=\"line\"><span class=\"comment\"># 记录一个深坑，程序默认在module的路径前加了一个&quot;./module&quot;路径，因此，虽然程序安装的过程中自动下载了modules，然而我们并没有办法调用它们，只能重新下载。</span></span><br><span class=\"line\"><span class=\"comment\"># 以下代码在当前目录下创建了module目录，并下载modules，然后将其存到module目录中。</span></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;mkdir -p module&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;curl -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;curl -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;curl -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;curl -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Predict one by one</span></span><br><span class=\"line\"><span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.T3&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;effectivet3 -f $_ -m TTSS_STD-2.0.2.jar -t selective -o $out -q&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># information aggregation</span></span><br><span class=\"line\"><span class=\"keyword\">my</span> (%hash, %strain);</span><br><span class=\"line\"><span class=\"keyword\">my</span> $line_num = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> T3, <span class=\"string\">&quot;&gt;T3SS.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> T3 <span class=\"string\">&quot;Strain\\tId\\tDescription\\tScore\\tis secreted\\tProtein sequences\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @t3 = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.T3&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $t3 (@t3) &#123;</span><br><span class=\"line\">\t$t3=~<span class=\"regexp\">/(.+).T3/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $faa = $1 . <span class=\"string\">&quot;.faa&quot;</span>;</span><br><span class=\"line\">\t$strain&#123;$str&#125;++;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %temp;</span><br><span class=\"line\">\t<span class=\"comment\"># Save ID and Sequence to %temp</span></span><br><span class=\"line\">\t<span class=\"keyword\">open</span> FAA, <span class=\"string\">&quot;$faa&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t&lt;FAA&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;FAA&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header=~<span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$seq=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t$temp&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> FAA;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$t3&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!<span class=\"regexp\">/^#/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\;/</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">3</span>] eq <span class=\"string\">&quot;true&quot;</span>) &#123;</span><br><span class=\"line\">\t\t\t\t$line_num++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> T3 <span class=\"string\">&quot;$str\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @lines) . <span class=\"string\">&quot;\\t&quot;</span> . $temp&#123;$lines[<span class=\"number\">0</span>]&#125; . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t\t$hash&#123;$str&#125;<span class=\"string\">&#123;true&#125;</span>++;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t$hash&#123;$str&#125;<span class=\"string\">&#123;false&#125;</span>++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> T3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ($line_num &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> T3NUM, <span class=\"string\">&quot;&gt;T3SS.num&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> T3NUM <span class=\"string\">&quot;Strain\\tTotal sequences\\tT3S effective true\\tT3S effective false\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span>  (<span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %strain) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> &amp;&amp; $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $total = $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> T3NUM $_ . <span class=\"string\">&quot;\\t&quot;</span> . $total . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span> . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> ($hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span>) &#123;</span><br><span class=\"line\">\t\t\t$hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $total = $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> T3NUM $_ . <span class=\"string\">&quot;\\t&quot;</span> . $total . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span> . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t$hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $total = $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> T3NUM $_ . <span class=\"string\">&quot;\\t&quot;</span> . $total . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span> . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> T3NUM;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;mkdir -p T3SS_result&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv *.T3 T3SS.num T3SS.txt T3SS_result&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>用法</strong>：将脚本与含有氨基酸序列的FASTA格式文件（后缀名为”.faa”，如果为其他，需要修改脚本第19、21和31行）放在同一目录下，在终端里运行如下命令（不需要事先配置数据库）：</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_effectiveT3.pl</span><br></pre></td></tr></table></figure>\n\n<p><strong>报错</strong>：Use of uninitialized value $seq in substitution (s&#x2F;&#x2F;&#x2F;) at run_effectiveT3.pl line 47, &lt;FAA&gt; chunk .</p>\n<p><strong>原因</strong>：氨基酸序列ID&#x2F;Header那一行的注释信息中含有”&gt;“。该报错不影响结果的准确性，可以忽略。</p>\n<h1 id=\"结果解读\"><a href=\"#结果解读\" class=\"headerlink\" title=\"结果解读\"></a>结果解读</h1><ul>\n<li><p>T3SS_result&#x2F;strain_name.T3：（strain_name代表输入文件的名称）effectiveT3输出的原始结果，共4列，如前文所述。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"CXY008.T3\"></p>\n</li>\n<li><p>T3SS_result&#x2F;T3SS.txt：包含了所有菌株的预测得到的效应因子，共6列，第一列为菌株名，中间的4列同上一个文件，最后一列为对应的氨基酸序列。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"T3SS.txt\"></p>\n</li>\n<li><p>T3SS_result&#x2F;T3SS.sum：记录所有菌株中序列总数、效应因子序列数和非效应因子序列数。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"T3SS.sum\"></p>\n</li>\n</ul>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“fb68”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveDB</a></li>\n<li><a href=\"https://github.com/bioconda/bioconda-recipes/tree/master/recipes/effectivet3\">Bioconda</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"T3SS","path":"api/tags/T3SS.json"}]},{"title":"使用eggNOG-mapper注释基因组","slug":"使用eggNOG-mapper注释基因组","date":"2022-02-26T02:37:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/使用eggNOG-mapper注释基因组.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"EggNOG-mapper简介-本文未完待续…\"><a href=\"#EggNOG-mapper简介-本文未完待续…\" class=\"headerlink\" title=\"EggNOG-mapper简介(本文未完待续…)\"></a>EggNOG-mapper简介(本文未完待续…)</h1><p>EggNOG-mapper (a.k.a. emapper.py or just emapper) is a tool for fast functional annotation of novel sequences. It uses precomputed orthologous groups (OGs) and phylogenies from the eggNOG database (<a href=\"http://eggnogdb.embl.de/\">http://eggnogdb.embl.de/</a>) to transfer functional information from fine-grained orthologs only.</p>\n<p>Common uses of eggNOG-mapper include the annotation of novel genomes, transcriptomes or even metagenomic gene catalogs.</p>\n<p>The use of orthology predictions for functional annotation permits a higher precision than traditional homology searches (i.e. BLAST searches), as it avoids transferring annotations from close paralogs (duplicate genes with a higher chance of being involved in functional divergence).</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><ul>\n<li>Python 3.7 (or greater)</li>\n<li>BioPython 1.76 (python package) (BioPython 1.78 should work since emapper version 2.1.7)</li>\n<li>psutil 5.7.0 (python package)</li>\n<li>xlsxwriter 1.4.3 (python package), only if using the –excel option</li>\n<li>wget (linux command, required for downloading the eggNOG-mapper databases with download_eggnog_data.py, and to create new Diamond&#x2F;MMseqs2 databases with create_dbs.py)</li>\n<li>sqlite (&gt;&#x3D;3.8.2)</li>\n</ul>\n<h2 id=\"需要的存储空间\"><a href=\"#需要的存储空间\" class=\"headerlink\" title=\"需要的存储空间\"></a>需要的存储空间</h2><ul>\n<li>~40 GB for the eggNOG annotation databases (eggnog.db and eggnog.taxa.db)</li>\n<li>~9 GB for Diamond database of eggNOG sequences (required if using -m diamond, which is the default search mode).</li>\n<li><del>11 GB for MMseqs2 database of eggNOG sequences (</del>86 GB if MMseqs2 index is created) (required if using -m mmseqs).</li>\n<li>~3 GB for PFAM database (required if using –pfam_realign options for realignment of queries to PFAM domains).<br>The size of eggNOG diamond&#x2F;mmseqs databases created with create_dbs.py is highly variable, depending on the size of the chosen taxonomic groups.</li>\n</ul>\n<p>Databases for specific taxonomic ranges can be downloaded (for HMMER) or created (for Diamond and MMseqs2). The size of these databases is highly variable. For the size of HMMER databases, check <a href=\"http://eggnog5.embl.de/#/app/downloads\">http://eggnog5.embl.de/#/app/downloads</a>. For Diamond and MMseqs2 databases, DB size will depend on the number of proteins which are from those taxonomic ranges. Also, these proteins need to be downloaded to create the databases, and can be removed afterwards.</p>\n<h2 id=\"Other-Requirements\"><a href=\"#Other-Requirements\" class=\"headerlink\" title=\"Other Requirements\"></a>Other Requirements</h2><ul>\n<li>Using –dbmem loads the whole eggnog.db sqlite3 annotation database during the annotation step, and therefore requires ~44 GB of memory.</li>\n<li>Using the –num_servers option when running HMMER in server mode (a.k.a. hmmgpmd, which is used for -m hmmer –usemem, –pfam_realign denovo or hmm_server.py) loads the HMM database as many times as specified in the argument (e.g. –pfam_realign denovo –num_servers 2 loads the PFAM database into memory twice, with up to roughly 2 GB per instance).</li>\n</ul>\n<h2 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>安装主程序</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install -c bioconda eggnog-mapper</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装数据库</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#创建数据库存储目录</span><br><span class=\"line\">mkdir /home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br><span class=\"line\">#将数据库位置加入环境变量</span><br><span class=\"line\">export EGGNOG_DATA_DIR=/home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br><span class=\"line\">#下载数据库</span><br><span class=\"line\">download_eggnog_data.py -P -M -y -f --data_dir /home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Similarly, use create_dbs.py. For example, to create a diamond database for Bacteria only:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create_dbs.py -m diamond --dbname bacteria --taxa Bacteria</span><br></pre></td></tr></table></figure>\n<p>This will create a bacteria.dmnd diamond database in the default data directory or the one specified in EGGNOG_DATA_DIR environment variable. Such database can be used with emapper.py –dmnd_db bacteria.dmnd. Note that the first time create_dbs.py is used it will take time to download the eggNOG proteins and create the Diamond or MMseqs2 database. Next calls to create_dbs.py (to the same data directory pointed by EGGNOG_DATA_DIR, or –data_dir, or data&#x2F; by default) will not need to download the eggnog5 proteins again. If no more databases are going to be created, the proteins can be removed. For further info, check create_dbs.py –help.</p>\n<h1 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h1><h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"使用xcms3处理和分析LC-MS数据","slug":"使用xcms3处理和分析LC-MS数据","date":"2023-02-06T07:45:39.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/使用xcms3处理和分析LC-MS数据.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_1.png","content":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>本文档描述了xcms（version&gt;&#x3D;3）的LCMS实验的数据导入、探索、预处理和分析。示例和基本工作流程改编自Colin A.Smith的原始LC&#x2F;MS预处理和分析。</p>\n<p>新版本使用<code>XCMSnExpe</code>对象（而不是旧的xcmsSet对象）作为预处理结果的容器。然而，为了支持依赖于xcmsSet对象的包和管道，可以使用as方法（即xset&lt;-as(x, “xcmsSet”)）将XCMSnExpe转换为xcmsSet对象，其中x是XCMSnxp对象。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>require<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">,</span> quietly <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">BiocManager<span class=\"operator\">::</span>install<span class=\"punctuation\">(</span><span class=\"string\">&quot;xcms&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"导入数据\"><a href=\"#导入数据\" class=\"headerlink\" title=\"导入数据\"></a>导入数据</h1><p>xcms支持（AIA&#x2F;ANDI）NetCDF、mzXML和mzML格式的LC&#x2F;MS数据。对于实际数据导入，使用Bioconductor的<a href=\"https://bioconductor.org/packages/3.15/mzR\">mzR</a>。出于演示目的，我们将分析[1]中的数据子集，其研究了敲除脂肪酸酰胺水解酶（FAAH）基因在小鼠中的代谢后果。原始数据文件（NetCDF格式）随<code>faahKO</code>数据包提供。数据集包括来自6只敲除小鼠和6只野生型小鼠脊髓的样本。每个文件包含在正离子模式下以200-600 m&#x2F;z和2500-4500秒采集的质心模式（centroid mode）数据。为了加快处理速度，我们仅分析8个文件，且限定保留时间范围为2500到3500秒。</p>\n<p>下面我们加载所有必需的包，在<code>faahKO</code>包中找到原始CDF文件，并构建描述实验设置的表型（phenodata）数据框。注意，对于实际实验，建议定义一个文件（表），其中包含原始数据文件的文件名以及每个文件的样本描述，作为附加列。然后，可以使用例如<code>read.table</code>导入该文件作为变量pd（而不是在下面的示例中在R中定义），并且可以将文件名传递给下面的<code>readMSData</code>函数，例如<code>files=paste0(MZML_PATH, &quot;/&quot;, pd$MZML_file)</code>，其中<code>MZML_PATH</code>是文件所在目录的路径，<code>&quot;mzMLfile&quot;</code>是phenodata文件中包含文件名那一列的<strong>列名</strong>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>xcms<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>faahKO<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>RColorBrewer<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>pander<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>magrittr<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>pheatmap<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>SummarizedExperiment<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Get the full path to the CDF files</span></span><br><span class=\"line\">cdfs <span class=\"operator\">&lt;-</span> dir<span class=\"punctuation\">(</span>system.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;cdf&quot;</span><span class=\"punctuation\">,</span> package <span class=\"operator\">=</span> <span class=\"string\">&quot;faahKO&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> full.names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> recursive <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span> <span class=\"number\">7</span><span class=\"punctuation\">,</span> <span class=\"number\">8</span><span class=\"punctuation\">,</span> <span class=\"number\">11</span><span class=\"punctuation\">,</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\">## Create a phenodata data.frame</span></span><br><span class=\"line\">pd <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>sample_name <span class=\"operator\">=</span> sub<span class=\"punctuation\">(</span>basename<span class=\"punctuation\">(</span>cdfs<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> pattern <span class=\"operator\">=</span> <span class=\"string\">&quot;.CDF&quot;</span><span class=\"punctuation\">,</span> replacement <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span> fixed <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> sample_group <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;KO&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;WT&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>随后，我们使用<code>MSnbase</code>包中的<code>readMSData</code>方法将原始数据加载为<code>OnDiskMSnExpe</code>对象。MSnbase为质谱数据处理提供了基础结构和基础设施。此外，MSnbase可用于形心剖面模式（centroid profile-mode）MS数据（参见MSnbase包中的相应介绍）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raw_data <span class=\"operator\">&lt;-</span> readMSData<span class=\"punctuation\">(</span>files <span class=\"operator\">=</span> cdfs<span class=\"punctuation\">,</span> pdata <span class=\"operator\">=</span> new<span class=\"punctuation\">(</span><span class=\"string\">&quot;NAnnotatedDataFrame&quot;</span><span class=\"punctuation\">,</span> pd<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mode <span class=\"operator\">=</span> <span class=\"string\">&quot;onDisk&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>接下来，我们将数据集限制在2500到3500秒的保留时间范围内。这仅仅是为了减少该示例的处理时间。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raw_data <span class=\"operator\">&lt;-</span> filterRt<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2500</span><span class=\"punctuation\">,</span> <span class=\"number\">3500</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>生成的<code>OnDiskMSnExpe</code>对象包含关于spectrum数量、保留时间、测量的总离子电流等的一般信息，但不包含完整的原始数据（即每个测量光谱的m&#x2F;z和强度值）。因此，它的内存占用相当小，是代表大型代谢组学实验的理想对象，同时允许执行简单的质量控制、数据检查和探索以及数据取子集操作。m&#x2F;z和强度值根据需要从原始数据文件中导入，因此原始数据文件的位置在初始数据导入后不应更改。</p>\n<h1 id=\"初始数据检查\"><a href=\"#初始数据检查\" class=\"headerlink\" title=\"初始数据检查\"></a>初始数据检查</h1><p><code>OnDiskMSnExp</code>按spectrum组织MS数据，并提供<code>intensity</code>、<code>mz</code>和<code>rtime</code>方法以访问文件中的原始数据（测量的强度值、相应的m&#x2F;z和保留时间值）。此外，<code>spectra</code>方法可用于返回封装在spectrum对象中的所有数据。下面我们从对象中提取保留时间值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>rtime<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class=\"line\">## 2501.378 2502.943 2504.508 2506.073 2507.638 2509.203</span><br></pre></td></tr></table></figure>\n\n<p>即使实验由多个文件&#x2F;样本组成，所有数据都会作为一维矢量（one-dimensional vectors，rtime的一个数值型向量，一个向量列表for mz和intensity，每个各自都包含一个spectrum的值）返回。<code>fromFile</code>函数返回一个整型向量，提供值到原始文件的映射。下面我们使用<code>fromFile</code>索引按文件组织<code>mz</code>值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mzs <span class=\"operator\">&lt;-</span> mz<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Split the list by file</span></span><br><span class=\"line\">mzs_by_file <span class=\"operator\">&lt;-</span> split<span class=\"punctuation\">(</span>mzs<span class=\"punctuation\">,</span> f <span class=\"operator\">=</span> fromFile<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">length</span><span class=\"punctuation\">(</span>mzs_by_file<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 8</span><br></pre></td></tr></table></figure>\n\n<p>作为数据的第一次评估，我们在实验中绘制了每个文件的基峰色谱图（base peak chromatogram, BPC）。我们使用<code>chromatogram</code>方法并将<code>aggregationFun</code>设置为<code>&quot;max&quot;</code>，以返回每个spectrum的最大强度，从而根据原始数据创建BPC。为了创建总离子色谱图（total ion chromatogram），我们可以将<code>aggregationFun</code>设置为<code>sum</code>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Get the base peak chromatograms. This reads data from the files.</span></span><br><span class=\"line\">bpis <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">,</span> aggregationFun <span class=\"operator\">=</span> <span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">## Define colors for the two groups</span></span><br><span class=\"line\">group_colors <span class=\"operator\">&lt;-</span> paste0<span class=\"punctuation\">(</span>brewer.pal<span class=\"punctuation\">(</span><span class=\"number\">3</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Set1&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;60&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>group_colors<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;KO&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;WT&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Plot all chromatograms.</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_1.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>bpis<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>raw_data<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"MChromatograms\"></p>\n<p><code>chromatogram</code>返回了一个<code>MCchromatograms</code>对象，该对象以二维矩阵形式组织各个<code>Chromatogram</code>对象（实际上包含chromatographic数据）：列表示样本，行（可选）表示m&#x2F;z和&#x2F;或保留时间范围。下面我们提取第一个样品的chromatogram，并获取其保留时间和强度值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bpi_1 <span class=\"operator\">&lt;-</span> bpis<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>rtime<span class=\"punctuation\">(</span>bpi_1<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class=\"line\">## 2501.378 2502.943 2504.508 2506.073 2507.638 2509.203</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>intensity<span class=\"punctuation\">(</span>bpi_1<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class=\"line\">##   43888    43960    43392    42632    42200    42288 </span><br></pre></td></tr></table></figure>\n\n<p><code>chromatogram</code>法还支持从MS数据的m&#x2F;z-rt切片中提取chromatographic数据。在下一节中，我们将使用此方法为选定的峰创建提取的离子色谱图（extracted ion chromatogram, EIC）。</p>\n<p>注意，<code>chromatogram</code>从每个文件读取原始数据以计算chromatogram。另一方面，<code>bpi</code>和<code>tic</code>方法不从原始文件读取任何数据，而是使用输入文件的头定义(header definition)中提供的相应信息（可能与实际数据不同）。</p>\n<p>下面我们创建表示每个文件总离子流分布的箱线图。这些图对于发现有问题或失败的MS运行非常有用。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Get the total ion current by file</span></span><br><span class=\"line\">tc <span class=\"operator\">&lt;-</span> split<span class=\"punctuation\">(</span>tic<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> f <span class=\"operator\">=</span> fromFile<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">boxplot<span class=\"punctuation\">(</span>tc<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>raw_data<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        ylab <span class=\"operator\">=</span> <span class=\"string\">&quot;intensity&quot;</span><span class=\"punctuation\">,</span> main <span class=\"operator\">=</span> <span class=\"string\">&quot;Total ion current&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Distribution of total ion currents per file\"></p>\n<p>此外，我们可以根据样品的BPC的相似性对样品进行聚类。这也有助于在实验中发现潜在的有问题的样本，或获得实验中样本分组的初步概述。由于样本之间的保留时间不完全相同，我们使用<code>bin</code>函数将强度分组在沿保留时间轴的固定时间范围（bins）中。在本示例中，我们使用的bin大小为2秒，默认值为0.5秒。聚类是使用完全连锁分级聚类（complete linkage hierarchical clustering）对合并的BPC的成对相关性进行的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Bin the BPC</span></span><br><span class=\"line\">bpis_bin <span class=\"operator\">&lt;-</span> MSnbase<span class=\"operator\">::</span>bin<span class=\"punctuation\">(</span>bpis<span class=\"punctuation\">,</span> binSize <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Calculate correlation on the log2 transformed base peak intensities</span></span><br><span class=\"line\">cormat <span class=\"operator\">&lt;-</span> cor<span class=\"punctuation\">(</span>log2<span class=\"punctuation\">(</span>do.call<span class=\"punctuation\">(</span>cbind<span class=\"punctuation\">,</span> lapply<span class=\"punctuation\">(</span>bpis_bin<span class=\"punctuation\">,</span> intensity<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">colnames<span class=\"punctuation\">(</span>cormat<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> rownames<span class=\"punctuation\">(</span>cormat<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> raw_data<span class=\"operator\">$</span>sample_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Define which phenodata columns should be highlighted in the plot</span></span><br><span class=\"line\">ann <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>group <span class=\"operator\">=</span> raw_data<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">)</span></span><br><span class=\"line\">rownames<span class=\"punctuation\">(</span>ann<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> raw_data<span class=\"operator\">$</span>sample_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Perform the cluster analysis</span></span><br><span class=\"line\">pheatmap<span class=\"punctuation\">(</span>cormat<span class=\"punctuation\">,</span> annotation <span class=\"operator\">=</span> ann<span class=\"punctuation\">,</span> annotation_color <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>group <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Grouping of samples based on similarity of their base peak chromatogram\"></p>\n<p>样本以成对方式聚类，样本索引的KO和WT样本具有最相似的BPC。</p>\n<h1 id=\"色谱峰检测\"><a href=\"#色谱峰检测\" class=\"headerlink\" title=\"色谱峰检测\"></a>色谱峰检测</h1><p>接下来，我们使用<code>centWave</code>算法进行色谱峰检测[2]。然而，在运行峰值检测之前，强烈建议目视检查内参或已知化合物的提取离子色谱图，以评估和调整峰值检测设置，因为默认设置不适用于大多数LCMS实验。centWave的两个最关键的参数是<code>peakwidth</code>（色谱峰宽度的预期范围）和<code>ppm</code>（对应于一个色谱峰的centroids m&#x2F;z值的最大预期偏差；这通常比制造商规定的ppm大得多）参数。为了评估典型的色谱峰宽度，我们绘制了一个峰的EIC。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Define the rt and m/z range of the peak area</span></span><br><span class=\"line\">rtr <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2700</span><span class=\"punctuation\">,</span> <span class=\"number\">2900</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">mzr <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">334.9</span><span class=\"punctuation\">,</span> <span class=\"number\">335.1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">## extract the chromatogram</span></span><br><span class=\"line\">chr_raw <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_raw<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>chr_raw<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Extracted ion chromatogram for one peak\"></p>\n<p>注意，如果在特定扫描（即特定保留时间）中，在各自的mz范围内没有测量到信号，则通过<code>chromatogram</code>法提取的Chromatogram对象包含<code>NA值</code>。反映在上图中为不连续的线。</p>\n<p>上面的峰值宽度约为50秒。<code>peakwidth</code>参数应设置为适应数据集中预期的峰值宽度。对于当前示例数据集，我们将其设置为<code>20,80</code>。</p>\n<p>对于<code>ppm</code>参数，我们提取对应于上述峰值的完整MS数据（强度、保留时间和m&#x2F;z值）。为此，我们首先按保留时间过滤原始对象，然后按m&#x2F;z过滤，最后用<code>type=“XIC”</code>绘制对象以生成下图。我们使用pipe（<code>%&gt;%</code>）命令更好地说明了相应的工作流。还应注意，在这种类型的图中，如果存在色谱峰，则默认显示色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raw_data <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    filterRt<span class=\"punctuation\">(</span>rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    filterMz<span class=\"punctuation\">(</span>mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    plot<span class=\"punctuation\">(</span>type <span class=\"operator\">=</span> <span class=\"string\">&quot;XIC&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_5.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_5.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Visualization of the raw MS data for one peak\"></p>\n<p><strong>图注</strong>：对于每个图：上面板：根据保留时间绘制强度值的色谱图；下面板：m&#x2F;z根据保留时间绘图。各个数据点根据强度进行着色。</p>\n<p>在目前的数据中，m&#x2F;z值实际上没有变化。通常可以看到m&#x2F;z值（下面板）散布在化合物的实际m&#x2F;z值周围。centWave算法的第一步基于连续扫描的m&#x2F;z值的差异定义所谓的感兴趣区域（regions of interest, ROI）。具体而言，如果ROI的m&#x2F;z和平均m&#x2F;z之间的差小于用户定义的ppm参数，则来自连续扫描的m&#x2F;z值被包括在ROI中。因此，ppm的合理选择可以是来自作为色谱峰一部分的相邻扫描&#x2F;光谱（scans&#x2F;spectra）的数据点的最大m&#x2F;z差。建议检查许多化合物（内标或样品中已知存在的化合物）的m&#x2F;z值范围，并根据这些确定centWave的ppm参数。</p>\n<p>注意，我们也可以对提取的离子色谱图（ion chromatogram）进行峰检测。这有助于评估不同的峰值检测设置。只需注意，提取的离子色谱图上的峰值检测不会考虑ppm参数，并且背景信号的估计与完整数据集上的峰值探测不同；因此，<code>snthresh</code>的值将具有不同的结果。下面我们使用<code>findChromPeaks</code>函数对提取的离子色谱图进行峰值检测。提交的参数对象定义将使用的算法，并允许定义此算法的设置。我们使用带有默认设置的centWave算法，<code>snthresh</code>除外。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xchr <span class=\"operator\">&lt;-</span> findChromPeaks<span class=\"punctuation\">(</span>chr_raw<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> CentWaveParam<span class=\"punctuation\">(</span>snthresh <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>我们可以使用<code>chromPeaks</code>函数访问已识别的色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xchr<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##            rt    rtmin    rtmax       into       intb  maxo  sn row column</span><br><span class=\"line\">## [1,] 2781.505 2761.160 2809.674  412134.25  355516.37 16856  13   1      1</span><br><span class=\"line\">## [2,] 2786.199 2764.290 2812.803 1496244.21 1391821.33 58736  20   1      2</span><br><span class=\"line\">## [3,] 2734.556 2714.211 2765.855   21579.37   18449.43   899   4   1      3</span><br><span class=\"line\">## [4,] 2797.154 2775.245 2815.933  159058.78  150289.31  6295  12   1      3</span><br><span class=\"line\">## [5,] 2784.635 2761.160 2808.109   54947.54   37923.53  2715   2   1      4</span><br><span class=\"line\">## [6,] 2859.752 2845.668 2878.532   13895.21   13874.87   905 904   1      4</span><br></pre></td></tr></table></figure>\n\n<p>与<code>chromPeaks</code>矩阵相似，还有一个数据框<code>chromPeakData</code>，允许为每个色谱峰添加任意注释。下面我们提取这个数据框，默认情况下，该数据框只包含识别峰值的MS水平。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chromPeakData<span class=\"punctuation\">(</span>xchr<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## DataFrame with 12 rows and 4 columns</span><br><span class=\"line\">##      ms_level is_filled       row    column</span><br><span class=\"line\">##     &lt;integer&gt; &lt;logical&gt; &lt;integer&gt; &lt;integer&gt;</span><br><span class=\"line\">## 1           1     FALSE         1         1</span><br><span class=\"line\">## 2           1     FALSE         1         2</span><br><span class=\"line\">## 3           1     FALSE         1         3</span><br><span class=\"line\">## 4           1     FALSE         1         3</span><br><span class=\"line\">## 5           1     FALSE         1         4</span><br><span class=\"line\">## ...       ...       ...       ...       ...</span><br><span class=\"line\">## 8           1     FALSE         1         4</span><br><span class=\"line\">## 9           1     FALSE         1         5</span><br><span class=\"line\">## 10          1     FALSE         1         6</span><br><span class=\"line\">## 11          1     FALSE         1         7</span><br><span class=\"line\">## 12          1     FALSE         1         8</span><br></pre></td></tr></table></figure>\n\n<p>接下来，我们在提取的离子色谱图中绘制已识别的色谱峰。我们使用<code>col</code>参数为各个色谱线上色。还可以为识别的峰值指定颜色，<code>peakCol</code>为前景&#x2F;边框颜色，<code>peakBg</code>为背景&#x2F;填充颜色。必须为<code>chromPeaks</code>列出的每个色谱峰提供一种颜色。下面我们定义了一种颜色，以指示样本所在的样本组，并使用峰<code>“sample”</code>列中的样本信息为每个色谱峰分配正确的颜色。更多峰值突出显示选项将在下面进一步描述。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sample_colors <span class=\"operator\">&lt;-</span> group_colors<span class=\"punctuation\">[</span>xchr<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>xchr<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">,</span></span><br><span class=\"line\">     peakBg <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>xchr<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_6.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_6.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Signal for an example peak\"></p>\n<p><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。已识别色谱峰的峰面积用样品组颜色突出显示。</p>\n<p>最后，我们对整个数据集进行色谱峰检测。请注意，我们将参数<code>prefilter</code>设置为<code>c(6, 5000)</code>，将<code>noise</code>设置为<code>5000</code>，以减少该示例的运行时间。使用此设置，我们只考虑峰值检测步骤中值大于5000的信号。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cwp <span class=\"operator\">&lt;-</span> CentWaveParam<span class=\"punctuation\">(</span>peakwidth <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">,</span> <span class=\"number\">80</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> noise <span class=\"operator\">=</span> <span class=\"number\">5000</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                     prefilter <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">6</span><span class=\"punctuation\">,</span> <span class=\"number\">5000</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> findChromPeaks<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> cwp<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>结果作为<code>XCMSnExp</code>对象返回，该对象通过存储LC&#x2F;GC-MS预处理结果来扩展<code>OnDiskMSnExp</code>对象。这也意味着，所有设置和过滤数据或访问（原始）数据的方法都是从<code>OnDiskMSnExp</code>对象继承的，因此可以重新使用。还请注意，通过使用参数<code>add＝TRUE</code>调用<code>findChromPeaks</code>，可以对<code>xdata</code>对象执行额外的峰值检测（例如，在MS level＞1的数据上）。</p>\n<p>色谱峰检测的结果可通过<code>chromPeaks</code>方法获得。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##           mz mzmin mzmax       rt    rtmin    rtmax      into      intb  maxo    sn sample</span><br><span class=\"line\">## CP0001 453.2 453.2 453.2 2509.203 2501.378 2527.982 1007409.0 1007380.8 38152 38151      1</span><br><span class=\"line\">## CP0002 236.1 236.1 236.1 2518.593 2501.378 2537.372  253501.0  226896.3 12957    11      1</span><br><span class=\"line\">## CP0003 594.0 594.0 594.0 2601.535 2581.191 2637.529  161042.2  149297.3  7850    13      1</span><br><span class=\"line\">## CP0004 577.0 577.0 577.0 2604.665 2581.191 2626.574  136105.2  129195.5  6215    13      1</span><br><span class=\"line\">## CP0005 369.2 369.2 369.2 2587.451 2556.151 2631.269  483852.3  483777.1  7215  7214      1</span><br><span class=\"line\">## CP0006 369.2 369.2 369.2 2568.671 2557.716 2578.061  144624.8  144602.9  7033  7032      1</span><br></pre></td></tr></table></figure>\n\n<p>返回的<code>matrix</code>提供了每个已识别色谱峰的m&#x2F;z和保留时间范围，以及整合的信号强度（“into”）和最大峰强度（“maxo”）。“sample”列包含确定峰值的对象&#x2F;实验中样本的索引。</p>\n<p>可以使用<code>chromPeakData</code>函数提取每个峰的注释。该数据框还可以用于为每个检测到的峰添加&#x2F;存储任意注释。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chromPeakData<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## DataFrame with 1707 rows and 2 columns</span><br><span class=\"line\">##         ms_level is_filled</span><br><span class=\"line\">##        &lt;integer&gt; &lt;logical&gt;</span><br><span class=\"line\">## CP0001         1     FALSE</span><br><span class=\"line\">## CP0002         1     FALSE</span><br><span class=\"line\">## CP0003         1     FALSE</span><br><span class=\"line\">## CP0004         1     FALSE</span><br><span class=\"line\">## CP0005         1     FALSE</span><br><span class=\"line\">## ...          ...       ...</span><br><span class=\"line\">## CP1703         1     FALSE</span><br><span class=\"line\">## CP1704         1     FALSE</span><br><span class=\"line\">## CP1705         1     FALSE</span><br><span class=\"line\">## CP1706         1     FALSE</span><br><span class=\"line\">## CP1707         1     FALSE</span><br></pre></td></tr></table></figure>\n\n<p>峰检测不会总是完美地工作，从而导致峰检测伪影（artifacts），例如重叠峰或人为分割峰。<code>refineChromPeaks</code>函数允许通过去除未通过特定标准的已识别峰或合并人工拆分的色谱峰来优化峰检测结果。使用参数对象<code>CleanPeaksParam</code>和<code>FilterIntensityParam</code>，可以分别删除保留时间范围或强度低于阈值的峰（有关更多详细信息和示例，请参阅各自的帮助页面）。使用<code>MergeNeighbringPeaksParam</code>可以合并色谱峰。下面我们对峰检测结果进行进一步处理，如果它们之间的信号低于较小峰最大强度的75%，合并每个文件在4秒窗口中重叠的峰值（merging peaks overlapping in a 4 second window per file）。有关设置和方法的详细说明，请参阅<code>MergeNeighborgingPeaksParam</code>帮助页面。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpp <span class=\"operator\">&lt;-</span> MergeNeighboringPeaksParam<span class=\"punctuation\">(</span>expandRt <span class=\"operator\">=</span> <span class=\"number\">4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata_pp <span class=\"operator\">&lt;-</span> refineChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> mpp<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如下展示了合并峰的示例。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mzr_1 <span class=\"operator\">&lt;-</span> 305.1 <span class=\"operator\">+</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">chr_1 <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>filterFile<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">chr_2 <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>filterFile<span class=\"punctuation\">(</span>xdata_pp<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_7.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_8.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_2<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_7.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_7.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Result from the peak refinement step: 处理前的数据\" style=\"width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_8.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_8.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Result from the peak refinement step: 处理后的数据，峰被合并\" style=\"width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p>对于以上色谱图centWave检测到3个峰（1个峰代表整个区域，两个较小的峰，见上图中的左侧面板）。<code>MergeNeighborgingPeaksParam</code>的峰细化（refinement ）将它们减少为单个峰（上图中的右面板）。注意，这种细化不会合并相邻峰值，因为它们之间的信号低于一定比例（参见下图）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mzr_1 <span class=\"operator\">&lt;-</span> 496.2 <span class=\"operator\">+</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">chr_1 <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>filterFile<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">chr_2 <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>filterFile<span class=\"punctuation\">(</span>xdata_pp<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_9.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_10.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_2<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_9.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_9.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Result from the peak refinement step: 处理前的数据\" style=\"width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_10.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_10.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Result from the peak refinement step: 处理后的数据，峰未合并\" style=\"width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p>还应注意，可以对提取的离子色谱图进行峰细化。这可以例如用于微调参数的设置。为了说明这一点，我们下面对提取的离子色谱图<code>chr_1</code>进行了峰细化，减少了<code>minProp</code>参数，以强制连接两个峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res <span class=\"operator\">&lt;-</span> refineChromPeaks<span class=\"punctuation\">(</span>chr_1<span class=\"punctuation\">,</span> MergeNeighboringPeaksParam<span class=\"punctuation\">(</span>minProp <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">chromPeaks<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         mz mzmin mzmax       rt    rtmin    rtmax     into intb    maxo  sn</span><br><span class=\"line\">## CPM1 496.2 496.2 496.2 3384.012 3294.809 3412.181 45940118   NA 1128960 177</span><br><span class=\"line\">##      sample row column</span><br><span class=\"line\">## CPM1      1   1      1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;cxms_11.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_11.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_11.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"强制连接两个峰\"></p>\n<p>在继续之前，我们用峰细化的结果替换<code>xdata</code>对象。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> xdata_pp</span><br></pre></td></tr></table></figure>\n\n<p>下面我们使用<code>chromPeaks</code>矩阵中的数据来计算每个文件的一些摘要。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary_fun <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"built_in\">c</span><span class=\"punctuation\">(</span>peak_count <span class=\"operator\">=</span> nrow<span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> quantile<span class=\"punctuation\">(</span>z<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;rtmax&quot;</span><span class=\"punctuation\">]</span> <span class=\"operator\">-</span> z<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;rtmin&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">T</span> <span class=\"operator\">&lt;-</span> lapply<span class=\"punctuation\">(</span>split.data.frame<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> f <span class=\"operator\">=</span> chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> FUN <span class=\"operator\">=</span> summary_fun<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">T</span> <span class=\"operator\">&lt;-</span> do.call<span class=\"punctuation\">(</span>rbind<span class=\"punctuation\">,</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">rownames<span class=\"punctuation\">(</span><span class=\"built_in\">T</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> basename<span class=\"punctuation\">(</span>fileNames<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pandoc.table<span class=\"punctuation\">(</span><span class=\"built_in\">T</span><span class=\"punctuation\">,</span> caption <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;Summary statistics on identified chromatographic&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot; peaks. Shown are number of identified peaks per&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot; sample and widths/duration of chromatographic &quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;peaks.&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">------------------------------------------------------------------------</span><br><span class=\"line\">    &amp;nbsp;      peak_count   rt.0%   rt.25%   rt.50%   rt.75%   rt.100%</span><br><span class=\"line\">-------------- ------------ ------- -------- -------- -------- ---------</span><br><span class=\"line\"> **ko15.CDF**      400       10.95   34.43    42.25    53.21     319.2</span><br><span class=\"line\"></span><br><span class=\"line\"> **ko16.CDF**      522       10.95   32.86    42.25    53.21     151.8</span><br><span class=\"line\"></span><br><span class=\"line\"> **ko21.CDF**      215       10.95   42.25    50.08    64.95     164.3</span><br><span class=\"line\"></span><br><span class=\"line\"> **ko22.CDF**      239       10.95   37.56    46.95    59.47     147.1</span><br><span class=\"line\"></span><br><span class=\"line\"> **wt15.CDF**      408       10.95    31.3    42.25    53.21     161.2</span><br><span class=\"line\"></span><br><span class=\"line\"> **wt16.CDF**      366       10.95   35.99    45.38    59.47     162.8</span><br><span class=\"line\"></span><br><span class=\"line\"> **wt21.CDF**      228       10.95   35.99    48.51    65.73     172.1</span><br><span class=\"line\"></span><br><span class=\"line\"> **wt22.CDF**      334       10.95   35.99    43.82     57.9     228.5</span><br><span class=\"line\">------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">Table: Summary statistics on identified chromatographic peaks. Shown are number of identified peaks per sample and widths/duration of chromatographic peaks.</span><br></pre></td></tr></table></figure>\n\n<p>我们还可以使用<code>plotChromPeaks</code>函数绘制一个文件的m&#x2F;z——保留时间空间中已识别色谱峰的位置。下面我们绘制了第三个样品的色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_12.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_12.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_12.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Identified chromatographic peaks in the m/z by retention time space for one sample\"></p>\n<p>为了获得峰检测的全局概览，我们可以沿着保留时间轴绘制每个文件的已识别峰的频率。这允许识别MS运行中的时间段，在该时间段中识别出更多数量的峰，并评估这在文件之间是否一致。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_13.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotChromPeakImage<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_13.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_13.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Frequency of identified chromatographic peaks along the retention time axis\"></p>\n<p><strong>图注</strong>：频率是彩色编码的，较高的频率由黄-白表示。每行显示一个文件的峰值频率。</p>\n<p>接下来，我们重点介绍前面示例峰的已识别色谱峰。在对应于已知峰或内标的峰列表上评估这样的图有助于确保峰检测设置是适当的并且正确地识别预期峰。我们从峰检测结果对象中提取离子色谱图，其中还包含我们可以使用<code>chromPeaks</code>函数提取的该离子的已识别色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chr_ex <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">)</span></span><br><span class=\"line\">chromPeaks<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         mz mzmin mzmax       rt    rtmin    rtmax      into      intb  maxo sn</span><br><span class=\"line\">## CP0045 335   335   335 2781.505 2761.160 2809.674  412134.3  383167.4 16856 23</span><br><span class=\"line\">## CP0501 335   335   335 2786.199 2764.290 2812.803 1496244.2 1461187.3 58736 72</span><br><span class=\"line\">## CP1041 335   335   335 2797.154 2775.245 2815.933  159058.8  149229.6  6295 13</span><br><span class=\"line\">## CP2002 335   335   335 2786.199 2764.290 2812.803  932645.2  915333.8 35856 66</span><br><span class=\"line\">## CP2391 335   335   335 2792.461 2768.987 2823.760  876585.5  848569.1 27200 36</span><br><span class=\"line\">##        sample row column</span><br><span class=\"line\">## CP0045      1   1      1</span><br><span class=\"line\">## CP0501      2   1      2</span><br><span class=\"line\">## CP1041      3   1      3</span><br><span class=\"line\">## CP2002      6   1      6</span><br><span class=\"line\">## CP2391      7   1      7</span><br></pre></td></tr></table></figure>\n\n<p>我们还可以绘制提取的离子色谱图。已识别的色谱峰将在图中自动突出显示。下面我们用矩形突出显示色谱峰，从峰的最小到最大rt，从0到峰的最大信号。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sample_colors <span class=\"operator\">&lt;-</span> group_colors<span class=\"punctuation\">[</span>chr_ex<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_14.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">,</span> peakType <span class=\"operator\">=</span> <span class=\"string\">&quot;rectangle&quot;</span><span class=\"punctuation\">,</span> peakCol <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> peakBg <span class=\"operator\">=</span> <span class=\"literal\">NA</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_14.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_14.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Signal for an example peak\"></p>\n<p><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。矩形表示每个样品的色谱峰。</p>\n<p>作为上述矩形可视化的替代方案，可以用一个点表示每个峰的顶点位置（将参数<code>type=&quot;point&quot;</code>传递给函数），或通过指定<code>type=&quot;polygon&quot;</code>绘制实际识别的峰。为了完全省略突出显示已识别的峰（例如绘制基本峰色谱图或类似图），可以使用<code>type = &quot;none&quot;</code>”。下面我们使用<code>type=&quot;polygon&quot;</code>填充每个样品中每个已识别色谱峰的峰面积。然而，在这样的图中是否仍然可以识别单个峰取决于从中绘制峰的样本数量。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_15.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>chr_raw<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> lwd <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">     peakBg <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_15.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_15.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Signal for an example peak\"><br><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。已识别色谱峰的信号区域用颜色填充。</p>\n<p>注意，我们还可以通过在<code>chromPeaks</code>方法中提供各自的m&#x2F;z和保留时间范围以及<code>mz</code>和<code>rt</code>参数，提取选定区域的已鉴定色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pander<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> caption <span class=\"operator\">=</span> paste<span class=\"punctuation\">(</span><span class=\"string\">&quot;Identified chromatographic peaks in a selected &quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;m/z and retention time range.&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-----------------------------------------------------------------------------</span><br><span class=\"line\">   &amp;nbsp;     mz    mzmin   mzmax    rt    rtmin   rtmax    into      intb</span><br><span class=\"line\">------------ ----- ------- ------- ------ ------- ------- --------- ---------</span><br><span class=\"line\"> **CP0045**   335    335     335    2782   2761    2810    412134    383167</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP0501**   335    335     335    2786   2764    2813    1496244   1461187</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP1041**   335    335     335    2797   2775    2816    159059    149230</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP2002**   335    335     335    2786   2764    2813    932645    915334</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP2391**   335    335     335    2792   2769    2824    876586    848569</span><br><span class=\"line\">-----------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">Table: Identified chromatographic peaks in a selected  m/z and retention time range. (continued below)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">----------------------------------</span><br><span class=\"line\">   &amp;nbsp;     maxo    sn   sample</span><br><span class=\"line\">------------ ------- ---- --------</span><br><span class=\"line\"> **CP0045**   16856   23     1</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP0501**   58736   72     2</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP1041**   6295    13     3</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP2002**   35856   66     6</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP2391**   27200   36     7</span><br><span class=\"line\">----------------------------------</span><br></pre></td></tr></table></figure>\n\n<p>最后，我们还绘制了每个样本的峰强度分布。这允许调查样本之间的峰信号是否存在系统差异。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract a list of per-sample peak intensities (in log2 scale)</span></span><br><span class=\"line\">ints <span class=\"operator\">&lt;-</span> split<span class=\"punctuation\">(</span>log2<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;into&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> f <span class=\"operator\">=</span> chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_16.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">boxplot<span class=\"punctuation\">(</span>ints<span class=\"punctuation\">,</span> varwidth <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> ylab <span class=\"operator\">=</span> <span class=\"built_in\">expression</span><span class=\"punctuation\">(</span><span class=\"built_in\">log</span><span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"operator\">~</span>intensity<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> main <span class=\"operator\">=</span> <span class=\"string\">&quot;Peak intensities&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">grid<span class=\"punctuation\">(</span>nx <span class=\"operator\">=</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> ny <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_16.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_16.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Peak intensity distribution per sample\"><br>注意，除了上述色谱峰的识别之外，还可以使用<code>manualChromPeaks</code>函数手动定义和添加色谱峰（更多信息请参见<code>?manualChronPeaks</code>帮助页面）。</p>\n<h1 id=\"Alignment\"><a href=\"#Alignment\" class=\"headerlink\" title=\"Alignment\"></a>Alignment</h1><p>分析物在色谱中洗脱的时间可能因样品（甚至化合物）而异。在上一节中作为示例所示的提取离子色谱图中已经可以观察到这种差异。对齐步骤，也称为保留时间校正，旨在通过沿保留时间轴移动信号来调整这一点，以在实验中对齐不同样本之间的信号。</p>\n<p>存在很多的对齐算法（参见[3]），其中一些算法也在xcms中实现。在xcms中执行对齐&#x2F;保留时间校正的方法是<code>adjustRtime</code>，其根据所提供的参数类别使用不同的对齐算法。</p>\n<p>在下面的示例中，我们使用<em>obiwarp</em>方法[4]来对齐样本。我们使用<code>binSize＝0.6</code>，它在mz为0.6的bins中创建扭曲函数（warping functions）。此外，这里建议修改每个实验的设置，并评估保留时间校正是否对齐了内参或已知化合物。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> adjustRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> ObiwarpParam<span class=\"punctuation\">(</span>binSize <span class=\"operator\">=</span> <span class=\"number\">0.6</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><code>adjustRtime</code>，除了计算每个光谱的校正保留时间外，还调整了已鉴定色谱峰的报告保留时间。</p>\n<p>为了提取校正后的保留时间，我们可以使用<code>adjustedRtime</code>方法，或者简单地使用<code>rtime</code>方法，如果存在的话，默认情况下会从<code>XCMSnExp</code>对象返回校正后的保留时间。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract adjusted retention times</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>adjustedRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006</span><br><span class=\"line\">## 2501.378 2502.958 2504.538 2506.118 2507.699 2509.280</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Or simply use the rtime method</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>rtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006</span><br><span class=\"line\">## 2501.378 2502.958 2504.538 2506.118 2507.699 2509.280</span><br></pre></td></tr></table></figure>\n\n<p>原始保留时间可以从包含与<code>rtime(xdata，adjusted=FALSE)</code>对齐的数据的<code>XCMSnExp</code>中提取。</p>\n<p>为了评估对齐的影响，我们利用校正后的数据绘制BPC。此外，我们使用<code>plotAdjustedRtime</code>函数绘制每个样本的校正后保留时间与原始保留时间的差异。对于基峰色谱图，从结果对象中提取已识别的色谱峰是没有意义的。因此，我们在<code>chromatogram</code>调用中使用参数<code>include=&quot;none&quot;</code>，以在返回的对象中不包含色谱峰。请注意，也可以通过在<code>plot</code>调用中设置<code>peakType = &quot;none&quot;</code>来避免绘制它们。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Get the base peak chromatograms.</span></span><br><span class=\"line\">bpis_adj <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> aggregationFun <span class=\"operator\">=</span> <span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">,</span> include <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mar <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">4.5</span><span class=\"punctuation\">,</span> <span class=\"number\">4.2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_17.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>bpis_adj<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>bpis_adj<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Plot also the difference of adjusted to raw retention time.</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_18.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotAdjustedRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_17.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_17.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Obiwarp aligned data\"><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_18.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_18.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Obiwarp aligned data\"></p>\n<p><strong>图注</strong>：对齐后的基峰色谱图（顶部）和沿保留时间轴的校正保留时间与原始保留时间之间的差异（底部）。</p>\n<p>校正后的保留时间与原始保留时间之间的差异太大，可能表明样品或对齐效果不佳（poorly performing samples or alignment）。</p>\n<p><strong>注意</strong>：<code>XCMSnExp</code>对象保存原始数据以及校正后的保留时间，在大多数情况下，子设置（subsetting）将删除校正后的保持时间。因此，一些情况下用校正后的保留时间代替原始保留时间可能是有用的。这可以通过<code>applyAdjustedRtime</code>完成。</p>\n<p>最后，我们评估了对齐对测试峰的影响。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">## Plot the raw data</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_19.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_raw<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>chr_raw<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Extract the chromatogram from the adjusted object</span></span><br><span class=\"line\">chr_adj <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_20.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_adj<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>chr_raw<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> peakType <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_19.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_19.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Example extracted ion chromatogram before (top) and after alignment (bottom)\"><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_20.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_20.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Example extracted ion chromatogram before (top) and after alignment (bottom)\"></p>\n<h2 id=\"Subset-based-alignment\"><a href=\"#Subset-based-alignment\" class=\"headerlink\" title=\"Subset-based alignment\"></a>Subset-based alignment</h2><p>在一些实验中，仅根据样本的子集进行比对可能会有所帮助，例如，如果QC样本定期注射（injected ），或者如果实验包含空白样本。xcms中的对齐方法允许估计样本子集（不包括空白样本的所有样本或在测量运行期间定期注入的质控样本）的保留时间漂移，并使用这些来调整整个数据集。</p>\n<p>参数<code>subset</code>（<code>PeakGroupsParam</code>或<code>ObiwarpParam</code>对象）可用于定义样本子集，整个数据集的对齐将基于该样本子集（例如，子集是QC样本的索引），参数<code>subsetAdjust</code>允许指定调整遗漏样本（left-out samples）的方法。目前有两个选项可用：</p>\n<ul>\n<li><code>subsetAdjust = &quot;previous&quot;</code>：根据先前子集样本（例如QC样本）的对齐结果调整非子集样本的保留时间。如果样本的顺序为A1、B1、B2、A2、B3、B4，A代表QC样本，B代表研究样本，则使用<code>subset = c(1, 4)</code>和<code>subsetAdjust = &quot;previous&quot;</code>将导致所有A样本彼此对齐，而非子集样本B1和B2将根据子集样本A1和B3以及B4对A2样本的对齐结果进行调整。</li>\n<li><code>subsetAdjust = &quot;average&quot;</code>：基于先前和后续子集样本的对齐结果的内插（interpolation）来调整非子集样本的保留时间。在上述示例中，B1将基于子集（QC）样本A1和A2之间的校正保留时间的平均值进行调整。由于在非子集样本B3和B4之后没有子集样本，因此将仅基于A2的对齐结果来校正这些样本。注意，加权平均值用于计算经校正的保留时间平均值，其使用非子集样本与子集样本的索引之差的倒数作为权重。因此，如果我们有类似A1、B1、B2、A2的设置，在校正非子集样本B1时，A1的校正保留时间将比A2的更大，从而使其校正保留时间更接近A1的保留时间，而不是A2的保留时间。请参见下面的示例。</li>\n</ul>\n<p>这两种情况都需要对对象内的样本进行有意义的&#x2F;正确的排序（例如按注入索引排序）。</p>\n<p>以下示例旨在说明这些对齐选项的效果。我们假设faahKO数据集中的样本1、4和7是质控样本（样本池）。因此，我们希望基于这些样本执行对齐，随后基于来自相邻子集（QC）样本的结果的插值来校正剩余的样本（2、3、5、6和8）的保留时间。在初始峰分组后，我们使用峰组法（peak groups method）进行校准，通过子集参数传递我们希望校准所基于的样本的索引，并指定<code>subsetAdjust = &quot;average&quot;</code>以根据相邻子集&#x2F;QC样本的校准结果的插值校正研究样本。</p>\n<p>注意，对于任何子集对齐，所有参数（如<code>minFraction</code>）都是相对于子集的，而不是整个实验！</p>\n<p>要重新执行对齐，我们可以首先使用<code>dropAdjustedRtime</code>函数删除以前的对齐结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> dropAdjustedRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Define the experimental layout</span></span><br><span class=\"line\">xdata<span class=\"operator\">$</span>sample_type <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;study&quot;</span></span><br><span class=\"line\">xdata<span class=\"operator\">$</span>sample_type<span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span> <span class=\"number\">7</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;QC&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来，我们必须进行初始对应分析，因为峰群对齐方法通过对齐之前识别的hook峰（存在于大多数&#x2F;所有样品中的色谱峰；下一节将介绍所用算法的详细信息）来校正保留时间。我们在这里使用默认设置，但强烈建议为每个数据集调整参数。<br><code>PeakDensityParam</code>必须定义样本组（即，将单个样本分配给实验中的样本组）。如果实验中没有样本组，则应将每个文件的样本组设置为单个值（例如<code>rep(1, length(fileNames(xdata))</code>）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Initial peak grouping. Use sample_type as grouping variable</span></span><br><span class=\"line\">pdp_subs <span class=\"operator\">&lt;-</span> PeakDensityParam<span class=\"punctuation\">(</span>sampleGroups <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_type<span class=\"punctuation\">,</span></span><br><span class=\"line\">                             minFraction <span class=\"operator\">=</span> <span class=\"number\">0.9</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> groupChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> pdp_subs<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Define subset-alignment options and perform the alignment</span></span><br><span class=\"line\">pgp_subs <span class=\"operator\">&lt;-</span> PeakGroupsParam<span class=\"punctuation\">(</span>minFraction <span class=\"operator\">=</span> <span class=\"number\">0.85</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                            subset <span class=\"operator\">=</span> which<span class=\"punctuation\">(</span>xdata<span class=\"operator\">$</span>sample_type <span class=\"operator\">==</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                            subsetAdjust <span class=\"operator\">=</span> <span class=\"string\">&quot;average&quot;</span><span class=\"punctuation\">,</span> span <span class=\"operator\">=</span> <span class=\"number\">0.4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> adjustRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> pgp_subs<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>下面，我们绘制了对齐结果，用绿色标记了作为子集一部分的样本，其他样本用灰色标注。这很好地显示了<code>subsetAdjust = &quot;average&quot;</code>的插值是如何工作的：样本2的保留时间是根据子集样本1和4的保留时间进行校正的，但是，给更接近的子集样本1赋予了更大的权重，这导致校正后的样本2的保持时间与样本1的保持时间更相似。另一方面，样本3得到校正，给第二子集样本（4）赋予更多权重。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clrs <span class=\"operator\">&lt;-</span> <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#00000040&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">8</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">clrs<span class=\"punctuation\">[</span>xdata<span class=\"operator\">$</span>sample_type <span class=\"operator\">==</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#00ce0080&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mar <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">,</span> <span class=\"number\">4.5</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_21.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> aggregationFun <span class=\"operator\">=</span> <span class=\"string\">&quot;sum&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> clrs<span class=\"punctuation\">,</span> peakType <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_22.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotAdjustedRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> clrs<span class=\"punctuation\">,</span> peakGroupsPch <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> peakGroupsCol <span class=\"operator\">=</span> <span class=\"string\">&quot;#00ce0040&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_21.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_21.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Subset-alignment results with option average\"><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_22.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_22.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Subset-alignment results with option average\"></p>\n<p><strong>图注</strong>：沿保留时间轴校正保留时间与原始保留时间之间的差异。对校准模型进行估算的样本显示为绿色，研究样本显示为灰色。</p>\n<p>选项<code>subsetAdjust = &quot;previous&quot;</code>基于单个子集样本（先前的）校正非子集样本的保留时间，这在大多数情况下导致非子集样本校正后的保留时间与用于校正的子集样本高度相似。</p>\n<h1 id=\"Correspondence\"><a href=\"#Correspondence\" class=\"headerlink\" title=\"Correspondence\"></a>Correspondence</h1><p>代谢组学预处理的最后一步是匹配样本之间（取决于设置，如果样本相邻，也在样本内）检测到的色谱峰的对应关系。在xcms中执行对应的方法是<code>groupChromPeaks</code>。我们将使用峰密度法[5]对色谱峰进行分组。该算法结合了色谱峰，这取决于沿着mz维度的小切片中沿着保留时间轴的峰密度。为了说明这一点，我们绘制了每个样品中具有多个色谱峰的mz切片的色谱图。我们使用0.4的<code>minFraction</code>参数值，因此每个样本组中至少有40%的样本中存在的色谱峰被分组为特征（feature）。样品组分配是使用<code>sampleGroups</code>参数指定的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Define the mz slice.</span></span><br><span class=\"line\">mzr <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">305.05</span><span class=\"punctuation\">,</span> <span class=\"number\">305.15</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Extract and plot the chromatograms</span></span><br><span class=\"line\">chr_mzr <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">## Define the parameters for the peak density method</span></span><br><span class=\"line\">pdp <span class=\"operator\">&lt;-</span> PeakDensityParam<span class=\"punctuation\">(</span>sampleGroups <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">,</span> minFraction <span class=\"operator\">=</span> <span class=\"number\">0.4</span><span class=\"punctuation\">,</span> bw <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_23.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotChromPeakDensity<span class=\"punctuation\">(</span>chr_mzr<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> pdp<span class=\"punctuation\">,</span> peakBg <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>chr_mzr<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> peakCol <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>chr_mzr<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> peakPch <span class=\"operator\">=</span> <span class=\"number\">16</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_23.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_23.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Example for peak density correspondence\"></p>\n<p><strong>图注</strong>：上图：具有多个色谱峰的mz切片的色谱图。下图：确定保留时间的色谱峰(x轴)和不同bw参数值的实验样品内的指数(y轴)。黑线表示峰密度估计值。峰分组（基于提供的设置）由灰色矩形表示。</p>\n<p>上图中的上部面板显示了每个样品的提取离子色谱图，突出显示了检测到的峰。中间和下部曲线显示了不同样品中每个检测到的峰的保留时间。黑色实线表示检测到的峰沿保留时间的密度分布。组合成特征（峰值组）的峰值用灰色矩形表示。这种类型的可视化非常适合在将示例m&#x2F;z切片应用于完整数据集之前测试它们的对应设置。</p>\n<p>下面，我们将基于定义设置（defined settings）对整个数据集进行对应分析。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Perform the correspondence</span></span><br><span class=\"line\">pdp <span class=\"operator\">&lt;-</span> PeakDensityParam<span class=\"punctuation\">(</span>sampleGroups <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">,</span> minFraction <span class=\"operator\">=</span> <span class=\"number\">0.4</span><span class=\"punctuation\">,</span> bw <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> groupChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> pdp<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>基于xcms的预处理结果可以通过<code>quantify</code>法从<em>SummarizedExperiment</em>包中汇总为<code>SummarizedExperiment</code>对象。该对象将包含作为分析矩阵的特征丰度、作为<code>rowData</code>（即行注释）的特征定义（其m&#x2F;z、保留时间和其他元数据）和作为<code>colData</code>（即列注释）的样本&#x2F;表型信息。所有处理历史记录都将放入对象的元数据中（metadata）。然后，该对象可以用于任何进一步的（与xcms无关的）处理和分析。</p>\n<p>下面我们使用<code>quantify</code>来生成当前分析的结果对象。参数值和任何其他附加参数将传递给<code>featureValues</code>方法，该方法在内部用于创建特征丰度矩阵。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res <span class=\"operator\">&lt;-</span> quantify<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"string\">&quot;into&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>样品注释可以通过<code>colData</code>方法访问。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">colData<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## DataFrame with 8 rows and 3 columns</span><br><span class=\"line\">##          sample_name sample_group sample_type</span><br><span class=\"line\">##          &lt;character&gt;  &lt;character&gt; &lt;character&gt;</span><br><span class=\"line\">## ko15.CDF        ko15           KO          QC</span><br><span class=\"line\">## ko16.CDF        ko16           KO       study</span><br><span class=\"line\">## ko21.CDF        ko21           KO       study</span><br><span class=\"line\">## ko22.CDF        ko22           KO          QC</span><br><span class=\"line\">## wt15.CDF        wt15           WT       study</span><br><span class=\"line\">## wt16.CDF        wt16           WT       study</span><br><span class=\"line\">## wt21.CDF        wt21           WT          QC</span><br><span class=\"line\">## wt22.CDF        wt22           WT       study</span><br></pre></td></tr></table></figure>\n\n<p>通过<code>rowData</code>注释特征：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rowData<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DataFrame with 357 rows and 11 columns</span><br><span class=\"line\">          mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks</span><br><span class=\"line\">      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;</span><br><span class=\"line\">FT001     200.1     200.1     200.1   2902.25   2882.24   2922.27         2</span><br><span class=\"line\">FT002     205.0     205.0     205.0   2789.40   2782.36   2795.94         8</span><br><span class=\"line\">FT003     206.0     206.0     206.0   2788.64   2780.79   2793.78         7</span><br><span class=\"line\">FT004     207.1     207.1     207.1   2718.25   2713.28   2726.63         7</span><br><span class=\"line\">FT005     219.1     219.1     219.1   2518.60   2517.35   2521.09         3</span><br><span class=\"line\">...         ...       ...       ...       ...       ...       ...       ...</span><br><span class=\"line\">FT353    595.25     595.2     595.3   3010.39   2992.58   3014.38         6</span><br><span class=\"line\">FT354    596.20     596.2     596.2   2997.60   2992.58   3002.61         2</span><br><span class=\"line\">FT355    596.30     596.3     596.3   3818.98   3811.68   3835.78         4</span><br><span class=\"line\">FT356    597.40     597.4     597.4   3821.10   3817.96   3825.14         3</span><br><span class=\"line\">FT357    599.30     599.3     599.3   4070.45   4042.10   4123.52         3</span><br><span class=\"line\">             KO        WT            peakidx  ms_level</span><br><span class=\"line\">      &lt;numeric&gt; &lt;numeric&gt;             &lt;list&gt; &lt;integer&gt;</span><br><span class=\"line\">FT001         2         0           463,1180         1</span><br><span class=\"line\">FT002         4         4     47,448,960,...         1</span><br><span class=\"line\">FT003         3         4   32, 435,1164,...         1</span><br><span class=\"line\">FT004         4         3     19,425,943,...         1</span><br><span class=\"line\">FT005         1         2     1140,1379,2382         1</span><br><span class=\"line\">...         ...       ...                ...       ...</span><br><span class=\"line\">FT353         2         3   67, 529,1466,...         1</span><br><span class=\"line\">FT354         0         2          1457,2452         1</span><br><span class=\"line\">FT355         2         2  332,1110,2071,...         1</span><br><span class=\"line\">FT356         1         2      838,2355,2680         1</span><br><span class=\"line\">FT357         1         2      375,1757,2137         1</span><br></pre></td></tr></table></figure>\n\n<p>特征丰度可以通过<code>assay</code>方法获得。还要注意，<code>SummarizedExperiment</code>支持多个这样的分析矩阵。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class=\"line\">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class=\"line\">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class=\"line\">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001         NA</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<p>此外，还可以使用<code>featureDefinitions</code>和<code>featureValues</code>方法分别从对应分析中提取结果，前者返回带有特征定义的数据框(即mz和rt范围，在列peakidx中为每个特征的<code>chromPeaks</code>矩阵中的色谱峰指数)，后者为特征丰度。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract the feature definitions</span></span><br><span class=\"line\">featureDefinitions<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DataFrame with 357 rows and 11 columns</span><br><span class=\"line\">          mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks</span><br><span class=\"line\">      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;</span><br><span class=\"line\">FT001     200.1     200.1     200.1   2902.25   2882.24   2922.27         2</span><br><span class=\"line\">FT002     205.0     205.0     205.0   2789.40   2782.36   2795.94         8</span><br><span class=\"line\">FT003     206.0     206.0     206.0   2788.64   2780.79   2793.78         7</span><br><span class=\"line\">FT004     207.1     207.1     207.1   2718.25   2713.28   2726.63         7</span><br><span class=\"line\">FT005     219.1     219.1     219.1   2518.60   2517.35   2521.09         3</span><br><span class=\"line\">...         ...       ...       ...       ...       ...       ...       ...</span><br><span class=\"line\">FT353    595.25     595.2     595.3   3010.39   2992.58   3014.38         6</span><br><span class=\"line\">FT354    596.20     596.2     596.2   2997.60   2992.58   3002.61         2</span><br><span class=\"line\">FT355    596.30     596.3     596.3   3818.98   3811.68   3835.78         4</span><br><span class=\"line\">FT356    597.40     597.4     597.4   3821.10   3817.96   3825.14         3</span><br><span class=\"line\">FT357    599.30     599.3     599.3   4070.45   4042.10   4123.52         3</span><br><span class=\"line\">             KO        WT            peakidx  ms_level</span><br><span class=\"line\">      &lt;numeric&gt; &lt;numeric&gt;             &lt;list&gt; &lt;integer&gt;</span><br><span class=\"line\">FT001         2         0           463,1180         1</span><br><span class=\"line\">FT002         4         4     47,448,960,...         1</span><br><span class=\"line\">FT003         3         4   32, 435,1164,...         1</span><br><span class=\"line\">FT004         4         3     19,425,943,...         1</span><br><span class=\"line\">FT005         1         2     1140,1379,2382         1</span><br><span class=\"line\">...         ...       ...                ...       ...</span><br><span class=\"line\">FT353         2         3   67, 529,1466,...         1</span><br><span class=\"line\">FT354         0         2          1457,2452         1</span><br><span class=\"line\">FT355         2         2  332,1110,2071,...         1</span><br><span class=\"line\">FT356         1         2      838,2355,2680         1</span><br><span class=\"line\">FT357         1         2      375,1757,2137         1</span><br></pre></td></tr></table></figure>\n\n<p><code>featureValues</code>方法返回一个矩阵，其中行是特征，列是样本。这个矩阵的内容可以使用<code>value</code>参数定义。默认值<code>value = &quot;into&quot;</code>返回一个矩阵，其中包含样本中某个特征对应的峰的整合信号。<code>chromPeaks</code>矩阵的任何列名都可以传递给参数<code>value</code>。下面我们提取每个特征&#x2F;样本的整合峰值强度。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract the into column for each feature.</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"string\">&quot;into&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class=\"line\">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class=\"line\">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class=\"line\">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001         NA</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<p>该特征矩阵包含某些样品在特征m&#x2F;z-rt区域未检测到色谱峰（NA值）。虽然在许多情况下，在相应的区域可能确实没有峰信号，但也可能有信号，但峰检测算法未能检测到色谱峰(例如，因为信号太低或噪声太大)。xcms提供<code>fillChromPeaks</code>方法来填充原始文件中这些缺失值的强度数据。填充的峰被添加到chromPeaks矩阵中，并在<code>chromPeakData</code>数据框的<code>“is_filled”</code>列中用<code>TRUE</code>表示。下面我们执行这样的填充。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> fillChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> ChromPeakAreaParam<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">       ko15.CDF   ko16.CDF   ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001  135315.2  506848.88  111783.48  169955.6  210166.7  141768.0  233086.7</span><br><span class=\"line\">FT002 1924712.0 1757150.96 1383416.72 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.67  164404.50  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.66  343897.76  208002.8  364609.8  360908.9  225332.1</span><br><span class=\"line\">FT005  161425.0   37819.63   82574.72  107348.5  223951.8  135617.6  191928.5</span><br><span class=\"line\">FT006  286221.4  286834.04  164008.97  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001  142142.23</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<p>对于样本中没有检测到峰的特征，该方法提取特征的mz-rt区域中的所有强度，对信号进行整合（integrates），并将填充的峰添加到<code>chromPeaks</code>矩阵中。如果特征的mz-rt区域没有测量&#x2F;可用信号，则不添加峰。对于这些，即使在填写了缺失的峰数据后，也会在<code>featureValues</code>矩阵中报告NA。</p>\n<p>可以使用不同的选项来定义特征的mz-rt区域。使用上面使用的<code>ChromPeakAreaParam()</code>参数对象，使用其所有（检测到的）色谱峰的m&#x2F;z和rt范围定义特征区域：区域中低的m&#x2F;z值定义为特征所有峰的“mzmin”值的下四分位（25%分位数），高m&#x2F;z值为“mzmax”值的上四分位数（75%分位数），低rt值作为“rtmin”值的下四分位（25%分位数），高rt值为“rtmax”值的上四分位数（75%分位数）。这确保了信号是从特定特征区域集成的。</p>\n<p>或者，可以在<code>fillChromPeaks</code>调用中使用<code>FillChromPpeaksParam</code>参数对象，这类似于初始（old）xcms实现的方法。</p>\n<p>下面我们比较填写缺失值前后缺失值的数量。我们可以使用<code>featureValues</code>方法的<code>filled</code>参数来定义是否也应该返回填充的峰值（filled-in peak values）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Missing values before filling in peaks</span></span><br><span class=\"line\">apply<span class=\"punctuation\">(</span>featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> filled <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> MARGIN <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> FUN <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## ko15.CDF ko16.CDF ko21.CDF ko22.CDF wt15.CDF wt16.CDF wt21.CDF wt22.CDF</span><br><span class=\"line\">##       91       93      168      154       95      119      167      123</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Missing values after filling in peaks</span></span><br><span class=\"line\">apply<span class=\"punctuation\">(</span>featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> MARGIN <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> FUN <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## ko15.CDF ko16.CDF ko21.CDF ko22.CDF wt15.CDF wt16.CDF wt21.CDF wt22.CDF</span><br><span class=\"line\">##        5        4        5        5        4        7        6        2</span><br></pre></td></tr></table></figure>\n\n<p>接下来，我们使用<code>featureSummary</code>函数获取每个特征的一般摘要，其中包括找到峰的样本数量或为特征分配了多个峰的样本数。同时指定样本组可以分解每个样本组的汇总统计信息。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>featureSummary<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      count  perc multi_count multi_perc       rsd KO_count KO_perc</span><br><span class=\"line\">FT001     2  25.0           0          0 0.7039537        2      50</span><br><span class=\"line\">FT002     8 100.0           0          0 0.1936518        4     100</span><br><span class=\"line\">FT003     7  87.5           0          0 0.1717662        3      75</span><br><span class=\"line\">FT004     7  87.5           0          0 0.2609145        4     100</span><br><span class=\"line\">FT005     3  37.5           0          0 0.5385767        1      25</span><br><span class=\"line\">FT006     7  87.5           0          0 0.3016973        3      75</span><br><span class=\"line\">      KO_multi_count KO_multi_perc    KO_rsd WT_count WT_perc WT_multi_count</span><br><span class=\"line\">FT001              0             0 0.7039537        0       0              0</span><br><span class=\"line\">FT002              0             0 0.2178920        4     100              0</span><br><span class=\"line\">FT003              0             0 0.2501505        4     100              0</span><br><span class=\"line\">FT004              0             0 0.2957873        3      75              0</span><br><span class=\"line\">FT005              0             0        NA        2      50              0</span><br><span class=\"line\">FT006              0             0 0.3765933        4     100              0</span><br><span class=\"line\">      WT_multi_perc    WT_rsd</span><br><span class=\"line\">FT001             0        NA</span><br><span class=\"line\">FT002             0 0.1918936</span><br><span class=\"line\">FT003             0 0.1327983</span><br><span class=\"line\">FT004             0 0.2575039</span><br><span class=\"line\">FT005             0 0.6375539</span><br><span class=\"line\">FT006             0 0.1641781</span><br></pre></td></tr></table></figure>\n\n<p>我们可以将特征值矩阵与缺失峰值的填充数据一起添加到我们的<code>SummarizedExperiment</code>对象res中，作为附加矩阵（assay）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assays<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span><span class=\"operator\">$</span>raw_filled <span class=\"operator\">&lt;-</span> featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> filled <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>我们现在有两个可用的矩阵（assays），一个具有检测值的矩阵，一个包含检测值和填充值的矩阵，每个都可以通过其名称访问。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assayNames<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;raw&quot;        &quot;raw_filled&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>res<span class=\"punctuation\">,</span> <span class=\"string\">&quot;raw&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class=\"line\">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class=\"line\">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class=\"line\">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001         NA</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>res<span class=\"punctuation\">,</span> <span class=\"string\">&quot;raw_filled&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       ko15.CDF   ko16.CDF   ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001  135315.2  506848.88  111783.48  169955.6  210166.7  141768.0  233086.7</span><br><span class=\"line\">FT002 1924712.0 1757150.96 1383416.72 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.67  164404.50  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.66  343897.76  208002.8  364609.8  360908.9  225332.1</span><br><span class=\"line\">FT005  161425.0   37819.63   82574.72  107348.5  223951.8  135617.6  191928.5</span><br><span class=\"line\">FT006  286221.4  286834.04  164008.97  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001  142142.23</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<p>应始终通过检查提取的离子色谱图（例如已知化合物、内标或一般识别特征）来评估峰检测、比对（alignment）和对应（correspondence）的性能。<code>featureChromatogram</code>函数允许提取<code>featureDefinitions</code>中每个特征的色谱图。返回的<code>MCchromatograms</code>对象包含每个特征（每行包含一个特征的数据）和样本（每列代表一个样本的数据）的离子色谱图。下面我们提取前4个特征的色谱图。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feature_chroms <span class=\"operator\">&lt;-</span> featureChromatograms<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> features <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">feature_chroms</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## XChromatograms with 4 rows and 8 columns</span><br><span class=\"line\">##                    1               2               3               4</span><br><span class=\"line\">##      &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt;</span><br><span class=\"line\">## [1,]        peaks: 0        peaks: 1        peaks: 0        peaks: 1</span><br><span class=\"line\">## [2,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class=\"line\">## [3,]        peaks: 1        peaks: 1        peaks: 0        peaks: 1</span><br><span class=\"line\">## [4,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class=\"line\">##                    5               6               7               8</span><br><span class=\"line\">##      &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt;</span><br><span class=\"line\">## [1,]        peaks: 0        peaks: 0        peaks: 0        peaks: 0</span><br><span class=\"line\">## [2,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class=\"line\">## [3,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class=\"line\">## [4,]        peaks: 1        peaks: 1        peaks: 0        peaks: 1</span><br><span class=\"line\">## phenoData with 3 variables</span><br><span class=\"line\">## featureData with 5 variables</span><br><span class=\"line\">## - - - xcms preprocessing - - -</span><br><span class=\"line\">## Chromatographic peak detection:</span><br><span class=\"line\">##  method: centWave</span><br><span class=\"line\">## Correspondence:</span><br><span class=\"line\">##  method: chromatographic peak density</span><br><span class=\"line\">##  4 feature(s) identified.</span><br></pre></td></tr></table></figure>\n<p>绘制提取的离子色谱图。我们再次使用每个鉴定峰的组颜色来填充该区域。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_24.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>feature_chroms<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">,</span> peakBg <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>feature_chroms<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_24.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_24.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Extracted ion chromatograms for features 1 to 4\"><br> 为了访问第二个特征的EIC，我们可以简单地将<code>feature_chros</code>对象取子集。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> eic_2 <span class=\"operator\">&lt;-</span> feature_chroms<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br><span class=\"line\">chromPeaks<span class=\"punctuation\">(</span>eic_2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        mz mzmin mzmax       rt    rtmin    rtmax    into    intb  maxo sn</span><br><span class=\"line\">CP0055 205   205   205 2791.599 2771.048 2815.323 1924712 1850331 84280 64</span><br><span class=\"line\">CP0502 205   205   205 2795.355 2773.257 2820.612 1757151 1711473 68384 69</span><br><span class=\"line\">CP1049 205   205   205 2795.936 2773.877 2821.143 1383417 1334570 47384 54</span><br><span class=\"line\">CP1277 205   205   205 2788.642 2768.195 2812.229 1180288 1126958 48336 32</span><br><span class=\"line\">CP1567 205   205   205 2782.355 2761.949 2805.895 2129885 2054677 93312 44</span><br><span class=\"line\">CP2005 205   205   205 2787.051 2766.690 2812.111 1634342 1566379 67984 53</span><br><span class=\"line\">CP2392 205   205   205 2790.157 2763.587 2821.427 1623589 1531573 49208 28</span><br><span class=\"line\">CP2649 205   205   205 2787.032 2766.714 2812.043 1354005 1299188 55712 35</span><br><span class=\"line\">       sample row column</span><br><span class=\"line\">CP0055      1   1      1</span><br><span class=\"line\">CP0502      2   1      2</span><br><span class=\"line\">CP1049      3   1      3</span><br><span class=\"line\">CP1277      4   1      4</span><br><span class=\"line\">CP1567      5   1      5</span><br><span class=\"line\">CP2005      6   1      6</span><br><span class=\"line\">CP2392      7   1      7</span><br><span class=\"line\">CP2649      8   1      8</span><br></pre></td></tr></table></figure>\n\n<p>最后，我们进行了主成分分析，以评估本实验中样本的分组。注意，我们没有执行任何数据标准化，因此分组可能（也将）受到技术偏见的影响。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract the features and log2 transform them</span></span><br><span class=\"line\">ft_ints <span class=\"operator\">&lt;-</span> log2<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>res<span class=\"punctuation\">,</span> <span class=\"string\">&quot;raw_filled&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Perform the PCA omitting all features with an NA in any of the</span></span><br><span class=\"line\"><span class=\"comment\">## samples. Also, the intensities are mean centered.</span></span><br><span class=\"line\">pc <span class=\"operator\">&lt;-</span> prcomp<span class=\"punctuation\">(</span>t<span class=\"punctuation\">(</span>na.omit<span class=\"punctuation\">(</span>ft_ints<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> center <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Plot the PCA</span></span><br><span class=\"line\">cols <span class=\"operator\">&lt;-</span> group_colors<span class=\"punctuation\">[</span>xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span></span><br><span class=\"line\">pcSummary <span class=\"operator\">&lt;-</span> summary<span class=\"punctuation\">(</span>pc<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_25.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>pc<span class=\"operator\">$</span>x<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> pc<span class=\"operator\">$</span>x<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> pch <span class=\"operator\">=</span> <span class=\"number\">21</span><span class=\"punctuation\">,</span> main <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span> xlab <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;PC1: &quot;</span><span class=\"punctuation\">,</span> format<span class=\"punctuation\">(</span>pcSummary<span class=\"operator\">$</span>importance<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span> <span class=\"operator\">*</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> digits <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot; % variance&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> ylab <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;PC2: &quot;</span><span class=\"punctuation\">,</span> format<span class=\"punctuation\">(</span>pcSummary<span class=\"operator\">$</span>importance<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">]</span> <span class=\"operator\">*</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> digits <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot; % variance&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> <span class=\"string\">&quot;darkgrey&quot;</span><span class=\"punctuation\">,</span> bg <span class=\"operator\">=</span> cols<span class=\"punctuation\">,</span> cex <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">grid<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">text<span class=\"punctuation\">(</span>pc<span class=\"operator\">$</span>x<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> pc<span class=\"operator\">$</span>x<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> labels <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_name<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> <span class=\"string\">&quot;darkgrey&quot;</span><span class=\"punctuation\">,</span> pos <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span> cex <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_25.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_25.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"PCA for the faahKO data set, un-normalized intensities\"></p>\n<p> 我们可以在PC2上看到KO和WT样品之间的预期分离。在PC1上样本根据其ID进行分离，ID&lt;&#x3D;18的样本与ID&gt;18的样本被分开。这种分离可能是由于技术偏差（例如，在不同的天&#x2F;周进行的测量）或由于所分析小鼠的生物学特性（性别、年龄、产仔等）造成的。</p>\n<h1 id=\"Further-data-processing-and-analysis\"><a href=\"#Further-data-processing-and-analysis\" class=\"headerlink\" title=\"Further data processing and analysis\"></a>Further data processing and analysis</h1><p>标准化特征的信号强度是必需的，但目前xcms还不支持（在不久的将来可能会添加一些方法）。建议将<code>quantify</code>方法返回的<code>SummarizedExperiment</code>用于任何进一步的数据处理，因为这种类型的对象在同一对象中存储特征定义（feature definitions）、样本注释以及特征丰度。为了识别例如具有显著不同强度&#x2F;丰度的特征，建议使用其他R包中提供的功能，例如Bioconductor的<code>limma</code>包。为了支持依赖于旧<code>xcmsSet</code>结果对象的其他包，可以使用<code>xset &lt;- as(x, &quot;xcmsSet&quot;)</code>将新的<code>XCMSnExp</code>对象强制转换为<code>xcmsSet</code>对象，其中x是<code>XCMSnExp</code>对象。</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"http://127.0.0.1:24676/library/xcms/doc/xcms.html\">LCMS data preprocessing and analysis with xcms</a></li>\n</ul>\n<p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，转载请注明出处请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"代谢组","path":"api/tags/代谢组.json"}]},{"title":"利用GTDB-TK对细菌和古菌基因组进行物种分类","slug":"利用GTDB-TK对细菌和古菌基因组进行物种分类","date":"2021-12-10T03:14:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/利用GTDB-TK对细菌和古菌基因组进行物种分类.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>GTDB-Tk 是一个软件工具包，用于根据<ruby>基因组数据库分类 GTDB<rt>Genome Database Taxonomy GTDB</rt></ruby> 为细菌和古菌基因组<ruby>分配客观分类学分类<rt>assigning objective taxonomic classifications</rt></ruby>。可以用于宏基因组组装基因组 (MAG)、单菌基因组和单细胞基因组。</p>\n<h1 id=\"安装GTDB-Tk\"><a href=\"#安装GTDB-Tk\" class=\"headerlink\" title=\"安装GTDB-Tk\"></a>安装GTDB-Tk</h1><ul>\n<li><p>通过conda安装主程序</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># latest version</span></span><br><span class=\"line\">conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># specific version (replace 2.3.0 with the version you wish to install, recommended)</span></span><br><span class=\"line\">conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk=2.3.0</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载GTDB-Tk数据库 (~47 G)</p>\n<p>最新版本的数据库为R214，需要 &gt;&#x3D;2.1.0 版本的GTDB-Tk。</p>\n<ul>\n<li><p>自动 (非常慢)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">download-db.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>手动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> \t<span class=\"comment\"># 找到下载脚本的路径并打开，从中找到数据库的链接</span></span><br><span class=\"line\"><span class=\"built_in\">which</span> download-db.sh</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 进入数据库默认路径</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/miniconda3/envs/gtdbtk/share/gtdbtk-2.3.0/db/</span><br><span class=\"line\">\t  </span><br><span class=\"line\">   <span class=\"comment\"># 用wget下载 (非常慢)，推荐在Windows下用其他软件下载，再上传服务器</span></span><br><span class=\"line\"><span class=\"built_in\">nohup</span> wget -c https://data.gtdb.ecogenomic.org/releases/release214/214.0/auxillary_files/gtdbtk_r214_data.tar.gz --no-check-certificate &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf gtdbtk_r214_data.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> release214/* ./</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也可自定义数据库的存放位置</span></span><br><span class=\"line\">编辑`~/miniconda3/envs/gtdbtk/etc/conda/activate.d/gtdbtk.sh`，将`<span class=\"built_in\">export</span> GTDBTK_DATA_PATH=`后面的内容改成数据库所在的路径。</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"运行软件\"><a href=\"#运行软件\" class=\"headerlink\" title=\"运行软件\"></a>运行软件</h1><p>:::info<br>注意：pplacer requires ~215 GB of RAM to fully load the bacterial tree into memory. 因此要么在服务器上运行，要么设置足够大的swap分区方可在PC中运行。<br>:::</p>\n<h2 id=\"classify-wf\"><a href=\"#classify-wf\" class=\"headerlink\" title=\"classify_wf\"></a>classify_wf</h2><p>:::default<br>可以通过<code>classify_wf</code>命令完成整个工作流程。<br>:::</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># v2.3.0增加了两个参数（二选一）：--skip_ani_screen，--mash_db，前者无参数值，后者指定MASH参考数据库 (.msh)的输出或读取路径</span></span><br><span class=\"line\">gtdbtk classify_wf --genome_dir &lt;my_genomes&gt; --out_dir &lt;output_dir&gt; --extension fna --cpus 20 --force --skip_ani_screen</span><br></pre></td></tr></table></figure>\n\n<p>+++primary 参数解析</p>\n<ul>\n<li><p>--genome_dir<br>directory containing genome files in FASTA format</p>\n</li>\n<li><p>--batchfile<br>path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p>\n</li>\n<li><p>--out_dir<br>directory to output files</p>\n</li>\n<li><p>--skip_ani_screen     Skip the ani_screening step to classify genomes using mash and FastANI (default: False)</p>\n</li>\n<li><p>--mash_db MASH_DB     path to save&#x2F;read (if exists) the Mash reference sketch database (.msh)</p>\n</li>\n<li><p>-x, --extension<br>extension of files to process, gz &#x3D; gzipped (Default: fna)</p>\n</li>\n<li><p>--min_perc_aa<br>exclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (Default: 10)</p>\n</li>\n<li><p>--prefix<br>prefix for all output files (Default: gtdbtk)</p>\n</li>\n<li><p>--cpus<br>number of CPUs to use (Default: 1)</p>\n</li>\n<li><p>--pplacer_cpus<br>use pplacer_cpus during placement (default: cpus)</p>\n</li>\n<li><p>--force<br>continue processing if an error occurs on a single genome</p>\n</li>\n<li><p>--scratch_dir<br>Reduce pplacer memory usage by writing to disk (slower).</p>\n</li>\n<li><p>--min_af<br>minimum alignment fraction to consider closest genome (Default: 0.65)</p>\n</li>\n<li><p>--tmpdir<br>specify alternative directory for temporary files （Default: &#x2F;tmp</p>\n</li>\n<li><p>--debug<br>create intermediate files for debugging purposes<br>+++</p>\n</li>\n</ul>\n<p>:::default<br>但下面我们演示分步运行。在处理大型管道时，单独运行这些步骤有时会很有用。<br>:::</p>\n<h2 id=\"Step-1-准备输入文件\"><a href=\"#Step-1-准备输入文件\" class=\"headerlink\" title=\"Step 1 准备输入文件\"></a>Step 1 准备输入文件</h2><p>以下两个基因组作为示例文件：* Genome A: <code>GCF_003947435.1</code> [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> &#x2F; <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCF_003947435.1/\">NCBI</a>] * Genome B: <code>GCA_002011125.1</code> [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> &#x2F; <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCA_002011125.1/\">NCBI</a>]。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create the directory.</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /tmp/gtdbtk &amp;&amp; <span class=\"built_in\">cd</span> /tmp/gtdbtk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Obtain the genomes.</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /tmp/gtdbtk/genomes</span><br><span class=\"line\">wget -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/003/947/435/GCF_003947435.1_ASM394743v1/GCF_003947435.1_ASM394743v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_a.fna.gz</span><br><span class=\"line\"></span><br><span class=\"line\">wget -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/002/011/125/GCA_002011125.1_ASM201112v1/GCA_002011125.1_ASM201112v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_b.fna.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Step-2-Gene-calling-identify\"><a href=\"#Step-2-Gene-calling-identify\" class=\"headerlink\" title=\"Step 2 Gene calling (identify)\"></a>Step 2 Gene calling (identify)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gtdbtk identify --genome_dir /tmp/gtdbtk/genomes --out_dir /tmp/gtdbtk/identify --extension gz --cpus 20</span><br></pre></td></tr></table></figure>\n\n<p>+++success Results</p>\n<p>获得的基因和<ruby>标记<rt>marker</rt></ruby>信息可以在每个<ruby>基因组反应中间文件目录<rt>genomes respeective intermediate files directory</rt></ruby>下找到，如下所示。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> /tmp/gtdbtk/identify/identify/intermediate_results/marker_genes/genome_a.fna/</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>pfam<span class=\"built_in\">_</span>tophit.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.gff.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>pfam<span class=\"built_in\">_</span>tophit.tsv.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam.out</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>pfam.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam.out.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>pfam.tsv.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam<span class=\"built_in\">_</span>tophit.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.faa</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam<span class=\"built_in\">_</span>tophit.tsv.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.faa.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.fna</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam.tsv.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.fna.sha256</span><br><span class=\"line\">prodigal<span class=\"built_in\">_</span>translation<span class=\"built_in\">_</span>table.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.gff</span><br><span class=\"line\">prodigal<span class=\"built_in\">_</span>translation<span class=\"built_in\">_</span>table.tsv.sha256</span><br></pre></td></tr></table></figure>\n<p>:::default<br>大部分情况下只需要读取摘要文件，其中详细说明了从archaeal 122或bacterial 120<ruby>标记集<rt>marker set</rt></ruby>识别的标记。<br>:::</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /tmp/gtdbtk/identify/gtdbtk.ar122.markers_summary.tsv</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name    number<span class=\"built_in\">_</span>unique<span class=\"built_in\">_</span>genes     number<span class=\"built_in\">_</span>multiple<span class=\"built_in\">_</span>genes   number<span class=\"built_in\">_</span>multiple<span class=\"built_in\">_</span>unique<span class=\"built_in\">_</span>genes    number<span class=\"built_in\">_</span>missing<span class=\"built_in\">_</span>genes    list<span class=\"built_in\">_</span>unique<span class=\"built_in\">_</span>genes       list<span class=\"built_in\">_</span>multiple<span class=\"built_in\">_</span>genes     list<span class=\"built_in\">_</span>multiple<span class=\"built_in\">_</span>unique<span class=\"built_in\">_</span>genes      list<span class=\"built_in\">_</span>missing<span class=\"built_in\">_</span>genes</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna    109     3       0       10      PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,PF13685.1,TIGR00021,TIGR00037,TIGR00042,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00549,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01213,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02390,TIGR02651,TIGR03626,TIGR03627,TIGR03628,TIGR03636,TIGR03653,TIGR03665,TIGR03671,TIGR03672,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684    PF01496.14,TIGR00458,TIGR00658          PF01866.12,TIGR00064,TIGR00373,TIGR00522,TIGR02338,TIGR02389,TIGR03629,TIGR03670,TIGR03673,TIGR03722</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>b.fna    118     2       0       2       PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01866.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,TIGR00021,TIGR00037,TIGR00042,TIGR00064,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00373,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00458,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00522,TIGR00549,TIGR00658,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02338,TIGR02389,TIGR02390,TIGR02651,TIGR03626,TIGR03628,TIGR03629,TIGR03636,TIGR03653,TIGR03665,TIGR03670,TIGR03671,TIGR03672,TIGR03673,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684,TIGR03722 PF01496.14,PF13685.1            TIGR01213,TIGR03627</span><br></pre></td></tr></table></figure>\n<p>+++</p>\n<h2 id=\"Step-3-Aligning-genomes-align\"><a href=\"#Step-3-Aligning-genomes-align\" class=\"headerlink\" title=\"Step 3 Aligning genomes (align)\"></a>Step 3 Aligning genomes (align)</h2><p>该步骤将对齐所有已识别的标记，确定最可能的<ruby>域<rt>domain </rt></ruby>并输出串联的MSA。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gtdbtk align --identify_dir /tmp/gtdbtk/identify --out_dir /tmp/gtdbtk/align --cpus 20</span><br></pre></td></tr></table></figure>\n\n<p>+++success Results</p>\n<p>:::warning<br>要注意输出，如果一个基因组识别出的标记数量较少，那么在这一步，它将被排除在分析之外。如果出现这种情况，将出现警告。<br>:::</p>\n<p>根据domain的不同，<code>ar122</code>或<code>bac120</code>的前缀文件将出现，其中包含用户基因组和GTDB基因组的MSA，或仅包含用户基因组（<code>gtdbtk.ar122.MSA.fasta</code>和<code>gtdbtk.ar122.user_MSA.fasta</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> /tmp/gtdbtk/align</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">align/</span><br><span class=\"line\">gtdbtk.ar122.user<span class=\"built_in\">_</span>msa.fasta</span><br><span class=\"line\">identify/</span><br><span class=\"line\">gtdbtk.ar122.filtered.tsv</span><br><span class=\"line\">gtdbtk.log</span><br><span class=\"line\">gtdbtk.ar122.msa.fasta</span><br><span class=\"line\">gtdbtk.warnings.log</span><br></pre></td></tr></table></figure>\n<p>+++</p>\n<h2 id=\"Step-4-基因组分类-classify\"><a href=\"#Step-4-基因组分类-classify\" class=\"headerlink\" title=\"Step 4 基因组分类 (classify)\"></a>Step 4 基因组分类 (classify)</h2><p>将用户的基因组放置于参考树上，然后决定其最为可能的分类。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gtdbtk classify --genome_dir /tmp/gtdbtk/genomes --align_dir /tmp/gtdbtk/align --out_dir /tmp/gtdbtk/classify -x gz --cpus 20</span><br></pre></td></tr></table></figure>\n\n<p>+++success Results</p>\n<p>两个主要的输出文件包括<ruby>总结文件<rt>summary file</rt></ruby>和包含基因组的参考树 (<code>gtdbtk.ar122.summary.tsv</code>和<code>gtdbtk.ar122.classify.tree</code>)。基因组的分类信息呈现于总结文件中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> /tmp/gtdbtk/classify</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classify/</span><br><span class=\"line\">gtdbtk.ar122.summary.tsv</span><br><span class=\"line\">gtdbtk.warnings.log</span><br><span class=\"line\">gtdbtk.ar122.classify.tree</span><br><span class=\"line\">gtdbtk.log</span><br></pre></td></tr></table></figure>\n<p>+++</p>\n<h2 id=\"错误信息处理\"><a href=\"#错误信息处理\" class=\"headerlink\" title=\"错误信息处理\"></a>错误信息处理</h2><ul>\n<li><p>OpenBLAS blas_thread_init: pthread_create failed for thread 109 of 128: Resource temporarily unavailable</p>\n<ul>\n<li>解决方案：少调用一些线程就ok了。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://ecogenomics.github.io/GTDBTk\">GTBD-Tk Documentation</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"利用PGCGAP根据ids提取序列信息","slug":"利用PGCGAP根据ids提取序列信息","date":"2022-04-15T13:57:11.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/利用PGCGAP根据ids提取序列信息.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h1><p>假设有一个fasta格式的序列文件<code>SRR9620252.faa</code>，我们想要提取其中的一些序列到一个新的文件中，我们拥有这些序列的id （假设这些id存放在文件<code>ids.txt</code>中）。常规操作的话，可以复制id，在fasta文件中打开搜索，粘贴id，点击查找，复制找到的序列，粘贴到新的文件中（假设为<code>Seqout.fasta</code>）。假如你只找一条序列，1 min之内可以完成，假如你要找100条序列，1 h可能没了。而用PGCGAP可以在1 min之内完成，剩下的59 min可以喝喝茶。</p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><h2 id=\"PGCGAP安装\"><a href=\"#PGCGAP安装\" class=\"headerlink\" title=\"PGCGAP安装\"></a>PGCGAP安装</h2><p>参考<a href=\"https://liaochenlanruo.fun/pgcgap/\">官网</a>，需要版本v1.0.35及以上。</p>\n<h2 id=\"开始提取\"><a href=\"#开始提取\" class=\"headerlink\" title=\"开始提取\"></a>开始提取</h2><p>在终端里打开PGCGAP的conda安装环境，并运行如下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ids.txt中含有要提取序列的id，可以是一列或者多列，如果为多列，需要用空格或者制表符来分隔列与列，id本身是不能带空格的。</span><br><span class=\"line\"></span><br><span class=\"line\">pgcgap --ACC --id2seq --ids ids.txt --seqin SRR9620252.faa --seqout Seqout.fasta</span><br></pre></td></tr></table></figure>\n\n<p>提取的文件保存在<code>Seqout.fasta</code>中。</p>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><p>Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. Protocol exchange, 2022. DOI: 10.21203&#x2F;rs.2.21224&#x2F;v6</p>\n<h1 id=\"示例获取\"><a href=\"#示例获取\" class=\"headerlink\" title=\"示例获取\"></a>示例获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e6ae”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用PGCGAP，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite PGCGAP. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"序列处理","path":"api/tags/序列处理.json"}]},{"title":"利用NCycDB数据库从宏基因组中预测氮循环基因","slug":"利用NCycDB数据库从宏基因组中预测氮循环基因","date":"2021-11-25T03:19:20.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/利用NCycDB数据库从宏基因组中预测氮循环基因.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>氮（N）循环是地球生态系统中重要的生物地球化学途径的集合，在生态学和环境研究中得到了广泛的关注。目前，<ruby>鸟枪法宏基因组测序<rt>Shotgun metagenome sequencing</rt></ruby>已被广泛应用于探索负责 N 循环过程的基因家族。NCycDB是一个手动管理的综合数据库，用于从鸟枪法宏基因组测序数据中快速准确地分析 N 循环基因（亚）家族。 NCycDB 总共包含 68 个基因（亚）家族，涵盖 8 个 N 循环过程，分别具有 95% 和 100% 一致性阈值的 84 759 和 219 146 个代表性序列。数据库中还包含了1958 个<ruby>同源直系同源组<rt>Homologous orthology groups</rt></ruby>的序列，以避免由于“小数据库”问题导致的假阳性分配。</p>\n<h1 id=\"数据库及脚本\"><a href=\"#数据库及脚本\" class=\"headerlink\" title=\"数据库及脚本\"></a>数据库及脚本</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><ul>\n<li><p>通过Git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/liaochenlanruo/NCyc.git</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>通过wget</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/liaochenlanruo/NCyc/archive/refs/heads/master.zip</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ul>\n<li>通过<code>Git</code>下载的不需要解压，通过<code>Wget</code>下载的需要先解压。</li>\n<li>修改<code>NCycProfilter.PL</code>文件的第8-13行中4个依赖软件的安装路径。</li>\n<li>将<code>data</code>目录下的<code>NCyc_100_2019Jul.7z</code>解压，将解压得到的<code>NCyc_100_2019Jul</code>重命名为<code>NCyc_100.faa</code>并移动至<code>data</code>目录下。</li>\n</ul>\n<h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><ul>\n<li>Blast</li>\n<li>diamond</li>\n<li>usearch</li>\n<li>Perl</li>\n</ul>\n<h1 id=\"输入文件\"><a href=\"#输入文件\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h1><ul>\n<li><p>序列文件<br>宏基因组测序得到的Reads文件、组装后的序列文件以及通过基因预测后得到的氨基酸序列文件均可。序列文件可以是压缩的，也可以是解压的。</p>\n</li>\n<li><p>基因组-序列数对应文件<br>提供一份文本文档，共包含两列，第一列为<code>样本名称</code>(即序列文件的名字，不带文件后缀名)，第二列为<code>样本包含的序列数量</code>。</p>\n</li>\n</ul>\n<h1 id=\"预测\"><a href=\"#预测\" class=\"headerlink\" title=\"预测\"></a>预测</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl NCycProfiler.PL -d ./ -m diamond -f faa -s prot -si SI.txt -o Ncycle.out.txt</span><br></pre></td></tr></table></figure>\n<p>:::info<br>参数解析：<br>:::</p>\n<p>-d 指定工作目录，即序列文件所在目录。<br>-m 指定用哪个软件进行序列比对，可选<code>diamond</code>，<code>blast</code>，<code>usearch</code>。<br>-f 指定序列文件的后缀名，不需要带<code>.</code>。<br>-s 指定序列类型，氨基酸为<code>prot</code>，核苷酸为<code>nucl</code>。<br>-si 基因组-序列数对应文件<br>-rs 随机取样大小，如果不指定，将取包含序列最少的样本的序列数<br>-o 指定输出的文件名称</p>\n<h1 id=\"结果解析\"><a href=\"#结果解析\" class=\"headerlink\" title=\"结果解析\"></a>结果解析</h1><p>得到的结果文件是一个表格，第一行为随机取样大小。第一列为参与N循环的基因名，其他列为各样本含有的对应基因的数量。</p>\n<h1 id=\"可视化\"><a href=\"#可视化\" class=\"headerlink\" title=\"可视化\"></a>可视化</h1><p>可参考本站另一篇文章<a href=\"https://www.liaochenlanruo.fun/post/b68c.html\">R语言绘制气泡图Bubb_Plot</a>进行数据可视化。</p>\n<ul>\n<li>不带分组</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/NCyc&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">data <span class=\"operator\">&lt;-</span> read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;Ncycle.out.txt&quot;</span><span class=\"punctuation\">,</span>header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>reshape<span class=\"punctuation\">)</span></span><br><span class=\"line\">data_melt <span class=\"operator\">&lt;-</span> melt<span class=\"punctuation\">(</span>data<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>data_melt<span class=\"punctuation\">)</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Genes&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Samples&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Abundances&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">data_melt <span class=\"operator\">&lt;-</span>as.data.frame<span class=\"punctuation\">(</span>data_melt<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 做主图</span></span><br><span class=\"line\">bubble <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>data_melt<span class=\"punctuation\">[</span>which<span class=\"punctuation\">(</span>data_melt<span class=\"operator\">$</span>Abundances<span class=\"operator\">&gt;</span><span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> Samples<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> Genes<span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> Abundances<span class=\"punctuation\">,</span> color <span class=\"operator\">=</span> Samples<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改细节 — 图注，点大小，点shape</span></span><br><span class=\"line\">bubble_style <span class=\"operator\">&lt;-</span> bubble <span class=\"operator\">+</span> theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">    labs<span class=\"punctuation\">(</span></span><br><span class=\"line\">        x <span class=\"operator\">=</span> <span class=\"string\">&quot;Sediment layers&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        y <span class=\"operator\">=</span> <span class=\"string\">&quot;N cycling genes&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        color<span class=\"operator\">=</span><span class=\"string\">&quot;Samples&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\"># 颜色图注名</span></span><br><span class=\"line\">        size<span class=\"operator\">=</span><span class=\"string\">&quot;Abundances&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>    <span class=\"comment\"># 大小图注名</span></span><br><span class=\"line\">    scale_size<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.1</span><span class=\"punctuation\">,</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0.1</span><span class=\"punctuation\">,</span> <span class=\"number\">0.6</span><span class=\"punctuation\">,</span> <span class=\"number\">0.2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span>  <span class=\"comment\">#等比修改圆圈大小</span></span><br><span class=\"line\">    theme<span class=\"punctuation\">(</span>plot.title<span class=\"operator\">=</span>element_text<span class=\"punctuation\">(</span>family<span class=\"operator\">=</span><span class=\"string\">&quot;Arial&quot;</span><span class=\"punctuation\">,</span>size<span class=\"operator\">=</span><span class=\"number\">8</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                                  color<span class=\"operator\">=</span><span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">,</span>face<span class=\"operator\">=</span><span class=\"string\">&quot;italic&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                                  hjust<span class=\"operator\">=</span><span class=\"number\">0.5</span><span class=\"punctuation\">,</span>lineheight<span class=\"operator\">=</span><span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          plot.subtitle <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>hjust <span class=\"operator\">=</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">    theme<span class=\"punctuation\">(</span>axis.text.x <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>angle <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> hjust <span class=\"operator\">=</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">bubble_style</span><br></pre></td></tr></table></figure>\n\n<p>依据下表获得基因的<code>Pathways</code>和<code>Annotation</code>，随后依据<code>Pathways</code>进行分组并绘图。</p>\n<table>\n<thead>\n<tr>\n<th>Pathways</th>\n<th>Gene (sub) families</th>\n<th>Annotation</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Nitrification</td>\n<td>amoA_A</td>\n<td>Ammonia monooxygenase subunit A (archaea)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>amoB_A</td>\n<td>Ammonia monooxygenase subunit B (archaea)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>amoC_A</td>\n<td>Ammonia monooxygenase subunit C (archaea)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>amoA_B</td>\n<td>Ammonia monooxygenase subunit A (bacteria)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>amoB_B</td>\n<td>Ammonia monooxygenase subunit B (bacteria)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>amoC_B</td>\n<td>Ammonia monooxygenase subunit C (bacteria)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>hao</td>\n<td>Hydroxylamine dehydrogenase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nxrA</td>\n<td>Nitrite oxidoreductase, alpha subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nxrB</td>\n<td>Nitrite oxidoreductase, beta subunit</td>\n</tr>\n<tr>\n<td>Denitrification</td>\n<td>napA</td>\n<td>Periplasmic nitrate reductase NapA</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>napB</td>\n<td>Cytochrome c-type protein NapB</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>napC</td>\n<td>Cytochrome c-type protein NapC</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narG</td>\n<td>Nitrate reductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narH</td>\n<td>Nitrate reductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narJ</td>\n<td>Nitrate reductase molybdenum cofactor assembly chaperone</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narI</td>\n<td>Nitrate reductase gamma subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nirK</td>\n<td>Nitrite reductase (NO-forming)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nirS</td>\n<td>Nitrite reductase (NO-forming)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>norB</td>\n<td>Nitric oxide reductase subunit B</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>norC</td>\n<td>Nitric oxide reductase subunit C</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nosZ</td>\n<td>Nitrous-oxide reductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narZ</td>\n<td>Nitrate reductase 2, alpha subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narY</td>\n<td>Nitrate reductase 2, beta subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narV</td>\n<td>Nitrate reductase 2, gamma subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narW</td>\n<td>Nitrate reductase 2, delta subunit</td>\n</tr>\n<tr>\n<td>Assimilatory nitrate reduction</td>\n<td>nasA</td>\n<td>Assimilatory nitrate reductase catalytic subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nasB</td>\n<td>Assimilatory nitrate reductase electron transfer subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nirA</td>\n<td>Ferredoxin-nitrite reductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>NR</td>\n<td>Nitrate reductase (NAD(P)H)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narB</td>\n<td>Assimilatory nitrate reductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narC</td>\n<td>Cytochrome b-561</td>\n</tr>\n<tr>\n<td>Dissimilatory nitrate reduction</td>\n<td>napA</td>\n<td>Periplasmic nitrate reductase NapA</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>napB</td>\n<td>Cytochrome c-type protein NapB</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>napC</td>\n<td>Cytochrome c-type protein NapC</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narG</td>\n<td>Nitrate reductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narH</td>\n<td>Nitrate reductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narJ</td>\n<td>Nitrate reductase molybdenum cofactor assembly chaperone</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narI</td>\n<td>Nitrate reductase gamma subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narZ</td>\n<td>Nitrate reductase 2, alpha subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narY</td>\n<td>Nitrate reductase 2, beta subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narV</td>\n<td>Nitrate reductase 2, gamma subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>narW</td>\n<td>Nitrate reductase 2, delta subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nirB</td>\n<td>Nitrite reductase (NADH) large subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nirD</td>\n<td>Nitrite reductase (NADH) small subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nrfA</td>\n<td>Nitrite reductase (cytochrome c-552)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nrfB</td>\n<td>Cytochrome c-type protein NrfB</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nrfC</td>\n<td>Protein NrfC</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nrfD</td>\n<td>Protein NrfD</td>\n</tr>\n<tr>\n<td>Nitrogen fixation</td>\n<td>anfG</td>\n<td>Nitrogenase delta subunit</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nifD</td>\n<td>Nitrogenase molybdenum-iron protein alpha chain</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nifH</td>\n<td>Nitrogenase iron protein NifH</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nifK</td>\n<td>Nitrogenase molybdenum-iron protein beta chain</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nifW</td>\n<td>Nitrogenase-stabilizing&#x2F;protective protein</td>\n</tr>\n<tr>\n<td>Anammox</td>\n<td>hzo</td>\n<td>Hydrazine oxidoreductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>hzsA</td>\n<td>Hydrazine synthase subunit A</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>hzsB</td>\n<td>Hydrazine synthase subunit B</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>hzsC</td>\n<td>Hydrazine synthase subunit C</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>hdh</td>\n<td>Hydrazine dehydrogenase</td>\n</tr>\n<tr>\n<td>Organic degradation and synthesis</td>\n<td>ureA</td>\n<td>Urease subunit gamma</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>ureB</td>\n<td>Urease subunit beta</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>ureC</td>\n<td>Urease subunit alpha</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nao</td>\n<td>Nitroalkane oxidase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>nmo</td>\n<td>Nitronate monooxygenase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>gdh_K00260</td>\n<td>Glutamate dehydrogenase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>gdh_K00261</td>\n<td>Glutamate dehydrogenase (NAD(P)+)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>gdh_K00262</td>\n<td>Glutamate dehydrogenase (NADP+)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>gdh_K15371</td>\n<td>Glutamate dehydrogenase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>gs_K00264</td>\n<td>Glutamate synthase (NADPH&#x2F;NADH)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>gs_K00265</td>\n<td>Glutamate synthase (NADPH&#x2F;NADH) large chain</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>gs_K00266</td>\n<td>Glutamate synthase (NADPH&#x2F;NADH) small chain</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>gs_K00284</td>\n<td>Glutamate synthase (ferredoxin)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>glsA</td>\n<td>Glutaminase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>glnA</td>\n<td>Glutamine synthetase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>asnB</td>\n<td>Asparagine synthase (glutamine-hydrolysing)</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>ansB</td>\n<td>Glutamin-(asparagin-)ase</td>\n</tr>\n<tr>\n<td>Others</td>\n<td>hcp</td>\n<td>Hydroxylamine reductase</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>pmoA</td>\n<td>Particulate methane monooxygenase subunit A</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>pmoB</td>\n<td>Particulate methane monooxygenase subunit B</td>\n</tr>\n<tr>\n<td>^^</td>\n<td>pmoC</td>\n<td>Particulate methane monooxygenase subunit C</td>\n</tr>\n</tbody></table>\n<ul>\n<li>带分组</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/NCyc&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">data <span class=\"operator\">&lt;-</span> read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;Ncycle.out.txt&quot;</span><span class=\"punctuation\">,</span>header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggplot2<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>reshape<span class=\"punctuation\">)</span></span><br><span class=\"line\">data_melt <span class=\"operator\">&lt;-</span> melt<span class=\"punctuation\">(</span>data<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>data_melt<span class=\"punctuation\">)</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Genes&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Annotation&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Pathways&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Samples&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Abundances&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">data_melt <span class=\"operator\">&lt;-</span>as.data.frame<span class=\"punctuation\">(</span>data_melt<span class=\"punctuation\">)</span></span><br><span class=\"line\">bubble <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>data_melt<span class=\"punctuation\">[</span>which<span class=\"punctuation\">(</span>data_melt<span class=\"operator\">$</span>Abundances<span class=\"operator\">&gt;</span><span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> Samples<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> Genes<span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> Abundances<span class=\"punctuation\">,</span> color <span class=\"operator\">=</span> Samples<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> theme_bw<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> <span class=\"string\">&quot;Sediment layers&quot;</span><span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> <span class=\"string\">&quot;N cycling genes&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> theme<span class=\"punctuation\">(</span>axis.text.x <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>angle <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> <span class=\"string\">&quot;black&quot;</span><span class=\"punctuation\">,</span> vjust <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> hjust <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> axis.text.y <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>size <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">    theme<span class=\"punctuation\">(</span>panel.grid <span class=\"operator\">=</span> element_blank<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> panel.border <span class=\"operator\">=</span> element_blank<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">    theme<span class=\"punctuation\">(</span>panel.spacing <span class=\"operator\">=</span> unit<span class=\"punctuation\">(</span><span class=\"number\">.1</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;lines&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> </span><br><span class=\"line\">    theme<span class=\"punctuation\">(</span>plot.margin<span class=\"operator\">=</span>unit<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;cm&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> geom_point<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> facet_grid<span class=\"punctuation\">(</span>Pathways <span class=\"operator\">~</span> .<span class=\"punctuation\">,</span> drop<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> scale<span class=\"operator\">=</span><span class=\"string\">&quot;free&quot;</span><span class=\"punctuation\">,</span>space<span class=\"operator\">=</span><span class=\"string\">&quot;free&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">switch</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">    theme<span class=\"punctuation\">(</span>strip.background <span class=\"operator\">=</span> element_rect<span class=\"punctuation\">(</span>fill <span class=\"operator\">=</span> <span class=\"string\">&quot;grey95&quot;</span><span class=\"punctuation\">,</span> colour <span class=\"operator\">=</span> <span class=\"string\">&quot;white&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> strip.text.y.left <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>angle<span class=\"operator\">=</span><span class=\"number\">360</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> strip.text<span class=\"operator\">=</span>element_text<span class=\"punctuation\">(</span>size<span class=\"operator\">=</span><span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://doi.org/10.1093/bioinformatics/bty741\">NCycDB: a curated integrative database for fast and accurate metagenomic profiling of nitrogen cycling genes</a></li>\n<li><a href=\"https://github.com/qichao1984/NCyc\">GitHub</a></li>\n</ul>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“18ea”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"宏基因组","path":"api/tags/宏基因组.json"},{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"原核生物基因岛预测","slug":"原核生物基因岛预测","date":"2021-10-08T11:27:05.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/原核生物基因岛预测.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg","content":"<h1 id=\"软件-Software-needed\"><a href=\"#软件-Software-needed\" class=\"headerlink\" title=\"软件 (Software needed)\"></a>软件 (Software needed)</h1><ul>\n<li><a href=\"https://github.com/brinkmanlab/islandpath\">IslandPath-DIMOB</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"安装-Installation\"><a href=\"#安装-Installation\" class=\"headerlink\" title=\"安装 (Installation)\"></a>安装 (Installation)</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install islandpath</span><br><span class=\"line\">conda install perl-bioperl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"输入文件-Input-Files\"><a href=\"#输入文件-Input-Files\" class=\"headerlink\" title=\"输入文件 (Input Files)\"></a>输入文件 (Input Files)</h1><ul>\n<li>GenBank (.gbk) or an embl (.embl) file</li>\n<li><font color='#ff0000'><strong>注意:</strong> 输入文件中只允许包含一条序列，否则会报错！(Please make sure you are running islandpath on a genbank file with only one contig)。</font>如果一个文件中含有多个序列，那么就要将其分割成为多个文件，然后逐个作为输入文件进行预测。切割方法见我的另一篇文章<a href=\"https://liaochenlanruo.github.io/post/d9f9.html\">按照Contig切割GenBank文件</a>。</li>\n</ul>\n<h1 id=\"运行软件-Run\"><a href=\"#运行软件-Run\" class=\"headerlink\" title=\"运行软件 (Run)\"></a>运行软件 (Run)</h1><h2 id=\"常规运行\"><a href=\"#常规运行\" class=\"headerlink\" title=\"常规运行\"></a>常规运行</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gbk file</span></span><br><span class=\"line\">islandpath example/NC_003210.gbk NC_003210_GIs.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># embl file</span></span><br><span class=\"line\">islandpath example/NC_000913.embl NC_000913_GIs.txt</span><br></pre></td></tr></table></figure>\n\n<p>输出结果如下图所示：</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"示例输出结果展示\"></p>\n<h2 id=\"批处理\"><a href=\"#批处理\" class=\"headerlink\" title=\"批处理\"></a>批处理</h2><p>在得到大量基因组的时候，手动提交并不像打游戏那样让人渴望敲击键盘和鼠标，为了避免烦躁，我们来写脚本“run_islandpath.pl”，然后让机器做剩下的事情。该脚本可以实现GenBank文件的切割，基因岛预测，以及结果的整合，实现了IslandPath-DIMOB所无法完成的分析。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> Bio::SeqIO;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 8, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Split GenBank files</span></span><br><span class=\"line\"><span class=\"keyword\">my</span> @gbk = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.gbk&quot;</span>);<span class=\"comment\"># 批处理所有后缀为.gbk的文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@gbk) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).gbk/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;LOCUS&quot;</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">/\\s+(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $scaf = $1;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $out = $str . <span class=\"string\">&quot;_&quot;</span> . $scaf . <span class=\"string\">&quot;.gb&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $assession = $str . <span class=\"string\">&quot;_&quot;</span> . $scaf;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/ACCESSION.+/ACCESSION   $assession/g</span>;<span class=\"comment\"># 添加ACCESSION number</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;LOCUS$_&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># predict Gene Islands</span></span><br><span class=\"line\">$/ = <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @gb = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.gb&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@gb) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).gb/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.island&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;islandpath $_ $out&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get features from GenBank files</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $gb (@gb) &#123;</span><br><span class=\"line\">\t$gb=~<span class=\"regexp\">/(.+).gb/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $str . <span class=\"string\">&quot;.list&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $seqin = Bio::SeqIO-&gt;new( <span class=\"string\">-format =&gt;</span> <span class=\"string\">&#x27;genbank&#x27;</span>, <span class=\"string\">-file =&gt;</span> <span class=\"string\">&quot;$gb&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>( (<span class=\"keyword\">my</span> $seq = $seqin-&gt;next_seq) ) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sf ( $seq-&gt;get_SeqFeatures ) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>( $sf-&gt;primary_tag eq <span class=\"string\">&#x27;CDS&#x27;</span> ) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">my</span> @tags = $sf -&gt;get_all_tags();</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">#print join(&quot;\\t&quot;, @tags) . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> OUT $sf-&gt;get_tag_values(<span class=\"string\">&#x27;locus_tag&#x27;</span>), <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;start, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;end, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;strand, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;product&#x27;</span>), <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;translation&#x27;</span>),<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Parser the results</span></span><br><span class=\"line\"><span class=\"keyword\">my</span> (%hash, %gi, %list, %gif);</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;All_island.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Sequence IDs\tPredictor\tCategory\tGI Start\tGI End\t.\tStrand\t.\tIsland IDs\tGene IDs\tGene Start\tGene End\tStrand\tProducts\tProtein Sequences\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> LIST, <span class=\"string\">&quot;&gt;All_island.list&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> LIST <span class=\"string\">&quot;Island IDs\\tGI Start\\tGI End\\tGI Length\\tGene Number\\tGene IDs\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @GI = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.island&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@GI) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).island/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $list = $1 . <span class=\"string\">&quot;.list&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $start = $lines[<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $end = $lines[<span class=\"number\">4</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $lines[-<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $gilen = $end - $start + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $start . <span class=\"string\">&quot;-&quot;</span> . $end . <span class=\"string\">&quot;-&quot;</span> . $id;</span><br><span class=\"line\">\t\t$gi&#123;$id&#125; = $_;</span><br><span class=\"line\">\t\t$gif&#123;$id&#125; = $start . <span class=\"string\">&quot;\\t&quot;</span> . $end . <span class=\"string\">&quot;\\t&quot;</span> . $gilen;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> GB, <span class=\"string\">&quot;$list&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;GB&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @line = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $ids (<span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %hash) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> ($start2, $end2, $gi) = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\-/</span>, $hash&#123;$ids&#125;;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (($line[<span class=\"number\">1</span>] &gt;= $start2) &amp;&amp; ($line[<span class=\"number\">2</span>] &lt;= $end2)) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> OUT $gi&#123;$gi&#125; . <span class=\"string\">&quot;\\t&quot;</span> . $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">push</span> @&#123;$list&#123;$gi&#125;&#125;, $line[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> GB;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (<span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %list) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> LIST $_ . <span class=\"string\">&quot;\\t&quot;</span> . $gif&#123;$_&#125; . <span class=\"string\">&quot;\\t&quot;</span> . @&#123;$list&#123;$_&#125;&#125; . <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span> (<span class=\"string\">&quot; &quot;</span>, @&#123;$list&#123;$_&#125;&#125;) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> LIST;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>将“run_islandpath.pl”与GenBank文件放在同一目录下，在终端里运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_islandpath.pl</span><br></pre></td></tr></table></figure>\n\n<p>结果汇总于<strong>All_island.txt</strong>和<strong>All_island.list</strong>中，内容如下面二图所示。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"All_island.txt\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"All_island.list\"></p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“5324”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"基因岛","path":"api/tags/基因岛.json"}]},{"title":"在FASTA文件中搜索完全匹配的短序列","slug":"在FASTA文件中搜索完全匹配的短序列","date":"2021-10-20T13:12:57.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/在FASTA文件中搜索完全匹配的短序列.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>有时候需要在FASTA格式的文件中搜索短的保守序列，这个时候采用查找法比使用blast等序列比对更加人性化。<u>但是要注意避坑，即FASTA文档中的序列一般是被打断为许多行的，如果要查找的目标序列恰好在断行处，是没有办法直接揪出它的</u>，所以在查找前需要将序列中间的换行符去掉，将其变为一行。</p>\n<p>该任务可以通过Perl脚本<strong>search_short_seqs.pl</strong>实现。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 20, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$ARGV[0]&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;Target_seqs.fa&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $str = $ARGV[<span class=\"number\">1</span>];</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($id, $seq) = <span class=\"keyword\">split</span> (<span class=\"string\">&quot;\\n&quot;</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t$seq=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($seq=~<span class=\"regexp\">/$str/i</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;&gt;$id\\n$seq\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n<p>运行方法：将<strong>search_short_seqs.pl</strong>与输入文件（FASTA文件）放在同一目录中，在终端里运行如下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl search_short_seqs.pl FASTA文件 要查找的序列</span><br></pre></td></tr></table></figure>\n\n<p>带有搜索序列的序列将输出到文件<strong>Target_seqs.fa</strong>中。</p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“6a93”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"序列处理","path":"api/tags/序列处理.json"}]},{"title":"在Linux服务器中安装网页版Rstudio","slug":"在Linux服务器中安装网页版Rstudio","date":"2021-11-02T01:37:03.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/在Linux服务器中安装网页版Rstudio.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg","content":"<p>本文演示如何在CentOS7服务器上安装Rstudio server。</p>\n<h1 id=\"安装Rstudio\"><a href=\"#安装Rstudio\" class=\"headerlink\" title=\"安装Rstudio\"></a>安装Rstudio</h1><p>访问<a href=\"https://www.rstudio.com/products/rstudio/download-server\">Rstudio官网</a>，选择对应的Linux发行版，下载Rstudio安装包。本文以最常见的CentOS7为例演示，<strong>前提是系统中已经安装了R</strong>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://download2.rstudio.org/server/centos7/x86_64/rstudio-server-rhel-2021.09.0-351-x86_64.rpm</span><br><span class=\"line\">sudo yum install rstudio-server-rhel-2021.09.0-351-x86_64.rpm</span><br></pre></td></tr></table></figure>\n<h1 id=\"开启Rstudio服务\"><a href=\"#开启Rstudio服务\" class=\"headerlink\" title=\"开启Rstudio服务\"></a>开启Rstudio服务</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> rstudio-server.service</span><br><span class=\"line\">sudo systemctl start rstudio-server.service</span><br><span class=\"line\">sudo systemctl status rstudio-server</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"开启8787端口\"><a href=\"#开启8787端口\" class=\"headerlink\" title=\"开启8787端口\"></a>开启8787端口</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo firewalld</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-port=8787/tcp</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-port=8787/udp</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"远程登录Rstudio\"><a href=\"#远程登录Rstudio\" class=\"headerlink\" title=\"远程登录Rstudio\"></a>远程登录Rstudio</h1><p>在浏览器地址栏输入<code>http://ip:8787/</code>打开网页，输入自己的用户名和密码登录即可。</p>\n<h1 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h1><h2 id=\"Rstudio服务启动失败\"><a href=\"#Rstudio服务启动失败\" class=\"headerlink\" title=\"Rstudio服务启动失败\"></a>Rstudio服务启动失败</h2><h3 id=\"症状\"><a href=\"#症状\" class=\"headerlink\" title=\"症状\"></a>症状</h3><p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server status\"></p>\n<h3 id=\"排雷\"><a href=\"#排雷\" class=\"headerlink\" title=\"排雷\"></a>排雷</h3><ul>\n<li><p>检查安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rstudio-server verify-installation</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server verify-installation\"></p>\n<p>提示“&#x2F;usr&#x2F;lib&#x2F;rstudio-server&#x2F;bin&#x2F;rsession: error while loading shared libraries: libR.so: cannot open shared object file: No such file or directory”，表明缺少libR.so库。</p>\n</li>\n<li><p>安装R</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y R.x86_64</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>再次检查安装情况</p>\n<p>提示找不到R。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server verify-installation\"></p>\n<p>可以看到这里进入了conda的base环境，它影响了程序的判断，退出conda环境后再试一下就不再报错了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure>\n\n<p><strong>注</strong>：conda环境一定要退彻底。</p>\n</li>\n<li><p>再次启动Rstudio服务，并查看状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rstudio-server start</span><br><span class=\"line\">sudo rstudio-server status</span><br></pre></td></tr></table></figure>\n\n<p>  <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"rstudio-server正常运行\"></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"多种方法批量下载NCBI基因组","slug":"多种方法批量下载NCBI基因组","date":"2022-07-10T02:04:23.000Z","updated":"2025-05-13T11:50:17.810Z","comments":true,"path":"api/articles/多种方法批量下载NCBI基因组.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_1.png","content":"<h1 id=\"下载有summary的基因组\"><a href=\"#下载有summary的基因组\" class=\"headerlink\" title=\"下载有summary的基因组\"></a>下载有summary的基因组</h1><ul>\n<li><p>在NCBI基因组数据库搜索物种</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"搜索物种\"></p>\n</li>\n<li><p>下载元数据</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载TSV元数据\"></p>\n</li>\n<li><p>获取下载链接<br>打开下载的元数据文件<code>prokaryotes.csv</code>（该文件也可以直接去NCBI FTP中下载，一般在各物种的目录下，名字为<code>assembly_summary.txt</code>，其格式与<code>prokaryotes.csv</code>略有不同，但都含有链接），将倒数第二列或最后一列的链接拷贝到TXT文本文档中，在每一行的最后加上要下载的文件名和数据类型：</p>\n<ul>\n<li>基因组：文件名 _genomic.fna.gz</li>\n<li>蛋白序列：文件名 _protein.faa.gz</li>\n<li>CDs序列：文件名 _cds_from_genomic.fna.gz </li>\n<li>…</li>\n</ul>\n<p>可参考下图中的示例进行命名：<br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.5.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.5.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"NCBI文件命名示例\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"获取下载链接\"></p>\n<p>建议用正则表达式替换（依赖EditPlus或其他具有正则表达式功能的文本编辑器），以基因组序列为例：</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"正则表达式批量替换获取基因组下载链接\"><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_5.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_5.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"替换后获得的基因组完整下载链接\"></p>\n</li>\n<li><p>开始下载<br>将获得的完整链接保存到名字为<code>link.txt</code>的文本文档中，在LINUX终端中运行<code>for link in $(cat link.txt); do wget -c $link; done</code>即可批量下载基因组到<code>genome</code>目录中。若不慎在行末引入了看不见的换行符，可以用命令<code>perl -pe &#39;s/[\\n\\r]+//g&#39; link.txt &gt; link2.txt</code>进行删除。再用<code>for link in $(cat link2.txt); do wget -c $link; done</code>下载。</p>\n</li>\n</ul>\n<h1 id=\"SRA数据下载\"><a href=\"#SRA数据下载\" class=\"headerlink\" title=\"SRA数据下载\"></a>SRA数据下载</h1><h2 id=\"安装SRA-Toolkit（建议用方式2安装）\"><a href=\"#安装SRA-Toolkit（建议用方式2安装）\" class=\"headerlink\" title=\"安装SRA Toolkit（建议用方式2安装）\"></a>安装SRA Toolkit（建议用方式2安装）</h2><h3 id=\"方式1：-手动安装（需要单独安装parallel，见方式2）\"><a href=\"#方式1：-手动安装（需要单独安装parallel，见方式2）\" class=\"headerlink\" title=\"方式1： 手动安装（需要单独安装parallel，见方式2）\"></a>方式1： 手动安装（需要单独安装<code>parallel</code>，见方式2）</h3><ul>\n<li><p>下载<a href=\"https://github.com/ncbi/sra-tools/wiki/01.-Downloading-SRA-Toolkit\">SRA Toolkit</a></p>\n<p>根据自己的系统选择合适的版本进行下载，并将软件包中<code>bin</code>的绝对路径或相对路径加入到环境变量中，以便可以在终端中直接调用。</p>\n</li>\n<li><p>设置默认下载目录</p>\n<p>如果不设置，默认会将基因组下载到家目录下，通过在终端里输入<code>vdb-config -i</code>命令配置下载目录，即下载到当前目录下。</p>\n<p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_6.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_6.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"设置SRA Toolkit默认下载文件存放位置\"></p>\n<p>  <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_7.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_7.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"设置SRA Toolkit默认下载文件存放位置\"></p>\n</li>\n</ul>\n<h3 id=\"方式2：-通过conda安装\"><a href=\"#方式2：-通过conda安装\" class=\"headerlink\" title=\"方式2： 通过conda安装\"></a>方式2： 通过conda安装</h3><ul>\n<li><p>安装SRA Toolkit</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mamba install -c bioconda sra-tools</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装parallel</p>\n<p>用于多线程下载，可提高下载速度。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mamba install -c conda-forge parallel</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"准备SRA号列表文件\"><a href=\"#准备SRA号列表文件\" class=\"headerlink\" title=\"准备SRA号列表文件\"></a>准备SRA号列表文件</h2><ul>\n<li><p>准备包含<code>SRA号</code>的列表文件，每一行含有一个编号，文件命名为<code>srr_list.txt</code>，如下所示：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DRR634073</span><br><span class=\"line\">DRR634074</span><br><span class=\"line\">DRR634118</span><br><span class=\"line\">DRR634144</span><br><span class=\"line\">DRR634148</span><br><span class=\"line\">DRR634091</span><br><span class=\"line\">DRR634127</span><br><span class=\"line\">DRR634140</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"开始下载\"><a href=\"#开始下载\" class=\"headerlink\" title=\"开始下载\"></a>开始下载</h2><p>将列表文件与脚本<code>downloadSRA.sh</code>放在同一目录下，在Linux终端中运行<code>bash downloadSRA.sh</code>,下载的文件存放于<code>fastq_output</code>目录中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash downloadSRA.sh</span><br></pre></td></tr></table></figure>\n<h1 id=\"利用FTP软件根据物种下载基因组\"><a href=\"#利用FTP软件根据物种下载基因组\" class=\"headerlink\" title=\"利用FTP软件根据物种下载基因组\"></a>利用FTP软件根据物种下载基因组</h1><p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_8.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_8.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过FileZilla批量下载基因组\"><br> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_9.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_9.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过FileZilla批量下载基因组\"><br>    在右侧的列表中选中所有目录拖拽到本地即可开始下载。</p>\n<h1 id=\"根据WGA-assession-number下载基因组\"><a href=\"#根据WGA-assession-number下载基因组\" class=\"headerlink\" title=\"根据WGA assession number下载基因组\"></a>根据WGA assession number下载基因组</h1><ul>\n<li><p>安装<a href=\"https://github.com/kblin/ncbi-genome-download\">ncbi-genome-download</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install -c bioconda ncbi-genome-download</span><br></pre></td></tr></table></figure></li>\n<li><p>准备WGA assession number列表文件</p>\n</li>\n<li><p>开始下载<br>终端里输入如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ncbi-genome-download --assembly-accessions GCA.txt --output-folder 6_3 bacteria --section genbank --formats fasta</span><br></pre></td></tr></table></figure>\n<p>其中<code>GCA.txt</code>为包含assession number的列表文件，每行一个assession number。<br>该软件的问题在于，需要<code>科学上网</code>，所以很多时候会掉链子。</p>\n</li>\n</ul>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“213”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"NCBI","path":"api/tags/NCBI.json"},{"name":"下载","path":"api/tags/下载.json"}]},{"title":"基于TidyMass的非靶向代谢组学分析","slug":"基于TidyMass的非靶向代谢组学分析","date":"2023-04-19T07:45:39.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/基于TidyMass的非靶向代谢组学分析.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/LC-QTOF.png","content":"<h1 id=\"代谢组学常用仪器特点\"><a href=\"#代谢组学常用仪器特点\" class=\"headerlink\" title=\"代谢组学常用仪器特点\"></a>代谢组学常用仪器特点</h1><table border=\"1\">\n<tr>\n<th>仪器</th>\n<th>特点</th>\n</tr>\n<tr>\n<td>GC-MS</td>\n<td>易挥发，低极性，热稳定的小分子化合物；需衍生化</td>\n</tr>\n<tr>\n<td>LC-MS</td>\n<td>具有一定极性的有机化合物；无需衍生化</td>\n</tr>\n<tr>\n<td>NMR</td>\n<td>无偏性，无损检测；•无需繁琐前处理，便于活体、原位的动态检测</td>\n</tr>\n<tr>\n<td>CE-MS</td>\n<td>高极性化合物，如核酸，蛋白等</td>\n</tr>\n<tr>\n<td>ICP-MS</td>\n<td>无机化合物</td>\n</tr>\n</table>\n\n<h1 id=\"LC-QTOF原理\"><a href=\"#LC-QTOF原理\" class=\"headerlink\" title=\"LC-QTOF原理\"></a>LC-QTOF原理</h1><p>Q-TOF全称为四极飞行时间质谱仪（Quadrupole Time-of-Flight Mass Spectrometer）。其基本原理是将样品离子通过四极杆进行质量筛选，然后进入飞行时间质谱器（Time-of-Flight Mass Analyzer，ToF），测定其离子的飞行时间，从而得到样品中离子的质量信息。Q-TOF有正离子模式（positive ion mode, POS）和负离子模式（negative ion mode, NEG）两种电离方式，在检测代谢组时结合使用两种方式可以使代谢物覆盖率更高，检测效果也更好。</p>\n<p>Q-TOF的工作过程包含以下步骤：</p>\n<p><strong>离子化</strong>：样品通过电喷雾或者MALDI等方法被电离成为离子。</p>\n<p><strong>生成离子束</strong>：离子经过引出阱、加速器、光栅偏转镜等装置，形成一个带电的离子束。</p>\n<p><strong>四极杆质量筛选</strong>：离子束进入四极杆，通过高频交变电压（RF）和直流电压（DC）的控制，将不同质量的离子分离出来。</p>\n<p><strong>飞行时间质谱分析</strong>：通过激光或者其他方法对分散的离子束施加助推、聚焦和分析，并且测定其到达检测器所需的时间。不同质量的离子抵达检测器所需要的时间不同，从而可以得到离子的质量信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/LC-QTOF.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/LC-QTOF.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"LC-QTOF原理\"><br><font color=\"#FF0000\"><strong>FAQ</strong>：POS和NEG数据的利用。</font><br>负离子和正离子是数据采集时的时候的两种模式生成两套数据，一级分析（MS）结果中是提供 POS 和 NEG 两个检测结果列表的，但是在二级分析（MSMS）结果中，我们将鉴定正负离子模式下鉴定到的物质进行了合并，所以二级分析是针对代谢物来做的，不区分正负离子模式。</p>\n<p><font color=\"#FF0000\"><strong>FAQ</strong>: 当正负离子模式下都检测到了某种物质，如何对该物质的结果进行呈现？</font><br>会根据匹配参数进行取舍，选用匹配参数更好的模式下的数据在二级结果中进行分析。</p>\n<h1 id=\"数据分析\"><a href=\"#数据分析\" class=\"headerlink\" title=\"数据分析\"></a>数据分析</h1><h2 id=\"下机数据格式转换\"><a href=\"#下机数据格式转换\" class=\"headerlink\" title=\"下机数据格式转换\"></a>下机数据格式转换</h2><p>以下两个软件二选一，Windows下建议使用ProteoWizard，其用法可参考<a href=\"https://liaochenlanruo.fun/post/df57.html\">用metid构建代谢组数据库</a>。Linux下建议使用massconverter。</p>\n<h3 id=\"ProteoWizard\"><a href=\"#ProteoWizard\" class=\"headerlink\" title=\"ProteoWizard\"></a><a href=\"https://github.com/ProteoWizard\">ProteoWizard</a></h3><p>将raw data转换为<code>mzXML</code>格式。</p>\n<h3 id=\"massconverter\"><a href=\"#massconverter\" class=\"headerlink\" title=\"massconverter\"></a><a href=\"https://tidymass.github.io/massconverter/\">massconverter</a></h3><p>将raw data转换为<code>mzXML</code>格式。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span><span class=\"punctuation\">(</span><span class=\"operator\">!</span>require<span class=\"punctuation\">(</span>remotes<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;remotes&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">remotes<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;tidymass/massconverter&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取pwiz</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>massconverter<span class=\"punctuation\">)</span></span><br><span class=\"line\">docker_pull_pwiz<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<p><strong>Debug</strong>：如果报错<code>Error in docker_pull_pwiz() :   Please install docker first (https://www.docker.com/get-started)</code>，则首先确认系统是否已安装docker，如果未安装，请先安装docker；如已经安装，则是因为普通用户无运行docker的权限，将其添加到docker用户组中即可。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">root模式下运行如下shell命令，将用户lhl添加到docker组中</span></span><br><span class=\"line\">gpasswd -a lhl docker</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启docker生效</span></span><br><span class=\"line\">service docker restart</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"设置转换参数\"><a href=\"#设置转换参数\" class=\"headerlink\" title=\"设置转换参数\"></a>设置转换参数</h4><p>此处调用MSConvert进行格式转换，期间进行了过滤，主要采用了<code>Peak Picking</code>，<code>Subset</code>，和<code>Zero Samples</code>方法。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parameter <span class=\"operator\">=</span></span><br><span class=\"line\">  massconverter<span class=\"operator\">::</span>create_msconvert_parameter<span class=\"punctuation\">(</span></span><br><span class=\"line\">    output_format <span class=\"operator\">=</span> <span class=\"string\">&quot;mzXML&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># &quot;mzXML&quot;, &quot;mzML&quot;, &quot;mz5&quot;, &quot;mgf&quot;, &quot;text&quot;, &quot;ms1&quot;, &quot;cms1&quot;, &quot;ms2&quot;, &quot;cms2&quot;</span></span><br><span class=\"line\">    binary_encoding_precision <span class=\"operator\">=</span> <span class=\"string\">&quot;64&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    zlib <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    write_index <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    peak_picking_algorithm <span class=\"operator\">=</span> <span class=\"string\">&quot;cwt&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># &quot;vendor&quot; or &quot;cwt&quot;</span></span><br><span class=\"line\">    vendor_mslevels <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"comment\"># 当前调用的是cwt，此参数可能无效</span></span><br><span class=\"line\">    cwt_mslevels <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"comment\"># 如此设置即可</span></span><br><span class=\"line\">    cwt_min_snr <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">,</span><span class=\"comment\"># minimum signal-to-noise ratio，设为0.1即可</span></span><br><span class=\"line\">    cwt_min_peak_spacing <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">,</span><span class=\"comment\"># minimum peak spacing，设为0.1即可</span></span><br><span class=\"line\">    subset_polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;positive&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># &quot;any&quot;, &quot;positive&quot; or &quot;negative&quot;，根据模式选择</span></span><br><span class=\"line\">    subset_scan_number <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"literal\">NA</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"comment\"># A two numeric vector. Can be c(NA, NA) if don&#x27;t use this</span></span><br><span class=\"line\">    subset_scan_time <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">60</span><span class=\"punctuation\">,</span> <span class=\"number\">300</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"comment\"># A two numeric vector. Can be c(NA, NA) if don&#x27;t use this</span></span><br><span class=\"line\">    subset_mslevels <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"comment\"># A two numeric vector. Second can be set as NA</span></span><br><span class=\"line\">    zero_samples_mode <span class=\"operator\">=</span> <span class=\"string\">&quot;removeExtra&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># &quot;no&quot;, &quot;removeExtra&quot;, or &quot;addMissing&quot;</span></span><br><span class=\"line\">    zero_samples_mslevels <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">NA</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"comment\"># A two numeric vector. Second can be set as NA</span></span><br><span class=\"line\">    zero_samples_add_missing_flanking_zero_count <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"comment\"># 默认5即可</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"开始转换\"><a href=\"#开始转换\" class=\"headerlink\" title=\"开始转换\"></a>开始转换</h4><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">convert_raw_data<span class=\"punctuation\">(</span>input_path <span class=\"operator\">=</span> <span class=\"string\">&quot;demo_data/raw_data&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                 output_path <span class=\"operator\">=</span> <span class=\"string\">&quot;demo_data/mzxml&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                 msconvert_parameter <span class=\"operator\">=</span> parameter<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                 docker_parameters <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                 process_all <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"安装tidyMass\"><a href=\"#安装tidyMass\" class=\"headerlink\" title=\"安装tidyMass\"></a>安装<a href=\"https://tidymass.tidymass.org/\">tidyMass</a></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mamba install gcc_linux-64 gxx_linux-64 gfortran_linux-64</span><br><span class=\"line\">mamba install bioconductor-msnbase bioconductor-rdisop r-openxlsx bioconductor-mzr bioconductor-xcms r-rvest r-tidyr r-stringi r-tidyversedyve r-hexbin</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span><span class=\"punctuation\">(</span><span class=\"operator\">!</span>require<span class=\"punctuation\">(</span>remotes<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;remotes&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">remotes<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;tidymass/masstools&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">remotes<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;tidymass/tidymass&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"原始数据处理\"><a href=\"#原始数据处理\" class=\"headerlink\" title=\"原始数据处理\"></a>原始数据处理</h2><p>调用<a href=\"https://massprocesser.tidymass.org/\">massprocesser</a>包进行原始数据处理，进行峰检测与对齐，输出peak table包括：<br>原始数据导入（read spectra from file）、峰检测（detect mass traces &amp; detect  chromatographic peaks）、校正保留时间（Correcting rentention time）、对已鉴定的色谱峰进行保留时间校正、Grouping peaks across samples、输出peak table。</p>\n<p><strong>数据目录结构</strong></p>\n<ul>\n<li>mzxml&#x2F;mzxml_ms1_data&#x2F;<ul>\n<li>POS&#x2F;<ul>\n<li>Case&#x2F;*.mzXML</li>\n<li>Control&#x2F;*.mzXML</li>\n<li>QC&#x2F;*.mzXML</li>\n</ul>\n</li>\n<li>NEG&#x2F;<ul>\n<li>Case&#x2F;*.mzXML</li>\n<li>Control&#x2F;*.mzXML</li>\n<li>QC&#x2F;*.mzXML</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>mzxml&#x2F;mgf_ms2_data&#x2F;mgf_ms2_data&#x2F;<ul>\n<li>POS&#x2F;*.mgf</li>\n<li>NEG&#x2F;*.mgf</li>\n</ul>\n</li>\n<li>mzxml&#x2F;sample_info&#x2F;<ul>\n<li>sample_info_pos.csv</li>\n<li>sample_info_neg.csv</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"正离子模式\"><a href=\"#正离子模式\" class=\"headerlink\" title=\"正离子模式\"></a>正离子模式</h3><p><font color=#FF0000>注意：path指定的路径名不可以数字开头！</font></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>tidymass<span class=\"punctuation\">)</span></span><br><span class=\"line\">process_data<span class=\"punctuation\">(</span></span><br><span class=\"line\">  path <span class=\"operator\">=</span> <span class=\"string\">&quot;mzxml_ms1_data/POS&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># 路径根据实际情况定</span></span><br><span class=\"line\">  polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;positive&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  ppm <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  peakwidth <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"number\">60</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  threads <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  output_tic <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  output_bpc <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  output_rt_correction_plot <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  min_fraction <span class=\"operator\">=</span> <span class=\"number\">0.5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  group_for_figure <span class=\"operator\">=</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  snthresh <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  prefilter <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">3</span><span class=\"punctuation\">,</span> <span class=\"number\">500</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  fitgauss <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  integrate <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  mzdiff <span class=\"operator\">=</span> <span class=\"number\">0.01</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  noise <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  binSize <span class=\"operator\">=</span> <span class=\"number\">0.025</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  bw <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  fill_peaks <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>ppm</strong>：numeric defining the maximal tolerated m&#x2F;z deviation in consecutive scans in parts per million (ppm) for the initial regions-of-interest (ROI)  definition。<font color=#FF0000>此处的ppm来源于xcms包，但在xcms中不同的函数中，含义貌似不一样，需进一步确认。</font></li>\n<li><strong>peakwith</strong>：峰宽，取决于柱子（column）和LC系统。numeric(2) with the expected approximate peak width in chromatographic space. Given as a range (min, max) in seconds.</li>\n<li><strong>min_fraction</strong>：如果一个峰出现在至少一组样本中<code>min_fraction</code>样本以上（按比例），则将保留该峰值。</li>\n<li><strong>snthresh</strong> ：信噪比阈值。</li>\n<li><strong>prefilter</strong>：c(k, I) 在第一次分析步骤（ROI检测）中指定预筛选步骤。仅保留包含至少强度&gt;&#x3D;I的k个峰的的质量轨迹（Mass traces）。</li>\n<li><strong>fitgauss</strong> ：是否应对每个峰拟合高斯分布。主要影响峰的保留时间位置。</li>\n<li><strong>integrate</strong>：积分方法（1或2）。对于 integrate&#x3D;1，Peak limits通过在mexican hat 过滤后的数据上下降（descent）来确定；而对于 integrate&#x3D;2，则在原始数据上进行下降处理。后一种方法更准确但容易受到噪声的影响，而前一种方法更稳健但不太精确。</li>\n<li><strong>mzdiff</strong> ：representing the minimum difference in m&#x2F;z dimension required for peaks with overlapping retention times; can be negative to allow overlap. During peak post-processing, peaks defined to be overlapping are reduced to the one peak with the largest signal.</li>\n<li><strong>noise</strong>：设定第一步分析中需要的质心（centroids ）最小强度（intensity &lt; noise的质心将被省略在感兴趣区域检测之外）。</li>\n<li><strong>binSize</strong> ：将m&#x2F;z轴按照binSize划分为多个区间，再对各区间内的离子信号进行聚合。较小的binSize使得峰检测更加准确，检测到更多features，需要更多计算资源。</li>\n<li><strong>bw</strong>：带宽，通常在5-50间，这是用于峰值检测的核密度估计 （KDE） 算法中使用的参数。bw 控制估计的 KDE 曲线的平滑度，并确定峰的解析程度。较小的bw值将产生更详细的基础峰形表示，在紧密间隔或重叠的峰之间具有更好的分辨率，但也可能产生更高水平的噪声。相反，较大的bw值将导致对峰形的估计更平滑、更广义，这有助于降低噪声和杂散检测，但在某些情况下也可能导致峰分辨率降低。bw 值的选择将取决于所分析数据的具体特征以及分析的目标。通常，有必要试验一系列 bw 值，以找到给定数据集的最佳设置。</li>\n<li><strong>fill_peaks</strong>：Fill peaks NA or not。</li>\n</ul>\n<p><strong>结果</strong>：</p>\n<ul>\n<li><p>POS&#x2F;Result&#x2F;</p>\n<ul>\n<li><p>object：用于下一步分析</p>\n</li>\n<li><p>Peak_table.csv：用于下一步分析的峰表</p>\n</li>\n<li><p>Peak_table_for_cleaning.csv：删除了<code>Peak_table.csv</code>中无用的列，可直接用于后续的数据清洗</p>\n</li>\n<li><p>BPC.pdf：Base peak chromatogram，仅展示<code>group_for_figure</code>参数指定组内的样本<br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"BPC.pdf\"></p>\n</li>\n<li><p>TIC.pdf：Total ion peak chromatogram，经色谱分离流出的组分不断进入质谱，质谱连续扫描采集数据，每一次扫描得到一张质谱图，将每一张质谱图中所有离子强度相加得到总离子流强度。然后以总离子强度为纵坐标，时间为横坐标绘图。<br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"TIC.pdf\"></p>\n</li>\n<li><p>RT correction plot.pdf<br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"RT correction plot.pdf\"></p>\n</li>\n<li><p>intermediate_data：中间文件目录，如果需要重新运行data processing，则需先删除该目录。</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载对象</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;mzxml_ms1_data/POS/Result/object&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看metabolic features数量</span></span><br><span class=\"line\">object</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取互动图，在Rstudio中才能显示</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;mzxml_ms1_data/POS/Result/intermediate_data/xdata2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">plot <span class=\"operator\">=</span> massprocesser<span class=\"operator\">::</span>plot_adjusted_rt<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> xdata2<span class=\"punctuation\">,</span> group_for_figure <span class=\"operator\">=</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">interactive</span> <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">plot</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"负离子模式\"><a href=\"#负离子模式\" class=\"headerlink\" title=\"负离子模式\"></a>负离子模式</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">massprocesser<span class=\"operator\">::</span>process_data<span class=\"punctuation\">(</span></span><br><span class=\"line\">  path <span class=\"operator\">=</span> <span class=\"string\">&quot;mzxml_ms1_data/NEG&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;negative&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  ppm <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  peakwidth <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"number\">60</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  threads <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  output_tic <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  output_bpc <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  output_rt_correction_plot <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  min_fraction <span class=\"operator\">=</span> <span class=\"number\">0.5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  group_for_figure <span class=\"operator\">=</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">   snthresh <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  prefilter <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">3</span><span class=\"punctuation\">,</span> <span class=\"number\">500</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  fitgauss <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  integrate <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  mzdiff <span class=\"operator\">=</span> <span class=\"number\">0.01</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  noise <span class=\"operator\">=</span> <span class=\"number\">500</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  binSize <span class=\"operator\">=</span> <span class=\"number\">0.025</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  bw <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  fill_peaks <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载对象</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;mzxml_ms1_data/NEG/Result/object&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看metabolic features数量</span></span><br><span class=\"line\">object</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Explore-data\"><a href=\"#Explore-data\" class=\"headerlink\" title=\"Explore data\"></a>Explore data</h2><p>将peak table和样本信息（元数据）整合，得到<code>mass_dataset</code> class对象。获取数据的总结信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"样本信息表示例 sample_info_pos.csv\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>tidyverse<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"正离子模式-1\"><a href=\"#正离子模式-1\" class=\"headerlink\" title=\"正离子模式\"></a>正离子模式</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载对象</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;mzxml_ms1_data/POS/Result/object&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">object_pos <span class=\"operator\">&lt;-</span> object</span><br><span class=\"line\">object_pos</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读入样本信息</span></span><br><span class=\"line\">sample_info_pos <span class=\"operator\">&lt;-</span> readr<span class=\"operator\">::</span>read_csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;sample_info/sample_info_pos.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  查看object_pos中的元数据</span></span><br><span class=\"line\">object_pos <span class=\"operator\">%&gt;%</span>  extract_sample_info<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;    sample_id group   class injection.order</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1  sample_06  Case Subject               1</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 sample_103  Case Subject               2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3  sample_11  Case Subject               3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 sample_112  Case Subject               4</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 sample_117  Case Subject               5</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6  sample_12  Case Subject               6</span></span><br><span class=\"line\"><span class=\"comment\">#?? 为何还没整合的情况下object_pos中就存在了部分元数据列？</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移除object_pos中的&quot;group&quot;, &quot;class&quot;, &quot;injection.order&quot;</span></span><br><span class=\"line\">object_pos <span class=\"operator\">&lt;-</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> dplyr<span class=\"operator\">::</span>select<span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;group&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;class&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;injection.order&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将sample_info_pos 中的所有列整合到object_pos 中</span></span><br><span class=\"line\">object_pos <span class=\"operator\">=</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> left_join<span class=\"punctuation\">(</span>sample_info_pos<span class=\"punctuation\">,</span> by <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看元数据信息</span></span><br><span class=\"line\">object_pos <span class=\"operator\">%&gt;%</span> extract_sample_info<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;    sample_id injection.order   class batch  subject_id group</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1  sample_06               4 Subject     1 subject_414  Case</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 sample_103              71 Subject     1 subject_330  Case</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3  sample_11               6 Subject     1 subject_125  Case</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 4 sample_112              78 Subject     1 subject_295  Case</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 5 sample_117              80 Subject     1 subject_793  Case</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 6  sample_12               8 Subject     1 subject_387  Case</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存数据</span></span><br><span class=\"line\">dir.create<span class=\"punctuation\">(</span><span class=\"string\">&quot;data_cleaning/POS&quot;</span><span class=\"punctuation\">,</span> showWarnings <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> recursive <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>object_pos<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;data_cleaning/POS/object_pos&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 统计样本数和variables数</span></span><br><span class=\"line\">object_pos</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据class统计样本数量，可将class换成group或batch等</span></span><br><span class=\"line\">object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> dplyr<span class=\"operator\">::</span>count<span class=\"punctuation\">(</span><span class=\"built_in\">class</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取peak分布图</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/POS/peak_distributation_plot_positive.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">&lt;-</span> object_pos <span class=\"operator\">%&gt;%</span> `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> show_mz_rt_plot<span class=\"punctuation\">(</span>hex <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看总缺失值数量</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#[1] 786005</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看各样本内的缺失值</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">,</span> by <span class=\"operator\">=</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># sample_06 sample_103  sample_11 sample_112 sample_117  sample_12</span></span><br><span class=\"line\"><span class=\"comment\">#      4017       2713       4064       2981       2920       3846</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看各variable的缺失值</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">,</span> by <span class=\"operator\">=</span> <span class=\"string\">&quot;variable&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#M70T73_POS  M70T53_POS M70T183_POS M70T527_POS M71T695_POS M71T183_POS</span></span><br><span class=\"line\"><span class=\"comment\">#        129          16         155          54         133         169</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图展示缺失值信息，可在下一节生成</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/POS/total_MVs.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">show_missing_values<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">,</span> show_column_names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> show_row_names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图展示各样本缺失值信息，可在下一节生成</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/POS/Samples_MVs.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">show_sample_missing_values<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">,</span> percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;class&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图展示各variables缺失值信息，可在下一节生成</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/POS/Variables_MVs.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">&lt;-</span> show_variable_missing_values<span class=\"punctuation\">(</span></span><br><span class=\"line\">  object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">,</span></span><br><span class=\"line\">  percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  show_x_text <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  show_x_ticks <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;mz&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"峰分布图\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_5.svg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_5.svg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"各variable的缺失值数量\"><br>黑色代表缺失值。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_6.svg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_6.svg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"各样本的缺失值比例\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_7.svg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_7.svg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"各variable的缺失值比例\"></p>\n<h3 id=\"负离子模式-1\"><a href=\"#负离子模式-1\" class=\"headerlink\" title=\"负离子模式\"></a>负离子模式</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载对象</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;mzxml_ms1_data/NEG/Result/object&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">object_neg <span class=\"operator\">&lt;-</span> object</span><br><span class=\"line\">object_neg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读入样本信息</span></span><br><span class=\"line\">sample_info_neg <span class=\"operator\">&lt;-</span> readr<span class=\"operator\">::</span>read_csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;sample_info/sample_info_neg.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg <span class=\"operator\">%&gt;%</span>  extract_sample_info<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#   sample_id group   class injection.order</span></span><br><span class=\"line\"><span class=\"comment\">#1  sample_06  Case Subject               1</span></span><br><span class=\"line\"><span class=\"comment\">#2 sample_103  Case Subject               2</span></span><br><span class=\"line\"><span class=\"comment\">#3  sample_11  Case Subject               3</span></span><br><span class=\"line\"><span class=\"comment\">#4 sample_112  Case Subject               4</span></span><br><span class=\"line\"><span class=\"comment\">#5 sample_117  Case Subject               5</span></span><br><span class=\"line\"><span class=\"comment\">#6  sample_12  Case Subject               6</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg <span class=\"operator\">&lt;-</span> object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> dplyr<span class=\"operator\">::</span>select<span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;group&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;class&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;injection.order&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将sample_info_neg添加至object_neg</span></span><br><span class=\"line\">object_neg <span class=\"operator\">=</span> object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> left_join<span class=\"punctuation\">(</span>sample_info_neg<span class=\"punctuation\">,</span> by <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg <span class=\"operator\">%&gt;%</span> extract_sample_info<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#   sample_id injection.order   class batch  subject_id group</span></span><br><span class=\"line\"><span class=\"comment\">#1  sample_06               4 Subject     1 subject_414  Case</span></span><br><span class=\"line\"><span class=\"comment\">#2 sample_103              71 Subject     1 subject_330  Case</span></span><br><span class=\"line\"><span class=\"comment\">#3  sample_11               6 Subject     1 subject_125  Case</span></span><br><span class=\"line\"><span class=\"comment\">#4 sample_112              78 Subject     1 subject_295  Case</span></span><br><span class=\"line\"><span class=\"comment\">#5 sample_117              80 Subject     1 subject_793  Case</span></span><br><span class=\"line\"><span class=\"comment\">#6  sample_12               8 Subject     1 subject_387  Case</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存数据</span></span><br><span class=\"line\">dir.create<span class=\"punctuation\">(</span><span class=\"string\">&quot;data_cleaning/NEG&quot;</span><span class=\"punctuation\">,</span> showWarnings <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> recursive <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>object_neg<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;data_cleaning/NEG/object_neg&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 统计样本数和variables数</span></span><br><span class=\"line\">object_neg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据class统计样本数量，可将class换成group或batch等</span></span><br><span class=\"line\">object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> dplyr<span class=\"operator\">::</span>count<span class=\"punctuation\">(</span><span class=\"built_in\">class</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取peak分布图</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/NEG/peak_distributation_plot_negtive.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg <span class=\"operator\">%&gt;%</span> `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> show_mz_rt_plot<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看总缺失值数量</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#[1] 748237</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看各样本内的缺失值</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">,</span> by <span class=\"operator\">=</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># sample_06 sample_103  sample_11 sample_112 sample_117  sample_12</span></span><br><span class=\"line\"><span class=\"comment\">#      3029       2766       3298       3100       2912       3053</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看各variable的缺失值</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">,</span> by <span class=\"operator\">=</span> <span class=\"string\">&quot;variable&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#M70T712_NEG M70T527_NEG M70T587_NEG  M70T47_NEG M71T587_NEG M71T641_NEG</span></span><br><span class=\"line\"><span class=\"comment\">#         16         137           2         146          41          19</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图展示缺失值信息，可在下一节生成</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/NEG/total_MVs.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">show_missing_values<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">,</span> show_column_names <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图展示各样本缺失值信息，可在下一节生成</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/NEG/Samples_MVs.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">show_sample_missing_values<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">,</span> percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图展示各variables缺失值信息，可在下一节生成</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/NEG/Variables_MVs.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">&lt;-</span> show_variable_missing_values<span class=\"punctuation\">(</span></span><br><span class=\"line\">  object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">,</span></span><br><span class=\"line\">  percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  show_x_text <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  show_x_ticks <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据清洗（Data-cleaning）\"><a href=\"#数据清洗（Data-cleaning）\" class=\"headerlink\" title=\"数据清洗（Data cleaning）\"></a>数据清洗（Data cleaning）</h2><h3 id=\"查看质量\"><a href=\"#查看质量\" class=\"headerlink\" title=\"查看质量\"></a>查看质量</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 加载数据</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;data_cleaning/POS/object_pos&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;data_cleaning/NEG/object_neg&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将批次号改为字符串</span></span><br><span class=\"line\">object_pos <span class=\"operator\">&lt;-</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> dplyr<span class=\"operator\">::</span>mutate<span class=\"punctuation\">(</span>batch <span class=\"operator\">=</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>batch<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg <span class=\"operator\">&lt;-</span> object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> dplyr<span class=\"operator\">::</span>mutate<span class=\"punctuation\">(</span>batch <span class=\"operator\">=</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>batch<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 先评估数据质量</span></span><br><span class=\"line\">massqc<span class=\"operator\">::</span>massqc_report<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">,</span> path <span class=\"operator\">=</span> <span class=\"string\">&quot;data_cleaning/POS/data_quality_before_data_cleaning&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">massqc<span class=\"operator\">::</span>massqc_report<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">,</span> path <span class=\"operator\">=</span> <span class=\"string\">&quot;data_cleaning/NEG/data_quality_before_data_cleaning&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_8.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_8.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"正离子PCA\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_9.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_9.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"负离子PCA\"><br><font color=\"#FF0000\">从上两图可看出正离子模式下存在严重的批次效应，负离子模式下不存在明显的批次效应。</font></p>\n<h3 id=\"开始清洗\"><a href=\"#开始清洗\" class=\"headerlink\" title=\"开始清洗\"></a>开始清洗</h3><h4 id=\"移除噪音代谢features——缺失值过滤。\"><a href=\"#移除噪音代谢features——缺失值过滤。\" class=\"headerlink\" title=\"移除噪音代谢features——缺失值过滤。\"></a>移除噪音代谢features——缺失值过滤。</h4><p>移除超过20% QC样本中含有MVs以及至少在50%实验组或对照组样本中含有MVs的variables。</p>\n<ul>\n<li><p>正离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看各分组样本量</span></span><br><span class=\"line\">object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> dplyr<span class=\"operator\">::</span>count<span class=\"punctuation\">(</span>group<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     group   n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1    Case 110</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Control 110</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3      QC  39</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># QC样本中的MV占比</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/POS/MVpercentQC.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">&lt;-</span> show_variable_missing_values<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"built_in\">class</span> <span class=\"operator\">==</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计QC中的MV占比</span></span><br><span class=\"line\">qc_id <span class=\"operator\">=</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"built_in\">class</span> <span class=\"operator\">==</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计对照组中的MV占比</span></span><br><span class=\"line\">control_id <span class=\"operator\">=</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>group <span class=\"operator\">==</span> <span class=\"string\">&quot;Control&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计实验组中的MV占比</span></span><br><span class=\"line\">case_id <span class=\"operator\">=</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>group <span class=\"operator\">==</span> <span class=\"string\">&quot;Case&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 整合以上统计信息</span></span><br><span class=\"line\">object_pos <span class=\"operator\">=</span> object_pos <span class=\"operator\">%&gt;%</span> mutate_variable_na_freq<span class=\"punctuation\">(</span>according_to_samples <span class=\"operator\">=</span> qc_id<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> mutate_variable_na_freq<span class=\"punctuation\">(</span>according_to_samples <span class=\"operator\">=</span> control_id<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> mutate_variable_na_freq<span class=\"punctuation\">(</span>according_to_samples <span class=\"operator\">=</span> case_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>extract_variable_info<span class=\"punctuation\">(</span>object_pos<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#variable_id       mz        rt    na_freq na_freq.1 na_freq.2</span></span><br><span class=\"line\"><span class=\"comment\">#1  M70T73_POS 70.04074  73.31705 0.28205128 0.6000000 0.4727273</span></span><br><span class=\"line\"><span class=\"comment\">#2  M70T53_POS 70.06596  52.78542 0.00000000 0.1454545 0.0000000</span></span><br><span class=\"line\"><span class=\"comment\">#3 M70T183_POS 70.19977 182.87981 0.00000000 0.6636364 0.7454545</span></span><br><span class=\"line\"><span class=\"comment\">#4 M70T527_POS 70.36113 526.76657 0.02564103 0.1818182 0.3000000</span></span><br><span class=\"line\"><span class=\"comment\">#5 M71T695_POS 70.56911 694.84592 0.02564103 0.6454545 0.5545455</span></span><br><span class=\"line\"><span class=\"comment\">#6 M71T183_POS 70.75034 182.77790 0.05128205 0.7272727 0.7909091</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移除variables</span></span><br><span class=\"line\">object_pos <span class=\"operator\">&lt;-</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>na_freq <span class=\"operator\">&lt;</span> <span class=\"number\">0.2</span> <span class=\"operator\">&amp;</span> <span class=\"punctuation\">(</span>na_freq.1 <span class=\"operator\">&lt;</span> <span class=\"number\">0.5</span> <span class=\"operator\">|</span> na_freq.2 <span class=\"operator\">&lt;</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_pos</span><br></pre></td></tr></table></figure>\n\n<p> <strong>注</strong>：na_freq、na_freq.1和na_freq.2在此处分别代表某variables 在QC样本、对照组样本和实验组样本中缺失值MV所占的百分比。</p>\n<p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_19.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_19.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"MVpercentQC\"></p>\n</li>\n<li><p>负离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看各分组样本量</span></span><br><span class=\"line\">object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> dplyr<span class=\"operator\">::</span>count<span class=\"punctuation\">(</span>group<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;     group   n</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 1    Case 110</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 2 Control 110</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 3      QC  39</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># QC样本中的MV占比</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/NEG/MVpercentQC.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">&lt;-</span> show_variable_missing_values<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"built_in\">class</span> <span class=\"operator\">==</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计QC中的MV占比</span></span><br><span class=\"line\">qc_id <span class=\"operator\">=</span> object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"built_in\">class</span> <span class=\"operator\">==</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计对照组中的MV占比</span></span><br><span class=\"line\">control_id <span class=\"operator\">=</span> object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>group <span class=\"operator\">==</span> <span class=\"string\">&quot;Control&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计实验组中的MV占比</span></span><br><span class=\"line\">case_id <span class=\"operator\">=</span> object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>group <span class=\"operator\">==</span> <span class=\"string\">&quot;Case&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 整合以上统计信息</span></span><br><span class=\"line\">object_neg <span class=\"operator\">=</span> object_neg <span class=\"operator\">%&gt;%</span> mutate_variable_na_freq<span class=\"punctuation\">(</span>according_to_samples <span class=\"operator\">=</span> qc_id<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> mutate_variable_na_freq<span class=\"punctuation\">(</span>according_to_samples <span class=\"operator\">=</span> control_id<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> mutate_variable_na_freq<span class=\"punctuation\">(</span>according_to_samples <span class=\"operator\">=</span> case_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>extract_variable_info<span class=\"punctuation\">(</span>object_neg<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#variable_id       mz        rt    na_freq na_freq.1 na_freq.2</span></span><br><span class=\"line\"><span class=\"comment\">#1 M70T712_NEG 70.05911 711.97894 0.05128205 0.109090909 0.018181818</span></span><br><span class=\"line\"><span class=\"comment\">#2 M70T527_NEG 70.13902 526.85416 0.33333333 0.509090909 0.618181818</span></span><br><span class=\"line\"><span class=\"comment\">#3 M70T587_NEG 70.31217 587.25330 0.00000000 0.009090909 0.009090909</span></span><br><span class=\"line\"><span class=\"comment\">#4  M70T47_NEG 70.33835  46.57537 0.84615385 0.936363636 0.090909091</span></span><br><span class=\"line\"><span class=\"comment\">#5 M71T587_NEG 70.56315 587.02570 0.17948718 0.145454545 0.163636364</span></span><br><span class=\"line\"><span class=\"comment\">#6 M71T641_NEG 70.70657 641.16672 0.10256410 0.063636364 0.072727273</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移除variables</span></span><br><span class=\"line\">object_neg <span class=\"operator\">&lt;-</span> object_neg <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>na_freq <span class=\"operator\">&lt;</span> <span class=\"number\">0.2</span> <span class=\"operator\">&amp;</span> <span class=\"punctuation\">(</span>na_freq.1 <span class=\"operator\">&lt;</span> <span class=\"number\">0.5</span> <span class=\"operator\">|</span> na_freq.2 <span class=\"operator\">&lt;</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"过滤离群样本（Filter-outlier-samples）\"><a href=\"#过滤离群样本（Filter-outlier-samples）\" class=\"headerlink\" title=\"过滤离群样本（Filter outlier samples）\"></a>过滤离群样本（Filter outlier samples）</h4><ul>\n<li><p>正离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 总览</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/POS/MVpercentALL.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">massdataset<span class=\"operator\">::</span>show_sample_missing_values<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">,</span> color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;group&quot;</span><span class=\"punctuation\">,</span> order_by <span class=\"operator\">=</span> <span class=\"string\">&quot;injection.order&quot;</span><span class=\"punctuation\">,</span> percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> theme<span class=\"punctuation\">(</span>axis.text.x <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>size <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> ggsci<span class=\"operator\">::</span>scale_color_aaas<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测离群样本</span></span><br><span class=\"line\">outlier_samples <span class=\"operator\">=</span> object_pos <span class=\"operator\">%&gt;%</span> `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> scale<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> detect_outlier<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">outlier_samples</span><br><span class=\"line\"><span class=\"comment\">#--------------------</span></span><br><span class=\"line\"><span class=\"comment\">#masscleaner</span></span><br><span class=\"line\"><span class=\"comment\">#--------------------</span></span><br><span class=\"line\"><span class=\"comment\">#1 according_to_na : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#2 according_to_pc_sd : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#3 according_to_pc_mad : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#4 accordint_to_distance : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#4 accordint_to_distance : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#extract all outlier table using extract_outlier_table()</span></span><br><span class=\"line\"></span><br><span class=\"line\">outlier_table <span class=\"operator\">&lt;-</span> extract_outlier_table<span class=\"punctuation\">(</span>outlier_samples<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">outlier_table <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#           according_to_na pc_sd pc_mad accordint_to_distance</span></span><br><span class=\"line\"><span class=\"comment\">#sample_06            FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_103           FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_11            FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_112           FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_117           FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_12            FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"></span><br><span class=\"line\">outlier_table <span class=\"operator\">%&gt;%</span> apply<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span>  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> `&gt;`<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> which<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># #named integer(0)</span></span><br><span class=\"line\"><span class=\"comment\">##无离群样本</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除离群样本，如果有的话</span></span><br><span class=\"line\">need_id_pos <span class=\"operator\">&lt;-</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>outlier_table <span class=\"operator\">%&gt;%</span> apply<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span>  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> `==`<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> which<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_pos <span class=\"operator\">&lt;-</span> object_pos <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>sample_id <span class=\"operator\">%in%</span> need_id_pos<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_20.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_20.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"MVpercentALL\"></p>\n</li>\n<li><p>负离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 总览</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/NEG/MVpercentALL.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">&lt;-</span> massdataset<span class=\"operator\">::</span>show_sample_missing_values<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">,</span> color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;group&quot;</span><span class=\"punctuation\">,</span> order_by <span class=\"operator\">=</span> <span class=\"string\">&quot;injection.order&quot;</span><span class=\"punctuation\">,</span> percentage <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">+</span> theme<span class=\"punctuation\">(</span>axis.text.x <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>size <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> ggsci<span class=\"operator\">::</span>scale_color_aaas<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测离群样本</span></span><br><span class=\"line\">outlier_samples <span class=\"operator\">=</span> object_neg <span class=\"operator\">%&gt;%</span> `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> scale<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> detect_outlier<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">outlier_samples</span><br><span class=\"line\"><span class=\"comment\">#--------------------</span></span><br><span class=\"line\"><span class=\"comment\">#masscleaner</span></span><br><span class=\"line\"><span class=\"comment\">#--------------------</span></span><br><span class=\"line\"><span class=\"comment\">#1 according_to_na : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#2 according_to_pc_sd : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#3 according_to_pc_mad : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#4 accordint_to_distance : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#4 accordint_to_distance : 0 outlier samples.</span></span><br><span class=\"line\"><span class=\"comment\">#extract all outlier table using extract_outlier_table()</span></span><br><span class=\"line\"></span><br><span class=\"line\">outlier_table <span class=\"operator\">&lt;-</span> extract_outlier_table<span class=\"punctuation\">(</span>outlier_samples<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">outlier_table <span class=\"operator\">%&gt;%</span> head<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#           according_to_na pc_sd pc_mad accordint_to_distance</span></span><br><span class=\"line\"><span class=\"comment\">#sample_06            FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_103           FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_11            FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_112           FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_117           FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"><span class=\"comment\">#sample_12            FALSE FALSE  FALSE                 FALSE</span></span><br><span class=\"line\"></span><br><span class=\"line\">outlier_table <span class=\"operator\">%&gt;%</span> apply<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span>  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> `&gt;`<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> which<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># #named integer(0)</span></span><br><span class=\"line\"><span class=\"comment\">##无离群样本</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"缺失值填充（Missing-value-imputation）\"><a href=\"#缺失值填充（Missing-value-imputation）\" class=\"headerlink\" title=\"缺失值填充（Missing value imputation）\"></a>缺失值填充（Missing value imputation）</h2><p>对原始数据中的缺失值进行模拟（missing value recoding）。方法包括：”knn”, “rf” (missForest), “mean”, “median”, “zero”, “minimum”, “bpca”, “svdImpute”, “ppca”。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取正离子模式下的MV数量</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object_pos<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 148907</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 填充正离子模式缺失值</span></span><br><span class=\"line\">object_pos <span class=\"operator\">&lt;-</span> impute_mv<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;knn&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取正离子模式下填充后的MV数量</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object_pos<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取负离子模式下的MV数量</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object_neg<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 146409</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 填充正离子模式缺失值</span></span><br><span class=\"line\">object_neg <span class=\"operator\">&lt;-</span> impute_mv<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_neg<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;knn&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取正离子模式下填充后的MV数量</span></span><br><span class=\"line\">get_mv_number<span class=\"punctuation\">(</span>object_neg<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 0</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据标准化与整合（Data-normalization-and-integration）\"><a href=\"#数据标准化与整合（Data-normalization-and-integration）\" class=\"headerlink\" title=\"数据标准化与整合（Data normalization and integration）\"></a>数据标准化与整合（Data normalization and integration）</h2><p>数据标准化处理， 利用内标（internal standard, IS）进行归一化<font color=\"#FF0000\">待确认是否通过IS实现</font>。</p>\n<ul>\n<li><p>正离子模式</p>\n<p>标准化方法包括：”svr”, “total”, “median”, “mean”, “pqn”, “loess”；整合方法包括：”qc_mean”, “qc_median”, “subject_mean”, “subject_median”。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object_pos <span class=\"operator\">&lt;-</span> normalize_data<span class=\"punctuation\">(</span>object_pos<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;median&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_pos2 <span class=\"operator\">&lt;-</span> integrate_data<span class=\"punctuation\">(</span>object_pos<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;subject_median&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 按批次分组绘制PCA图</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/POS/PC_batch_intergrated.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_pos2 <span class=\"operator\">%&gt;%</span> `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> massqc<span class=\"operator\">::</span>massqc_pca<span class=\"punctuation\">(</span>color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;batch&quot;</span><span class=\"punctuation\">,</span> line <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_10.svg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_10.svg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"标准化后正离子PCA\"></p>\n<ul>\n<li><p>负离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object_neg <span class=\"operator\">&lt;-</span> normalize_data<span class=\"punctuation\">(</span>object_neg<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;median&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg2 <span class=\"operator\">&lt;-</span> integrate_data<span class=\"punctuation\">(</span>object_neg<span class=\"punctuation\">,</span> method <span class=\"operator\">=</span> <span class=\"string\">&quot;subject_median&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 按批次分组绘制PCA图</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;data_cleaning/NEG/PC_batch_intergrated.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg2 <span class=\"operator\">%&gt;%</span> `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> massqc<span class=\"operator\">::</span>massqc_pca<span class=\"punctuation\">(</span>color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;batch&quot;</span><span class=\"punctuation\">,</span> line <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_11.svg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_11.svg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"标准化后负离子PCA\"></p>\n<p><strong>保存数据</strong></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">save<span class=\"punctuation\">(</span>object_pos2<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;data_cleaning/POS/object_pos2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>object_neg2<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;data_cleaning/NEG/object_neg2&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代谢物注释\"><a href=\"#代谢物注释\" class=\"headerlink\" title=\"代谢物注释\"></a>代谢物注释</h2><h3 id=\"加载数据\"><a href=\"#加载数据\" class=\"headerlink\" title=\"加载数据\"></a>加载数据</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;data_cleaning/POS/object_pos2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;data_cleaning/NEG/object_neg2&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将MS2数据添加到mass-dataset\"><a href=\"#将MS2数据添加到mass-dataset\" class=\"headerlink\" title=\"将MS2数据添加到mass_dataset\"></a>将MS2数据添加到mass_dataset</h3><p><strong>如果没有MS2数据，此步不执行应该也可以！</strong><br><font color=\"#FF0000\">？？只有QC样的MS2数据，MS2数据是怎么来的？</font></p>\n<ul>\n<li><p>正离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object_pos2 <span class=\"operator\">&lt;-</span> mutate_ms2<span class=\"punctuation\">(</span></span><br><span class=\"line\">  object <span class=\"operator\">=</span> object_pos2<span class=\"punctuation\">,</span></span><br><span class=\"line\">  column <span class=\"operator\">=</span> <span class=\"string\">&quot;rp&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\"># rp or hilic，对应RPLC（反相色谱）和HILIC（亲水相互作用色谱）</span></span><br><span class=\"line\">  polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;positive&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  ms1.ms2.match.mz.tol <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span><span class=\"comment\"># ppm</span></span><br><span class=\"line\">  ms1.ms2.match.rt.tol <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">,</span><span class=\"comment\"># seconds</span></span><br><span class=\"line\">  path <span class=\"operator\">=</span> <span class=\"string\">&quot;mgf_ms2_data/mgf_ms2_data/POS&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#1043 out of 5101 variable have MS2 spectra.</span></span><br><span class=\"line\"><span class=\"comment\">#Selecting the most intense MS2 spectrum for each peak...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># summary</span></span><br><span class=\"line\">extract_ms2_data<span class=\"punctuation\">(</span>object_pos2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>负离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object_neg2 <span class=\"operator\">&lt;-</span> mutate_ms2<span class=\"punctuation\">(</span></span><br><span class=\"line\">  object <span class=\"operator\">=</span> object_neg2<span class=\"punctuation\">,</span></span><br><span class=\"line\">  column <span class=\"operator\">=</span> <span class=\"string\">&quot;rp&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;negative&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  ms1.ms2.match.mz.tol <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  ms1.ms2.match.rt.tol <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  path <span class=\"operator\">=</span> <span class=\"string\">&quot;mgf_ms2_data/mgf_ms2_data/NEG&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#1092 out of 4104 variable have MS2 spectra.</span></span><br><span class=\"line\"><span class=\"comment\">#Selecting the most intense MS2 spectrum for each peak...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># summary</span></span><br><span class=\"line\">extract_ms2_data<span class=\"punctuation\">(</span>object_neg2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"代谢物注释-1\"><a href=\"#代谢物注释-1\" class=\"headerlink\" title=\"代谢物注释\"></a>代谢物注释</h3><p><font color=#FF0000>需要考虑数据库是RPLC还是HILIC。</font></p>\n<ul>\n<li><p>正离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Annotate features using snyder_database_rplc0.0.3</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;metabolite_annotation/snyder_database_rplc0.0.3.rda&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 查看数据库信息</span></span><br><span class=\"line\">snyder_database_rplc0.0.3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 注释</span></span><br><span class=\"line\">object_pos2 <span class=\"operator\">&lt;-</span> annotate_metabolites_mass_dataset<span class=\"punctuation\">(</span></span><br><span class=\"line\">    object <span class=\"operator\">=</span> object_pos2<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    ms1.match.ppm <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    rt.match.tol <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;positive&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    database <span class=\"operator\">=</span> snyder_database_rplc0.0.3<span class=\"punctuation\">,</span></span><br><span class=\"line\"> threads <span class=\"operator\">=</span><span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Annotate features using orbitrap_database0.0.3</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;metabolite_annotation/orbitrap_database0.0.3.rda&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 查看数据库信息</span></span><br><span class=\"line\">orbitrap_database0.0.3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 注释</span></span><br><span class=\"line\">object_pos2 <span class=\"operator\">&lt;-</span> annotate_metabolites_mass_dataset<span class=\"punctuation\">(</span></span><br><span class=\"line\">    object <span class=\"operator\">=</span> object_pos2<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    ms1.match.ppm <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;positive&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    database <span class=\"operator\">=</span> orbitrap_database0.0.3<span class=\"punctuation\">,</span></span><br><span class=\"line\"> threads <span class=\"operator\">=</span><span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Annotate features using mona_database0.0.3</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;metabolite_annotation/mona_database0.0.3.rda&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 查看数据库信息</span></span><br><span class=\"line\">mona_database0.0.3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 注释</span></span><br><span class=\"line\">object_pos2 <span class=\"operator\">&lt;-</span> annotate_metabolites_mass_dataset<span class=\"punctuation\">(</span></span><br><span class=\"line\">    object <span class=\"operator\">=</span> object_pos2<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    ms1.match.ppm <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;positive&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    database <span class=\"operator\">=</span> mona_database0.0.3<span class=\"punctuation\">,</span></span><br><span class=\"line\"> threads <span class=\"operator\">=</span><span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>annotate_metabolites_mass_dataset 参数解析</strong>：</p>\n<ul>\n<li><strong>ms1.match.ppm</strong>：Precursor match ppm tolerance [25].</li>\n<li><strong>ms2.match.ppm</strong>：Fragment ion match ppm tolerance [30].</li>\n<li><strong>mz.ppm.thr</strong>：Accurate mass tolerance for m&#x2F;z error calculation [400].</li>\n<li><strong>ms2.match.tol</strong>：MS2 match (MS2 similarity) tolerance [0.5].</li>\n<li><strong>fraction.weight</strong>：The weight for matched fragments [0.3].</li>\n<li><strong>dp.forward.weight</strong>：Forward dot product weight [0.6].</li>\n<li><strong>dp.reverse.weight</strong>：Reverse dot product weight [0.1].</li>\n<li><strong>remove_fragment_intensity_cutoff</strong>：remove_fragment_intensity_cutoff [0].</li>\n<li><strong>rt.match.tol</strong>：RT match tolerance [30].</li>\n<li><strong>polarity</strong>：The polarity of data, “positive”or “negative”.</li>\n<li><strong>ce</strong>：Collision energy. Please confirm the CE values in your database. [all].</li>\n<li><strong>column</strong>：”hilic” (HILIC column) or “rp” (reverse phase).</li>\n<li><strong>ms1.match.weight</strong>：The weight of MS1 match for total score calculation [0.25].</li>\n<li><strong>rt.match.weight</strong>：The weight of RT match for total score calculation [0.25].</li>\n<li><strong>ms2.match.weight</strong>：The weight of MS2 match for total score calculation [0.5]</li>\n<li><strong>total.score.tol</strong>：Total score tolerance. The total score are referring to MS-DIAL [0.5]</li>\n<li><strong>candidate.num</strong>：The number of candidate [3]</li>\n</ul>\n</li>\n<li><p>负离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Annotate features using snyder_database_rplc0.0.3</span></span><br><span class=\"line\">object_neg2 <span class=\"operator\">&lt;-</span> annotate_metabolites_mass_dataset<span class=\"punctuation\">(</span></span><br><span class=\"line\">    object <span class=\"operator\">=</span> object_neg2<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    ms1.match.ppm <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    rt.match.tol <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;negative&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    database <span class=\"operator\">=</span> snyder_database_rplc0.0.3<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Annotate features using orbitrap_database0.0.3</span></span><br><span class=\"line\">object_neg2 <span class=\"operator\">&lt;-</span> annotate_metabolites_mass_dataset<span class=\"punctuation\">(</span></span><br><span class=\"line\">    object <span class=\"operator\">=</span> object_neg2<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    ms1.match.ppm <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;negative&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    database <span class=\"operator\">=</span> orbitrap_database0.0.3<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Annotate features using mona_database0.0.3</span></span><br><span class=\"line\">object_neg2 <span class=\"operator\">&lt;-</span> annotate_metabolites_mass_dataset<span class=\"punctuation\">(</span></span><br><span class=\"line\">    object <span class=\"operator\">=</span> object_neg2<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    ms1.match.ppm <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    polarity <span class=\"operator\">=</span> <span class=\"string\">&quot;negative&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    database <span class=\"operator\">=</span> mona_database0.0.3<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"查看注释结果\"><a href=\"#查看注释结果\" class=\"headerlink\" title=\"查看注释结果\"></a>查看注释结果</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>extract_annotation_table<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos2<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">variable_info_pos <span class=\"operator\">&lt;-</span> extract_variable_info<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object_pos2<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>variable_info_pos<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>variable_info_pos<span class=\"operator\">$</span>Level<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">table<span class=\"punctuation\">(</span>variable_info_pos<span class=\"operator\">$</span>Database<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"保存数据\"><a href=\"#保存数据\" class=\"headerlink\" title=\"保存数据\"></a>保存数据</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">save<span class=\"punctuation\">(</span>object_pos2<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;metabolite_annotation/object_pos2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>object_neg2<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;metabolite_annotation/object_neg2&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"统计分析\"><a href=\"#统计分析\" class=\"headerlink\" title=\"统计分析\"></a>统计分析</h2><h3 id=\"加载数据-1\"><a href=\"#加载数据-1\" class=\"headerlink\" title=\"加载数据\"></a>加载数据</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>tidymass<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>tidyverse<span class=\"punctuation\">)</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;metabolite_annotation/object_pos2&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;metabolite_annotation/object_neg2&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"移除未被注释的features\"><a href=\"#移除未被注释的features\" class=\"headerlink\" title=\"移除未被注释的features\"></a>移除未被注释的features</h3><ul>\n<li><p>正离子模式</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object_pos2 <span class=\"operator\">&lt;-</span> object_pos2 <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;annotation_table&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>Level<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>Level <span class=\"operator\">==</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> Level <span class=\"operator\">==</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_pos2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>负离子模式</p>\n  <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object_neg2 <span class=\"operator\">&lt;-</span> object_neg2 <span class=\"operator\">%&gt;%</span> activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;annotation_table&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span><span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>Level<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>Level <span class=\"operator\">==</span> <span class=\"number\">1</span> <span class=\"operator\">|</span> Level <span class=\"operator\">==</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object_neg2</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"合并POS和NEG数据\"><a href=\"#合并POS和NEG数据\" class=\"headerlink\" title=\"合并POS和NEG数据\"></a>合并POS和NEG数据</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># inner merge for samples and full merge for variables</span></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span> </span><br><span class=\"line\">merge_mass_dataset<span class=\"punctuation\">(</span></span><br><span class=\"line\">    x <span class=\"operator\">=</span> object_pos2<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    y <span class=\"operator\">=</span> object_neg2<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    sample_direction <span class=\"operator\">=</span> <span class=\"string\">&quot;inner&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># left, right, inner or full，此处用inner较合理</span></span><br><span class=\"line\">    variable_direction <span class=\"operator\">=</span> <span class=\"string\">&quot;full&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># left, right, inner or full，此处用full合理</span></span><br><span class=\"line\">    sample_by <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\"># merge samples by what columns from sample_info</span></span><br><span class=\"line\">    variable_by <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;variable_id&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;mz&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;rt&quot;</span><span class=\"punctuation\">)</span><span class=\"comment\"># merge variables by what columns from variable_info</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object</span><br></pre></td></tr></table></figure>\n\n<p><strong>名词解释：</strong></p>\n<ul>\n<li>**左连接 (Left join)**：将左表中的所有记录都保留下来，而右表中与左表中记录没有匹配的部分则丢弃。</li>\n<li>**右连接 (Right join)**：将右表中的所有记录都保留下来，而左表中与右表中记录没有匹配的部分则丢弃。</li>\n<li>**内连接 (Inner join)**：只有两个表中都存在的记录才保留下来，否则丢弃。</li>\n<li>**全连接 (Full join)**：将左表和右表中的所有记录都保留下来，如果某个表中的记录没有匹配到另一个表中的记录，则用NULL填充。</li>\n</ul>\n<h3 id=\"Trace-processing-information-of-object\"><a href=\"#Trace-processing-information-of-object\" class=\"headerlink\" title=\"Trace processing information of object\"></a>Trace processing information of object</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dir.create<span class=\"punctuation\">(</span>path <span class=\"operator\">=</span> <span class=\"string\">&quot;statistical_analysis&quot;</span><span class=\"punctuation\">,</span> showWarnings <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">report_parameters<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object<span class=\"punctuation\">,</span> path <span class=\"operator\">=</span> <span class=\"string\">&quot;statistical_analysis/&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基于level和score移除冗余注释代谢物\"><a href=\"#基于level和score移除冗余注释代谢物\" class=\"headerlink\" title=\"基于level和score移除冗余注释代谢物\"></a>基于level和score移除冗余注释代谢物</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object <span class=\"operator\">&lt;-</span> object <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;annotation_table&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>Compound.name<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>Level <span class=\"operator\">==</span> <span class=\"built_in\">min</span><span class=\"punctuation\">(</span>Level<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>SS <span class=\"operator\">==</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>SS<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  slice_head<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span> object <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;annotation_table&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  group_by<span class=\"punctuation\">(</span>variable_id<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>Level <span class=\"operator\">==</span> <span class=\"built_in\">min</span><span class=\"punctuation\">(</span>Level<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>SS <span class=\"operator\">==</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>SS<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  slice_head<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><font color=#FF0000>为何要选最小的level？SS是什么score？</font></p>\n<h3 id=\"样本聚类\"><a href=\"#样本聚类\" class=\"headerlink\" title=\"样本聚类\"></a>样本聚类</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;statistical_analysis/object_final&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 排除QC样本</span></span><br><span class=\"line\">temp_object <span class=\"operator\">&lt;-</span> object_final <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>group <span class=\"operator\">!=</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  scale<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ComplexHeatmap<span class=\"punctuation\">)</span></span><br><span class=\"line\">h1 <span class=\"operator\">&lt;-</span> HeatmapAnnotation<span class=\"punctuation\">(</span><span class=\"built_in\">class</span> <span class=\"operator\">=</span> extract_sample_info<span class=\"punctuation\">(</span>temp_object<span class=\"punctuation\">)</span><span class=\"operator\">$</span>group<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;statistical_analysis/Samples_heatmap.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">massstat<span class=\"operator\">::</span>Heatmap<span class=\"punctuation\">(</span>matrix <span class=\"operator\">=</span> temp_object<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                  name <span class=\"operator\">=</span> <span class=\"string\">&quot;z-score&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                  row_names_gp <span class=\"operator\">=</span> gpar<span class=\"punctuation\">(</span>cex <span class=\"operator\">=</span> <span class=\"number\">0.2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                  column_names_gp <span class=\"operator\">=</span> gpar<span class=\"punctuation\">(</span>cex <span class=\"operator\">=</span> <span class=\"number\">0.2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                  top_annotation <span class=\"operator\">=</span> h1<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_16.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_16.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"样本聚类热图\"></p>\n<h3 id=\"差异表达代谢物\"><a href=\"#差异表达代谢物\" class=\"headerlink\" title=\"差异表达代谢物\"></a>差异表达代谢物</h3><p><font color=#FF0000>如果有多组数据，需要适当增加相应下述代码。“mutate_fc”的逻辑是每运行一次，则在object中增加一列“fc”，当有多个实验组时，可以将先前生成的fc重命名，因此，object中可以包含多个组间比较的fc结果。</font></p>\n<ul>\n<li><p>计算变化倍数</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取对照组样本名列表</span></span><br><span class=\"line\">control_sample_id <span class=\"operator\">=</span> object <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">filter<span class=\"punctuation\">(</span>group <span class=\"operator\">==</span> <span class=\"string\">&quot;Control&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取实验组样本名列表</span></span><br><span class=\"line\">case_sample_id <span class=\"operator\">=</span> object <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">filter<span class=\"punctuation\">(</span>group <span class=\"operator\">==</span> <span class=\"string\">&quot;Case&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#! 如果有多个实验组，参照以上格式在此列出，假设有实验组Case2</span></span><br><span class=\"line\">case2_sample_id <span class=\"operator\">=</span> object <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">filter<span class=\"punctuation\">(</span>group <span class=\"operator\">==</span> <span class=\"string\">&quot;Case2&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">pull<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Calculate fold change，每次只能计算两个分组，如果有多个实验组，则依次将其与对照组比较</span></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span> mutate_fc<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object<span class=\"punctuation\">,</span> </span><br><span class=\"line\">          control_sample_id <span class=\"operator\">=</span> control_sample_id<span class=\"punctuation\">,</span> </span><br><span class=\"line\">          case_sample_id <span class=\"operator\">=</span> case_sample_id<span class=\"punctuation\">,</span> </span><br><span class=\"line\">          mean_median <span class=\"operator\">=</span> <span class=\"string\">&quot;mean&quot;</span><span class=\"punctuation\">)</span><span class=\"comment\">#可选&quot;mean&quot;, &quot;median&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 110 control samples.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 110 case samples.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#! 如果有多个实验组，则需要在此更改fc列的默认名，假设将默认的“fc”改为“fc_case1_vs_control”</span></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span>  object <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">dplyr<span class=\"operator\">::</span>rename<span class=\"punctuation\">(</span>fc_case1_vs_control <span class=\"operator\">=</span> fc<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#! Calculate fold change，每次只能计算两个分组，如果有多个实验组，则依次将其与对照组比较，此处计算Case2与Control</span></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span> mutate_fc<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object<span class=\"punctuation\">,</span> </span><br><span class=\"line\">          control_sample_id <span class=\"operator\">=</span> control_sample_id<span class=\"punctuation\">,</span> </span><br><span class=\"line\">          case_sample_id <span class=\"operator\">=</span> case2_sample_id<span class=\"punctuation\">,</span> </span><br><span class=\"line\">          mean_median <span class=\"operator\">=</span> <span class=\"string\">&quot;mean&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 110 control samples.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 110 case samples.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#! 如果有多个实验组，则需要在此更改fc列的默认名，假设将默认的“fc”改为“fc_case2_vs_control”</span></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span>  object <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">dplyr<span class=\"operator\">::</span>rename<span class=\"punctuation\">(</span>fc_case2_vs_control <span class=\"operator\">=</span> fc<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>计算p值<br><font color=\"#FF0000\">同理，当有多个实验组时，也可以分别计算p值，并将默认的列名“p_value”和“p_value_adjust”重命名，以在object中容纳多组相互比较的p值。</font></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object <span class=\"operator\">&lt;-</span> mutate_p_value<span class=\"punctuation\">(</span></span><br><span class=\"line\">  object <span class=\"operator\">=</span> object<span class=\"punctuation\">,</span></span><br><span class=\"line\">  control_sample_id <span class=\"operator\">=</span> control_sample_id<span class=\"punctuation\">,</span></span><br><span class=\"line\">  case_sample_id <span class=\"operator\">=</span> case_sample_id<span class=\"punctuation\">,</span></span><br><span class=\"line\">  method <span class=\"operator\">=</span> <span class=\"string\">&quot;t.test&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># &quot;t.test&quot;, &quot;wilcox.test&quot;</span></span><br><span class=\"line\">  p_adjust_methods <span class=\"operator\">=</span> <span class=\"string\">&quot;BH&quot;</span><span class=\"comment\"># &quot;holm&quot;, &quot;hochberg&quot;, &quot;hommel&quot;, &quot;bonferroni&quot;, &quot;BH&quot;, &quot;BY&quot;, &quot;fdr&quot;, &quot;none&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 110 control samples.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 110 case samples.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#! 如果涉及多组间的比较，则需重命名默认表头</span></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span>  object <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">dplyr<span class=\"operator\">::</span>rename<span class=\"punctuation\">(</span>p_value_case1_vs_control <span class=\"operator\">=</span> p_value<span class=\"punctuation\">,</span></span><br><span class=\"line\">       p_value_adjust_case1_vs_control <span class=\"operator\">=</span> p_value_adjust<span class=\"punctuation\">)</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">#! 假设存在Case2组</span></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span> mutate_p_value<span class=\"punctuation\">(</span></span><br><span class=\"line\">  object <span class=\"operator\">=</span> object<span class=\"punctuation\">,</span></span><br><span class=\"line\">  control_sample_id <span class=\"operator\">=</span> control_sample_id<span class=\"punctuation\">,</span></span><br><span class=\"line\">  case_sample_id <span class=\"operator\">=</span> case2_sample_id<span class=\"punctuation\">,</span></span><br><span class=\"line\">  method <span class=\"operator\">=</span> <span class=\"string\">&quot;t.test&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  p_adjust_methods <span class=\"operator\">=</span> <span class=\"string\">&quot;BH&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 110 control samples.</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; 110 case samples.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#! 如果涉及多组间的比较，则需重命名默认表头</span></span><br><span class=\"line\">object <span class=\"operator\">&lt;-</span>  object <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">dplyr<span class=\"operator\">::</span>rename<span class=\"punctuation\">(</span>p_value_case2_vs_control <span class=\"operator\">=</span> p_value<span class=\"punctuation\">,</span></span><br><span class=\"line\">       p_value_adjust_case2_vs_control <span class=\"operator\">=</span> p_value_adjust<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>绘制火山图</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;statistical_analysis/Volcano.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  p<span class=\"operator\">&lt;-</span> volcano_plot<span class=\"punctuation\">(</span></span><br><span class=\"line\">      object <span class=\"operator\">=</span> object<span class=\"punctuation\">,</span></span><br><span class=\"line\">      fc_column_name <span class=\"operator\">=</span> <span class=\"string\">&quot;fc&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t  p_value_column_name <span class=\"operator\">=</span> <span class=\"string\">&quot;p_value_adjust&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t  fc_up_cutoff <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">\t  fc_down_cutoff <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t  p_value_cutoff <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      add_text <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      text_from <span class=\"operator\">=</span> <span class=\"string\">&quot;Compound.name&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      point_size_scale <span class=\"operator\">=</span> <span class=\"string\">&quot;p_value_adjust&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span> </span><br><span class=\"line\">  </span><br><span class=\"line\">  p <span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.5</span><span class=\"punctuation\">,</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_12.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_12.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"火山图\"></p>\n<p><font color=\"#FF0000\">假设存在Case2，绘制火山图。</font></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;statistical_analysis/Volcano2.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p<span class=\"operator\">&lt;-</span> volcano_plot<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object<span class=\"punctuation\">,</span></span><br><span class=\"line\">    fc_column_name <span class=\"operator\">=</span> <span class=\"string\">&quot;fc_case2_vs_control&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># 重命名后</span></span><br><span class=\"line\"> p_value_column_name <span class=\"operator\">=</span> <span class=\"string\">&quot;p_value_adjust_case2_vs_control&quot;</span><span class=\"punctuation\">,</span><span class=\"comment\"># 重命名后</span></span><br><span class=\"line\"> fc_up_cutoff <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\"> fc_down_cutoff <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> p_value_cutoff <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">           add_text <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">           text_from <span class=\"operator\">=</span> <span class=\"string\">&quot;Compound.name&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">           point_size_scale <span class=\"operator\">=</span> <span class=\"string\">&quot;p_value_adjust_case2_vs_control&quot;</span><span class=\"punctuation\">)</span> <span class=\"comment\"># 重命名后</span></span><br><span class=\"line\"></span><br><span class=\"line\">p <span class=\"operator\">+</span> scale_size_continuous<span class=\"punctuation\">(</span><span class=\"built_in\">range</span> <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0.5</span><span class=\"punctuation\">,</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"保存结果\"><a href=\"#保存结果\" class=\"headerlink\" title=\"保存结果\"></a>保存结果</h3><ul>\n<li><p>保存差异表达代谢物结果。如果有多个实验组，则将下述代码中的“fc”和“p_value_adjust”更改为重命名后的名称，并分别保存到不同的文件中。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">differential_metabolites <span class=\"operator\">&lt;-</span> extract_variable_info<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> object<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>fc <span class=\"operator\">&gt;</span> <span class=\"number\">2</span> <span class=\"operator\">|</span> fc <span class=\"operator\">&lt;</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> filter<span class=\"punctuation\">(</span>p_value_adjust <span class=\"operator\">&lt;</span> <span class=\"number\">0.05</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">readr<span class=\"operator\">::</span>write_csv<span class=\"punctuation\">(</span>differential_metabolites<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;statistical_analysis/differential_metabolites.csv&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>保存结果对象</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">object_final <span class=\"operator\">&lt;-</span> object</span><br><span class=\"line\"></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>object_final<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;statistical_analysis/object_final&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"绘制热图\"><a href=\"#绘制热图\" class=\"headerlink\" title=\"绘制热图\"></a>绘制热图</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_object <span class=\"operator\">&lt;-</span> object_final <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>sample_id <span class=\"operator\">%in%</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span>control_sample_id<span class=\"punctuation\">,</span> case_sample_id<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>variable_id <span class=\"operator\">%in%</span> differential_metabolites<span class=\"operator\">$</span>variable_id<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  scale<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ComplexHeatmap<span class=\"punctuation\">)</span></span><br><span class=\"line\">h1 <span class=\"operator\">&lt;-</span> HeatmapAnnotation<span class=\"punctuation\">(</span><span class=\"built_in\">class</span> <span class=\"operator\">=</span> extract_sample_info<span class=\"punctuation\">(</span>temp_object<span class=\"punctuation\">)</span><span class=\"operator\">$</span>group<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;statistical_analysis/diff_heatmap.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">massstat<span class=\"operator\">::</span>Heatmap<span class=\"punctuation\">(</span>matrix <span class=\"operator\">=</span> temp_object<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                  name <span class=\"operator\">=</span> <span class=\"string\">&quot;z-score&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                  row_names_gp <span class=\"operator\">=</span> gpar<span class=\"punctuation\">(</span>cex <span class=\"operator\">=</span> <span class=\"number\">0.4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                  column_names_gp <span class=\"operator\">=</span> gpar<span class=\"punctuation\">(</span>cex <span class=\"operator\">=</span> <span class=\"number\">0.2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                  top_annotation <span class=\"operator\">=</span> h1<span class=\"punctuation\">,</span></span><br><span class=\"line\">                  row_labels <span class=\"operator\">=</span> extract_variable_info<span class=\"punctuation\">(</span>temp_object<span class=\"punctuation\">)</span><span class=\"operator\">$</span>Compound.name<span class=\"punctuation\">,</span></span><br><span class=\"line\">                  border <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>  <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_17.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_17.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"显著差异代谢物热图\"></p>\n<h2 id=\"代谢通路富集\"><a href=\"#代谢通路富集\" class=\"headerlink\" title=\"代谢通路富集\"></a>代谢通路富集</h2><h3 id=\"导入数据\"><a href=\"#导入数据\" class=\"headerlink\" title=\"导入数据\"></a>导入数据</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>tidymass<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>tidyverse<span class=\"punctuation\">)</span></span><br><span class=\"line\">load<span class=\"punctuation\">(</span><span class=\"string\">&quot;statistical_analysis/object_final&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"富集\"><a href=\"#富集\" class=\"headerlink\" title=\"富集\"></a>富集</h4><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dir.create<span class=\"punctuation\">(</span>path <span class=\"operator\">=</span> <span class=\"string\">&quot;pathway_enrichment&quot;</span><span class=\"punctuation\">,</span> showWarnings <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">diff_metabolites <span class=\"operator\">&lt;-</span> object_final <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>p_value_adjust <span class=\"operator\">&lt;</span> <span class=\"number\">0.05</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  extract_variable_info<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>diff_metabolites<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加载KEGG-human-pathway数据库\"><a href=\"#加载KEGG-human-pathway数据库\" class=\"headerlink\" title=\"加载KEGG human pathway数据库\"></a>加载KEGG human pathway数据库</h3><p><font color=#FF0000>可选数据库：kegg_hsa_pathway，keggMS1database，query_id_kegg，hmdb_pathway，hmdbMS1Database，query_id_hmdb。</font></p>\n<p><strong>？？这些数据库的区别是什么？</strong></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data<span class=\"punctuation\">(</span><span class=\"string\">&quot;kegg_hsa_pathway&quot;</span><span class=\"punctuation\">,</span> package <span class=\"operator\">=</span> <span class=\"string\">&quot;metpath&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">kegg_hsa_pathway</span><br><span class=\"line\"></span><br><span class=\"line\">get_pathway_class<span class=\"punctuation\">(</span>kegg_hsa_pathway<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移除疾病相关通路!根据课题选择是否移除？</span></span><br><span class=\"line\">pathway_class <span class=\"operator\">=</span> metpath<span class=\"operator\">::</span>pathway_class<span class=\"punctuation\">(</span>kegg_hsa_pathway<span class=\"punctuation\">)</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>pathway_class<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">remain_idx <span class=\"operator\">=</span> pathway_class <span class=\"operator\">%&gt;%</span> unlist<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> stringr<span class=\"operator\">::</span>str_detect<span class=\"punctuation\">(</span><span class=\"string\">&quot;Disease&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> `!`<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> which<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pathway_database <span class=\"operator\">=</span> kegg_hsa_pathway<span class=\"punctuation\">[</span>remain_idx<span class=\"punctuation\">]</span></span><br><span class=\"line\">pathway_database</span><br><span class=\"line\"></span><br><span class=\"line\">kegg_id <span class=\"operator\">&lt;-</span>  diff_metabolites<span class=\"operator\">$</span>KEGG.ID </span><br><span class=\"line\">kegg_id <span class=\"operator\">&lt;-</span>  kegg_id<span class=\"punctuation\">[</span><span class=\"operator\">!</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>kegg_id<span class=\"punctuation\">)</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\">result <span class=\"operator\">&lt;-</span> enrich_kegg<span class=\"punctuation\">(</span></span><br><span class=\"line\">    query_id <span class=\"operator\">=</span> kegg_id<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    query_type <span class=\"operator\">=</span> <span class=\"string\">&quot;compound&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    id_type <span class=\"operator\">=</span> <span class=\"string\">&quot;KEGG&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    pathway_database <span class=\"operator\">=</span> pathway_database<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    p_cutoff <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    p_adjust_method <span class=\"operator\">=</span> <span class=\"string\">&quot;BH&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">    threads <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">result</span><br><span class=\"line\"></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>result<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;pathway_enrichment/result&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"绘制结果\"><a href=\"#绘制结果\" class=\"headerlink\" title=\"绘制结果\"></a>绘制结果</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#  bar plot</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;pathway_enrichment/barplot.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">enrich_bar_plot<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> result<span class=\"punctuation\">,</span> x_axis <span class=\"operator\">=</span> <span class=\"string\">&quot;p_value&quot;</span><span class=\"punctuation\">,</span> cutoff <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># scatter plot</span></span><br><span class=\"line\">pdf<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;pathway_enrichment/scatter_plot.pdf&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">enrich_scatter_plot<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> result<span class=\"punctuation\">,</span> y_axis <span class=\"operator\">=</span> <span class=\"string\">&quot;p_value&quot;</span><span class=\"punctuation\">,</span> y_axis_cutoff <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># network</span></span><br><span class=\"line\">tiff<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;pathway_enrichment/network.tiff&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">enrich_network<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> result<span class=\"punctuation\">,</span> point_size <span class=\"operator\">=</span> <span class=\"string\">&quot;p_value&quot;</span><span class=\"punctuation\">,</span> p_cutoff <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">,</span> only_significant_pathway <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_13.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_13.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"KEGG富集bar plot\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_14.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_14.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"KEGG富集scatter plot\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_15.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_15.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"KEGG富集network\"></p>\n<h2 id=\"Correlation-network-analysis\"><a href=\"#Correlation-network-analysis\" class=\"headerlink\" title=\"Correlation network analysis\"></a>Correlation network analysis</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">temp_object <span class=\"operator\">&lt;-</span> object_final <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>sample_id <span class=\"operator\">%in%</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span>control_sample_id<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  activate_mass_dataset<span class=\"punctuation\">(</span>what <span class=\"operator\">=</span> <span class=\"string\">&quot;variable_info&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  filter<span class=\"punctuation\">(</span>variable_id <span class=\"operator\">%in%</span> diff_metabolites<span class=\"operator\">$</span>variable_id<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  `+`<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  <span class=\"built_in\">log</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  scale<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ggraph<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>tidygraph<span class=\"punctuation\">)</span></span><br><span class=\"line\">graph_data <span class=\"operator\">&lt;-</span> convert_mass_dataset2graph<span class=\"punctuation\">(</span></span><br><span class=\"line\">    object <span class=\"operator\">=</span> temp_object<span class=\"punctuation\">,</span></span><br><span class=\"line\">    margin <span class=\"operator\">=</span> <span class=\"string\">&quot;variable&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    cor_method <span class=\"operator\">=</span> <span class=\"string\">&quot;spearman&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    p_adjust_cutoff <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    p_value_cutoff <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    pos_cor_cutoff <span class=\"operator\">=</span> <span class=\"number\">0.7</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    neg_cor_cutoff <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"number\">0.7</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span> </span><br><span class=\"line\">  mutate<span class=\"punctuation\">(</span>Degree <span class=\"operator\">=</span> centrality_degree<span class=\"punctuation\">(</span>mode <span class=\"operator\">=</span> <span class=\"string\">&#x27;all&#x27;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>extrafont<span class=\"punctuation\">)</span></span><br><span class=\"line\">loadfonts<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>showtext<span class=\"punctuation\">)</span></span><br><span class=\"line\">showtext_auto<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot <span class=\"operator\">&lt;-</span> </span><br><span class=\"line\">ggraph<span class=\"punctuation\">(</span>graph <span class=\"operator\">=</span> graph_data<span class=\"punctuation\">,</span> layout <span class=\"operator\">=</span> <span class=\"string\">&quot;kk&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_edge_fan<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>color <span class=\"operator\">=</span> correlation<span class=\"punctuation\">,</span></span><br><span class=\"line\">                    <span class=\"comment\">#width = -log((p_adjust+0.1), 10)),</span></span><br><span class=\"line\">                show.legend <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  geom_node_point<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>size <span class=\"operator\">=</span> Degree<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  shadowtext<span class=\"operator\">::</span>geom_shadowtext<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> x<span class=\"punctuation\">,</span> y <span class=\"operator\">=</span> y<span class=\"punctuation\">,</span></span><br><span class=\"line\">                                  label <span class=\"operator\">=</span> Compound.name<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                              bg.colour <span class=\"operator\">=</span> <span class=\"string\">&quot;white&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                              colour <span class=\"operator\">=</span> <span class=\"string\">&quot;black&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span></span><br><span class=\"line\">  theme_graph<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\">  scale_edge_color_gradient2<span class=\"punctuation\">(</span>low <span class=\"operator\">=</span> <span class=\"string\">&quot;darkblue&quot;</span><span class=\"punctuation\">,</span> mid <span class=\"operator\">=</span> <span class=\"string\">&quot;white&quot;</span><span class=\"punctuation\">,</span> high <span class=\"operator\">=</span> <span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">ggsave<span class=\"punctuation\">(</span>plot<span class=\"punctuation\">,</span> filename <span class=\"operator\">=</span> <span class=\"string\">&quot;pathway_enrichment/cor_network.pdf&quot;</span><span class=\"punctuation\">,</span> width <span class=\"operator\">=</span> <span class=\"number\">12</span><span class=\"punctuation\">,</span> height <span class=\"operator\">=</span> <span class=\"number\">7</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_18.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_18.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"代谢物Correlation network\"></p>\n<h1 id=\"术语\"><a href=\"#术语\" class=\"headerlink\" title=\"术语\"></a>术语</h1><ul>\n<li><strong>HILIC</strong>（亲水相互作用色谱）&amp; <strong>RPLC</strong>（反相色谱）：RPLC 色谱柱主要使用非极性固定相（C18、C8 等），而 HILIC 色谱柱则使用极性固定相（二氧化硅、酰胺等）。两种技术采用的流动相通常由乙腈和水组成，这使得两种液相色谱模式之间可以实现轻松切换。HILIC 和 RPLC 流动相的主要区别在于溶剂洗脱强度。对于 RPLC，乙腈是强洗脱溶剂。但对于HILIC，水是强洗脱溶剂。对于 RPLC，得到的色谱图通常是极性分析物到非极性分析物，而 HILIC 则相反。这种相反的洗脱顺序使 HILIC 成为更常用的 RPLC 的一个很好的补充技术。对于极性分析物和离子化分析物尤其如此，它们在 HILIC 模式下的保留时间更长。</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"http://www.bioengx.com/%E8%B4%A8%E8%B0%B1%E5%88%86%E6%9E%90%E6%9C%AF%E8%AF%AD%E6%9C%80%E5%85%A8%E8%A7%A3%E8%AF%BB/\">质谱分析术语最全解读</a></li>\n<li><a href=\"https://www.tidymass.org/start/whole_workflow/\">Whole workflow using tidymass</a></li>\n<li><a href=\"https://www.agilent.com/cs/library/applications/application-note-hilic%20versus-rplc-5994-1137zh-cn-agilent.pdf\">极性分子的保留和分离 ― 关于何时使用 HILIC 与反相液相色谱柱的详细研究</a></li>\n</ul>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"代谢组","path":"api/tags/代谢组.json"}]},{"title":"宏病毒组分析流程1-VirSorter2","slug":"宏病毒组分析流程1-VirSorter2","date":"2021-12-02T01:35:30.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/宏病毒组分析流程1-VirSorter2.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h1><ul>\n<li><p>安装主程序及依赖</p>\n<p>:::default</p>\n<ul>\n<li><a href=\"https://bitbucket.org/MAVERICLab/virsorter2/src/master\">VirSorter2</a> (version &gt;&#x3D;2.2.3)</li>\n<li><a href=\"https://bitbucket.org/berkeleylab/checkv/src/master\">CheckV</a> (version &gt;&#x3D;0.7.0)</li>\n<li><a href=\"https://github.com/shafferm/DRAM\">DRAMv</a> (version &gt;&#x3D;1.2.0)<br>:::</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n virome virsorter=2 checkv dram</span><br><span class=\"line\">conda activate virome</span><br></pre></td></tr></table></figure></li>\n<li><p>下载数据库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># vs2 db: db-vs2 ~ 10 min</span></span><br><span class=\"line\">virsorter setup -d /new_data/hualin/db/db-vs2 -j 50</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># checkv db: checkv-db-v1.0  &lt; 5 mins</span></span><br><span class=\"line\">checkv download_database /new_data/hualin/db/checkv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># DRAMv: db-dramv ~5h and ~60GB of memory</span></span><br><span class=\"line\">DRAM-setup.py prepare_databases --skip_uniref --output_dir db-dramv</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"预测\"><a href=\"#预测\" class=\"headerlink\" title=\"预测\"></a>预测</h1><ul>\n<li><p>获取测试数据</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O test.fa https://bitbucket.org/MAVERICLab/virsorter2/raw/15a21fa9c1ee1d2af52b0148b167292e549d356e/test/test-for-sop.fa</span><br></pre></td></tr></table></figure></li>\n<li><p>运行VirSorter2</p>\n<p>  +++info 命令解析</p>\n<ul>\n<li>首先以0.5 的score阈值运行VirSorter2 以保证最大的灵敏度。</li>\n<li>只关注噬菌体 (dsDNA and ssDNA phage)，可选dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae。</li>\n<li>序列最小长度为5000 bp，后续病毒分类的最低要求如此。 </li>\n<li>可根据自己的CPU核心数自行调整 “-j”。</li>\n<li>“–keep-original-seq” 保留了环状和接近完整的病毒contigs (score &gt;0.8 as a whole sequence)，后续将通过checkV修剪其尾端的潜在宿主基因并处理重复的环状contigs片段。<br>  +++</li>\n</ul>\n<p>  :::default<br>  Time: 31m7.310s with a real dataset of 90.52 MB and 207,544 sequences<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virsorter run --keep-original-seq -w vs2-pass1 -i test.fa --include-groups dsDNAphage,ssDNA --min-length 5000  --min-score 0.5 -j 50 all</span><br></pre></td></tr></table></figure>\n\n<p>  +++primary 参数解析<br>  -w 指定输出目录<br>  -i 指定输入序列<br>  --min-length 过滤短序列<br>  --min-score 分数阈值<br>  --keep-original-seq 保留环状和接近完整的病毒contigs<br>  --include-groups 指定包含的病毒类型，用“,”分隔。可选：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br>  -j 线程数<br>  all 直接写上就可以<br>  +++</p>\n<p>  +++success 结果解析</p>\n<ul>\n<li><p>final-viral-combined.fa: 病毒序列</p>\n<ul>\n<li>鉴定为病毒的完整序列（标识为后缀 ||full）；</li>\n<li>鉴定为病毒的部分序列（用后缀 ||{i}_partial 标识）； {i} 可以是从 0 到该Contig中发现的最大病毒片段数的数字；</li>\n<li>带有<ruby>标志基因<rt>hallmark gene</rt></ruby>的短序列（少于两个基因）被鉴定为病毒（用后缀 ||lt2gene 标识）；</li>\n</ul>\n</li>\n<li><p>final-viral-score.tsv: 每个病毒序列的评分跨组和一些关键特征，这可以用于进一步过滤</p>\n<ul>\n<li>sequence name</li>\n<li>score of each viral sequences across groups (多列)</li>\n<li>max score across groups</li>\n<li>max score group</li>\n<li>contig length</li>\n<li>hallmark gene count</li>\n<li>viral gene %</li>\n<li>nonviral gene %</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n      <table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n          <tr>\n          <td>seqname</td>\n          <td>dsDNAphage</td>\n          <td>NCLDV</td>\n          <td>RNA</td>\n          <td>ssDNA</td>\n          <td>lavidaviridae</td>\n          <td>max_score</td>\n          <td>max_score_group</td>\n          <td>length</td>\n          <td>hallmark</td>\n          <td>viral</td>\n          <td>cellular</td>\n          </tr>\n          <tr>\n          <td>NODE_5_length_17317_cov_8.385876&#124;&#124;full</td>\n          <td>0.993</td>\n          <td>0.847</td>\n          <td>0.005</td>\n          <td>0.060</td>\n          <td>0.467</td>\n          <td>0.993</td>\n          <td>dsDNAphage</td>\n          <td>17315</td>\n          <td>2</td>\n          <td>64.700</td>\n          <td>5.900</td>\n          </tr>\n          <tr>\n          <td>NODE_6_length_16611_cov_115.615064&#124;&#124;full</td>\n          <td>0.920</td>\n          <td>0.207</td>\n          <td>0.035</td>\n          <td>0.087</td>\n          <td>0.053</td>\n          <td>0.920</td>\n          <td>dsDNAphage</td>\n          <td>16610</td>\n          <td>0</td>\n          <td>3.200</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_8_length_14848_cov_778.417157&#124;&#124;full</td>\n          <td>1.000</td>\n          <td>0.220</td>\n          <td>0.105</td>\n          <td>0.380</td>\n          <td>0.627</td>\n          <td>1.000</td>\n          <td>dsDNAphage</td>\n          <td>14848</td>\n          <td>15</td>\n          <td>100.000</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_16_length_12563_cov_14.331948&#124;&#124;full</td>\n          <td>0.973</td>\n          <td>0.200</td>\n          <td>0.165</td>\n          <td>0.273</td>\n          <td>0.227</td>\n          <td>0.973</td>\n          <td>dsDNAphage</td>\n          <td>12083</td>\n          <td>0</td>\n          <td>8.000</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_17_length_11885_cov_350.043956&#124;&#124;full</td>\n          <td>0.653</td>\n          <td>0.513</td>\n          <td>0.050</td>\n          <td>0.080</td>\n          <td>0.047</td>\n          <td>0.653</td>\n          <td>dsDNAphage</td>\n          <td>11885</td>\n          <td>0</td>\n          <td>9.100</td>\n          <td>0.000</td>\n          </tr>\n          <tr>\n          <td>NODE_21_length_11527_cov_216.405073&#124;&#124;full</td>\n          <td>0.620</td>\n          <td>0.407</td>\n          <td>0.000</td>\n          <td>0.013</td>\n          <td>0.060</td>\n          <td>0.620</td>\n          <td>dsDNAphage</td>\n          <td>11526</td>\n          <td>0</td>\n          <td>10.500</td>\n          <td>5.300</td>\n          </tr>\n          <tr>\n          <td>NODE_23_length_11316_cov_8.144303&#124;&#124;full</td>\n          <td>0.367</td>\n          <td>0.540</td>\n          <td>0.010</td>\n          <td>0.000</td>\n          <td>0.400</td>\n          <td>0.540</td>\n          <td>NCLDV</td>\n          <td>11313</td>\n          <td>1</td>\n          <td>23.100</td>\n          <td>7.700</td>\n          </tr>\n      </table>\n  </div>\n  \n<p>  :::warning<br>  不同病毒类群的分类器并非相互排斥，它们的<ruby>目标病毒序列空间<rt>target viral sequence space</rt></ruby>可能存在重叠，这意味着该信息不应被使用或当作<ruby>可靠的分类<rt>reliable taxonomic classification</rt></ruby>。VirSorter2的用途仅限于病毒鉴定。<br>  :::</p>\n<ul>\n<li><p>final-viral-boundary.tsv: 带有边界信息的表 (与其他两个文件相比，可能有额外的记录，应该忽略)。</p>\n<p>only some of the columns in this file might be useful:</p>\n<ul>\n<li>seqname: original sequence name</li>\n<li>trim_orf_index_start, trim_orf_index_end: start and end ORF index on orignal sequence of identified viral sequence</li>\n<li>trim_bp_start, trim_bp_end: start and end position on orignal sequence of identified viral sequence</li>\n<li>trim_pr: score of final trimmed viral sequence</li>\n<li>partial: full sequence as viral or partial sequence as viral; this is defined when a full sequence has score &gt; score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)</li>\n<li>pr_full: score of the original sequence</li>\n<li>hallmark_cnt: hallmark gene count</li>\n<li>group: the classifier of viral group that gives high score; this should NOT be used as reliable classification</li>\n</ul>\n</li>\n</ul>\n  <div style=\"width:100%;overflow:scroll;\">\n      <table border=\"1\" rules=\"all\" style=\"width:2000px; height:100px; text-align:center\">\n          <tr>\n      <td>seqname</td>\n      <td>trim_orf_index_start</td>\n      <td>trim_orf_index_end</td>\n      <td>trim_bp_start</td>\n      <td>trim_bp_end</td>\n      <td>trim_pr</td>\n      <td>trim_pr_max</td>\n      <td>prox_orf_index_start</td>\n      <td>prox_orf_index_end</td>\n      <td>prox_bp_start</td>\n      <td>prox_bp_end</td>\n      <td>prox_pr</td>\n      <td>prox_pr_max</td>\n      <td>partial</td>\n      <td>full_orf_index_start</td>\n      <td>full_orf_index_end</td>\n      <td>full_bp_start</td>\n      <td>full_bp_end</td>\n      <td>pr_full</td>\n      <td>arc</td>\n      <td>bac</td>\n      <td>euk</td>\n      <td>vir</td>\n      <td>mix</td>\n      <td>unaligned</td>\n      <td>hallmark_cnt</td>\n      <td>group</td>\n      <td>shape</td>\n      <td>seqname_new</td>\n          </tr>\n          <tr>\n      <td>NODE_999_length_4026_cov_7.610929</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>0.547</td>\n      <td>0.547</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4025</td>\n      <td>0.547</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>dsDNAphage</td>\n      <td>linear</td>\n      <td>NODE_999_length_4026_cov_7.610929||full</td>\n          </tr>\n          <tr>\n      <td>NODE_9999_length_1276_cov_11.598690</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>0.955</td>\n      <td>0.955</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1274</td>\n      <td>0.955</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_9999_length_1276_cov_11.598690||full</td>\n          </tr>\n          <tr>\n      <td>NODE_99999_length_314_cov_4.000000</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>0.57</td>\n      <td>0.57</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>287</td>\n      <td>0.57</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>50.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_99999_length_314_cov_4.000000||full</td>\n          </tr>\n          <tr>\n      <td>NODE_99992_length_314_cov_4.389961</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>0.747</td>\n      <td>0.747</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>275</td>\n      <td>0.747</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>ssDNA</td>\n      <td>linear</td>\n      <td>NODE_99992_length_314_cov_4.389961||full</td>\n          </tr>\n          <tr>\n      <td>NODE_9997_length_1276_cov_44.113841</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>0.98</td>\n      <td>0.98</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>nan</td>\n      <td>nan</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1240</td>\n      <td>0.98</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>50.0</td>\n      <td>50.0</td>\n      <td>0</td>\n      <td>RNA</td>\n      <td>linear</td>\n      <td>NODE_9997_length_1276_cov_44.113841||full</td>\n          </tr>\n      </table>\n  </div>\n  \n<p>  :::warning<br>  在<ruby>原病毒<rt>provirus </rt></ruby>提取过程中，为了获得更好的敏感性，VirSorter2有时会高估病毒序列的大小。建议清除这些前病毒预测，以去除预测病毒区域边缘的潜在宿主基因，例如使用<a href=\"https://bitbucket.org/berkeleylab/checkv\">CheckV</a>等工具。<br>  :::</p>\n<p>  :::primary<br>  How to pick a score cutoff?<br>  :::</p>\n<p>  一般来说，score&gt;0.9的人为高置信度。得分在 0.5 到 0.9 之间的可能是病毒和非病毒的混合体。很难确定区分病毒和非病毒的最佳分数，因为它取决于宿主序列和未知序列的百分比。因此，[建议使用默认截止值 (0.5) 以获得最大灵敏度，然后使用 checkV 应用质量检查步骤以消除误报（预测完整性除外）]{.rainbow}。&#x3D;&#x3D;请继续下面的流程。&#x3D;&#x3D;<br>  +++</p>\n</li>\n<li><p>运行checkV</p>\n<p>  +++info 命令解析<br>  Score阈值设为0.5时，VirSorter2结果中可能存在一些非病毒序列或区域。因此，使用CheckV对VirSorter2的结果进行质量控制，并修剪在<ruby>原病毒<rt>proviruses</rt></ruby>末端留下的潜在宿主区域。可以根据CPU内核的可用性调整-t选项。<br>  +++</p>\n<p>  :::default<br>  Time: 0m28.795s<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checkv end_to_end vs2-pass1/final-viral-combined.fa checkv -t 50 -d /new_data/hualin/db/checkv/checkv-db-v1.0</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>.&#x2F;checkv&#x2F;</li>\n<li>completeness.tsv</li>\n<li>complete_genomes.tsv</li>\n<li>contamination.tsv</li>\n<li>proviruses.fna</li>\n<li>quality_summary.tsv</li>\n<li>viruses.fna</li>\n<li>tmp<br>  +++</li>\n</ul>\n</li>\n<li><p>再次运行VirSorter2 </p>\n<p>+++info 命令解析</p>\n<ul>\n<li>再次利用checkV-trimmed序列运行VirSorter2以得到”affi-contigs.tab”文件，该文件将作为DRAMv的输入以鉴定AMGs。</li>\n<li>注意”--seqname-suffix-off”选项保留了原始的输入序列名称，因为我们确信在本步骤中，不可能从同一条contig中获得&gt;1个原病毒。</li>\n<li>“--viral-gene-enrich-off”选项关闭了病毒基因要多于宿主基因的要求，以确保VirSorter2在这一步不做任何筛查。</li>\n<li>以上两个选项需要VirSorter2版本&gt;&#x3D;2.2.1。</li>\n<li>可选所有病毒：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br>+++</li>\n</ul>\n<p>:::default<br>  Time: 18m30.896s<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> checkv/proviruses.fna checkv/viruses.fna &gt; checkv/combined.fna</span><br><span class=\"line\"></span><br><span class=\"line\">virsorter run --seqname-suffix-off --viral-gene-enrich-off --provirus-off --prep-for-dramv -i checkv/combined.fna -w vs2-pass2 --include-groups dsDNAphage,ssDNA --min-length 5000 --min-score 0.5 -j 50 all</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>.&#x2F;vs2-pass2&#x2F;</li>\n<li>inal-viral-combined.fa</li>\n<li>final-viral-score.tsv</li>\n<li>for-dramv&#x2F;final-viral-combined-for-dramv.fa</li>\n<li>for-dramv&#x2F;viral-affi-contigs-for-dramv.tab<br>  +++</li>\n</ul>\n</li>\n<li><p>运行DRAMv</p>\n<p>+++info 命令解析<br>使用DRAMv注释鉴定的病毒序列，以用于后续<ruby>人工整理<rt>manual curation</rt></ruby>。可通过”--threads”控制调用的CPU核心数。<br>+++</p>\n<p>:::default<br>  Time: 8.81h<br>  :::</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># step 1 annotate 耗时步骤，建议投后台运行</span></span><br><span class=\"line\">DRAM-v.py annotate -i vs2-pass2/for-dramv/final-viral-combined-for-dramv.fa -v vs2-pass2/for-dramv/viral-affi-contigs-for-dramv.tab -o dramv-annotate --skip_trnascan --threads 50 --min_contig_size 1000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#step 2 summarize anntotations</span></span><br><span class=\"line\">DRAM-v.py distill -i dramv-annotate/annotations.tsv -o dramv-distill</span><br></pre></td></tr></table></figure>\n\n<p>  +++success 结果解析</p>\n<ul>\n<li>dramv-annotate&#x2F;annotations.tsv</li>\n<li>dramv-annotate&#x2F;genbank 各条contig的gbk文件</li>\n<li>dramv-annotate&#x2F;genes.faa</li>\n<li>dramv-annotate&#x2F;genes.fna</li>\n<li>dramv-annotate&#x2F;genes.gff</li>\n<li>dramv-annotate&#x2F;rrnas.tsv</li>\n<li>dramv-annotate&#x2F;scaffolds.fna</li>\n<li>dramv-annotate&#x2F;vMAGs 各条contig的fasta文件<br>  +++</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"过滤\"><a href=\"#过滤\" class=\"headerlink\" title=\"过滤\"></a>过滤</h1><h2 id=\"依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\"><a href=\"#依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\" class=\"headerlink\" title=\"依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选\"></a>依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选</h2><p>来自checkV的病毒和宿主基因计数可用于假阳性筛查。由于checkV在预测病毒基因方面非常保守，那些由checkV预测的病毒基因的序列应该是病毒的，而那些没有被checkV预测到病毒基因的序列更可能是非病毒的。</p>\n<p>基于我们对土壤宏基因组的基准测试，(1) 那些没有预测到病毒和宿主基因的序列是病毒；(2) 没有病毒基因但有2个或2个以上宿主基因的大多数为非病毒基因；(3) 那些没有病毒基因和具有1个宿主基因的很难区分其为病毒还是非病毒（可能是可移动的基因元件，类似于VirSorter1中的第3类），除非手动检查，否则应该丢弃。</p>\n<p>只选择那些大于10kb的用于手动检查，因为太短的无法分辨。还有那些VirSorter2 得分≥0.95或hallmark基因计数&gt;2的大多数是病毒。&#x3D;&#x3D;这些经验筛选标准总结如下：&#x3D;&#x3D;</p>\n<p>:::success<br>Keep1: viral_gene &gt;0<br>:::<br>:::success<br>Keep2: viral_gene &#x3D;0 AND (host_gene &#x3D;0 OR score &gt;&#x3D;0.95 OR hallmark &gt;2)<br>:::<br>:::warning<br>Manual check: (NOT in Keep1 OR Keep2) AND viral_gene &#x3D;0 AND host_gene &#x3D;1 AND length &gt;&#x3D;10kb<br>:::<br>:::danger<br>Discard: the rest<br>:::</p>\n<p>[要查看病毒基因、宿主基因、评分和<ruby>序列的特征标记<rt>hallmark of sequences</rt></ruby>，您可以合并”vs2-pass1&#x2F;final-viral-score.tsv”和”checkv&#x2F;contamination.tsv”，并在电子表格中过滤。]{.aqua}本尊为各位提供了Perl脚本<a href=\"https://github.com/liaochenlanruo/myScripts/tree/main/1551%20Virome\">cat_tsv.pl</a>以实现机动合并！直接在终端运行<code>perl cat_tsv.pl</code>即可得到合并后的文件<code>forCheck.txt</code>。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $head_checkv;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $head_pass1;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $num = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;checkv/contamination.tsv&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$count++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($count == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t$head_checkv = $_;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t$hash&#123;$lines[<span class=\"number\">0</span>]&#125; = $_;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;vs2-pass1/final-viral-score.tsv&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;forCheck.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$num++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($num == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t$head_pass1 = $_;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$head_pass1\\t$head_checkv\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @line = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$line[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$_\\t$hash&#123;$line[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$_\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n<p>接下来按照上面的四条规则对<code>forCheck.txt</code>进行拆分，得到病毒<code>Virus.txt</code>、手动核对<code>Manual_check.txt</code>及抛弃的<code>Discard.txt</code>。可以自己看，也可以用<code>get_virus.pl</code>来完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> $count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;forCheck.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> VIRUS, <span class=\"string\">&quot;&gt;Virus.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> MANUAL, <span class=\"string\">&quot;&gt;Manual_check.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> DISCARD, <span class=\"string\">&quot;&gt;Discard.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t$_ =~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t$count++;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($count == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> MANUAL $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> DISCARD $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">15</span>] &gt; <span class=\"number\">0</span>) &#123; <span class=\"comment\"># virus keep1</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">16</span>] == <span class=\"number\">0</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">6</span>] &gt;= <span class=\"number\">0</span>.<span class=\"number\">95</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">9</span>] &gt; <span class=\"number\">2</span>)) &#123; <span class=\"comment\"># virus keep2</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> VIRUS $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> (($lines[<span class=\"number\">15</span>] == <span class=\"number\">0</span>) &amp;&amp; ($lines[<span class=\"number\">16</span>] == <span class=\"number\">1</span>) &amp;&amp; ($lines[<span class=\"number\">8</span>] &gt;= <span class=\"number\">10000</span>)) &#123; <span class=\"comment\"># manual check</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> MANUAL $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123; <span class=\"comment\"># discard</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> DISCARD $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> VIRUS;</span><br><span class=\"line\"><span class=\"keyword\">close</span> MANUAL;</span><br><span class=\"line\"><span class=\"keyword\">close</span> DISCARD;</span><br></pre></td></tr></table></figure>\n\n<p>用法：脚本与<code>forCheck.txt</code>放在同一目录，终端运行如下命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_virus.pl</span><br></pre></td></tr></table></figure>\n\n<p>对于<code>Manual_check.txt</code>中的序列，需要用眼睛和脑袋去<code>dramv-annotate/annotations.tsv</code>中找注释信息，然后根据下面的方法判断其属于病毒还是细胞，如果是病毒，就将其所在的那行信息复制到<code>Virus.txt</code>文件的末尾，并保存。</p>\n<h2 id=\"依据DRAMv注释筛选\"><a href=\"#依据DRAMv注释筛选\" class=\"headerlink\" title=\"依据DRAMv注释筛选\"></a>依据DRAMv注释筛选</h2><p>在病毒和宿主中都有一些共同的基因(如{脂多糖^LPS}相关)和移动元件，这些基因可能导致上述“Keep2”类别中的假阳性。因此，++要谨慎对待带有这些基因的contigs++{.dot}。专家们已经编制了一份与此相关的[“可疑”]{.red}基因列表。我们可以使用“Keep2”类别中的contigs对DRAMv表取子集，并在DRAMv子集表中筛选“可疑”基因(忽略大小写，例如在“grep”中使用“-i”选项)，然后将带有这些基因的contigs放入“手动检查”类别中。</p>\n<h2 id=\"手动检查-tabset\"><a href=\"#手动检查-tabset\" class=\"headerlink\" title=\"手动检查{.tabset}\"></a>手动检查{.tabset}</h2><p>对于存在于<ruby>“手动检查”<rt>manual check</rt></ruby>类别中的序列，可以观察其在”dramv-annotate&#x2F;annotations.tsv”中的注释信息。本步骤很难标准化，下面是一些经验之谈：</p>\n<div class=\"tabs\" id=\"tab-id\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a class=\"#tab-id-1\">判定contig为病毒的标准</a></li><li class=\"tab\"><a class=\"#tab-id-2\">判定contig为非病毒的标准</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-id-1\"><p>;;;id1  判定contig为病毒的标准</p>\n<ul>\n<li>结构基因、hallmark基因、<ruby>注释缺失或假设性富集<rt>depletion in annotations or enrichment for hypotheticals</rt> (~10%的基因具有non-hypothetical注释)。</li>\n<li>缺乏hallmarks，但&gt;&#x3D;50%已注释的基因为病毒，且其中至少一半以上的viral bitcore &gt;100，且contig的长度&lt;50kb。</li>\n<li>Provirus: <ruby>整合酶&#x2F;重组酶&#x2F;切除酶&#x2F;阻遏子<rt>Integrase&#x2F;recombinase&#x2F;excisionase&#x2F;repressor</rt></ruby>，在一侧富集了病毒基因。</li>\n<li>Provirus: 基因组中存在“break”：两个基因之间的<ruby>间隙<rt>gap</rt></ruby>对应于一个<ruby>链开关<rt>strand switch</rt></ruby>，更高的编码密度，注释缺失，以及在一侧噬菌体基因的富集。</li>\n<li><ruby>仅有~1-3个基因有注释，但至少一半命中病毒，且命中基因的bitscore不超过病毒bitscore的150% ，<rt>Few annotations only ~1-3 genes, but with at least half hitting to viruses, and where the genes hitting cells have a bitscore no more than 150% that of the viral bitscores</rt></ruby> <ruby>且&#x2F;或病毒的bitscore &gt;100 <rt> and&#x2F;or viral bitscores are &gt;100</rt></ruby>。</li>\n<li>LPS (脂多糖) <ruby>外观区域对病毒基因的命中率也非常高<rt>looking regions if also has very strong hits to viral genes</rt></ruby>，bitscore&gt;100。<br>;;;</li>\n</ul></div><div class=\"tab-pane\" id=\"tab-id-2\"><p>;;;id1 判定contig为非病毒的标准</p>\n<ul>\n<li><ruby>细胞样基因<rt>cellular like genes</rt></ruby>是病毒基因的3倍，几乎所有基因都有注释，没有基因只命中病毒，也没有病毒<ruby>标志基因<rt>hallmark genes</rt></ruby>。</li>\n<li>缺乏任何病毒hallmark genes，且长度 &gt;50kb。</li>\n<li>许多明显的细胞基因字符串，没有其他病毒标志基因。 在基准测试中遇到的例子包括 1) CRISPR Cas, 2) ABC transporters, 3) Sporulation proteins, 4) Two-component systems, 5) Secretion system。这其中一些可能是由病毒编码的，但在没有进一步证据的情况下并不表明是病毒contig。</li>\n<li>多个质粒基因或转座酶，但没有明确的只命中病毒的基因。</li>\n<li>注释信息很少，仅有~1-3个基因同时命中了病毒和细胞基因，但有stronger bitscores支持其为细胞基因。</li>\n<li><ruby>没有强有力的命中病毒的脂多糖样区域<rt>LPS looking regions if no strong viral hits</rt></ruby>。富含通常与脂多糖相关的基因，如{外聚酶^epimerases}、{糖基转移酶^glycosyl transferases}、{酰基转移酶^acyltransferase}、{短链脱氢酶&#x2F;还原酶^dehydrogenase&#x2F;reductase short-chain}、{脱水酶^dehydratase}。</li>\n<li>注释为 Type IV 和&#x2F;或 Type VI 分析系统，并被非病毒基因围绕。</li>\n<li>注释信息很少，仅有~1-3个基因全部命中细胞基因 (即使 bitscore &lt;100) ，且没有命中病毒的基因。<br>;;;</li>\n</ul></div></div></div>\n\n<p>:::warning<br>最后，用户要注意，VirSorter 2和&#x2F;或checkV预测的任何原病毒边界只是一个近似的估计(寻找“ends”在前噬菌体发现中是一个相当具有挑战性的问题)，也需要仔细地手工检查，特别是在AMG研究中。<br>:::</p>\n<p>最终我们需要拿到病毒contig的序列，用<code>get_virus_seqs.pl</code>完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/perl</span></span><br><span class=\"line\">use strict;</span><br><span class=\"line\">use warnings;</span><br><span class=\"line\"></span><br><span class=\"line\">my %<span class=\"built_in\">hash</span>;</span><br><span class=\"line\">open IN, <span class=\"string\">&quot;checkv/combined.fna&quot;</span> || die;</span><br><span class=\"line\"><span class=\"built_in\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\tchomp;</span><br><span class=\"line\">\tmy (<span class=\"variable\">$header</span>, <span class=\"variable\">$seq</span>) = <span class=\"built_in\">split</span>(/\\n/, <span class=\"variable\">$_</span>, 2);</span><br><span class=\"line\">\tmy <span class=\"variable\">$id</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"variable\">$header</span> =~/(\\S+)\\|\\|.+/) &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$id</span> = <span class=\"variable\">$1</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$id</span> = <span class=\"variable\">$header</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$id</span>&#125; = <span class=\"variable\">$seq</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">close IN;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">local</span> $/ = <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">open IN, <span class=\"string\">&quot;Virus.txt&quot;</span> || die;</span><br><span class=\"line\">open OUT, <span class=\"string\">&quot;&gt;Virus.fas&quot;</span> || die;</span><br><span class=\"line\">open NO, <span class=\"string\">&quot;&gt;NoSeqs.ids&quot;</span> || die;</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\tchomp;</span><br><span class=\"line\">\tmy @lines = <span class=\"built_in\">split</span> /\\t/;</span><br><span class=\"line\">\t<span class=\"variable\">$lines</span>[0] =~/(\\S+)\\|\\|/;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (exists <span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$1</span>&#125;) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span> OUT <span class=\"string\">&quot;&gt;<span class=\"variable\">$lines</span>[0]\\n<span class=\"variable\">$hash</span>&#123;<span class=\"variable\">$1</span>&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">print</span> NO <span class=\"string\">&quot;<span class=\"variable\">$lines</span>[0]\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">close IN;</span><br><span class=\"line\">close OUT;</span><br><span class=\"line\">close NO;</span><br></pre></td></tr></table></figure>\n\n<p>用法：终端运行如下命令即可得到序列文件<code>Virus.fas</code>。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_virus_seqs.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“1551”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://github.com/jiarong/VirSorter2\">VirSorter2</a></li>\n<li><a href=\"https://www.protocols.io/view/viral-sequence-identification-sop-with-virsorter2-bwm5pc86\">Viral sequence identification SOP with VirSorter2 V.3</a></li>\n</ul>\n<div class=\"mermaid\">graph TD\n\tA [Reads] --&gt; B((MetaSpaDES))\n\tB --&gt; C [Contigs]\n\tC --&gt; D ((VirSorter))\n\tC --&gt; E ((VirFinder))\n\tE --&gt; F {Score &gt;&#x3D; 0.7 &amp; p &lt; 0.05}\n\tF -- YES --&gt; G [Virus]\n\tF -- NO --&gt; H [Contigs]\n\tD --&gt; G\n\tH --&gt; I ((CAT))\n\tI --&gt; J {&lt; 40%}\n\tJ -- YES --&gt; G\n\tJ -- NO --&gt; K [Not Virus]\n\tG --&gt; L ((Nucmer))\n\tL --&gt; M {Identity &gt;&#x3D; 95% &amp; Coverage &gt;&#x3D; 80%}\n\tM -- YES --&gt; N [Grouped]\n\tM -- NO --&gt; O [Not Grouped]\n\tG --&gt; P ((Prodigal))\n\tP --&gt; Q [Amino Acid Sequences]\n\tQ --&gt; R {Length &lt; 10 kb}\n\tR -- YES --&gt; S ((Blastp))\n\tR -- NO --&gt; T ((vConTACT2))\n\tS --&gt; U [Annotated Genes]\n\tT --&gt; U</div>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"ST179","path":"api/tags/ST179.json"},{"name":"宏病毒组","path":"api/tags/宏病毒组.json"}]},{"title":"宏基因组分析流程及代码","slug":"宏基因组分析流程及代码","date":"2021-01-19T07:24:28.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/宏基因组分析流程及代码.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文阐述宏基因组物种分类、组装、bining、基因预测及注释……</p>\n<span id=\"more\"></span>\n\n<h1 id=\"A、软件列表及安装\"><a href=\"#A、软件列表及安装\" class=\"headerlink\" title=\"A、软件列表及安装\"></a>A、软件列表及安装</h1><h2 id=\"A-1-分类相关\"><a href=\"#A-1-分类相关\" class=\"headerlink\" title=\"A.1 分类相关\"></a>A.1 分类相关</h2><h3 id=\"A-1-1-metaphlan-3-0\"><a href=\"#A-1-1-metaphlan-3-0\" class=\"headerlink\" title=\"A.1.1 metaphlan 3.0\"></a>A.1.1 metaphlan 3.0</h3><p>MetaPhlAn is a tool for profiling the composition of microbial communities from metagenomic shotgun sequencing data.</p>\n<h4 id=\"a-安装主文件\"><a href=\"#a-安装主文件\" class=\"headerlink\" title=\"a. 安装主文件\"></a>a. 安装主文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n metaphlan python=3.7 metaphlan</span><br><span class=\"line\">$ conda activate metaphlan</span><br></pre></td></tr></table></figure>\n<h4 id=\"b-安装数据库\"><a href=\"#b-安装数据库\" class=\"headerlink\" title=\"b. 安装数据库\"></a>b. 安装数据库</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metaphlan --install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"c-安装依赖包\"><a href=\"#c-安装依赖包\" class=\"headerlink\" title=\"c. 安装依赖包\"></a>c. 安装依赖包</h4><ul>\n<li>hclust<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install -c bioconda hclust2</span><br></pre></td></tr></table></figure></li>\n<li>R, vegan, ape <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install r-base r-vegan r-ape</span><br></pre></td></tr></table></figure></li>\n<li>rbiom<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ R</span><br><span class=\"line\">$ install.packages(<span class=\"string\">&quot;rbiom&quot;</span>)</span><br><span class=\"line\">$ quit()</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"A-1-2-gtdbtk\"><a href=\"#A-1-2-gtdbtk\" class=\"headerlink\" title=\"A.1.2 gtdbtk\"></a>A.1.2 <a href=\"https://ecogenomics.github.io/GTDBTk/\">gtdbtk</a></h3><h4 id=\"a-Hardware-requirements\"><a href=\"#a-Hardware-requirements\" class=\"headerlink\" title=\"a. Hardware requirements\"></a>a. Hardware requirements</h4><table>\n<thead>\n<tr>\n<th>Domain</th>\n<th>Memory</th>\n<th>Storage</th>\n<th>Time</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Archaea</td>\n<td>~8 GB</td>\n<td>~27 GB</td>\n<td>~1 hour &#x2F; 1,000 genomes @ 64 CPUs</td>\n</tr>\n<tr>\n<td>Bacteria</td>\n<td>~150 GB</td>\n<td>~27 GB</td>\n<td>~1 hour &#x2F; 1,000 genomes @ 64 CPUs</td>\n</tr>\n</tbody></table>\n<h4 id=\"b-Install-GTDB-Tk-with-conda\"><a href=\"#b-Install-GTDB-Tk-with-conda\" class=\"headerlink\" title=\"b. Install GTDB-Tk with conda\"></a>b. Install GTDB-Tk with conda</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"c-GTDB-Tk-reference-data\"><a href=\"#c-GTDB-Tk-reference-data\" class=\"headerlink\" title=\"c. GTDB-Tk reference data\"></a>c. GTDB-Tk reference data</h4><ul>\n<li><strong>Note that different versions of the GTDB release data may not run on all versions of GTDB-Tk, below are all supported versions:</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>GTDB Release</th>\n<th>Minimum version</th>\n<th>Maximum version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>R95</td>\n<td>1.3.0</td>\n<td>N&#x2F;A</td>\n</tr>\n<tr>\n<td>R89</td>\n<td>0.3.0</td>\n<td>0.1.2</td>\n</tr>\n<tr>\n<td>R86.2</td>\n<td>0.2.1</td>\n<td>0.2.2</td>\n</tr>\n<tr>\n<td>R86</td>\n<td>0.1.0</td>\n<td>0.1.6</td>\n</tr>\n<tr>\n<td>R83</td>\n<td>0.0.6</td>\n<td>0.0.7</td>\n</tr>\n</tbody></table>\n<ul>\n<li>Download the reference data</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://data.ace.uq.edu.au/public/gtdb/data/releases/release95/95.0/auxillary_files/gtdbtk_r95_data.tar.gz</span><br><span class=\"line\">  </span><br><span class=\"line\">$ tar xvzf gtdbtk_r95_data.tar.gz</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：GTDB-Tk requires an environment variable named GTDBTK_DATA_PATH to be set to the directory containing the unarchived GTDB-Tk reference data.</p>\n<ul>\n<li>You can automatically alias GTDBTK_DATA_PATH whenever the environment is activated by editing {gtdbtk environment path}&#x2F;etc&#x2F;conda&#x2F;activate.d&#x2F;gtdbtk.sh, e.g.:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Determine the GTDB-Tk environment path</span></span><br><span class=\"line\">$ conda activate gtdbtk</span><br><span class=\"line\">$ <span class=\"built_in\">which</span> gtdbtk</span><br><span class=\"line\"><span class=\"comment\"># /miniconda3/envs/gtdbtk-1.3.0/bin/gtdbtk</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Edit the activate file</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;export GTDBTK_DATA_PATH=/path/to/release/package/&quot;</span> &gt; /miniconda3/envs/gtdbtk-1.3.0/etc/conda/activate.d/gtdbtk.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"A-1-3-Kraken2\"><a href=\"#A-1-3-Kraken2\" class=\"headerlink\" title=\"A.1.3 Kraken2\"></a>A.1.3 <a href=\"https://github.com/DerrickWood/kraken2\">Kraken2</a></h3><h4 id=\"a-Hardware-requirements-1\"><a href=\"#a-Hardware-requirements-1\" class=\"headerlink\" title=\"a. Hardware requirements\"></a>a. Hardware requirements</h4><ul>\n<li>Disk space: Construction of a Kraken 2 standard database requires approximately 100 GB of disk space. A test on 01 Jan 2018 of the default installation showed 42 GB of disk space was used to store the genomic library files, 26 GB was used to store the taxonomy information from NCBI, and 29 GB was used to store the Kraken 2 compact hash table.</li>\n<li>Memory: To run efficiently, Kraken 2 requires enough free memory to hold the database (primarily the hash table) in RAM. While this can be accomplished with a ramdisk, Kraken 2 will by default load the database into process-local RAM; the –memory-mapping switch to kraken2 will avoid doing so. The default database size is 29 GB (as of Jan. 2018), and you will need slightly more than that in RAM if you want to build the default database.</li>\n</ul>\n<h4 id=\"b-Install-Kraken2-with-conda\"><a href=\"#b-Install-Kraken2-with-conda\" class=\"headerlink\" title=\"b. Install Kraken2 with conda\"></a>b. Install Kraken2 with conda</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n kraken2 kraken2</span><br></pre></td></tr></table></figure>\n<h4 id=\"c-Build-the-database\"><a href=\"#c-Build-the-database\" class=\"headerlink\" title=\"c. Build the database\"></a>c. Build the database</h4><ul>\n<li>下载数据库。找到一个存储空间比较大的目录并进入，运行如下命令，这里下载的数据库包括archaea，bacteria，plasmid，viral，fungi，protozoa，UniVec和UniVec_Core：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> bash -c <span class=\"string\">&#x27;for i in archaea bacteria plasmid viral fungi protozoa UniVec UniVec_Core; do kraken2-build --download-library $i --threads 24 --db db_name; done&#x27;</span> &amp;</span><br></pre></td></tr></table></figure></li>\n<li>下载分类信息<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> kraken2-build --download-taxonomy --threads 24 --db db_name &amp;</span><br></pre></td></tr></table></figure></li>\n<li>建立索引<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> kraken2-build --build --threads 24 --db db_name &amp;</span><br></pre></td></tr></table></figure>\n<h4 id=\"d-序列分类\"><a href=\"#d-序列分类\" class=\"headerlink\" title=\"d. 序列分类\"></a>d. 序列分类</h4></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kraken2 --paired --threads 24 --unclassified-out unclassified<span class=\"comment\">#.fq --classified-out classified#.fq --output outfile --confidence 0.5 --memory-mapping --use-names --report reportname --report-zero-counts --db $DBNAME reads1 read2</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"A-2-组装、Bining、质量评估\"><a href=\"#A-2-组装、Bining、质量评估\" class=\"headerlink\" title=\"A.2 组装、Bining、质量评估\"></a>A.2 组装、Bining、质量评估</h2><h3 id=\"A-2-1-metawrap\"><a href=\"#A-2-1-metawrap\" class=\"headerlink\" title=\"A.2.1 metawrap\"></a>A.2.1 metawrap</h3><p>MetaWRAP is a pipeline for genome-resolved metagenomic data analysis.</p>\n<h4 id=\"a-安装主文件-1\"><a href=\"#a-安装主文件-1\" class=\"headerlink\" title=\"a. 安装主文件\"></a>a. 安装主文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n metawrap python=2.7 metaphlan</span><br></pre></td></tr></table></figure>\n<h4 id=\"b-安装其他分析工具到metawrap环境中\"><a href=\"#b-安装其他分析工具到metawrap环境中\" class=\"headerlink\" title=\"b. 安装其他分析工具到metawrap环境中\"></a>b. 安装其他分析工具到metawrap环境中</h4><ul>\n<li><strong>cd-hit</strong></li>\n<li><strong>coverm</strong> DNA read coverage and relative abundance calculator focused on metagenomics applications</li>\n<li><strong>bamm</strong> Metagenomics-focused BAM file manipulation</li>\n<li><strong>unitem</strong> Ensemble binning strategies for combining the output of multiple binning methods</li>\n<li><strong>humann2</strong> The HMP Unified Metabolic Analysis Network 2</li>\n<li><strong><a href=\"https://github.com/biobakery/biobakery/wiki/GraPhlAn\">graphlan</a></strong> </li>\n<li><strong><a href=\"https://pypi.org/project/export2graphlan/\">export2graphlan</a></strong> </li>\n<li><strong><a href=\"https://data.ace.uq.edu.au/public/CheckM_databases/\">checkm database</a></strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activeta metawrap</span><br><span class=\"line\">$ conda install cd-hit coverm bamm unitem humann2 graphlan export2graphlan</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 找到一个合适的目录并cd进入以便存储checkm数据库</span></span><br><span class=\"line\">$ wget https://data.ace.uq.edu.au/public/CheckM_databases/checkm_data_2015_01_16.tar.gz</span><br><span class=\"line\">$ tar zxvf checkm_data_2015_01_16.tar.gz</span><br><span class=\"line\">$ checkm data setRoot</span><br><span class=\"line\"><span class=\"comment\"># 随后输入数据库所在的full path</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"A-3-非冗余基因功能注释\"><a href=\"#A-3-非冗余基因功能注释\" class=\"headerlink\" title=\"A.3 非冗余基因功能注释\"></a>A.3 非冗余基因功能注释</h2><h3 id=\"A-3-1-eggNOG-mapper\"><a href=\"#A-3-1-eggNOG-mapper\" class=\"headerlink\" title=\"A.3.1 eggNOG-mapper\"></a>A.3.1 eggNOG-mapper</h3><p>功能注释，uniref, eggNOG, KEGG, GO; CAZy; VFDB; CARD; TCDB; PHI。</p>\n<h3 id=\"A-3-2-EnrichM\"><a href=\"#A-3-2-EnrichM\" class=\"headerlink\" title=\"A.3.2 EnrichM\"></a>A.3.2 EnrichM</h3><p><a href=\"https://github.com/geronimp/enrichM\">EnrichM</a> is a set of comparative genomics tools for large sets of metagenome assembled genomes (MAGs). The current functionality includes:</p>\n<ul>\n<li>A basic annotation pipeline for MAGs.</li>\n<li>A pipeline to determine the metabolic pathways that are encoded by MAGs, using KEGG modules as a reference (although custom pathways can be specified)</li>\n<li>A pipeline to identify genes or metabolic pathways that are enriched within and between user-defined groups of genomes (groups can be genomes that are related functionally, phylogenetically, recovered from different environments, etc).</li>\n<li>To construct metabolic networks from annotated population genomes.</li>\n<li>Construct random forest machine learning models from the functional composition of either MAGs, metagenomes or transcriptomes.</li>\n<li>Apply these random forest machine learning models to classify new MAGs metagenomes.</li>\n</ul>\n<h4 id=\"a-安装主文件-2\"><a href=\"#a-安装主文件-2\" class=\"headerlink\" title=\"a. 安装主文件\"></a>a. 安装主文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n enrichm python=3</span><br><span class=\"line\">$ conda install enrichm</span><br></pre></td></tr></table></figure>\n<h4 id=\"b-安装数据库-1\"><a href=\"#b-安装数据库-1\" class=\"headerlink\" title=\"b. 安装数据库\"></a>b. 安装数据库</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 约5.7 G</span></span><br><span class=\"line\">$ enrichm data</span><br></pre></td></tr></table></figure>\n<p><strong>报错</strong> ：</p>\n<blockquote>\n<p>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;data.py”, line 114, in do<br>    version_remote &#x3D; urllib.request.urlopen(self.ftp + self.VERSION).readline().strip().decode(“utf-8”)<br>AttributeError: module ‘urllib’ has no attribute ‘request’</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;bin&#x2F;enrichm”, line 342, in &lt;module&gt;<br>    run.run_enrichm(args, sys.argv)<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;run.py”, line 288, in run_enrichm<br>    d.do(args.uninstall, args.dry)<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;data.py”, line 117, in do<br>    “Unable to find most current EnrichM database VERSION in ftp. Please complain at <a href=\"https://github.com/geronimp/enrichM\">https://github.com/geronimp/enrichM</a>“)<br>Exception: Unable to find most current EnrichM database VERSION in ftp. Please complain at <a href=\"https://github.com/geronimp/enrichM\">https://github.com/geronimp/enrichM</a></p>\n</blockquote>\n<p><strong>解决方案：将data.py中的’import urllib’替换为’import urllib.request’</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /home/hualin/miniconda3/envs/enrichm/lib/python3.6/site-packages/enrichm/data.py</span><br></pre></td></tr></table></figure>\n<h4 id=\"c-Sepcifying-the-location-of-the-EnrichM-database\"><a href=\"#c-Sepcifying-the-location-of-the-EnrichM-database\" class=\"headerlink\" title=\"c. Sepcifying the location of the EnrichM database\"></a>c. Sepcifying the location of the EnrichM database</h4><p>If you would like to store the EnrichM database outside of your home directory, move you need to tell EnrichM where to look. To do this, export a BASH variable named “ENRICHM_DB”:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">export</span> ENRICHM_DB=/path/to/database/ &gt;&gt;~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong> ：&#x2F;path&#x2F;to&#x2F;database&#x2F;根据实际情况而定！<br><strong>报错</strong>：</p>\n<blockquote>\n<p>$ enrichm<br>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;bin&#x2F;enrichm”, line 38, in &lt;module&gt;<br>    from enrichm.run import Run<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;run.py”, line 24, in &lt;module&gt;<br>    from enrichm.network_analyzer import NetworkAnalyser<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;network_analyzer.py”, line 22, in &lt;module&gt;<br>    from enrichm.network_builder import NetworkBuilder<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;network_builder.py”, line 24, in &lt;module&gt;<br>    from enrichm.databases import Databases<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;databases.py”, line 28, in &lt;module&gt;<br>    class Databases:<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;databases.py”, line 36, in Databases<br>    PICKLE_VERSION &#x3D; open(os.path.join(CUR_DATABASE_DIR, ‘VERSION’)).readline().strip()<br>FileNotFoundError: [Errno 2] No such file or directory: ‘&#x2F;new_data&#x2F;hualin&#x2F;db&#x2F;enrichm_database_v10&#x2F;26-11-2018&#x2F;VERSION’</p>\n</blockquote>\n<p><strong>Solve</strong>: 将下载的数据库文件全部复制一份到“<strong>26-11-2018</strong>”目录中，否则后续运行annotaton时会提示找不到数据库文件。</p>\n<h1 id=\"B、数据分析\"><a href=\"#B、数据分析\" class=\"headerlink\" title=\"B、数据分析\"></a>B、数据分析</h1><h2 id=\"B-1-使用metaphlan从Reads中获取物种分类信息\"><a href=\"#B-1-使用metaphlan从Reads中获取物种分类信息\" class=\"headerlink\" title=\"B.1 使用metaphlan从Reads中获取物种分类信息\"></a>B.1 使用metaphlan从Reads中获取物种分类信息</h2><h3 id=\"Step-1-激活环境\"><a href=\"#Step-1-激活环境\" class=\"headerlink\" title=\"Step 1. 激活环境\"></a>Step 1. 激活环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activate metaphlan</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-2-对paired-end-Reads进行注释\"><a href=\"#Step-2-对paired-end-Reads进行注释\" class=\"headerlink\" title=\"Step 2. 对paired-end Reads进行注释\"></a>Step 2. 对paired-end Reads进行注释</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metaphlan Reads1,Reads2 --input_type fastq --bowtie2out Str1.bowtie2.bz2 --<span class=\"built_in\">nproc</span> 10 -o Str1_profiled.txt</span><br></pre></td></tr></table></figure>\n<p>Reads1和Reads2分别代表双端测序得到的正向和反向数据；–input_type指定文件格式，我们拿到的下机数据一般为fastq格式；–bowtie2out参数将会保存运行产生的中间文件以便后续重新运行程序时作为输入文件；–nproc指定使用的线程数量；-o指定输出文件名。</p>\n<h3 id=\"Step-3-汇总所有的结果文件\"><a href=\"#Step-3-汇总所有的结果文件\" class=\"headerlink\" title=\"Step 3. 汇总所有的结果文件\"></a>Step 3. 汇总所有的结果文件</h3><p>对所有的文件均运行Step 2 ，产生了多个输出文件（*_profiled.txt），可以将它们汇总到一个文件中（merged_abundance_table.txt），便于后续对多个样品进行相互比较。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ merge_metaphlan_tables.py *_profiled.txt &gt; merged_abundance_table.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-4-从合并的文件中提取种水平的分类\"><a href=\"#Step-4-从合并的文件中提取种水平的分类\" class=\"headerlink\" title=\"Step 4. 从合并的文件中提取种水平的分类\"></a>Step 4. 从合并的文件中提取种水平的分类</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ grep -E <span class=\"string\">&quot;s__|clade&quot;</span> merged_abundance_table.txt | sed <span class=\"string\">&#x27;s/^.*s__//g&#x27;</span> | <span class=\"built_in\">cut</span> -f1,3-8 | sed -e <span class=\"string\">&#x27;s/clade_name/body_site/g&#x27;</span> &gt; merged_abundance_table_species.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Step-5-绘制样本间种水平的热图\"><a href=\"#Step-5-绘制样本间种水平的热图\" class=\"headerlink\" title=\"Step 5. 绘制样本间种水平的热图\"></a>Step 5. 绘制样本间种水平的热图</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hclust2.py -i merged_abundance_table_species.txt -o abundance_heatmap_species.png --ftop 50 --f_dist_f braycurtis --s_dist_f braycurtis --cell_aspect_ratio 0.5 -l --flabel_size 10 --slabel_size 10 --max_flabel_len 100 --max_slabel_len 100 --minv 0.1 --dpi 300</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-6-计算样本间的unifrac距离\"><a href=\"#Step-6-计算样本间的unifrac距离\" class=\"headerlink\" title=\"Step 6. 计算样本间的unifrac距离\"></a>Step 6. 计算样本间的unifrac距离</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载依赖的tree文件和脚本,与要分析的文件放于同一目录下</span></span><br><span class=\"line\">$ wget https://github.com/biobakery/MetaPhlAn/blob/master/metaphlan/utils/mpa_v30_CHOCOPhlAn_201901_species_tree.nwk</span><br><span class=\"line\">$ wget https://github.com/biobakery/MetaPhlAn/blob/master/metaphlan/utils/calculate_unifrac.R</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开始计算距离</span></span><br><span class=\"line\">$ Rscript plot_unifrac.R merged_abundance_table.txt mpa_v30_CHOCOPhlAn_201901_species_tree.nwk unifrac_merged_abundance_table.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-7-绘制cladogram图\"><a href=\"#Step-7-绘制cladogram图\" class=\"headerlink\" title=\"Step 7. 绘制cladogram图\"></a>Step 7. 绘制cladogram图</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 激活依赖软件所在的环境</span></span><br><span class=\"line\">$ conda activate metawrap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成绘图所需的文件</span></span><br><span class=\"line\">$ <span class=\"built_in\">tail</span> -n +2 merged_abundance_table.txt | <span class=\"built_in\">cut</span> -f1,3- &gt; merged_abundance_table_reformatted.txt</span><br><span class=\"line\"></span><br><span class=\"line\">$ export2graphlan.py --skip_rows 1 -i merged_abundance_table_reformatted.txt --tree merged_abundance.tree.txt --annotation merged_abundance.annot.txt --most_abundant 100 --abundance_threshold 1 --least_biomarkers 10 --annotations 5,6 --external_annotations 7 --min_clade_size 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">$ graphlan_annotate.py --annot merged_abundance.annot.txt merged_abundance.tree.txt merged_abundance.xml</span><br><span class=\"line\"></span><br><span class=\"line\">$ graphlan.py --dpi 300 merged_abundance.xml merged_abundance.pdf --external_legends</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"B-2-使用metawrap对Reads进行组装\"><a href=\"#B-2-使用metawrap对Reads进行组装\" class=\"headerlink\" title=\"B.2 使用metawrap对Reads进行组装\"></a>B.2 使用metawrap对Reads进行组装</h2><h3 id=\"Step-1-激活环境-1\"><a href=\"#Step-1-激活环境-1\" class=\"headerlink\" title=\"Step 1. 激活环境\"></a>Step 1. 激活环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activate metawrap</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-2-组装\"><a href=\"#Step-2-组装\" class=\"headerlink\" title=\"Step 2. 组装\"></a>Step 2. 组装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap assembly -1 Reads1 -2 Reads2 -o Assemble1 -m 300 -t 15 --metaspades</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP assembly [options] -1 reads_1.fastq -2 reads_2.fastq -o output_dir\n\n<ul>\n<li>Options:<ul>\n<li><p>   -1 STR          forward fastq reads</p>\n</li>\n<li><p>   -2 STR          reverse fastq reads</p>\n</li>\n<li><p>   -o STR          output directory</p>\n</li>\n<li><p>   -m INT          memory in GB (default&#x3D;24)</p>\n</li>\n<li><p>   -t INT          number of threads (defualt&#x3D;1)</p>\n</li>\n<li><p>   -l INT\t\tminimum length of assembled contigs (default&#x3D;1000)</p>\n</li>\n<li><p>   --megahit\tassemble with megahit (default)</p>\n</li>\n<li><p>--metaspades\tassemble with metaspades instead of megahit (better results but slower and higher memory requirement)</p>\n</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<p>Reads1和Reads2分别代表双端测序得到的正向和反向数据；-o指定输出目录，-m指定最大可用内存大小，超过设定值后程序会自动退出，建议设大一点，我10G的数据大概需要180G内存；-t指定线程数；–metaspades表示用metaspades进行组装，特别慢，但是组装结果相对好一些。</p>\n<h2 id=\"B-3-使用metawrap对Contigs进行Bining\"><a href=\"#B-3-使用metawrap对Contigs进行Bining\" class=\"headerlink\" title=\"B.3 使用metawrap对Contigs进行Bining\"></a>B.3 使用metawrap对Contigs进行Bining</h2><h3 id=\"Step-1-激活环境-2\"><a href=\"#Step-1-激活环境-2\" class=\"headerlink\" title=\"Step 1. 激活环境\"></a>Step 1. 激活环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activate metawrap</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-2-Bining\"><a href=\"#Step-2-Bining\" class=\"headerlink\" title=\"Step 2. Bining\"></a>Step 2. Bining</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap binning -o Str1.INITIAL_BINNING -t 20 -m 200 --universal --run-checkm -a &lt;path of contigs&gt; --metabat2 --maxbin2 --concoct 解压的Reads1 解压的Reads2</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP binning [options] -a assembly.fa -o output_dir readsA_1.fastq readsA_2.fastq ... [readsX_1.fastq readsX_2.fastq]\n\n<ul>\n<li><p>Note1: Make sure to provide all your separately replicate read files, not the joined file.</p>\n</li>\n<li><p>Note2: You may provide single end or interleaved reads as well with the use of the correct option</p>\n</li>\n<li><p>Note3: If the output already has the .bam alignments files from previous runs, the module will skip re-aligning the reads</p>\n</li>\n<li><p>Options:</p>\n<ul>\n<li>   -a STR          metagenomic assembly file</li>\n<li>   -o STR          output directory</li>\n<li>   -t INT          number of threads (default&#x3D;1)</li>\n<li>   -m INT\t\tamount of RAM available (default&#x3D;4)</li>\n<li>   -l INT\t\tminimum contig length to bin (default&#x3D;1000bp). Note: metaBAT will default to 1500bp minimum</li>\n<li>   --metabat2      bin contigs with metaBAT2</li>\n<li>   --metabat1\tbin contigs with the original metaBAT</li>\n<li>   --maxbin2\tbin contigs with MaxBin2</li>\n<li>   --concoct\tbin contigs with CONCOCT</li>\n<li>--universal\tuse universal marker genes instead of bacterial markers in MaxBin2 (improves Archaea binning)</li>\n<li>   --run-checkm\timmediately run CheckM on the bin results (requires 40GB+ of memory)</li>\n<li>   --single-end\tnon-paired reads mode (provide *.fastq files)</li>\n<li>   --interleaved\tthe input read files contain interleaved paired-end reads</details>\n**注意避坑：** 这里的Reads1和Reads2需要提供解压缩后的Reads文件，不但要解压缩，还需要重命名，即后缀名必须为“\\_clean\\_1.fastq” 和 “\\_clean\\_2.fastq”，否则软件无法运行。-o指定输出目录；-t指定线程数；-m指定最大内存限制；--run-checkm表明即时检查Bining的质量；--metabat2 --maxbin2 --concoct 指定同时采用这三个分箱工具进行Bining；--universal指定MaxBin2采用universal marker 基因代替 bacterial markers  (improves Archaea binning)。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Step-3-整合三种方法的bins-metabat2-maxbin2-concoct-结果\"><a href=\"#Step-3-整合三种方法的bins-metabat2-maxbin2-concoct-结果\" class=\"headerlink\" title=\"Step 3. 整合三种方法的bins (metabat2, maxbin2, concoct) 结果\"></a>Step 3. 整合三种方法的bins (metabat2, maxbin2, concoct) 结果</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap bin_refinement -o F01_BIN_REFINEMENT(输出目录) -t 20 -A str1.INITIAL_BINNING/metabat2_bins/ -B str1.INITIAL_BINNING/maxbin2_bins/ -C str1.INITIAL_BINNING/concoct_bins/ -c 70 -x 5</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP bin_refinement [options] -o output_dir -A bin_folderA [-B bin_folderB -C bin_folderC]\n\n<ul>\n<li><p>Note: the contig names in different bin folders must be consistant (must come from the same assembly).</p>\n</li>\n<li><p>Options:</p>\n<ul>\n<li>-o STR          output directory</li>\n<li>   -t INT          number of threads (default&#x3D;1)</li>\n<li>   -m INT\t\tmemory available (default&#x3D;40)</li>\n<li>   -c INT          完整度minimum % completion of bins [should be &gt;50%] (default&#x3D;70)</li>\n<li>   -x INT          污染度maximum % contamination of bins that is acceptable (default&#x3D;10)</li>\n<li>   -A STR\t\tfolder with metagenomic bins (files must have .fa or .fasta extension)</li>\n<li>   -B STR\t\tanother folder with metagenomic bins</li>\n<li>   -C STR\t\tanother folder with metagenomic bins</li>\n<li>   --skip-refinement\tdont use binning_refiner to come up with refined bins based on combinations of binner outputs</li>\n<li>   --skip-checkm\t\tdont run CheckM to assess bins</li>\n<li>   --skip-consolidation\tchoose the best version of each bin from all bin refinement iteration</li>\n<li>   --keep-ambiguous\tfor contigs that end up in more than one bin, keep them in all bins (default: keeps them only in the best bin)</li>\n<li>   --remove-ambiguous\tfor contigs that end up in more than one bin, remove them in all bins (default: keeps them only in the best bin)</li>\n<li>   --quick\t\t\tadds –reduced_tree option to checkm, reducing runtime, especially with low memory</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h3 id=\"Step-4-Blobology可视化bin\"><a href=\"#Step-4-Blobology可视化bin\" class=\"headerlink\" title=\"Step 4. Blobology可视化bin\"></a>Step 4. Blobology可视化bin</h3><p><strong>一个坑：</strong> metawrap安装的blast为2.6版本，只能用Version 4 的nt库。而最新的nt库为Version 5，v4已经不再维护了。因此需要更新metawrap安装环境中的blast至2.8.0及以上版本，这里无法通过‘conda updata blast’实现更新，而是需要下载新版本的blast可执行程序，覆盖metawrap环境中的blast程度们。 如果你采用的是默认版本的blast和V5的nt库，会得到报错：“BLAST Database error: Error: Not a valid version 4 database”.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap blobology -a Result/Assemble/F01/final_assembly.fasta -t 20 -o F01.BLOBOLOGY --bins F01_BIN_REFINEMENT/metawrap_70_5_bins reads/F01_clean_1.fastq reads/F01_clean_2.fastq</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP blobology [options] -a assembly.fasta -o output_dir readsA_1.fastq readsA_2.fastq [readsB_1.fastq readsB_2.fastq ... ]\n\n<ul>\n<li><p>Options:</p>\n<ul>\n<li>   -a STR\t\tassembly fasta file</li>\n<li>   -o STR          output directory</li>\n<li>   -t INT          number of threads</li>\n<li>   --subsamble \tINT\tNumber of contigs to run blobology on. Subsampling is randomized. (default&#x3D;ALL)</li>\n<li>   --bins\t\tSTR\tFolder containing bins. Contig names must match those of the assembly file. (default&#x3D;None)</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h3 id=\"Step-5-Bins-定量\"><a href=\"#Step-5-Bins-定量\" class=\"headerlink\" title=\"Step 5. Bins 定量\"></a>Step 5. Bins 定量</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap quant_bins -b F01_BIN_REFINEMENT/metawrap_70_5_bins -t 8 -o F01.QUANT_BINS -a Result/Assemble/F01/final_assembly.fasta reads/F01_clean_1.fastq reads/F01_clean_2.fastq</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP quant_bins [options] -b bins_folder -o output_dir -a assembly.fa readsA_1.fastq readsA_2.fastq ... [readsX_1.fastq readsX_2.fastq]\n\n<ul>\n<li><p>Options:</p>\n<ul>\n<li>   -b STR          folder containing draft genomes (bins) in fasta format</li>\n<li>   -o STR          output directory</li>\n<li>   -a STR\t\tfasta file with entire metagenomic assembly (strongly recommended!)</li>\n<li>   -t INT\t\tnumber of threads</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h3 id=\"Step-6-重组装\"><a href=\"#Step-6-重组装\" class=\"headerlink\" title=\"Step 6. 重组装\"></a>Step 6. 重组装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">metawrap reassemble_bins -o F01.BIN_REASSEMBLY -1 reads/F01_clean_1.fastq -2 reads/F01_clean_2.fastq -t 20 -m 400 -c 70 -x 10 -b F01_BIN_REFINEMENT/metawrap_70_5_bins</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP reassemble_bins [options] -o output_dir -b bin_folder -1 reads_1.fastq -2 reads_2.fastq\n\n<ul>\n<li><p>Options:</p>\n<ul>\n<li>   -b STR\t\tfolder with metagenomic bins</li>\n<li>   -o STR\t\toutput directory</li>\n<li>   -1 STR          forward reads to use for reassembly</li>\n<li>   -2 STR          reverse reads to use for reassembly</li>\n<li>   -t INT\t\tnumber of threads (default&#x3D;1)</li>\n<li>   -m INT\t\tmemory in GB (default&#x3D;40)</li>\n<li>   -c INT\t\tminimum desired bin completion % (default&#x3D;70)</li>\n<li>   -x INT\t\tmaximum desired bin contamination % (default&#x3D;10)</li>\n<li>   -l INT\t\tminimum contig length to be included in reassembly (default&#x3D;500)</li>\n<li>   --strict-cut-off\tmaximum allowed SNPs for strict read mapping (default&#x3D;2)</li>\n<li>   --permissive-cut-off\tmaximum allowed SNPs for permissive read mapping (default&#x3D;5)</li>\n<li>   --skip-checkm\t\tdont run CheckM to assess bins</li>\n<li>   --parallel\t\trun spades reassembly in parallel, but only using 1 thread per bin</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h2 id=\"B-4-MAGs注释\"><a href=\"#B-4-MAGs注释\" class=\"headerlink\" title=\"B.4 MAGs注释\"></a>B.4 MAGs注释</h2><h3 id=\"B-4-1-GTDB-TK-进行物种分类和注释，构建系统发育树\"><a href=\"#B-4-1-GTDB-TK-进行物种分类和注释，构建系统发育树\" class=\"headerlink\" title=\"B.4.1 GTDB-TK 进行物种分类和注释，构建系统发育树\"></a>B.4.1 GTDB-TK 进行物种分类和注释，构建系统发育树</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activate gtdbtk</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"classify-wf——Classify-workflow-包括了Step-1-3\"><a href=\"#classify-wf——Classify-workflow-包括了Step-1-3\" class=\"headerlink\" title=\"classify_wf——Classify workflow (包括了Step 1-3)\"></a>classify_wf——Classify workflow (包括了Step 1-3)</h4><p>The classify workflow consists of three steps: identify, align, and classify.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk classify_wf --genome_dir metawrap_70_5_bins/ --out_dir classify_wf_output -x .fa --prefix F --cpus 6 -r --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk classify_wf (--genome_dir GENOME_DIR | --batchfile BATCHFILE) --out_dir OUT_DIR [-x EXTENSION] [--min_perc_aa MIN_PERC_AA] [--prefix PREFIX] [--cpus CPUS]\n                          [--pplacer_cpus PPLACER_CPUS] [--force] [--scratch_dir SCRATCH_DIR] [-r] [--min_af MIN_AF] [--debug] [-h]\n\n<ul>\n<li><p>mutually exclusive required arguments:</p>\n<ul>\n<li>--genome_dir GENOME_DIR<br>               directory containing genome files in FASTA format</li>\n<li>--batchfile BATCHFILE<br>               path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</li>\n</ul>\n</li>\n<li><p>required named arguments:</p>\n<ul>\n<li>--out_dir OUT_DIR     directory to output files</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>-x, --extension EXTENSION<br>                extension of files to process, gz &#x3D; gzipped (default: fna)</li>\n<li>--min_perc_aa MIN_PERC_AA<br>                exclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (default: 10)</li>\n<li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li>\n<li>--cpus CPUS           number of CPUs to use (default: 1)</li>\n<li>--pplacer_cpus PPLACER_CPUS<br>                use pplacer_cpus during placement (default: cpus)</li>\n<li>--force               continue processing if an error occurs on a single genome (default: False)</li>\n<li>--scratch_dir SCRATCH_DIR<br>                Reduce pplacer memory usage by writing to disk (slower).</li>\n<li>-r, --recalculate_red<br>                recalculate RED values based on the reference tree and all added user genomes (default: False)</li>\n<li>--min_af MIN_AF       minimum alignment fraction to consider closest genome (default: 0.65)</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message</details></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Step-1-identify——在基因组中寻找marker-genes\"><a href=\"#Step-1-identify——在基因组中寻找marker-genes\" class=\"headerlink\" title=\"Step 1: identify——在基因组中寻找marker genes\"></a>Step 1: identify——在基因组中寻找marker genes</h4><p>Translation table选择：use table 11 unless the coding density using table 4 is 5% higher than when using table 11 and the coding density under table 4 is &gt;70%.  GTDB-Tk 不会区分 tables 4和tables 5. 若用户清楚使用哪一个table，可以通过--batchfile指定。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk identify --genome_dir metawrap_70_5_bins/ --out_dir identify_output --cpus 6 --prefix F --debug -x .fa --write_single_copy_genes</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-2-align\"><a href=\"#Step-2-align\" class=\"headerlink\" title=\"Step 2: align\"></a>Step 2: align</h4><p>Create a multiple sequence alignment based on the AR122&#x2F;BAC120 marker set.<br>Time 3m50.019s</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk align --identify_dir identify_output/ --out_dir align_output --cpus 3 --prefix F --debug</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-3-classify\"><a href=\"#Step-3-classify\" class=\"headerlink\" title=\"Step 3: classify\"></a>Step 3: classify</h4><p>Determine taxonomic classification of genomes.<br>Time 118m9.386s</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk classify --genome_dir metawrap_70_5_bins/ --align_dir align_output/ --out_dir classify_output --cpus 3 --prefix F --debug -x .fa -r</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：如果内存较小，则加上“–scratch_dir”参数。</p>\n<hr>\n<h4 id=\"Step-4-export-msa-这一步不运行\"><a href=\"#Step-4-export-msa-这一步不运行\" class=\"headerlink\" title=\"Step 4: export_msa (这一步不运行)\"></a>Step 4: export_msa (这一步不运行)</h4><p>The export_msa will export the untrimmed archaeal or bacterial MSA used in the reference data.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 古菌 0m1.503s</span></span><br><span class=\"line\">$ time gtdbtk export_msa --domain arc --output msa_arc.faa --debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 细菌 0m16.679s</span></span><br><span class=\"line\">$ time gtdbtk export_msa --domain bac --output msa_bac.faa --debug</span><br></pre></td></tr></table></figure>\n<h4 id=\"Step-5-trim-msa-这一步不运行\"><a href=\"#Step-5-trim-msa-这一步不运行\" class=\"headerlink\" title=\"Step 5: trim_msa (这一步不运行)\"></a>Step 5: trim_msa (这一步不运行)</h4><p>The trim_msa command will trim a MSA given a user-specified mask file, or the archaeal&#x2F;bacterial mask present in the reference data.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 古菌 0m10.675s</span></span><br><span class=\"line\">$ time gtdbtk trim_msa --untrimmed_msa msa_arc.faa --output msa_arc_trim.faa --reference_mask arc --debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 细菌 3m28.793s</span></span><br><span class=\"line\">$ time gtdbtk trim_msa --untrimmed_msa msa_bac.faa --output msa_bac_trim.faa --reference_mask bac --debug</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-6-infer\"><a href=\"#Step-6-infer\" class=\"headerlink\" title=\"Step 6: infer\"></a>Step 6: infer</h4><p>Infer tree from multiple sequence alignment.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#古菌 44m54.884s</span></span><br><span class=\"line\">$ time gtdbtk infer --msa_file align_output/F.ar122.msa.fasta --out_dir infer_out_arc_F --prefix F --cpus 12 --debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#细菌</span></span><br><span class=\"line\">$ time gtdbtk infer --msa_file align_output/F.bac120.msa.fasta --out_dir infer_out_bac_F --prefix F --cpus 12 --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk infer --msa_file MSA_FILE --out_dir OUT_DIR [--prot_model {JTT,WAG,LG}] [--no_support] [--gamma] [--prefix PREFIX] [--cpus CPUS] [--debug] [-h]\n\n<ul>\n<li><p>required named arguments:</p>\n<ul>\n<li>--msa_file MSA_FILE   multiple sequence alignment in FASTA format</li>\n<li>--out_dir OUT_DIR     directory to output files</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>--prot_model {JTT,WAG,LG}<br>                protein substitution model for tree inference (default: WAG)</li>\n<li>--no_support          do not compute local support values using the Shimodaira-Hasegawa test (default: False)</li>\n<li>--gamma               rescale branch lengths to optimize the Gamma20 likelihood (default: False)</li>\n<li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li>\n<li>--cpus CPUS           number of CPUs to use (default: 1)</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message</details></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Step-7-decorate\"><a href=\"#Step-7-decorate\" class=\"headerlink\" title=\"Step 7: decorate\"></a>Step 7: decorate</h4><p>Decorate a tree with the GTDB-Tk taxonomy.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 古菌</span></span><br><span class=\"line\">$ time gtdbtk decorate --input_tree infer_out_arc_F/F.unrooted.tree --output_tree F.decorate_unrooted_arc.tree --gtdbtk_classification_file classify_output/classify/F.ar122.summary.tsv --debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 细菌</span></span><br><span class=\"line\">$ time gtdbtk decorate --input_tree infer_out_bac_F/F.unrooted.tree --output_tree F.decorate_unrooted_brc.tree --gtdbtk_classification_file classify_output/classify/F.bac120.summary.tsv --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk decorate --input_tree INPUT_TREE --output_tree OUTPUT_TREE [--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE] [--custom_taxonomy_file CUSTOM_TAXONOMY_FILE]\n                       [--debug] [-h]\n\n<ul>\n<li><p>required named arguments:</p>\n<ul>\n<li>--input_tree INPUT_TREE<br>                path to the unrooted tree in Newick format</li>\n<li>--output_tree OUTPUT_TREE<br>                path to output the tree</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE<br>                file with GTDB-Tk classifications produced by the <code>classify</code> command</li>\n<li>--custom_taxonomy_file CUSTOM_TAXONOMY_FILE<br>                file indicating custom taxonomy strings for user genomes, that should contain any genomes belonging to the outgroup</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message</details></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Step-8-root\"><a href=\"#Step-8-root\" class=\"headerlink\" title=\"Step 8: root\"></a>Step 8: root</h4><p>Root a tree using an outgroup.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk root --input_tree input.tree --outgroup_taxon p__Nanoarchaeota --output_tree output.tree --gtdbtk_classification_file &lt;file with GTDB-Tk classifications produced by the classify <span class=\"built_in\">command</span>&gt; --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk root --input_tree INPUT_TREE --outgroup_taxon OUTGROUP_TAXON --output_tree OUTPUT_TREE [--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE]\n                   [--custom_taxonomy_file CUSTOM_TAXONOMY_FILE] [--debug] [-h]\n\n<ul>\n<li><p>required named arguments:</p>\n<ul>\n<li>--input_tree INPUT_TREE<br>                path to the unrooted tree in Newick format</li>\n<li>--outgroup_taxon OUTGROUP_TAXON<br>                taxon to use as outgroup (e.g., p__Patescibacteria or p__Altarchaeota)</li>\n<li>--output_tree OUTPUT_TREE<br>                path to output the tree</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE<br>                file with GTDB-Tk classifications produced by the <code>classify</code> command</li>\n<li>--custom_taxonomy_file CUSTOM_TAXONOMY_FILE<br>                file indicating custom taxonomy strings for user genomes, that should contain any genomes belonging to the outgroup</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message</details></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"Step-9-ani-rep——计算ANI值\"><a href=\"#Step-9-ani-rep——计算ANI值\" class=\"headerlink\" title=\"Step 9: ani_rep——计算ANI值\"></a>Step 9: ani_rep——计算ANI值</h4><p>Compute the ANI of input genomes to all GTDB-Tk representative genomes.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk ani_rep --genome_dir metawrap_70_5_bins/ --out_dir ani_rep/ --cpus 6 -x .fa --prefix F --debug</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gtdbtk de_novo_wf --genome_dir metawrap_70_5_bins/ --out_dir de_novo_wf --extension .fa --bacteria --outgroup_taxon p__Patescibacteria --prefix F --cpus 6 --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk ani_rep (--genome_dir GENOME_DIR | --batchfile BATCHFILE) --out_dir OUT_DIR [--no_mash] [--mash_k MASH_K] [--mash_s MASH_S] [--mash_d MASH_D] [--mash_v MASH_V]\n                      [--mash_db MASH_DB] [--min_af MIN_AF] [-x EXTENSION] [--prefix PREFIX] [--cpus CPUS] [--debug] [-h]\n\n<ul>\n<li><p>mutually exclusive required arguments:</p>\n<ul>\n<li><p>--genome_dir GENOME_DIR<br>                directory containing genome files in FASTA format</p>\n</li>\n<li><p>--batchfile BATCHFILE<br>                path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p>\n</li>\n<li><p>- required named arguments:</p>\n</li>\n<li><p>--out_dir OUT_DIR     directory to output files</p>\n</li>\n</ul>\n</li>\n<li><p>optional Mash arguments:</p>\n<ul>\n<li>--no_mash             skip pre-filtering of genomes using Mash (default: False)</li>\n<li>--mash_k MASH_K       k-mer size [1-32] (default: 16)</li>\n<li>--mash_s MASH_S       maximum number of non-redundant hashes (default: 5000)</li>\n<li>--mash_d MASH_D       maximum distance to keep [0-1] (default: 0.1)</li>\n<li>--mash_v MASH_V       maximum p-value to keep [0-1] (default: 1.0)</li>\n<li>--mash_db MASH_DB     path to save&#x2F;read (if exists) the Mash reference sketch database (.msh)</li>\n</ul>\n</li>\n<li><p>optional FastANI arguments:</p>\n<ul>\n<li>--min_af MIN_AF       minimum alignment fraction to consider closest genome (default: 0.65)</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>-x, --extension EXTENSION<br>                extension of files to process, gz &#x3D; gzipped (default: fna)</li>\n<li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li>\n<li>--cpus CPUS           number of CPUs to use (default: 1)</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message </details></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"B-4-2-EnrichM-注释\"><a href=\"#B-4-2-EnrichM-注释\" class=\"headerlink\" title=\"B.4.2 EnrichM 注释\"></a>B.4.2 EnrichM 注释</h3><h4 id=\"Step-1-annotate\"><a href=\"#Step-1-annotate\" class=\"headerlink\" title=\"Step 1. annotate\"></a>Step 1. annotate</h4><p>基因组注释管道，可以使用dbCAN将基因组与KO, PFAM, TIGRFAM和CAZY 数据库进行比对。结果将为每个基因组产生一个.gff文件，并生成每个注释类型的频率矩阵（frequency matrix），其中行是注释IDs，列是基因组。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ enrichm annotate --genome_directory metawrap_70_5_bins --output EnrichM_annotate --force --ko --ko_hmm --pfam --tigrfam --clusters --orthologs --cazy --ec --threads 30 --parallel 8 --suffix .fa --count_domains --chunk_number 8</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>Output options:</p>\n<ul>\n<li>--output OUTPUT       Output directory</li>\n<li>--force               Overwrite previous run</li>\n</ul>\n</li>\n<li><p>Input options (Use one):</p>\n<ul>\n<li>--genome_files GENOME_FILES [GENOME_FILES …]<br>      Space separated list of genomes to annotate</li>\n<li>--genome_directory GENOME_DIRECTORY<br>      Directory containing genomes to annotate</li>\n<li>--protein_files PROTEIN_FILES [PROTEIN_FILES …]<br>      Space separated list of .faa files of genomes to annotate. Protein files need to be generated by prodigal.</li>\n<li>--protein_directory PROTEIN_DIRECTORY<br>      Directory containing .faa files of genomes to annotate. Protein files need to be generated by prodigal.</li>\n</ul>\n</li>\n<li><p>Annotations options:</p>\n<ul>\n<li>--ko                  Annotate with KO ids</li>\n<li>--ko_hmm              Annotate with KO ids</li>\n<li>--pfam                Annotate with Pfam HMMs</li>\n<li>--tigrfam             Annotate with TIGRFAM HMMs</li>\n<li>--clusters            Annotate with cluster ids</li>\n<li>--orthologs           Annotate with ortholog ids</li>\n<li>--cazy                Annotate with dbCAN HMMs</li>\n<li>--ec                  Annotate with EC ids</li>\n</ul>\n</li>\n<li><p>Cutoff options:</p>\n<ul>\n<li>--cut_ga              For PFAM and TIGRfam searches: use profiles GA gathering cutoffs to set all thresholding</li>\n<li>--cut_nc              For PFAM and TIGRfam searches: use profiles NC noise cutoffs to set all thresholding</li>\n<li>--cut_tc              For PFAM and TIGRfam searches: use profiles TC trusted cutoffs to set all thresholding</li>\n<li>--cut_ko              For KO HMM annotation searches: use cutoffs defined by KEGG to maximise F-score.</li>\n<li>--evalue EVALUE       Use this evalue cutoff to filter false positives (default: 1e-05)</li>\n<li>--bit BIT             Use this bit score cutoff to filter false positives (default: 0)</li>\n<li>--id ID               Use this percent identity cutoff to filter false positives (default: 0.3)</li>\n<li>--aln_query ALN_QUERY<br>      This fraction of the query must align to the reference (default: 0.7)</li>\n<li>--aln_reference ALN_REFERENCE<br>      This fraction of the reference must align to the query (default: 0.7)</li>\n<li>--c C                 When clustering, use matches above this fraction of aligned (covered) query and target residues (default: 0.7)</li>\n</ul>\n</li>\n<li><p>Runtime options:</p>\n<ul>\n<li>--threads THREADS     Use this number of threads when annotating with BLAST and HMMsearch (default: 1)</li>\n<li>--parallel PARALLEL   Run this number of jobs in parallel when annotating with HMMsearch (default: 5)</li>\n<li>--inflation INFLATION<br>     Inflation factor to use when calling clusters in ortholog (default &#x3D; 5.0)</li>\n<li>--suffix SUFFIX       Treat files ending with this suffix within the –genome_directory as genomes (default: .fna for –genome_directory and .faa for )</li>\n<li>--light               Don’t store metadata for genome files (can’t use enrichM compare downstream, default&#x3D;False)</li>\n<li>--count_domains       Fill the frequency matrix with the total number of times an annotation was detected (for example, when one domain more than once within a protein), rather than the count of proteins with with that annotation</li>\n<li>--chunk_number CHUNK_NUMBER<br>      Split loading of genomes into this many chunks (default &#x3D; 4)</li>\n<li>--chunk_max CHUNK_MAX<br>      Maximum number of genomes to load per chunk (default &#x3D; 2500)</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h4 id=\"Step-2-classify\"><a href=\"#Step-2-classify\" class=\"headerlink\" title=\"Step 2. classify\"></a>Step 2. classify</h4><p>Determine what pathways a genome encodes. Classify quickly reads in KO annotations in the form of a matrix (KO IDs as rows, genomes as columns) and determines which KEGG modules are complete. Annotation matrices can be generated using the annotate function.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ enrichm classify --output EnrichM_classify/ko_hmm_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ko_hmm_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/ko_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ko_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下6个命令可不必运行</span></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/cazy_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/cazy_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/cluster_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/cluster_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/ec_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ec_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/ortholog_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ortholog_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/pfam_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/pfam_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/tigrfam_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/tigrfam_frequency_table.tsv --cutoff 0</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>Output options:</p>\n<ul>\n<li>--output OUTPUT       Output directory</li>\n<li>--force               Overwrite previous run</li>\n</ul>\n</li>\n<li><p>Input options:</p>\n<ul>\n<li>--genome_and_annotation_matrix GENOME_AND_ANNOTATION_MATRIX<br>      Path to file containing a genome annotation matrix</li>\n<li>--custom_modules CUSTOM_MODULES<br>      Tab separated file containing module name, definition as the columns</li>\n<li>--module_rules_json MODULE_RULES_JSON<br>       json file specifying rules to interpret the annotation and guide module annotation</li>\n<li>--gff_files GFF_FILES<br>      GFF files for the genomes being classified.</li>\n</ul>\n</li>\n<li><p>Cutoff options:</p>\n<ul>\n<li>--cutoff CUTOFF       Output only modules with greater than this percent of the requied KO groups (default &#x3D; print all modules)</li>\n</ul>\n</li>\n<li><p>Runtime options:</p>\n<ul>\n<li>--aggregate           Calculate the abundance of each pathway within each genome&#x2F;sample (column)</details></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Step-3-enrichment\"><a href=\"#Step-3-enrichment\" class=\"headerlink\" title=\"Step 3. enrichment\"></a>Step 3. enrichment</h4><p>Enrichment will read in KO or PFAM annotations in the form of a matrix (IDs as rows, genomes as columns) and a metadata file that separates genomes into groups to compare, and will run some basic stats to determine the enrichment of modules or pfam clans between and within the groups.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ enrichm enrichment --output EnrichM_enrichment/ --metadata genome.list --annotation_matrix EnrichM_annotate/ko_frequency_table.tsv --force</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>- Output options:</p>\n<ul>\n<li>--output OUTPUT       Output directory</li>\n<li>--force               Overwrite previous run</li>\n</ul>\n</li>\n<li><p>Input options:</p>\n<ul>\n<li>--annotate_output ANNOTATE_OUTPUT<br>     Output directory provided by enrichm annotate</li>\n<li>--metadata METADATA   Metadata file with two columns, the first with the genome name, the second with the groupings to compare.</li>\n<li>--annotation_matrix ANNOTATION_MATRIX<br>     Annotation matrix to compare.</li>\n<li>--gff_files GFF_FILES [GFF_FILES …]<br>     Gff files for genomes to compare.</li>\n<li>--abundance 基因组丰度矩阵</li>\n<li>--abundance_metadata ABUNDANCE_METADATA<br>     Metadata grouping abundance samples.</li>\n<li>--transcriptome TRANSCRIPTOME  基因组丰度矩阵</li>\n<li>--transcriptome_metadata TRANSCRIPTOME_METADATA<br>     Metadata grouping abundance samples.</li>\n</ul>\n</li>\n<li><p>Genome Taxonomy DataBase (GTDB) options:</p>\n<ul>\n<li>--batchfile BATCHFILE<br>     metadata file to compare with.</li>\n</ul>\n</li>\n<li><p>Runtime options:</p>\n<ul>\n<li>--pval_cutoff PVAL_CUTOFF<br>     Only output results with a p-value below a this cutoff (default&#x3D;0.05).</li>\n<li>--proportions_cutoff PROPORTIONS_CUTOFF<br>     Proportion enrichment cutoff.</li>\n<li>--threshold THRESHOLD<br>     The threshold to control for in false discovery rate of familywise error rate.</li>\n<li>--multi_test_correction MULTI_TEST_CORRECTION<br>     The form of mutiple test correction to use. Uses the statsmodel module and consequently has all of its options.<br>                Default: Benjamini-Hochberg FDR (fdr_bh)<br>                Options: Bonferroni (b)<br>                     Sidak (s)<br>                     Holm (h)<br>                     Holm-Sidak (hs)<br>                     Simes-Hochberg (sh)<br>                     Hommel (ho)<br>                     FDR Benjamini-Yekutieli (fdr_by)<br>                     FDR 2-stage Benjamini-Hochberg (fdr_tsbh)<br>                     FDR 2-stage Benjamini-Krieger-Yekutieli (fdr_tsbky)<br>                     FDR adaptive Gavrilov-Benjamini-Sarkar (fdr_gbs))</li>\n<li>--processes PROCESSES  采用多少个进程进行富集分析</li>\n<li>--allow_negative_values  允许输入的矩阵中有负值</li>\n<li>--ko                    Compare KO ids (annotated with DIAMOND)</li>\n<li>--ko_hmm          Compare KO ids (annotated with HMMs)</li>\n<li>--pfam                Compare Pfam ids</li>\n<li>--tigrfam             Compare TIGRFAM ids</li>\n<li>--cluster              Compare cluster ids</li>\n<li>--ortholog            Compare ortholog ids</li>\n<li>--cazy                 Compare dbCAN ids</li>\n<li>--ec                     Compare EC ids</li>\n<li>--range RANGE         Base pair range to search for synteny within. Default &#x3D; 2500.</li>\n<li>--subblock_size SUBBLOCK_SIZE<br>                Number of genes clustered in a row to be reported. Default &#x3D; 2.</li>\n<li>--operon_mismatch_cutoff OPERON_MISMATCH_CUTOFF<br>                Number of allowed mismatches when searching for operons across genomes. Defaul</li>\n<li>--operon_match_score_cutoff OPERON_MATCH_SCORE_CUTOFF<br>                Score cutoff for operon matches</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h4 id=\"Step-4-pathway\"><a href=\"#Step-4-pathway\" class=\"headerlink\" title=\"Step 4. pathway\"></a>Step 4. pathway</h4><p>Pathway reads in a KO matrix and generates a Cytoscape-readable metabolic network and metadata file. Only reactions that are possible given the KOs present in the input matrix are shown, and the modules and reactions that are included in the output can be customized（<strong>报错</strong>）.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ enrichm pathway --matrix EnrichM_annotate/ko_frequency_table.tsv --genome_metadata genome.list --output EnrichM_pathway --abundance EnrichM_enrichment/F01_vs_F02_ivg_results.cdf.tsv --abundance_metadata genome.list --force</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>Input options:</p>\n<ul>\n<li>--matrix KO矩阵. 必须提供</li>\n<li>--genome_metadata GENOME_METADATA<br>       Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li>\n<li>--abundance 丰度矩阵</li>\n<li>--abundance_metadata ABUNDANCE_METADATA<br>      Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li>\n<li>--tpm_values TPM_VALUES<br>       DetectM产生的TPM values</li>\n<li>--tpm_metadata TPM_METADATA<br>       Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li>\n<li>--metabolome METABOLOME<br>       Metabolome CID matrix.</li>\n</ul>\n</li>\n<li><p>Logging options:</p>\n<ul>\n<li>--log LOG             Output logging information to this file.</li>\n<li>--verbosity VERBOSITY<br>     Level of verbosity (1 - 5 - default &#x3D; 4) 5 &#x3D; Very verbose, 1 &#x3D; Silent</li>\n</ul>\n</li>\n<li><p>Output options:</p>\n<ul>\n<li>--output             输出路径</li>\n<li>--force               覆盖之前输出的结果</li>\n</ul>\n</li>\n<li><p>Pathway options:</p>\n<ul>\n<li>--limit LIMIT [LIMIT …]<br>     USE ONLY these reactions, or reactions within this pathway or module (space separated list).</li>\n<li>--filter FILTER [FILTER …]<br>     Do not use these reactions, or reactions within this pathway or module (space separated list).</li>\n<li>--enrichment_output ENRICHMENT_OUTPUT<br>      Supply an enrichment output to integrate the results into the output network.</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h4 id=\"Step-5-explore\"><a href=\"#Step-5-explore\" class=\"headerlink\" title=\"Step 5. explore\"></a>Step 5. explore</h4><p>Explore is similar to pathway, but rather than generating a specified pathway it will start from a given query compound ID, and explore the possible reactions that use that compound given the enzymes present in the input KO matrix.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ </span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>Input options: </p>\n<ul>\n<li>--matrix MATRIX       KO矩阵. 必须提供</li>\n<li>--genome_metadata GENOME_METADATA<br>      Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li>\n<li>--abundance 丰度矩阵</li>\n<li>--abundance_metadata ABUNDANCE_METADATA<br>     Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare..</li>\n<li>--tpm_values TPM_VALUES<br>     DetectM产生的TPM values</li>\n<li>--tpm_metadata TPM_METADATA<br>     Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare..</li>\n<li>--metabolome METABOLOME<br>     Metabolome CID matrix.</li>\n</ul>\n</li>\n<li><p>Logging options:</p>\n<ul>\n<li>--log LOG             Output logging information to this file.</li>\n<li>--verbosity VERBOSITY<br>      Level of verbosity (1 - 5 - default &#x3D; 4) 5 &#x3D; Very verbose, 1 &#x3D; Silent</li>\n</ul>\n</li>\n<li><p>Output options:</p>\n<ul>\n<li>--output             输出路径</li>\n<li>--force               覆盖之前输出的结果</li>\n</ul>\n</li>\n<li><p>Query options:</p>\n<ul>\n<li>--queries QUERIES     A file containing the KEGG ids of the compounds from which to start in the metabolic network</li>\n<li>--depth DEPTH         Number of steps to take into the metabolic network</details></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"C-Metagenome-functional-profiling\"><a href=\"#C-Metagenome-functional-profiling\" class=\"headerlink\" title=\"C Metagenome functional profiling\"></a>C Metagenome functional profiling</h1><ul>\n<li>从宏基因组组装的contigs中预测基因——prodigal -p meta模式</li>\n<li>Metagenome-assembled genes which were not included in the MAGs were subjected to taxonomic classification using <a href=\"https://github.com/bioinformatics-centre/kaiju\">Kaiju</a></li>\n<li>eggNOG-mapper比对<a href=\"https://doi.org/10.1093/nar/gkv1248\">eggnog</a>数据库</li>\n<li>HMMER 比对<a href=\"https://doi.org/10.1093/nar/gky995\">Pfam</a></li>\n<li><a href=\"https://www.kegg.jp/blastkoala/\">GhostKOALA </a>和<a href=\"https://www.genome.jp/tools/kofamkoala/\">KofamKOALA (v1.0.0)</a>比对<a href=\"https://doi.org/10.1093/nar/28.1.27\">KEGG</a></li>\n<li>BLASTP比对<a href=\"https://doi.org/10.1093/nar/gkv1103\">TCDB</a></li>\n<li><a href=\"http://bcb.unl.edu/dbCAN2/\">dbCAN2 (v2.0.1)</a>比对<a href=\"https://doi.org/10.1093/nar/gkn663\">CAZy</a></li>\n<li>BLASTP比对<a href=\"https://www.ebi.ac.uk/merops/submit_searches.shtml\">MEROPS </a></li>\n<li><a href=\"https://github.com/Arkadiy-Garber/FeGenie\">FeGenie</a>检测Iron-related genes</li>\n<li>Fe-containing domains were characterized using <a href=\"https://doi.org/10.1073/pnas.0605798103\">Superfamily (v1.75)</a>.</li>\n<li>砷呼吸和抗性基因挖掘<a href=\"https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/HMM_search\">https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic&#x2F;tree&#x2F;master&#x2F;HMM_search</a>，模型下载<a href=\"https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/gene_targeted_assembly/gene_resource\">https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/gene_targeted_assembly/gene_resource</a></li>\n</ul>\n<h1 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h1><ul>\n<li><a href=\"https://github.com/biobakery/MetaPhlAn/wiki/MetaPhlAn-3.0\">MetaPhlAn 3.0 tutorial</a></li>\n<li><a href=\"https://zouhua.top/archives/9d8099c8.html\">MetaPhlAn 3.0: 宏基因组物种组成分析软件</a></li>\n<li><a href=\"https://github.com/biobakery/biobakery/wiki/GraPhlAn\">GraPhlAn Tutorial</a></li>\n<li></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"宏基因组","path":"api/tags/宏基因组.json"}]},{"title":"扩增子分析--计算随机过程和决定性过程比例","slug":"扩增子分析-计算随机过程和决定性过程比例","date":"2021-03-25T08:42:06.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/扩增子分析-计算随机过程和决定性过程比例.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>确定性过程（deterministic processes）和随机性过程（stochastic processes)是两个影响微生物群落结构系统发育组装的重要过程，本文介绍计算二者所占比例的方法。</p>\n<span id=\"more\"></span>\n<h1 id=\"1-软件\"><a href=\"#1-软件\" class=\"headerlink\" title=\"1. 软件\"></a><font color=#FF0000 >1. 软件</font></h1><ul>\n<li>NST</li>\n<li>iCAMP</li>\n<li>ape 用于读取进化树文件</li>\n<li>picante</li>\n</ul>\n<h1 id=\"2-文件准备\"><a href=\"#2-文件准备\" class=\"headerlink\" title=\"2. 文件准备\"></a><font color=#FF0000 >2. 文件准备</font></h1><h2 id=\"2-1-Feature-Table\"><a href=\"#2-1-Feature-Table\" class=\"headerlink\" title=\"2.1 Feature Table\"></a><font color=#FF0000 >2.1 Feature Table</font></h2><p>行为OTUs&#x2F;ASVs，列为样本。</p>\n<table>\n<thead>\n<tr>\n<th>TaxonID</th>\n<th>Sample 1</th>\n<th>Sample 2</th>\n<th>Sample 3</th>\n<th>Sample 4</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>OTU1</td>\n<td>232.0</td>\n<td>209.0</td>\n<td>349.0</td>\n<td>256.0</td>\n</tr>\n<tr>\n<td>OTU2</td>\n<td>75.0</td>\n<td>35.0</td>\n<td>44.0</td>\n<td>0.0</td>\n</tr>\n<tr>\n<td>OTU3</td>\n<td>237.0</td>\n<td>224.0</td>\n<td>291.0</td>\n<td>353.0</td>\n</tr>\n<tr>\n<td>OTU4</td>\n<td>371.0</td>\n<td>80.0</td>\n<td>319.0</td>\n<td>345.0</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-2-Group-File\"><a href=\"#2-2-Group-File\" class=\"headerlink\" title=\"2.2 Group File\"></a><font color=#FF0000 >2.2 Group File</font></h2><p>该文件描述了所有样本的分组情况，如实验组和对照组，或者其他分组。</p>\n<table>\n<thead>\n<tr>\n<th>Sample_ID</th>\n<th>Group</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Sample 1</td>\n<td>Group x</td>\n</tr>\n<tr>\n<td>Sample 2</td>\n<td>Group x</td>\n</tr>\n<tr>\n<td>Sample 3</td>\n<td>Group y</td>\n</tr>\n<tr>\n<td>Sample 4</td>\n<td>Group y</td>\n</tr>\n<tr>\n<td>…</td>\n<td>…</td>\n</tr>\n</tbody></table>\n<h2 id=\"2-3-Tree-File\"><a href=\"#2-3-Tree-File\" class=\"headerlink\" title=\"2.3 Tree File\"></a><font color=#FF0000 >2.3 Tree File</font></h2><p>包含Feature table中所有OTUs&#x2F;ASVs的系统发育树文件，理想条件下仅包含Feature table中的OTUs&#x2F;ASVs，不过大部分情况下还会包含数据库中的一些物种，在随后的分析中需要去除多余的物种（后续会讲到）。</p>\n<h1 id=\"3-开始分析\"><a href=\"#3-开始分析\" class=\"headerlink\" title=\"3. 开始分析\"></a><font color=#FF0000 >3. 开始分析</font></h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">########################</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env R</span></span><br><span class=\"line\"><span class=\"comment\"># version 20200919</span></span><br><span class=\"line\"><span class=\"comment\"># Step 1. 文件、路径和参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定包含输入文件的目录路径，注意区分Windows和Linux的路径写法</span></span><br><span class=\"line\">wd<span class=\"operator\">=</span><span class=\"string\">&quot;/mnt/e/Researches/lujia16S/Analysis_20200907/exported-feature-table_2k_abund22/Raup_Crick&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定结果文件的保存路径</span></span><br><span class=\"line\">save.wd<span class=\"operator\">=</span><span class=\"string\">&quot;/mnt/e/Researches/lujia16S/Analysis_20200907/exported-feature-table_2k_abund22/Raup_Crick/Result2&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建文件保存路径</span></span><br><span class=\"line\">dir.create<span class=\"punctuation\">(</span>save.wd<span class=\"punctuation\">,</span> recursive <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定Feature table（OTU表）的文件名</span></span><br><span class=\"line\">com.file<span class=\"operator\">=</span><span class=\"string\">&quot;feature-table.tsv&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定样本分组文件，每行为一个样本</span></span><br><span class=\"line\">group.file<span class=\"operator\">=</span><span class=\"string\">&quot;treatment.txt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定NWK格式的系统发育树文件</span></span><br><span class=\"line\">tree.file<span class=\"operator\">=</span><span class=\"string\">&quot;tree.nwk&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置并行运算使用的线程数</span></span><br><span class=\"line\">nworker<span class=\"operator\">=</span><span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># randomization time for null model analysis. 真实分析的时候一般设置为1000，如果测试的话可以设20</span></span><br><span class=\"line\">rand.time<span class=\"operator\">=</span><span class=\"number\">999</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出文件的前缀名，随便设置</span></span><br><span class=\"line\">prefix<span class=\"operator\">=</span><span class=\"string\">&quot;Lujia&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 2. 加载R包</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 确保已经安装过所需的R包</span></span><br><span class=\"line\"><span class=\"comment\">#install.packages(&quot;NST&quot;) </span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>ape<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>iCAMP<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>NST<span class=\"punctuation\">)</span> <span class=\"comment\"># need to be NST &gt;=3.0.3</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>picante<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 3. 加载数据并匹配IDs</span></span><br><span class=\"line\"></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span>wd<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读入Feature Table，注意自己文件的列与列之间的分隔符是什么，制表符用sep = &quot;\\t&quot;，逗号用sep = &quot;,&quot;</span></span><br><span class=\"line\">comm<span class=\"operator\">=</span>t<span class=\"punctuation\">(</span>read.table<span class=\"punctuation\">(</span>com.file<span class=\"punctuation\">,</span>header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> row.names <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> as.is <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读入分组文件，同样注意设置分隔符</span></span><br><span class=\"line\">group<span class=\"operator\">=</span>read.table<span class=\"punctuation\">(</span>group.file<span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> row.names <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> as.is <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果tree中的OTUs和Feature Table中的OTUs一一对应，可以直接用下面一个命令读入tree（注意去掉###），否则的话则运行下面LHL加入的3行命令</span></span><br><span class=\"line\"><span class=\"comment\">###tree=ape::read.tree(file = tree.file) # if you have tree</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下3行是LHL加入的</span></span><br><span class=\"line\">phy<span class=\"operator\">&lt;-</span>read.tree<span class=\"punctuation\">(</span>tree.file<span class=\"punctuation\">)</span><span class=\"comment\"># 读入树文件</span></span><br><span class=\"line\">prune_tree<span class=\"operator\">&lt;-</span>prune.sample<span class=\"punctuation\">(</span>comm<span class=\"punctuation\">,</span>phy<span class=\"punctuation\">)</span><span class=\"comment\"># 使树文件和OTU表文件一一对齐</span></span><br><span class=\"line\">tree<span class=\"operator\">=</span>prune_tree <span class=\"comment\"># 此刻的Tree干净了，可用于后续分析而不会报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下命令检测Feature Table中的样本名称是否与分组文件中的样本名一一对应</span></span><br><span class=\"line\">samp.ck<span class=\"operator\">=</span>NST<span class=\"operator\">::</span>match.name<span class=\"punctuation\">(</span>rn.list<span class=\"operator\">=</span><span class=\"built_in\">list</span><span class=\"punctuation\">(</span>comm<span class=\"operator\">=</span>comm<span class=\"punctuation\">,</span>group<span class=\"operator\">=</span>group<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">comm<span class=\"operator\">=</span>samp.ck<span class=\"operator\">$</span>comm</span><br><span class=\"line\">comm<span class=\"operator\">=</span>comm<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span>colSums<span class=\"punctuation\">(</span>comm<span class=\"punctuation\">)</span><span class=\"operator\">&gt;</span><span class=\"number\">0</span><span class=\"punctuation\">,</span>drop<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">group<span class=\"operator\">=</span>samp.ck<span class=\"operator\">$</span>group</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下命令检测Feature Table中的OTUs名称是否与Tree中的OTUs名一一对应</span></span><br><span class=\"line\">tax.ck<span class=\"operator\">=</span>NST<span class=\"operator\">::</span>match.name<span class=\"punctuation\">(</span>cn.list <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>comm<span class=\"operator\">=</span>comm<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>tree.list <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>tree<span class=\"operator\">=</span>tree<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"># if you have tree</span></span><br><span class=\"line\">comm<span class=\"operator\">=</span>tax.ck<span class=\"operator\">$</span>comm</span><br><span class=\"line\">tree<span class=\"operator\">=</span>tax.ck<span class=\"operator\">$</span>tree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 4. Grouping way and metacommunity seting</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择分组，如果拥有多种分组方式，每次运行时选择其中的一组。此处选择的时分组文件中的第二列</span></span><br><span class=\"line\">groupi<span class=\"operator\">=</span>group<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">,</span>drop<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新定义输出文件的前缀，以分组的名称来命名，此处以分组文件第二列的表头“Group”为前缀</span></span><br><span class=\"line\">prefixi<span class=\"operator\">=</span>paste0<span class=\"punctuation\">(</span>prefix<span class=\"punctuation\">,</span><span class=\"string\">&quot;.Group&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if treatment and control are from different metacommunities, you may set meta.groupi=groupi，默认为NULL</span></span><br><span class=\"line\"><span class=\"comment\">#meta.groupi=NULL</span></span><br><span class=\"line\">meta.groupi<span class=\"operator\">=</span>groupi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 5. taxonomic NST</span></span><br><span class=\"line\"><span class=\"comment\"># Step 5.1 calculate tNST</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定计算距离矩阵的方法，&quot;jaccard&quot; and &quot;bray&quot; are preferred.</span></span><br><span class=\"line\">dist.method<span class=\"operator\">=</span><span class=\"string\">&quot;bray&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 记录运行时间</span></span><br><span class=\"line\">t1<span class=\"operator\">=</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入输出目录</span></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span>save.wd<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算tNST</span></span><br><span class=\"line\">tnst<span class=\"operator\">=</span>tNST<span class=\"punctuation\">(</span>comm<span class=\"operator\">=</span>comm<span class=\"punctuation\">,</span> group<span class=\"operator\">=</span>groupi<span class=\"punctuation\">,</span> meta.group<span class=\"operator\">=</span>meta.groupi<span class=\"punctuation\">,</span> meta.com<span class=\"operator\">=</span><span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> dist.method<span class=\"operator\">=</span>dist.method<span class=\"punctuation\">,</span> abundance.weighted<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> rand<span class=\"operator\">=</span>rand.time<span class=\"punctuation\">,</span> output.rand<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> nworker<span class=\"operator\">=</span>nworker<span class=\"punctuation\">,</span> LB<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> null.model<span class=\"operator\">=</span><span class=\"string\">&quot;PF&quot;</span><span class=\"punctuation\">,</span> between.group<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> SES<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> RC<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以R data格式保存tNST的输出 </span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>tnst<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span> <span class=\"string\">&quot;.tNST.rda&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存其他tNST结果到多个文件中</span></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>tnst<span class=\"operator\">$</span>index.grp<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span> <span class=\"string\">&quot;.tNST.summary.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>tnst<span class=\"operator\">$</span>index.pair.grp<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.tNST.pairwise.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>tnst<span class=\"operator\">$</span>index.pair<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.tNST.pairwise.index.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>tnst<span class=\"operator\">$</span>index.between<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.tNST.between.summary.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>tnst<span class=\"operator\">$</span>index.pair.between<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.tNST.pairwise.between.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">format<span class=\"punctuation\">(</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">-</span>t1<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 5.2 Bootstrapping test</span></span><br><span class=\"line\"></span><br><span class=\"line\">t1<span class=\"operator\">=</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算Bootstrapping</span></span><br><span class=\"line\">tnstbt<span class=\"operator\">=</span>nst.boot<span class=\"punctuation\">(</span>nst.result<span class=\"operator\">=</span>tnst<span class=\"punctuation\">,</span> group<span class=\"operator\">=</span>groupi<span class=\"punctuation\">,</span> rand<span class=\"operator\">=</span>rand.time<span class=\"punctuation\">,</span> trace<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> two.tail<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> out.detail<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> between.group<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> nworker<span class=\"operator\">=</span>nworker<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存结果</span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>tnstbt<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.tNST.boot.rda&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存结果</span></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>tnstbt<span class=\"operator\">$</span>summary<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.tNST.boot.summary.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>tnstbt<span class=\"operator\">$</span>compare<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.tNST.boot.compare.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">(</span>t<span class=\"operator\">=</span>format<span class=\"punctuation\">(</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">-</span>t1<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 5.3 PERMANOVA</span></span><br><span class=\"line\"></span><br><span class=\"line\">t1<span class=\"operator\">=</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">tnstpaov<span class=\"operator\">=</span>nst.panova<span class=\"punctuation\">(</span>nst.result<span class=\"operator\">=</span>tnst<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> groupi<span class=\"punctuation\">,</span> rand <span class=\"operator\">=</span> rand.time<span class=\"punctuation\">,</span> trace <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>tnstpaov<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.tNST.PERMANOVA.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"punctuation\">(</span>t<span class=\"operator\">=</span>format<span class=\"punctuation\">(</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">-</span>t1<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Steo 6. phylogenetic NST</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 6.1 phylogentic distance matrix # use bigmemory for big dataset</span></span><br><span class=\"line\"></span><br><span class=\"line\">wd.pd<span class=\"operator\">=</span>paste0<span class=\"punctuation\">(</span>save.wd<span class=\"punctuation\">,</span><span class=\"string\">&quot;/pdbig&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span><span class=\"punctuation\">(</span><span class=\"operator\">!</span>dir.exists<span class=\"punctuation\">(</span>wd.pd<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span>dir.create<span class=\"punctuation\">(</span>wd.pd<span class=\"punctuation\">)</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span>wd.pd<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span><span class=\"punctuation\">(</span>file.exists<span class=\"punctuation\">(</span><span class=\"string\">&quot;pd.desc&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"comment\"># if already done before, directly use it.</span></span><br><span class=\"line\">  pdbig<span class=\"operator\">=</span><span class=\"built_in\">list</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  pdbig<span class=\"operator\">$</span>tip.label<span class=\"operator\">=</span>read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;pd.taxon.name.csv&quot;</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;,&quot;</span><span class=\"punctuation\">,</span> row.names <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> as.is <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  pdbig<span class=\"operator\">$</span>pd.wd<span class=\"operator\">=</span>wd.pd</span><br><span class=\"line\">  pdbig<span class=\"operator\">$</span>pd.file<span class=\"operator\">=</span><span class=\"string\">&quot;pd.desc&quot;</span></span><br><span class=\"line\">  pdbig<span class=\"operator\">$</span>pd.name.file<span class=\"operator\">=</span><span class=\"string\">&quot;pd.taxon.name.csv&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"keyword\">else</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  pdbig<span class=\"operator\">=</span>iCAMP<span class=\"operator\">::</span>pdist.big<span class=\"punctuation\">(</span>tree <span class=\"operator\">=</span> tree<span class=\"punctuation\">,</span> wd <span class=\"operator\">=</span> wd.pd<span class=\"punctuation\">,</span> nworker <span class=\"operator\">=</span> nworker<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 6.2 calculate pNST</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># to count time cost</span></span><br><span class=\"line\">t1<span class=\"operator\">=</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span>save.wd<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pnst<span class=\"operator\">=</span>NST<span class=\"operator\">::</span>pNST<span class=\"punctuation\">(</span>comm<span class=\"operator\">=</span>comm<span class=\"punctuation\">,</span> pd.desc<span class=\"operator\">=</span>pdbig<span class=\"operator\">$</span>pd.file<span class=\"punctuation\">,</span> pd.wd<span class=\"operator\">=</span>pdbig<span class=\"operator\">$</span>pd.wd<span class=\"punctuation\">,</span></span><br><span class=\"line\">pd.spname<span class=\"operator\">=</span>pdbig<span class=\"operator\">$</span>tip.label<span class=\"punctuation\">,</span> group<span class=\"operator\">=</span>groupi<span class=\"punctuation\">,</span> meta.group<span class=\"operator\">=</span>meta.groupi<span class=\"punctuation\">,</span> abundance.weighted<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> rand<span class=\"operator\">=</span>rand.time<span class=\"punctuation\">,</span> output.rand<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> taxo.null.model<span class=\"operator\">=</span><span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> phylo.shuffle<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> exclude.conspecifics<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> nworker<span class=\"operator\">=</span>nworker<span class=\"punctuation\">,</span> between.group<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> SES<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> RC<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># save pNST output in R data format</span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>pnst<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.rda&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pnst<span class=\"operator\">$</span>index.grp<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.summary.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pnst<span class=\"operator\">$</span>index.pair.grp<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.pairwise.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pnst<span class=\"operator\">$</span>index.pair<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.pairwise.index.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pnst<span class=\"operator\">$</span>index.between<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.between.summary.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pnst<span class=\"operator\">$</span>index.pair.between<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.pairwise.between.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">format<span class=\"punctuation\">(</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">-</span>t1<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 6.3 Bootstrapping test</span></span><br><span class=\"line\"></span><br><span class=\"line\">t1<span class=\"operator\">=</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pnstbt<span class=\"operator\">=</span>nst.boot<span class=\"punctuation\">(</span>nst.result<span class=\"operator\">=</span>pnst<span class=\"punctuation\">,</span> group<span class=\"operator\">=</span>groupi<span class=\"punctuation\">,</span> rand<span class=\"operator\">=</span>rand.time<span class=\"punctuation\">,</span> trace<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> two.tail<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> out.detail<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> between.group<span class=\"operator\">=</span><span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> nworker<span class=\"operator\">=</span>nworker<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>pnstbt<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.boot.rda&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pnstbt<span class=\"operator\">$</span>summary<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.boot.summary.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pnstbt<span class=\"operator\">$</span>compare<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.boot.compare.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"punctuation\">(</span>t<span class=\"operator\">=</span>format<span class=\"punctuation\">(</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">-</span>t1<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 6.4 PERMANOVA</span></span><br><span class=\"line\"></span><br><span class=\"line\">t1<span class=\"operator\">=</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pnstpaov<span class=\"operator\">=</span>nst.panova<span class=\"punctuation\">(</span>nst.result<span class=\"operator\">=</span>pnst<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> groupi<span class=\"punctuation\">,</span> rand <span class=\"operator\">=</span> rand.time<span class=\"punctuation\">,</span> trace <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">write.table<span class=\"punctuation\">(</span>pnstpaov<span class=\"punctuation\">,</span>file <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span>prefixi<span class=\"punctuation\">,</span><span class=\"string\">&quot;.pNST.PERMANOVA.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">quote</span> <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span>sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"punctuation\">(</span>t<span class=\"operator\">=</span>format<span class=\"punctuation\">(</span>Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"operator\">-</span>t1<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-结果解读\"><a href=\"#4-结果解读\" class=\"headerlink\" title=\"4. 结果解读\"></a><font color=#FF0000 >4. 结果解读</font></h1><h2 id=\"4-1-确定性过程和随机性过程的相对重要性\"><a href=\"#4-1-确定性过程和随机性过程的相对重要性\" class=\"headerlink\" title=\"4.1 确定性过程和随机性过程的相对重要性\"></a><font color=#FF0000 >4.1 确定性过程和随机性过程的相对重要性</font></h2><ul>\n<li><p>An index, normalized stochasticity ratio (NST), was developed with 50% as the boundary point between more deterministic (&lt;50%) and more stochastic (&gt;50%) assembly. <font color=#2196F3>NST &gt; 50%时Stochastic Processes占主导，而NST &lt; 50%时，Deterministic Processes占主导。</font></p>\n</li>\n<li><p>用显著的偏差(即|β NTI| &gt; 2)来表示确定性过程占主导地位和用小的偏差(即|β NTI| &lt; 2)来表明随机过程占主导地位。用显著的偏差(即|β NTI| &gt; 2)来表示确定性过程占主导地位和用小的偏差(即|β NTI| &lt; 2)来表明随机过程占主导地位。同质性和变异性选择应分别造成小于和大于预期的群落更替;βNTI &lt;−2或&gt; + 2进一步解释为表明同质性或变异性选择分别占主导地位;</p>\n</li>\n</ul>\n<h2 id=\"4-2-通过RCbray判断随机过程中各种过程的贡献\"><a href=\"#4-2-通过RCbray判断随机过程中各种过程的贡献\" class=\"headerlink\" title=\"4.2 通过RCbray判断随机过程中各种过程的贡献\"></a><font color=#FF0000 >4.2 通过RCbray判断随机过程中各种过程的贡献</font></h2><p>Modified Raup-Crick index (RCbray) is subsequently calculated by comparing empirically observed Bray-Curtis and simulated null distribution. Thus, according to themodified Raup-Crick index (RCbray), stochastic processes could be classified into 3 ecological processes: 均质分散homogenizing dispersal (RCbray &lt; −0.95), 分散限制dispersal limitation (RCbray &gt; +0.95) and 生态漂变ecological drift (−0.95&lt; RCbray &lt; +0.95) <a href=\"https://doi.org/10.1038/ismej.2012.22\">Stegen et al., 2012</a>;  <a href=\"https://doi.org/10.1038/ismej.2013.93\">Stegen et al., 2013</a>.</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"扩增子","path":"api/tags/扩增子.json"}]},{"title":"批量下载某研究方向重要文献","slug":"批量下载某研究方向重要文献","date":"2023-04-24T14:15:30.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/批量下载某研究方向重要文献.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper.jpg","content":"<h1 id=\"安装Python及依赖包\"><a href=\"#安装Python及依赖包\" class=\"headerlink\" title=\"安装Python及依赖包\"></a>安装Python及依赖包</h1><h2 id=\"python下载安装\"><a href=\"#python下载安装\" class=\"headerlink\" title=\"python下载安装\"></a>python下载安装</h2><ul>\n<li><p>windows用户请到Python官网<a href=\"https://www.python.org/downloads/\">https://www.python.org/downloads</a>下载相应的版本，本教程在<code>version 3.10.0</code>测试可行，建议安装3.7以上版本。</p>\n</li>\n<li><p>Linux系统自带python，一般不需单独安装，除非版本太低，则需升级。</p>\n</li>\n</ul>\n<h2 id=\"依赖包安装\"><a href=\"#依赖包安装\" class=\"headerlink\" title=\"依赖包安装\"></a>依赖包安装</h2><h3 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h3><p>以下命令可以在Windows中的CMD&#x2F;Powershell或Linux终端中运行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install BeautifulSoup4</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"requests\"><a href=\"#requests\" class=\"headerlink\" title=\"requests\"></a>requests</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"xlrd\"><a href=\"#xlrd\" class=\"headerlink\" title=\"xlrd\"></a>xlrd</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install xlrd</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"通过AI搜索关键词获取文献列表\"><a href=\"#通过AI搜索关键词获取文献列表\" class=\"headerlink\" title=\"通过AI搜索关键词获取文献列表\"></a>通过AI搜索关键词获取文献列表</h1><p>假设我们需要查找<code>代谢组学</code>和<code>微生物组</code>联合研究的文章，进入AI based文献检索网站<a href=\"https://www.citexs.com/Paperpicky\">https://www.citexs.com/Paperpicky</a>，输入关键词 “metabolomics;metabolome” 和 “microbiome”，并点击批量下载，保存为Excel格式（如下图所示）。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"AI文献检索\"></p>\n<p>下载后会得到“文献.csv”，打开文件检查各列是否与下图匹配。从左至右依次为Title、Journal、IF、DOI、PMID、Pub_Date、Url，若不匹配，请先修改，如果第二例为作者信息，那么可将该列删除。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"文献.csv内容\"></p>\n<h1 id=\"爬取文献保存至本地\"><a href=\"#爬取文献保存至本地\" class=\"headerlink\" title=\"爬取文献保存至本地\"></a>爬取文献保存至本地</h1><p>本教程脚本基于<code>大阔同学</code>脚本修改而来，添加了参数，避免用户修改源代码；增加了随机user-agent，避免下载次数过多被屏蔽。原理是基于文献DOI，利用爬虫通过SCI-HUB下载文献。因此，必需要在<code>文献.csv</code>中提供DOI。有些文章不在SCI-HUB中，或者网络环境较差，则会下载失败，失败信息写入<code>error.log</code>中。</p>\n<p>将<code>DownloadPaper.py</code>和<code>文献.csv</code>放在同一目录下，并在该目录下<code>shift+右键</code>打开Powershell窗口（俗称cmd），输入下面的命令，回车即可下载。如果电脑安装了WSL Ubuntu，也可以进入Linux终端。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python DownloadPaper.py -f 文献.csv -o Papers -c 20</span><br></pre></td></tr></table></figure>\n\n<p><strong>参数解析</strong>：</p>\n<ul>\n<li>f：指定包含文献信息的文件</li>\n<li>o：将文献下载至该参数指定的路径中</li>\n<li>c：影响因子阈值，低于该阈值的文献将不会下载</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载结果\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://mp.weixin.qq.com/s/OA8TN453sk7kV95XSiTsug\">快速获取某方向研究重要文献并批量下载\n</a></p>\n</li>\n<li><p><a href=\"https://github.com/DaKuoXueShengXin/DaKuoXueShengXin_essay_code/tree/main/2023\">Github</a></p>\n</li>\n</ul>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“29bf”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"NCBI - 下载 - NCBI","path":"api/tags/NCBI - 下载 - NCBI.json"}]},{"title":"按照Contig切割GenBank文件","slug":"按照Contig切割GenBank文件","date":"2021-10-09T02:08:00.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/按照Contig切割GenBank文件.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>当一个基因组含有多个Contigs&#x2F;Scaffolds的时候，在GenBank文件中也会产生多个LOCUS。某些软件会将GenBank文件作为输入，但仅支持一个GenBank文件中只包含一条Contig&#x2F;Scaffold，如基因岛预测软件<a href=\"https://github.com/brinkmanlab/islandpath\">islandpath</a>。这个时候就需要我们将GenBank文件进行切割。手动切是体力活，也不像钓鱼那样有成就感，因此提供一个脚本”split_GenBank.pl”来完成。</p>\n<p><font color=\"#FF0000\"><strong>敬告</strong>：使用该脚本请引用本文网址，请尊重本人的劳动成果，谢谢！</font></p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 9, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @gbk = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.gbk&quot;</span>);<span class=\"comment\"># 批处理所有后缀为.gbk的文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@gbk) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).gbk/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;LOCUS&quot;</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">/\\s+(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $scaf = $1;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $out = $str . <span class=\"string\">&quot;_&quot;</span> . $scaf . <span class=\"string\">&quot;.gb&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $assession = $str . <span class=\"string\">&quot;_&quot;</span> . $scaf;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/ACCESSION.+/ACCESSION   $assession/g</span>;<span class=\"comment\"># 添加ACCESSION number</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;LOCUS$_&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将脚本与后缀名为“.gbk”的GenBank文件放在同一目录下，运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl split_GenBank.pl</span><br></pre></td></tr></table></figure>\n\n<p>得到的后缀名为“.gb”的文件即为切割后的GenBank文件。</p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“d9f9”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"序列处理","path":"api/tags/序列处理.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"构建样本vs基因矩阵","slug":"构建样本vs基因矩阵","date":"2021-09-29T04:17:04.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/构建样本vs基因矩阵.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_1.jpg","content":"<p>承接上一篇文章<a href=\"https://liaochenlanruo.github.io/post/e922.html\">Swissprot数据库的本地化与序列比对</a>。</p>\n<h1 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h1><p>分别预测了多个样本&#x2F;基因组中某些基因的存在与否即数量，需要将这些样本&#x2F;基因组中的基因数量情况合并在一起构建矩阵，此时，手动是非常困难和无趣的。又该请出Perl神了。</p>\n<h1 id=\"输入文件\"><a href=\"#输入文件\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h1><p>在上一篇文章中，我们将多个宏基因组蛋白序列与SwissProt数据库做了比对，并根据比对到的ID与其他数据库做了mapping，得到了多个输出文件，保存为“sample.mapped”。其中“sample”可以是样本名，也可以是基因组名，它将出现在最后构建的矩阵中。这些文件既可作为本例的输入文件，其内容大概是下面酱紫的，各列以制表符分隔。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"输入文件长酱紫\"></p>\n<h1 id=\"写脚本\"><a href=\"#写脚本\" class=\"headerlink\" title=\"写脚本\"></a>写脚本</h1><p>上图是其中一个文件的内容的一部分，接下来我们将提取第19列的GO number来构建矩阵。将以下代码保存到文件中，命名为“get_matrix.pl”。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 29, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %ids;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %samples;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @files = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.mapped&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@files) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).mapped/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $sample = $1;</span><br><span class=\"line\">\t$samples&#123;$1&#125;++;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;<span class=\"comment\"># 忽略第一行，如果第一行不是标题行，请将该行注释掉</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">18</span>]=~<span class=\"regexp\">/.+\\; /</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @terms = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\; /</span>, $lines[<span class=\"number\">18</span>];<span class=\"comment\"># 18代表文件的第19列，若想提取其他列，可以自行修改该数字为“列号-1”，因为第一列代号为0</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">foreach</span>  (@terms) &#123;</span><br><span class=\"line\">\t\t\t\t$ids&#123;$_&#125;++;</span><br><span class=\"line\">\t\t\t\t$hash&#123;$sample&#125;&#123;$_&#125;++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> ($lines[<span class=\"number\">18</span>]=~<span class=\"regexp\">/\\S+/</span>) &#123;</span><br><span class=\"line\">\t\t\t$ids&#123;$lines[<span class=\"number\">18</span>]&#125;++;</span><br><span class=\"line\">\t\t\t$hash&#123;$sample&#125;&#123;$lines[<span class=\"number\">18</span>]&#125;++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;Matrix.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @samples = <span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %samples;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @ids = <span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %ids;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @samples) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $i=<span class=\"number\">0</span>; $i&lt;@ids ;$i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT $ids[$i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $j=<span class=\"number\">0</span>; $j&lt;@samples ;$j++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t$hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t0&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"构建矩阵\"><a href=\"#构建矩阵\" class=\"headerlink\" title=\"构建矩阵\"></a>构建矩阵</h1><p>将脚本与输入文件放在同一目录下，在终端或Windows命令行中运行如下命令，得到的“Matrix.txt”即为输出文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl get_matrix.pl</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"输出文件长酱紫\"></p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“412a”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"SY179","path":"api/tags/SY179.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"根据基因组预测表型 —— traitar的安装与使用","slug":"根据基因组预测表型-traitar的安装与使用","date":"2018-12-13T12:22:16.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/根据基因组预测表型-traitar的安装与使用.json","excerpt":null,"keywords":null,"cover":"https://upload-images.jianshu.io/upload_images/11790868-82b7bc9d8c442804.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","content":"<p>Traitar 用于从基因组序列中提取表型，它提供了表型分类器，可以预测与碳和能源使用、氧气需求、形态学、抗生素易感性、蛋白水解和酶活性等有关的67个性状。</p>\n<span id=\"more\"></span>\n\n<p>1. 软件安装——<a href=\"https://github.com/hzi-bifo/traitar\" target=\"_blank\">traitar</a></p><p>安装基本依赖：</p><blockquote><p>sudo apt-get install python-scipy python-matplotlib python-pip python-pandas</p></blockquote><p>进入要安装软件的目录，我的为家目录下的tools：</p><blockquote><p>cd ~/tools</p></blockquote><p>=======================================================</p><p>安装主程序到家目录下</p><blockquote><p>pip install traitar --user</p></blockquote><p>将添加到环境变量中：</p><blockquote>\n<p>vim ~/.zshrc</p>\n<p>i</p>\n</blockquote><p>文档末尾添加：</p><p>PATH=$PATH:$HOME/.local/bin/</p><p>ESC</p><blockquote><p>shift + :</p></blockquote><blockquote><p>wq!</p></blockquote><blockquote><p>source ~/.zshrc</p></blockquote><p>安装依赖软件（parallel， prodigal， hmmer）</p><blockquote><p>sudo apt-get install parallel prodigal hmmer</p></blockquote><p>下载pfam数据库到家目录下并建库</p><blockquote><p>traitar pfam ~/</p></blockquote><p>也可以手动下载pfam数据库（如果上一条不出错可以不运行后面的几条命令）：</p><blockquote><p>cd ~/</p></blockquote><p>官方提供的为Pfam27.0，我下载的为最新的Pfam32.0（下面两个命令选一个运行即可）：</p><blockquote><p>wget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam27.0/Pfam-A.hmm.gz</p></blockquote><blockquote><p>wget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam32.0/Pfam-A.hmm.gz</p></blockquote><p>将Pfam-A.hmm.gz解压缩，然后运行下面的命令建库：</p><blockquote><p>traitar pfam --local ~/</p></blockquote><p>软件运行出错的话：</p><p>错误提示：ImportError: C extension: numpy.core.multiarray failed to import not built. If you want to import pandas from the source directory, you may need to run 'python setup.py build_ext --inplace --force' to build the C extensions first.</p><p>运行：</p><blockquote><p>conda install -c conda-forge numpy</p></blockquote><p>错误提示：AttributeError: 'DataFrame' object has no attribute 'sort'</p><p>pandas降级：</p><blockquote><p>conda install pandas=0.19.2</p></blockquote><p>错误提示：Python的最大递归深度错误 “maximum recursion depth exceeded while calling a Python object”</p><p>编辑脚本（~/miniconda3/lib/python2.7/site-packages/scipy/cluster/hierarchy.py），第183行加入两行，将默认的1000改大，比如2000（因为我有1000多个基因组）</p><blockquote><p>import sys</p></blockquote><p>#print sys.getrecursionlimit()</p><blockquote><p>sys.setrecursionlimit(2000)</p></blockquote><p>错误提示：RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility</p><blockquote>\n<p>pip uninstall -y scipy scikit-learn</p>\n<p>pip install --no-binary scipy scikit-learn</p>\n</blockquote><hr><p>2. 软件使用</p><p>首先进入含有基因组文件目录的上一级目录，输入命令执行：</p><blockquote><p>traitar phenotype &lt;in dir&gt; &lt;sample file&gt; from_nucleotides &lt;out_dir&gt; -c 2</p></blockquote><p>&lt;in dir&gt;：包含基因组的输入目录</p><p>&lt;sample file&gt;：描述文件，置于&lt;in dir&gt;的父目录下。共3列，第一列为基因组文件的全名（包含文件扩展名），第二列为菌株名称（一般为第一列去掉扩展名，可随意更改），第三列为分组信息（可以将所有的菌株划分到不同的组别）。三列之间以制表符分隔。三列的抬头为“sample_file_name      sample_name       category”，如下面文本框所示：</p><blockquote>\n<p>sample_file_name\tsample_name\tcategory</p>\n<p>1457190.3.RefSeq.faa\tListeria_ivanovii_WSLC3009\tenvironment_1</p>\n<p>525367.9.RefSeq.faa\tListeria_grayi_DSM_20601\tenvironment_2</p>\n</blockquote><p>&lt;out_dir&gt;：结果输出目录</p><p>-c 2：使用两个线程运行，提高预测速度</p><p><br></p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-82b7bc9d8c442804.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-82b7bc9d8c442804.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">文件存放示意图</div>\n</div><p>我的命令（在phenotype目录下，使用4个线程运行）：</p><blockquote><p>traitar phenotype scaffolds samplefile.txt from_nucleotides output -c 4</p></blockquote><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-132fcd1bdd4eb6ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-132fcd1bdd4eb6ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\"><a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5192078/pdf/mSystems.00101-16.pdf\" target=\"_blank\">软件工作流程</a></div>\n</div><p><br></p><hr><h2>输出效果图：<br>\n</h2><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-9aee151bc9b10869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-9aee151bc9b10869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">输出效果图_combined</div>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-e1661fe61c8e5783.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-e1661fe61c8e5783.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">输出效果图_phypat</div>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-7793acf090cb7d72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-7793acf090cb7d72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">输出效果图_phypat+PGL</div>\n</div><p><br></p><hr><p>引用 Traitar</p><p>If you use Traitar in your research, please cite our paper:</p><p><b>From genomes to phenotypes: Traitar, the microbial trait analyzer</b></p><p>Aaron Weimann, Kyra Mooren, Jeremy Frank, Phillip B Pope, Andreas Bremges, Alice C McHardy</p><p><i>mSystem</i> (2016) doi:<a href=\"http://dx.doi.org/10.1128/mSystems.00101-16\" target=\"_blank\">10.1101/043315</a></p><p><br></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"表型预测","path":"api/tags/表型预测.json"}]},{"title":"根据assession number批量从NCB下载数据","slug":"根据assession-number批量从NCB下载数据","date":"2021-09-28T03:26:24.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/根据assession-number批量从NCB下载数据.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>有时候我们手里会得到一些NCBI的assession number，且数量比较多，而我们真正需要的是序列，这时候手动挨个搜索和下载是不太现实的，除非是你闲得无事可做。其实有一个网页是可以批量下载序列的，即<a href=\"https://www.ncbi.nlm.nih.gov/sites/batchentrez\">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> ，下面演示一下其用法。<strong>请就着文末视频食用。</strong></p>\n<ul>\n<li><p>首先，<u>准备一份列表文件，其中包含需要下载序列的IDs，每行一个ID</u>。这里有一个从网上下载的CaZY数据库，本以为是序列文件，下载后才发现里面没有序列。这个文件包含三列，以制表符分隔各列，最后一列是Assession number，因此前两列可以删掉。可以将文件内容复制到Excel中，删除前两列，将最后一列复制到一个新的文本文档中。也可以在支持正则表达式的文本编辑器中直接查找替换。<strong>刚刚的示例文件可以从<a href=\"http://www.cazy.org/IMG/cazy_data/cazy_data.zip\">这里</a>下载</strong>。正则表达式查找的公式为“.+\\t(.+)”，其中“.+”代表的是任意多个字符，“\\t”匹配的是制表符，+是贪婪的，一直遇到最后一个“\\t”才终止匹配。即“.+\\t”匹配的是前两列以及第二列后面的制表符，最后的“(.+)”匹配的是第三列。小括号的作用是捕获匹配的内容。替换的公式为“$1”，表示第一个小括号内的内容，即第三列。</p>\n</li>\n<li><p>接下来将得到的列表文件提交至网站上以下载序列，需要选择对应的数据库，这里选择protein，点击“Retrieve”开始下载。由于序列较多，因此反应比较慢，需要耐心等待。估计是崩了，再试一遍，文件包含2650471个ID，估计服务器吃不消，实在不行就拆分成几个文件，分批次下载。我这里用的是EmEditor软件，按照10000行每个文件对整个文件进行了拆分，得到了266个文件，现在拿其中的一个做演示，看看服务器是否吃得消。看来一万个也太多，二十几个试了一下，莫得问题。方法就是酱紫的，至于可以一次性下载多少，各位自己去试吧。搞定！</p>\n</li>\n<li><p><strong>兄弟们不用试了，我已经试过了，一次只能搞几百个</strong>，对于几十万行的列表来说，手动逐个提交也是要命的，因此我写了一个Perl脚本(download_NCBI.pl)来完成该任务，<u>不过只能在Linux下运行</u>，代码如下：</p>\n</li>\n</ul>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> LWP::Simple;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Usage: perl download_NCBI.pl 列表文件 序列类型（参照https://www.ncbi.nlm.nih.gov/sites/batchentrez数据库填写，常用的包括nucleotide, protein）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @ids;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $dbtype = $ARGV[<span class=\"number\">1</span>];<span class=\"comment\"># nucleotide, protein</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;split -l 300 $ARGV[0] splited_&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @splited = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;splited_*&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@splited) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/splited_(.+)/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = <span class=\"string\">&quot;seqs.$1.fasta&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $_ || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">push</span> @ids, $_;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgetstore(<span class=\"string\">&quot;http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=$dbtype&amp;rettype=fasta&amp;retmode=text&amp;id=&quot;</span>.join(<span class=\"string\">&quot;,&quot;</span>, @ids),<span class=\"string\">&quot;$out&quot;</span>);</span><br><span class=\"line\">\t@ids = ();</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;cat seqs.* &gt; All.sequences.fas&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;rm splited_* seqs.*&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>运行方法也贼简单，将脚本和列表文件放在同一目录下，然后在Linux终端里输入如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl download_NCBI.pl cazy_ids.txt protein</span><br></pre></td></tr></table></figure>\n\n<p>其中cazy_ids.txt为包含assession number的列表文件，protein表示列表里的ID是蛋白。最后面的这个参数可以在<a href=\"https://www.ncbi.nlm.nih.gov/sites/batchentrez\">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> 左上角的Database查询，<strong>但是要全部小写</strong>。</p>\n<p>运行一下，看看效果！</p>\n<p><font color=\"#FF0000\">2000 years later…</font></p>\n<p>2650471&#x2F;300&#x3D;8835个文件，最终生成的序列文件名称为“All.sequences.fas”，中间过程文件会被自动删除。千年以后拿结果，不管怎么说，总算解放了双手，让电脑慢慢去跑吧！</p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=378319348&page=\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"></iframe></div>\n\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e7e9”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"CAZy","path":"api/tags/CAZy.json"},{"name":"NCBI","path":"api/tags/NCBI.json"},{"name":"下载","path":"api/tags/下载.json"}]},{"title":"生物信息学1：VMware虚拟机及Bio-linux安装与配置","slug":"生物信息学1：虚拟机及Bio-linux安装与配置","date":"2018-11-15T09:11:21.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/生物信息学1：虚拟机及Bio-linux安装与配置.json","excerpt":null,"keywords":null,"cover":"http://upload-images.jianshu.io/upload_images/11790868-2a735eb4a37c7f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","content":"<h4>前言：大家按照步骤从头看到尾，末尾有常见错误解决办法，如果有其他问题，大家先看错误提示，根据提示自行百度，很多问题都可以得到解决，实在解决不了的可以问我，谢谢！</h4>\n<span id=\"more\"></span>\n\n<p></p>\n<p></p>\n<h4>\n<b>找我远程的，先</b>下载一个teamviewer，账号密码发我QQ！</h4>\n<p></p>\n</blockquote><h4><b>一、虚拟机安装（VMware）</b></h4><p><b>（1）下载 <a href=\"http://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.1-10737736.exe\" target=\"_blank\">VMware</a></b></p><p>        32位系统请下载<a href=\"http://www.uzzf.com/soft/65978.html\" target=\"_blank\">VMware10</a></p><p><b>（2）安装 VMware：根据提示安装即可。</b></p><p><b>        许可证</b>（来自 <a href=\"https://www.nocmd.com/740.html\" target=\"_blank\">https://www.nocmd.com/740.html</a>）：</p><p>        ZC10K-8EF57-084QZ-VXYXE-ZF2XF</p><p>        UF71K-2TW5J-M88QZ-8WMNT-WKUY4</p><p>        AZ7MK-44Y1J-H819Z-WMYNC-N7ATF</p><p>        CU702-DRD1M-H89GP-JFW5E-YL8X6</p><p>        YY5EA-00XDJ-480RP-35QQV-XY8F6</p><p>        VA510-23F57-M85PY-7FN7C-MCRG0</p><p><b>（3）工作区配置</b></p><p>        依次点击菜单栏中的“Edit”——“Preferences”，打开设置窗口。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-2a735eb4a37c7f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-2a735eb4a37c7f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 1 工作区配置1</div>\n</div><p>        选择左侧的“工作区”，右侧“Browse”，选择系统镜像存放位置，注意选择剩余空间大于60G的分区。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-af6ce78c2a7b7457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-af6ce78c2a7b7457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 2 工作区配置2</div>\n</div><hr><h4><b>二、Bio-linux安装与配置</b></h4><p><b>（1）下载：</b></p><p>安装版：<a href=\"http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.iso\" target=\"_blank\">http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.iso</a></p><p>虚拟机版：<a href=\"http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.ova\" target=\"_blank\">http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.ova</a></p><blockquote><p><b>注：</b>虚拟机版不需要安装，可直接导入虚拟机，大部分用户可选择此版本。如果想装双系统，可以下载安装版。以下讲到的均以虚拟机版为例。</p></blockquote><blockquote><p><b>        首先检查ova文件的完整性，即验证MD5值，用群里的“MD5批量校验工具”。bio-linux-8-latest.ova 正确的MD5值为“4c3b5aea740f5334d9775cc31533a387”，若不对应，表明下载错误，需重新下载。</b></p></blockquote><p><b>（2）系统导入虚拟机</b></p><p>        若下载的是压缩文件，则解压缩，解压缩后进入文件夹，右击“Bio-Linux-8.0.7.ovf”，选择“VMware Player”打开。</p><p>        若下载的是.ova后缀的，则直接导入虚拟机即可，不需要解压。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-d77bd01708c5c312.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-d77bd01708c5c312.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 3 导入系统</div>\n</div><p>        选择剩余空间比较大的分区作为存放路径，然后导入。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-62d48c257aba00cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-62d48c257aba00cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 4 选择系统存放路径</div>\n</div><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-d6abdb679af2cbe0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-d6abdb679af2cbe0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 5 等待系统导入</div>\n</div><p><b>（3）虚拟机配置</b></p><p>        导入完成后会自动打开“VMware Workstation Player”，左侧选择刚导入的“Bio-Linux-8.0.7”，右侧选择“编辑虚拟机设置”。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-b12838b49940089f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-b12838b49940089f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 6 进入虚拟机设置</div>\n</div><p>        左侧“硬件”选项卡中选择“内存”，右侧可输入或者托选内存的大小。此处根据自己电脑的内存大小而设置，大部分电脑的内存为4G，此处可以设为2G。内存大的电脑可适当增加此值。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-13e86567a1c3d1a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-13e86567a1c3d1a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 7 内存设置</div>\n</div><p>        处理器内核数量亦需根据自己的电脑配置而设置。双核四线程的可以设置为2，四核八线程的可以设置为4.建议设置为2的整数倍。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6ed7759fc7c4a2fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6ed7759fc7c4a2fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 8 处理器设置</div>\n</div><p>        网络适配器按照下图所示设置，启动系统后可通过浏览器检测是否可以上网,若不能上网，可以设置为“NAT模式”。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6a517339f86d6aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6a517339f86d6aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 9 网络设置</div>\n</div><p><b>（4）启动 Bio-Linux</b></p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-d7bea03f01ddced8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-d7bea03f01ddced8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 10 播放虚拟机</div>\n</div><blockquote><p>注：启动错误，需要手动开启 “VMware Authorization Service”。</p></blockquote><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-78481c384ff49df5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-78481c384ff49df5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 11 播放错误</div>\n</div><p>        按照如下3图所示，手动开启 “VMware Authorization Service”。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-d2342fb3b84f389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-d2342fb3b84f389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 12 搜索Services</div>\n</div><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-0d5c9228a7e4bc8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-0d5c9228a7e4bc8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 13 右键选择“开启”</div>\n</div><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-57f38df1e9a13554.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-57f38df1e9a13554.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 14 依旧报错</div>\n</div><p>        如果报“6000009”错误，尝试重新安装 “VMware Workstation”（新安装的用户一般不会出现上述错误）。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6d8fe325a8ee6b61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6d8fe325a8ee6b61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 15 更新 “VMware Workstation Player”</div>\n</div><p><b>（5）全屏显示</b></p><p>        系统启动后，默认为小窗口显示，不便于操作，点击菜单栏上的“全屏”按钮，以便全屏显示。若无法全屏，则需要安装 “VMware-tools”。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-8789d5887344b994.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-8789d5887344b994.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 7 全屏</div>\n</div><p><b>（6）安装 VMware-tools</b></p><p>        如下图所示依次点击，未曾安装过VMware Tools时会显示“安装VMware Tools”。点击之后按照提示下载。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-48519484db56bd57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-48519484db56bd57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 8 启动 VMware Tools安装</div>\n</div><p>        下载后，打开文件管理，左侧的“Devices”下多出一个“VMware tools”，点击后在右侧窗口可以看到 “VMware Tools-*.tar.gz”，此压缩包便是安装文件。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-c500f096f70c4517.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-c500f096f70c4517.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 9 VMware tools安装包</div>\n</div><p>        将 “VMware Tools-*.tar.gz”压缩包拷贝至“Downloads”目录下，并解压缩。按住 “Ctrl + Alt + T”，打开终端，输入“cd Downloads/vmware-tools-distrib”进入刚刚解压的目录下（如下图，cd后有空格，路径根据实际情况而定，“/home/lhl/”是我的家目录，可以不必输入）。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-be42781ff555d6e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-be42781ff555d6e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 10 cd命令进入目录</div>\n</div><p>        终端内输入“sudo perl vmware-install.pl”命令，回车后要求输入密码，密码为“manager”。输入密码时，光标处不显示字符，尽管输入，完成后回车即可。回车后看到一句提示语“Do you still want to proceed with this installation? [ no ]”，在其后输入“yes”，继续一路回车，直到安装完毕。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-06f006a967b87716.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-06f006a967b87716.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 11 安装VMware Tools</div>\n</div><p>        安装完毕后重启一下linux系统即可全屏显示。关机时请勿直接关闭VMware，而是如下图箭头所示的位置，点击后选择“Shut Down”，避免损坏Linux系统而导致无法开机。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-e3c241a2a819389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-e3c241a2a819389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 12 关机与重启</div>\n</div><hr><h3><b>三、问题集锦</b></h3><p>1. Intel 虚拟化技术未开启（Figure 13），需要进BIOS开启“Intel Virtualization Technology”，可参考网友的解决方案<a href=\"https://jingyan.baidu.com/article/fc07f98976710e12ffe519de.html\" target=\"_blank\">https://jingyan.baidu.com/article/fc07f98976710e12ffe519de.html</a></p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-252182874ccd07de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-252182874ccd07de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 13 Intel NT 未开启错误提示</div>\n</div><p>2. 终端内某些字符（如~，#）无法输入的问题</p><p>        该问题是由于本虚拟系统的键盘配置有错误，需要我们手动改正，方法如下：</p><p>        在系统左侧点击打开终端，输入“sudo dpkg-reconfigure keyboard-configuration”，回车（不包含引号），输入密码“manager”回车，会出现图形界面。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ab22cb6d470676d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ab22cb6d470676d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 14 输入配置键盘命令</div>\n</div><p>        在弹出的图形界面中，按住向下的光标键，找到微软键盘（箭头所示），回车进入下一步。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-b4800a54fbfd2143.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-b4800a54fbfd2143.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 15 切换微软键盘</div>\n</div><p>        在接下来的界面选择美式英语（箭头所示），回车，后面的几项一路回车即可。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-f7be766e2d301c0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-f7be766e2d301c0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 16 切换美式英语</div>\n</div><p>3. 虚拟系统无法联网</p><p>        主要是因为VMware DHCP服务没有开启，我每次重启电脑之后都需要手动开启  VMware 相关服务。首先将虚拟机的联网方式设置为“NAT”，然后在windows下搜索“services”，打开服务。win10可以直接搜索，其他版本windows可以按“win+R”组合键开启搜索。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-8a7832bba7dd71f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-8a7832bba7dd71f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 17 打开services设置</div>\n</div><p>        向下拖动滚动条，找到VMware相关服务项，右键开启。启动方式可以设置为自动，但我设置了，并没什么效果，重启仍旧变为手动，win10 v1809 最近bug一波接一波，不知道是否与系统bug有关。所有服务开启后，虚拟系统应该可以上网了。我就是这么解决的，如果还是不能上网，各位去问问度娘吧，我是没辙了。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-19d53ef881a58c18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-19d53ef881a58c18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 18 开启VMware相关所有服务</div>\n \n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"虚拟机","path":"api/tags/虚拟机.json"}]},{"title":"生物信息学2：VirtualBox虚拟机及Bio-Linux安装","slug":"生物信息学2：VirtualBox及Bio-Linux","date":"2018-11-20T02:40:21.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/生物信息学2：VirtualBox及Bio-Linux.json","excerpt":null,"keywords":null,"cover":"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","content":"<p>前言：<a href=\"https://www.jianshu.com/p/2f765a81e7dd\" target=\"_blank\">上一篇</a>文章讲到了利用Vmware虚拟机加载Bio-Linux，但有的小伙伴表示Vmware无法安装，也未见有效的错误提示，因此推荐第二款常用的老牌虚拟机软件——VirtualBox。</p>\n<span id=\"more\"></span>\n\n<p>1. <a href=\"https://www.virtualbox.org/\" target=\"_blank\">VirtualBox</a>下载与安装。</p><p>    该软件的安装比较简单，双击后根据提示一步步往下走即可。安装完毕后打开软件。</p><p><br></p><hr><p>2. 导入及配置Bio-Linux</p><p>（1）依次点击菜单栏的 “管理”——“导入虚拟电脑”</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 1 导入虚拟电脑1</div>\n</div><p>（2）在弹出的窗口中选择下载的 “Bio-Linux-8.0.7.ovf”进行导入</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-a6c955cec07389b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-a6c955cec07389b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 2 选择系统文件</div>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ce38f58eb9d87d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ce38f58eb9d87d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 3 准备导入虚拟电脑</div>\n</div><p>（3）虚拟电脑导入设置：此处有三项可以设置，分别是处理器的数量、内存大小和最后面的虚拟硬盘位置。前两者根据自己的电脑配置情况进行设置，硬盘位置一定要选择剩余容量大于50-60G的分区。点击“导入”等待完成即可，此时电脑可能会断网，重新连接一下即可。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-bbda5c1ad0811dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-bbda5c1ad0811dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 4 处理器及内存设置</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-140370931dbc3b86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-140370931dbc3b86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 5 虚拟硬盘位置自设</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-5b261a13f79e7291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-5b261a13f79e7291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 6 等待虚拟电脑导入完毕</div></p>\n</div><p>（4）鼠标单击导入完成的系统，菜单栏的 “设置”变成彩色可点击状态，点击进行系统设置。所有设置按如下5图（Figure 7-Figure 11）进行。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-7136bffed8701961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-7136bffed8701961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 7 粘贴板与拖放共享</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-520fee7dd398e306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-520fee7dd398e306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 8 存储控制 器输入输出</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ca76c38fb47dc821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ca76c38fb47dc821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 9 开启固态驱动器</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-75ccf98fbbf97d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-75ccf98fbbf97d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 10 显存设置（根据配置自设大小）</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-333bd34368d9b4ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-333bd34368d9b4ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 11 创建虚拟光盘</div></p>\n</div><p>（5）保存设置后，启动系统。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-f26c49cedf490ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-f26c49cedf490ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 12 启动虚拟电脑</div></p>\n</div><p>（6）进入系统后不需要更新，可以通过浏览器测试是否可以上网。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6e83ecb2661fc193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6e83ecb2661fc193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 13 系统启动完成</div></p>\n</div><p>（7）安装增强功能，参照如下4图（Figure12-Figure 15）</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ba16243bb4520ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ba16243bb4520ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 14 安装增强功能1</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-1626909ed7b36761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-1626909ed7b36761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 15 安装增强功能2</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-83e661db9b1fde93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-83e661db9b1fde93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 16 安装增强功能3（密码：manager）</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-0e3aa0b41841928b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-0e3aa0b41841928b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 17 安装增强功能4（输入yes回车）</div></p>\n</div><p>（8）提示按 “Press Return to close this window ...”的时候按一下回车键即可，重启Linux。</p><h3>问题：目前无法实现从windows到虚拟机的文件拷贝，暂时未找到解决方案，可通过共享文件夹解决。</h3><p>(9)共享文件夹设置</p><p>通过设置共享文件夹可以实现windows和虚拟机之间的同步，而不需要复制粘贴。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-8032463856bf4c85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-8032463856bf4c85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 18 共享文件夹设置1</div></p>\n</div><p>        点击右上角的 “文件夹+”图标，选择共享文件夹路径（windows上的一个文件夹），共享文件夹名称会自动分配，勾选 “自动挂载” 和 “固定分配”。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ead5f24448be0c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ead5f24448be0c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 19 共享文件夹设置2</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-054fbf18099da74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-054fbf18099da74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 20 共享文件夹设置3</div></p>\n</div><p>        设置完成后重启Linux系统，打开目录，即可看到共享文件夹 “sf_softwares”。若不成功可重新安装增强功能并重启。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6dfe1cdbe1153fd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6dfe1cdbe1153fd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 21 共享文件夹设置4</div></p>\n</div><p>以上为基于VirtualBox 的 Bio-Linux配置，有问题的可以在下方留言，统一解答。</p>\n\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"虚拟机","path":"api/tags/虚拟机.json"}]},{"title":"生物信息学3：微生物基因组学常用软件安装","slug":"生物信息学3：微生物基因组学常用软件安装","date":"2018-12-04T13:42:18.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/生物信息学3：微生物基因组学常用软件安装.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文详细介绍了Linux各发行版通用的几种软件安装方案，并有实例，主要是微生物基因组学常用软件的安装。</p>\n<span id=\"more\"></span>\n\n<p><strong>一、Linux 安装软件的常用方法：</strong><br>（1）将可执行程序加入环境变量</p>\n<p>一些软件包内包含的是可执行程序，不需要进行编译，这类程序可以在软件目录中通过终端“.&#x2F;主程序名”命令运行。所以可以将主程序所在的目录加入到环境变量中即可。常见的环境变量配置文件包括家目录下的“zshrc”、“bashrc”以及&#x2F;etc目录下的“profile”。</p>\n<p>（2）创建可执行程序的软连接到已在环境变量的目录下</p>\n<p>可以视为方法一的另一种实现策略，通过“ln -s A B”进行创建，软连接可以理解为Windows下的快捷方式。A为主程序的绝对路径（包含主程序名称），B为目标路径，即放置软件快捷方式的地方（包含主程序名），一般可存于“&#x2F;usr&#x2F;loacl&#x2F;bin”下。</p>\n<p>（3）源码配置编译及安装</p>\n<p>特点为解压源码包之后，存在“configure”文件，一般分三步安装，即在软件目录下打开终端，依次运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<p>（4）通过源进行安装</p>\n<p>不同的Linux发行版含有不同的源和软件安装工具，只要联网，一条命令即可安装源中含有的软件。</p>\n<p>Ubuntu可以通过“sudo apt-get install 程序名”进行安装</p>\n<p>Centos可以通过“sudo yum install 程序名”进行安装</p>\n<blockquote>注：前三种方法适合任意Linux发行版，安装软件前可以先通过方法4进行，若源中不包含此软件再用前三种方法。</blockquote>\n\n\n<p><strong>二、软件下载及存储</strong><br>首先在Home目录下创建Tools目录，所有下载的软件均存放于tools目录之下，此处我的家目录为“manager”，即我软件存放目录为“&#x2F;home&#x2F;manager&#x2F;Tools”。</p>\n<p><strong>三、软件安装</strong><br><strong>1. ABySS</strong></p>\n<p>首先安装依赖包：</p>\n<p>Open MPI</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf openmpi-4.0.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> openmpi-4.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make all install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n<p>Git（可以不安装）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev git</span><br></pre></td></tr></table></figure>\n<p>sparsehash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/sparsehash/sparsehash.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> sparsehash</span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n<p>ABySS</p>\n<p>首先删除旧版本（Bio-Linux自带的）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove abyss</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf abyss-2.1.4.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> abyss-2.1.4</span><br><span class=\"line\"></span><br><span class=\"line\">wget http://downloads.sourceforge.net/project/boost/boost/1.56.0/boost_1_56_0.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">tar jxf boost_1_56_0.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">./configure --enable-maxk=160 --with-mpi=/usr/local/lib/openmpi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#（注：openmpi的路径用“whereis openmpi”寻找）</span></span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<p>不能多线程运行时（np&#x3D;2），错误提示为“&#x2F;usr&#x2F;local&#x2F;bin&#x2F;mpirun: error while loading shared libraries: libopen-rte.so.40: cannot open shared object file: No such file or directory”，则需运行如下命令解决。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ldconfig</span><br></pre></td></tr></table></figure>\n<p><strong>2. SPAdes</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf SPAdes-3.13.0-Linux.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/SPAdes-3.13.0-Linux/bin<span class=\"comment\">#(加入环境变量)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p><strong>3. prokka</strong></p>\n<p>先安装依赖</p>\n<p>aragorn</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">i<span class=\"comment\">#(进入插入模式），在文末建立新的一行</span></span><br><span class=\"line\"></span><br><span class=\"line\">输入：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/Tools/prokka/aragorn.1.2.38</span><br><span class=\"line\"></span><br><span class=\"line\">esc <span class=\"comment\">#(退出插入模式）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">shift</span> + :</span><br><span class=\"line\"></span><br><span class=\"line\">wq! <span class=\"comment\">#(w,write; q,quit, !强制）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc </span><br></pre></td></tr></table></figure>\n\n<p>barrnap</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/prokka/barrnap-0.6/bin</span><br><span class=\"line\"></span><br><span class=\"line\">esc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">shift</span> + :</span><br><span class=\"line\"></span><br><span class=\"line\">wq!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>tbl2asn</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#删除旧版本：</span></span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -f /usr/bin/tbl2asn</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装新版本。解压，把主程序的名称改为 tbl2asn</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /home/manager/Tools/prokka/tbl2asn /usr/local/bin/tbl2asn</span><br></pre></td></tr></table></figure>\n\n<p>minced</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压，进入程序所在的目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /home/manager/Tools/prokka/minced-master/minced /usr/local/bin/minced</span><br></pre></td></tr></table></figure>\n<p>parallel</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压缩，进入目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p>prodigal</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压缩，进入目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p>signalp</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压缩，用文本编辑器打开signalp主程序，改路径（第13行），并保存：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$ENV</span>&#123;SIGNALP&#125; = <span class=\"string\">&#x27;/home/manager/Tools/prokka/signalp-4.1&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/prokka/signalp-4.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>rnammer</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压后进入文件夹，用文本编辑器打开rnammer主程序，修改第35行路径如下：</span></span><br><span class=\"line\"></span><br><span class=\"line\">my <span class=\"variable\">$INSTALL_PATH</span> = <span class=\"string\">&quot;/home/manager/Tools/prokka/rnammer-1.2.src&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#通过whereis hammsearch命令查看其所在路径，修改第50行和53行，如下：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HMMSEARCH_BINARY</span> = <span class=\"string\">&quot;/usr/bin/hmmsearch&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/prokka/rnammer-1.2.src</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>prokka</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/prokka/prokka-1.12/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">prokka --setupdb</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>Parsnp</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/marbl/parsnp/releases/download/v1.2/parsnp-Linux64-v1.2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xvf parsnp-Linux64-v1.2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/Parsnp-Linux64-v1.2<span class=\"comment\">#(加入环境变量)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc </span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>roary（blast+, fasttree）</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install bedtools cd-hit ncbi-blast+ mcl parallel cpanminus prank mafft fasttree</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cpanm -f Bio::Roary</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#出错的话运行：</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo cpan -f Bio::Roary</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>RAxML</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> standard-RAxML-master </span><br><span class=\"line\"></span><br><span class=\"line\">make -f Makefile.gcc</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /home/manager/Tools/standard-RAxML-master/raxmlHPC /usr/local/bin/raxmlHPC</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>Prottest</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install prottest</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>jModelTest</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install jmodeltest</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"软件","path":"api/tags/软件.json"}]},{"title":"用metid构建代谢组数据库","slug":"用metid构建代谢组数据库","date":"2023-04-17T09:15:39.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/用metid构建代谢组数据库.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.jpg","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>metid包能够用于in-house代谢物库构建，并可利用MS2 spectra进行代谢物鉴定。metid自带数据库，来自于公共数据库的整合。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span><span class=\"punctuation\">(</span><span class=\"operator\">!</span>require<span class=\"punctuation\">(</span>remotes<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;remotes&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">remotes<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;tidymass/metid&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"数据库构建和使用\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"数据库构建和使用\"></p>\n<h1 id=\"建库\"><a href=\"#建库\" class=\"headerlink\" title=\"建库\"></a>建库</h1><h2 id=\"构建内部库\"><a href=\"#构建内部库\" class=\"headerlink\" title=\"构建内部库\"></a>构建内部库</h2><h3 id=\"质谱数据准备\"><a href=\"#质谱数据准备\" class=\"headerlink\" title=\"质谱数据准备\"></a>质谱数据准备</h3><p>将标准品原始质谱数据用<a href=\"http://www.proteowizard.org/download.html\">ProteoWizard</a>转换为mzXM格式.</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"格式转换\"></p>\n<h3 id=\"标准品信息表\"><a href=\"#标准品信息表\" class=\"headerlink\" title=\"标准品信息表\"></a>标准品信息表</h3><p>将标准品信息整理至csv格式表格中，参考如下。<br>共11列：“Lab.ID”, “Compound.name”, “mz”, “RT”, “CAS.ID”, “HMDB.ID”, “KEGG.ID”, “Formula”, “mz.pos”, “mz.neg”, “Submitter”。也可以添加更多的信息，如“Family”, “Sub.pathway” 和“Note”。</p>\n<p>Lab.ID: 不可重复</p>\n<p>mz: 化合物准确的mass</p>\n<p>RT: 保留时间，以秒为单位</p>\n<p>mz.pos: 正离子模式下化合物的mz，如M+H。可设为NA</p>\n<p>mz.neg: 负离子模式下化合物的mz，如M-H。可设为NA</p>\n<p>Submitter: 个人或组织名称，可设为NA</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"info.csv\"></p>\n<p>新建目录<code>database_construction</code>，将正离子数据放在<code>database_construction/POS</code>中，将负离子数据放在<code>database_construction/NEG</code>中，标准品信息表<code>metabolite.info_RPLC.csv</code>放在<code>database_construction</code>中。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"数据集\"></p>\n<p><strong>注意</strong>：每个文件名必须包含碰撞能（collision energy），如<code>test_NCE25.mzXML</code>。</p>\n<h3 id=\"建库-1\"><a href=\"#建库-1\" class=\"headerlink\" title=\"建库\"></a>建库</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>metid<span class=\"punctuation\">)</span></span><br><span class=\"line\">datapath<span class=\"operator\">&lt;-</span>file.path<span class=\"punctuation\">(</span><span class=\"string\">&quot;./database_construction&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">mydb <span class=\"operator\">&lt;-</span> construct_database<span class=\"punctuation\">(</span></span><br><span class=\"line\">    path <span class=\"operator\">=</span> datapath<span class=\"punctuation\">,</span></span><br><span class=\"line\">\tversion <span class=\"operator\">=</span> <span class=\"string\">&quot;0.0.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\tmetabolite.info.name <span class=\"operator\">=</span> <span class=\"string\">&quot;metabolite.info_RPLC.csv&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\tsource <span class=\"operator\">=</span> <span class=\"string\">&quot;my lab&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\tlink <span class=\"operator\">=</span> <span class=\"string\">&quot;http://xxx.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\tcreater <span class=\"operator\">=</span> <span class=\"string\">&quot;someone&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\temail <span class=\"operator\">=</span> <span class=\"string\">&quot;x@126.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\trt <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> <span class=\"comment\"># Do the metabolites have RT information or not?</span></span><br><span class=\"line\">\tmz.tol <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span> <span class=\"comment\"># m/z tolerance for the match between metabolites and precursor m/z of MS2 spectra.</span></span><br><span class=\"line\">\trt.tol <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">,</span> <span class=\"comment\"># RT tolerance for the match between metabolites and precursor m/z of MS2 spectra.</span></span><br><span class=\"line\">\tthreads <span class=\"operator\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存数据库</span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>mydb<span class=\"punctuation\">,</span> file<span class=\"operator\">=</span><span class=\"string\">&quot;mydb&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong>：保存时前后名字必须一样。</p>\n<h2 id=\"构建公共库\"><a href=\"#构建公共库\" class=\"headerlink\" title=\"构建公共库\"></a>构建公共库</h2><h3 id=\"安装massdatabase\"><a href=\"#安装massdatabase\" class=\"headerlink\" title=\"安装massdatabase\"></a>安装<a href=\"https://massdatabase.tidymass.org/index.html\">massdatabase</a></h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">remotes<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;tidymass/massdatabase&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>可将msp格式的数据库转换为metid数据库。<font color=#FF0000>目前有bug：Error in `dplyr::select()`: ! Can’t subset columns that don’t exist. ✖ Column `Name` doesn’t exist.</font></p>\n<p>bug解决前可以下载已经构建好的公共库：<a href=\"https://tidymass.github.io/metid/articles/public_databases.html\">Database provided for metid</a>。</p>\n<h3 id=\"MassBank\"><a href=\"#MassBank\" class=\"headerlink\" title=\"MassBank\"></a><a href=\"https://github.com/MassBank/MassBank-data/releases\">MassBank</a></h3><p>下载最新的release <a href=\"https://github.com/MassBank/MassBank-data/releases/download/2022.12.1/MassBank_NIST.msp\">MassBank_NIST.msp</a>，将其放在当前目录下。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;C:/Users/liu/Downloads&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>metid<span class=\"punctuation\">)</span></span><br><span class=\"line\">massbank_database_2022.12.01 <span class=\"operator\">&lt;-</span> construct_mona_database<span class=\"punctuation\">(</span></span><br><span class=\"line\">  file <span class=\"operator\">=</span> <span class=\"string\">&quot;MassBank_NIST.msp&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  path <span class=\"operator\">=</span> <span class=\"string\">&quot;.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  version <span class=\"operator\">=</span> <span class=\"string\">&quot;2022.12.01&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  source <span class=\"operator\">=</span> <span class=\"string\">&quot;MassBank&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  link <span class=\"operator\">=</span> <span class=\"string\">&quot;https://github.com/MassBank/MassBank-data/releases&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  creater <span class=\"operator\">=</span> <span class=\"string\">&quot;Hualin Liu&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  email <span class=\"operator\">=</span> <span class=\"string\">&quot;LHL371@126.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  rt <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  threads <span class=\"operator\">=</span> <span class=\"number\">15</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>massbank_database_2022.12.01<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;massbank_database_2022.12.01&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MoNA\"><a href=\"#MoNA\" class=\"headerlink\" title=\"MoNA\"></a><a href=\"https://mona.fiehnlab.ucdavis.edu/downloads\">MoNA</a></h3><p>下载对应数据库，如此处下载<code>LC-MS Spectra (153,242 spectra)</code>，截至<a href=\"https://mona.fiehnlab.ucdavis.edu/spectra/statistics\">2023.04.16</a>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>metid<span class=\"punctuation\">)</span></span><br><span class=\"line\">mona_database_2023.04.16 <span class=\"operator\">&lt;-</span> construct_mona_database<span class=\"punctuation\">(</span></span><br><span class=\"line\">  file <span class=\"operator\">=</span> <span class=\"string\">&quot;MoNA-export-LC-MS_Spectra.msp&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  path <span class=\"operator\">=</span> <span class=\"string\">&quot;.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  version <span class=\"operator\">=</span> <span class=\"string\">&quot;2023.04.16&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  source <span class=\"operator\">=</span> <span class=\"string\">&quot;MoNA&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  link <span class=\"operator\">=</span> <span class=\"string\">&quot;https://mona.fiehnlab.ucdavis.edu/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  creater <span class=\"operator\">=</span> <span class=\"string\">&quot;Hualin Liu&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  email <span class=\"operator\">=</span> <span class=\"string\">&quot;LHL371@126.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  rt <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  threads <span class=\"operator\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>mona_database_2023.04.16<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;mona_database_2023.04.16&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>massdatabase<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">data <span class=\"operator\">&lt;-</span> massdatabase<span class=\"operator\">::</span>read_msp_data<span class=\"punctuation\">(</span><span class=\"string\">&quot;MoNA-export-LC-MS_Spectra.msp&quot;</span><span class=\"punctuation\">,</span> source <span class=\"operator\">=</span> <span class=\"string\">&quot;mona&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">massdatabase<span class=\"operator\">::</span>convert_mona2metid<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> data<span class=\"punctuation\">,</span> path <span class=\"operator\">=</span> <span class=\"string\">&quot;.&quot;</span><span class=\"punctuation\">,</span> threads <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://tidymass.github.io/metid/articles/database_construction.html\">Construct in-house MS2 datbase using metid</a></li>\n<li><a href=\"https://tidymass.github.io/metid/articles/public_database_construction.html\">Construct public MS2 datbase using metid</a></li>\n</ul>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"代谢组学","path":"api/tags/代谢组学.json"}]},{"title":"用wget批量下载含有链接的文件/目录","slug":"用wget批量下载含有链接的文件-目录","date":"2019-01-31T11:58:40.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/用wget批量下载含有链接的文件-目录.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文讲述了如何利用Linux下载工具wget根据链接批量下载文件或者目录。</p>\n<span id=\"more\"></span>\n\n<p>wget 为Linux自带的下载工具，windows下也可以安装</p>\n<p><strong>一：windows下安装wget：</strong></p>\n<ol>\n<li>安装Chocolatey<br>方案A：以管理员身份运行cmd.exe<br>输入：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"string\">&quot;%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe&quot;</span> -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command <span class=\"string\">&quot;iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))&quot;</span> &amp;&amp; SET <span class=\"string\">&quot;PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin&quot;</span></span><br></pre></td></tr></table></figure>\n<p>回车等待安装完成。</p>\n<p>方案B：PowerShell用户输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))</span><br></pre></td></tr></table></figure>\n<p>测试是否安装成功，在命令行中输入“choco”看到help信息表明安装成功。</p>\n<ol start=\"2\">\n<li>安装wget</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">choco install wget</span><br></pre></td></tr></table></figure>\n<p>升级wget</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">choco upgrade wget</span><br></pre></td></tr></table></figure>\n\n<p><strong>二、用wget下载数据</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -r -c -nH -nc --cut-dirs=3 -i file_contain_url_lists </span><br></pre></td></tr></table></figure>\n\n<p>-i file_contain_url_lists：含有文件&#x2F;目录链接的文件，每个链接一行</p>\n<p>-nc：不覆盖已下载的文件</p>\n<p>-c：断点续传</p>\n<p>–cut-dirs&#x3D;3：忽略 NUMBER层远程目录</p>\n<p>-nH：不创建主机目录</p>\n<p>-r：递归下载</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"下载","path":"api/tags/下载.json"}]},{"title":"用MaAsLin2包做微生物组多变量线性模型关联分析","slug":"用MaAsLin2包做微生物组多变量线性模型关联分析","date":"2024-07-30T14:41:21.000Z","updated":"2024-08-12T13:51:57.224Z","comments":true,"path":"api/articles/用MaAsLin2包做微生物组多变量线性模型关联分析.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/biobakery/omnibus-and-maaslin2-rscripts-and-hmp2-data@master/assets/sigresults_screenshot.png","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>MaAsLin 2 是 MaAsLin（微生物组多变量线性模型关联，Microbiome Multivariable Association with Linear Models）的下一代产品。</p>\n<p>MaAsLin 2 是一个全面的 R 语言软件包，用于高效地确定表型、环境、暴露、协变量和微生物组元组学特征之间的多变量关联。MaAsLin 2 依赖于一般线性模型来适应大多数现代流行病学研究设计，包括横断面和纵向研究，以及多种数据探索、标准化和转换方法。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span><span class=\"punctuation\">(</span><span class=\"operator\">!</span>requireNamespace<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">,</span> quietly <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">BiocManager<span class=\"operator\">::</span>install<span class=\"punctuation\">(</span><span class=\"string\">&quot;Maaslin2&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"微生物组关联检测\"><a href=\"#微生物组关联检测\" class=\"headerlink\" title=\"微生物组关联检测\"></a>微生物组关联检测</h1><h2 id=\"输入文件\"><a href=\"#输入文件\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h2><h3 id=\"微生物组特征数据或功能数据\"><a href=\"#微生物组特征数据或功能数据\" class=\"headerlink\" title=\"微生物组特征数据或功能数据\"></a>微生物组特征数据或功能数据</h3><ul>\n<li>以制表符分隔列</li>\n<li>行为样本，列为特征（微生物&#x2F;基因&#x2F;功能……）</li>\n</ul>\n<div style=\"overflow-x:auto;\">\n<table>\n    <thead>\n        <tr>\n            <th>ID</th>\n            <th>Bifidobacterium adolescentis</th>\n            <th>Bifidobacterium bifidum</th>\n            <th>Bifidobacterium longum</th>\n            <th>Bifidobacterium pseudocatenulatum</th>\n            <th>Collinsella aerofaciens</th>\n            <th>Bacteroides caccae</th>\n            <th>Bacteroides cellulosilyticus</th>\n            <th>Bacteroides dorei</th>\n            <th>Bacteroides eggerthii</th>\n            <th>Bacteroides faecis</th>\n            <th>Bacteroides finegoldii</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>CSM5FZ3N_P</td>\n            <td>Cedars-Sinai</td>\n            <td>43</td>\n            <td>CD</td>\n            <td>C3001</td>\n            <td>No</td>\n            <td>No</td>\n            <td>0.792314801112388</td>\n            <td>No</td>\n            <td>No</td>\n            <td>No</td>\n            <td>1</td>\n        </tr>\n        <!-- ... other rows ... -->\n        <tr>\n            <td>CSM5FZ4M_P</td> <!-- Added _P to make the ID consistent -->\n            <td>Cedars-Sinai</td>\n            <td>43</td>\n            <td>UC</td>\n            <td>C3003</td>\n            <td>No</td>\n            <td>No</td>\n            <td>0.761300183426806</td>\n            <td>No</td>\n            <td>No</td>\n            <td>No</td>\n            <td>6</td>\n        </tr>\n        <tr>\n            <td>CSM5LLGB_P</td>\n            <td>MGH</td>\n            <td>30</td>\n            <td>CD</td>\n            <td>M2014</td>\n            <td>No</td>\n            <td>No</td>\n            <td>0.730525895151516</td>\n            <td>No</td>\n            <td>No</td>\n            <td>No</td>\n            <td>8</td>\n        </tr>\n    </tbody>\n</table>\n</div>\n\n<h3 id=\"元数据\"><a href=\"#元数据\" class=\"headerlink\" title=\"元数据\"></a>元数据</h3><ul>\n<li>以制表符分隔列</li>\n<li>行为样本，列为特征</li>\n</ul>\n<div style=\"overflow-x:auto;\">  \n<table border=\"1\">  \n    <thead>  \n        <tr>  \n            <th>ID</th>  \n            <th>site</th>  \n            <th>age</th>  \n            <th>diagnosis</th>  \n            <th>subject</th>  \n            <th>antibiotics</th>  \n            <th>dysbiosis_binary</th>  \n            <th>dysbiosis</th>  \n            <th>dysbiosisnonIBD</th>  \n            <th>dysbiosisUC</th>  \n            <th>dysbiosisCD</th>  \n            <th>collection</th>  \n        </tr>  \n    </thead>  \n    <tbody>  \n                <tr>\n            <td>CSM5FZ3N_P</td><td>Cedars-Sinai</td><td>43</td><td>CD</td><td>C3001</td><td>No</td><td>No</td><td>0.792314801112388</td><td>No</td><td>No</td><td>No</td><td>1</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ3R_P</td><td>Cedars-Sinai</td><td>43</td><td>CD</td><td>C3001</td><td>No</td><td>No</td><td>0.837923415694291</td><td>No</td><td>No</td><td>No</td><td>2</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ3T_P</td><td>Cedars-Sinai</td><td>76</td><td>CD</td><td>C3002</td><td>No</td><td>Yes</td><td>0.924296928419748</td><td>No</td><td>No</td><td>Yes</td><td>1</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ3V_P</td><td>Cedars-Sinai</td><td>43</td><td>CD</td><td>C3001</td><td>No</td><td>No</td><td>0.830400526852384</td><td>No</td><td>No</td><td>No</td><td>4</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ3X_P</td><td>Cedars-Sinai</td><td>76</td><td>CD</td><td>C3002</td><td>No</td><td>Yes</td><td>0.910966992923041</td><td>No</td><td>No</td><td>Yes</td><td>2</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ3Z_P</td><td>Cedars-Sinai</td><td>76</td><td>CD</td><td>C3002</td><td>No</td><td>Yes</td><td>0.912281677355966</td><td>No</td><td>No</td><td>Yes</td><td>3</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ42_P</td><td>Cedars-Sinai</td><td>76</td><td>CD</td><td>C3002</td><td>No</td><td>Yes</td><td>0.903049136702093</td><td>No</td><td>No</td><td>Yes</td><td>4</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ44_P</td><td>Cedars-Sinai</td><td>76</td><td>CD</td><td>C3002</td><td>No</td><td>Yes</td><td>0.87825476936449</td><td>No</td><td>No</td><td>Yes</td><td>5</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ46_P</td><td>Cedars-Sinai</td><td>76</td><td>CD</td><td>C3002</td><td>No</td><td>Yes</td><td>0.92542872181954</td><td>No</td><td>No</td><td>Yes</td><td>6</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ4A_P</td><td>Cedars-Sinai</td><td>47</td><td>UC</td><td>C3004</td><td>No</td><td>No</td><td>0.775160480913896</td><td>No</td><td>No</td><td>No</td><td>1</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ4C_P</td><td>Cedars-Sinai</td><td>43</td><td>CD</td><td>C3001</td><td>No</td><td>No</td><td>0.836244630681399</td><td>No</td><td>No</td><td>No</td><td>5</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ4E_P</td><td>Cedars-Sinai</td><td>43</td><td>UC</td><td>C3003</td><td>Yes</td><td>No</td><td>0.787616535915359</td><td>No</td><td>No</td><td>No</td><td>2</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ4G_P</td><td>Cedars-Sinai</td><td>43</td><td>UC</td><td>C3003</td><td>No</td><td>No</td><td>0.68128445477854</td><td>No</td><td>No</td><td>No</td><td>3</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ4K_P</td><td>Cedars-Sinai</td><td>43</td><td>UC</td><td>C3003</td><td>Yes</td><td>No</td><td>0.717164790084925</td><td>No</td><td>No</td><td>No</td><td>5</td>\n        </tr>\n        <tr>\n            <td>CSM5FZ4M</td><td>Cedars-Sinai</td><td>43</td><td>UC</td><td>C3003</td><td>No</td><td>No</td><td>0.761300183426806</td><td>No</td><td>No</td><td>No</td><td>6</td>\n        </tr>\n        <tr>\n            <td>CSM5LLGB_P</td><td>MGH</td><td>30</td><td>CD</td><td>M2014</td><td>No</td><td>No</td><td>0.730525895151516</td><td>No</td><td>No</td><td>No</td><td>8</td>\n        </tr> \n    </tbody>  \n</table>  \n</div>\n\n<p>两个文件包含的样本可以不同，分析时只取二者共有的样本。样本顺序也无需一致。</p>\n<h3 id=\"读入文件\"><a href=\"#读入文件\" class=\"headerlink\" title=\"读入文件\"></a>读入文件</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_input_data <span class=\"operator\">=</span> read.table<span class=\"punctuation\">(</span>file             <span class=\"operator\">=</span> input_data<span class=\"punctuation\">,</span></span><br><span class=\"line\">                           header           <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           sep              <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           row.names        <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">df_input_data<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">5</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_input_metadata <span class=\"operator\">=</span> read.table<span class=\"punctuation\">(</span>file             <span class=\"operator\">=</span> input_metadata<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                               header           <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                               sep              <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                               row.names        <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                               stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">df_input_metadata<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_input_path <span class=\"operator\">=</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;./pathabundance_relab.tsv&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                         sep              <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                         stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                         row.names        <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">df_input_path<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">5</span><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运行MaAsLin-2\"><a href=\"#运行MaAsLin-2\" class=\"headerlink\" title=\"运行MaAsLin 2\"></a>运行MaAsLin 2</h2><p>在MaAsLin中，可以使用几种不同类型的统计模型来进行关联测试（例如简单线性模型、零膨胀模型、基于计数的模型等）。作者在论文中评估了各种模型的优缺点，虽然默认模型通常适用于大多数分析，但在某些情况下，用户可能希望选择不同的模型。这同样适用于多种不同的微生物群落数据类型（taxonomy 或functional profiles）、环境（人类或其他）和测量方式（计数或相对比例），只要使用适当修改过的归一化&#x2F;转换方案即可。</p>\n<p>对于模型选择，如果你的输入是<code>计数数据</code>，那么你可以使用<code>NEGBIN</code>和<code>ZINB</code>模型；而对于<code>非计数数据</code>（如百分比、CPM或相对丰度）的输入，你可以使用<code>LM</code>和<code>CPLM</code>模型。</p>\n<p>在MaAsLin 2实现的归一化方法中，<u>TMM和CSS仅适用于计数数据，并且它们也返回归一化后的计数</u>，这与TSS和CLR不同。因此，如果你的输入是计数数据，你可以使用上述两种归一化方法（即TMM、CSS或NONE（如果数据已经归一化））而无需进一步转换（即transform &#x3D; NONE）。</p>\n<p><u>在非计数模型中，CPLM要求数据为正数</u>。因此，任何产生负值的转换通常都不适用于<code>CPLM</code>。</p>\n<p>由于所有非LM模型都与其与广义线性模型（GLM）的紧密联系而使用固有的对数链接转换，因此建议它们以<code>transform = NONE</code>的方式运行。</p>\n<p>除此之外，<u>LM是唯一能够处理正数和负数（在归一化&#x2F;转换之后）的模型</u>，并且（根据手稿）它通常对参数变化具有更强的鲁棒性（这是非LM模型的典型限制）。关于是否使用LM、CPLM或其他模型，直观上，<u>在存在零值的情况下，<code>CPLM</code>或<code>零膨胀替代模型</code>应该表现更好，但根据我们的基准测试，我们没有证据表明CPLM显著优于LM模型</u>。因此，<b>在选择模型时，应综合考虑数据的特性、研究目的以及模型的适用性和性能</b>。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Model (-m ANALYSIS_METHOD)</th>\n<th align=\"center\">Data type</th>\n<th align=\"center\">Normalization (-n NORMALIZATION)</th>\n<th align=\"center\">Transformation (-t TRANSFORM)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">LM</td>\n<td align=\"center\">count and non-count</td>\n<td align=\"center\">TSS, CLR, NONE</td>\n<td align=\"center\">LOG, LOGIT, AST, NONE</td>\n</tr>\n<tr>\n<td align=\"center\">CPLM</td>\n<td align=\"center\">count and non-count</td>\n<td align=\"center\">TSS, TMM, CSS, NONE</td>\n<td align=\"center\">NONE</td>\n</tr>\n<tr>\n<td align=\"center\">NEGBIN</td>\n<td align=\"center\">count</td>\n<td align=\"center\">TMM, CSS, NONE</td>\n<td align=\"center\">NONE</td>\n</tr>\n<tr>\n<td align=\"center\">ZINB</td>\n<td align=\"center\">count</td>\n<td align=\"center\">TMM, CSS, NONE</td>\n<td align=\"center\">NONE</td>\n</tr>\n</tbody></table>\n<p><strong>注</strong>：通常，还需要考虑用于过滤数据（即流行率和丰度阈值）的阈值，以减少异常值和假阳性。有关此方面的更多详细信息，请参阅MaAsLin 2中的第<a href=\"https://github.com/biobakery/biobakery/wiki/maaslin2#431-prevalence-and-abundance-filtering-in-maaslin2\">4.3.1节“流行率和丰度过滤”</a>。</p>\n<p>以下命令在HMP2数据上运行MaAsLin 2，执行多变量回归模型以测试微生物物种丰度与IBD诊断和<a href=\"https://www.nature.com/articles/s41586-019-1237-9\">菌群失调评分</a>之间的关联（<code>fixed_effects = c(&quot;diagnosis&quot;, &quot;dysbiosis&quot;)</code>）。对于具有超过2个水平的任何分类变量，还需要指定哪个变量应作为参考水平，方法是使用（<code>reference = c(&quot;diagnosis,nonIBD&quot;)</code>）。<strong>注</strong>：<font color=#FF0000>在变量和水平之间添加空格可能会导致使用错误的参考水平</font>。输出将生成在当前工作目录下的名为demo_output的文件夹中（<code>output = &quot;demo_output&quot;</code>）。在此示例中，输入数据已预先进行归一化和过滤，因此我们也将关闭默认的归一化和流行率过滤。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fit_data <span class=\"operator\">=</span> Maaslin2<span class=\"punctuation\">(</span>input_data     <span class=\"operator\">=</span> df_input_data<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                    input_metadata <span class=\"operator\">=</span> df_input_metadata<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                    min_prevalence <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    normalization  <span class=\"operator\">=</span> <span class=\"string\">&quot;NONE&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    output         <span class=\"operator\">=</span> <span class=\"string\">&quot;demo_output&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                    fixed_effects  <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dysbiosis&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    reference      <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis,nonIBD&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><h3 id=\"重要关联\"><a href=\"#重要关联\" class=\"headerlink\" title=\"重要关联\"></a>重要关联</h3><p>MaAsLin 2最重要的输出之一可能是重要关联的列表。这些关联在<code>significant_results.tsv</code>文件中提供：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/biobakery/omnibus-and-maaslin2-rscripts-and-hmp2-data@master/assets/sigresults_screenshot.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/biobakery/omnibus-and-maaslin2-rscripts-and-hmp2-data@master/assets/sigresults_screenshot.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"significant_results.tsv\"></p>\n<p>这些是通过MaAsLin 2显著性阈值的全部关联列表，按照q值递增的顺序排序。列包括：</p>\n<ul>\n<li><p><strong>metadata</strong>：与微生物特征相关联的变量名。</p>\n</li>\n<li><p><strong>feature</strong>：微生物特征（分类群、基因、途径等）。</p>\n</li>\n<li><p><strong>value</strong>：对于分类特征，这是报告系数和关联显著性的具体特征水平。</p>\n</li>\n<li><p><strong>coef</strong>：模型系数值（效应大小）。对于分类变量，系数表示在value中指定的类别与参考类别之间的对比。</p>\n</li>\n<li><p><strong>stderr</strong>：模型的标准误差。</p>\n</li>\n<li><p><strong>N</strong>：用于此关联的模型中样本的总数（例如，因为可以排除缺失值）。</p>\n</li>\n<li><p><strong>N.not.0</strong>：在这些样本中，特征非零的总数。</p>\n</li>\n<li><p><strong>pval</strong>：此关联的名义显著性。</p>\n</li>\n<li><p><strong>qval</strong>：使用p.adjust函数和校正方法（如BH等）计算得到的校正显著性。</p>\n</li>\n<li><p><strong>问题</strong>：如何解释这个表格的第一行？</p>\n</li>\n</ul>\n<p>对于<code>significant_results.tsv</code>中的每个重要关联，MaAsLin 2还会生成可视化图表以供检查（分类变量的箱线图，连续变量的散点图）。这些图表命名为“metadata_name.pdf”。例如，从我们的分析运行中，我们得到了可视化文件<code>dysbiosis.pdf</code>和<code>diagnosis.pdf</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/biobakery/omnibus-and-maaslin2-rscripts-and-hmp2-data@master/assets/scatterplot_screenshot.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/biobakery/omnibus-and-maaslin2-rscripts-and-hmp2-data@master/assets/scatterplot_screenshot.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"dysbiosis.pdf\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/biobakery/omnibus-and-maaslin2-rscripts-and-hmp2-data@master/assets/boxplot_screenshot.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/biobakery/omnibus-and-maaslin2-rscripts-and-hmp2-data@master/assets/boxplot_screenshot.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"diagnosis.pdf\"></p>\n<h3 id=\"输出文件完整列表\"><a href=\"#输出文件完整列表\" class=\"headerlink\" title=\"输出文件完整列表\"></a>输出文件完整列表</h3><p>MaAsLin 2生成两种类型的输出文件：数据和可视化文件。</p>\n<ul>\n<li><p>数据输出文件</p>\n<ul>\n<li><p>significant_results.tsv</p>\n</li>\n<li><p>all_results.tsv</p>\n<ul>\n<li>与significant_results.tsv格式相同，但包含所有关联结果（而不仅仅是显著的结果）。</li>\n<li>您也可以在R中使用fit_data$results访问此表。</li>\n</ul>\n</li>\n<li><p>residuals.rds</p>\n<ul>\n<li>此文件包含一个包含每个特征残差的数据框。</li>\n</ul>\n</li>\n<li><p>maaslin2.log</p>\n<ul>\n<li>此文件包含运行的所有日志信息。</li>\n<li>它包括所有设置、警告、错误和运行的步骤。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>可视化输出文件</p>\n<ul>\n<li><p>heatmap.pdf</p>\n<ul>\n<li>此文件包含显著关联的热图。</li>\n</ul>\n</li>\n<li><p>[a-z&#x2F;0-9]+.pdf</p>\n<ul>\n<li>为每个显著关联生成一个图表。</li>\n<li>对于连续元数据，使用散点图。</li>\n<li>对于分类数据，使用箱线图。</li>\n<li>绘制的数据点已经过归一化、过滤和转换。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"MaAsLin-2在功能谱上的应用\"><a href=\"#MaAsLin-2在功能谱上的应用\" class=\"headerlink\" title=\"MaAsLin 2在功能谱上的应用\"></a>MaAsLin 2在功能谱上的应用</h3><p>如果您的功能表是由HUMAnN生成的，并且已经使用<code>humann_renorm_table</code>脚本进行了归一化，那么您不需要执行任何额外的归一化——测序深度的影响已经被消除（这正是本教程中将使用的）。我们倾向于使用<code>CPM</code>单位，因为我们发现它们更方便，但在建模目的上，它们在数值上与相对丰度是等价的（<code>CPM = RA * 1e6</code>）。</p>\n<p>否则，可使用上述关于模型&#x2F;归一化&#x2F;转换的相同思路。</p>\n<p>在使用MaAsLin 2处理功能谱时的一些其他快速提示：</p>\n<ul>\n<li>为了减少特征数量，通常希望运行未分层的功能特征（或分层特征的过滤子集）。</li>\n<li>可能还想移除与特定分类群高度相关的功能特征（即可能由该微生物贡献），因为这些特征可以通过分类学变化得到更好的解释。</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#This can also be done with with the HUMAnN 3 untiliy `humann_split_stratified_table`</span></span><br><span class=\"line\">unstrat_pathways <span class=\"operator\">&lt;-</span><span class=\"keyword\">function</span><span class=\"punctuation\">(</span>dat_path<span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  temp <span class=\"operator\">=</span> dat_path<span class=\"punctuation\">[</span><span class=\"operator\">!</span>grepl<span class=\"punctuation\">(</span><span class=\"string\">&quot;\\\\|&quot;</span><span class=\"punctuation\">,</span>rownames<span class=\"punctuation\">(</span>dat_path<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"built_in\">return</span><span class=\"punctuation\">(</span>temp<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_input_path <span class=\"operator\">=</span> unstrat_pathways<span class=\"punctuation\">(</span>df_input_path<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>在由<a href=\"https://github.com/biobakery/biobakery/wiki/biobakery_workflows\">bioBakery工作流程</a>生成的MetaCyc途径表上运行与上述相同的模型。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fit_func <span class=\"operator\">=</span> Maaslin2<span class=\"punctuation\">(</span>input_data     <span class=\"operator\">=</span> df_input_path<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                    input_metadata <span class=\"operator\">=</span> df_input_metadata<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                    output         <span class=\"operator\">=</span> <span class=\"string\">&quot;demo_functional&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                    fixed_effects  <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dysbiosis&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    reference      <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis,nonIBD&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    min_abundance  <span class=\"operator\">=</span> <span class=\"number\">0.0001</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                    min_prevalence <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：在这里，我们有列中的样本和行中的特征，MaAsLin 2正确地识别了这一点，并且能够匹配样本。</p>\n<p>作者最近还发表了关于使用MaAsLin 2分析宏转录组学数据（MTX）中差异特征的研究，有关该主题的更多信息，请参阅<a href=\"https://academic.oup.com/bioinformatics/article/37/Supplement_1/i34/6319701\">最近的出版物</a>。</p>\n<h1 id=\"高级主题\"><a href=\"#高级主题\" class=\"headerlink\" title=\"高级主题\"></a>高级主题</h1><h2 id=\"交互作用\"><a href=\"#交互作用\" class=\"headerlink\" title=\"交互作用\"></a>交互作用</h2><p>许多统计分析都关注于测试某些变量之间的交互作用。不幸的是，MaAsLin 2目前尚未提供直接的界面来进行此操作。相反，用户需要创建人工交互列作为额外的fixed_effects项。以上面的拟合为例，为了测试诊断与菌群失调之间的交互作用，我可以创建两列额外的数据：CD_dysbiosis和UC_dysbiosis（因为诊断的参考是非IBD）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_input_metadata<span class=\"operator\">$</span>CD_dysbiosis <span class=\"operator\">=</span> <span class=\"punctuation\">(</span>df_input_metadata<span class=\"operator\">$</span>diagnosis <span class=\"operator\">==</span> <span class=\"string\">&quot;CD&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">*</span></span><br><span class=\"line\">                                 df_input_metadata<span class=\"operator\">$</span>dysbiosis</span><br><span class=\"line\">df_input_metadata<span class=\"operator\">$</span>UC_dysbiosis <span class=\"operator\">=</span> <span class=\"punctuation\">(</span>df_input_metadata<span class=\"operator\">$</span>diagnosis <span class=\"operator\">==</span> <span class=\"string\">&quot;UC&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">*</span></span><br><span class=\"line\">                                 df_input_metadata<span class=\"operator\">$</span>dysbiosis</span><br><span class=\"line\"></span><br><span class=\"line\">fit_data_ixn <span class=\"operator\">=</span> Maaslin2<span class=\"punctuation\">(</span>input_data     <span class=\"operator\">=</span> df_input_data<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        input_metadata <span class=\"operator\">=</span> df_input_metadata<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        min_prevalence <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                        normalization  <span class=\"operator\">=</span> <span class=\"string\">&quot;NONE&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                        output         <span class=\"operator\">=</span> <span class=\"string\">&quot;demo_output_interaction&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        fixed_effects  <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dysbiosis&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;CD_dysbiosis&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;UC_dysbiosis&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                        reference      <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis,nonIBD&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"随机效应\"><a href=\"#随机效应\" class=\"headerlink\" title=\"随机效应\"></a>随机效应</h2><p>某些研究自然地将样本观测值“分组”，例如在纵向设计中按受试者分组或在家庭设计中按家庭分组。对于统计分析来说，重要的是要处理属于同一组的样本之间的非独立性。MaAsLin 2 通过 <code>random_effects</code> 参数提供了一个简单的界面来处理这个问题，用户可以在其中指定分组变量来运行混合效应模型。例如，我们注意到 HMP2 是一个纵向设计，其中同一个受试者（列中的 subject）可以有多个样本。因此，我们要求 MaAsLin 2 使用 subject 作为其随机效应分组变量：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fit_data_random <span class=\"operator\">=</span> Maaslin2<span class=\"punctuation\">(</span>input_data     <span class=\"operator\">=</span> df_input_data<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           input_metadata <span class=\"operator\">=</span> df_input_metadata<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           min_prevalence <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           normalization  <span class=\"operator\">=</span> <span class=\"string\">&quot;NONE&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           output         <span class=\"operator\">=</span> <span class=\"string\">&quot;demo_output_random&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           fixed_effects  <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dysbiosis&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           random_effects <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;subject&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           reference      <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis,nonIBD&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你对在纵向研究中测试时间的影响感兴趣，那么在调用 MaAsLin 2 时，时间点变量应该包含在 <code>fixed_effects </code>中。</p>\n<ul>\n<li>问题：直觉上，你能想到为什么解决样本之间的非独立性很重要吗？<ul>\n<li>提示：想象一下一个简单的场景，你有两个受试者，一个病例和一个对照，每个受试者都有两个样本。</li>\n<li>当同一受试者的样本高度独立时，与它们高度相关时，有效样本大小是多少？</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他选项\"><a href=\"#其他选项\" class=\"headerlink\" title=\"其他选项\"></a>其他选项</h2><p>MaAsLin 2 提供了许多参数选项，用于不同的数据预处理（规范化、过滤、转换）和其他任务。这些选项的完整列表是：</p>\n<ul>\n<li><p>min_abundance</p>\n<ul>\n<li>每个特征的最小丰度 [ 默认值：0 ]</li>\n</ul>\n</li>\n<li><p>min_prevalence</p>\n<ul>\n<li>以最小丰度检测到一个特征的最小样本百分比 [ 默认值：0.1 ]</li>\n</ul>\n</li>\n<li><p>max_significance</p>\n<ul>\n<li>显著性的 q 值阈值 [ 默认值：0.25 ]</li>\n</ul>\n</li>\n<li><p>normalization</p>\n<ul>\n<li>要应用的规范化方法 [ 默认值：”TSS” ] [ 选项：”TSS”、”CLR”、”CSS”、”NONE”、”TMM” ]</li>\n</ul>\n</li>\n<li><p>transform</p>\n<ul>\n<li>要应用的转换 [ 默认值：”LOG” ] [ 选项：”LOG”、”LOGIT”、”AST”、”NONE” ]</li>\n</ul>\n</li>\n<li><p>analysis_method</p>\n<ul>\n<li>要应用的分析方法 [ 默认值：”LM” ] [ 选项：”LM”、”CPLM”、”ZICP”、”NEGBIN”、”ZINB” ]</li>\n</ul>\n</li>\n<li><p>correction</p>\n<ul>\n<li>计算 q 值的校正方法 [ 默认值：”BH” ]</li>\n</ul>\n</li>\n<li><p>standardize</p>\n<ul>\n<li>应用 z 分数，以便连续元数据在同一尺度上 [ 默认值：TRUE ]</li>\n</ul>\n</li>\n<li><p>plot_heatmap</p>\n<ul>\n<li>为显著关联生成热图 [ 默认值：TRUE ]</li>\n</ul>\n</li>\n<li><p>heatmap_first_n</p>\n<ul>\n<li>在热图中，绘制具有显著关联的前 N 个特征 [ 默认值：50 ]</li>\n</ul>\n</li>\n<li><p>plot_scatter</p>\n<ul>\n<li>为显著关联生成散点图 [ 默认值：TRUE ]</li>\n</ul>\n</li>\n<li><p>cores</p>\n<ul>\n<li>并行运行的 R 进程数 [ 默认值：1 ]</li>\n</ul>\n</li>\n<li><p>reference</p>\n<ul>\n<li>用作具有两个以上级别的变量的参考，以“变量,参考”的字符串形式提供，多个变量之间用分号分隔。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"MaAsLin-2-中的流行率和丰度过滤\"><a href=\"#MaAsLin-2-中的流行率和丰度过滤\" class=\"headerlink\" title=\"MaAsLin 2 中的流行率和丰度过滤\"></a>MaAsLin 2 中的流行率和丰度过滤</h3><p>通常，只有在某个特征在“足够”多的时间内非零时，测试特征与元数据之间的关联才有意义。“足够”的具体比例可能因研究而异，但 10-50% 的最小流行率阈值并不罕见（高达 70-90% 也是合理的）。由于我们已经在使用一小部分精选的演示数据，我们将使用 <code>min_prevalence = 0.1</code> 来仅测试至少 10% 的非零值的特征。请注意：这是 MaAsLin 2 中的默认参数设置。</p>\n<p>类似地，通常只希望测试在这么多样本中达到最小丰度阈值的特征。默认情况下，MaAsLin 2 会认为任何非零值都是可靠的，如果你已经在数据集中进行了充分的质量控制（QC），那么这样做是合适的。然而，如果你想要进行更多过滤或采取保守态度，你可以设置一个最小丰度阈值，如 <code>min_abundance = 0.0001</code>，以仅测试达到这个（相对）丰度的特征。</p>\n<p>将这些参数组合起来，我们可以使用两者来运行 MaAsLin 2（并且速度会更快！）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fit_data_filter <span class=\"operator\">=</span> Maaslin2<span class=\"punctuation\">(</span>input_data     <span class=\"operator\">=</span> df_input_data<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           input_metadata <span class=\"operator\">=</span> df_input_metadata<span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           normalization  <span class=\"operator\">=</span> <span class=\"string\">&quot;NONE&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           output         <span class=\"operator\">=</span> <span class=\"string\">&quot;demo_output_filter&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">                           fixed_effects  <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dysbiosis&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           reference      <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;diagnosis,nonIBD&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           random_effects <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;subject&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           min_prevalence <span class=\"operator\">=</span> <span class=\"number\">0.1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                           min_abundance  <span class=\"operator\">=</span> <span class=\"number\">0.0001</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Maaslin2.R --transform=AST --fixed_effects=<span class=\"string\">&quot;diagnosis,dysbiosis&quot;</span>  /usr/local/lib/R/site-library/Maaslin2/extdata/HMP2_taxonomy.tsv /usr/local/lib/R/site-library/Maaslin2/extdata/HMP2_metadata.tsv demo_output --reference=<span class=\"string\">&quot;diagnosis,nonIBD&quot;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ Maaslin2.R --help</span><br><span class=\"line\">Usage: ./R/Maaslin2.R [options] &lt;data.tsv&gt; &lt;metadata.tsv&gt; &lt;output_folder&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">    -h, --help</span><br><span class=\"line\">        Show this help message and exit</span><br><span class=\"line\"></span><br><span class=\"line\">    -a MIN_ABUNDANCE, --min_abundance=MIN_ABUNDANCE</span><br><span class=\"line\">        The minimum abundance for each feature [ Default: 0 ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -p MIN_PREVALENCE, --min_prevalence=MIN_PREVALENCE</span><br><span class=\"line\">        The minimum percent of samples for which a feature </span><br><span class=\"line\">        is detected at minimum abundance [ Default: 0.1 ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -s MAX_SIGNIFICANCE, --max_significance=MAX_SIGNIFICANCE</span><br><span class=\"line\">        The q-value threshold for significance [ Default: 0.25 ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -n NORMALIZATION, --normalization=NORMALIZATION</span><br><span class=\"line\">        The normalization method to apply [ Default: TSS ]</span><br><span class=\"line\">        [ Choices: TSS, CLR, CSS, NONE, TMM ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -t TRANSFORM, --transform=TRANSFORM</span><br><span class=\"line\">        The transform to apply [ Default: LOG ]</span><br><span class=\"line\">        [ Choices: LOG, LOGIT, AST, NONE ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -m ANALYSIS_METHOD, --analysis_method=ANALYSIS_METHOD</span><br><span class=\"line\">        The analysis method to apply [ Default: LM ]</span><br><span class=\"line\">        [ Choices: LM, CPLM, NEGBIN, ZINB ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -r RANDOM_EFFECTS, --random_effects=RANDOM_EFFECTS</span><br><span class=\"line\">        The random effects for the model, comma-delimited</span><br><span class=\"line\">        for multiple effects [ Default: none ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -f FIXED_EFFECTS, --fixed_effects=FIXED_EFFECTS</span><br><span class=\"line\">        The fixed effects for the model, comma-delimited</span><br><span class=\"line\">        for multiple effects [ Default: all ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -c CORRECTION, --correction=CORRECTION</span><br><span class=\"line\">        The correction method for computing the </span><br><span class=\"line\">        q-value [ Default: BH ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -z STANDARDIZE, --standardize=STANDARDIZE</span><br><span class=\"line\">        Apply z-score so continuous metadata are </span><br><span class=\"line\">        on the same scale [ Default: TRUE ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -l PLOT_HEATMAP, --plot_heatmap=PLOT_HEATMAP</span><br><span class=\"line\">        Generate a heatmap for the significant </span><br><span class=\"line\">        associations [ Default: TRUE ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -i HEATMAP_FIRST_N, --heatmap_first_n=HEATMAP_FIRST_N</span><br><span class=\"line\">        In heatmap, plot top N features with significant </span><br><span class=\"line\">        associations [ Default: TRUE ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -o PLOT_SCATTER, --plot_scatter=PLOT_SCATTER</span><br><span class=\"line\">        Generate scatter plots for the significant</span><br><span class=\"line\">        associations [ Default: TRUE ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -e CORES, --cores=CORES</span><br><span class=\"line\">        The number of R processes to run in parallel</span><br><span class=\"line\">        [ Default: 1 ]</span><br><span class=\"line\"></span><br><span class=\"line\">    -r REFERENCE, --reference=&#x27;VARIABLE,REFERENCE&#x27;</span><br><span class=\"line\">        The factor to use as a reference for a </span><br><span class=\"line\">        variable with more than two levels </span><br><span class=\"line\">        provided as a string of &#x27;variable,reference&#x27; </span><br><span class=\"line\">        semi-colon delimited for multiple variables.</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><ul>\n<li>Mallick H, Rahnavard A, McIver LJ, Ma S, Zhang Y, Nguyen LH, Tickle TL, Weingart G, Ren B, Schwager EH, Chatterjee S, Thompson KN, Wilkinson JE, Subramanian A, Lu Y, Waldron L, Paulson JN, Franzosa EA, Bravo HC, Huttenhower C (2021). <a href=\"https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1009442\">Multivariable Association Discovery in Population-scale Meta-omics Studies</a>. PLoS Computational Biology, 17(11):e1009442.</li>\n</ul>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"扩增子","path":"api/tags/扩增子.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"R语言","path":"api/tags/R语言.json"}]},{"title":"计算蛋白质等电点并绘制全局pI图","slug":"计算蛋白质等电点","date":"2022-01-03T02:49:17.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/计算蛋白质等电点.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png","content":"<h1 id=\"蛋白质组的全局-pIs\"><a href=\"#蛋白质组的全局-pIs\" class=\"headerlink\" title=\"蛋白质组的全局 pIs\"></a>蛋白质组的全局 pIs</h1><p>细胞全局蛋白质组 pI 图的变化取决于氨基酸的总电荷，并对蛋白质的结构和特性具有重要意义。</p>\n<p>普遍认为原核基因组具有两个最大的双峰形状，一个在酸性pH值下主要对应于溶解的蛋白质（细胞质蛋白或分泌蛋白），另一种在膜蛋白的碱性pH值下，具有细胞内碱性（带正电荷）结构域以促进质子动力的产生。在这两个峰之间，有一个最小的中性值，对应于细胞内的pH值（如下图）。</p>\n<p>蛋白质氨基酸组成和 pI 水平的显着变化提供了一种工具来预测培养物或宏基因组组装基因组(MAG)的首选栖息地。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"蛋白质组的全局 pIs\"><br><a href=\"https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-019-0731-5#Abs1\">Pedro J. et al., 2019, Microbiome</a></p>\n<h1 id=\"安装EMBOSS\"><a href=\"#安装EMBOSS\" class=\"headerlink\" title=\"安装EMBOSS\"></a>安装EMBOSS</h1><ul>\n<li>下载</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget  ftp://emboss.open-bio.org/pub/EMBOSS/emboss-latest.tar.gz</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar zxvf emboss-latest.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 防止报错 (error while loading shared libraries: libnucleus.so.6)</span></span><br><span class=\"line\">sudo /sbin/ldconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置、编译与安装</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> emboss-latest</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"输入文件\"><a href=\"#输入文件\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h1><p>输入文件为含有一条或多条氨基酸序列的FASTA格式文件。</p>\n<h1 id=\"计算氨基酸序列的各特征数据Calculate-statistics-of-protein-properties\"><a href=\"#计算氨基酸序列的各特征数据Calculate-statistics-of-protein-properties\" class=\"headerlink\" title=\"计算氨基酸序列的各特征数据Calculate statistics of protein properties\"></a><ruby>计算氨基酸序列的各特征数据<rt>Calculate statistics of protein properties</rt></ruby></h1><h2 id=\"逐个文件计算\"><a href=\"#逐个文件计算\" class=\"headerlink\" title=\"逐个文件计算\"></a>逐个文件计算</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pepstats -sequence F01_bin.1.faa -outfile F01_bin.1.out</span><br></pre></td></tr></table></figure>\n<p>:::primary 参数解析</p>\n<ul>\n<li><p>Standard (Mandatory) qualifiers:</p>\n<ul>\n<li>[-sequence]          seqall     Protein sequence(s) filename and optional<br>                        format, or reference (input USA)</li>\n<li>[-outfile]           outfile    [*.pepstats] Pepstats program output file</li>\n</ul>\n</li>\n<li><p>Advanced (Unprompted) qualifiers:</p>\n<ul>\n<li>-aadata             datafile   [Eamino.dat] Amino acid properties</li>\n<li>-mwdata             datafile   [Emolwt.dat] Molecular weight data for amino<br>                        acids</li>\n<li>-pkdata             datafile   [Epk.dat] Values of pKa for amino acids</li>\n<li>-[no]termini        boolean    [Y] Include charge at N and C terminus</li>\n<li>-mono               boolean    [N] Use monoisotopic weights</li>\n</ul>\n</li>\n</ul>\n<p>:::</p>\n<h2 id=\"批量计算与pI提取并输出为相对丰度\"><a href=\"#批量计算与pI提取并输出为相对丰度\" class=\"headerlink\" title=\"批量计算与pI提取并输出为相对丰度\"></a>批量计算与pI提取并输出为相对丰度</h2><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># name: print_pI.pl</span></span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: 2022.01.03</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @genome = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@genome) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.pepstats&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $pi = $1 . <span class=\"string\">&quot;.pI&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;pepstats -sequence $_ -outfile $out&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $seqnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"regexp\">/^(Isoelectric Point = )(\\S+)/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $pi = <span class=\"keyword\">sprintf</span> <span class=\"string\">&quot;%.1f&quot;</span>, $2;</span><br><span class=\"line\">\t\t\t$hash&#123;$pi&#125;++;</span><br><span class=\"line\">\t\t\t$seqnum++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#my @records = values %hash;</span></span><br><span class=\"line\">\t<span class=\"comment\">#my $seqnum = @records;</span></span><br><span class=\"line\">\t<span class=\"comment\">#print $seqnum . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$pi&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Isoelectric point\\tRelative frequency\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span>  (<span class=\"keyword\">keys</span> %hash) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $frequency = <span class=\"keyword\">sprintf</span> <span class=\"string\">&quot;%.2f&quot;</span>, $hash&#123;$_&#125;/$seqnum;<span class=\"comment\">#@records;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$_\\t$frequency\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"选择性忽略-（这是我自己用的）\"><a href=\"#选择性忽略-（这是我自己用的）\" class=\"headerlink\" title=\"选择性忽略 （这是我自己用的）\"></a>选择性忽略 （这是我自己用的）</h2><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># name: co_sample_pI.pl</span></span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: 2022.01.03</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;F06.pi&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;MAGs\\tIsoelectric point\\tRelative frequency\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @pI = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;F06*.pI&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@pI) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).pI/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $mag = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$mag\\t$_\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"可视化\"><a href=\"#可视化\" class=\"headerlink\" title=\"可视化\"></a>可视化</h1><h2 id=\"绘制蛋白质组的全局-pIs图\"><a href=\"#绘制蛋白质组的全局-pIs图\" class=\"headerlink\" title=\"绘制蛋白质组的全局 pIs图\"></a>绘制蛋白质组的全局 pIs图</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Step 1 读入数据</span></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/Results/Annotations/AAs&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">F1 <span class=\"operator\">&lt;-</span>read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;F01_bin.1.pI&quot;</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 2 绘图，以下5选1</span></span><br><span class=\"line\"><span class=\"comment\">## 单组加点，运行完后跳到Step 3</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_point<span class=\"punctuation\">(</span>size<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">,</span>shape<span class=\"operator\">=</span><span class=\"number\">21</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 单组无点，运行完后跳到Step 3</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 多组加点</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">,</span> color<span class=\"operator\">=</span>MAGs<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_point<span class=\"punctuation\">(</span>size<span class=\"operator\">=</span><span class=\"number\">3</span><span class=\"punctuation\">,</span>shape<span class=\"operator\">=</span><span class=\"number\">21</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 多组无点显示置信区间</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">,</span> color<span class=\"operator\">=</span>MAGs<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 多组无点去除置信区间</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">,</span> color<span class=\"operator\">=</span>MAGs<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">,</span>se <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 3 美化，看下图</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> scale_x_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_y_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span> <span class=\"string\">&quot;Isoelectric point&quot;</span><span class=\"punctuation\">,</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Relative frequency&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## ==============以下代码为自用========================</span></span><br><span class=\"line\"><span class=\"comment\">## F04自定义颜色</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> scale_x_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_y_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span> <span class=\"string\">&quot;Isoelectric point&quot;</span><span class=\"punctuation\">,</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Relative frequency&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_color_manual<span class=\"punctuation\">(</span>name<span class=\"operator\">=</span><span class=\"string\">&quot;MAGs&quot;</span><span class=\"punctuation\">,</span> values<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#1f77b4&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#ff7f0e&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#2ca02c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#d62728&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#9467bd&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#8c564b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#e377c2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#bcbd22&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## F05自定义颜色</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> scale_x_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_y_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span> <span class=\"string\">&quot;Isoelectric point&quot;</span><span class=\"punctuation\">,</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Relative frequency&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_color_manual<span class=\"punctuation\">(</span>name<span class=\"operator\">=</span><span class=\"string\">&quot;MAGs&quot;</span><span class=\"punctuation\">,</span> values<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#1f77b4&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#ff7f0e&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#2ca02c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#d62728&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#9467bd&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#8c564b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#e377c2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#bcbd22&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#17becf&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## F06自定义颜色</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> scale_x_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_y_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span> <span class=\"string\">&quot;Isoelectric point&quot;</span><span class=\"punctuation\">,</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Relative frequency&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_color_manual<span class=\"punctuation\">(</span>name<span class=\"operator\">=</span><span class=\"string\">&quot;MAGs&quot;</span><span class=\"punctuation\">,</span> values<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#1f77b4&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#ff7f0e&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#2ca02c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#d62728&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#9467bd&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#8c564b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#e377c2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#bcbd22&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#17becf&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#f7b6d2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#5254a3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#000000&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"蛋白质组的全局 pIs\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-019-0731-5#Abs1\">Pedro J. et al., 2019, Microbiome</a></p>\n</li>\n<li><p><a href=\"http://emboss.sourceforge.net/\">EMBOSS</a></p>\n</li>\n</ul>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“85d7”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"蛋白质组","path":"api/tags/蛋白质组.json"}]}]}