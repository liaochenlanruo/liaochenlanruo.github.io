{"total":128,"pageSize":10,"pageCount":13,"data":[{"title":"Ubuntu open-mpi运行错误","slug":"Ubuntu-open-mpi运行错误","date":"2019-03-30T07:07:30.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Ubuntu-open-mpi运行错误.json","excerpt":null,"keywords":null,"cover":null,"content":"<span id=\"more\"></span>\n\n<p>我在win10 Linux子系统下使用mpirun多线程运行ABySS基因组拼接软件的时候，出现以下错误提示：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Linux kernel CMA support was requested via the btl_vader_single_copy_mechanism MCA variable, but CMA support is not available due to restrictive ptrace settings.</span><br><span class=\"line\"></span><br><span class=\"line\">[liaochenlanruo:49950] 4 more processes have sent <span class=\"built_in\">help</span> message help-mpi-btl-openib-cpc-base.txt / ibv_create_qp failed</span><br><span class=\"line\"></span><br><span class=\"line\">[liaochenlanruo:49950] Set MCA parameter <span class=\"string\">&quot;orte_base_help_aggregate&quot;</span> to 0 to see all <span class=\"built_in\">help</span> / error messages </span><br></pre></td></tr></table></figure>\n</br>\n\n<p>结果就是无法运行多线程，跑了一夜的程序没有任何动静，似乎是卡死了。</p>\n</br>\nGoogle到的解决方案，root用户下，终端运行如下命令：\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#echo 0 &gt; /proc/sys/kernel/yama/ptrace_scope</span></span><br></pre></td></tr></table></figure>\n\n</br>\n**提示：\"ptrace_scope\"文件中原来的值为“1”，改成“0”就可以了。**\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"OrthoFinder2—同源蛋白家族聚类","slug":"OrthoFinder2—同源蛋白家族聚类","date":"2019-03-20T02:42:16.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/OrthoFinder2—同源蛋白家族聚类.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png","content":"<p>寻找同源蛋白家族用的比较多的是Orthomcl，但是该软件多年前已经停止更新，且使用的时候需要安装和使用MySQL，操作起来比较繁琐。因此OrthoFinder应运而生，并且更新到版本2。后者不但可以寻找同源家族，并且可以构建基因家族进化树。</p>\n<span id=\"more\"></span>\n<ol>\n<li>OrthoFinder及依赖包的安装</li>\n</ol>\n<ul>\n<li>下载<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/davidemms/OrthoFinder/releases/download/v2.2.7/OrthoFinder-2.2.7.tar.gz</span><br></pre></td></tr></table></figure></li>\n<li>解压<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf OrthoFinder-2.2.7.tar.gz</span><br></pre></td></tr></table></figure></li>\n<li>安装（加入环境变量即可）<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/tools/OrthoFinder-2.2.7</span><br><span class=\"line\"></span><br><span class=\"line\">Esc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">shift</span> + ;</span><br><span class=\"line\"></span><br><span class=\"line\">wq!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n依赖包</li>\n</ul>\n<p>（1）<a href=\"url:https://github.com/bbuchfink/diamond/releases\">DIAMOND</a></p>\n<p>下载对应版本，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/bbuchfink/diamond/releases/download/v0.9.24/diamond-linux64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar xzf diamond-linux64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> diamond /usr/local/bin</span><br></pre></td></tr></table></figure>\n\n<p>没有root权限的可以把diamond所在目录加入环境变量。</p>\n<p>(2) <a href=\"url:https://github.com/soedinglab/MMseqs2/releases\">MMseqs2</a></p>\n<p>下载对应版本，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/soedinglab/MMseqs2/releases/download/7-4e23d/MMseqs2-Linux-AVX2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar xzf MMseqs2-Linux-AVX2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> mmseqs2/bin/mmseqs /usr/local/bin</span><br></pre></td></tr></table></figure>\n\n<p>(3) <a href=\"url:http://micans.org/mcl/\">MCL</a></p>\n<ul>\n<li><p>Ubuntu, Debian, Linux Mint安装方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install mcl</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Centos, Redhat安装方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://micans.org/mcl/src/mcl-latest.tar.gz</span><br><span class=\"line\">tar zxvf mcl-latest.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> mcl-14-137（视具体情况而定）</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make check</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p>(4) <a href=\"url:http://www.atgc-montpellier.fr/fastme/binaries.php\">FastME</a></p>\n</li>\n</ul>\n<p>下载二进制文件，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://www.atgc-montpellier.fr/download/sources/fastme/fastme-2.1.5.tar.gz</span><br><span class=\"line\">tar zxvf fastme-2.1.5.tar.gz</span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> fastme-2.1.5/binaries/fastme-2.1.5-linux64 /usr/local/bin/fastme</span><br></pre></td></tr></table></figure>\n<p>(5) 可选: <a href=\"url:ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/\">BLAST+</a></p>\n<ul>\n<li>Ubuntu, Debian, Linux Mint安装方法：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ncbi-blast+</span><br></pre></td></tr></table></figure></li>\n<li>Centos, Redhat安装方法：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.8.1+-x64-linux.tar.gz</span><br><span class=\"line\">tar zxvf ncbi-blast-2.8.1+-x64-linux.tar.gz</span><br><span class=\"line\">vim ~/.bashrc</span><br><span class=\"line\">i</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/tools/ncbi-blast-2.8.1+/bin</span><br><span class=\"line\">Esc</span><br><span class=\"line\"><span class=\"built_in\">shift</span> + ;</span><br><span class=\"line\">wq!</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"2\">\n<li>运行 OrthoFinder<br>(1) 运行示例数据：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> OrthoFinder-2.2.7</span><br><span class=\"line\">orthofinder -f ExampleData</span><br></pre></td></tr></table></figure>\n运行结果如下，会显示输出文件的路径，表明运行成功：</li>\n</ol>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"示例数据运行结果\"></p>\n<p>(2) 运行自己的数据：</p>\n<ul>\n<li>step1：数据准备</li>\n</ul>\n<p>下载氨基酸序列，要求为fasta格式，每个物种一个文件。将所有fasta文件存于一个目录中（如Data目录），如下图所示。文件名要简洁并有区分性，因为文件名会作为最终的物种ID。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder02.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder02.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"目录结构与文件准备\"></p>\n<ul>\n<li>step2：运行程序</li>\n</ul>\n<p>在Data目录的上一级目录打开终端，运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orthofinder -f Data -t 线程数</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>结果解读</li>\n</ol>\n<p>(1) Results Files: Orthogroups</p>\n<p>包含一个主文件“Orthogroups.csv”和两个支持文件：</p>\n<ul>\n<li><p>Orthogroups.csv，每一行为一个group，每一列为一个物种，行列交汇处为基因名称。</p>\n</li>\n<li><p>Orthogroups_UnassignedGenes.csv，包含所有未分配到任何group的基因名称。</p>\n</li>\n<li><p>Orthogroups.txt，OrthoMCL格式的输出结果，内容等同于Orthogroups.csv。</p>\n</li>\n</ul>\n<p>（2）Results Files: Orthogroup Statistics</p>\n<p>包含一些统计数据，可用于比较基因组分析、绘图以及质控。</p>\n<ul>\n<li><p>Statistics_Overall.csv和Statistics_PerSpecies.csv，提供基本的描述信息</p>\n</li>\n<li><p>Orthogroups_SpeciesOverlaps.csv，两两物种的group共享矩阵</p>\n</li>\n<li><p>Species-specific orthogroup：该group仅包含一个物种的基因。</p>\n</li>\n<li><p>G50：group中的基因数，使得50％的基因处于该大小或更大的group中。</p>\n</li>\n<li><p>O50：最小数量的group，使得50％的基因处于该大小或更大的group中。</p>\n</li>\n<li><p>Single-copy orthogroup：每个物种中只有一个基因的group（相当于单拷贝核心基因）。这些group是构建物种树和许多其他分析的理想选择。</p>\n</li>\n<li><p>Unassigned gene：未与任何其他基因划分到一个group的基因。</p>\n</li>\n</ul>\n<p>(3) Results Files: Orthologues</p>\n<p>两两物种间的直系同源基因，每一行为一个group，第一列为group编号，第二列为第一个物种的基因，第三列为第二个物种的基因。同一物种的基因名以“,”分割。直向同源物可以是一对一，一对多或多对多。</p>\n<p>(4) Results Files: Gene Trees and Species Tree</p>\n<p>每个group的基因树和定根的物种树以newick格式输出，可以用各种看树软件展示，如MEGA、iTOL、Dendroscope和FigTree等，个人推荐用iTOL。</p>\n<ol start=\"4\">\n<li>高级用法</li>\n</ol>\n<p>（1）添加新物种到之前的分析<br>（previous_orthofinder_directory指的是包含“SpeciesIDs.txt”的目录）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orthofinder -b previous_orthofinder_directory -f new_fasta_directory</span><br></pre></td></tr></table></figure>\n<p>（2）从之前的分析中移除物种</p>\n<p>从输出目录下找到工作目录“WorkingDirectory”中的“SpeciesIDs.txt”文件，在要移除的物种那一行最前面加上一个“#”并保存，然后运行（previous_orthofinder_directory指的是包含“SpeciesIDs.txt”的目录）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orthofinder -b previous_orthofinder_directory</span><br></pre></td></tr></table></figure>\n<p>（3）同时添加和删除物种</p>\n<p>编辑好“SpeciesIDs.txt”后，运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">orthofinder -b previous_orthofinder_directory -f new_fasta_directory</span><br></pre></td></tr></table></figure>\n<p>（4）更多高级功能请阅读官方文档<br>主要包括“Inferring MSA Gene Trees”、并行计算、单独运行BLAST、使用预先计算的BLAST结果以及回归检测。</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"同源家族","path":"api/tags/同源家族.json"}]},{"title":"为PubMed添加功能","slug":"为PubMed添加功能","date":"2019-03-18T03:29:24.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/为PubMed添加功能.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png","content":"<p>对于搞科研的小伙伴们来说，PubMed是一个必不可少的文献查阅数据库，然而输入关键字后，出来的文章少则几十篇，多则上百篇。而这些文章的质量却参差不齐，那么如何高效的选择高水平的文章来下载和阅读呢？</br></p>\n<span id=\"more\"></span>\n<p>首先上图，看一下我的PubMed界面：</br><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"PubMed\"><br></br>从图片中可以看出，文章的影响因子、分区一目了然，甚至提供了全文下载链接，解决了学校图书馆未购买杂志数据库而需付费下载的烦恼。该效果是通过两个谷歌浏览器插件实现的，分别是<a href=\"https://www.novoprolabs.com/support/articles/pubmedy-a-chrome-extension-for-ncbi-201712191285.html\">PubMedy</a>和<a href=\"https://www.scholarscope.cn/\">Scholarscope</a>。前者可以展示影响因子、参考文献格式，并提供全文下载链接；后者可以展示期刊影响因子、领域排名、引用次数及中科院分区。<br></br>这两个插件都可以在谷歌商店中下载，墙内的小伙伴需要想办法科学上网，这里推荐另一款插件——“<a href=\"https://www.skyzip.de/\">skyZIP™ Proxy</a>”。<br></br>插件可以自行搜索下载，也可以加入QQ群（945751012）下载。</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"PubMed","path":"api/tags/PubMed.json"}]},{"title":"Hexo博客导航栏menu无法跳转https","slug":"Hexo博客导航栏menu无法跳转https","date":"2019-03-05T04:08:12.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Hexo博客导航栏menu无法跳转https.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>Hexo博客部署到github&#x2F;coding后，点击菜单栏menu跳转至http而非https，提示找不到页面。</p>\n<span id=\"more\"></span>\n<p>解决方案：</p>\n<p>修改主题配置文件“_config.yml”，在每一个menu的路径后面（url那一行）加一条正斜线，重新部署即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># index</span></span><br><span class=\"line\"></span><br><span class=\"line\">  - title: 首页</span><br><span class=\"line\"></span><br><span class=\"line\">    icon: home</span><br><span class=\"line\"></span><br><span class=\"line\">    url: /</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># archives</span></span><br><span class=\"line\"></span><br><span class=\"line\">  - title: 归档</span><br><span class=\"line\"></span><br><span class=\"line\">    icon: archive</span><br><span class=\"line\"></span><br><span class=\"line\">    url: archives/</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># categories</span></span><br><span class=\"line\"></span><br><span class=\"line\">  - title: 分类</span><br><span class=\"line\"></span><br><span class=\"line\">    icon: list</span><br><span class=\"line\"></span><br><span class=\"line\">    url: categories/</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># tags</span></span><br><span class=\"line\"></span><br><span class=\"line\">  - title: 标签</span><br><span class=\"line\"></span><br><span class=\"line\">    icon: tags</span><br><span class=\"line\"></span><br><span class=\"line\">    url: tags/</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># about</span></span><br><span class=\"line\"></span><br><span class=\"line\">  - title: 关于我</span><br><span class=\"line\"></span><br><span class=\"line\">    icon: user</span><br><span class=\"line\"></span><br><span class=\"line\">    url: /about/</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># archives</span></span><br><span class=\"line\"></span><br><span class=\"line\">  - title: 留言板</span><br><span class=\"line\"></span><br><span class=\"line\">    icon: comments</span><br><span class=\"line\"></span><br><span class=\"line\">    url: Message/</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"网站建设","path":"api/categories/网站建设.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"}]},{"title":"windows 10 中文乱码解决方案","slug":"windows-10-中文乱码解决方案","date":"2019-03-01T13:53:01.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/windows-10-中文乱码解决方案.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_1.png","content":"<p>安装的英文原版系统，导致多数中文乱码，即便是安装了中文语言包，如果设置错误，仍旧无法正确显示中文。</p>\n<span id=\"more\"></span>\n<p>进入正题，按如图所示一步步完成设置，重启系统便可解决问题。我的系统是18845.1001版本，其他版本应该不会差别太大。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过开始菜单进入控制面板\"></p>\n<center>通过开始菜单进入控制面板</center>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"日期、时间和区域格式设置\"></p>\n<center>日期、时间和区域格式设置</center>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下拉相关设置\"></p>\n<center>下拉相关设置</center>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"选择区域\"></p>\n<center>选择区域</center>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_5.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_5.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"管理-更改系统区域设置\"></p>\n<center>管理-更改系统区域设置</center>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_6.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_6.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"设置为中文，不要选择Beta版\"></p>\n<center>设置为中文，不要选择Beta版</center>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_7.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_7.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"复制设置\"></p>\n<center>复制设置</center>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"系统","path":"api/tags/系统.json"}]},{"title":"R语言自定义坐标轴排序","slug":"R语言自定义坐标轴排序","date":"2019-02-22T08:57:21.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/R语言自定义坐标轴排序.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>R语言作图时，默认情况下软件会按照自己的方式对坐标轴的项目进行排序，然而这种排序往往不是我们所希望的，因此需要想办法让坐标轴的项目按照我们希望的顺序输出。</p>\n<span id=\"more\"></span>\n\n<p>如下所示，我有两列数据，要绘制箱线图，以第一列为Y轴，第二列为X轴，希望X轴的输出顺序按照第二列由上到下排列。</br></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">size    <span class=\"built_in\">type</span></span><br><span class=\"line\">6.612309456    T-8</span><br><span class=\"line\">5.878857613    T-10</span><br><span class=\"line\">6.724282265    T-15</span><br><span class=\"line\">5.68136692    T-56</span><br><span class=\"line\">5.863334656    T-1723</span><br></pre></td></tr></table></figure>\n\n<p></br>然而软件输出的顺序如下：</br></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T-10    T-15    T-1723    T-56    T-8</span><br></pre></td></tr></table></figure>\n\n<p>解决方案：</br></p>\n<p>通过一个因子事先自定义X轴顺序，作图命令如下：</br></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#读入数据</span></span><br><span class=\"line\">gsize &lt;- read.delim(<span class=\"string\">&quot;gsize.txt&quot;</span>, header=TRUE, sep=<span class=\"string\">&quot;\\t&quot;</span>, stringsAsFactors=FALSE)</span><br><span class=\"line\"><span class=\"comment\">#自定义X轴顺序</span></span><br><span class=\"line\">x1 = <span class=\"built_in\">factor</span>(gsize<span class=\"variable\">$type</span>, levels=c(<span class=\"string\">&quot;T-8&quot;</span>,<span class=\"string\">&quot;T-10&quot;</span>,<span class=\"string\">&quot;T-15&quot;</span>,<span class=\"string\">&quot;T-56&quot;</span>,<span class=\"string\">&quot;T-1723&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\">#用x1代替gsize$type绘图</span></span><br><span class=\"line\">boxplot(size~x1, data=gsize, xlab=<span class=\"string\">&quot;Sequence Type&quot;</span>, ylab=<span class=\"string\">&quot;Genome Size&quot;</span>, varwidth=TRUE, notch=FALSE)</span><br></pre></td></tr></table></figure>\n<p></br>至此，X轴各项目会按照我们自定义的顺序排列。</p>\n","raw":null,"categories":[{"name":"可视化","path":"api/categories/可视化.json"}],"tags":[{"name":"R语言","path":"api/tags/R语言.json"},{"name":"绘图","path":"api/tags/绘图.json"}]},{"title":"获取下一版本的内部预览版windows系统","slug":"获取下一个版本的内部预览版windows系统","date":"2019-02-17T11:19:04.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/获取下一个版本的内部预览版windows系统.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user.png","content":"<p>Windows内部预览版系统快速通道已经关闭，但是可以通过修改注册表以获取下一个版本的Windows。</p>\n<span id=\"more\"></span>\n\n<ol>\n<li><p>首先，您必须已经是Windows Insider才能利用这一技巧。 如果您是Windows Insider，点击“设置”→“更新和安全”→“Windows预览体验计划”，将“你希望接收哪类内容”一项设置为“跳到下一个Windows版本”。注意：调整完该选项时请保持窗口不动，即不要关闭也不要切换其他面板；</p>\n</li>\n<li><p>启动注册表编辑器（点击开始菜单左下角搜索框，输入“regedit”进入注册表编辑器）， 找到：</p>\n</li>\n</ol>\n<p>HKEY_LOCAL_MACHINE\\SOFTWARE \\Microsoft\\WindowsSelfHost\\UI\\Selection</p>\n<p>双击“UIContentType”并将其更改为“Skip”。 然后，您应该找到“UIRing”并将其更改为“WIF”。</p>\n<ol start=\"3\">\n<li>然后找到：</li>\n</ol>\n<p>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WindowsSelfHost\\Applicability</p>\n<p>将“Ring”的值改为“WIF”，“Content Type”和ContentBackup的值更改为“Skip”。</p>\n<ol start=\"4\">\n<li><p>退回“Windows预览体验计划”面板，随便点击一个标签再切换回来，如果打开后依旧固定在“跳到下一个Windows版本”选项，即代表上车成功！<br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Skip用户\"></p>\n<center>Skip用户</center>\n\n</li>\n<li><p>点击“Windows更新”→“检查更新”，获取新版本系统<br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Skip用户的更新界面\"></p>\n<center>Skip用户的更新界面</center></li>\n</ol>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"系统","path":"api/tags/系统.json"}]},{"title":"用wget批量下载含有链接的文件/目录","slug":"用wget批量下载含有链接的文件-目录","date":"2019-01-31T11:58:40.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/用wget批量下载含有链接的文件-目录.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文讲述了如何利用Linux下载工具wget根据链接批量下载文件或者目录。</p>\n<span id=\"more\"></span>\n\n<p>wget 为Linux自带的下载工具，windows下也可以安装</p>\n<p><strong>一：windows下安装wget：</strong></p>\n<ol>\n<li>安装Chocolatey<br>方案A：以管理员身份运行cmd.exe<br>输入：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"string\">&quot;%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe&quot;</span> -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command <span class=\"string\">&quot;iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))&quot;</span> &amp;&amp; SET <span class=\"string\">&quot;PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin&quot;</span></span><br></pre></td></tr></table></figure>\n<p>回车等待安装完成。</p>\n<p>方案B：PowerShell用户输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))</span><br></pre></td></tr></table></figure>\n<p>测试是否安装成功，在命令行中输入“choco”看到help信息表明安装成功。</p>\n<ol start=\"2\">\n<li>安装wget</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">choco install wget</span><br></pre></td></tr></table></figure>\n<p>升级wget</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">choco upgrade wget</span><br></pre></td></tr></table></figure>\n\n<p><strong>二、用wget下载数据</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -r -c -nH -nc --cut-dirs=3 -i file_contain_url_lists </span><br></pre></td></tr></table></figure>\n\n<p>-i file_contain_url_lists：含有文件&#x2F;目录链接的文件，每个链接一行</p>\n<p>-nc：不覆盖已下载的文件</p>\n<p>-c：断点续传</p>\n<p>–cut-dirs&#x3D;3：忽略 NUMBER层远程目录</p>\n<p>-nH：不创建主机目录</p>\n<p>-r：递归下载</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"下载","path":"api/tags/下载.json"}]},{"title":"kSNP3寻找SNPs并构建进化树","slug":"kSNP3寻找SNPs并构建进化树","date":"2018-12-14T06:17:23.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/kSNP3寻找SNPs并构建进化树.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>kSNP3可以利用reads、draft genomes或complete genomes寻找SNPs，并构建进化树。操作比较简单，小白比较容易上手。</p>\n<span id=\"more\"></span>\n\n<p><strong>1. kSNP3 安装</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/tools</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://sourceforge.net/projects/ksnp/files/kSNP3.1_Linux_package.zip</span><br><span class=\"line\"></span><br><span class=\"line\">unzip kSNP3.1_Linux_package.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#加入环境变量：</span></span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/tools/kSNP3.1_Linux_package/kSNP3</span><br><span class=\"line\"></span><br><span class=\"line\">ESC</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">shift</span> + ：</span><br><span class=\"line\"></span><br><span class=\"line\">wq!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p>编辑主程序kSNP3的第8行：</p>\n<p>将 set kSNP&#x3D;&#x2F;usr&#x2F;local&#x2F;kSNP3</p>\n<p>改为：set kSNP&#x3D;&#x2F;home&#x2F;lhl&#x2F;tools&#x2F;kSNP3.1_Linux_package&#x2F;kSNP3</p>\n<p>注：根据自己的路径进行修改</p>\n<p><strong>2. 基本用法</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将所有的基因组文件放于988_ksnp目录之中，在其上一级目录下运行命令创建输入列表：</span></span><br><span class=\"line\"></span><br><span class=\"line\">MakeKSNP3infile 988_ksnp inlist A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#运行命令创建输入序列集合：</span></span><br><span class=\"line\"></span><br><span class=\"line\">MakeFasta inlist fastainput_988</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#计算最佳K值：</span></span><br><span class=\"line\"></span><br><span class=\"line\">Kchooser fastainput_988</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#寻找SNPs并构建进化树：</span></span><br><span class=\"line\"></span><br><span class=\"line\">kSNP3 -<span class=\"keyword\">in</span> inlist -outdir SNPs_20181214 -k 23 -ML -NJ -vcf  -CPU 30 -core -min_frac 0.5 |<span class=\"built_in\">tee</span> Log_988_20181214.txt</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"SNPs","path":"api/tags/SNPs.json"},{"name":"进化","path":"api/tags/进化.json"}]},{"title":"根据基因组预测表型 —— traitar的安装与使用","slug":"根据基因组预测表型-traitar的安装与使用","date":"2018-12-13T12:22:16.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/根据基因组预测表型-traitar的安装与使用.json","excerpt":null,"keywords":null,"cover":"https://upload-images.jianshu.io/upload_images/11790868-82b7bc9d8c442804.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","content":"<p>Traitar 用于从基因组序列中提取表型，它提供了表型分类器，可以预测与碳和能源使用、氧气需求、形态学、抗生素易感性、蛋白水解和酶活性等有关的67个性状。</p>\n<span id=\"more\"></span>\n\n<p>1. 软件安装——<a href=\"https://github.com/hzi-bifo/traitar\" target=\"_blank\">traitar</a></p><p>安装基本依赖：</p><blockquote><p>sudo apt-get install python-scipy python-matplotlib python-pip python-pandas</p></blockquote><p>进入要安装软件的目录，我的为家目录下的tools：</p><blockquote><p>cd ~/tools</p></blockquote><p>=======================================================</p><p>安装主程序到家目录下</p><blockquote><p>pip install traitar --user</p></blockquote><p>将添加到环境变量中：</p><blockquote>\n<p>vim ~/.zshrc</p>\n<p>i</p>\n</blockquote><p>文档末尾添加：</p><p>PATH=$PATH:$HOME/.local/bin/</p><p>ESC</p><blockquote><p>shift + :</p></blockquote><blockquote><p>wq!</p></blockquote><blockquote><p>source ~/.zshrc</p></blockquote><p>安装依赖软件（parallel， prodigal， hmmer）</p><blockquote><p>sudo apt-get install parallel prodigal hmmer</p></blockquote><p>下载pfam数据库到家目录下并建库</p><blockquote><p>traitar pfam ~/</p></blockquote><p>也可以手动下载pfam数据库（如果上一条不出错可以不运行后面的几条命令）：</p><blockquote><p>cd ~/</p></blockquote><p>官方提供的为Pfam27.0，我下载的为最新的Pfam32.0（下面两个命令选一个运行即可）：</p><blockquote><p>wget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam27.0/Pfam-A.hmm.gz</p></blockquote><blockquote><p>wget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam32.0/Pfam-A.hmm.gz</p></blockquote><p>将Pfam-A.hmm.gz解压缩，然后运行下面的命令建库：</p><blockquote><p>traitar pfam --local ~/</p></blockquote><p>软件运行出错的话：</p><p>错误提示：ImportError: C extension: numpy.core.multiarray failed to import not built. If you want to import pandas from the source directory, you may need to run 'python setup.py build_ext --inplace --force' to build the C extensions first.</p><p>运行：</p><blockquote><p>conda install -c conda-forge numpy</p></blockquote><p>错误提示：AttributeError: 'DataFrame' object has no attribute 'sort'</p><p>pandas降级：</p><blockquote><p>conda install pandas=0.19.2</p></blockquote><p>错误提示：Python的最大递归深度错误 “maximum recursion depth exceeded while calling a Python object”</p><p>编辑脚本（~/miniconda3/lib/python2.7/site-packages/scipy/cluster/hierarchy.py），第183行加入两行，将默认的1000改大，比如2000（因为我有1000多个基因组）</p><blockquote><p>import sys</p></blockquote><p>#print sys.getrecursionlimit()</p><blockquote><p>sys.setrecursionlimit(2000)</p></blockquote><p>错误提示：RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility</p><blockquote>\n<p>pip uninstall -y scipy scikit-learn</p>\n<p>pip install --no-binary scipy scikit-learn</p>\n</blockquote><hr><p>2. 软件使用</p><p>首先进入含有基因组文件目录的上一级目录，输入命令执行：</p><blockquote><p>traitar phenotype &lt;in dir&gt; &lt;sample file&gt; from_nucleotides &lt;out_dir&gt; -c 2</p></blockquote><p>&lt;in dir&gt;：包含基因组的输入目录</p><p>&lt;sample file&gt;：描述文件，置于&lt;in dir&gt;的父目录下。共3列，第一列为基因组文件的全名（包含文件扩展名），第二列为菌株名称（一般为第一列去掉扩展名，可随意更改），第三列为分组信息（可以将所有的菌株划分到不同的组别）。三列之间以制表符分隔。三列的抬头为“sample_file_name      sample_name       category”，如下面文本框所示：</p><blockquote>\n<p>sample_file_name\tsample_name\tcategory</p>\n<p>1457190.3.RefSeq.faa\tListeria_ivanovii_WSLC3009\tenvironment_1</p>\n<p>525367.9.RefSeq.faa\tListeria_grayi_DSM_20601\tenvironment_2</p>\n</blockquote><p>&lt;out_dir&gt;：结果输出目录</p><p>-c 2：使用两个线程运行，提高预测速度</p><p><br></p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-82b7bc9d8c442804.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-82b7bc9d8c442804.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">文件存放示意图</div>\n</div><p>我的命令（在phenotype目录下，使用4个线程运行）：</p><blockquote><p>traitar phenotype scaffolds samplefile.txt from_nucleotides output -c 4</p></blockquote><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-132fcd1bdd4eb6ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-132fcd1bdd4eb6ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\"><a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5192078/pdf/mSystems.00101-16.pdf\" target=\"_blank\">软件工作流程</a></div>\n</div><p><br></p><hr><h2>输出效果图：<br>\n</h2><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-9aee151bc9b10869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-9aee151bc9b10869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">输出效果图_combined</div>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-e1661fe61c8e5783.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-e1661fe61c8e5783.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">输出效果图_phypat</div>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"https://upload-images.jianshu.io/upload_images/11790868-7793acf090cb7d72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"https://upload-images.jianshu.io/upload_images/11790868-7793acf090cb7d72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">输出效果图_phypat+PGL</div>\n</div><p><br></p><hr><p>引用 Traitar</p><p>If you use Traitar in your research, please cite our paper:</p><p><b>From genomes to phenotypes: Traitar, the microbial trait analyzer</b></p><p>Aaron Weimann, Kyra Mooren, Jeremy Frank, Phillip B Pope, Andreas Bremges, Alice C McHardy</p><p><i>mSystem</i> (2016) doi:<a href=\"http://dx.doi.org/10.1128/mSystems.00101-16\" target=\"_blank\">10.1101/043315</a></p><p><br></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"表型预测","path":"api/tags/表型预测.json"}]}]}