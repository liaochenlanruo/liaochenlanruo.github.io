{"total":128,"pageSize":10,"pageCount":13,"data":[{"title":"宏基因组分析流程及代码","slug":"宏基因组分析流程及代码","date":"2021-01-19T07:24:28.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/宏基因组分析流程及代码.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文阐述宏基因组物种分类、组装、bining、基因预测及注释……</p>\n<span id=\"more\"></span>\n\n<h1 id=\"A、软件列表及安装\"><a href=\"#A、软件列表及安装\" class=\"headerlink\" title=\"A、软件列表及安装\"></a>A、软件列表及安装</h1><h2 id=\"A-1-分类相关\"><a href=\"#A-1-分类相关\" class=\"headerlink\" title=\"A.1 分类相关\"></a>A.1 分类相关</h2><h3 id=\"A-1-1-metaphlan-3-0\"><a href=\"#A-1-1-metaphlan-3-0\" class=\"headerlink\" title=\"A.1.1 metaphlan 3.0\"></a>A.1.1 metaphlan 3.0</h3><p>MetaPhlAn is a tool for profiling the composition of microbial communities from metagenomic shotgun sequencing data.</p>\n<h4 id=\"a-安装主文件\"><a href=\"#a-安装主文件\" class=\"headerlink\" title=\"a. 安装主文件\"></a>a. 安装主文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n metaphlan python=3.7 metaphlan</span><br><span class=\"line\">$ conda activate metaphlan</span><br></pre></td></tr></table></figure>\n<h4 id=\"b-安装数据库\"><a href=\"#b-安装数据库\" class=\"headerlink\" title=\"b. 安装数据库\"></a>b. 安装数据库</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metaphlan --install</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"c-安装依赖包\"><a href=\"#c-安装依赖包\" class=\"headerlink\" title=\"c. 安装依赖包\"></a>c. 安装依赖包</h4><ul>\n<li>hclust<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install -c bioconda hclust2</span><br></pre></td></tr></table></figure></li>\n<li>R, vegan, ape <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install r-base r-vegan r-ape</span><br></pre></td></tr></table></figure></li>\n<li>rbiom<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ R</span><br><span class=\"line\">$ install.packages(<span class=\"string\">&quot;rbiom&quot;</span>)</span><br><span class=\"line\">$ quit()</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"A-1-2-gtdbtk\"><a href=\"#A-1-2-gtdbtk\" class=\"headerlink\" title=\"A.1.2 gtdbtk\"></a>A.1.2 <a href=\"https://ecogenomics.github.io/GTDBTk/\">gtdbtk</a></h3><h4 id=\"a-Hardware-requirements\"><a href=\"#a-Hardware-requirements\" class=\"headerlink\" title=\"a. Hardware requirements\"></a>a. Hardware requirements</h4><table>\n<thead>\n<tr>\n<th>Domain</th>\n<th>Memory</th>\n<th>Storage</th>\n<th>Time</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Archaea</td>\n<td>~8 GB</td>\n<td>~27 GB</td>\n<td>~1 hour &#x2F; 1,000 genomes @ 64 CPUs</td>\n</tr>\n<tr>\n<td>Bacteria</td>\n<td>~150 GB</td>\n<td>~27 GB</td>\n<td>~1 hour &#x2F; 1,000 genomes @ 64 CPUs</td>\n</tr>\n</tbody></table>\n<h4 id=\"b-Install-GTDB-Tk-with-conda\"><a href=\"#b-Install-GTDB-Tk-with-conda\" class=\"headerlink\" title=\"b. Install GTDB-Tk with conda\"></a>b. Install GTDB-Tk with conda</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"c-GTDB-Tk-reference-data\"><a href=\"#c-GTDB-Tk-reference-data\" class=\"headerlink\" title=\"c. GTDB-Tk reference data\"></a>c. GTDB-Tk reference data</h4><ul>\n<li><strong>Note that different versions of the GTDB release data may not run on all versions of GTDB-Tk, below are all supported versions:</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>GTDB Release</th>\n<th>Minimum version</th>\n<th>Maximum version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>R95</td>\n<td>1.3.0</td>\n<td>N&#x2F;A</td>\n</tr>\n<tr>\n<td>R89</td>\n<td>0.3.0</td>\n<td>0.1.2</td>\n</tr>\n<tr>\n<td>R86.2</td>\n<td>0.2.1</td>\n<td>0.2.2</td>\n</tr>\n<tr>\n<td>R86</td>\n<td>0.1.0</td>\n<td>0.1.6</td>\n</tr>\n<tr>\n<td>R83</td>\n<td>0.0.6</td>\n<td>0.0.7</td>\n</tr>\n</tbody></table>\n<ul>\n<li>Download the reference data</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://data.ace.uq.edu.au/public/gtdb/data/releases/release95/95.0/auxillary_files/gtdbtk_r95_data.tar.gz</span><br><span class=\"line\">  </span><br><span class=\"line\">$ tar xvzf gtdbtk_r95_data.tar.gz</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：GTDB-Tk requires an environment variable named GTDBTK_DATA_PATH to be set to the directory containing the unarchived GTDB-Tk reference data.</p>\n<ul>\n<li>You can automatically alias GTDBTK_DATA_PATH whenever the environment is activated by editing {gtdbtk environment path}&#x2F;etc&#x2F;conda&#x2F;activate.d&#x2F;gtdbtk.sh, e.g.:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Determine the GTDB-Tk environment path</span></span><br><span class=\"line\">$ conda activate gtdbtk</span><br><span class=\"line\">$ <span class=\"built_in\">which</span> gtdbtk</span><br><span class=\"line\"><span class=\"comment\"># /miniconda3/envs/gtdbtk-1.3.0/bin/gtdbtk</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Edit the activate file</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;export GTDBTK_DATA_PATH=/path/to/release/package/&quot;</span> &gt; /miniconda3/envs/gtdbtk-1.3.0/etc/conda/activate.d/gtdbtk.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"A-1-3-Kraken2\"><a href=\"#A-1-3-Kraken2\" class=\"headerlink\" title=\"A.1.3 Kraken2\"></a>A.1.3 <a href=\"https://github.com/DerrickWood/kraken2\">Kraken2</a></h3><h4 id=\"a-Hardware-requirements-1\"><a href=\"#a-Hardware-requirements-1\" class=\"headerlink\" title=\"a. Hardware requirements\"></a>a. Hardware requirements</h4><ul>\n<li>Disk space: Construction of a Kraken 2 standard database requires approximately 100 GB of disk space. A test on 01 Jan 2018 of the default installation showed 42 GB of disk space was used to store the genomic library files, 26 GB was used to store the taxonomy information from NCBI, and 29 GB was used to store the Kraken 2 compact hash table.</li>\n<li>Memory: To run efficiently, Kraken 2 requires enough free memory to hold the database (primarily the hash table) in RAM. While this can be accomplished with a ramdisk, Kraken 2 will by default load the database into process-local RAM; the –memory-mapping switch to kraken2 will avoid doing so. The default database size is 29 GB (as of Jan. 2018), and you will need slightly more than that in RAM if you want to build the default database.</li>\n</ul>\n<h4 id=\"b-Install-Kraken2-with-conda\"><a href=\"#b-Install-Kraken2-with-conda\" class=\"headerlink\" title=\"b. Install Kraken2 with conda\"></a>b. Install Kraken2 with conda</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n kraken2 kraken2</span><br></pre></td></tr></table></figure>\n<h4 id=\"c-Build-the-database\"><a href=\"#c-Build-the-database\" class=\"headerlink\" title=\"c. Build the database\"></a>c. Build the database</h4><ul>\n<li>下载数据库。找到一个存储空间比较大的目录并进入，运行如下命令，这里下载的数据库包括archaea，bacteria，plasmid，viral，fungi，protozoa，UniVec和UniVec_Core：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> bash -c <span class=\"string\">&#x27;for i in archaea bacteria plasmid viral fungi protozoa UniVec UniVec_Core; do kraken2-build --download-library $i --threads 24 --db db_name; done&#x27;</span> &amp;</span><br></pre></td></tr></table></figure></li>\n<li>下载分类信息<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> kraken2-build --download-taxonomy --threads 24 --db db_name &amp;</span><br></pre></td></tr></table></figure></li>\n<li>建立索引<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> kraken2-build --build --threads 24 --db db_name &amp;</span><br></pre></td></tr></table></figure>\n<h4 id=\"d-序列分类\"><a href=\"#d-序列分类\" class=\"headerlink\" title=\"d. 序列分类\"></a>d. 序列分类</h4></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kraken2 --paired --threads 24 --unclassified-out unclassified<span class=\"comment\">#.fq --classified-out classified#.fq --output outfile --confidence 0.5 --memory-mapping --use-names --report reportname --report-zero-counts --db $DBNAME reads1 read2</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"A-2-组装、Bining、质量评估\"><a href=\"#A-2-组装、Bining、质量评估\" class=\"headerlink\" title=\"A.2 组装、Bining、质量评估\"></a>A.2 组装、Bining、质量评估</h2><h3 id=\"A-2-1-metawrap\"><a href=\"#A-2-1-metawrap\" class=\"headerlink\" title=\"A.2.1 metawrap\"></a>A.2.1 metawrap</h3><p>MetaWRAP is a pipeline for genome-resolved metagenomic data analysis.</p>\n<h4 id=\"a-安装主文件-1\"><a href=\"#a-安装主文件-1\" class=\"headerlink\" title=\"a. 安装主文件\"></a>a. 安装主文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n metawrap python=2.7 metaphlan</span><br></pre></td></tr></table></figure>\n<h4 id=\"b-安装其他分析工具到metawrap环境中\"><a href=\"#b-安装其他分析工具到metawrap环境中\" class=\"headerlink\" title=\"b. 安装其他分析工具到metawrap环境中\"></a>b. 安装其他分析工具到metawrap环境中</h4><ul>\n<li><strong>cd-hit</strong></li>\n<li><strong>coverm</strong> DNA read coverage and relative abundance calculator focused on metagenomics applications</li>\n<li><strong>bamm</strong> Metagenomics-focused BAM file manipulation</li>\n<li><strong>unitem</strong> Ensemble binning strategies for combining the output of multiple binning methods</li>\n<li><strong>humann2</strong> The HMP Unified Metabolic Analysis Network 2</li>\n<li><strong><a href=\"https://github.com/biobakery/biobakery/wiki/GraPhlAn\">graphlan</a></strong> </li>\n<li><strong><a href=\"https://pypi.org/project/export2graphlan/\">export2graphlan</a></strong> </li>\n<li><strong><a href=\"https://data.ace.uq.edu.au/public/CheckM_databases/\">checkm database</a></strong><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activeta metawrap</span><br><span class=\"line\">$ conda install cd-hit coverm bamm unitem humann2 graphlan export2graphlan</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 找到一个合适的目录并cd进入以便存储checkm数据库</span></span><br><span class=\"line\">$ wget https://data.ace.uq.edu.au/public/CheckM_databases/checkm_data_2015_01_16.tar.gz</span><br><span class=\"line\">$ tar zxvf checkm_data_2015_01_16.tar.gz</span><br><span class=\"line\">$ checkm data setRoot</span><br><span class=\"line\"><span class=\"comment\"># 随后输入数据库所在的full path</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"A-3-非冗余基因功能注释\"><a href=\"#A-3-非冗余基因功能注释\" class=\"headerlink\" title=\"A.3 非冗余基因功能注释\"></a>A.3 非冗余基因功能注释</h2><h3 id=\"A-3-1-eggNOG-mapper\"><a href=\"#A-3-1-eggNOG-mapper\" class=\"headerlink\" title=\"A.3.1 eggNOG-mapper\"></a>A.3.1 eggNOG-mapper</h3><p>功能注释，uniref, eggNOG, KEGG, GO; CAZy; VFDB; CARD; TCDB; PHI。</p>\n<h3 id=\"A-3-2-EnrichM\"><a href=\"#A-3-2-EnrichM\" class=\"headerlink\" title=\"A.3.2 EnrichM\"></a>A.3.2 EnrichM</h3><p><a href=\"https://github.com/geronimp/enrichM\">EnrichM</a> is a set of comparative genomics tools for large sets of metagenome assembled genomes (MAGs). The current functionality includes:</p>\n<ul>\n<li>A basic annotation pipeline for MAGs.</li>\n<li>A pipeline to determine the metabolic pathways that are encoded by MAGs, using KEGG modules as a reference (although custom pathways can be specified)</li>\n<li>A pipeline to identify genes or metabolic pathways that are enriched within and between user-defined groups of genomes (groups can be genomes that are related functionally, phylogenetically, recovered from different environments, etc).</li>\n<li>To construct metabolic networks from annotated population genomes.</li>\n<li>Construct random forest machine learning models from the functional composition of either MAGs, metagenomes or transcriptomes.</li>\n<li>Apply these random forest machine learning models to classify new MAGs metagenomes.</li>\n</ul>\n<h4 id=\"a-安装主文件-2\"><a href=\"#a-安装主文件-2\" class=\"headerlink\" title=\"a. 安装主文件\"></a>a. 安装主文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda create -n enrichm python=3</span><br><span class=\"line\">$ conda install enrichm</span><br></pre></td></tr></table></figure>\n<h4 id=\"b-安装数据库-1\"><a href=\"#b-安装数据库-1\" class=\"headerlink\" title=\"b. 安装数据库\"></a>b. 安装数据库</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 约5.7 G</span></span><br><span class=\"line\">$ enrichm data</span><br></pre></td></tr></table></figure>\n<p><strong>报错</strong> ：</p>\n<blockquote>\n<p>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;data.py”, line 114, in do<br>    version_remote &#x3D; urllib.request.urlopen(self.ftp + self.VERSION).readline().strip().decode(“utf-8”)<br>AttributeError: module ‘urllib’ has no attribute ‘request’</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;bin&#x2F;enrichm”, line 342, in &lt;module&gt;<br>    run.run_enrichm(args, sys.argv)<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;run.py”, line 288, in run_enrichm<br>    d.do(args.uninstall, args.dry)<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;data.py”, line 117, in do<br>    “Unable to find most current EnrichM database VERSION in ftp. Please complain at <a href=\"https://github.com/geronimp/enrichM\">https://github.com/geronimp/enrichM</a>“)<br>Exception: Unable to find most current EnrichM database VERSION in ftp. Please complain at <a href=\"https://github.com/geronimp/enrichM\">https://github.com/geronimp/enrichM</a></p>\n</blockquote>\n<p><strong>解决方案：将data.py中的’import urllib’替换为’import urllib.request’</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /home/hualin/miniconda3/envs/enrichm/lib/python3.6/site-packages/enrichm/data.py</span><br></pre></td></tr></table></figure>\n<h4 id=\"c-Sepcifying-the-location-of-the-EnrichM-database\"><a href=\"#c-Sepcifying-the-location-of-the-EnrichM-database\" class=\"headerlink\" title=\"c. Sepcifying the location of the EnrichM database\"></a>c. Sepcifying the location of the EnrichM database</h4><p>If you would like to store the EnrichM database outside of your home directory, move you need to tell EnrichM where to look. To do this, export a BASH variable named “ENRICHM_DB”:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">export</span> ENRICHM_DB=/path/to/database/ &gt;&gt;~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong> ：&#x2F;path&#x2F;to&#x2F;database&#x2F;根据实际情况而定！<br><strong>报错</strong>：</p>\n<blockquote>\n<p>$ enrichm<br>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;bin&#x2F;enrichm”, line 38, in &lt;module&gt;<br>    from enrichm.run import Run<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;run.py”, line 24, in &lt;module&gt;<br>    from enrichm.network_analyzer import NetworkAnalyser<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;network_analyzer.py”, line 22, in &lt;module&gt;<br>    from enrichm.network_builder import NetworkBuilder<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;network_builder.py”, line 24, in &lt;module&gt;<br>    from enrichm.databases import Databases<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;databases.py”, line 28, in &lt;module&gt;<br>    class Databases:<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;databases.py”, line 36, in Databases<br>    PICKLE_VERSION &#x3D; open(os.path.join(CUR_DATABASE_DIR, ‘VERSION’)).readline().strip()<br>FileNotFoundError: [Errno 2] No such file or directory: ‘&#x2F;new_data&#x2F;hualin&#x2F;db&#x2F;enrichm_database_v10&#x2F;26-11-2018&#x2F;VERSION’</p>\n</blockquote>\n<p><strong>Solve</strong>: 将下载的数据库文件全部复制一份到“<strong>26-11-2018</strong>”目录中，否则后续运行annotaton时会提示找不到数据库文件。</p>\n<h1 id=\"B、数据分析\"><a href=\"#B、数据分析\" class=\"headerlink\" title=\"B、数据分析\"></a>B、数据分析</h1><h2 id=\"B-1-使用metaphlan从Reads中获取物种分类信息\"><a href=\"#B-1-使用metaphlan从Reads中获取物种分类信息\" class=\"headerlink\" title=\"B.1 使用metaphlan从Reads中获取物种分类信息\"></a>B.1 使用metaphlan从Reads中获取物种分类信息</h2><h3 id=\"Step-1-激活环境\"><a href=\"#Step-1-激活环境\" class=\"headerlink\" title=\"Step 1. 激活环境\"></a>Step 1. 激活环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activate metaphlan</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-2-对paired-end-Reads进行注释\"><a href=\"#Step-2-对paired-end-Reads进行注释\" class=\"headerlink\" title=\"Step 2. 对paired-end Reads进行注释\"></a>Step 2. 对paired-end Reads进行注释</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metaphlan Reads1,Reads2 --input_type fastq --bowtie2out Str1.bowtie2.bz2 --<span class=\"built_in\">nproc</span> 10 -o Str1_profiled.txt</span><br></pre></td></tr></table></figure>\n<p>Reads1和Reads2分别代表双端测序得到的正向和反向数据；–input_type指定文件格式，我们拿到的下机数据一般为fastq格式；–bowtie2out参数将会保存运行产生的中间文件以便后续重新运行程序时作为输入文件；–nproc指定使用的线程数量；-o指定输出文件名。</p>\n<h3 id=\"Step-3-汇总所有的结果文件\"><a href=\"#Step-3-汇总所有的结果文件\" class=\"headerlink\" title=\"Step 3. 汇总所有的结果文件\"></a>Step 3. 汇总所有的结果文件</h3><p>对所有的文件均运行Step 2 ，产生了多个输出文件（*_profiled.txt），可以将它们汇总到一个文件中（merged_abundance_table.txt），便于后续对多个样品进行相互比较。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ merge_metaphlan_tables.py *_profiled.txt &gt; merged_abundance_table.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-4-从合并的文件中提取种水平的分类\"><a href=\"#Step-4-从合并的文件中提取种水平的分类\" class=\"headerlink\" title=\"Step 4. 从合并的文件中提取种水平的分类\"></a>Step 4. 从合并的文件中提取种水平的分类</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ grep -E <span class=\"string\">&quot;s__|clade&quot;</span> merged_abundance_table.txt | sed <span class=\"string\">&#x27;s/^.*s__//g&#x27;</span> | <span class=\"built_in\">cut</span> -f1,3-8 | sed -e <span class=\"string\">&#x27;s/clade_name/body_site/g&#x27;</span> &gt; merged_abundance_table_species.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Step-5-绘制样本间种水平的热图\"><a href=\"#Step-5-绘制样本间种水平的热图\" class=\"headerlink\" title=\"Step 5. 绘制样本间种水平的热图\"></a>Step 5. 绘制样本间种水平的热图</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hclust2.py -i merged_abundance_table_species.txt -o abundance_heatmap_species.png --ftop 50 --f_dist_f braycurtis --s_dist_f braycurtis --cell_aspect_ratio 0.5 -l --flabel_size 10 --slabel_size 10 --max_flabel_len 100 --max_slabel_len 100 --minv 0.1 --dpi 300</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-6-计算样本间的unifrac距离\"><a href=\"#Step-6-计算样本间的unifrac距离\" class=\"headerlink\" title=\"Step 6. 计算样本间的unifrac距离\"></a>Step 6. 计算样本间的unifrac距离</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载依赖的tree文件和脚本,与要分析的文件放于同一目录下</span></span><br><span class=\"line\">$ wget https://github.com/biobakery/MetaPhlAn/blob/master/metaphlan/utils/mpa_v30_CHOCOPhlAn_201901_species_tree.nwk</span><br><span class=\"line\">$ wget https://github.com/biobakery/MetaPhlAn/blob/master/metaphlan/utils/calculate_unifrac.R</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开始计算距离</span></span><br><span class=\"line\">$ Rscript plot_unifrac.R merged_abundance_table.txt mpa_v30_CHOCOPhlAn_201901_species_tree.nwk unifrac_merged_abundance_table.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-7-绘制cladogram图\"><a href=\"#Step-7-绘制cladogram图\" class=\"headerlink\" title=\"Step 7. 绘制cladogram图\"></a>Step 7. 绘制cladogram图</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 激活依赖软件所在的环境</span></span><br><span class=\"line\">$ conda activate metawrap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成绘图所需的文件</span></span><br><span class=\"line\">$ <span class=\"built_in\">tail</span> -n +2 merged_abundance_table.txt | <span class=\"built_in\">cut</span> -f1,3- &gt; merged_abundance_table_reformatted.txt</span><br><span class=\"line\"></span><br><span class=\"line\">$ export2graphlan.py --skip_rows 1 -i merged_abundance_table_reformatted.txt --tree merged_abundance.tree.txt --annotation merged_abundance.annot.txt --most_abundant 100 --abundance_threshold 1 --least_biomarkers 10 --annotations 5,6 --external_annotations 7 --min_clade_size 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">$ graphlan_annotate.py --annot merged_abundance.annot.txt merged_abundance.tree.txt merged_abundance.xml</span><br><span class=\"line\"></span><br><span class=\"line\">$ graphlan.py --dpi 300 merged_abundance.xml merged_abundance.pdf --external_legends</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"B-2-使用metawrap对Reads进行组装\"><a href=\"#B-2-使用metawrap对Reads进行组装\" class=\"headerlink\" title=\"B.2 使用metawrap对Reads进行组装\"></a>B.2 使用metawrap对Reads进行组装</h2><h3 id=\"Step-1-激活环境-1\"><a href=\"#Step-1-激活环境-1\" class=\"headerlink\" title=\"Step 1. 激活环境\"></a>Step 1. 激活环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activate metawrap</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-2-组装\"><a href=\"#Step-2-组装\" class=\"headerlink\" title=\"Step 2. 组装\"></a>Step 2. 组装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap assembly -1 Reads1 -2 Reads2 -o Assemble1 -m 300 -t 15 --metaspades</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP assembly [options] -1 reads_1.fastq -2 reads_2.fastq -o output_dir\n\n<ul>\n<li>Options:<ul>\n<li><p>   -1 STR          forward fastq reads</p>\n</li>\n<li><p>   -2 STR          reverse fastq reads</p>\n</li>\n<li><p>   -o STR          output directory</p>\n</li>\n<li><p>   -m INT          memory in GB (default&#x3D;24)</p>\n</li>\n<li><p>   -t INT          number of threads (defualt&#x3D;1)</p>\n</li>\n<li><p>   -l INT\t\tminimum length of assembled contigs (default&#x3D;1000)</p>\n</li>\n<li><p>   --megahit\tassemble with megahit (default)</p>\n</li>\n<li><p>--metaspades\tassemble with metaspades instead of megahit (better results but slower and higher memory requirement)</p>\n</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<p>Reads1和Reads2分别代表双端测序得到的正向和反向数据；-o指定输出目录，-m指定最大可用内存大小，超过设定值后程序会自动退出，建议设大一点，我10G的数据大概需要180G内存；-t指定线程数；–metaspades表示用metaspades进行组装，特别慢，但是组装结果相对好一些。</p>\n<h2 id=\"B-3-使用metawrap对Contigs进行Bining\"><a href=\"#B-3-使用metawrap对Contigs进行Bining\" class=\"headerlink\" title=\"B.3 使用metawrap对Contigs进行Bining\"></a>B.3 使用metawrap对Contigs进行Bining</h2><h3 id=\"Step-1-激活环境-2\"><a href=\"#Step-1-激活环境-2\" class=\"headerlink\" title=\"Step 1. 激活环境\"></a>Step 1. 激活环境</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activate metawrap</span><br></pre></td></tr></table></figure>\n<h3 id=\"Step-2-Bining\"><a href=\"#Step-2-Bining\" class=\"headerlink\" title=\"Step 2. Bining\"></a>Step 2. Bining</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap binning -o Str1.INITIAL_BINNING -t 20 -m 200 --universal --run-checkm -a &lt;path of contigs&gt; --metabat2 --maxbin2 --concoct 解压的Reads1 解压的Reads2</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP binning [options] -a assembly.fa -o output_dir readsA_1.fastq readsA_2.fastq ... [readsX_1.fastq readsX_2.fastq]\n\n<ul>\n<li><p>Note1: Make sure to provide all your separately replicate read files, not the joined file.</p>\n</li>\n<li><p>Note2: You may provide single end or interleaved reads as well with the use of the correct option</p>\n</li>\n<li><p>Note3: If the output already has the .bam alignments files from previous runs, the module will skip re-aligning the reads</p>\n</li>\n<li><p>Options:</p>\n<ul>\n<li>   -a STR          metagenomic assembly file</li>\n<li>   -o STR          output directory</li>\n<li>   -t INT          number of threads (default&#x3D;1)</li>\n<li>   -m INT\t\tamount of RAM available (default&#x3D;4)</li>\n<li>   -l INT\t\tminimum contig length to bin (default&#x3D;1000bp). Note: metaBAT will default to 1500bp minimum</li>\n<li>   --metabat2      bin contigs with metaBAT2</li>\n<li>   --metabat1\tbin contigs with the original metaBAT</li>\n<li>   --maxbin2\tbin contigs with MaxBin2</li>\n<li>   --concoct\tbin contigs with CONCOCT</li>\n<li>--universal\tuse universal marker genes instead of bacterial markers in MaxBin2 (improves Archaea binning)</li>\n<li>   --run-checkm\timmediately run CheckM on the bin results (requires 40GB+ of memory)</li>\n<li>   --single-end\tnon-paired reads mode (provide *.fastq files)</li>\n<li>   --interleaved\tthe input read files contain interleaved paired-end reads</details>\n**注意避坑：** 这里的Reads1和Reads2需要提供解压缩后的Reads文件，不但要解压缩，还需要重命名，即后缀名必须为“\\_clean\\_1.fastq” 和 “\\_clean\\_2.fastq”，否则软件无法运行。-o指定输出目录；-t指定线程数；-m指定最大内存限制；--run-checkm表明即时检查Bining的质量；--metabat2 --maxbin2 --concoct 指定同时采用这三个分箱工具进行Bining；--universal指定MaxBin2采用universal marker 基因代替 bacterial markers  (improves Archaea binning)。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Step-3-整合三种方法的bins-metabat2-maxbin2-concoct-结果\"><a href=\"#Step-3-整合三种方法的bins-metabat2-maxbin2-concoct-结果\" class=\"headerlink\" title=\"Step 3. 整合三种方法的bins (metabat2, maxbin2, concoct) 结果\"></a>Step 3. 整合三种方法的bins (metabat2, maxbin2, concoct) 结果</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap bin_refinement -o F01_BIN_REFINEMENT(输出目录) -t 20 -A str1.INITIAL_BINNING/metabat2_bins/ -B str1.INITIAL_BINNING/maxbin2_bins/ -C str1.INITIAL_BINNING/concoct_bins/ -c 70 -x 5</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP bin_refinement [options] -o output_dir -A bin_folderA [-B bin_folderB -C bin_folderC]\n\n<ul>\n<li><p>Note: the contig names in different bin folders must be consistant (must come from the same assembly).</p>\n</li>\n<li><p>Options:</p>\n<ul>\n<li>-o STR          output directory</li>\n<li>   -t INT          number of threads (default&#x3D;1)</li>\n<li>   -m INT\t\tmemory available (default&#x3D;40)</li>\n<li>   -c INT          完整度minimum % completion of bins [should be &gt;50%] (default&#x3D;70)</li>\n<li>   -x INT          污染度maximum % contamination of bins that is acceptable (default&#x3D;10)</li>\n<li>   -A STR\t\tfolder with metagenomic bins (files must have .fa or .fasta extension)</li>\n<li>   -B STR\t\tanother folder with metagenomic bins</li>\n<li>   -C STR\t\tanother folder with metagenomic bins</li>\n<li>   --skip-refinement\tdont use binning_refiner to come up with refined bins based on combinations of binner outputs</li>\n<li>   --skip-checkm\t\tdont run CheckM to assess bins</li>\n<li>   --skip-consolidation\tchoose the best version of each bin from all bin refinement iteration</li>\n<li>   --keep-ambiguous\tfor contigs that end up in more than one bin, keep them in all bins (default: keeps them only in the best bin)</li>\n<li>   --remove-ambiguous\tfor contigs that end up in more than one bin, remove them in all bins (default: keeps them only in the best bin)</li>\n<li>   --quick\t\t\tadds –reduced_tree option to checkm, reducing runtime, especially with low memory</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h3 id=\"Step-4-Blobology可视化bin\"><a href=\"#Step-4-Blobology可视化bin\" class=\"headerlink\" title=\"Step 4. Blobology可视化bin\"></a>Step 4. Blobology可视化bin</h3><p><strong>一个坑：</strong> metawrap安装的blast为2.6版本，只能用Version 4 的nt库。而最新的nt库为Version 5，v4已经不再维护了。因此需要更新metawrap安装环境中的blast至2.8.0及以上版本，这里无法通过‘conda updata blast’实现更新，而是需要下载新版本的blast可执行程序，覆盖metawrap环境中的blast程度们。 如果你采用的是默认版本的blast和V5的nt库，会得到报错：“BLAST Database error: Error: Not a valid version 4 database”.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap blobology -a Result/Assemble/F01/final_assembly.fasta -t 20 -o F01.BLOBOLOGY --bins F01_BIN_REFINEMENT/metawrap_70_5_bins reads/F01_clean_1.fastq reads/F01_clean_2.fastq</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP blobology [options] -a assembly.fasta -o output_dir readsA_1.fastq readsA_2.fastq [readsB_1.fastq readsB_2.fastq ... ]\n\n<ul>\n<li><p>Options:</p>\n<ul>\n<li>   -a STR\t\tassembly fasta file</li>\n<li>   -o STR          output directory</li>\n<li>   -t INT          number of threads</li>\n<li>   --subsamble \tINT\tNumber of contigs to run blobology on. Subsampling is randomized. (default&#x3D;ALL)</li>\n<li>   --bins\t\tSTR\tFolder containing bins. Contig names must match those of the assembly file. (default&#x3D;None)</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h3 id=\"Step-5-Bins-定量\"><a href=\"#Step-5-Bins-定量\" class=\"headerlink\" title=\"Step 5. Bins 定量\"></a>Step 5. Bins 定量</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ metawrap quant_bins -b F01_BIN_REFINEMENT/metawrap_70_5_bins -t 8 -o F01.QUANT_BINS -a Result/Assemble/F01/final_assembly.fasta reads/F01_clean_1.fastq reads/F01_clean_2.fastq</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP quant_bins [options] -b bins_folder -o output_dir -a assembly.fa readsA_1.fastq readsA_2.fastq ... [readsX_1.fastq readsX_2.fastq]\n\n<ul>\n<li><p>Options:</p>\n<ul>\n<li>   -b STR          folder containing draft genomes (bins) in fasta format</li>\n<li>   -o STR          output directory</li>\n<li>   -a STR\t\tfasta file with entire metagenomic assembly (strongly recommended!)</li>\n<li>   -t INT\t\tnumber of threads</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h3 id=\"Step-6-重组装\"><a href=\"#Step-6-重组装\" class=\"headerlink\" title=\"Step 6. 重组装\"></a>Step 6. 重组装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">metawrap reassemble_bins -o F01.BIN_REASSEMBLY -1 reads/F01_clean_1.fastq -2 reads/F01_clean_2.fastq -t 20 -m 400 -c 70 -x 10 -b F01_BIN_REFINEMENT/metawrap_70_5_bins</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nUsage: metaWRAP reassemble_bins [options] -o output_dir -b bin_folder -1 reads_1.fastq -2 reads_2.fastq\n\n<ul>\n<li><p>Options:</p>\n<ul>\n<li>   -b STR\t\tfolder with metagenomic bins</li>\n<li>   -o STR\t\toutput directory</li>\n<li>   -1 STR          forward reads to use for reassembly</li>\n<li>   -2 STR          reverse reads to use for reassembly</li>\n<li>   -t INT\t\tnumber of threads (default&#x3D;1)</li>\n<li>   -m INT\t\tmemory in GB (default&#x3D;40)</li>\n<li>   -c INT\t\tminimum desired bin completion % (default&#x3D;70)</li>\n<li>   -x INT\t\tmaximum desired bin contamination % (default&#x3D;10)</li>\n<li>   -l INT\t\tminimum contig length to be included in reassembly (default&#x3D;500)</li>\n<li>   --strict-cut-off\tmaximum allowed SNPs for strict read mapping (default&#x3D;2)</li>\n<li>   --permissive-cut-off\tmaximum allowed SNPs for permissive read mapping (default&#x3D;5)</li>\n<li>   --skip-checkm\t\tdont run CheckM to assess bins</li>\n<li>   --parallel\t\trun spades reassembly in parallel, but only using 1 thread per bin</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h2 id=\"B-4-MAGs注释\"><a href=\"#B-4-MAGs注释\" class=\"headerlink\" title=\"B.4 MAGs注释\"></a>B.4 MAGs注释</h2><h3 id=\"B-4-1-GTDB-TK-进行物种分类和注释，构建系统发育树\"><a href=\"#B-4-1-GTDB-TK-进行物种分类和注释，构建系统发育树\" class=\"headerlink\" title=\"B.4.1 GTDB-TK 进行物种分类和注释，构建系统发育树\"></a>B.4.1 GTDB-TK 进行物种分类和注释，构建系统发育树</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda activate gtdbtk</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"classify-wf——Classify-workflow-包括了Step-1-3\"><a href=\"#classify-wf——Classify-workflow-包括了Step-1-3\" class=\"headerlink\" title=\"classify_wf——Classify workflow (包括了Step 1-3)\"></a>classify_wf——Classify workflow (包括了Step 1-3)</h4><p>The classify workflow consists of three steps: identify, align, and classify.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk classify_wf --genome_dir metawrap_70_5_bins/ --out_dir classify_wf_output -x .fa --prefix F --cpus 6 -r --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk classify_wf (--genome_dir GENOME_DIR | --batchfile BATCHFILE) --out_dir OUT_DIR [-x EXTENSION] [--min_perc_aa MIN_PERC_AA] [--prefix PREFIX] [--cpus CPUS]\n                          [--pplacer_cpus PPLACER_CPUS] [--force] [--scratch_dir SCRATCH_DIR] [-r] [--min_af MIN_AF] [--debug] [-h]\n\n<ul>\n<li><p>mutually exclusive required arguments:</p>\n<ul>\n<li>--genome_dir GENOME_DIR<br>               directory containing genome files in FASTA format</li>\n<li>--batchfile BATCHFILE<br>               path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</li>\n</ul>\n</li>\n<li><p>required named arguments:</p>\n<ul>\n<li>--out_dir OUT_DIR     directory to output files</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>-x, --extension EXTENSION<br>                extension of files to process, gz &#x3D; gzipped (default: fna)</li>\n<li>--min_perc_aa MIN_PERC_AA<br>                exclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (default: 10)</li>\n<li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li>\n<li>--cpus CPUS           number of CPUs to use (default: 1)</li>\n<li>--pplacer_cpus PPLACER_CPUS<br>                use pplacer_cpus during placement (default: cpus)</li>\n<li>--force               continue processing if an error occurs on a single genome (default: False)</li>\n<li>--scratch_dir SCRATCH_DIR<br>                Reduce pplacer memory usage by writing to disk (slower).</li>\n<li>-r, --recalculate_red<br>                recalculate RED values based on the reference tree and all added user genomes (default: False)</li>\n<li>--min_af MIN_AF       minimum alignment fraction to consider closest genome (default: 0.65)</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message</details></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Step-1-identify——在基因组中寻找marker-genes\"><a href=\"#Step-1-identify——在基因组中寻找marker-genes\" class=\"headerlink\" title=\"Step 1: identify——在基因组中寻找marker genes\"></a>Step 1: identify——在基因组中寻找marker genes</h4><p>Translation table选择：use table 11 unless the coding density using table 4 is 5% higher than when using table 11 and the coding density under table 4 is &gt;70%.  GTDB-Tk 不会区分 tables 4和tables 5. 若用户清楚使用哪一个table，可以通过--batchfile指定。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk identify --genome_dir metawrap_70_5_bins/ --out_dir identify_output --cpus 6 --prefix F --debug -x .fa --write_single_copy_genes</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-2-align\"><a href=\"#Step-2-align\" class=\"headerlink\" title=\"Step 2: align\"></a>Step 2: align</h4><p>Create a multiple sequence alignment based on the AR122&#x2F;BAC120 marker set.<br>Time 3m50.019s</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk align --identify_dir identify_output/ --out_dir align_output --cpus 3 --prefix F --debug</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-3-classify\"><a href=\"#Step-3-classify\" class=\"headerlink\" title=\"Step 3: classify\"></a>Step 3: classify</h4><p>Determine taxonomic classification of genomes.<br>Time 118m9.386s</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk classify --genome_dir metawrap_70_5_bins/ --align_dir align_output/ --out_dir classify_output --cpus 3 --prefix F --debug -x .fa -r</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>：如果内存较小，则加上“–scratch_dir”参数。</p>\n<hr>\n<h4 id=\"Step-4-export-msa-这一步不运行\"><a href=\"#Step-4-export-msa-这一步不运行\" class=\"headerlink\" title=\"Step 4: export_msa (这一步不运行)\"></a>Step 4: export_msa (这一步不运行)</h4><p>The export_msa will export the untrimmed archaeal or bacterial MSA used in the reference data.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 古菌 0m1.503s</span></span><br><span class=\"line\">$ time gtdbtk export_msa --domain arc --output msa_arc.faa --debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 细菌 0m16.679s</span></span><br><span class=\"line\">$ time gtdbtk export_msa --domain bac --output msa_bac.faa --debug</span><br></pre></td></tr></table></figure>\n<h4 id=\"Step-5-trim-msa-这一步不运行\"><a href=\"#Step-5-trim-msa-这一步不运行\" class=\"headerlink\" title=\"Step 5: trim_msa (这一步不运行)\"></a>Step 5: trim_msa (这一步不运行)</h4><p>The trim_msa command will trim a MSA given a user-specified mask file, or the archaeal&#x2F;bacterial mask present in the reference data.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 古菌 0m10.675s</span></span><br><span class=\"line\">$ time gtdbtk trim_msa --untrimmed_msa msa_arc.faa --output msa_arc_trim.faa --reference_mask arc --debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 细菌 3m28.793s</span></span><br><span class=\"line\">$ time gtdbtk trim_msa --untrimmed_msa msa_bac.faa --output msa_bac_trim.faa --reference_mask bac --debug</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-6-infer\"><a href=\"#Step-6-infer\" class=\"headerlink\" title=\"Step 6: infer\"></a>Step 6: infer</h4><p>Infer tree from multiple sequence alignment.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#古菌 44m54.884s</span></span><br><span class=\"line\">$ time gtdbtk infer --msa_file align_output/F.ar122.msa.fasta --out_dir infer_out_arc_F --prefix F --cpus 12 --debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#细菌</span></span><br><span class=\"line\">$ time gtdbtk infer --msa_file align_output/F.bac120.msa.fasta --out_dir infer_out_bac_F --prefix F --cpus 12 --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk infer --msa_file MSA_FILE --out_dir OUT_DIR [--prot_model {JTT,WAG,LG}] [--no_support] [--gamma] [--prefix PREFIX] [--cpus CPUS] [--debug] [-h]\n\n<ul>\n<li><p>required named arguments:</p>\n<ul>\n<li>--msa_file MSA_FILE   multiple sequence alignment in FASTA format</li>\n<li>--out_dir OUT_DIR     directory to output files</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>--prot_model {JTT,WAG,LG}<br>                protein substitution model for tree inference (default: WAG)</li>\n<li>--no_support          do not compute local support values using the Shimodaira-Hasegawa test (default: False)</li>\n<li>--gamma               rescale branch lengths to optimize the Gamma20 likelihood (default: False)</li>\n<li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li>\n<li>--cpus CPUS           number of CPUs to use (default: 1)</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message</details></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Step-7-decorate\"><a href=\"#Step-7-decorate\" class=\"headerlink\" title=\"Step 7: decorate\"></a>Step 7: decorate</h4><p>Decorate a tree with the GTDB-Tk taxonomy.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 古菌</span></span><br><span class=\"line\">$ time gtdbtk decorate --input_tree infer_out_arc_F/F.unrooted.tree --output_tree F.decorate_unrooted_arc.tree --gtdbtk_classification_file classify_output/classify/F.ar122.summary.tsv --debug</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 细菌</span></span><br><span class=\"line\">$ time gtdbtk decorate --input_tree infer_out_bac_F/F.unrooted.tree --output_tree F.decorate_unrooted_brc.tree --gtdbtk_classification_file classify_output/classify/F.bac120.summary.tsv --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk decorate --input_tree INPUT_TREE --output_tree OUTPUT_TREE [--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE] [--custom_taxonomy_file CUSTOM_TAXONOMY_FILE]\n                       [--debug] [-h]\n\n<ul>\n<li><p>required named arguments:</p>\n<ul>\n<li>--input_tree INPUT_TREE<br>                path to the unrooted tree in Newick format</li>\n<li>--output_tree OUTPUT_TREE<br>                path to output the tree</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE<br>                file with GTDB-Tk classifications produced by the <code>classify</code> command</li>\n<li>--custom_taxonomy_file CUSTOM_TAXONOMY_FILE<br>                file indicating custom taxonomy strings for user genomes, that should contain any genomes belonging to the outgroup</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message</details></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Step-8-root\"><a href=\"#Step-8-root\" class=\"headerlink\" title=\"Step 8: root\"></a>Step 8: root</h4><p>Root a tree using an outgroup.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk root --input_tree input.tree --outgroup_taxon p__Nanoarchaeota --output_tree output.tree --gtdbtk_classification_file &lt;file with GTDB-Tk classifications produced by the classify <span class=\"built_in\">command</span>&gt; --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk root --input_tree INPUT_TREE --outgroup_taxon OUTGROUP_TAXON --output_tree OUTPUT_TREE [--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE]\n                   [--custom_taxonomy_file CUSTOM_TAXONOMY_FILE] [--debug] [-h]\n\n<ul>\n<li><p>required named arguments:</p>\n<ul>\n<li>--input_tree INPUT_TREE<br>                path to the unrooted tree in Newick format</li>\n<li>--outgroup_taxon OUTGROUP_TAXON<br>                taxon to use as outgroup (e.g., p__Patescibacteria or p__Altarchaeota)</li>\n<li>--output_tree OUTPUT_TREE<br>                path to output the tree</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE<br>                file with GTDB-Tk classifications produced by the <code>classify</code> command</li>\n<li>--custom_taxonomy_file CUSTOM_TAXONOMY_FILE<br>                file indicating custom taxonomy strings for user genomes, that should contain any genomes belonging to the outgroup</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message</details></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4 id=\"Step-9-ani-rep——计算ANI值\"><a href=\"#Step-9-ani-rep——计算ANI值\" class=\"headerlink\" title=\"Step 9: ani_rep——计算ANI值\"></a>Step 9: ani_rep——计算ANI值</h4><p>Compute the ANI of input genomes to all GTDB-Tk representative genomes.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ time gtdbtk ani_rep --genome_dir metawrap_70_5_bins/ --out_dir ani_rep/ --cpus 6 -x .fa --prefix F --debug</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gtdbtk de_novo_wf --genome_dir metawrap_70_5_bins/ --out_dir de_novo_wf --extension .fa --bacteria --outgroup_taxon p__Patescibacteria --prefix F --cpus 6 --debug</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\nusage: gtdbtk ani_rep (--genome_dir GENOME_DIR | --batchfile BATCHFILE) --out_dir OUT_DIR [--no_mash] [--mash_k MASH_K] [--mash_s MASH_S] [--mash_d MASH_D] [--mash_v MASH_V]\n                      [--mash_db MASH_DB] [--min_af MIN_AF] [-x EXTENSION] [--prefix PREFIX] [--cpus CPUS] [--debug] [-h]\n\n<ul>\n<li><p>mutually exclusive required arguments:</p>\n<ul>\n<li><p>--genome_dir GENOME_DIR<br>                directory containing genome files in FASTA format</p>\n</li>\n<li><p>--batchfile BATCHFILE<br>                path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p>\n</li>\n<li><p>- required named arguments:</p>\n</li>\n<li><p>--out_dir OUT_DIR     directory to output files</p>\n</li>\n</ul>\n</li>\n<li><p>optional Mash arguments:</p>\n<ul>\n<li>--no_mash             skip pre-filtering of genomes using Mash (default: False)</li>\n<li>--mash_k MASH_K       k-mer size [1-32] (default: 16)</li>\n<li>--mash_s MASH_S       maximum number of non-redundant hashes (default: 5000)</li>\n<li>--mash_d MASH_D       maximum distance to keep [0-1] (default: 0.1)</li>\n<li>--mash_v MASH_V       maximum p-value to keep [0-1] (default: 1.0)</li>\n<li>--mash_db MASH_DB     path to save&#x2F;read (if exists) the Mash reference sketch database (.msh)</li>\n</ul>\n</li>\n<li><p>optional FastANI arguments:</p>\n<ul>\n<li>--min_af MIN_AF       minimum alignment fraction to consider closest genome (default: 0.65)</li>\n</ul>\n</li>\n<li><p>optional arguments:</p>\n<ul>\n<li>-x, --extension EXTENSION<br>                extension of files to process, gz &#x3D; gzipped (default: fna)</li>\n<li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li>\n<li>--cpus CPUS           number of CPUs to use (default: 1)</li>\n<li>--debug               create intermediate files for debugging purposes (default: False)</li>\n<li>-h, --help            show help message </details></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"B-4-2-EnrichM-注释\"><a href=\"#B-4-2-EnrichM-注释\" class=\"headerlink\" title=\"B.4.2 EnrichM 注释\"></a>B.4.2 EnrichM 注释</h3><h4 id=\"Step-1-annotate\"><a href=\"#Step-1-annotate\" class=\"headerlink\" title=\"Step 1. annotate\"></a>Step 1. annotate</h4><p>基因组注释管道，可以使用dbCAN将基因组与KO, PFAM, TIGRFAM和CAZY 数据库进行比对。结果将为每个基因组产生一个.gff文件，并生成每个注释类型的频率矩阵（frequency matrix），其中行是注释IDs，列是基因组。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ enrichm annotate --genome_directory metawrap_70_5_bins --output EnrichM_annotate --force --ko --ko_hmm --pfam --tigrfam --clusters --orthologs --cazy --ec --threads 30 --parallel 8 --suffix .fa --count_domains --chunk_number 8</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>Output options:</p>\n<ul>\n<li>--output OUTPUT       Output directory</li>\n<li>--force               Overwrite previous run</li>\n</ul>\n</li>\n<li><p>Input options (Use one):</p>\n<ul>\n<li>--genome_files GENOME_FILES [GENOME_FILES …]<br>      Space separated list of genomes to annotate</li>\n<li>--genome_directory GENOME_DIRECTORY<br>      Directory containing genomes to annotate</li>\n<li>--protein_files PROTEIN_FILES [PROTEIN_FILES …]<br>      Space separated list of .faa files of genomes to annotate. Protein files need to be generated by prodigal.</li>\n<li>--protein_directory PROTEIN_DIRECTORY<br>      Directory containing .faa files of genomes to annotate. Protein files need to be generated by prodigal.</li>\n</ul>\n</li>\n<li><p>Annotations options:</p>\n<ul>\n<li>--ko                  Annotate with KO ids</li>\n<li>--ko_hmm              Annotate with KO ids</li>\n<li>--pfam                Annotate with Pfam HMMs</li>\n<li>--tigrfam             Annotate with TIGRFAM HMMs</li>\n<li>--clusters            Annotate with cluster ids</li>\n<li>--orthologs           Annotate with ortholog ids</li>\n<li>--cazy                Annotate with dbCAN HMMs</li>\n<li>--ec                  Annotate with EC ids</li>\n</ul>\n</li>\n<li><p>Cutoff options:</p>\n<ul>\n<li>--cut_ga              For PFAM and TIGRfam searches: use profiles GA gathering cutoffs to set all thresholding</li>\n<li>--cut_nc              For PFAM and TIGRfam searches: use profiles NC noise cutoffs to set all thresholding</li>\n<li>--cut_tc              For PFAM and TIGRfam searches: use profiles TC trusted cutoffs to set all thresholding</li>\n<li>--cut_ko              For KO HMM annotation searches: use cutoffs defined by KEGG to maximise F-score.</li>\n<li>--evalue EVALUE       Use this evalue cutoff to filter false positives (default: 1e-05)</li>\n<li>--bit BIT             Use this bit score cutoff to filter false positives (default: 0)</li>\n<li>--id ID               Use this percent identity cutoff to filter false positives (default: 0.3)</li>\n<li>--aln_query ALN_QUERY<br>      This fraction of the query must align to the reference (default: 0.7)</li>\n<li>--aln_reference ALN_REFERENCE<br>      This fraction of the reference must align to the query (default: 0.7)</li>\n<li>--c C                 When clustering, use matches above this fraction of aligned (covered) query and target residues (default: 0.7)</li>\n</ul>\n</li>\n<li><p>Runtime options:</p>\n<ul>\n<li>--threads THREADS     Use this number of threads when annotating with BLAST and HMMsearch (default: 1)</li>\n<li>--parallel PARALLEL   Run this number of jobs in parallel when annotating with HMMsearch (default: 5)</li>\n<li>--inflation INFLATION<br>     Inflation factor to use when calling clusters in ortholog (default &#x3D; 5.0)</li>\n<li>--suffix SUFFIX       Treat files ending with this suffix within the –genome_directory as genomes (default: .fna for –genome_directory and .faa for )</li>\n<li>--light               Don’t store metadata for genome files (can’t use enrichM compare downstream, default&#x3D;False)</li>\n<li>--count_domains       Fill the frequency matrix with the total number of times an annotation was detected (for example, when one domain more than once within a protein), rather than the count of proteins with with that annotation</li>\n<li>--chunk_number CHUNK_NUMBER<br>      Split loading of genomes into this many chunks (default &#x3D; 4)</li>\n<li>--chunk_max CHUNK_MAX<br>      Maximum number of genomes to load per chunk (default &#x3D; 2500)</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h4 id=\"Step-2-classify\"><a href=\"#Step-2-classify\" class=\"headerlink\" title=\"Step 2. classify\"></a>Step 2. classify</h4><p>Determine what pathways a genome encodes. Classify quickly reads in KO annotations in the form of a matrix (KO IDs as rows, genomes as columns) and determines which KEGG modules are complete. Annotation matrices can be generated using the annotate function.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ enrichm classify --output EnrichM_classify/ko_hmm_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ko_hmm_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/ko_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ko_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以下6个命令可不必运行</span></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/cazy_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/cazy_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/cluster_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/cluster_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/ec_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ec_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/ortholog_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ortholog_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/pfam_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/pfam_frequency_table.tsv --cutoff 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ enrichm classify --output EnrichM_classify/tigrfam_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/tigrfam_frequency_table.tsv --cutoff 0</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>Output options:</p>\n<ul>\n<li>--output OUTPUT       Output directory</li>\n<li>--force               Overwrite previous run</li>\n</ul>\n</li>\n<li><p>Input options:</p>\n<ul>\n<li>--genome_and_annotation_matrix GENOME_AND_ANNOTATION_MATRIX<br>      Path to file containing a genome annotation matrix</li>\n<li>--custom_modules CUSTOM_MODULES<br>      Tab separated file containing module name, definition as the columns</li>\n<li>--module_rules_json MODULE_RULES_JSON<br>       json file specifying rules to interpret the annotation and guide module annotation</li>\n<li>--gff_files GFF_FILES<br>      GFF files for the genomes being classified.</li>\n</ul>\n</li>\n<li><p>Cutoff options:</p>\n<ul>\n<li>--cutoff CUTOFF       Output only modules with greater than this percent of the requied KO groups (default &#x3D; print all modules)</li>\n</ul>\n</li>\n<li><p>Runtime options:</p>\n<ul>\n<li>--aggregate           Calculate the abundance of each pathway within each genome&#x2F;sample (column)</details></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Step-3-enrichment\"><a href=\"#Step-3-enrichment\" class=\"headerlink\" title=\"Step 3. enrichment\"></a>Step 3. enrichment</h4><p>Enrichment will read in KO or PFAM annotations in the form of a matrix (IDs as rows, genomes as columns) and a metadata file that separates genomes into groups to compare, and will run some basic stats to determine the enrichment of modules or pfam clans between and within the groups.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ enrichm enrichment --output EnrichM_enrichment/ --metadata genome.list --annotation_matrix EnrichM_annotate/ko_frequency_table.tsv --force</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>- Output options:</p>\n<ul>\n<li>--output OUTPUT       Output directory</li>\n<li>--force               Overwrite previous run</li>\n</ul>\n</li>\n<li><p>Input options:</p>\n<ul>\n<li>--annotate_output ANNOTATE_OUTPUT<br>     Output directory provided by enrichm annotate</li>\n<li>--metadata METADATA   Metadata file with two columns, the first with the genome name, the second with the groupings to compare.</li>\n<li>--annotation_matrix ANNOTATION_MATRIX<br>     Annotation matrix to compare.</li>\n<li>--gff_files GFF_FILES [GFF_FILES …]<br>     Gff files for genomes to compare.</li>\n<li>--abundance 基因组丰度矩阵</li>\n<li>--abundance_metadata ABUNDANCE_METADATA<br>     Metadata grouping abundance samples.</li>\n<li>--transcriptome TRANSCRIPTOME  基因组丰度矩阵</li>\n<li>--transcriptome_metadata TRANSCRIPTOME_METADATA<br>     Metadata grouping abundance samples.</li>\n</ul>\n</li>\n<li><p>Genome Taxonomy DataBase (GTDB) options:</p>\n<ul>\n<li>--batchfile BATCHFILE<br>     metadata file to compare with.</li>\n</ul>\n</li>\n<li><p>Runtime options:</p>\n<ul>\n<li>--pval_cutoff PVAL_CUTOFF<br>     Only output results with a p-value below a this cutoff (default&#x3D;0.05).</li>\n<li>--proportions_cutoff PROPORTIONS_CUTOFF<br>     Proportion enrichment cutoff.</li>\n<li>--threshold THRESHOLD<br>     The threshold to control for in false discovery rate of familywise error rate.</li>\n<li>--multi_test_correction MULTI_TEST_CORRECTION<br>     The form of mutiple test correction to use. Uses the statsmodel module and consequently has all of its options.<br>                Default: Benjamini-Hochberg FDR (fdr_bh)<br>                Options: Bonferroni (b)<br>                     Sidak (s)<br>                     Holm (h)<br>                     Holm-Sidak (hs)<br>                     Simes-Hochberg (sh)<br>                     Hommel (ho)<br>                     FDR Benjamini-Yekutieli (fdr_by)<br>                     FDR 2-stage Benjamini-Hochberg (fdr_tsbh)<br>                     FDR 2-stage Benjamini-Krieger-Yekutieli (fdr_tsbky)<br>                     FDR adaptive Gavrilov-Benjamini-Sarkar (fdr_gbs))</li>\n<li>--processes PROCESSES  采用多少个进程进行富集分析</li>\n<li>--allow_negative_values  允许输入的矩阵中有负值</li>\n<li>--ko                    Compare KO ids (annotated with DIAMOND)</li>\n<li>--ko_hmm          Compare KO ids (annotated with HMMs)</li>\n<li>--pfam                Compare Pfam ids</li>\n<li>--tigrfam             Compare TIGRFAM ids</li>\n<li>--cluster              Compare cluster ids</li>\n<li>--ortholog            Compare ortholog ids</li>\n<li>--cazy                 Compare dbCAN ids</li>\n<li>--ec                     Compare EC ids</li>\n<li>--range RANGE         Base pair range to search for synteny within. Default &#x3D; 2500.</li>\n<li>--subblock_size SUBBLOCK_SIZE<br>                Number of genes clustered in a row to be reported. Default &#x3D; 2.</li>\n<li>--operon_mismatch_cutoff OPERON_MISMATCH_CUTOFF<br>                Number of allowed mismatches when searching for operons across genomes. Defaul</li>\n<li>--operon_match_score_cutoff OPERON_MATCH_SCORE_CUTOFF<br>                Score cutoff for operon matches</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h4 id=\"Step-4-pathway\"><a href=\"#Step-4-pathway\" class=\"headerlink\" title=\"Step 4. pathway\"></a>Step 4. pathway</h4><p>Pathway reads in a KO matrix and generates a Cytoscape-readable metabolic network and metadata file. Only reactions that are possible given the KOs present in the input matrix are shown, and the modules and reactions that are included in the output can be customized（<strong>报错</strong>）.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ enrichm pathway --matrix EnrichM_annotate/ko_frequency_table.tsv --genome_metadata genome.list --output EnrichM_pathway --abundance EnrichM_enrichment/F01_vs_F02_ivg_results.cdf.tsv --abundance_metadata genome.list --force</span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>Input options:</p>\n<ul>\n<li>--matrix KO矩阵. 必须提供</li>\n<li>--genome_metadata GENOME_METADATA<br>       Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li>\n<li>--abundance 丰度矩阵</li>\n<li>--abundance_metadata ABUNDANCE_METADATA<br>      Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li>\n<li>--tpm_values TPM_VALUES<br>       DetectM产生的TPM values</li>\n<li>--tpm_metadata TPM_METADATA<br>       Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li>\n<li>--metabolome METABOLOME<br>       Metabolome CID matrix.</li>\n</ul>\n</li>\n<li><p>Logging options:</p>\n<ul>\n<li>--log LOG             Output logging information to this file.</li>\n<li>--verbosity VERBOSITY<br>     Level of verbosity (1 - 5 - default &#x3D; 4) 5 &#x3D; Very verbose, 1 &#x3D; Silent</li>\n</ul>\n</li>\n<li><p>Output options:</p>\n<ul>\n<li>--output             输出路径</li>\n<li>--force               覆盖之前输出的结果</li>\n</ul>\n</li>\n<li><p>Pathway options:</p>\n<ul>\n<li>--limit LIMIT [LIMIT …]<br>     USE ONLY these reactions, or reactions within this pathway or module (space separated list).</li>\n<li>--filter FILTER [FILTER …]<br>     Do not use these reactions, or reactions within this pathway or module (space separated list).</li>\n<li>--enrichment_output ENRICHMENT_OUTPUT<br>      Supply an enrichment output to integrate the results into the output network.</li>\n</ul>\n</li>\n</ul>\n</details>\n\n<h4 id=\"Step-5-explore\"><a href=\"#Step-5-explore\" class=\"headerlink\" title=\"Step 5. explore\"></a>Step 5. explore</h4><p>Explore is similar to pathway, but rather than generating a specified pathway it will start from a given query compound ID, and explore the possible reactions that use that compound given the enzymes present in the input KO matrix.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ </span><br></pre></td></tr></table></figure>\n<details>\n<summary>点击此处查看参数</summary>\n\n<ul>\n<li><p>Input options: </p>\n<ul>\n<li>--matrix MATRIX       KO矩阵. 必须提供</li>\n<li>--genome_metadata GENOME_METADATA<br>      Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li>\n<li>--abundance 丰度矩阵</li>\n<li>--abundance_metadata ABUNDANCE_METADATA<br>     Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare..</li>\n<li>--tpm_values TPM_VALUES<br>     DetectM产生的TPM values</li>\n<li>--tpm_metadata TPM_METADATA<br>     Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare..</li>\n<li>--metabolome METABOLOME<br>     Metabolome CID matrix.</li>\n</ul>\n</li>\n<li><p>Logging options:</p>\n<ul>\n<li>--log LOG             Output logging information to this file.</li>\n<li>--verbosity VERBOSITY<br>      Level of verbosity (1 - 5 - default &#x3D; 4) 5 &#x3D; Very verbose, 1 &#x3D; Silent</li>\n</ul>\n</li>\n<li><p>Output options:</p>\n<ul>\n<li>--output             输出路径</li>\n<li>--force               覆盖之前输出的结果</li>\n</ul>\n</li>\n<li><p>Query options:</p>\n<ul>\n<li>--queries QUERIES     A file containing the KEGG ids of the compounds from which to start in the metabolic network</li>\n<li>--depth DEPTH         Number of steps to take into the metabolic network</details></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"C-Metagenome-functional-profiling\"><a href=\"#C-Metagenome-functional-profiling\" class=\"headerlink\" title=\"C Metagenome functional profiling\"></a>C Metagenome functional profiling</h1><ul>\n<li>从宏基因组组装的contigs中预测基因——prodigal -p meta模式</li>\n<li>Metagenome-assembled genes which were not included in the MAGs were subjected to taxonomic classification using <a href=\"https://github.com/bioinformatics-centre/kaiju\">Kaiju</a></li>\n<li>eggNOG-mapper比对<a href=\"https://doi.org/10.1093/nar/gkv1248\">eggnog</a>数据库</li>\n<li>HMMER 比对<a href=\"https://doi.org/10.1093/nar/gky995\">Pfam</a></li>\n<li><a href=\"https://www.kegg.jp/blastkoala/\">GhostKOALA </a>和<a href=\"https://www.genome.jp/tools/kofamkoala/\">KofamKOALA (v1.0.0)</a>比对<a href=\"https://doi.org/10.1093/nar/28.1.27\">KEGG</a></li>\n<li>BLASTP比对<a href=\"https://doi.org/10.1093/nar/gkv1103\">TCDB</a></li>\n<li><a href=\"http://bcb.unl.edu/dbCAN2/\">dbCAN2 (v2.0.1)</a>比对<a href=\"https://doi.org/10.1093/nar/gkn663\">CAZy</a></li>\n<li>BLASTP比对<a href=\"https://www.ebi.ac.uk/merops/submit_searches.shtml\">MEROPS </a></li>\n<li><a href=\"https://github.com/Arkadiy-Garber/FeGenie\">FeGenie</a>检测Iron-related genes</li>\n<li>Fe-containing domains were characterized using <a href=\"https://doi.org/10.1073/pnas.0605798103\">Superfamily (v1.75)</a>.</li>\n<li>砷呼吸和抗性基因挖掘<a href=\"https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/HMM_search\">https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic&#x2F;tree&#x2F;master&#x2F;HMM_search</a>，模型下载<a href=\"https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/gene_targeted_assembly/gene_resource\">https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/gene_targeted_assembly/gene_resource</a></li>\n</ul>\n<h1 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h1><ul>\n<li><a href=\"https://github.com/biobakery/MetaPhlAn/wiki/MetaPhlAn-3.0\">MetaPhlAn 3.0 tutorial</a></li>\n<li><a href=\"https://zouhua.top/archives/9d8099c8.html\">MetaPhlAn 3.0: 宏基因组物种组成分析软件</a></li>\n<li><a href=\"https://github.com/biobakery/biobakery/wiki/GraPhlAn\">GraPhlAn Tutorial</a></li>\n<li></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"宏基因组","path":"api/tags/宏基因组.json"}]},{"title":"Linux骚操作","slug":"Linux骚操作","date":"2021-01-15T07:37:43.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Linux骚操作.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill1.png","content":"<p>记录一些平时遇到的Linux问题及解决方法！</p>\n<span id=\"more\"></span>\n\n<h1 id=\"骚操作1：查杀僵尸进程\"><a href=\"#骚操作1：查杀僵尸进程\" class=\"headerlink\" title=\"骚操作1：查杀僵尸进程\"></a>骚操作1：查杀僵尸进程</h1><h2 id=\"通过top命令发现了僵尸进程\"><a href=\"#通过top命令发现了僵尸进程\" class=\"headerlink\" title=\"通过top命令发现了僵尸进程\"></a>通过top命令发现了僵尸进程</h2><p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"发现僵尸进程\"></p>\n<p>这里的aragorn和prodigal为僵尸进程。</p>\n<h2 id=\"寻找僵尸进程的父进程\"><a href=\"#寻找僵尸进程的父进程\" class=\"headerlink\" title=\"寻找僵尸进程的父进程\"></a>寻找僵尸进程的父进程</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -A -ostat,ppid,pid,cmd | grep -e <span class=\"string\">&#x27;^[Zz]&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"寻找父进程ppid\"></p>\n<p>aragorn和prodigal的父进程的ppid为133619。</p>\n<h2 id=\"杀死父进程\"><a href=\"#杀死父进程\" class=\"headerlink\" title=\"杀死父进程\"></a>杀死父进程</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -9 133619</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"僵尸进程已被杀死\"></p>\n<p>之所以选择杀死父进程是因为僵尸进程本身很难被杀掉！</p>\n<h1 id=\"骚操作2：使用sudo或nohup运行bash报错\"><a href=\"#骚操作2：使用sudo或nohup运行bash报错\" class=\"headerlink\" title=\"骚操作2：使用sudo或nohup运行bash报错\"></a>骚操作2：使用sudo或nohup运行bash报错</h1><h2 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h2><p>在终端里使用sudo或nohup运行bash的时候经常报错：-bash: syntax error near unexpected token ‘do’。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>将要运行的命令加到如下语句中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#用超级用户运行时</span></span><br><span class=\"line\">sudo bash -c <span class=\"string\">&#x27;your commands&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#服务器投后台运行</span></span><br><span class=\"line\"><span class=\"built_in\">nohup</span> bash -c <span class=\"string\">&#x27;your commands&#x27;</span> &amp;</span><br></pre></td></tr></table></figure>\n<h1 id=\"骚操作3：CentOS升级GCC\"><a href=\"#骚操作3：CentOS升级GCC\" class=\"headerlink\" title=\"骚操作3：CentOS升级GCC\"></a>骚操作3：CentOS升级GCC</h1><h2 id=\"安装SCL（第三方软件选集）\"><a href=\"#安装SCL（第三方软件选集）\" class=\"headerlink\" title=\"安装SCL（第三方软件选集）\"></a>安装SCL（第三方软件选集）</h2><p>使用下面命令安装SCL<br>SCL可以在不覆盖原有软件包的情况下与其共存，缺点就是仅支持64位<br>SCL仅支持安装devtoolset-4（gcc 5.2）（不含）之后的gcc版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y centos-release-scl</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装gcc\"><a href=\"#安装gcc\" class=\"headerlink\" title=\"安装gcc\"></a>安装gcc</h2><p>使用以下命令安装gcc，其中的9表示大版本号，默认安装大版本下的最新稳定版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"将gcc加入环境变量\"><a href=\"#将gcc加入环境变量\" class=\"headerlink\" title=\"将gcc加入环境变量\"></a>将gcc加入环境变量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;source /opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt; /etc/profile</span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"骚操作4：CentOS-7防火墙\"><a href=\"#骚操作4：CentOS-7防火墙\" class=\"headerlink\" title=\"骚操作4：CentOS 7防火墙\"></a>骚操作4：CentOS 7防火墙</h1><h2 id=\"启动防火墙\"><a href=\"#启动防火墙\" class=\"headerlink\" title=\"启动防火墙\"></a>启动防火墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">启动： systemctl start firewalld</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"开启端口\"><a href=\"#开启端口\" class=\"headerlink\" title=\"开启端口\"></a>开启端口</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --add-port=80/tcp --permanent </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重新载入\"><a href=\"#重新载入\" class=\"headerlink\" title=\"重新载入\"></a>重新载入</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看防火墙状态\"><a href=\"#查看防火墙状态\" class=\"headerlink\" title=\"查看防火墙状态\"></a>查看防火墙状态</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --state</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看当前开了哪些端口\"><a href=\"#查看当前开了哪些端口\" class=\"headerlink\" title=\"查看当前开了哪些端口\"></a>查看当前开了哪些端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --list-services</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看所有打开的端口\"><a href=\"#查看所有打开的端口\" class=\"headerlink\" title=\"查看所有打开的端口\"></a>查看所有打开的端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"骚操作5：Linux基本指令丢失修复办法\"><a href=\"#骚操作5：Linux基本指令丢失修复办法\" class=\"headerlink\" title=\"骚操作5：Linux基本指令丢失修复办法\"></a>骚操作5：Linux基本指令丢失修复办法</h1><p>如输入ls、cd、cat等基本指令提示找不到命令，可以通过以下命令修复：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"BtToxin_Digger--A high-throughput Bacillus thuringiensis toxin mining pipeline","slug":"BtToxin_Digger","date":"2020-11-04T07:38:43.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/BtToxin_Digger.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>BtToxin_Digger is the latest high-throughput Bacillus thuringiensis virulence factor mining pipeline on the whole network, including the basic web version and the local advanced version.</p>\n<span id=\"more\"></span>\n\n<h2 id=\"What-is-BtToxin-Digger\"><a href=\"#What-is-BtToxin-Digger\" class=\"headerlink\" title=\"What is BtToxin_Digger?\"></a>What is BtToxin_Digger?</h2><p>BtToxin_Digger is a high-throughput, automatic gene mining tool that can mine toxin genes, such as Cry, Cyt and Vip, etc, from <em>Bacillus thuringiensis</em>. The pipeline accepts multiple forms of input data including Reads, assembled genomes, CDSs, and protein sequences and can output rich and useful results. It is derived from the re-design of the tool <a href=\"https://bcam.hzau.edu.cn/BtToxin_Digger/\">BtToxin_Digger</a> we developed previously. Compared with BtToxin_Digger, BtToxin_Digger has many improvements, as follows:</p>\n<ul>\n<li><p>Can be run in batches, suitable for large-scale genome analysis.</p>\n</li>\n<li><p>Added genome assembly functions, including second-generation short-reads assembly, third-generation long-reads assembly, and hybrid assembly of short-reads and long-reads, to realize the full-automatic mining of genes from Reads to virulence factors. The previous three input files (assembled genomes, ORFs and protein sequences) are still supported, and genome assembly can be used independently.</p>\n</li>\n<li><p>Fixed a bug where BtToxin_Digger often reported errors when processing assembled genomes.</p>\n</li>\n<li><p>Added support for CDSs and not limited to ORFs.</p>\n</li>\n<li><p>The database has been updated, adding support for App, Gpp, Mcf, Mpf, Mpp, Mtx, Pra, Prb, Spp, Tpp, Cyt, Vip, Vpa, Vpb, Xpp and other virulence factors.</p>\n</li>\n<li><p>BtToxin_Digger generates comprehensive and readable outputs including toxin list and sequence for each input; a matrix of all strains and the virulence factors it contains (behavior strain names, listed as virulence factor names), which can be used as virulence factors contained in the strain Database; and a file writes the information and sequences of all toxins (Table 1) to facilitate centralized processing and downstream analysis and experiment designs.</p>\n</li>\n<li><p>Added multi-thread support, greatly improving the running speed of the pipeline.</p>\n</li>\n</ul>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><ul>\n<li><p>Required dependencies<br>– <a href=\"http://metacpan.org/pod/BioPerl\">BioPerl</a><br>– <a href=\"https://www.ebi.ac.uk/Tools/hmmer/\">HMMER</a><br>– <a href=\"https://github.com/cjlin1/libsvm\">libsvm</a><br>– <a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&amp;PAGE_TYPE=BlastDocs&amp;DOC_TYPE=Download\">NCBI-blast+</a><br>– <a href=\"http://www.perl.org/get.html\">Perl</a><br>– <a href=\"https://liaochenlanruo.hzaubmb.org/pgcgap\">PGCGAP</a></p>\n</li>\n<li><p>Source codes</p>\n</li>\n</ul>\n<p>The BtToxin_Digger codes can be downloaded from <a href=\"https://github.com/liaochenlanruo/BtToxin_Digger\">GitHub</a>.</p>\n<ul>\n<li>Install with Bioconda - OSX&#x2F;Linux&#x2F;WSL</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n toxin python=3</span><br><span class=\"line\">conda activate toxin</span><br><span class=\"line\">conda install bttoxin_digger</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Install with the docker container</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull quay.io/biocontainers/bttoxin_digger:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n<p>(See <a href=\"https://quay.io/repository/biocontainers/bttoxin_digger?tab=tags\">bttoxin_digger&#x2F;tags</a> for valid values for <tag>)</p>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger [Options]</span><br></pre></td></tr></table></figure>\n\n<p>Options:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[--help]                      Print the help message and exit</span><br><span class=\"line\">[--version]                   Show version number of BtToxin_Digger and exit</span><br><span class=\"line\">[--threads (INT)]             Number of threads to be used ( Default 4 )</span><br><span class=\"line\">[--SeqPath (PATH)]            [Required] The path of input sequences ( Default &quot;the current directory&quot; )</span><br><span class=\"line\">[--SequenceType (STRING)]     [Required] Sequence type for inputs. &quot;reads&quot;, &quot;nucl&quot;, &quot;orfs&quot;, and &quot;prot&quot; avaliable ( Default nucl )</span><br><span class=\"line\">[--platform (STRING)]         [Required] Sequencing Platform, &quot;illumina&quot;, &quot;pacbio&quot;, &quot;oxford&quot; and &quot;hybrid&quot; available ( Default illumina )</span><br><span class=\"line\">[--assemble_only (STRING)]    Only perform genome assembly without predicting toxins.</span><br><span class=\"line\">[--reads1 (STRING)]           [Required by &quot;reads&quot;] The suffix name of reads 1 ( for example: if the name of reads 1 is &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot;, &quot;YBT-1520&quot; is the strain same, so the suffix name should be &quot;.R1.clean.fastq.gz&quot; )</span><br><span class=\"line\">[--reads2 (STRING)]           [Required by &quot;reads&quot;] The suffix name of reads 2( not required by &quot;oxford&quot; and &quot;pacbio&quot;. For example: if the name of reads 2 is &quot;YBT-1520_2.fq&quot;, the suffix name should be _2.fq&quot; )</span><br><span class=\"line\">[--suffix_len (INT)]          [Required by &quot;reads&quot;] (Strongly recommended) The suffix length of the reads file, that is the length of the reads name minus the length of the strain name. For example the --suffix_len of &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot; is 26 ( &quot;YBT-1520&quot; is the strain name ) ( Default 0 )</span><br><span class=\"line\">[--short1 (STRING)]           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</span><br><span class=\"line\">[--short2 (STRING)]           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</span><br><span class=\"line\">[--long (STRING)]             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</span><br><span class=\"line\">[--hout (STRING)]             [Required] Output directory for hybrid assembly ( Default &quot;../../Results/Assembles/Hybrid&quot; )</span><br><span class=\"line\">[--genomeSize (STRING)]       [Required] An estimate of the size of the genome. Common suffixes are allowed, for example, 3.7m or 2.8g. Needed by PacBio data and Oxford data ( Default 6.07m )</span><br><span class=\"line\">[--Scaf_suffix (STRING)]      The suffix of scaffolds or genomes ( Default &quot;.filtered.fas&quot; )</span><br><span class=\"line\">[--orfs_suffix (STRING)]      The suffix of orfs files ( Default &quot;.ffn&quot; )</span><br><span class=\"line\">[--prot_suffix (STRING)]      The suffix of protein files ( Default &quot;.faa&quot; )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><ul>\n<li>Processing Illumina paired-end Reads</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Illumina Reads PATH&gt; --SequenceType reads --platform illumina --reads1 &lt;suffix name of reads 1&gt; -reads2 &lt;suffix name of reads 2&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing PacBio long Reads</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;PacBio Reads PATH&gt; --SequenceType reads --platform pacbio --reads1 &lt;suffix name of PacBio reads&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Oxford long Reads</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Oxford Reads PATH&gt; --SequenceType reads --platform oxford --reads1 &lt;suffix name of Oxford reads&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Hybrid Reads (Long reads + illumina short reads)</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Reads PATH&gt; --SequenceType reads --platform hybrid --short1 &lt;short reads 1&gt; --short2 &lt;short reads 2&gt; --long &lt;long reads&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Assembled genomes</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Assembled genome PATH&gt; --SequenceType nucl --Scaf_suffix &lt;suffix of genomes&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Protein sequences</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;Protein file PATH&gt; --SequenceType prot --prot_suffix &lt;suffix of protein files&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Processing Coding sequences</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BtToxin_Digger --SeqPath &lt;CDSs file PATH&gt; --SequenceType orfs --orfs_suffix &lt;suffix of orfs files&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Outputs\"><a href=\"#Outputs\" class=\"headerlink\" title=\"Outputs\"></a>Outputs</h2><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;*</strong>: Genome assembly results;</p>\n</li>\n<li><p><strong>Results&#x2F;Toxins&#x2F;*.list</strong>: Toxin list of each strain;</p>\n</li>\n<li><p><strong>Results&#x2F;Toxins&#x2F;*.gbk</strong>: Toxin sequences in Genbank format of each strain;</p>\n</li>\n<li><p><strong>Results&#x2F;Toxins&#x2F;Btallgenes.table</strong>: A matrix describes Strains vs. Toxins;</p>\n</li>\n<li><p><strong>Results&#x2F;Toxins&#x2F;All_Toxins.txt</strong>: A table containing all information and sequences of all toxin genes. See table 1 for details.</p>\n</li>\n</ul>\n<h2 id=\"Contents-of-list\"><a href=\"#Contents-of-list\" class=\"headerlink\" title=\"Contents of *.list:\"></a>Contents of *.list:</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Overview of prediction \t Sequence type: nucl</span><br><span class=\"line\">Name\tCry\tCyt\tVip\tOthers\tSummary</span><br><span class=\"line\">Rank1\t1\t0\t0\t0\t1</span><br><span class=\"line\">Rank2\t0\t0\t0\t0\t0</span><br><span class=\"line\">Rank3\t0\t0\t0\t0\t0</span><br><span class=\"line\">Rank4\t10\t0\t1\t1\t12</span><br><span class=\"line\">HMM_SVM\t0\t0\t0\t0</span><br><span class=\"line\">Summary\t11\t0\t1\t1\t13</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Toxin type: Cry protein</span><br><span class=\"line\">ID\tProtein_ID\t\tProtein_description\tLength\tRank\tBLAST\tBest_hit\tHit length\tCoverage\tIdentity\tSVM\tHMM</span><br><span class=\"line\">1\tNHPK02000085.1_00018\t+2 19034-20206 len=391\t391\tRank1\tYES\tCry78Aa1\t359\t\t97.21\t\t32.66\t\tNO\tNO</span><br><span class=\"line\">2\tNHPK02000099.1_00001\t-1 5374-7407 len=678\t678\tRank4\tYES\tCry2Ab35\t633\t\t100.00\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">3\tNHPK02000115.1_00002\t+2 2-1342 len=447\t447\tRank4\tYES\tCry1Da2\t\t1165\t\t38.37\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">4\tNHPK02000115.1_00006\t+3 4275-7898 len=1208\t1208\tRank4\tYES\tCry1Ca15\t1189\t\t100.00\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">5\tNHPK02000153.1_00001\t-1 4176-6365 len=730\t730\tRank4\tYES\tCry1Ia40\t719\t\t100.00\t\t100.00\t\tYES\tYES</span><br><span class=\"line\">6\tNHPK02000168.1_00002\t-3 1673-5146 len=1158\t1158\tRank4\tYES\tCry9Ea9\t\t1150\t\t100.00\t\t100.00\t\tYES\tYES</span><br><span class=\"line\">7\tNHPK02000196.1_00001\t+3 723-2942 len=740\t740\tRank4\tYES\tCry1Da2\t\t1165\t\t63.43\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">8\tNHPK02000240.1_00001\t+2 2-1813 len=604\t604\tRank4\tYES\tCry1Ac16\t1178\t\t51.27\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">9\tNHPK02000243.1_00001\t+2 2-1738 len=579\t579\tRank4\tYES\tCry1Aa18\t1225\t\t47.27\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">10\tNHPK02000256.1_00001\t+2 2-1294 len=431\t431\tRank4\tYES\tCry1Ac30\t1178\t\t36.59\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">11\tNHPK02000386.1_00001\t-2 3-530 len=176\t176\tRank4\tYES\tCry1Ab11\t695\t\t25.32\t\t99.43\t\tNO\tYES</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Toxin type: Cyt protein</span><br><span class=\"line\">ID\tProtein_ID\tProtein_description\tLength\tRank\tBLAST\tBest_hit\tHit length\tCoverage\tIdentity\tSVM\tHMM</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Toxin type: Vip protein</span><br><span class=\"line\">ID\tProtein_ID\t\tProtein_description\tLength\tRank\tBLAST\tBest_hit\tHit length\tCoverage\tIdentity\tSVM\tHMM</span><br><span class=\"line\">1\tNHPK02000099.1_00004\t-3 10013-12397 len=795\t795\tRank4\tYES\tVip3Aa12\t789\t\t100.00\t\t100.00\t\tNO\tYES</span><br><span class=\"line\">//</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Toxin type: Other toxins</span><br><span class=\"line\">ID\tProtein_ID\t\tProtein_description\tLength\tRank\tBLAST\tBest_hit\tHit length\tCoverage\tIdentity\tSVM\tHMM</span><br><span class=\"line\">1\tNHPK02000017.1_00027\t-3 15272-16258 len=329\t329\tRank4\tYES\tZwa5B-other\t322\t\t100.00\t\t99.07\t\tNO\tNA</span><br><span class=\"line\">//</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Contents-of-gbk-Partial\"><a href=\"#Contents-of-gbk-Partial\" class=\"headerlink\" title=\"Contents of *.gbk (Partial):\"></a>Contents of *.gbk (Partial):</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOCUS       NHPK02000017.1_00027        77664 bp    dna     linear   UNK</span><br><span class=\"line\">ACCESSION   NHPK02000017.1_00027</span><br><span class=\"line\">FEATURES             Location/Qualifiers</span><br><span class=\"line\">     Segment         complement(15272..16258)</span><br><span class=\"line\">                     /ETX_MTX2=&quot;NO&quot;</span><br><span class=\"line\">                     /Endotoxin_C=&quot;NO&quot;</span><br><span class=\"line\">                     /Endotoxin_M=&quot;NO&quot;</span><br><span class=\"line\">                     /Endotoxin_N=&quot;NO&quot;</span><br><span class=\"line\">                     /Endotoxin_mid=&quot;NO&quot;</span><br><span class=\"line\">                     /Rank=&quot;Rank4&quot;</span><br><span class=\"line\">                     /Segment_name=&quot;NHPK02000017.1_00027&quot;</span><br><span class=\"line\">                     /Toxin_10=&quot;NO&quot;</span><br><span class=\"line\">                     /blast_detail=&quot;Query_desc:-3 15272-16258 len=329</span><br><span class=\"line\">                     Query_Length:329\tQuery_Start-End:8-329\tHit_id:Zwa5B-other</span><br><span class=\"line\">                     Hit_desc:AAZ67352.1\tHit_length:322\tHit_Start-End:1-322</span><br><span class=\"line\">                     Aln_length:322\tPercent_identity:99.0683229813665</span><br><span class=\"line\">                     E-value:0.0&quot;</span><br><span class=\"line\">                     /blast_prediction=&quot;YES&quot;</span><br><span class=\"line\">                     /hmm_detail=&quot;&quot;</span><br><span class=\"line\">                     /hmm_prediction=&quot;NA&quot;</span><br><span class=\"line\">                     /locus_tag=&quot;NHPK02000017.1_00027&quot;</span><br><span class=\"line\">                     /protein_desc=&quot;-3 15272-16258 len=329&quot;</span><br><span class=\"line\">                     /protein_id=&quot;NHPK02000017.1_00027&quot;</span><br><span class=\"line\">                     /protein_len=&quot;329&quot;</span><br><span class=\"line\">                     /svm_prediction=&quot;NO&quot;</span><br><span class=\"line\">                     /translation=&quot;YRNEEAIMMYLNTKHINEMGVNWEETINVISKAVQSLDAEDFSQ</span><br><span class=\"line\">                     PIKPYLRFDDPANRIIAMPAYIGGEFKVSGIKWIASFPKNIEKGIQRAHSVTILNDAM</span><br><span class=\"line\">                     TGKPFATLNTAMVSVIRTASVTGLMIREFAKLRDLNNVKVGIIGFGPIGQMHLKMVTA</span><br><span class=\"line\">                     LLGDKIESVYLYDINGIKDELIPEDIYSKTQKVNAYEEAYNDADIFITCTVSAEGYID</span><br><span class=\"line\">                     KKPKDGALLLNVSLRDFKPDILEYTKSLVVDNWEEVCREKTDVERMHLERGLQKEDTV</span><br><span class=\"line\">                     SIADVVIRGALQNFPYDKAILFNPMGMAIFDVAIAAYYYQRAREKEIGVLLED&quot;</span><br><span class=\"line\">ORIGIN      </span><br><span class=\"line\">        1 cttctaaccg caaggactgc ggggttagcc taatcaatta gagttcgata gaactcttta</span><br><span class=\"line\">       61 cttaggaatc cctcacttct aaacgaagtg aaagtggggt tagttcaaaa ctattaacta</span><br><span class=\"line\">      121 taatataccc tttcaagaaa ttttaaaaag gttgaagtag ccaaaaaata ttttccggaa</span><br><span class=\"line\">      181 taattagatt aatttctctt ttttgtatat ttatgttaaa ttattgttat cactacaaat</span><br><span class=\"line\">      241 ttattgaata attttaatac tctccccttt atactatggt aatatgtttt tcacaataca</span><br><span class=\"line\">      301 tattaccact ataattgcaa acatatataa acccatattt agaattttta agattctttc</span><br><span class=\"line\">      361 atagcattaa gatatttttt accttttagt ttgtttattc ttaattttta aactaaaata</span><br><span class=\"line\">      421 atatatattg gtaataatta aataaaattc caataattat aggaaggaga aaattatgaa</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Table-1-Description-of-“All-Toxins-txt”\"><a href=\"#Table-1-Description-of-“All-Toxins-txt”\" class=\"headerlink\" title=\"Table 1. Description of “All_Toxins.txt”\"></a>Table 1. Description of “All_Toxins.txt”</h2><table>\n<thead>\n<tr>\n<th align=\"left\">Header</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Strain</td>\n<td align=\"left\">The name of your input</td>\n</tr>\n<tr>\n<td align=\"left\">Protein_id</td>\n<td align=\"left\">The protein ID</td>\n</tr>\n<tr>\n<td align=\"left\">Protein_len</td>\n<td align=\"left\">The length of protein sequence</td>\n</tr>\n<tr>\n<td align=\"left\">Strand</td>\n<td align=\"left\">Positive or negative strand where the gene comes from</td>\n</tr>\n<tr>\n<td align=\"left\">Gene location on scaffold</td>\n<td align=\"left\">Gene coordinates on the genome</td>\n</tr>\n<tr>\n<td align=\"left\">SVM</td>\n<td align=\"left\">Is the protein predicted by SVM</td>\n</tr>\n<tr>\n<td align=\"left\">BLAST</td>\n<td align=\"left\">Is the protein predicted by BLAST</td>\n</tr>\n<tr>\n<td align=\"left\">HMM</td>\n<td align=\"left\">Is the protein predicted by HMM</td>\n</tr>\n<tr>\n<td align=\"left\">Hit_id</td>\n<td align=\"left\">The subject sequence ID</td>\n</tr>\n<tr>\n<td align=\"left\">Hit_length</td>\n<td align=\"left\">The length of subject sequence</td>\n</tr>\n<tr>\n<td align=\"left\">Aln_length</td>\n<td align=\"left\">alignment length (sequence overlap)</td>\n</tr>\n<tr>\n<td align=\"left\">Query start-end</td>\n<td align=\"left\">Start and end of alignment in query</td>\n</tr>\n<tr>\n<td align=\"left\">Hit stard-end</td>\n<td align=\"left\">Start and end of alignment in subject</td>\n</tr>\n<tr>\n<td align=\"left\">Identity</td>\n<td align=\"left\">Percentage of identical matches</td>\n</tr>\n<tr>\n<td align=\"left\">Evalue of blast</td>\n<td align=\"left\">Expect value of BLAST</td>\n</tr>\n<tr>\n<td align=\"left\">Hmm hit</td>\n<td align=\"left\">The subject model ID</td>\n</tr>\n<tr>\n<td align=\"left\">Hmm hit length</td>\n<td align=\"left\">The length of subject model sequence</td>\n</tr>\n<tr>\n<td align=\"left\">Evalue of Hmm</td>\n<td align=\"left\">Expect value of HMM</td>\n</tr>\n<tr>\n<td align=\"left\">Nomenclature</td>\n<td align=\"left\"><a href=\"http://www.lifesci.sussex.ac.uk/home/Neil_Crickmore/Bt\">Bt nomenclature</a> containing 4 Ranks</td>\n</tr>\n<tr>\n<td align=\"left\">Endotoxin_N</td>\n<td align=\"left\">Whether the Cry protein contain Endotoxin_N domain</td>\n</tr>\n<tr>\n<td align=\"left\">Endotoxin_M</td>\n<td align=\"left\">Whether the Cry protein contain Endotoxin_M domain</td>\n</tr>\n<tr>\n<td align=\"left\">Endotoxin_C</td>\n<td align=\"left\">Whether the Cry protein contain Endotoxin_C domain</td>\n</tr>\n<tr>\n<td align=\"left\">Endotoxin_mid</td>\n<td align=\"left\">Whether the Cry protein contain Endotoxin_mid domain</td>\n</tr>\n<tr>\n<td align=\"left\">Toxin_10</td>\n<td align=\"left\">Whether the Cry protein contain Toxin_10 domain</td>\n</tr>\n<tr>\n<td align=\"left\">ETX_MTX2</td>\n<td align=\"left\">Whether the Cry protein contain ETX_MTX2 domain</td>\n</tr>\n<tr>\n<td align=\"left\">Gene sequence</td>\n<td align=\"left\">The nucleotide sequence of the toxin</td>\n</tr>\n<tr>\n<td align=\"left\">Protein sequence</td>\n<td align=\"left\">Amino acid sequence of the toxin</td>\n</tr>\n<tr>\n<td align=\"left\">Scaffold sequence</td>\n<td align=\"left\">The scaffold sequence where the toxin gene is located</td>\n</tr>\n</tbody></table>\n<h2 id=\"Table-2-The-contents-of-“All-Toxins-txt”-Partial\"><a href=\"#Table-2-The-contents-of-“All-Toxins-txt”-Partial\" class=\"headerlink\" title=\"Table 2. The contents of “All_Toxins.txt” (Partial)\"></a>Table 2. The contents of “All_Toxins.txt” (Partial)</h2><table>\n<thead>\n<tr>\n<th align=\"center\">Strain</th>\n<th align=\"center\">Protein_id</th>\n<th align=\"center\">Protein_len</th>\n<th align=\"center\">Strand</th>\n<th align=\"center\">Gene location on scaffold</th>\n<th align=\"center\">SVM</th>\n<th align=\"center\">BLAST</th>\n<th align=\"center\">HMM</th>\n<th align=\"center\">Hit_id</th>\n<th align=\"center\">Hit_length</th>\n<th align=\"center\">Aln_length</th>\n<th align=\"center\">Query start-end</th>\n<th align=\"center\">Hit stard-end</th>\n<th align=\"center\">Identity</th>\n<th align=\"center\">Evalue of blast</th>\n<th align=\"center\">Hmm hit</th>\n<th align=\"center\">Hmm hit length</th>\n<th align=\"center\">Evalue of Hmm</th>\n<th align=\"center\">Nomenclature</th>\n<th align=\"center\">Endotoxin_N</th>\n<th align=\"center\">Endotoxin_M</th>\n<th align=\"center\">Endotoxin_C</th>\n<th align=\"center\">Endotoxin_mid</th>\n<th align=\"center\">Toxin_10</th>\n<th align=\"center\">ETX_MTX2</th>\n<th align=\"center\">Gene sequence</th>\n<th align=\"center\">Protein sequence</th>\n<th align=\"center\">Scaffold sequence</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1126_1</td>\n<td align=\"center\">NHPK02000017.1_00027</td>\n<td align=\"center\">329</td>\n<td align=\"center\">-3</td>\n<td align=\"center\">10001-10987</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">YES</td>\n<td align=\"center\">NA</td>\n<td align=\"center\">Zwa5B-other</td>\n<td align=\"center\">322</td>\n<td align=\"center\">322</td>\n<td align=\"center\">8-329</td>\n<td align=\"center\">1-322</td>\n<td align=\"center\">99.0683229813665</td>\n<td align=\"center\">0.0</td>\n<td align=\"center\">NA</td>\n<td align=\"center\">NA</td>\n<td align=\"center\">NA</td>\n<td align=\"center\">Rank4</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">NO</td>\n<td align=\"center\">GTCTTCTAATAAAACACCTATTTCCTTTTCCCTAGCCCTTTGATAGTAATAAGCAGCAATGGCTACATCAAAAATGGCCATACCCATTGGATTAAATAATATTGCTTTGTCATAAGGGAAGTTTTGCAGTGCTCCTCGGATTACAACGTCAGCAATTGATACTGTATCTTCTTTTTGTAAACCTCTTTCAAGGTGCATCCTTTCAACATCAGTTTTTTCACGACAGACTTCTTCCCAATTATCAACAACTAGGGATTTTGTATATTCTAAGATATCAGGCTTAAAATCACGAAGAGAAACATTGAGTAGTAGCGCTCCATCTTTAGGTTTCTTATCAATATAACCTTCTGCAGAAACAGTACAAGTAATAAAAATATCAGCATCATTATAGGCTTCTTCATAAGCATTAACCTTTTGAGTTTTAGAATAAATATCCTCAGGAATTAATTCGTCTTTAATTCCATTGATATCATATAGGTAAACACTTTCGATTTTATCGCCTAATAGGGCAGTTACCATCTTTAAATGCATCTGACCAATAGGTCCAAATCCAATAATTCCAACTTTAACATTATTTAAATCTCTTAACTTGGCAAACTCTCGAATCATTAACCCTGTTACAGAAGCTGTTCGTATTACACTGACCATTGCTGTATTAAGCGTCGCAAATGGTTTTCCAGTCATAGCATCATTTAATATAGTAACTGAATGAGCACGTTGAATACCTTTCTCAATATTCTTCGGAAAACTAGCTATCCATTTGATTCCTGAAACCTTAAATTCTCCTCCAATATAAGCTGGCATAGCAATAATTCTATTAGCCGGATCATCAAAACGTAAGTATGGCTTAATTGGCTGAGAAAAATCTTCTGCATCAAGACTTTGTACTGCCTTTGAAATGACATTTATTGTTTCTTCCCAATTAACACCCATTTCATTGATATGTTTAGTATTTAAATACATCATAATTGCTTCCTCATTTCTATA</td>\n<td align=\"center\">YRNEEAIMMYLNTKHINEMGVNWEETINVISKAVQSLDAEDFSQPIKPYLRFDDPANRIIAMPAYIGGEFKVSGIKWIASFPKNIEKGIQRAHSVTILNDAMTGKPFATLNTAMVSVIRTASVTGLMIREFAKLRDLNNVKVGIIGFGPIGQMHLKMVTALLGDKIESVYLYDINGIKDELIPEDIYSKTQKVNAYEEAYNDADIFITCTVSAEGYIDKKPKDGALLLNVSLRDFKPDILEYTKSLVVDNWEEVCREKTDVERMHLERGLQKEDTVSIADVVIRGALQNFPYDKAILFNPMGMAIFDVAIAAYYYQRAREKEIGVLLED</td>\n<td align=\"center\">TCTCAATACGAACCAGTAAAAATGGTTCAGGGCGTTGAAGATACTGGACGTAATTCTTTTAGCCAAGCTAGTTTTTCAAACGTACTTCTAAGAACAGATACATCTGGAGCTACCTACAAAAGTTGGAACGGTTCAATTTCTTCCTCATTTTCTAAACACGGTACTTATGGTAACAGTTTCACAGTTTATTCTCAAGTGCCATTAAGCGCAAGTTTACGCTAAAATTGTTCTTGTATACGAATAATTTTGTGAAAAAGGTAGCTGTACTTTTGTACAGCTACCTTTTTCATATGGTGAATTTTTAATAGATATTGTATCAGACATAAGTTACATTCTTCATATTTTAACTTCTTTGAATTCAATAATACTTAATCAGCTTGTCTTATTACTTCACTTAACGTATCGAGATACAGCTTATAGCAACTACAACACGCTTTATTATTAATAATACCACTCTTCTTAATTTAACTTTAATTCCATTGCATTGATTTTTTAATAATAAATATACAACTTAGTAATGATAATAGATATACAATAAGAATAATATACAACTGTTTTGGTTCAATGCTATCGATATAAAGACTCATAATTGGATATGACCAAGGAAACAGTATCCAATAGTTTGTATGCGAGATAAAAAAGCTACCCAACCCGCCTATAACCCCTACTAATAATGAAAGTAACGGGATTTTATAAAATATTATATTTATTAAAAAATGTAAATTCACAATAGTTAAAGAGCTAATCACCATAAAAAGTATAGAAAAAATTAATCTTTGATAAACAGTCCCAAGATTATCAACCGTTAATACTATAGGTATACTAGTTATGACTAAAGCACATATTAAATAACCAAAAGTAATTATTAAGCAAAACAAAAACTTATTACTTAATATAGTTTTTAAAGTGATTCCGTGATAAATAGCAGACATATATCCTTTTCTTCTGAACTCGTTTACAAAAGAAAATGACACTAATAGACCTATTGCAATAGGTAAAAATAATCTACAAAAAAGACTTAGAATCGCTATATGCATGAAAACGCCATCTTTTGATTGAGATGATACAGTTAGAAAGATTTGAAAACTAATTGGTATCAACAGAAATACTAGTAACAGGATATACAATCCATTATGAAGACTTTTTTTATATTCACCTAATATACCCACTTATTTCACCCTTTATTATTCATATGTATAATATTTAAAACTCACAGCTAATAACATAATTCCTAAAATATAGATTGAAGAACTTGCAAGATATATTAAAATAGTTGTTTCTTTCATCATTACATCACTTACTATATTCAATGCATAAAATATTGGAAATGTCTTTGTGAATACTACAGGAAATAATCCATAAGTTACGCTAAAAAAAATCCAAATAACTGACAAGGACGCCGCAAGAATTCCCTTTTTTATAATCAAATGAAAAAGTAATTGAGAATATGGTATTGCTAAAGATAGAATTGTACAAAGCATCAACATTTTCAAAAAATAAAGTATAGATATTTCATATCCATTTATAAAAATATAGATACCCATAACTGAAAAATTTAAAATATTAAAGATTAAATAAAACAGTATAAACAATAAATTTTTAGCTACCAATAATTTAAATTTTGAAATTGGCTTTGTATAGATAATGGCCCAAGTACCATATTTATTTTCAGAAGAAATGATAAAATACCACATACAAGCAGAAAAAATGCTTAATGTTAGTGTATTAAAGTTTACTGTAATTGCTATAAGATTGGTAGATTGAAACATATCGGGATTATTCTTGTTAAAAATAAAATAACTTATACACAAAAAGCTTGATAATAATGAAAAAAACAAAGAAAATAACAATAATTTTCTCCCACCAATTTTCCTCATCTCACTATTCACACTTTTAAAGATAAATTGCATTATGATAGTAACTCCTTTTGTTTAGTTAAAGATAAAAATACTTCCTCTAATGTTAGCTTTTTAGGGCTAACTTCAAAAATATCTATATCATTTTCAATTAATATTCTGGTTAAATTAGGAACACTATTTTGATCTATCATTAGTTTGAATACCCCTTCTTTTTCTATGCTATAAGGTATATCCTTTGTATTTAAAATCCTTTCTGTGGCAGTAGTGTCATTAACATGAACAATATATTCTCTAGAAGTAATAATACTGTTTAAATTCCCTTCATAGAGTAAGTTACCCTTATGCAGTAATGCTATGTAATCTGCTATCATTTCGATTTCAGCTAAATTATGACTAGAAATAAATATTGTCTTCCCCTCATTTTTTACTAAATGAAGTAATAAGCGCCTTATCTCGTGTACTCCCTCTGGGTCTAATCCATTTGTCGGCTCATCAAGAATTAGTATTTTAGGATCATTAAGAATAGCAAAGGAAATACCTAGCCTTTGTTTCATTCCTAAAGAAAAATCTTTCACTTTTTTATCTTTTGCTTTATATATTCCTGTAATTTTTAATACTCTGTCTATTTCATCTAAAGGCTTATTAATCATTTTTTGTACATAGGCTAAATTTTCATATGCTGTCAAATTAGGATAGTAGGTAGGTGAATCAATAAAACAACCCACATTTTCAAATAATTCTTCTTTCCAATCTTTGATATCTTTATTATTAAATAATATCGTTCCTTTATCTAATGGAATTAATCCTAATAGCATTCGCATTGTTGTTGTTTTTCCTGCACCATTTGGTCCAATAAAAGCATATAAACTTCCTTCAGGAACAGATAAGTTTAAATCCCTTACAATGGATTGATTGTCAAAAGACTTTGTTAAATTTTTAGTTTGGATTGCTAATTTCATTTTGTTCCTCACTTTCTTATTCTCAAATAAAAGTAAGTATCTATTAAATTCTTGATCTATTAGATATTCTATTTACCCTTTACCTAATGTTTGCAATTTGGATTTAGAAAATATTTCTCGTTGTTTTAATTTTTTATCAGTAAGTTCATAAACTCTATCTACACGCTCTAAAATATTTTCATCATGAGTGATAATAATCTTAGTGGATGGTATGGCAAATATATTTTCAATAACAGCATTTGCCGTTTCCCTATCTAAATGGTTAGTTGGTTCATCCAAAATAAGAATCGGATATTCTTTCATGAACAATCGTAACATAGCCAACCTTTGTCTTTGGCCACCGGAGAAATTTGTTCCTCCCTCTGAGATTAAAATATCATTTATACTTTGAAATTGAATATAATTACTCAGATTCAATTTATCAATAGACTCCTGGATTTTTGAAGGATCATAATTTATATCAAAGTAAGATAAATTCTCAGATAAACTTCCTCTAAATAAAACTCCATCCTGAGTCATTAGTCCTACATTTTTTCTTAGTTCCTCACTGTTCCAATCTTTAATATCTCTATCGTCTATTAATATATTACCCTTATCGGGAGTATGCAATTTTAATAATAAGTTAGCTAAAGTGGACTTACCACTGCCACTTTCTCCAACAATAGCAATACTTTCGTTATTTTTAATGTTCAAACTTAAGTTTTCTATTATTTTTTTGTCATCAAAACTAAACGAAATATTATTAAATTGAATCGATCCTCTAAGAATGTTTACTTTAGTATCCGATCCATCTTTTTCTAGTTCCTCTTCCAAGATATCTAAAGTTCTTAATAAAAGTGGTTTAACTGAATTCCAATTTAAAATTGATCCTATAATTGTTGAAACCGGAGAAAATATAATACTAGATATAGCAATAAAGAAGAAAATATTACTTAAATCCCCTTCTCCTTTACTAAAATTATAAAATCCTACAGCAAGCATTATGATAATAAATATTGTTGATAGGGAACTATTAAATGATTCTAAAGCATTTTGTTTTAGCGCTCGTTTATGTACTGTATCTAAGTATTTATTATAATCTTTTTGCCATACAGATTTAATTCTAGAAAAAATCCCTGTAGCCTTTACATAATACATCGCTTTTAATGATTCATTAATTTTCCCTCTATGTTCTCCTAGGTAATACGTTTCGACTAAATTAGCATTATATATGAATTTCCCTAAGGAAATATTGATAAATAGGGAACTAGCAATAAAAAACATCAATATTAAAGTATAAAAAGTCTCAGTATATAATAGATACATCAATAATGGAATGATAACTACTATTGATATAATCATTTCAATTAGATCCTCTAAAATATATCCTCGTATTGATTCTAGGCTCATGATTCTTACATTTAAATCCCCTGCATGACGTGTAGTAATTTTTTCTATGGGGGTATTAAACATATGCTCAAAAACTTTTGTTGTACTTTTTCTATCAATTTCTTTCTGAAAGTTTACTTTTATAATAGAAGTTATAGATTTTATCCCTATAACAACGATTAAACTTCCCAAAATAATTAAAAGGTATCTTACATCCACTTCCTTTGAAGCATTCAAAATATCCATAAACTTTTTCAAAATAAAGGGGAAAGCAAGAATTGAGATTTGTGCTAACAATGCTAATAGTGCTAATAAAACAATCTGGCTAGGAGATACAAAATGATCAATATATCTAAGTAATATATGTTTTTCACGCCTTTTAGTATTTGGCTGTATATCTTTTTTGTTTTCTATTACTAGGATATAGTCACAGAACATTTCCTCAAAACTTCTTATATCAATTATCATCGGCCCTGCCTTAGGATCTACAATATAAAATTTATTTGCTTTAACCCTTTCAATAATTACAAAGTGATTAAAGCCCCAAAATGCTATCATCGGCTTTTGTATCCTTTGTAAATCAGTTATATTTTCTATCCTATATGCAGTTGCAGAAAGTCCATACGATTTACTAACTTTTTTAATATCCAACAAACTCCATGCCGATTTTTTATTGATAATTTTACTATTTCTAATTTCCGAAGCTTGTACTGCTGAACCATAATAATGCATAATCATTGCTAGACAACTAGGCCCACAATCAAAAGATGTCATTTGCGGTATAAATTTAATTTTCTTCCTTAACATATTTATCACCTATTCTAGGCATTAAAGTATAAAATGCTATTTAGTTTATTATCCTCTAACCTTTGTAAAAAATACAAAATACTTCCTAGCCCTGTAAATAATGCGATTTTATGAGGATTAAAATCTTCTATATCAAAATTATTCAAAAAGTTATTTGTTACTTTCATAACAATTTGTTTTTCATTGCGCTCGAGCATACCTCTATTTTCTAGCTCCAATAAAAAGTCTAGTTTCCCCATTAAACCATGACATAAACAATAATCACTATTTTCATGTAATGTACTTAAGATTTGTTTTTTAAAAAAAATTAAATCTGATTGTATATCCTCATTTTGATACGATTCTAAAATTTTAATTCTCGAGATTCCCATTCCACTAAATCCTTTACACCAGCTATCTGTATACTCATATTCACTCATACTCATTTTCTCACTTTTATGTATACCATGTATTACTCTATCGTACTTATTTGTTTTTAATATGCCTTTTAACTTATAAAATGCGAGAAGTTGTCCTGATAATCCATGAACAAACCCCTTTAATGAATCCTCTAAATTTAGAGTATCGTGAGCTTTCCAATATACAAATTCATTATGTGTTTGCATATTATTGACAATGTAGTCACCGAGATTTTCAGCCACTTTAAGCAATATTTTATAATTAGGATTAATTTGATAGAACTTAACTGCCGTTAAAATTAGACCAGCTGAACCCCCTAATATATCAAAATGCTTATCGCTATATTTACCTTTTTCAATATCAGAGTTGACATCCATAAATATTTGCAATATCAATCTTTCATCGATAGATGTTATATGTGGTAAATTTGTTAAATAGTAAGAAATAATTGCATTAACACCATTTACAAAACCATAATTATTTTTATTTTTGTTTAATATTTCTTGCAGGGCTTTTTGTTCAAGTTTATTTATAATTTCAATCTGATTAGGATCAGCATTATTTCTCAATAATGAACTTATTCCCAATAATCCATCATATATTCCACTATTCAAATGGTTTATCTCAAGCTCCCCTTGCCAATTTGTTTTTAATCCAATAAAATCTACAGCACCGTCTTTTGATATATAACTGCCATCAAGAATTTTCCCTGTAATTGCTTCCTTTATTTTATTTGTAGGTAAATTAGTTCGAAAATTAATTGTTTCCTTTACTGTATTCAGCTTATATAGATTGTCATTTTGATTAGAAAGGGATATTTCTATAATTTTTCTTTGTAATAAAAAGTCAGCATATGAAATTTTTTTAAATTTTGTTTCTAGATCTATTTCATTATTTGATAAACTTTCGCAAGACTCCCATTCATACTTATTAAAGAAATATGGAACATCATAGGATAATAGTGCCTCTATCTCTTTTTGAATAATATCTTTCCTAGTAGCCAAGTATATGTTTTTTTCAAGAATATTCCGCAAATATTTTATAGTCTTTAATTTATTCTCTAATAAATCCGGAACATTTAGTCTATCTAATAAAAGGGTATAGACTTTTGTATTTCGATATACTTTTCGATAATTCCATTTAGAAACACTATTTTTTAATATACACATATACTCCTCTTTGTTTTTTAAAACTGAGTTATATGCATTCTCAAAACCTTTAATAATATCATCTATATAATTATCATACTCGTATATATCATCGTTAAGAAACGGTAAATTCTGAACCGTATCTTCTACTATTGTCTCTTCTCTTATTTCAATTGGATTCGATGTAAATTCATTTTTTATTTTAATTGTTTTTACCAAAGACTTCATTACTCTCCCAATTGCACTGTAATCTCTTATTACCTCCCTACCTCCACTAAACCTTATAGGTAGCATTCTAGAATTTAATACTGAATTAGATAATATAAAACTACTGGTTTCTTCAGTAACACTTGGATTTAATGTACTTCCTAATGTCTCAAAATCAATTATGACTGGTGAGGATTGTTTAGCTATGATATTTTCATTATGTATGTCACTTCCATTAATCAAATACATTACCGAAAGCACTACACCTAAATTATAATAATAATCTTTAATTTGCTCATTAGATTCACATGATTCATGATTAATGTATTCCATATATCCATAATTTCTTTTATTAACTACTTGCGGAATAAAGATATCCGTATTTAAATCTTTATTCAGTTGATTAATTAAACTATGATATAGTATAGAATTTTTCAAATCGACTGGTTTTAAAATTACCTTATTATTAAATTTATCTTCTAAAAGAATTGTTCTCTTTCCATTATTATGGTAGTCACCTAGGTTAATAACTTTTTCTACATGCATAATATTAAAACCCGACATTTTATGAATTTCTTTTTGATCTTTTTCAAGAGCACCTTGCAACCAAATCATATAATTTATTTCATTTTCAATGATTGTAAAAATTTTTTCGTTTAATACGGGTAATATTTTAAAAAAATTCATATAAAATTTTTTAAAATGAAAGAAGTTCTTTGTAAAATACTTATATTCTTCATTGGTATCCATTCCTCTTAAAGCATTTTCTACCCTAAGTTTATTTATGTATACAATTAAGGATGGCCTTAATACTTGGTATAGTCTTTTTTCTAAATCAAACATTATCGATTCAGAAACCTTCTCAAAATTACCAAAAAAATCAATTTTATTTATTATCATATTTTTAAAGAATACTACATATGTTTGTATTATTTTTTGAAAGTTATAGTTTTCGTCATCCTTAATGACATCATTACATGAAAAACCCTCTAAAAAGATAACAAAATTTTTTTCTAGATATTCTTTTGTTACTAAAGAATGTGATCCATTATCTATTGTATTCAAAATTCCATGTGAATTATTTTTCATAATAACCTCTTCTTTTTATAGGTAGGAGAAACAGTTAGAAATTCATTCTCATTAAAGAGAGTAAGGCCTTTCGCCTTACTCTCTTTAACTATTAGTAGCATTTTTTACAAATTCTTTGTCCCATAATCGTGACACATGCTACAGGCACATTCCAAGGACAATCTTTAGTTAAAGTTTCAACCCAACCAGGTCCTGCTCCACCAACTAATTGTTCAATCTCTTCATCTTCTACGACTTGTAAATATTTTTCAGTTTCCATTTCAATACCTACCTTTTATTTTTTTGAAAATGATGTTATAAATTCAATAATTTACCACAACATTATCTAAAAACAATATACCATTAAATGTTAATAAAAAAAAGATATATTTATAGAAAAATAAAATAATAGGATATTTAACTATATTAATATAATTAAAGGAGACTCACTTACTATATCATTAAAATTTAAAGGCTATTTTCCAAGTTAATATTTTTAAAATTTTATAAATTTATTAATAATCAATGCTGTTTAATAATTTAAATAATTCTTCTAATACCTGAATAACGATTAAGAATATTAATTAAACTTGTAAAAAATAGATTTTCAGAAGATATAGCTCAAGAATATTTTACCATAAAATAGGATAATCAATTCTTTTTTTAATAGTATAATGCTTCGTCAGAAAATTTTAATCATGAATTGCAAAAAGCATGTTAAAAATAAAAAGATGAAATTGCAAGTATATTCACTTCACAATCCCATCTCTTCTAAAAATTGTATATCATCAACTCTCTTGATCCTCGCAATTCTACCAAATTAATAGCAACACATTATGTAGATATAGGTTTATACTATTCTACATTTAAATACATGTAATATTGCCTATACTTTGTTATTTTCATGTGAAACTAATTCACTATATATCTCTTTCTCTATATTTTTCAAGAGAATTTCCAACCTATTTTTTGTAGCTAGATTAAAATGTGGATTTAATTCTTTTATTATAAATTCAAGTATCTCAAAGCTTATGTAATCTCCTAATTCAAGTGAATATTGATCACCCAAGAAAGTTTTTAATTTTTTAGAGATCTCCACTTTATCTTTTTTGGTAATATTTACCCCATCCGATAACAAACCTCTCTTAGATTAGTCTTAAATACTAATTCAAAAAGTTTTTATAACATAATAAAAATATTTTGGAATTAATATAAATCATATAATGAAATTTTTACAAATAAATAAAAAATATACATCATAATCATTAAACAATATATTAAGCATCGTAAACATATATTGGCTCGTCATAAAGGCGTAAACATTTTGACCAATTTCCACATAACGTTTCCCATTCACCAGCAGGATATACTTCCGTACGCAATATATGAAGTGGTATACGTAAATTCAATAACCGACCACTAAGCGTCGTACGAGTAACTCCCGCTGGCATTAAAAACTTTGCTTCAATTACCTTTTTCAGTTCCATCAACGAGTATTCTGGATAACTCATCAATATTTCATTTGAATGAGGCCAGACCTCAGTATCATTTGAATGACGGCGTACCGTATACTCATGTTGATATAAGCTGACAATACGATGCCATATCTCTAAATGATTAAATAAATCGCTATTTAAATCCCTTGCATATAAAAAATGTACTTGTTTATTTGCTTCTGTAATTTTTGCAAGCAAACGTTTATTAGCAATAATCTTACCTGACCAAATTATTGTAGGTTCTTTCTTTAAATTATTTACCCATTCCCCCATTGGTAATAAATGATTCCAAGCACGAATTTTTATTTTTTCATCAGGTACTACCTGTACAGCAACGCGTTTACAACCTAATGCCATCATAGCCTTCATACGATGGGCACCATCAAGTAACAGATAATTACCATCACTAAGCTCAGATACTAAGGGAGGATTCCGTAAAACACCTTCGCTTTCCATTACACGACAAATTTGTTCCAATCTTTTGTGTTCATATGATTCATGAAAGCGAATTTGCTTGGGATGTAAGAGATCTAAGGCCGAAATAATTTCACTCATAAAAACAGCTCCTCAAATAATTACATAAATTCTAAGCTTATCAAATAACTAATTTTCTATAATGATTAGTCGTGTTTACCGATATTTAGCAGCTATTAGACAATTATTTCAAACTACGTTTAATAATTTTACTAGTCTTCTAATAAAACACCTATTTCCTTTTCCCTAGCCCTTTGATAGTAATAAGCAGCAATGGCTACATCAAAAATGGCCATACCCATTGGATTAAATAATATTGCTTTGTCATAAGGGAAGTTTTGCAGTGCTCCTCGGATTACAACGTCAGCAATTGATACTGTATCTTCTTTTTGTAAACCTCTTTCAAGGTGCATCCTTTCAACATCAGTTTTTTCACGACAGACTTCTTCCCAATTATCAACAACTAGGGATTTTGTATATTCTAAGATATCAGGCTTAAAATCACGAAGAGAAACATTGAGTAGTAGCGCTCCATCTTTAGGTTTCTTATCAATATAACCTTCTGCAGAAACAGTACAAGTAATAAAAATATCAGCATCATTATAGGCTTCTTCATAAGCATTAACCTTTTGAGTTTTAGAATAAATATCCTCAGGAATTAATTCGTCTTTAATTCCATTGATATCATATAGGTAAACACTTTCGATTTTATCGCCTAATAGGGCAGTTACCATCTTTAAATGCATCTGACCAATAGGTCCAAATCCAATAATTCCAACTTTAACATTATTTAAATCTCTTAACTTGGCAAACTCTCGAATCATTAACCCTGTTACAGAAGCTGTTCGTATTACACTGACCATTGCTGTATTAAGCGTCGCAAATGGTTTTCCAGTCATAGCATCATTTAATATAGTAACTGAATGAGCACGTTGAATACCTTTCTCAATATTCTTCGGAAAACTAGCTATCCATTTGATTCCTGAAACCTTAAATTCTCCTCCAATATAAGCTGGCATAGCAATAATTCTATTAGCCGGATCATCAAAACGTAAGTATGGCTTAATTGGCTGAGAAAAATCTTCTGCATCAAGACTTTGTACTGCCTTTGAAATGACATTTATTGTTTCTTCCCAATTAACACCCATTTCATTGATATGTTTAGTATTTAAATACATCATAATTGCTTCCTCATTTCTATATCATTTTTATAAAGAAACTAATTGGTCTTCTACTGATTTTTTTGTATTAAGCCATTCTACCCATTCTACGTTGTAAATAGTTGATGTGTAAGCTTGTCCATTATCAGGACACAAGAAAACAACATTAGGTGTATTTTGAACATCCCTATTTTCAAAATACTTTTGGATTGCATAATATGAAGTCCCTGATGATCCACCAGCAAATATTGCATGTTTATTAAATAGCTCATAACAACCTGCAACAGTATGGACCTCCGGTACAATCATTACATCATCAATCAATGCTTTTTTAACCATACCAGGTATCATACTGGCACCAATTCCTGGTATGTACCGTTTACGAGGCTTATCACCAAAAATAATGGACCCTTGACTATCTACCGCAATAATTTTAATATTAGGGAATTTTTCTTTTAATCGTGTAGATACCCCAGCGATAGTTCCTCCAGTACTCACTCCAATGAAGGCATAATCTAACTGTTTAAAATCATTAGATATTTCTTCACCAATTCCTTGATAATGGGCTTCAAAGTTATCAGCATTATTATATTGATTTGTCCAGTATGCATTAGGAATAGTATTTAAAAGTTCTTCCACCTTATTTAAACGCGTTAATAAATAGCCACCTGTTTCATCTCGTTCATCCACTTTAGCTACTTGATAGGAAGTTGCTCTCAAAAAATTCTCATAACTATCATTAATATTTGGATCAATAACTGGTATGAATTTCAGGCCGATATACCTACAAAGAGTAGCAAGAGCAACCGCAAAGTTACCAGATGAAGATTCGATAATTGTAGAATTTTCAGTCACTTCACCGCGACTTATTGCTGATTTTAAAATATGGTGAGCAGCACGCACTTTAACACTATTCATTAAATTGTGATATTCTAGTTTTGCATACAGATTAATCTTTTCATGCTCTAATTTAATCATAGGTGTGTTGCCGATTACCCTTTCTAAACTCTCTAATTTCTTGAGCATAATTTGCTTCCTTTCTTGGTTAAAATCTAAAAAAATAATTAAAGATAAATAGTTGTAAATGTTCTTTCGAATGTATTTCAAATAGAACTTATACCTGAAAGACAATAAATGCTAGATTCTTTAGTATCGATAAGCTAAGCACCATTCAAGTACTGCCATAGCACTATTTAGCTTGTTTTCGGCCTGGGTAAATACAATACTTTTCGGTCCATCAATAACTGTTGCTGCTACTTCTTCCCCCCGGTGTGCTGGGAGGTCATGCATGAAAGTAGCTTCCGGATATAAAGTCAAAATTCTCTCTGTCACTGCAAATGGATTAAAGGCATCTTTCCATAAAGGATCTATTTTGCTTGTCCCTGTTGTTTGCCACCTTGTTGTATATACAACATCCACTTCACTAGGTAACATTTTTATATCATGACATTCAATAACTTTAGCACCAGATAATCGTGCATATTCTTTTGATTTTTCAAGCACACTTGGAGACACTCCATAACCAGCAGGTGTAAAAAGATATAACTCCGTACCTGGAAAACGAGATAAAGAAAGAGCTAGAGCTGCAGCACTGTTATTACCTTCTCCCATATATAAAACCCGTAATCCAGCTATTTCACCAAATTTTTGTTTCATTGTTGTTAAGTCTGTTAGCGCTTGTGTTGGATGTTCTTCCGTACTCATTGCATTAATGACTGCCATACGACTTTGAGATGCCAGCTTTTCCATTTCCTTTTGACTATCTGCAGTTCTTGCTACTAGTGCATCCAGCATTCGCGAAAGTACTTGAGTAGTGTCTTCTATAGACTCCCCTGTATTTTCTTGCAAATCATTTGGACCATACGTTACAATTTGTGCACCCATCTTTAATGCTGCAACAGAAAATGCCGATCGAGTTCTAGTCGATGTTTTACGGAAGTAAATCCCAATTATATTTCCCGCTAATATTTGATTAGGTTGTGATTTACCTGTGGCAAACTCTACCCCACGAGTTACAATTTGGTTAATATCACTATCAGTAAGATCCTCAAGAGTAATTAAATGTTTTCGAATAGCCATTATTATATTACCTCCCTTTTGAATAATTGCATGTAACAAAAATGTATTTACATATGTATGTAAATAAAAACTACTAAACAGCTAAAGTAAAAATAATAGATTGGAAATATAATTCATGTGGATCCATTACCACACTTTTCTATAATTTTTTTTAAACTAATGTATAGCAGTTGATATATAGCCTATATGAACTCGAATACTATTTTTACTCAGAAATACTTACATATAATTCTATTGTTAGTCTATATTCCTATTTTTTATGATATAGCTCTGCTGAATATATTACACACTACAACACTAAAAATATACTCAAAATACAGAATTTTCAGCTTTCTCAATTCTTTCATCAATTTTCTGTCAATTCATACTCAAATTATCTTTTTTACTAATAATATACATACAATGTTGGCTGTTTCTTTTATAGCCCACTTCTAAAAAATCCACCCATTCAAAAATAACGTTTTCCGGATTGTCAGTTAAGATACAAATTACTGCTGCAGTCATTAAAGAGTCCTCTTTAAAAGAGATATACTCCTTCTACTGGCTCGCTATTTTTAGTTATGATAACCTCTTAATTGTTACAGCTATAACGCTAACAATTGTTATTGCAACCATTGATCTAAGTAAACAAACAATGAATGACATACTAATATATACACAAAGTAATCTATTAAGCGTAAAATGATTGCATCTCCAGCAAGTTTAATTACTTATTCAGATCTTTGCTTTTATAATTTTCAAAATTAAATTTCCGAAAATTTTCTTTCCTTAAGGAAATATCGATCATTTTAAACTATGTAAGAATGCTTATCTTCTATAAAGTAATTACACAAATCAACAAAGTCAATTTCAATTATTGATTCTGGAAAACTATCTAAAGAAGCACAACAAGAAAGCTTATAATCTTTACCAATAGTAAACTTTTTATAATAAACCTCATTAGATAGCATGTCACCATAAAATATTATATTTTTTTTAATAACAAAAGAGTTTAAAGGTATAGTTAGTCCTTTCCCTATCCATTTAACAAAGCTTTCTTTTATAGTCCATAATTCATAAAACACATCTAATTGTTGTTCTACATTTAATGAATTTAAATAATTAAATTCTTCCTCAGTAAATATATTTTTAATCATTGTAGTATCCATGGGCCGGACTTTTTCTACATCTATTCCTACTTCTTCCTCATGAATAGCTCCAACAACCCAACTTTCGGAATGCGATATATTAAAATGAAAATTATTTAACTCATCCACATAAGGCTTTCCGTATTCATTGTATTTATATTTAATATCTTTATTTTCTTTTGAGAAATTTGTAATAATTAAATATCTTATTATAATGTCTCCAATTAAGGCGCTATATTGGTCGGGCTTTCTTTTATATTTCTGTATTTTCATCTGCTTTTCTTTTGAGACCAAACTCATAAGTTTCTGCATAATGTTATGTTCTATATTTCCTGGCACACGTACCTTATATATATTCATTATTTCCTTCCCACCTAACTTCTTATATAAATATAAAAAACTCTCAATGAATAATTCCTATTTATTTTTGATTAGTAAAAAACATTTTCAGAGGATAATATTCTATTTTACATTCATATTTTCGACTTATTTTCTAACCTCTTTATGTCTATTATTGAATGGGCTCAAAGAAAAAAGTCTCATAATATGTTATACACGAATTTATGAGACTTTTAGAAAACTAATAGTGTACAATTTCAAATAATATTTCACCTATTTACATGTGCTAATAAGAGCATTTGTTTAAAACTCATTTTTATACTCTTTACCAACTCATGAATATGCGGTTTCTCTAACATACTCAGATGGGAACCTGGCACTTGCAAAGCGTATACTTCCCCTGATGTATATTCATTCCATCTGTTATAATCTACTAGTGGGTGAATGTCATTAATAGATGCATTAAATAGAAAGATATCTGCTTTTATTTTTTGTTTACAATTATATTTTAGGTATGCATATCTATTAGCTATCATTACTTTTAACTTATTCATCATTGGATCTTCAAAATTTTGCTGACAACTATTTTTATTCAATGTAAATTTTTTCAGTAAAGATTCTATTAATTGTTCTTCACTCATTTGCTCAAAACTAATTTTCTCAATCCCTAACTGATCATTGAATTTTTCCAATTCTTCAAAGGCATTCTTAATATTTAAACTAAGAATCTCCTTACCTTGTTCAATAGGATGAACATCAAGTAAACCTAGAAAACTAACTTTATCACCTAGTTCTTCTAATTTTCTAGCCATTTCAAATGCAACTATTCCTCCAAAAGACCATCCTAATAAGGCATATGGCCCTTCTTTTTTTACTTGTTTAATCTCTTCTATATATCTTACCGCCATTTCCTCTACAGATAAGTTTGAAAATCTATTATCATCATATCCTATAGATTGTAACCCATATACAGTCTTATCCTCTCCTAATTCTCTAGCCAAATCATAATAGTTTAATATGCCCCCTCCTTGTCCATGAACAATGAACCATTGACTATCCTTGTTTGTCCCATTTTGAATTGGAATTAAACACTCACTGTCTATTCCTTTATTCCTACTTATTACATCACTTAATTGTTCAATAGTAGCATTTTGAAATAATAAACTTAATGGCAGTTGCACATTAAACATTCTCTTGATATTTTCGAATAACTTTAATCCCTTAAGAGAATGACCACCTAATTCAAAGAAATTATCATTTATACCAATATTATTTACGCCTAATATACTACTCCAAATATCAATTAAACTACTATCTATGTCATTTCTTGGTGGTACATAATTACTATTGTCCAGTGTATTTAGCTTCGGTAACTTACTTCTATCTATTTTCCCATTTTGTGTTAATGGTATATTGTGAATTGGTATGAGTTGTTGAGGTATCATATAATGTGGTAACTTTGTTGCCAAATATGCTCTTACCTCTGGAATAGGAATATCTTTTTCTGTAACTACGTATGCACATAAATACTTTTCCCCAGCTTCATCTTCTTGATCTATTACTACGGCCGTTTTGATTGTCTCATATTTTAACAAACTCGCTTCTATCTCACCTAGTTCTATTCGATATCCCCTTATTTTTACTTGATGATCGACTCGGCCCAAGTATTCAATGTTACCATCAGGTAGCCACCTTGCTATATCCCCTGTTTTATATAGTTTCTCACCTCGTTCAAATGGATGATCAATAAATTTATCTGCTGTTAATTCTGTTCGATTGATGTATCCTCTAGCTAACCCTATGCCAGAGATACATATTTCACCTGGAACACCTATAGGTTGTATCCTATAAAATGAATCCAATATATAAATTTTAGTATTTAACAATGGTGAACCTATCGGTACGTTTTGTGTTGTAATTTCTTTATTACTCTCATATCGATAAGATGTACAACAAACTGTAGCCTCTGTAGGTCCGTATCCATTTAATATTTGGAGGTTCCCCCTAAATAGATGATCGTATTTTGCGAGTAATTCTGTTTTAATGGGTTCTACTCCCACAAGTAGCTTATTTAACACTATCTTCTGGTTATCTCTAACAAAATAATCATATATTTCATTTAATAAAGTAGGTGGAATATATGATAATGTAACCTGTTCTTCAAGAATAACTTGTACAAGTTTTGATACATCAAACTTCTCACCTTGATAAATAGTCATTCTTGCGCCATATATCAATGGGACAAATATCTCAAAAATAGTAACATCAAAAGAAATACTACTTGAGAATAGAACGTTATCAGTTATCCCTATATCTTGAGAGAAATCTTCATACATTGCACACAAAAAATTAGTCAAGGATCGATGTTCAATCATTACTCCTTTAGGTTGTCCTGTAGAACCTGATGTATAAATAACATACGCTAAGTTGTGAGGTTCTATCATCATTTGCATGTCTTCTCCTGGTTCTTCTTCAAAAGACATATCCATTAGATCTATTACATTACCTTGGAATTCTATCCCCTTTATAATAGAGTTTTGATGTACTAATACATGTGAACACCCACTGTCTGTCAGCATATATTCCACTCTTTGTTTTGGTAAGGCGGTATCAATTGGTAAATACGCCCCACCTGCTTTTAAAACACCTAATATACCTATAACCATCTCGATGGATCGTTCCATCATCACACCAACAATGGATTCTCTTTTAACTCCTTGGTCTAATAACCTTCTCGCCAACTGATTAGCTTTTATATTTAATTCATTATATGTAATTCCTTTTTCATTACATACAACGGCTATTTGATTAGGGTTCCGTTTTACTTGTTCTTCAAACATTTTATGCACTAATAAATGATTAGAATTTGAATTCTCTTTTTTGTTAAATTCATTCATAATACAATGTTCTTCTTCTATAGATAACATATTAATATTACGCAATCGTACTCTAGGGTTATTAGTTACTTCCTCAACTATATTTGTAAAATGTACCATTAACCTTTCTATTGTCTCCGCTTTAAATAACTTAGTACTATATTCTACTTTTAAATGAATGTTATTATCTATTTCCGTTGCTACTAATGACAAATCAAATTTTGAAACTGACTGCTTAAACGGATACGGTGTAAATTCTAATTCACCAATAGATATTGGATTCATATCCATGTTTTGAAAAACAAACATGGTATCAAATAATGGATTTCTACTTGTATCCCTATGCAAGTCTAAACCTTCTAATAGTTCTTCAAAAGGATAGTCTTGATTTTCATAAGCTTCTAATGTATTGAGTTTTAATCTACTCAAAAACTCAATAAACTCATCGTCATTTTCTAGATAATTTCTCATTACCAAAGTATTAATAAACATACCAATCATATGATTAGTATCAGAATGAGACCTTCCAGCAATAGGCGAACCTACAATAATGTCTTCTTGACCTGTGTATCTAGATAAAAGTATGTTATAAATGGCCAATAAAATCATATATGGCGTAGTACCAGTTTCAGTTGCTAGCTTATTTACTTTAAAAGTTAAATCTCTTCCCAAATTAAAAGAACAAACATTACCTTTAAAGCTTTGTATAGTCGGTCTTTGAAAATCGGTTGGAAAATTTAAAACCGGGAGTTCTCCTTTTAAAGTTGTTAACCAATAATTCTTTTGTTCACTAATTAGATTCTTATAGTAAGGTCCATTTTGCCACATCACATAGTCTTTGTACTGCACTCTCAATTTTGGAAGCTCATTTCCTTTATACAATTCTACAAACTCTTTTATTAATATCCCCATTGATAAACCATCAGATATTATATGATGCATATCTACTACAAGGATATGTCTTTCTTCTGCTATCCTTAAAAGCAACACCCTTAATAATGGAGGTTTTGATAAATCAAATGGACTTATAAACTCATGTATTAAATAATCCGCATCTTTTTCATTTACATGAACGTATTCAATATTGAAATCTACATTAGGCTCAATTTTCTGCACTAATTCCCCATCTAAAATTTGAAAAGAAGTTCTTAATATTTCATGTCTCTCAATTAAAGATTGAAATATATTTTCAAACTTATCTTTACAAATATCCCCTTCTACTTTAAGTATTGTGGGCATATTATAAGTTGTATTTGTACCATCTTCGAATTGATCTACTATAAACATTCTCTTTTGTGACGTAGAAGCTAAATAATACTCTTGTTGTTTTACAGGTTCTATGGAAATATAATTACTTTTTTCCATTTCTAATATACATTTTGAAAAATCAACCAAAATAGGAAACTTAAATAGGGATTTAATAGATAATTGCACATTAAATTCTTTATTAACGATAGAAATTAGCCTAGCAGCCTTTAATGAATGACCACCTATCTCAAAAAAATTATCCCGTATTCCTACCCTTTGTATTCCTAATACATCTTTCCAAATCTCAACTAATTTTCTTTCTGTAGAATTTGTCGGCTCTAGATGACTAGATTTCAAATTATTTATAGGTTGAGGTAATTTTTTTCTATCTATTTTTCCGTTTTGTGTTAACGGTATGTTTTGAATGGATATGATTTGTTGAGGTATCATATAATATGGTAACTTGGTTGCTAAATATGCTCTTACCTCTGGAATAGGAATATCTTTTTCGGTAACTACATACGCACATAAATACTTTTCTCCACTTTCATCTTCTCGCTGTATTACTACGGCGGTTTTGATTGTCTCATATTTTAACAAACTTGCTTCTATCTCACCTAGTTCTATTCGATATCCCCTTATTTTCACTTGATGATCAACTCGTCCCAAGTATTCTATGTTACCATCAGGTAGCCATCTCGCTATATCTCCTGTTTTATATAATTTCTCACCATGTTCAAATGGATGATCAATAAATTTATCTGCTGTTAATTCTTTTCGATTGATGTATCCCCTAGCTAACCCTATGCCAGAAATACATATTTCTCCTGGAACACCTATAGGTTGTAGCCTGTGAAATGAATCCAATATATAAATTTTAGTATTTAACAATGGCGAACCTATTGGTACGTTTTGTATTGTAATTTCTTTATCCCTCTCATATTGATAAGATGTACAACAGACTGTAGCCTCTGTAGGTCCGTATAAATTTAATATTTGGAGGTTCCCCCTAAATAGATGATCGTATTTTGCAAGTAATTCTGTTTTAATTGGTTCTACTCCCACGAAAAGTTTATTTAACGATATCTTCTGATTCGCCCTTACAAAATAATCATATATTTCATTTAATAAGGTAGGTGGAATATATGCTAACGTGACCTGTTCCTCAAGAATGACTTGTACAAGTTTTGGTACATCAAACTTCTCACCTTGATAAATAGTCATTCTTGCTCCATATACCAATGGGACAAATATTTCAAATATAGTAACATCAAAAGAAATACTACTTGAGAATAGTACATTATCACTTATCCCTATATCTTGAGAGAAGTCCTCATACATTGCACACAAAAAATTAGTTAAGGAACGATGTTCAATCATTACCCCTTTGGGCTGGCCTGTAGAACCTGATGTATAAATAACATATGCCAAATTTTGAGGTTCCATCGTTATCTGCAAATCTTCTACTTGTTCTTCTTCAAAAGGAATATCCATTAGATTTATTACACTACCTTGAAATGCTACTCCCTTTATAATAGAGTTTTGATATGTTAGTACATGTGAACACCCGCTGTCTGTCAGCATATATTCCACTCTTTGTTTTGGTAACTCGGTATCAATCGGTAAATACGCCCCACCCGCTTTTAAGATACCTAATATGCCTACAATCATCTCAATAGAGCGTTCCATCATCACACCAACAATGGATTCTCTTTTAACTCCCTGGTCTAATAACCTTCTCGCCAACTGATTAGCTTTTATATTTAATTGTTTATATGTAATTTCTTTTCCATTACATACAATCGCTATTTGATTAGGATTCTGTTTTACCTGCTCTTCAAATAATTGAGGAGCTGTTACAGTCTCACAAAGTAATGTTTTATGAACTCTAGTCGTATGATTGAAATCAAATAATATTTGATTCTTTTCTGTTTTAGGCATTACATCTAGATCCATTGCAGATTTATTTGGATCTTTCATTAATATATCTAAAATATTATATAAATGATTAACTATTCTACTAACTAATCCTTCACTATATAAAATAGAATTGTAATCCACTTGAACCTTTAACTGTTCTTCATTTTTCATAAACCTAATAACCATATCAGAGTTTATTTTATCTGTACTCTCATAACAATGAATATCATCTAACATTACTATTGTATTTAATAAGGGAAGATTATTACTCTCTCCATCTAGACTTAATAATTGAGTAAGTTTATTAAAAGGAAAATGACAATGTTCATTTGACTCTAAAATTGTTTCTTTAATTTTATATATTATTTCTTTAAAATTATCTTCTTGATTTATTTGAGTACGTAATAATAAAAAGTTGTTTTGAAAAACCGTCTCTTCTTGACCTTGTTTAAA</td>\n</tr>\n</tbody></table>\n<h2 id=\"Table-3-The-contents-of-“Bt-all-genes-table”\"><a href=\"#Table-3-The-contents-of-“Bt-all-genes-table”\" class=\"headerlink\" title=\"Table 3. The contents of “Bt_all_genes.table”\"></a>Table 3. The contents of “Bt_all_genes.table”</h2><table>\n<thead>\n<tr>\n<th align=\"center\">-</th>\n<th align=\"center\">Cry1Ac16</th>\n<th align=\"center\">Cry1Ca15</th>\n<th align=\"center\">Cry1Da2</th>\n<th align=\"center\">Cry1Ia40</th>\n<th align=\"center\">Cry2Aa10</th>\n<th align=\"center\">Cry2Ab35</th>\n<th align=\"center\">Cry78Aa1</th>\n<th align=\"center\">Cry9Ea9</th>\n<th align=\"center\">HMM_Cry_len_492</th>\n<th align=\"center\">HMM_Cyt_len_531</th>\n<th align=\"center\">HMM_Cyt_len_533</th>\n<th align=\"center\">HMM_Cyt_len_615</th>\n<th align=\"center\">Sip1A2-other</th>\n<th align=\"center\">Vip1Aa2</th>\n<th align=\"center\">Vip3Aa12</th>\n<th align=\"center\">Zwa5B-other</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1126_1</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\"></td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">32.66</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">99.07</td>\n</tr>\n<tr>\n<td align=\"center\">AFS094730</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">36.14</td>\n<td align=\"center\"></td>\n<td align=\"center\">1</td>\n<td align=\"center\">1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">92.41</td>\n<td align=\"center\">29.46</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">AFS095482</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">1</td>\n<td align=\"center\"></td>\n<td align=\"center\">1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">AK47</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">100.00</td>\n<td align=\"center\">100.00</td>\n</tr>\n</tbody></table>\n<p><strong>Footnote:</strong> The float number represent the identity of blast search, and the integer number represent the number of toxins predicted by HMM and SVM.</p>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><p>BtToxin_Digger is free software, licensed under <a href=\"https://github.com/liaochenlanruo/BtToxin_Digger/blob/master/LICENSE\">GPLv3</a>.</p>\n<h2 id=\"Feedback-Issues\"><a href=\"#Feedback-Issues\" class=\"headerlink\" title=\"Feedback&#x2F;Issues\"></a>Feedback&#x2F;Issues</h2><p>Please report any issues about usage of the software to the <a href=\"https://github.com/liaochenlanruo/BtToxin_Digger/issues\">issues page</a>.</p>\n<h2 id=\"Citation\"><a href=\"#Citation\" class=\"headerlink\" title=\"Citation\"></a>Citation</h2><ul>\n<li><p>If you use this software please cite: <strong>Hualin Liu</strong>, Jinshui Zheng, Dexin Bo, Yun Yu, Weixing Ye, Donghai Peng, Ming Sun. (2021) BtToxin_Digger: a comprehensive and high-throughput pipeline for mining toxin protein genes from <em>Bacillus thuringiensis</em>. <em><strong>Bioinformatics</strong></em>, 2021;, btab506, <a href=\"https://doi.org/10.1093/bioinformatics/btab506\">https://doi.org/10.1093/bioinformatics/btab506</a>.</p>\n</li>\n<li><p>If you used the genome assembly function, please also cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. Protocol exchange, 2021. DOI: <a href=\"https://dx.doi.org/10.21203/rs.2.21224/v5\">10.21203&#x2F;rs.2.21224&#x2F;v5+</a>.</p>\n</li>\n</ul>\n<h2 id=\"FAQs\"><a href=\"#FAQs\" class=\"headerlink\" title=\"FAQs\"></a>FAQs</h2><h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><ul>\n<li><p>v1.0.2</p>\n<ul>\n<li>Fixed a “Can not find path” error.</li>\n</ul>\n</li>\n<li><p>v1.0.3</p>\n<ul>\n<li>Fixed a bug of “get_all_info_nucl.pl”, which can not get the gene location and strand information of some toxins.</li>\n</ul>\n</li>\n<li><p>v1.0.4</p>\n<ul>\n<li>Updated the database and models to support <a href=\"https://www.bpprc.org/\">the latest clasiffication of Bt toxins</a>.</li>\n</ul>\n</li>\n<li><p>v1.0.5</p>\n<ul>\n<li>The name of strains with no toxin found will be outputed into the file “Strains_without_toxins_found.txt”.</li>\n</ul>\n</li>\n<li><p>v1.0.6</p>\n<ul>\n<li>Update to adapt to PGCGAP v1.0.23, and to delete the intermediate files.</li>\n</ul>\n</li>\n<li><p>v1.0.7</p>\n<ul>\n<li>To delete the intermediate files.</li>\n</ul>\n</li>\n<li><p>v1.0.8</p>\n<ul>\n<li>To delete the intermediate files.</li>\n</ul>\n</li>\n<li><p>v1.0.9</p>\n<ul>\n<li>Update the database to keep it consistent with the BPPRC (to 2021-06-07).<br>More HMM models are added.<br>The filter length of amino acid sequence was reduced from 115 to 75.<br>Solved a problem: BioPerl reported an error when the length of the sequence in the input file was inconsistent.</li>\n</ul>\n</li>\n<li><p>v1.0.10</p>\n<ul>\n<li>Users can use the command “BtToxin_Digger –update-db” to update their local database.<br>The toxin database was updated to 2021.08.02.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"}]},{"title":"Linux和基因组测序技术初识","slug":"Linux和基因组测序技术初识","date":"2019-10-31T14:05:49.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Linux和基因组测序技术初识.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png","content":"<p>该文档可以帮助读者入门Linux系统，掌握常用命令和多种软件安装方式。此外还简述了全基因组测序技术，希望读者可以通过此文档初步了解生物信息学。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Linux初识\"><a href=\"#Linux初识\" class=\"headerlink\" title=\"Linux初识\"></a>Linux初识</h1><h2 id=\"目录结构与路径\"><a href=\"#目录结构与路径\" class=\"headerlink\" title=\"目录结构与路径\"></a>目录结构与路径</h2><h3 id=\"根目录\"><a href=\"#根目录\" class=\"headerlink\" title=\"根目录\"></a>根目录</h3><p>根目录（root）是系统最顶级目录，以“&#x2F;”表示，其他目录均为根目录的下级目录。</p>\n<h3 id=\"家目录\"><a href=\"#家目录\" class=\"headerlink\" title=\"家目录\"></a>家目录</h3><p>家目录（home）是用户的最顶级目录，以“~&#x2F;”表示，用户所有的目录均为家目录的下级目录。</p>\n<h3 id=\"绝对路径\"><a href=\"#绝对路径\" class=\"headerlink\" title=\"绝对路径\"></a>绝对路径</h3><p>绝对路径指的是目录或文件的绝对位置，是从根目录开始的完整路径，如“&#x2F;home&#x2F;bio&#x2F;”。可通过“pwd”命令获取当前目录的绝对路径。</p>\n<h3 id=\"相对路径\"><a href=\"#相对路径\" class=\"headerlink\" title=\"相对路径\"></a>相对路径</h3><p>相对路径不需要从根目录开始，只要指定与当前目录的相对位置即可。</p>\n<h3 id=\"当前目录\"><a href=\"#当前目录\" class=\"headerlink\" title=\"当前目录\"></a>当前目录</h3><p>当前所在的路径，以“.&#x2F;“表示。</p>\n<h3 id=\"上级目录\"><a href=\"#上级目录\" class=\"headerlink\" title=\"上级目录\"></a>上级目录</h3><p>也称为父目录，以“..&#x2F;“表示向上一级的目录，以“..&#x2F;..&#x2F;”表示向上两级的目录，以此类推。</p>\n<h2 id=\"命名法则\"><a href=\"#命名法则\" class=\"headerlink\" title=\"命名法则\"></a>命名法则</h2><ul>\n<li>文档与目录均以英文命名，可使用字母、数字和下划线；</li>\n<li>文档与目录的名称不允许存在空格；</li>\n<li>名称区分大小写。</li>\n</ul>\n<h2 id=\"终端工具\"><a href=\"#终端工具\" class=\"headerlink\" title=\"终端工具\"></a>终端工具</h2><p>终端（terminal）是运行Linux命令的工具，类似于Windows的命令行工具。Linux各发行版均自带终端。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Linux自带终端\"></p>\n<p>远程操控Linux服务器时，可以使用第三方的终端工具，如PuTTy软件。输入IP地址即可远程登录服务器运行命令。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Putty\"></p>\n<p>本地计算机与服务器之间的文件传输可以通过FTP软件实现,如FileZilla。输入服务器的IP地址、用户名、密码以及端口即可链接服务器。如果服务器采用的时FTP协议，则端口填写21，若采用的是SFTP协议，则端口设置为22。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"FileZilla\"></p>\n<h2 id=\"常用的命令\"><a href=\"#常用的命令\" class=\"headerlink\" title=\"常用的命令\"></a>常用的命令</h2><p><strong>pwd：</strong> 获取当前位置的绝对路径</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">pwd</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"获取当前位置的绝对路径\"></p>\n<p><strong>mkdir：</strong> 创建目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mkdir</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"创建tools目录\"></p>\n<p><strong>ls：</strong> 查看当前目录包含的内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录包含的内容\"></p>\n<p>查看所有的目录和文件（包含隐藏的内容）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> -a</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录包含的所有内容\"></p>\n<p>查看根目录所含内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> /</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看根目录所含内容\"></p>\n<p>查看家目录所含内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ~/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看家目录所含内容\"></p>\n<p><strong>cd：</strong> 切换路径</p>\n<p>进入“tools”目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> tools</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入“tools”目录\"></p>\n<p><strong>vim：</strong> 创建&#x2F;编辑文档</p>\n<p>以下所有操作均需在英文输入法状态下进行。首先创建一个新文档“example.txt”，并输入内容。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim example.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"创建“example.txt”文档\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"此时无法输入内容\"></p>\n<p>此时无法输入内容，需要按一下字母“i”键切换到输入模式。当左下角出现“–NSERT –” 字样时，可以输入文字。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"vim插入模式\"></p>\n<p>输入相关的内容。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"vim输入内容\"></p>\n<p>输入完毕时需要先按一下“ESC”键退出编辑模式，此时“–NSERT –” 字样消失。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"退出vim编辑模式\"></p>\n<p>按住组合键“shift + :”切换到vim操作模式，此时左下角出现一个“:”。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"shift + :\"></p>\n<p>输入“wq!”保存修改并退出。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"保存并退出vim\"></p>\n<p>查看创建的文件是否在于目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录下的文件及目录\"></p>\n<p><strong>cp：</strong> 复制目录或文件</p>\n<p>将创建的“example.txt”文档复制到上一级目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cp</span> example.txt ../</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"向上级目录复制文件\"></p>\n<p>查看上一级目录下是否存在刚刚复制的文档。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ../</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看父目录下的文件及目录\"></p>\n<p><strong>rm：</strong> 删除目录或文件</p>\n<p>删除tools目录下的“example.txt”文档。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">rm</span> example.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"删除tools目录下的“example.txt”文档\"></p>\n<p>查看文档是否被删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看是否成功删除文件\"></p>\n<p><strong>mv：</strong> 移动&#x2F;重命名</p>\n<p>将上一级目录下的“example.txt”文档移动到当前目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mv</span> ../example.txt ./</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"移动文件\"></p>\n<p>查看文档是否移动成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ../</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看是否成功移动文件\"></p>\n<p>将“example.txt”文档重命名为“examp2.txt”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mv</span> example.txt examp2.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"文档重命名\"></p>\n<p>查看重命名结果。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看重命名结果\"></p>\n<p><strong>wget：</strong> 下载</p>\n<p>使用wget工具下载基因组拼接软件“AbySS”到tools目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://www.bcgsc.ca/platform/bioinfo/software/abyss/releases/2.1.5/abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载AbySS软件\"></p>\n<p><strong>tar：</strong> 压缩&#x2F;解压缩</p>\n<p>tar.gz格式的文件可用“tar zxvf”进行解压，将刚才下载的“abyss-2.1.5.tar.gz”解压缩。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar zxvf abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"解压缩AbySS软件\"></p>\n<p><strong>top：</strong> 查看系统进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ top</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过top查看系统进程\"></p>\n<p>按字母键“q”退出。Ubuntu还带有另一个更加直观的查看系统进程的工具“htop”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ htop</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过htop查看系统进程\"></p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>在软件安装的时候经常需要设置环境变量，所谓的环境变量就是告诉计算机软件的安装位置。存放环境变量的文件在用户的家目录下，为隐藏文件，可通过“ls -a”命令查看。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> -a ~/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看家目录中的所有文档和目录\"></p>\n<p>“.bashrc”和“.profile”均为环境变量配置文件，通常我们只需要编辑“.bashrc”。</p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><h3 id=\"源码编译安装\"><a href=\"#源码编译安装\" class=\"headerlink\" title=\"源码编译安装\"></a>源码编译安装</h3><p>源码安装适合于所有的Linux发行版以及macOS。以刚下载的“AbySS”基因组拼接软件为例演示源码编译安装，一共分三步：配置（.&#x2F;configure）、编译（make）和安装（sudo make install）。首先进入“AbySS”软件目录下，并查看目录中的文件，找到配置文件“configure”，根据“README.md”中的指示对软件进行配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> abyss-2.1.5/</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入AbySS目录并查看其所含内容\"></p>\n<p>“.&#x2F;configure”表示运行configure进行安装前配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./configure</span><br></pre></td></tr></table></figure>\n\n<p>进行编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br></pre></td></tr></table></figure>\n\n<p>进行安装，需要“sudo”命令提供对系统目录的写入权限。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo make install</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong> 以上只演示了一般的安装方法，但是“AbySS”软件依赖其他的一些软件，需要先安装依赖包，最后安装“AbySS”，否则会安装失败。</p>\n<h2 id=\"通过包管理工具安装\"><a href=\"#通过包管理工具安装\" class=\"headerlink\" title=\"通过包管理工具安装\"></a>通过包管理工具安装</h2><p>不同的Linux发行版具有各自的软件包管理器。目前常用的Linux发行版主要是基于“RedHat”和“Debian”而制作的。<br>RedHat 系列的包管理器为“yum”，使用方法为在终端输入“sudo yum install -y 软件名称”。</p>\n<p>Debian 系列的包管理器为“apt-get”，使用方法为在终端输入“sudo apt-get install 软件名称”。</p>\n<p>示例：通过apt-get在Ubuntu中安装AbySS软件，输入命令和密码后，根据提示输入“Y”并按回车键进行自动安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install abyss</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过apt-get安装AbySS\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过apt-get安装AbySS\"></p>\n<h2 id=\"添加环境变量\"><a href=\"#添加环境变量\" class=\"headerlink\" title=\"添加环境变量\"></a>添加环境变量</h2><p>以原核生物基因预测软件“Prodigal”为例演示。首先在Github上找到prodigal的源码，点击“Clone or download”，并按照图示点击链接右侧的图标以复制git地址。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"复制prodigal链接\"></p>\n<p>在终端中进入tools目录，并输入克隆命令将项目克隆到本地计算机。命令公式为“git clone link”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/hyattpd/Prodigal.git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"克隆prodigal\"></p>\n<p>克隆完成后进入“Prodigal”目录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> Prodigal</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入Prodigal目录\"></p>\n<p>编译软件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"编译prodigal\"></p>\n<p>报错信息提示找不到gcc命令，因此需要首先安装gcc，输入命令后根据提示输入密码，直至安装完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install gcc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"安装gcc\"></p>\n<p>重新编译prodigal</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal编译结果\"></p>\n<p>编译完成后得到了可执行程序，但是系统无法找到prodigal的路径，因此需要我们将其所在的路径加入到环境变量中。通过vim打开环境变量配置文件“.bashrc”，进入编辑模式。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"打开环境变量文件\"></p>\n<p>在文档末尾添加配置语句 <strong>“export PATH&#x3D;$PATH:$HOME&#x2F;tools&#x2F;Prodigal”</strong> 。$HOME代表家目录，“$HOME&#x2F;tools&#x2F;Prodigal”代表prodigal可执行程序所在的目录。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在环境变量中添加prodigal路径\"></p>\n<p>编辑完成后保存并退出。然后执行“source ~&#x2F;.bashrc”命令刷新，通知系统“.bashrc”文档已经更改。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"刷新环境变量\"></p>\n<p>测试配置是否成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prodigal -h</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal帮助信息\"></p>\n<p>若要将其他软件加入到环境变量，只需在后面加入其他软件所在路径即可，各软件的路径间以英文“:“分割，不得有空格。下图为将多个软件加入到环境变量的示例。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"添加多个软件路径\"></p>\n<h2 id=\"创建软链接\"><a href=\"#创建软链接\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h2><p>软链接（Soft Link）相当于Windows系统中的快捷方式，可以将可执行程序的软链接存放至系统默认的环境变量之中，如“&#x2F;usr&#x2F;bin&#x2F;”或“&#x2F;usr&#x2F;local&#x2F;bin”之中。仍旧以刚编译好的prodigal软件为例，创建软链接的公式为 <strong>“sudo ln -s &#x2F;home&#x2F;bio&#x2F;tools&#x2F;Prodigal&#x2F;prodigal &#x2F;usr&#x2F;local&#x2F;bin&#x2F;prodigal”</strong> ，根据提示输入密码完成创建。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo <span class=\"built_in\">ln</span> -s /home/bio/tools/Prodigal/prodigal /usr/local/bin/prodigal</span><br></pre></td></tr></table></figure>\n\n<p>通过“whereis”命令查看软链接是否创建成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ whereis prodigal</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal安装路径\"></p>\n<p><strong>注意：</strong> 创建软链接时要输入绝对路径，否则会报错“Too many levels of symbolic links”。</p>\n<h2 id=\"通过Anaconda包管理器进行安装\"><a href=\"#通过Anaconda包管理器进行安装\" class=\"headerlink\" title=\"通过Anaconda包管理器进行安装\"></a>通过Anaconda包管理器进行安装</h2><p><a href=\"https://www.anaconda.com/\">Anaconda</a>是一款比较易用的跨平台软件包管理器，<a href=\"http://bioconda.github.io/\">Bioconda</a>是conda的一个通道，专门管理生物信息学软件。通过conda安装软件时可以一键安装所有的依赖包，大大节约了时间并降低了安装难度。Bioconda目前有超过600个贡献者和500个成员，大部分生物信息学软件都被包含其中。用户可以到其官网搜索需要的软件是否被囊括其中。</p>\n<p><strong>（1）安装conda</strong></p>\n<p>此处，我们安装Miniconda，进入<a href=\"https://docs.conda.io/en/latest/miniconda.html\">官网</a>，选择适应自身系统及python版本的安装文件。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看Miniconda安装包\"></p>\n<p>查看系统python版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -v</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看python版本\"></p>\n<p>可以看出该系统已经安装了python3，因此下载Linux Python 3.7 64-bit (bash installer)。右键单击相应安装包获取链接，使用wget下载至tools目录下。建议用户安装Python 3，因为Python 软件基金会将于2020年元旦停止对Python 2的维护（<a href=\"https://pythonclock.org/%EF%BC%89%E3%80%82\">https://pythonclock.org/）。</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载Miniconda\"></p>\n<p>开始安装Miniconda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bash Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>根据提示按“Enter”键查看license，并输入“yes” 按“Enter”继续，按“Enter”确认安装位置，miniconda被安装到家目录下的miniconda3目录中。最后输入“yes”，按“Enter”进行初始化。最后，通过“source ~&#x2F;.bashrc”命令刷新。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"初始化Miniconda\"></p>\n<p><strong>（2）设置bioconda channel</strong></p>\n<p>在终端中输入以下三条命令添加channels：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda config --add channels defaults</span><br><span class=\"line\">$ conda config --add channels bioconda</span><br><span class=\"line\">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure>\n\n<p>至此，bioconda配置完毕，可以通过conda安装生物信息学软件。下面通过conda安装mapping软件“bwa”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install bwa</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"安装bwa\"></p>\n<p>根据提示输入“y”完成安装。</p>\n<h2 id=\"MacOS相关操作\"><a href=\"#MacOS相关操作\" class=\"headerlink\" title=\"MacOS相关操作\"></a>MacOS相关操作</h2><p>MacOS与Linux系统相似，基本命令相同，但是软件安装存在一些差异。</p>\n<h3 id=\"MacOS安装生物信息学软件\"><a href=\"#MacOS安装生物信息学软件\" class=\"headerlink\" title=\"MacOS安装生物信息学软件\"></a>MacOS安装生物信息学软件</h3><h3 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h3><p>源码安装方式与Linux安装方式一致。</p>\n<h3 id=\"创建软链接-1\"><a href=\"#创建软链接-1\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h3><p>配置方法与Linux一致。</p>\n<h3 id=\"环境变量-1\"><a href=\"#环境变量-1\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>MacOS环境变量配置方法与Linux配置方法一致，但配置文件为家目录下的“.bash_profile”，即运行如下命令进行编辑。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<p>编辑完成并保存后需要运行source命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"包管理器\"><a href=\"#包管理器\" class=\"headerlink\" title=\"包管理器\"></a>包管理器</h3><p>MacOS的软件包管理器为Homebrew，可以在终端中通过以下命令安装Homebrew。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ruby -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过Homebrew安装mapping软件“bwa”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install bwa</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MacOS配置Anaconda\"><a href=\"#MacOS配置Anaconda\" class=\"headerlink\" title=\"MacOS配置Anaconda\"></a>MacOS配置Anaconda</h3><p>安装Miniconda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh</span><br><span class=\"line\">$ sh Miniconda3-latest-MacOSX-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>添加Bioconda通道</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda config --add channels defaults</span><br><span class=\"line\">$ conda config --add channels bioconda</span><br><span class=\"line\">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure>\n\n<p>安装软件bwa</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install bwa</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"现代测序技术\"><a href=\"#现代测序技术\" class=\"headerlink\" title=\"现代测序技术\"></a>现代测序技术</h1><h2 id=\"二代测序-“Next-generation”-sequencing-technology\"><a href=\"#二代测序-“Next-generation”-sequencing-technology\" class=\"headerlink\" title=\"二代测序(“Next-generation” sequencing technology)\"></a>二代测序(“Next-generation” sequencing technology)</h2><p>第二代测序技术的核心思想是边合成边测序（Sequencing by Synthesis），即通过捕捉新合成的末端的标记来确定DNA的序列。应用最广的技术平台主要为Illumina公司的产品。其优点为高通量、错误率低、成本低等。</p>\n<ul>\n<li>Illumina测序中的几个名词</li>\n<li>   <strong>Read length：</strong> 测序的DNA片段的碱基长度。</li>\n<li>   <strong>Insert size：</strong> 双端测序时接头（adapter）中间序列的长度。</li>\n<li>   <strong>Junction：</strong> insert序列中间未被测序的部分。</li>\n<li>   <strong>Flowcell：</strong> 是指Illumina测序时，测序反应发生的位置，1个flowcell含有8条lane。</li>\n<li>   <strong>Lane：</strong> 每一个flowcell上都有8条泳道，用于测序反应，可以添加试剂，洗脱等等。</li>\n<li>   <strong>Raw data：</strong> 测序完成后未去接头、引物以及去除低质量序列的数据。</li>\n<li>   <strong>Clean data：</strong> 去除Raw data中的接头序列、linker、低质量reads、长度较短的reads及核糖体RNA和ncRNA产生的reads。</li>\n<li>   <strong>数据量：</strong> read长度乘以reads数目。</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"二代测序名词示意图\"></p>\n<h2 id=\"三代测序\"><a href=\"#三代测序\" class=\"headerlink\" title=\"三代测序\"></a>三代测序</h2><p>三代测序又称为单分子测序，测序过程无需进行PCR扩增，可以产生超长的reads，因此能够跨越高GC含量区域和高度重复区域。目前常用的测序平台包括Pacific Biosciences（PacBio）和Oxford Nanopore。</p>\n<p>PacBio以SMRT Cell为载体进行测序反应，SMRT Cell是一张带有纳米孔的超薄金属片。PacBio采用边合成便测序的方式，测序反应在纳米孔中进行，一个纳米孔中固定一个DNA聚合酶和一条DNA模板。延伸反应的过程中检测dNTP荧光信号以确定碱基顺序。</p>\n<p>Oxford开发的纳米单分子测序技术属于真正的实时测序，它基于电信号来判读碱基。</p>\n<caption>Table 1. Characteristics, strengths and weaknesses of commonly used sequencing platforms (Besser et al. 2018)</caption>\n<table border=\"1\">\n<tr>\n<th>Platform\\Instrument</th>\n<th>Throughput (Gb)</th>\n<th>Read length (bp)</th>\n<th>Strength</th>\n<th>Weakness</th>\n</tr>\n<tr>\n<td><B>Sanger sequencing</B></td>\n</tr>\n<tr>\n<td>ABI 3500/3730</td>\n<td>0.0003</td>\n<td>Up to 1 kb</td>\n<td>Read accuracy and length</td>\n<td>Cost and throughput</td>\n</tr>\n<tr>\n<td><B>Illumina</B></td>\n</tr>\n<tr>\n<td>MiniSeq</td>\n<td>1.7–7.5</td>\n<td>1×75 to ×150</td>\n<td>Low initial investment</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>MiSeq</td>\n<td>0.3–15</td>\n<td>1×36 to 2×300</td>\n<td>Read length, scalability</td>\n<td>Run length</td>\n</tr>\n<tr>\n<td>NextSeq</td>\n<td>10–120</td>\n<td>1×75 to 2×150</td>\n<td>Throughput</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>HiSeq (2500)</td>\n<td>10–1000</td>\n<td>×50 to ×250</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td>NovaSeq 5000/6000</td>\n<td>2000–6000</td>\n<td>2×50 to ×150</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td><B>IonTorrent</B></td>\n</tr>\n<tr>\n<td>PGM</td>\n<td>0.08–2</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Throughput, homopolymers</td>\n</tr>\n<tr>\n<td>S5</td>\n<td>0.6–15</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td>Proton</td>\n<td>10–15</td>\n<td>Up to 200</td>\n<td>Speed, throughput</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td><B>Pacific BioSciences</B></td>\n</tr>\n<tr>\n<td>PacBio RSII</td>\n<td>0.5–1</td>\n<td>Up to 60 kb</td>\n<td>ead length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate and initial</td>\n</tr>\n<tr>\n<td>Sequel</td>\n<td>5–10</td>\n<td>Up to 60 kb</td>\n<td>Read length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate</td>\n</tr>\n<tr>\n<td><B>Oxford Nanopore</B></td>\n</tr>\n<tr>\n<td>MInION</td>\n<td>0.1–1</td>\n<td>Up to 100 kb</td>\n<td>Read length, portability</td>\n<td>High error rate, run length</td>\n</tr>\n</table>\n\n<h2 id=\"常见序列格式\"><a href=\"#常见序列格式\" class=\"headerlink\" title=\"常见序列格式\"></a>常见序列格式</h2><h3 id=\"Fastq\"><a href=\"#Fastq\" class=\"headerlink\" title=\"Fastq\"></a>Fastq</h3><p>我们得到的下机序列一般为fastq格式，每一条read包含4行，第一行为测序仪器信息以及测序信息，第二行为碱基序列，第三行一般无信息，第四行为对应第二行中每个碱基的测序质量信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"fastq文件内容\"></p>\n<caption>Table 2. Descriptions of the first line of the fastq file</caption>\n<table border=\"1\">\n<tr>\n<th>Strings</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>@ST-E00310</td>\n<td>The unique instrument name</td>\n</tr>\n<tr>\n<td>147</td>\n<td>The run id</td>\n</tr>\n<tr>\n<td>HVT25CCXX</td>\n<td>The flowcell id</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Flowcell lane</td>\n</tr>\n<tr>\n<td>1011</td>\n<td>The number within the flowcell lane</td>\n</tr>\n<tr>\n<td>13382</td>\n<td>‘x’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1819</td>\n<td>‘y’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1</td>\n<td>The number of a pair, 1 or 2 (paired-end or mate-pair reads only)</td>\n</tr>\n<tr>\n<td>N</td>\n<td>Y if the read fails filter (read is bad), N otherwise</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0 when none of the control bits are on, otherwise it is an even number</td>\n</tr>\n<tr>\n<td>TGAAGACA</td>\n<td>Index sequence</td>\n</tr>\n</table>\n\n\n<h3 id=\"Fasta\"><a href=\"#Fasta\" class=\"headerlink\" title=\"Fasta\"></a>Fasta</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.fasta.html?highlight=fasta#module-skbio.io.format.fasta\">FASTA</a>格式为文本文档，内含核苷酸或氨基酸序列以及其IDs。每条序列包含两部分，第一部分为ID及注释信息，以 <strong>“&gt;”</strong> 开头，at the start, 第二部分为核苷酸序列或氨基酸序列。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"fasta文件内容\"></p>\n<h3 id=\"Genbank\"><a href=\"#Genbank\" class=\"headerlink\" title=\"Genbank\"></a>Genbank</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.genbank.html\">GenBank</a>格式包含了基因组序列和注释信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Genbank文件内容\"></p>\n<h3 id=\"GFF3\"><a href=\"#GFF3\" class=\"headerlink\" title=\"GFF3\"></a>GFF3</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.gff3.html?highlight=gff#module-skbio.io.format.gff3\">GFF3</a> (Generic Feature Format version 3) 格式描述了序列的特征，每一行含有9列数据，列与列之间以制表符分割。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"GFF3文件内容\"></p>\n<h2 id=\"基因组拼接基本概念\"><a href=\"#基因组拼接基本概念\" class=\"headerlink\" title=\"基因组拼接基本概念\"></a>基因组拼接基本概念</h2><h3 id=\"测序深度\"><a href=\"#测序深度\" class=\"headerlink\" title=\"测序深度\"></a>测序深度</h3><p>测序深度（Sequencing depth）指测序得到的总碱基数（read长度x reads数目）与待测基因组大小的比值。假设一个基因组大小为2M，测序深度为10X，那么获得的总数据量为20M。</p>\n<h3 id=\"测序覆盖度\"><a href=\"#测序覆盖度\" class=\"headerlink\" title=\"测序覆盖度\"></a>测序覆盖度</h3><p>指测序获得的序列占整个基因组的比例。由于基因组中的高GC、重复序列等复杂区域的存在，测序获得的序列经常无法覆盖基因组上所有的区域。例如覆盖度是96%，表明还有4%的序列区域未测到。</p>\n<h3 id=\"Read、Contig、Scaffold\"><a href=\"#Read、Contig、Scaffold\" class=\"headerlink\" title=\"Read、Contig、Scaffold\"></a>Read、Contig、Scaffold</h3><p>测序得到的序列被称作reads，在一个read中连续的N个碱基所组成的序列称作k-mer，把k-mer集合拼接起来形成的长DNA序列称为contig。通过pair ends信息将contigs按顺序进行排列得到scaffold。</p>\n<h3 id=\"N50\"><a href=\"#N50\" class=\"headerlink\" title=\"N50\"></a>N50</h3><p>将contigs或scaffolds根据长度从大到小排列并累加，当其累计长度达到全部组装序列总长度的50%时，加上去的最后一个contig或scaffold的大小即为N50的大小，N50是评价基因组拼接质量的重要参数。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>Besser J, Carleton HA, Gerner-Smidt P, Lindsey RL, Trees E. Next-generation sequencing technologies and their application to the study and control of bacterial infections. <em>Clinical Microbiology and Infection</em>, 2018, 24: 335-341</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"Bioconda贡献指南","slug":"Bioconda贡献指南","date":"2019-05-19T09:39:00.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Bioconda贡献指南.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg","content":"<p>本文介绍了如何为软件添加Bioconda recipe，以便可以通过conda安装自己的软件。</p>\n<span id=\"more\"></span>\n\n<p><strong>注：本文适用于非 Bioconda 成员</strong></p>\n<p><B>Step0：软件开发与GitHub操作</B></p>\n<br/>\n(1) 将开发完成的软件上传到GitHub\n\n<br/>\n(2) 在本地软件目录下创建tag\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> tag v1.0.0 -m <span class=\"string\">&#x27;first version&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<br/>\n(3) 上传到GitHub\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> push origin v1.0.0</span><br></pre></td></tr></table></figure>\n\n<p><strong>注</strong>：如果需要删除有bug的tag：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> tag -d tagname</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$git</span> push origin :refs/tags/tagname</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<br/>\n(4) 存档tag(非必需)\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> archive -v --format=tar v1.0.0 &gt; v1.0.0.tar.gz</span><br></pre></td></tr></table></figure>\n\n<br/>\n(5) 计算压缩包的\"sha256\"以供bioconda校验\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sha256sum</span> v1.0.0.tar.gz</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step1：fork bioconda-recipes</B>\n\n<br/>\n\n\n<p>(1)进入 bio-conda <a href=\"https://github.com/bioconda/bioconda-recipes\">GitHub页</a>；</p>\n<br/>\n(2)点击右上角的 “Fork”；\n\n<br/>\n(3)操作完成后在用户自己的 GitHub 内得到了一份 “<USERNAME>/bioconda-recipes”，我的用户名为 “liaochenlanruo”，因此我得到的是 “liaochenlanruo/bioconda-recipes”。\n\n<br/>\n<B>Step2：将项目克隆到本地</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> <span class=\"built_in\">clone</span> https://github.com/liaochenlanruo/bioconda-recipes.git</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step3: Then add the main bioconda-recipes repo as an upstream remote to more easily update your branch with the upstream master branch:</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cd</span> bioconda-recipes</span><br><span class=\"line\"><span class=\"variable\">$git</span> remote add upstream https://github.com/bioconda/bioconda-recipes.git</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step4：更新 repo</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> checkout master</span><br><span class=\"line\"><span class=\"variable\">$git</span> pull upstream master</span><br><span class=\"line\"><span class=\"variable\">$git</span> push origin master</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step5：写自己的 recipe</B>\n\n<br/>\n例如，创建并切换到一个名字为 “pgcgap” 的 新分支\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> checkout -b pgcgap</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<p>在”bioconda-recipes&#x2F;recipes&#x2F;“目录下新建”pgcgap”目录，并将撰写好的<a href=\"https://docs.conda.io/projects/conda-build/en/latest/resources/build-scripts.html\">build.sh</a>和<a href=\"https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#architecture-independent-packages\">meta.yaml</a>存入其中。</p>\n<br/>\n注：Step6和Step7可以跳过\n\n<br/>\n<B>Step6：本地测试 recipe</B> （可选，即可以直接在线测试）\n\n<br/>\n在\"bioconda-recipes/\"目录下依次运行如下命令：\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$./bootstrap.py /tmp/miniconda</span><br><span class=\"line\"><span class=\"variable\">$source</span> ~/.config/bioconda/activate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># optional linting</span></span><br><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils lint recipes config.yml --git-range master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># build and test</span></span><br><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils build recipes config.yml --docker --mulled-test --git-range master</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step7：更新 recipes</B> (可选）\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils update-pinning recipes/ config.yml --packages pgcgap --create-pr</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step8：推送修改，等待测试通过，提交 pull 请求</B>\n\n<br/>\n(1) 将本地更改同步到自己的pgcgap分枝\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> push -u origin pgcgap</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<p>(2) 在“liaochenlanruo&#x2F;bioconda-recipes”的“pgcgap”分支下点击“New pull request”。base repository选择“liaochenlanruo&#x2F;bioconda-recipes”，base选择“pgcgap”；head repository选择“bioconda&#x2F;bioconda-recipes”，compare 选择”master”。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"new_pull_request\"></p>\n<center>Create a new pull request</center>\n\n<br/>\n\n<p>比较完成后提交，标题自定义，内容根据提示酌情填写。若存在问题可以 @其<a href=\"https://bioconda.github.io/#core\">核心团队成员</a>中的任何一位，如输入“@epruesse”，将会 @ Elmar Pruesse。若想成为bioconda成员，以及要merge自己的分支，同样需要@核心成员中的任何一位。</p>\n<p>实例：</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"create_pull_request_info\"></p>\n<center>Request 信息填写</center>\n\n<br/>\n上述步骤完成后，可以在GitHub项目下的“Pull requests”选项卡下查看处理状态。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"view_pull_request\"></p>\n<center>查看pull request</center>\n\n<br/>\n根据提示修改自己的recipe，再次pull，循环往复，直至修复所有错误（下图表示需要修改）。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"pull_error\"></p>\n<center>pull出错了</center>\n\n<br/>\n点击“details”可以查看进程和详细信息。下图所示，正在测试recipe。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"bioconder_checking2\"></p>\n<center>正在测试recipe</center>\n\n<br/>\n如下图所示，表明测试成功，等待管理员合并自己的分支。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"test_success\"></p>\n<center>所有测试均成功</center>\n\n<br/>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"bioconda_check\"></p>\n<center>非Bioconda成员测试成功后的“Pull requests”界面</center>\n\n<br/>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"squash_and_merge\"></p>\n<center>Bioconda成员测试成功后的“Pull requests”界面</center>\n\n<br/>\n如上两图分别为非bioconda成员以及bioconda成员测试通过的界面，非成员需要新建一条评论并 @一位核心成员，请求其merge自己的pull requests，bioconda成员则可以点击“Squash and merge”来合并自己的pull requests。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"merge_successfully\"></p>\n<center>Bioconda成员“Pull requests”合并成功</center>\n\n<br/>\n## 附：\n1. 加入bioconda\n\n<p>1）在第一个recipe推送成功后可以在评论中 @ 一位核心成员，要求加入组织<br>2）收到邀请链接，点击加入</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"invited2bioconda\"></p>\n<center>被邀请加入Bioconda</center>\n\n<br/>\n## 常见错误\n1. If linting fails：\n\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git pull upstream master</span><br><span class=\"line\">git checkout pgcgap</span><br><span class=\"line\">git merge master</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"},{"name":"Bioconda","path":"api/tags/Bioconda.json"}]},{"title":"PGCGAP中文说明","slug":"PGCGAP中文说明","date":"2019-04-28T07:22:33.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/PGCGAP中文说明.json","excerpt":null,"keywords":null,"cover":null,"content":"<p><strong>为了方便广大中文用户学习PGCGAP的使用，特意书写该中文文档，但中文文档更新较慢，强烈建议大家阅读英文文档！</strong></p>\n<span id=\"more\"></span>\n\n<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/2019/04/28/PGCGAP%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/\">中文说明</a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>PGCGAP是用于原核生物基因组学和比较基因组学分析管道，目前该管道包含12个模块，可以接受Illumina双端reads、Oxford reads或PacBio reads作为输入，可以完成基因组组装、基因预测和注释，并可以进行比较基因组学分析，包括构建单拷贝核心蛋白进化树以及单拷贝核心基因SNPs进化树，泛基因组分析与进化树构建，全基因组平均核苷酸一致性（ANI）计算，同源蛋白家族聚类及进化树构建，COG注释，SNPs和INDELs calling，抗生素抗性基因&#x2F;毒力因子预测，Multi-FASTA进化树构建，组装后基因组短序列过滤与统计信息呈现（genome size，GC content……）。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>PGCGAP可以安装于Windows子系统Linux（WSL）、Linux x64系统以及macOS中。</p>\n<p><strong>Step1：通过<a href=\"https://bioconda.github.io/user/install.html#install-conda\">Bioconda</a>安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> create -n pgcgap python=3.7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> install pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>声明：用conda安装时一直在“Solving environment”怎么办？</strong>随着加入conda的软件越来越多，使其索引库变的庞大，因此安装新的软件时需要逐一验证软件间的兼容性，会耗费大量时间。严重的时候会无法完成软件的安装，这个时候坐以待毙是不行的。下面介绍两种办法解决此问题：<br/></p>\n\n\n<ul>\n<li><p>Method 1: 使用mamba (非常快) 替代conda。前提是已经用conda创建好了pgcgap的虚拟环境：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> install mamba -c conda-forge</span><br><span class=\"line\"><span class=\"variable\">$mamba</span> install pgcgap</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Method 2: 使用本人提供的pgcgap<a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.ym\">配置文件</a>来创建环境并安装PGCGAP：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download pgcgap_latest_env.yml</span></span><br><span class=\"line\"><span class=\"variable\">$wget</span> https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.yml</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class=\"line\"><span class=\"variable\">$conda</span> <span class=\"built_in\">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure>\n<br/></li>\n</ul>\n<p><strong>Step2：配置COG数据库</strong> (初次安装PGCGAP后需要执行此步骤)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br></pre></td></tr></table></figure>\n\n<p><strong>Step3: 升级PGCGAP(升级版本时运行)</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> update pgcgap</span><br><span class=\"line\"><span class=\"comment\"># v1.0.28以后可通过如下命令升级</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-update</span><br></pre></td></tr></table></figure>\n\n<p><strong>此外，用户也可以通过容器(docker)安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$docker</span> pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：</strong> 前提是用户电脑中安装了<a href=\"https://www.docker.com/\">Docker</a>，Docker可以跨平台使用。可用的tag可<a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">在此</a>查询，建议安装最新版。</p>\n<h2 id=\"依赖包\"><a href=\"#依赖包\" class=\"headerlink\" title=\"依赖包\"></a>依赖包</h2><ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/gubbins\">Gubbins</a> &gt;&#x3D;2.3.4</li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org/\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"PGCGAP用法\"><a href=\"#PGCGAP用法\" class=\"headerlink\" title=\"PGCGAP用法\"></a>PGCGAP用法</h2><ul>\n<li><p><strong>显示帮助信息：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>管道用法：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [modules] [options]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>展示各模块的参数：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>__展示各模块的运行示例：__（这货是我用的最多的）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> Examples</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>配置COG数据库：</strong> (初次安装PGCGAP后需要配置COG数据库)</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>功能模块：</strong></p>\n<ul>\n<li><p><strong>[--All]</strong>                          运行Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH 和 pCOG模块</p>\n</li>\n<li><p><strong>[--Assemble]</strong>                     基因组组装</p>\n</li>\n<li><p><strong>[--Annotate]</strong>                     基因预测及注释</p>\n</li>\n<li><p><strong>[--CoreTree]</strong>                     构建单拷贝核心蛋白进化树与核心SNPs进化树</p>\n</li>\n<li><p><strong>[--Pan]</strong>                          泛基因组分析并构建单拷贝核心蛋白进化树</p>\n</li>\n<li><p><strong>[--OrthoF]</strong>                       同源蛋白家族聚类及单拷贝直系同源蛋白进化树构建</p>\n</li>\n<li><p><strong>[--ANI]</strong>                          计算平均核苷酸一致性 ( ANI )</p>\n</li>\n<li><p><strong>[--MASH]</strong>                         通过MinHash估算基因组&#x2F;宏基因组相似性</p>\n</li>\n<li><p><strong>[--pCOG]</strong>                         COG注释</p>\n</li>\n<li><p><strong>[--VAR]</strong>                          变异检测并构建核心基因组进化树</p>\n</li>\n<li><p><strong>[--AntiRes]</strong>                      从基因组(contigs&#x2F;scaffolds)中预测抗生素抗性基因或毒力基因</p>\n</li>\n<li><p><strong>[--STREE]</strong>                        基于Multi-FASTA序列(所有序列在一个文件中)构建系统发育树</p>\n</li>\n<li><p><strong>[--ACC]</strong>                          一些实用的附加程序(目前只开发了”Assess”用于对基因组中的短序列进行过滤，并评估过滤前后的基因组状态)</p>\n</li>\n</ul>\n</li>\n<li><p><strong>全局参数（请参照英文版，参数有所改变，中文版暂时没有时间修改）：</strong></p>\n<ul>\n<li><p><strong>[--strain_num (INT)]</strong>             [Required by “--All”, “--CoreTree”, “--Pan”, “--VAR” and “--COG”] 用于分析的菌株数目，不包含参考基因组</p>\n</li>\n<li><p><strong>[--ReadsPath (PATH)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] 所有菌株测序reads所在的目录路径  Default .&#x2F;Reads&#x2F;Illumina)</p>\n</li>\n<li><p><strong>[--scafPath (PATH)]</strong>              [Required by “--All”, “--Assess”, “--Annotate” and “--MASH”] contigs&#x2F;scaffolds的存放路径 (Default “Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina”)</p>\n</li>\n<li><p><strong>[--AAsPath (PATH)]</strong>               [Required by “--All”, “--CoreTree”, “--OrthoF” and “--pCOG”] 所有菌株的氨基酸序列文件的存放路径 (Default “.&#x2F;Results&#x2F;Annotations&#x2F;AAs”)</p>\n</li>\n<li><p><strong>[--reads1 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 1的后缀名 (例如 reads 1 的名字为 “YBT-1520_L1_I050.R1.clean.fastq.gz”，”YBT-1520” 是菌株名，则后缀名为 “.R1.clean.fastq.gz”)</p>\n</li>\n<li><p><strong>[--reads2 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 2的后缀名</p>\n</li>\n<li><p><strong>[--Scaf_suffix (STRING)]</strong>         [Required by “--All”, “--Assess”, “--Annotate” “MASH” and “--ANI”] contigs&#x2F;scaffolds的后缀名 (Default -8.fa)</p>\n</li>\n<li><p><strong>[--filter_length (INT)]</strong>          [Required by “--All”, “--Assemble” and “--Assess”]&gt; Sequences shorter than the ‘filter_length’ will be deleted from the assembled genomes. ( Default 200 )</p>\n</li>\n<li><p><strong>[--codon (INT)]</strong>                  [Required by “--All”, “--Annotate”, “--CoreTree” and “--Pan”] 翻译密码子表 (Default 11)</p>\n<ul>\n<li>1                             Universal code</li>\n<li>2                             Vertebrate mitochondrial code</li>\n<li>3                             Yeast mitochondrial code</li>\n<li>4                             Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma&#x2F;Spiroplasma code</li>\n<li>5                             Invertebrate mitochondrial</li>\n<li>6                             Ciliate, Dasycladacean and Hexamita nuclear code</li>\n<li>9                             Echinoderm and Flatworm mitochondrial code</li>\n<li>10                            Euplotid nuclear code</li>\n<li>11                            Bacterial, archaeal and plant plastid code ( Default )</li>\n<li>12                            Alternative yeast nuclear code</li>\n<li>13                            Ascidian mitochondrial code</li>\n<li>14                            Alternative flatworm mitochondrial code</li>\n<li>15                            Blepharisma nuclear code</li>\n<li>16                            Chlorophycean mitochondrial code</li>\n<li>21                            Trematode mitochondrial code</li>\n<li>22                            Scenedesmus obliquus mitochondrial code</li>\n<li>23                            Thraustochytrium mitochondrial code</li>\n</ul>\n</li>\n<li><p><strong>[--suffix_len (INT)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] <strong>(强烈建议设置此项)</strong> reads后缀的长度。例如 “YBT-1520_L1_I050.R1.clean.fastq.gz” 的 --suffix_len 为 26 (“YBT-1520” 为菌株名) (Default 0)</p>\n</li>\n<li><p><strong>[--logs (STRING)]</strong>                Log文件的名字 (Default Logs.txt)</p>\n</li>\n<li><p><strong>[--threads (INT)]</strong>                运行程序时调用的线程数目 (Default 4)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>各模块的局部参数：</strong></p>\n<ul>\n<li><p><strong>--Assemble</strong></p>\n<ul>\n<li><p><strong>[--platform (STRING)]</strong>        [Required] 测序平台，可以选择 “illumina”, “pacbio” 和 “oxford” (Default illumina)</p>\n</li>\n<li><p><strong>[--assembler (STRING)]</strong>       [Required] 用于illumina数据组装的软件，可选”abyss”, “spades” 或”auto” ( Default abyss )</p>\n</li>\n<li><p><strong>[--kmmer (INT)]</strong>              [Required] Illumina数据组装时采用的 k-mer 大小 (Default 81)</p>\n</li>\n<li><p><strong>[--genomeSize (FLOAT)]</strong>       [Required] 预估的基因组大小，如 3.7m、2.8g，组装 PacBio data 和 Oxford data 时需要设置此项 (Default Unset)</p>\n</li>\n<li><p><strong>[--short1 (STRING)]</strong>           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--short2 (STRING)]</strong>           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--long (STRING)]</strong>             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--hout (STRING)]</strong>             [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Annotate</strong></p>\n<ul>\n<li><p><strong>[--genus (STRING)]</strong>           菌株的属名 ( Default “NA” )</p>\n</li>\n<li><p><strong>[--species (STRING)]</strong>         菌株的种名 ( Default “NA”)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--CoreTree</strong></p>\n<ul>\n<li><p><strong>[--CDsPath (PATH)]</strong>           [Required] 包含所有菌株核苷酸序列文件的路径，如果设置为”NO”，将不会构建核心SNPs进化树 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;CDs” )</p>\n</li>\n<li><p><strong>[-c (FLOAT)]</strong>                 序列一致性 (identity) 阈值 ( Default 0.5)</p>\n</li>\n<li><p><strong>[-n (INT)]</strong>                   Word_length,  -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li><p><strong>[-G (INT)]</strong>                   Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li><p><strong>[-t (INT)]</strong>                   Tolerance for redundance ( Default 0 )</p>\n</li>\n<li><p><strong>[-aL (FLOAT)]</strong>                Alignment coverage for the longer sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li><p><strong>[-aS (FLOAT)]</strong>                Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li><p><strong>[-g (INT)]</strong>                   If set to 0, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li><p><strong>[-d (INT)]</strong>                   length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--Pan</strong></p>\n<ul>\n<li><p><strong>[--GffPath (PATH)]</strong>           [Required] 存放所有菌株GFF3格式文件的路径 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;GFF” )</p>\n</li>\n<li><p><strong>[--identi (INT)]</strong>                  Minimum percentage identity for blastp ( Default 95 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n- __\\-\\-OrthoF__\n\n<pre><code>- __[\\-\\-Sprogram (STRING)]__        序列对比程序，Options: blast, mmseqs, blast_gz, diamond ( Default blast)\n</code></pre>\n<br/>\n\n<ul>\n<li><p><strong>--ANI</strong></p>\n<ul>\n<li><p><strong>[--queryL (FILE)]</strong>            [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--refL (FILE)]</strong>              [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--ANIO (FILE)]</strong>              The name of output file ( Default “Results&#x2F;ANI&#x2F;ANIs” )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--VAR</strong></p>\n<ul>\n<li><p><strong>[--refgbk (FILE)]</strong>            [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: “&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk”</p>\n</li>\n<li><p><strong>[--qualtype (STRING)]</strong>        [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p>\n</li>\n<li><p><strong>[--qual (INT)]</strong>               Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li><p><strong>[--length (INT)]</strong>             Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li><p><strong>[--mincov (INT)]</strong>             The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li><p><strong>[--minfrac (FLOAT)]</strong>          The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li><p><strong>[--minqual (INT)]</strong>            The minimum VCF variant call “quality” ( Default 100 )</p>\n</li>\n<li><p><strong>[--ram (INT)]</strong>                Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n<li><p><strong>[--tree_builder (STRING)]</strong>    Application to use for tree building [raxml|fasttree|hybrid] ( Default fasttree)</p>\n</li>\n<li><p><strong>[--iterations (INT)]</strong>         Maximum No. of iterations for gubbins ( Default 5 )</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--AntiRes</strong></p>\n<ul>\n<li><p><strong>[--db (STRING)]</strong>              [Required] 用于分析的数据库, options: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, ecoli_vf, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default ncbi )</p>\n</li>\n<li><p><strong>[--identity (INT)]</strong>           [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li><p><strong>[--coverage (INT)]</strong>           [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--STREE</strong></p>\n<ul>\n<li><p><strong>[--seqfile (STRING)]</strong>        [Required] Path of the sequence file for analysis.</p>\n</li>\n<li><p><strong>[--seqtype (INT)]</strong>           [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n<li><p><strong>[--bsnum (INT)]</strong>             [Required] Times for bootstrap. ( Default 1000 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong>         Filter short sequences in the genome and assess the status of the genome(详细参数通过”pgcgap ACC”查看)</li>\n</ul>\n</li>\n<li><p><strong>依赖软件安装目录</strong></p>\n<p>Not needed if they were in the environment variables path. Users can check with the “–check-external-programs” option for the essential programs.</p>\n<br/>\n</li>\n<li><p><strong>[--abricate-bin (PATH)]</strong>          Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--abyss-bin (PATH)]</strong>             Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--canu-bin (PATH)]</strong>              Path to canu binary file. Default tries if canu is in PATH;</p>\n</li>\n<li><p><strong>[--cd-hit-bin (PATH)]</strong>            Path to cd-hit binary file. Default tries if cd-hit is in PATH;</p>\n</li>\n<li><p><strong>[--fastANI-bin (PATH)]</strong>           Path to the fastANI binary file. Default tries if fastANI is in PATH;</p>\n</li>\n<li><p><strong>[--Gblocks-bin (PATH)]</strong>           Path to the Gblocks binary file. Default tries if Gblocks is in PATH;</p>\n</li>\n<li><p><strong>[--gubbins-bin (PATH)]</strong>           Path to the run_gubbins.py binary file. Default tries if run_gubbins.py is in PATH;</p>\n</li>\n<li><p><strong>[--iqtree-bin (PATH)]</strong>            Path to the iqtree binary file. Default tries if iqtree is in PATH;</p>\n</li>\n<li><p><strong>[--mafft-bin (PATH)]</strong>             Path to mafft binary file. Default tries if mafft is in PATH;</p>\n</li>\n<li><p><strong>[--mash-bin (PATH)]</strong>              Path to the mash binary file. Default tries if mash is in PATH.</p>\n</li>\n<li><p><strong>[--modeltest-ng-bin (PATH)]</strong>      Path to the modeltest-ng binary file. Default tries if modeltest-ng is in PATH.</p>\n</li>\n<li><p><strong>[--muscle-bin (PATH)]</strong>            Path to the muscle binary file. Default tries if muscle is in PATH.</p>\n</li>\n<li><p><strong>[--orthofinder-bin (PATH)]</strong>       Path to the orthofinder binary file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li><p><strong>[--pal2nal-bin (PATH)]</strong>           Path to the pal2nal.pl binary file. Default tries if pal2nal.pl is in PATH;</p>\n</li>\n<li><p><strong>[--prodigal-bin (PATH)]</strong>          Path to prodigal binary file. Default tries if prodigal is in PATH;</p>\n</li>\n<li><p><strong>[--prokka-bin (PATH)]</strong>            Path to prokka binary file. Default tries if prokka is in PATH;</p>\n</li>\n<li><p><strong>[--raxml-ng-bin (PATH)]</strong>          Path to the raxml-ng binary file. Default tries if raxml-ng is in PATH;</p>\n</li>\n<li><p><strong>[--roary-bin (PATH)]</strong>             Path to the roary binary file. Default tries if roary is in PATH;</p>\n</li>\n<li><p><strong>[--sickle-bin (PATH)]</strong>            Path to the sickle-trim binary file. Default tries if sickle is in PATH.</p>\n</li>\n<li><p><strong>[--snippy-bin (PATH)]</strong>            Path to the snippy binary file. Default tries if snippy is in PATH;</p>\n</li>\n<li><p><strong>[--snp-sites-bin (PATH)]</strong>         Path to the snp-sites binary file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li><p><strong>[--unicycler-bin (PATH)]</strong>         Path to the unicycler binary file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>配置COG数据库</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong>                  首次安装PGCGAP后需要执行此步</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n\n<ul>\n<li><p>检查依赖软件包是否安装 (<strong>强烈建议在安装完PGCGAP之后运行此步</strong>):</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-external-programs</span><br></pre></td></tr></table></figure></li>\n</ul>\n<br/>\n\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><ul>\n<li><p><strong>Example 1:</strong> 执行所有模块，以 <em>Escherichia coli</em> 的6个 Illumina 双端 reads 为数据集。</p>\n<p>__注__：为了提高灵活性，”VAR” 模块需要额外添加。<br/></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 2:</strong> 基因组组装。</p>\n<ul>\n<li><p><strong>Illumina双端reads组装</strong></p>\n<p>该数据集中，reads的命名格式为 “strain_1.fastq.gz” 和 “strain_2.fastq.gz”。 后缀名为 “_1.fastq.gz”，其长度为11，因此 “–suffix_len” 设置为11。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>Oxford reads组装</strong></p>\n<p>Oxford nanopore 测序仅产生一个reads文件，因此只需要设置 “–reads1” 参数，其值为 “.fasta”。 “–genomeSize” 是预估的基因组大小，用户可以到NCBI数据库中查看同物种基因组的大小作为参考，此处设置为 “4.8m”。Reads 文件的后缀名为 “.fasta”，其长度为6，因此将 “–suffix_len” 设置为6。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>PacBio reads组装</strong></li>\n</ul>\n<p> PacBio同样只产生一个文件 “pacbio.fastq”，参数设置与Oxford类似。此处，文件的后缀名为 “.fastq”，其长度为6，因此 “–suffix_len” 设置为6。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 3:</strong> 基因预测及注释。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 4:</strong> 构建单拷贝核心蛋白进化树与核心SNPs进化树。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 5:</strong> 仅构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 6:</strong> 进行泛基因组分析并构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 7:</strong> 同源蛋白家族聚类分析并构建进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 8:</strong> 计算两两基因组之间的平均核苷酸一致性(ANI)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ANI --threads 4 --queryL scaf.list --refL scaf.list --ANIO Results/ANI/ANIs --Scaf_suffix .fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 9:</strong> 通过MinHash计算基因组及宏基因组的相似性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --MASH --scafPath &lt;PATH&gt; --Scaf_suffix &lt;STRING&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 10:</strong> 对所有基因组进行COG注释。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --pCOG --threads 4 --strain_num 6 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 11:</strong> 变异(SNPs, Indels)检测与注释，并构建基于参考基因组的SNPs进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 12:</strong> 从基因组中寻找抗生素抗性基因或毒力基因。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db ncbi --identity 75 --coverage 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"准备输入文件\"><a href=\"#准备输入文件\" class=\"headerlink\" title=\"准备输入文件\"></a>准备输入文件</h2><h3 id=\"工作目录\"><a href=\"#工作目录\" class=\"headerlink\" title=\"工作目录\"></a>工作目录</h3><ul>\n<li>PGCGAP的运行目录。</li>\n</ul>\n<h3 id=\"Assemble\"><a href=\"#Assemble\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li>将所有双端reads、或PacBio reads 或 Oxford nanopore reads存于某个目录下 (Default: .&#x2F;Reads&#x2F;Illumina&#x2F;)。</li>\n</ul>\n<h3 id=\"Annotate\"><a href=\"#Annotate\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"ANI\"><a href=\"#ANI\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li>QUERY_LIST 和 REFERENCE_LIST 文件，每个文件中含有需要计算的基因组的绝对路径，每个基因组一行 (default: 工作目录下的”scaf.list”)。若先运行了 “–Assemble” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"CoreTree\"><a href=\"#CoreTree\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li>将所有菌株的氨基酸文件 (后缀名必须为 “.faa”) 和核苷酸文件 (需以 “.ffn” 为后缀) 分别存放于两个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;” 和 “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;”)。“.faa” 和 “.ffn” 文件需要有相同的前缀名字，且 protein IDs 和 gene IDs 需以菌株名开头。建议用 “Prokka” 软件获取输入文件，若已经运行了 “–Annotate” 模块，则该模块的输入文件会自动生产。若 “–CDsPath” 设置为 “NO”，则不需要提供核苷酸文件，但也不会生产核心SNPs进化树。</li>\n</ul>\n<h3 id=\"MASH\"><a href=\"#MASH\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"OrthoF\"><a href=\"#OrthoF\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li>所有菌株的fasta格式氨基酸文件(每个菌株一个文件)存放于一个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;”)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"Pan\"><a href=\"#Pan\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li>包含所有菌株GFF3 文件 (With “.gff” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;);</li>\n<li>若先运行了 “–Annotate” 模块，上述文件会自动生成。</li>\n</ul>\n<h3 id=\"pCOG\"><a href=\"#pCOG\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li>存放所有菌株的fasta格式氨基酸序列文件 (With “.faa” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"VAR\"><a href=\"#VAR\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li>包含所有菌株的 Pair-end reads 的目录路径 (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory)。</li>\n<li>fasta 格式或 GenBank 格式的参考基因组的绝对路径 (<strong>必需提供</strong>)。</li>\n</ul>\n<h3 id=\"AntiRes\"><a href=\"#AntiRes\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li>存放基因组(complete or draft)的目录 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</li>\n</ul>\n<h3 id=\"STREE\"><a href=\"#STREE\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</li>\n</ul>\n<h2 id=\"输出文件解读\"><a href=\"#输出文件解读\" class=\"headerlink\" title=\"输出文件解读\"></a>输出文件解读</h2><h3 id=\"Assemble-1\"><a href=\"#Assemble-1\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong><br/><br>Directories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong><br/><br>Directories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong><br/><br>Directories contain ONT assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong><br/><br>Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina</strong><br/><br>Directory contains Illumina contigs&#x2F;scaffolds of all strains. “*.filtered.fas” is the genome after excluding short sequences. “*.prefilter.stats” describes the stats of the genome before filtering, and “*.filtered.stats” describes the stats of the genome after filtering.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford</strong><br/><br>Directory contains Oxford nanopore contigs&#x2F;scaffolds of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio</strong><br/><br>Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"Annotate-1\"><a href=\"#Annotate-1\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation</strong><br/><br>directories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;AAs</strong><br/><br>Directory contain amino acids sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;CDs</strong><br/><br>Directory contain nucleotide sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;GFF</strong><br/><br>Directory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ANI-1\"><a href=\"#ANI-1\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong><br/><br>The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong><br/><br>file with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong><br/><br>An ANI matrix of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong><br/><br>The heatmap plot of “ANIs.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"MASH-1\"><a href=\"#MASH-1\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong><br/><br>The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong><br/><br>The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong><br/><br>A similarity matrix of all genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong><br/><br>A heat map plot of “MASH.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"CoreTree-1\"><a href=\"#CoreTree-1\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong><br/><br>Core SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.nwk</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;“Other_files”</strong><br/><br>Intermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"OrthoF-1\"><a href=\"#OrthoF-1\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong><br/><br>Same as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong><br/><br>Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong><br/><br>Phylogenetic tree constructed by FastTree.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong><br/><br>Phylogenetic tree constructed by IQ-TREE.<br/></p>\n</li>\n</ul>\n<h3 id=\"Pan-1\"><a href=\"#Pan-1\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong><br/><br>A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong><br/><br>A graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong><br/><br>A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong><br/><br>Alignments of single-copy core proteins called by roary software.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong><br/><br>see <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pCOG-1\"><a href=\"#pCOG-1\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong><br/><br>Intermediate files.</p>\n</li>\n<li><p><strong>*.2Scog.table</strong><br/><br>The super COG table of each strain.</p>\n</li>\n<li><p><strong>*.2Scog.table.pdf</strong><br/><br>A plot of super COG table in pdf format.</p>\n</li>\n<li><p><strong>All_flags_relative_abundances.table</strong><br>A table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"VAR-1\"><a href=\"#VAR-1\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong><br/><br>directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li><p><strong>Results&#x2F;Variants&#x2F;Core</strong><br/><br>The directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.*.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>gubbins.core.full.node_labelled.final_tree.tre</strong> : Phylogenetic tree of the whole genome SNP alignment constructed with <strong>gubbins</strong> (get rid of recombination).</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"AntiRes-1\"><a href=\"#AntiRes-1\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li>\n</ul>\n<h3 id=\"STREE-1\"><a href=\"#STREE-1\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n</ul>\n<h2 id=\"使用许可\"><a href=\"#使用许可\" class=\"headerlink\" title=\"使用许可\"></a>使用许可</h2><p>PGCGAP 不可商用，其它情况可使用免费(licensed under GPLv3)。</p>\n<h2 id=\"反馈与提问\"><a href=\"#反馈与提问\" class=\"headerlink\" title=\"反馈与提问\"></a>反馈与提问</h2><p>若有问题，可在 <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> 提出或通过邮件咨询 <a href=\"mailto:liaochenlanruo@webmail.hzau.edu.cn\">liaochenlanruo@webmail.hzau.edu.cn</a>。</p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><ul>\n<li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. <em>Protocol exchange</em>, 2020. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v5\">10.21203&#x2F;rs.2.21224&#x2F;v5</a></p>\n</li>\n<li><p>If you use “--Assemble”, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li><p>If you use “--Annotate”, please also cite <a href=\"https://www.pixiv.net/member_illust.php?mode=medium&illust_id=24642063\">Prokka</a>.</p>\n</li>\n<li><p>If you use “--CoreTree”, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li><p>If you use “--Pan”, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--OrthoF”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--ANI”, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li><p>If you use “--MASH”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li><p>If you use “--VAR”, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>,  <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li><p>If you use “--AntiRes”, please also cite <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li><p>If you use “--STREE”, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a> , <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><h3 id=\"Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\"><a href=\"#Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\" class=\"headerlink\" title=\"Q1 VAR founction ran failed to get annotated VCFs and Core results\"></a>Q1 VAR founction ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in “strain_name.log” under Results&#x2F;Variants&#x2F;<strain_name>&#x2F; directory. If you find a sentence like “WARNING: All frames are zero! This seems rather odd, please check that ‘frame’ information in your ‘genes’ file is accurate.” This is an snpEff error. Users can install JDK8 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install java-jdk=8.0.112</span><br></pre></td></tr></table></figure>\n\n\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a href=\"#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\" class=\"headerlink\" title=\"Q2 Could not determine version of minced please install version 2 or higher\"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running prokka of Assemble founction, this error could happened, the error message shows as following:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: A JNI error has occurred, please check your installation and try again</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass1(Native Method)</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)</span><br><span class=\"line\">\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)</span><br><span class=\"line\">\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:468)</span><br><span class=\"line\">\tat java.net.URLClassLoader.access$100(URLClassLoader.java:74)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:369)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:363)</span><br><span class=\"line\">\tat java.security.AccessController.doPrivileged(Native Method)</span><br><span class=\"line\">\tat java.net.URLClassLoader.findClass(URLClassLoader.java:362)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class=\"line\">\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class=\"line\">\tat sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)</span><br><span class=\"line\">[01:09:40] Could not determine version of minced - please install version 2.0 or higher</span><br></pre></td></tr></table></figure>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install minced=0.3</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\"><a href=\"#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\" class=\"headerlink\" title=\"Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib\"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function “VAR” on macOS. It is an error of openssl. Users can solve this problem as following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Firstly, install brew if have not installed before</span></span><br><span class=\"line\"><span class=\"variable\">$ruby</span> -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Install openssl with brew</span></span><br><span class=\"line\"><span class=\"variable\">$brew</span> install openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Create the soft link for libraries</span></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations</p>\n<h3 id=\"Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\"><a href=\"#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\" class=\"headerlink\" title=\"Q4 Use of uninitialized value in require at Encode.pm line 61\"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function “Pan”. It is a warning of Roary software.<br>The content of line 61 is “require Encode::ConfigLocal;”. Users can ignore the warning.<br>Click <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><ul>\n<li><p>V1.0.3</p>\n<ul>\n<li>Updated ANI fuction.</li>\n</ul>\n</li>\n<li><p>V1.0.4</p>\n<ul>\n<li>Add parallel for function “COG”.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.5</p>\n<ul>\n<li>Bug repair for input of gubbins.</li>\n</ul>\n</li>\n<li><p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li><p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function “COG” to “pCOG”.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.8</p>\n<ul>\n<li>Add the “MASH” function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li><p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to “Pan”.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan chart has been added.</li>\n<li>Fixed a bug for ploting the ANI matrix.</li>\n</ul>\n</li>\n<li><p>V1.0.10</p>\n<ul>\n<li>Add the “AntiRes” function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li><p>V1.0.11</p>\n<ul>\n<li>Users now can choose “abyss” or “spades” for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command “pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]“, and can look up the examples of each module with command “pgcgap Examples”.</li>\n</ul>\n</li>\n<li><p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls “ABySS” for genome assembly. When the assembled N50 is less than 50,000, it automatically calls “SPAdes” to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li><p>V1.0.13</p>\n<ul>\n<li>Fixed the “running error” bug of function “Assess” in module “ACC”.</li>\n<li>Added module “STREE” for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li><p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n</ul>\n</li>\n<li><p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li><p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running “Annotate” analysis to avoid program crash.</li>\n</ul>\n</li>\n<li><p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module “CoreTree”.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li><p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module “STREE”.</li>\n</ul>\n</li>\n<li><p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li><p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module “VAR”.</li>\n<li>Fixed a little bug of module “CoreTree” to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.21</p>\n<ul>\n<li>Change the default search program “blast” to “diamond” of module “OrthoF”.</li>\n<li>Fixed a bug of module “pCOG” to output the right figure.</li>\n</ul>\n</li>\n<li><p>V1.0.22</p>\n<ul>\n<li>The drawing function of module “ANI” and module “MASH” has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module “ANI”, that is no heatmap will be drawn when there is “NA” in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li><p>V1.0.23</p>\n<ul>\n<li>The “–Assess” function of module “ACC” was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li><p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module “Pan” to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module “CoreTree” and “Pan”.</li>\n<li>The parameter “–identi” was added into module “Pan” to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li><p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module “ANI” and “MASH”.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the “ANI” and “MASH” analysis.</li>\n</ul>\n</li>\n<li><p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li><p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command “pgcgap –check-update”.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/COG\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter “CoreTree” in the module Pan to avoid program termination caused by the “&gt;” in non-sequence lines.</li>\n</ul>\n</li>\n<li><p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the “permission denied” error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li><p>V1.0.30</p>\n</li>\n<li><p>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</p>\n</li>\n<li><p>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</p>\n</li>\n<li><p>Added the option of using FastTree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</p>\n</li>\n<li><p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li><p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try “pgcgap Examples” to have a look.</li>\n<li>Updated module AntiRes: the parameter –db had been modified to add choices of “all” and “megares”.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"比较基因组学","path":"api/tags/比较基因组学.json"},{"name":"PGCGAP","path":"api/tags/PGCGAP.json"}]},{"title":"Perl获取外部命令执行结果的输出","slug":"Perl获取外部命令执行结果的输出","date":"2019-04-19T07:54:38.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Perl获取外部命令执行结果的输出.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>有时候perl脚本需要与Linux外部命令进行交互，本文讲解如何将外部命令的执行结果的输出（此处指的不是运行结果的返回值，而是标准输出上的内容之类）赋给perl变量。</p>\n<span id=\"more\"></span>\n<p>首先需要了解perl调用shell命令的三种方式：</p>\n</br>\n**1. system**\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(<span class=\"string\">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n</br>\n通过system运行得到的结果是一个返回值，其实是一串数字，若外部命令运行成功，则返回值为“0”，若运行失败，则返回非0的值。\n\n</br>\n**2. 反引号** （ESC下面的那个键）\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`<span class=\"built_in\">command</span>`;</span><br></pre></td></tr></table></figure>\n\n</br>\n通过反引号运行，会返回shell运行结果的输出，下面的脚本通过“which”查询“COG_2014.phr”的绝对路径，并将其赋值给`$path`。然后通过正则表达式获取“COG_2014.phr”所在的目录的路径，并将其赋值给变量`$cogdb_dir`。\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my <span class=\"variable\">$cogdb_dir</span>;</span><br><span class=\"line\">my <span class=\"variable\">$path</span> = `<span class=\"built_in\">which</span> COG_2014.phr`;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$path</span>=~/(.+)COG_2014.*/) &#123;</span><br><span class=\"line\">\t<span class=\"variable\">$cogdb_dir</span> = <span class=\"variable\">$1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"variable\">$cogdb_dir</span>;</span><br></pre></td></tr></table></figure>\n\n</br>\n**3. exec**\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exec</span>(<span class=\"string\">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n</br>\nexec与system相似，但是执行完exec命令之后，perl会终止运行，不再执行后续的代码。\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"Perl捕获外部命令执行异常并继续运行后续代码","slug":"Perl捕获外部命令执行异常并继续运行后续代码","date":"2019-04-19T02:34:49.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Perl捕获外部命令执行异常并继续运行后续代码.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>在编写perl脚本时经常会调用外部命令，由于种种原因，会遇到外部命令执行异常，而导致整个脚本终止运行。这对于大的项目来说很不经济，因此，可以想办法越过这个异常并继续执行后续脚本。</p>\n<span id=\"more\"></span>\n\n<p>Examples：</p>\n</br>\n假设有一个外部命令“command”需要执行，将该命令存到一个数组当中：\n\n</br>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my @arr = (<span class=\"string\">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n</br>\n将外部命令的返回值赋给一个变量：\n\n</br>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my <span class=\"variable\">$return</span> = sysstem(@arr);</span><br></pre></td></tr></table></figure>\n\n</br>\n判断返回值是否为“0”，0代表运行正常，任何非0的值均表示有运行异常。如果返回值不为0，则记录错误，然后继续运行后续代码：\n\n</br>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!(<span class=\"variable\">$return</span> == 0))&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&quot;There are some errors when running the command!\\n&quot;</span>;</span><br><span class=\"line\">    command2;<span class=\"comment\">#继续运行其他命令</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</br>\n\n<p><strong>注：</strong>本方案仅在Linux系统下测试，不晓得Windows和Mac的返回值与Linux是否一致，Linux中的“core dump”就可以如此来捕获。</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"Wget 技巧","slug":"Wget-技巧","date":"2019-04-14T12:17:46.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Wget-技巧.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文例举一些Linux系统下的下载工具“wget”的高级用法。</p>\n<span id=\"more\"></span>\n<h3 id=\"1-下载目录下所有文件：\"><a href=\"#1-下载目录下所有文件：\" class=\"headerlink\" title=\"1.下载目录下所有文件：\"></a>1.下载目录下所有文件：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -c -r -nH -np -nd -R index.html -P ./data ftp://ftp.ncbi.nih.gov/pub/COG/COG2014/data/</span><br></pre></td></tr></table></figure>\n\n<p></br>-c：断点续传</p>\n<p>-r：遍历子目录</p>\n<p>-nH：不将文件保存在FTP主机名目录下</p>\n<p>-np：递归下载时不搜索上层目录</p>\n<p>-nd：递归下载时不创建一层一层的目录，把所有的文件下载到当前目录</p>\n<p>-R index.html：不生成 index.html文件</p>\n<p>-P .&#x2F;data：将数据下载到当前目录下的data目录下</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"下载","path":"api/tags/下载.json"}]},{"title":"Github操作","slug":"github操作","date":"2019-04-01T00:46:44.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/github操作.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文讲述了Github一些操作技巧……</p>\n<span id=\"more\"></span>\n\n<h1 id=\"TAG相关操作\"><a href=\"#TAG相关操作\" class=\"headerlink\" title=\"TAG相关操作\"></a>TAG相关操作</h1><p></br>通过Tag可以将项目生成不同的版本，并进行存档，供用户下载。这在软件中是很常见的。</p>\n<ul>\n<li><p><strong>创建tag</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag v1.0.0 -m <span class=\"string\">&#x27;first version&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>上传到github</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin v1.0.0</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>存档某个tag</strong></p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git archive -v --format=tar v1.0.0 &gt; v1.0.0.tar.gz</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>删除tag</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d v1.0.0</span><br><span class=\"line\">git push origin :refs/tags/v1.0.0</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"Branch\"><a href=\"#Branch\" class=\"headerlink\" title=\"Branch\"></a>Branch</h1><h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><ul>\n<li><p>创建并切换到名为<code>pgcgap</code>的分支</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b pgcgap</span><br></pre></td></tr></table></figure></li>\n<li><p>将<code>pgcgap</code>分支推送到远程端</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin pgcgap</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h2><p>假设要删除当前所处的<code>pgcgap</code>分支。</p>\n<ul>\n<li><p>切换到别的分支，如master</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br></pre></td></tr></table></figure></li>\n<li><p>删除本地分支</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 有时候需要强制删除</span></span><br><span class=\"line\">git branch -D pgcgap</span><br></pre></td></tr></table></figure></li>\n<li><p>删除远程分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --delete pgcgap</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"Git-加速\"><a href=\"#Git-加速\" class=\"headerlink\" title=\"Git 加速\"></a>Git 加速</h1><p>进行git操作时以<code>github.com.cnpmjs.org</code>替换<code>github.com</code>可以提速10倍左右。</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"}]}]}