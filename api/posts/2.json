{"total":102,"pageSize":10,"pageCount":11,"data":[{"title":"在Linux服务器中安装网页版Rstudio","slug":"在Linux服务器中安装网页版Rstudio","date":"2021-11-02T01:37:03.000Z","updated":"2022-01-08T02:16:28.439Z","comments":true,"path":"api/articles/在Linux服务器中安装网页版Rstudio.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg","content":"<p>本文演示如何在 CentOS7 服务器上安装 Rstudio server。</p>\n<h1 id=\"安装rstudio\"><a class=\"markdownIt-Anchor\" href=\"#安装rstudio\"></a> 安装 Rstudio</h1>\n<p>访问<a href=\"https://www.rstudio.com/products/rstudio/download-server\"> Rstudio 官网</a>，选择对应的 Linux 发行版，下载 Rstudio 安装包。本文以最常见的 CentOS7 为例演示，<strong>前提是系统中已经安装了 R</strong>。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://download2.rstudio.org/server/centos7/x86_64/rstudio-server-rhel-2021.09.0-351-x86_64.rpm\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> rstudio-server-rhel-2021.09.0-351-x86_64.rpm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"开启rstudio服务\"><a class=\"markdownIt-Anchor\" href=\"#开启rstudio服务\"></a> 开启 Rstudio 服务</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> rstudio-server.service\n<span class=\"token function\">sudo</span> systemctl start rstudio-server.service\n<span class=\"token function\">sudo</span> systemctl status rstudio-server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"开启8787端口\"><a class=\"markdownIt-Anchor\" href=\"#开启8787端口\"></a> 开启 8787 端口</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewalld\n<span class=\"token function\">sudo</span> firewall-cmd --permanent --add-port<span class=\"token operator\">=</span><span class=\"token number\">8787</span>/tcp\n<span class=\"token function\">sudo</span> firewall-cmd --permanent --add-port<span class=\"token operator\">=</span><span class=\"token number\">8787</span>/udp\n<span class=\"token function\">sudo</span> firewall-cmd --reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"远程登录rstudio\"><a class=\"markdownIt-Anchor\" href=\"#远程登录rstudio\"></a> 远程登录 Rstudio</h1>\n<p>在浏览器地址栏输入 <code>http://ip:8787/</code>  打开网页，输入自己的用户名和密码登录即可。</p>\n<h1 id=\"错误处理\"><a class=\"markdownIt-Anchor\" href=\"#错误处理\"></a> 错误处理</h1>\n<h2 id=\"rstudio服务启动失败\"><a class=\"markdownIt-Anchor\" href=\"#rstudio服务启动失败\"></a> Rstudio 服务启动失败</h2>\n<h3 id=\"症状\"><a class=\"markdownIt-Anchor\" href=\"#症状\"></a> 症状</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"sudo rstudio-server status\" /></p>\n<h3 id=\"排雷\"><a class=\"markdownIt-Anchor\" href=\"#排雷\"></a> 排雷</h3>\n<ul>\n<li>\n<p>检查安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> rstudio-server verify-installation<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"sudo rstudio-server verify-installation\" /></p>\n<p>提示 “/usr/lib/rstudio-server/bin/rsession: error while loading shared libraries: <a href=\"http://libR.so\">libR.so</a>: cannot open shared object file: No such file or directory”，表明缺少 libR.so 库。</p>\n</li>\n<li>\n<p>安装 R</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y R.x86_64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>再次检查安装情况</p>\n<p>提示找不到 R。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"sudo rstudio-server verify-installation\" /></p>\n<p>可以看到这里进入了 conda 的 base 环境，它影响了程序的判断，退出 conda 环境后再试一下就不再报错了。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda deactivate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>注</strong>：conda 环境一定要退彻底。</p>\n</li>\n<li>\n<p>再次启动 Rstudio 服务，并查看状态</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> rstudio-server start\n<span class=\"token function\">sudo</span> rstudio-server status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"rstudio-server正常运行\" /></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"命令模式下配置Linux网络","slug":"命令模式下配置Linux网络","date":"2021-10-30T00:41:29.000Z","updated":"2022-01-08T02:16:28.437Z","comments":true,"path":"api/articles/命令模式下配置Linux网络.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>配置网卡接口 eth0:</p>\n<p>进入配置文件所在目录，并在超级用户权限下编辑网络配置对应的文件（不同的机器文件名可能不一样）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /etc/sysconfig/network-scripts\n\n<span class=\"token function\">vim</span> ifcfg-enp4s0f0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>内容如下：</p>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">TYPE&#x3D;Ethernet\nPROXY_METHOD&#x3D;none\nBROWSER_ONLY&#x3D;no\nBOOTPROTO&#x3D;none\nDEFROUTE&#x3D;yes\nIPV4_FAILURE_FATAL&#x3D;no\nIPV6INIT&#x3D;yes\nIPV6_AUTOCONF&#x3D;yes\nIPV6_DEFROUTE&#x3D;yes\nIPV6_FAILURE_FATAL&#x3D;no\nIPV6_ADDR_GEN_MODE&#x3D;stable-privacy\nNAME&#x3D;enp4s0f0\nUUID&#x3D;10a90825-f850-4717-a2c3-0d7e936bd33X\nDEVICE&#x3D;enp4s0f0\nONBOOT&#x3D;yes\nIPADDR&#x3D;172.16.98.15X\nNETMASK&#x3D;255.255.255.0\nGATEWAY&#x3D;172.16.98.X\nDNS1&#x3D;10.8.8.X\nDNS2&#x3D;10.8.4.X\nMACADDR&#x3D;&quot;08:3A:88:54:C7:7X&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>MACADDR</strong> 为 MAC 地址，<strong>IPADDR</strong> 为 IP 地址，<strong>NETMASK</strong> 为子网掩码，<strong>GATEWAY</strong> 为网关地址，“X” 为虚构的，保护隐私。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">service</span> network restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"在FASTA文件中搜索完全匹配的短序列","slug":"在FASTA文件中搜索完全匹配的短序列","date":"2021-10-20T13:12:57.000Z","updated":"2022-01-08T02:16:28.438Z","comments":true,"path":"api/articles/在FASTA文件中搜索完全匹配的短序列.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>有时候需要在 FASTA 格式的文件中搜索短的保守序列，这个时候采用查找法比使用 blast 等序列比对更加人性化。<u>但是要注意避坑，即 FASTA 文档中的序列一般是被打断为许多行的，如果要查找的目标序列恰好在断行处，是没有办法直接揪出它的</u>，所以在查找前需要将序列中间的换行符去掉，将其变为一行。</p>\n<p>该任务可以通过 Perl 脚本<strong> search_short_seqs.pl</strong> 实现。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 20, 2021</span>\n\n<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\nopen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$ARGV[0]\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Target_seqs.fa\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$ARGV</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tchomp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$seq</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$seq</span><span class=\"token operator\">=~</span><span class=\"token regex\">/$str/i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\">$id\\n$seq\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IN<span class=\"token punctuation\">;</span>\nclose OUT<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行方法：将<strong> search_short_seqs.pl</strong> 与输入文件（FASTA 文件）放在同一目录中，在终端里运行如下命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl search_short_seqs.pl FASTA文件 要查找的序列<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>带有搜索序列的序列将输出到文件<strong> Target_seqs.fa</strong> 中。</p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “6a93” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"序列处理","path":"api/tags/序列处理.json"}]},{"title":"hexo-theme-sakuraplus表格边框及滚动条调教","slug":"hexo-theme-sakuraplus表格边框及滚动条调教","date":"2021-10-19T02:51:10.000Z","updated":"2022-01-08T02:16:28.421Z","comments":true,"path":"api/articles/hexo-theme-sakuraplus表格边框及滚动条调教.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e5ab_1.jpg","content":"<p>sakuraplus 主题默认是不显示表格边框的，而且对于比较宽的表格容易溢出，使得布局不美观。表格边框可以修改 CSS 来添加，较宽的表格可以通过添加滚动条来控制其不溢出，说起来简单，但是中间有很多坑，特此记录。</p>\n<h1 id=\"添加表格边框\"><a class=\"markdownIt-Anchor\" href=\"#添加表格边框\"></a> 添加表格边框</h1>\n<p>该主题默认的 style 用的是<a href=\"https://github.com/cungudafa/cdn/blob/master/css/style.css\"> https://github.com/cungudafa/cdn/blob/master/css/style.css</a>，没有办法修改，因此，我们将采用本地样式表替换它。</p>\n<p>打开 themes/hexo-theme-sakuraplus/layout/_partial/head.ejs，找到并注释掉 <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- theme.libs.css.style %&gt;&quot; type=&quot;text/css&quot; media=&quot;all&quot; id=&quot;saukra_css-css&quot;&gt;</code> ，然后添加 <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- config.root %&gt;css/style.css&quot; media=&quot;screen&quot; type=&quot;text/css&quot;&gt;</code> ，打开 themes/hexo-theme-sakuraplus/source/css/style.css，大概在 1074 行，修改 table 的 CSS 属性，内容如下：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">table</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">border-collapse</span><span class=\"token punctuation\">:</span> collapse<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-spacing</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">table td,\ntable th</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> visible<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> .5em 1em\n<span class=\"token comment\">/*    border-width: 1px 1px 1px 1px;\n    border-bottom: 1px solid #cbcbcb;\n    border-left: 1px solid #cbcbcb;\n    border-right: 1px solid #cbcbcb;\n    border-top: 1px solid #cbcbcb;*/</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>划重点</strong>：（1）注意分号的有无；（2）后面 5 行需要注释掉，不然所有的代码块都会被加上边框，这是其中的一个坑，当然，也可以将后五行的颜色改为 black，酱紫在黑色代码框中，其边线不是很明显。</p>\n<p><strong>存在的问题</strong>：即便像上面一样设置，边框其实还是加在了代码块中，我们可以做的就是将边线颜色设置的和代码块颜色一致或者相近。表格里面的样式会被添加到代码块上，比如将 text-align: 设置为 center，所有的代码将居中显示，暂时无解。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e5ab_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e5ab_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"被表格样式传染的代码块带上了边框\" /></p>\n<h1 id=\"为宽表格添加滚动条\"><a class=\"markdownIt-Anchor\" href=\"#为宽表格添加滚动条\"></a> 为宽表格添加滚动条</h1>\n<p>在 markdown 表格的开头和结尾各另起行，加入 DIV 和 table 标签，格式如下</p>\n<p>&lt;div style=&quot;overflow-x:auto;&quot;&gt;<br />\n&lt;table&gt;</p>\n<p>markdown 格式的表格<br />\n &lt;/table&gt;<br />\n&lt;/div&gt;</p>\n<p><strong>注</strong>：&lt;table&gt; 与表格首行之间需要加一空行！</p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://www.w3school.com.cn/css/css_table.asp\">CSS 表格</a></li>\n</ul>\n","raw":null,"categories":[{"name":"网站建设","path":"api/categories/网站建设.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"}]},{"title":"SignalP+TMHMM预测微生物分泌蛋白","slug":"SignalP-TMHMM预测微生物分泌蛋白","date":"2021-10-14T01:09:45.000Z","updated":"2022-01-08T02:16:28.415Z","comments":true,"path":"api/articles/SignalP-TMHMM预测微生物分泌蛋白.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg","content":"<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p>\n<p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的 N 端有一般由 15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度 5-30 个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的 N - 末端的氨基酸序列（有时不一定在 N 端）。<u>使用<strong> SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong> TMHMM</strong> 注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p>\n<h1 id=\"ruby软件-rtsoftwarertruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件-rtsoftwarertruby\"></a> <ruby>软件 <rt>Software</rt></ruby></h1>\n<ul>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li>\n<p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p>\n<ul>\n<li>\n<p>Sec/SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的 “标准” 分泌信号肽；<rt>&quot;Standard&quot; secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li>\n<p>Sec/SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li>\n<p>Tat/SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li>\n<p>Tat/SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li>\n<p>Sec/SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD/PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD/PibD).</rt></ruby></p>\n</li>\n<li>\n<p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a></p>\n<ul>\n<li>用于预测蛋白质中的跨膜螺旋。</li>\n</ul>\n</li>\n<li>\n<p>Python</p>\n</li>\n</ul>\n<p>SignalP 和 TMHMM 对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h 有效时间）。</p>\n<h1 id=\"ruby软件安装-rtinstallation-of-softwaresrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件安装-rtinstallation-of-softwaresrtruby\"></a> <ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1>\n<h2 id=\"安装signalp-60\"><a class=\"markdownIt-Anchor\" href=\"#安装signalp-60\"></a> 安装 SignalP 6.0</h2>\n<ul>\n<li>\n<p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\"> SignalP V6.0</a> 网站，找到 “Download”，填写相关信息，获取下载链接，下载得到 “signalp-6.0.fast.tar.gz”。有两个模式可以选择 ——“slow_sequential” 和 “fast&quot;。前者 runs the full model sequentially, taking the same amount of RAM as  <code>fast</code>  but being 6 times slower；后者 uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是 fast 模式。</p>\n</li>\n<li>\n<p><ruby>安装 <rt>Installation</rt></ruby></p>\n<ul>\n<li>\n<p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p>\n<ul>\n<li>\n<p>Python</p>\n</li>\n<li>\n<p>matplotlib&gt;3.3.2</p>\n</li>\n<li>\n<p>numpy&gt;1.19.2</p>\n</li>\n<li>\n<p>torch&gt;1.7.0</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> torch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>tqdm&gt;4.46.1</p>\n</li>\n</ul>\n</li>\n<li>\n<p>安装 SignalP 6.0</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压缩安装文件</span>\n<span class=\"token function\">tar</span> zxvf signalp-6.0.fast.tar.gz\n\n<span class=\"token comment\"># 进入解压后的软件目录，在终端运行</span>\npython setup.py <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># 测试安装</span>\nsignalp6 --help<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装tmhmm-v20c\"><a class=\"markdownIt-Anchor\" href=\"#安装tmhmm-v20c\"></a> 安装 TMHMM V2.0c</h2>\n<ul>\n<li>\n<p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\"> TMHMM V2.0c</a> 网站，找到 “Download”，填写相关信息，获取下载链接，下载得到 “tmhmm-2.0c.Linux.tar.gz”。</p>\n</li>\n<li>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压缩</span>\n<span class=\"token function\">tar</span> zxvf tmhmm-2.0c.Linux.tar.gz\n\n<span class=\"token comment\"># 进入解压后的目录</span>\n<span class=\"token builtin class-name\">cd</span> tmhmm-2.0c\n\n<span class=\"token comment\"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span>\n<span class=\"token builtin class-name\">pwd</span>\n\n<span class=\"token comment\"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span>\n\n<span class=\"token comment\"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><font color=\"#FF0000\">运行错误</font></p>\n<p>运行软件时总报 <code>Segmentation fault (core dumped)</code>  错误，暂时无解。各位可以使用其<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">在线版</a>。</p>\n</li>\n</ul>\n<h1 id=\"ruby软件用法-rtusagertruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件用法-rtusagertruby\"></a> <ruby>软件用法 <rt>Usage</rt></ruby></h1>\n<h2 id=\"signalp-60\"><a class=\"markdownIt-Anchor\" href=\"#signalp-60\"></a> SignalP 6.0</h2>\n<h3 id=\"ruby预测-rtpredictionrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby预测-rtpredictionrtruby\"></a> <ruby>预测 <rt>Prediction</rt></ruby></h3>\n<p>A command takes the following form</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>\n<p><code>fastafile</code>  <ruby>输入文件为 FASTA 格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p>\n</li>\n<li>\n<p><code>organism</code>  is either  <code>other</code>  or  <code>Eukarya</code> . Specifying  <code>Eukarya</code>  triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec/SPI).</p>\n</li>\n<li>\n<p><code>format</code>  can take the values  <code>txt</code> ,  <code>png</code> ,  <code>eps</code> ,  <code>all</code> . It defines what output files are created for individual sequences.  <code>txt</code>  produces a tabular  <code>.gff</code>  file with the per-position predictions for each sequence.  <code>png</code> ,  <code>eps</code> ,  <code>all</code>  additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p>\n</li>\n<li>\n<p><code>mode</code>  is either  <code>fast</code> ,  <code>slow</code>  or  <code>slow-sequential</code> . Default is  <code>fast</code> , which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster.  <code>slow</code>  runs the full model in parallel, which requires more than 14GB of RAM to be available.  <code>slow-sequential</code>  runs the full model sequentially, taking the same amount of RAM as  <code>fast</code>  but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p>\n</li>\n</ul>\n<h3 id=\"ruby输出rt-outputsrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby输出rt-outputsrtruby\"></a> <ruby>输出<rt> Outputs</rt></ruby></h3>\n<ul>\n<li>\n<p>output_dir/output.gff3：仅包含含有信号肽的序列信息；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"output.gff3\" /></p>\n</li>\n<li>\n<p>output_dir/prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li>\n<p>output_dir/region_output.gff3：包含所有的信号肽区域信息。</p>\n<ul>\n<li>\n<p>n-region: The n-terminal region of the signal peptide. Reported for Sec/SPI, Sec/SPII, Tat/SPI and Tat/SPII. Labeled as N</p>\n</li>\n<li>\n<p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec/SPI, Sec/SPII, Tat/SPI and Tat/SPII. Labeled as H</p>\n</li>\n<li>\n<p>c-region: The c-terminal region of the signal peptide, reported for Sec/SPI and Tat/SPI.</p>\n</li>\n<li>\n<p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p>\n</li>\n<li>\n<p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p>\n</li>\n<li>\n<p>Sec/SPIII: These signal peptides have no known region structure.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"region_output.gff3\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"批处理与结果优化\"><a class=\"markdownIt-Anchor\" href=\"#批处理与结果优化\"></a> 批处理与结果优化</h3>\n<p>脚本名：run_SignalP.pl</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 14, 2021</span>\n\n\nopen IDNOSEQ<span class=\"token punctuation\">,</span> <span class=\"token string\">\">IDNOSEQ.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@faa</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@faa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(.+).faa/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".nodesc\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$sigseq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".sigseq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$outdir</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_signalp\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\">/^(>\\S+)/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span> <span class=\"token operator\">=</span> idseq<span class=\"token punctuation\">(</span><span class=\"token variable\">$out</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gff</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$outdir</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/output.gff3\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token operator\">-z</span> <span class=\"token variable\">$gff</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$gff\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$sigseq\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> IDNOSEQ <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"$lines[0]\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tclose IN<span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"rm $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv $sigseq $outdir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IDNOSEQ<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token function\"><span class=\"token keyword\">sub</span> idseq</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 run_SignalP.pl 与后缀名为 “.faa” 的 FASTA 格式文件放在同一目录下，在终端中运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_SignalP.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"ruby结果解读rtoutput-interpretationrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby结果解读rtoutput-interpretationrtruby\"></a> <ruby>结果解读<rt>Output interpretation</rt></ruby></h3>\n<p>* 代表输入文件的名字。</p>\n<ul>\n<li>\n<p>*_signalp/output.gff3：仅包含含有信号肽的序列信息；</p>\n</li>\n<li>\n<p>*_signalp/prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li>\n<p>*_signalp/region_output.gff3：包含所有的信号肽区域信息；</p>\n</li>\n<li>\n<p><strong>*_signalp/*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作 TMHMM 的输入文件。</p>\n</li>\n</ul>\n<h2 id=\"tmhmm\"><a class=\"markdownIt-Anchor\" href=\"#tmhmm\"></a> TMHMM</h2>\n<h3 id=\"预测\"><a class=\"markdownIt-Anchor\" href=\"#预测\"></a> 预测</h3>\n<p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的 “*_signalp/*.sigseq”，将其上传至网页版<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\"> TMHMM</a>，提交任务，等待结果即可。</p>\n<h3 id=\"结果展示\"><a class=\"markdownIt-Anchor\" href=\"#结果展示\"></a> 结果展示</h3>\n<p>TMHMM 可以输出多种格式的结果文件，具体请参考其<a href=\"http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output\">官方说明</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"在TMHMM网站提交任务\" /></p>\n<ul>\n<li>\n<p><strong>Long output format</strong></p>\n<ul>\n<li>\n<p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li>\n<p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p>\n</li>\n<li>\n<p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li>\n<p>Exp number, first 60 AAs：<ruby>在蛋白的前 60 个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li>\n<p>Total prob of N-in：<ruby>N 端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p>\n</li>\n<li>\n<p>POSSIBLE N-term signal sequence：<ruby>当 “Exp number, first 60 AAs” 大于 10 时产生的警告。 <rt> A warning that is produced when &quot;Exp number, first 60 AAs&quot; is larger than 10.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li>\n<p>蛋白 F01_bin.1_00110 共计 436 个氨基酸，有 5 个跨膜螺旋结构。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"含有跨膜结构的蛋白\" /></p>\n</li>\n<li>\n<p>蛋白 F01_bin.1_00142 共计 557 个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"不含跨膜结构的蛋白\" /></p>\n</li>\n<li>\n<p><strong>Short output format</strong></p>\n<ul>\n<li>\n<p>&quot;len=&quot;： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;ExpAA=&quot;：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li>\n<p>&quot;First60=&quot;：<ruby>在蛋白的前 60 个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;PredHel=&quot;：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;Topology=&quot;：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由 “i” 分隔，如果螺旋在外部，则由 “o” 分隔。'i7-29o44-66i87-109o' 意味着它从膜内开始，在位置 7 到 29 有一个预测的 TMH，30-43 在膜外，然后是位置 44-66 的 TMH。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Short output format\" /></p>\n</li>\n</ul>\n<h3 id=\"结果汇总\"><a class=\"markdownIt-Anchor\" href=\"#结果汇总\"></a> 结果汇总</h3>\n<p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong> run_SignalP.pl</strong> 生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong> Statistics.txt</strong> 中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp/*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp/*.membrane.faa</b>文件中。该过程将通过<strong> tmhmm_parser.pl</strong> 完成。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 15, 2021</span>\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Statistics.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Strain name\\tSignal peptide numbers\\tSecretory protein numbers\\tMembrane protein numbers\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@sig</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*_signalp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sig</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@sig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$sig</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+)_signalp/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$tmhmm</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sig</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/$str\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_TMHMM_SHORT.txt\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sig</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/$str\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".sigseq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$secretory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".secretory.faa\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$membrane</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".membrane.faa\"</span><span class=\"token punctuation\">;</span>\n\topen SEC<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$secretory\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen MEM<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$membrane\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$on</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span> <span class=\"token operator\">=</span> idseq<span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$tmhmm</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#\t\tprint $_ . \"\\n\";</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">eq</span> <span class=\"token string\">\"Topology=o\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$out</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> SEC <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$on</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> MEM <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose SEC<span class=\"token punctuation\">;</span>\n\tclose MEM<span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv $secretory $membrane $sig\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$on</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$str\\t$total\\t$out\\t$on\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nclose OUT<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\"><span class=\"token keyword\">sub</span> idseq</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl tmhmm_parser.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “c886” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li>\n<p><a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"使用EffectiveT3预测微生物中的III型分泌系统效应蛋白","slug":"使用EffectiveT3预测微生物中的III型分泌系统效应蛋白","date":"2021-10-13T02:01:56.000Z","updated":"2022-01-08T02:16:28.430Z","comments":true,"path":"api/articles/使用EffectiveT3预测微生物中的III型分泌系统效应蛋白.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg","content":"<p>III 型分泌系统 (Type III secretion system，T3SS) 主要是革兰氏阴性菌的分泌蛋白分泌到细胞外的运输途径，T3SS 效应蛋白 (Type III secretion system Effector protein) 与革兰氏阴性致病菌致病机理有关。</p>\n<p>通常用软件<a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\"> EffectiveT3</a> 预测 T3SS，通过其内部特定的计算模型对每条氨基酸序列进行评分，分值越高，可信度越高，选出评分高于阈值的序列，认为这些序列为 III 型分泌系统效应蛋白。</p>\n<p>EffectiveT3 的更新版本加强了 Effective 中 N 端信号肽的识别。对于更新，开发者收集了新的训练数据集，将来自 T3SEdb 的 504 个经过验证的分泌蛋白与其原始的训练数据结合在一起。新模型同样基于朴素贝叶斯分类器（Naive Bayesian Classifier），只是用了更多数据进行训练。在执行遗漏交叉验证测试（leave-one-taxon-out test ）时，其精度为 0.87，与其之前的报告相当。</p>\n<p>新模型现已嵌入到 Effective 中，也可供下载。在新模型中，朴素贝叶斯分类器对 “secreted” 类的默认最小分数为 0.9999。该默认值在网页上称为 “selective”，而 0.95 称为 “sensitive”。阈值也可以自由选择。</p>\n<h1 id=\"软件\"><a class=\"markdownIt-Anchor\" href=\"#软件\"></a> 软件</h1>\n<ul>\n<li>\n<p>主程序</p>\n<ul>\n<li><a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveT3</a></li>\n</ul>\n</li>\n<li>\n<p>依赖</p>\n<ul>\n<li>openjdk &gt;=6</li>\n</ul>\n</li>\n<li>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 使用conda安装时依赖Pyton 2.7，3.5，3.6，需要首先创建相应版本的Python环境（自行创建）</span>\nconda <span class=\"token function\">install</span> effectivet3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>数据库（modules）配置</p>\n<p><font color=\"#FF0000\">记录一个深坑</font>：程序默认在 module 的路径前加了一个 &quot;./module&quot; 路径，因此，虽然程序安装的过程中自动下载了 modules，然而我们并没有办法调用它们，只能重新下载。用户每次运行软件前需要在当前目录下创建了 module 目录，并下载 modules，然后将其存到 module 目录中。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p module\n\n<span class=\"token function\">curl</span> -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar\n\n<span class=\"token function\">curl</span> -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar\n\n<span class=\"token function\">curl</span> -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar\n\n<span class=\"token function\">curl</span> -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar\n\n<span class=\"token function\">mv</span> -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"输入数据\"><a class=\"markdownIt-Anchor\" href=\"#输入数据\"></a> 输入数据</h1>\n<p>包含蛋白序列的 FASTA 格式文件</p>\n<h1 id=\"运行软件\"><a class=\"markdownIt-Anchor\" href=\"#运行软件\"></a> 运行软件</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">effectivet3 -f F02_bin.1.faa -m TTSS_TTSS_STD-2.0.2.jar -t selective -o F02_bin.1.out -q<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>-f: 输入文件</li>\n<li>-m: 模型，可选 &quot;TTSS_ANIMAL-1.0.1.jar&quot;，&quot;TTSS_PLANT-1.0.1.jar&quot;，&quot;TTSS_STD-1.0.1.jar&quot; 和 “TTSS_STD-2.0.2.jar”，建议用 “TTSS_STD-2.0.2.jar”</li>\n<li>-t: 模式，&quot;sensitive&quot; and &quot;selective&quot; 二选一，建议使用 &quot;selective&quot;</li>\n<li>-o: 输出文件</li>\n<li>-q: 启动命令行模式</li>\n</ul>\n<h1 id=\"输出文件解读\"><a class=\"markdownIt-Anchor\" href=\"#输出文件解读\"></a> 输出文件解读</h1>\n<ul>\n<li>\n<p>English: The table of results displays all query proteins sorted by prediction score. Effector classification (true/false) according to the applied threshold is shown in the last column.</p>\n</li>\n<li>\n<p>简体中文：结果包含了输入文件中所有的查询序列 IDs，根据得分进行排序。一共包含 4 列，第一列为序列 ID，第二列为序列描述，第三列为预测得分，第四列描述该序列是否为效应因子。各列间以英文的分号（;）分隔。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"F01_bin.1.out\" /></p>\n</li>\n</ul>\n<h1 id=\"批处理与结果整合\"><a class=\"markdownIt-Anchor\" href=\"#批处理与结果整合\"></a> 批处理与结果整合</h1>\n<p><strong>脚本名</strong>：run_effectiveT3.pl</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 13, 2021</span>\n\n<span class=\"token comment\"># Download modules</span>\n<span class=\"token comment\"># 记录一个深坑，程序默认在module的路径前加了一个\"./module\"路径，因此，虽然程序安装的过程中自动下载了modules，然而我们并没有办法调用它们，只能重新下载。</span>\n<span class=\"token comment\"># 以下代码在当前目录下创建了module目录，并下载modules，然后将其存到module目录中。</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mkdir -p module\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"curl -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"curl -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"curl -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"curl -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># Predict one by one</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@faa</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@faa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).faa/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".T3\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"effectivet3 -f $_ -m TTSS_STD-2.0.2.jar -t selective -o $out -q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># information aggregation</span>\n<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%strain</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$line_num</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nopen T3<span class=\"token punctuation\">,</span> <span class=\"token string\">\">T3SS.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> T3 <span class=\"token string\">\"Strain\\tId\\tDescription\\tScore\\tis secreted\\tProtein sequences\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@t3</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.T3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$t3</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@t3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$t3</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).T3/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$faa</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".faa\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$strain</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%temp</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\"># Save ID and Sequence to %temp</span>\n\topen FAA<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$faa\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;FAA></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;FAA></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$seq</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$temp</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose FAA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$t3\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\">/^#/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\;/</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">eq</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token variable\">$line_num</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> T3 <span class=\"token string\">\"$str\\t\"</span> <span class=\"token operator\">.</span> join<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@lines</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$temp</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose T3<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$line_num</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\topen T3NUM<span class=\"token punctuation\">,</span> <span class=\"token string\">\">T3SS.num\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> T3NUM <span class=\"token string\">\"Strain\\tTotal sequences\\tT3S effective true\\tT3S effective false\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%strain</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> T3NUM <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> T3NUM <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> T3NUM <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose T3NUM<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mkdir -p T3SS_result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv *.T3 T3SS.num T3SS.txt T3SS_result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>用法</strong>：将脚本与含有氨基酸序列的 FASTA 格式文件（后缀名为 &quot;.faa&quot;，如果为其他，需要修改脚本第 19、21 和 31 行）放在同一目录下，在终端里运行如下命令（不需要事先配置数据库）：</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\">perl run_effectiveT3<span class=\"token operator\">.</span>pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>报错</strong>：Use of uninitialized value $seq in substitution (s///) at run_effectiveT3.pl line 47, &lt;FAA&gt; chunk .</p>\n<p><strong>原因</strong>：氨基酸序列 ID/Header 那一行的注释信息中含有”&gt;“。该报错不影响结果的准确性，可以忽略。</p>\n<h1 id=\"结果解读\"><a class=\"markdownIt-Anchor\" href=\"#结果解读\"></a> 结果解读</h1>\n<ul>\n<li>\n<p>T3SS_result/strain_name.T3：（strain_name 代表输入文件的名称）effectiveT3 输出的原始结果，共 4 列，如前文所述。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"CXY008.T3\" /></p>\n</li>\n<li>\n<p>T3SS_result/T3SS.txt：包含了所有菌株的预测得到的效应因子，共 6 列，第一列为菌株名，中间的 4 列同上一个文件，最后一列为对应的氨基酸序列。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"T3SS.txt\" /></p>\n</li>\n<li>\n<p>T3SS_result/T3SS.sum：记录所有菌株中序列总数、效应因子序列数和非效应因子序列数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"T3SS.sum\" /></p>\n</li>\n</ul>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “fb68” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveDB</a></li>\n<li><a href=\"https://github.com/bioconda/bioconda-recipes/tree/master/recipes/effectivet3\">Bioconda</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"T3SS","path":"api/tags/T3SS.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"R语言绘制气泡图Bubb_Plot","slug":"R语言绘制气泡图Bubb-Plot","date":"2021-10-12T13:12:17.000Z","updated":"2022-01-08T02:16:28.413Z","comments":true,"path":"api/articles/R语言绘制气泡图Bubb-Plot.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_2.jpg","content":"<p>气泡图是经常用到的一种图，可以对比不同样本中某个特征的丰富度差异。以下代码 “bubbleChart_No0.R” 用于气泡图的绘制，零值将不会在图中输出。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"输入文件示例\" /></p>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><div class=\"caption\"><span>bubbleChart_No0.R</span><a href=\"https://github.com/liaochenlanruo/myScripts/tree/main/b68c%20BubblePlot\">代码在此</a></div><code class=\"language-r\"><span class=\"token comment\">#!/usr/bin/env Rscript</span>\nsetwd<span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/Researches/lujia16S/Analysis_20200907/Downstream_analysis/Function\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#设置工作目录</span>\n\n<span class=\"token comment\">#pdf(file=\"FunctionsBubbleChart.pdf\", width=14, height=11)</span>\n\n<span class=\"token comment\"># 读取文件 sep 根据文件格式确定</span>\ndata <span class=\"token operator\">&lt;-</span> read.table<span class=\"token punctuation\">(</span><span class=\"token string\">\"functional_table3.tsv\"</span><span class=\"token punctuation\">,</span>header <span class=\"token operator\">=</span> <span class=\"token boolean\">TRUE</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>ggplot2<span class=\"token punctuation\">)</span>\nlibrary<span class=\"token punctuation\">(</span>reshape<span class=\"token punctuation\">)</span>\n\ndata_melt <span class=\"token operator\">&lt;-</span> melt<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nnames<span class=\"token punctuation\">(</span>data_melt<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token string\">\"Functions\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Samples\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Abundances\"</span><span class=\"token punctuation\">)</span>\ndata_melt<span class=\"token operator\">$</span>Sites<span class=\"token operator\">=</span>substring<span class=\"token punctuation\">(</span>data_melt<span class=\"token operator\">$</span>Samples<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># 根据第二列的样本名称提取站位信息，用于后续着色</span>\ndata_melt <span class=\"token operator\">&lt;-</span>as.data.frame<span class=\"token punctuation\">(</span>data_melt<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 做主图</span>\nbubble <span class=\"token operator\">&lt;-</span> ggplot<span class=\"token punctuation\">(</span>data_melt<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">(</span>data_melt<span class=\"token operator\">$</span>Abundances<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> aes<span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> Samples<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> Functions<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> Abundances<span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> Sites<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> geom_point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 字体修饰</span>\n<span class=\"token comment\">##windowsFonts(myFont = windowsFont(\"Times New Roman\"))</span>\n\n<span class=\"token comment\"># 修改细节 — 图注，点大小，点shape</span>\nbubble_style <span class=\"token operator\">&lt;-</span> bubble <span class=\"token operator\">+</span> theme_classic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>\n  labs<span class=\"token punctuation\">(</span>\n    x <span class=\"token operator\">=</span> <span class=\"token string\">\"Sampling Sites\"</span><span class=\"token punctuation\">,</span>\n    y <span class=\"token operator\">=</span> <span class=\"token string\">\"Functions\"</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token operator\">=</span><span class=\"token string\">\"Sites\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 颜色图注名</span>\n    size<span class=\"token operator\">=</span><span class=\"token string\">\"Abundances\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>    <span class=\"token comment\"># 大小图注名</span>\n    scale_size<span class=\"token punctuation\">(</span>range <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  <span class=\"token comment\">#等比修改圆圈大小</span>\n    theme<span class=\"token punctuation\">(</span>plot.title<span class=\"token operator\">=</span>element_text<span class=\"token punctuation\">(</span>family<span class=\"token operator\">=</span><span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n                                color<span class=\"token operator\">=</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>face<span class=\"token operator\">=</span><span class=\"token string\">\"italic\"</span><span class=\"token punctuation\">,</span>\n                                hjust<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>lineheight<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                plot.subtitle <span class=\"token operator\">=</span> element_text<span class=\"token punctuation\">(</span>hjust <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> \n    theme<span class=\"token punctuation\">(</span>axis.text.x <span class=\"token operator\">=</span> element_text<span class=\"token punctuation\">(</span>angle <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> hjust <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#dev.off()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"使用方法\"><a class=\"markdownIt-Anchor\" href=\"#使用方法\"></a> 使用方法</h1>\n<p>在 Rstudio 中运行以上代码，注意更改自己的工作目录和输入文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"气泡图\" /></p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “b68c” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"可视化","path":"api/categories/可视化.json"}],"tags":[{"name":"R语言","path":"api/tags/R语言.json"},{"name":"绘图","path":"api/tags/绘图.json"}]},{"title":"从GenBank文件中提取Features","slug":"从GenBank文件中提取Features","date":"2021-10-09T06:15:45.000Z","updated":"2022-01-08T02:16:28.429Z","comments":true,"path":"api/articles/从GenBank文件中提取Features.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>二话不说，上代码，需要安装 BioPerl</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 9, 2021</span>\n<span class=\"token comment\"># Usage: perl get_gbk_features.pl &lt;in> &lt;out></span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$in</span> <span class=\"token operator\">=</span> shift<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> shift<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$seqin</span> <span class=\"token operator\">=</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token operator\">-></span>new<span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span>format <span class=\"token operator\">=></span> <span class=\"token string\">'genbank'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>file <span class=\"token operator\">=></span> <span class=\"token string\">\"$in\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$seq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seqin</span><span class=\"token operator\">-></span>next_seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sf</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>get_SeqFeatures <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>primary_tag <span class=\"token operator\">eq</span> <span class=\"token string\">'CDS'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@tags</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sf</span> <span class=\"token operator\">-></span>get_all_tags<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">#print join(\"\\t\", @tags) . \"\\n\";</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'locus_tag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>strand<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'translation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl get_gbk_features.pl examples/INPUT/LHL010.gbk LHL010.list<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “3a23” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"序列处理","path":"api/tags/序列处理.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"},{"name":"BioPerl","path":"api/tags/BioPerl.json"}]},{"title":"按照Contig切割GenBank文件","slug":"按照Contig切割GenBank文件","date":"2021-10-09T02:08:00.000Z","updated":"2022-01-08T02:16:28.449Z","comments":true,"path":"api/articles/按照Contig切割GenBank文件.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>当一个基因组含有多个 Contigs/Scaffolds 的时候，在 GenBank 文件中也会产生多个 LOCUS。某些软件会将 GenBank 文件作为输入，但仅支持一个 GenBank 文件中只包含一条 Contig/Scaffold，如基因岛预测软件<a href=\"https://github.com/brinkmanlab/islandpath\"> islandpath</a>。这个时候就需要我们将 GenBank 文件进行切割。手动切是体力活，也不像钓鱼那样有成就感，因此提供一个脚本 &quot;split_GenBank.pl&quot; 来完成。</p>\n<p><font color=\"#FF0000\"><strong>敬告</strong>：使用该脚本请引用本文网址，请尊重本人的劳动成果，谢谢！</font></p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 9, 2021</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gbk</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 批处理所有后缀为.gbk的文件</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gbk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gbk/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"LOCUS\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/\\s+(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".gb\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$assession</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/ACCESSION.+/ACCESSION   $assession/g</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 添加ACCESSION number</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"LOCUS$_\"</span><span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将脚本与后缀名为 “.gbk” 的 GenBank 文件放在同一目录下，运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl split_GenBank.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>得到的后缀名为 “.gb” 的文件即为切割后的 GenBank 文件。</p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “d9f9” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"序列处理","path":"api/tags/序列处理.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"原核生物基因岛预测","slug":"原核生物基因岛预测","date":"2021-10-08T11:27:05.000Z","updated":"2022-01-08T02:16:28.434Z","comments":true,"path":"api/articles/原核生物基因岛预测.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg","content":"<h1 id=\"软件-software-needed\"><a class=\"markdownIt-Anchor\" href=\"#软件-software-needed\"></a> 软件 (Software needed)</h1>\n<ul>\n<li><a href=\"https://github.com/brinkmanlab/islandpath\">IslandPath-DIMOB</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"安装-installation\"><a class=\"markdownIt-Anchor\" href=\"#安装-installation\"></a> 安装 (Installation)</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token function\">install</span> islandpath\nconda <span class=\"token function\">install</span> perl-bioperl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"输入文件-input-files\"><a class=\"markdownIt-Anchor\" href=\"#输入文件-input-files\"></a> 输入文件 (Input Files)</h1>\n<ul>\n<li>GenBank (.gbk) or an embl (.embl) file</li>\n<li><font color='#ff0000'><strong>注意:</strong> 输入文件中只允许包含一条序列，否则会报错！(Please make sure you are running islandpath on a genbank file with only one contig)。</font>如果一个文件中含有多个序列，那么就要将其分割成为多个文件，然后逐个作为输入文件进行预测。切割方法见我的另一篇文章<a href=\"https://liaochenlanruo.github.io/post/d9f9.html\">按照 Contig 切割 GenBank 文件</a>。</li>\n</ul>\n<h1 id=\"运行软件-run\"><a class=\"markdownIt-Anchor\" href=\"#运行软件-run\"></a> 运行软件 (Run)</h1>\n<h2 id=\"常规运行\"><a class=\"markdownIt-Anchor\" href=\"#常规运行\"></a> 常规运行</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># gbk file</span>\nislandpath example/NC_003210.gbk NC_003210_GIs.txt\n\n<span class=\"token comment\"># embl file</span>\nislandpath example/NC_000913.embl NC_000913_GIs.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>输出结果如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"示例输出结果展示\" /></p>\n<h2 id=\"批处理\"><a class=\"markdownIt-Anchor\" href=\"#批处理\"></a> 批处理</h2>\n<p>在得到大量基因组的时候，手动提交并不像打游戏那样让人渴望敲击键盘和鼠标，为了避免烦躁，我们来写脚本 “run_islandpath.pl”，然后让机器做剩下的事情。该脚本可以实现 GenBank 文件的切割，基因岛预测，以及结果的整合，实现了 IslandPath-DIMOB 所无法完成的分析。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 8, 2021</span>\n\n<span class=\"token comment\"># Split GenBank files</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gbk</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 批处理所有后缀为.gbk的文件</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gbk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gbk/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"LOCUS\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/\\s+(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".gb\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$assession</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/ACCESSION.+/ACCESSION   $assession/g</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 添加ACCESSION number</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"LOCUS$_\"</span><span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token comment\"># predict Gene Islands</span>\n<span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gb</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gb/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".island\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"islandpath $_ $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Get features from GenBank files</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$gb</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@gb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$gb</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gb/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".list\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$seqin</span> <span class=\"token operator\">=</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token operator\">-></span>new<span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span>format <span class=\"token operator\">=></span> <span class=\"token string\">'genbank'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>file <span class=\"token operator\">=></span> <span class=\"token string\">\"$gb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$seq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seqin</span><span class=\"token operator\">-></span>next_seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sf</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>get_SeqFeatures <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>primary_tag <span class=\"token operator\">eq</span> <span class=\"token string\">'CDS'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@tags</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sf</span> <span class=\"token operator\">-></span>get_all_tags<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">#print join(\"\\t\", @tags) . \"\\n\";</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'locus_tag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>strand<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'translation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Parser the results</span>\n<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%gi</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%list</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%gif</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All_island.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Sequence IDs\tPredictor\tCategory\tGI Start\tGI End\t.\tStrand\t.\tIsland IDs\tGene IDs\tGene Start\tGene End\tStrand\tProducts\tProtein Sequences\\n\"</span><span class=\"token punctuation\">;</span>\nopen LIST<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All_island.list\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> LIST <span class=\"token string\">\"Island IDs\\tGI Start\\tGI End\\tGI Length\\tGene Number\\tGene IDs\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@GI</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.island\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@GI</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).island/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$list</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".list\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gilen</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$gif</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$gilen</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\topen GB<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$list\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;GB></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@line</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$ids</span> <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$start2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$end2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$gi</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\-/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$ids</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">$start2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token variable\">$end2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\tpush <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose GB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">print</span> LIST <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$gif</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> join <span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose LIST<span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 “run_islandpath.pl” 与 GenBank 文件放在同一目录下，在终端里运行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_islandpath.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果汇总于<strong> All_island.txt</strong> 和<strong> All_island.list</strong> 中，内容如下面二图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"All_island.txt\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"All_island.list\" /></p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “5324” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"基因岛","path":"api/tags/基因岛.json"}]}]}