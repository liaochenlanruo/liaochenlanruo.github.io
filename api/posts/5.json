{"total":103,"pageSize":10,"pageCount":11,"data":[{"title":"PGCGAP中文说明","slug":"PGCGAP中文说明","date":"2019-04-28T07:22:33.000Z","updated":"2022-01-08T02:16:28.409Z","comments":true,"path":"api/articles/PGCGAP中文说明.json","excerpt":null,"keywords":null,"cover":null,"content":"<p><strong>为了方便广大中文用户学习 PGCGAP 的使用，特意书写该中文文档，但中文文档更新较慢，强烈建议大家阅读英文文档！</strong></p>\n<span id=\"more\"></span>\n<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/2019/04/28/PGCGAP%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/\">中文说明</a></p>\n<h2 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\"></a> 简介</h2>\n<p>PGCGAP 是用于原核生物基因组学和比较基因组学分析管道，目前该管道包含 12 个模块，可以接受 Illumina 双端 reads、Oxford reads 或 PacBio reads 作为输入，可以完成基因组组装、基因预测和注释，并可以进行比较基因组学分析，包括构建单拷贝核心蛋白进化树以及单拷贝核心基因 SNPs 进化树，泛基因组分析与进化树构建，全基因组平均核苷酸一致性（ANI）计算，同源蛋白家族聚类及进化树构建，COG 注释，SNPs 和 INDELs calling，抗生素抗性基因 / 毒力因子预测，Multi-FASTA 进化树构建，组装后基因组短序列过滤与统计信息呈现（genome size，GC content……）。</p>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\"></a> 安装</h2>\n<p>PGCGAP 可以安装于 Windows 子系统 Linux（WSL）、Linux x64 系统以及 macOS 中。</p>\n<p><strong>Step1：通过<a href=\"https://bioconda.github.io/user/install.html#install-conda\"> Bioconda</a> 安装 PGCGAP</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$conda</span> create -n pgcgap <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.7</span>\n\n<span class=\"token variable\">$conda</span> activate pgcgap\n\n<span class=\"token variable\">$conda</span> <span class=\"token function\">install</span> pgcgap\n\n<span class=\"token variable\">$conda</span> deactivate\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>声明：用conda安装时一直在“Solving environment”怎么办？</strong>随着加入conda的软件越来越多，使其索引库变的庞大，因此安装新的软件时需要逐一验证软件间的兼容性，会耗费大量时间。严重的时候会无法完成软件的安装，这个时候坐以待毙是不行的。下面介绍两种办法解决此问题：<br/></p>\n<ul>\n<li>\n<p>Method 1: 使用 mamba (非常快) 替代 conda。前提是已经用 conda 创建好了 pgcgap 的虚拟环境：</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$conda</span> activate pgcgap\n<span class=\"token variable\">$conda</span> <span class=\"token function\">install</span> mamba -c conda-forge\n<span class=\"token variable\">$mamba</span> <span class=\"token function\">install</span> pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>Method 2: 使用本人提供的 pgcgap<a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.ym\"> 配置文件</a>来创建环境并安装 PGCGAP：</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># download pgcgap_latest_env.yml</span>\n<span class=\"token variable\">$wget</span> https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.yml\n\t\n<span class=\"token comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span>\n<span class=\"token variable\">$conda</span> <span class=\"token function\">env</span> create -f pgcgap_latest_env.yml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<br/>\n<p><strong>Step2：配置 COG 数据库</strong> (初次安装 PGCGAP 后需要执行此步骤)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$conda</span> activate pgcgap\n\n<span class=\"token variable\">$pgcgap</span> --setup-COGdb\n\n<span class=\"token variable\">$conda</span> deactivate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Step3: 升级 PGCGAP (升级版本时运行)</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$conda</span> activate pgcgap\n<span class=\"token variable\">$conda</span> update pgcgap\n<span class=\"token comment\"># v1.0.28以后可通过如下命令升级</span>\n<span class=\"token variable\">$pgcgap</span> --check-update<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>此外，用户也可以通过容器 (docker) 安装 PGCGAP</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$docker</span> pull quay.io/biocontainers/pgcgap:<span class=\"token operator\">&lt;</span>tag<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>注：</strong> 前提是用户电脑中安装了<a href=\"https://www.docker.com/\"> Docker</a>，Docker 可以跨平台使用。可用的 tag 可<a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">在此</a>查询，建议安装最新版。</p>\n<h2 id=\"依赖包\"><a class=\"markdownIt-Anchor\" href=\"#依赖包\"></a> 依赖包</h2>\n<ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/gubbins\">Gubbins</a> &gt;=2.3.4</li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&amp;PAGE_TYPE=BlastDocs&amp;DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules\n<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules\n<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages\n<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"pgcgap用法\"><a class=\"markdownIt-Anchor\" href=\"#pgcgap用法\"></a> PGCGAP 用法</h2>\n<ul>\n<li>\n<p><strong>显示帮助信息：</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --help<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>管道用法：</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> <span class=\"token punctuation\">[</span>modules<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>展示各模块的参数：</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> <span class=\"token punctuation\">[</span>Assemble<span class=\"token operator\">|</span>Annotate<span class=\"token operator\">|</span>ANI<span class=\"token operator\">|</span>AntiRes<span class=\"token operator\">|</span>CoreTree<span class=\"token operator\">|</span>MASH<span class=\"token operator\">|</span>OrthoF<span class=\"token operator\">|</span>Pan<span class=\"token operator\">|</span>pCOG<span class=\"token operator\">|</span>VAR<span class=\"token operator\">|</span>STREE<span class=\"token operator\">|</span>ACC<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>展示各模块的运行示例：</strong>（这货是我用的最多的）</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> Examples<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>配置 COG 数据库：</strong> (初次安装 PGCGAP 后需要配置 COG 数据库)</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --setup-COGdb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>功能模块：</strong></p>\n<ul>\n<li>\n<p><strong>[--All]</strong>                          运行 Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH 和 pCOG 模块</p>\n</li>\n<li>\n<p><strong>[--Assemble]</strong>                     基因组组装</p>\n</li>\n<li>\n<p><strong>[--Annotate]</strong>                     基因预测及注释</p>\n</li>\n<li>\n<p><strong>[--CoreTree]</strong>                     构建单拷贝核心蛋白进化树与核心 SNPs 进化树</p>\n</li>\n<li>\n<p><strong>[--Pan]</strong>                          泛基因组分析并构建单拷贝核心蛋白进化树</p>\n</li>\n<li>\n<p><strong>[--OrthoF]</strong>                       同源蛋白家族聚类及单拷贝直系同源蛋白进化树构建</p>\n</li>\n<li>\n<p><strong>[--ANI]</strong>                          计算平均核苷酸一致性 (ANI)</p>\n</li>\n<li>\n<p><strong>[--MASH]</strong>                         通过 MinHash 估算基因组 / 宏基因组相似性</p>\n</li>\n<li>\n<p><strong>[--pCOG]</strong>                         COG 注释</p>\n</li>\n<li>\n<p><strong>[--VAR]</strong>                          变异检测并构建核心基因组进化树</p>\n</li>\n<li>\n<p><strong>[--AntiRes]</strong>                      从基因组 (contigs/scaffolds) 中预测抗生素抗性基因或毒力基因</p>\n</li>\n<li>\n<p><strong>[--STREE]</strong>                        基于 Multi-FASTA 序列 (所有序列在一个文件中) 构建系统发育树</p>\n</li>\n<li>\n<p><strong>[--ACC]</strong>                          一些实用的附加程序 (目前只开发了 &quot;Assess&quot; 用于对基因组中的短序列进行过滤，并评估过滤前后的基因组状态)</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>全局参数（请参照英文版，参数有所改变，中文版暂时没有时间修改）：</strong></p>\n<ul>\n<li>\n<p><strong>[--strain_num (INT)]</strong>             [Required by &quot;--All&quot;, &quot;--CoreTree&quot;, &quot;--Pan&quot;, &quot;--VAR&quot; and &quot;--COG&quot;] 用于分析的菌株数目，不包含参考基因组</p>\n</li>\n<li>\n<p><strong>[--ReadsPath (PATH)]</strong>             [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] 所有菌株测序 reads 所在的目录路径  Default ./Reads/Illumina)</p>\n</li>\n<li>\n<p><strong>[--scafPath (PATH)]</strong>              [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot; and &quot;--MASH&quot;] contigs/scaffolds 的存放路径 (Default &quot;Results/Assembles/Scaf/Illumina&quot;)</p>\n</li>\n<li>\n<p><strong>[--AAsPath (PATH)]</strong>               [Required by &quot;--All&quot;, &quot;--CoreTree&quot;, &quot;--OrthoF&quot; and &quot;--pCOG&quot;] 所有菌株的氨基酸序列文件的存放路径 (Default &quot;./Results/Annotations/AAs&quot;)</p>\n</li>\n<li>\n<p><strong>[--reads1 (STRING)]</strong>              [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] reads 1 的后缀名 (例如 reads 1 的名字为 &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot;，&quot;YBT-1520&quot; 是菌株名，则后缀名为 &quot;.R1.clean.fastq.gz&quot;)</p>\n</li>\n<li>\n<p><strong>[--reads2 (STRING)]</strong>              [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] reads 2 的后缀名</p>\n</li>\n<li>\n<p><strong>[--Scaf_suffix (STRING)]</strong>         [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot; &quot;MASH&quot; and &quot;--ANI&quot;] contigs/scaffolds 的后缀名 (Default -8.fa)</p>\n</li>\n<li>\n<p><strong>[--filter_length (INT)]</strong>          [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--Assess&quot;]&gt; Sequences shorter than the 'filter_length' will be deleted from the assembled genomes. ( Default 200 )</p>\n</li>\n<li>\n<p><strong>[--codon (INT)]</strong>                  [Required by &quot;--All&quot;, &quot;--Annotate&quot;, &quot;--CoreTree&quot; and &quot;--Pan&quot;] 翻译密码子表 (Default 11)</p>\n<ul>\n<li>1                             Universal code</li>\n<li>2                             Vertebrate mitochondrial code</li>\n<li>3                             Yeast mitochondrial code</li>\n<li>4                             Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma/Spiroplasma code</li>\n<li>5                             Invertebrate mitochondrial</li>\n<li>6                             Ciliate, Dasycladacean and Hexamita nuclear code</li>\n<li>9                             Echinoderm and Flatworm mitochondrial code</li>\n<li>10                            Euplotid nuclear code</li>\n<li>11                            Bacterial, archaeal and plant plastid code ( Default )</li>\n<li>12                            Alternative yeast nuclear code</li>\n<li>13                            Ascidian mitochondrial code</li>\n<li>14                            Alternative flatworm mitochondrial code</li>\n<li>15                            Blepharisma nuclear code</li>\n<li>16                            Chlorophycean mitochondrial code</li>\n<li>21                            Trematode mitochondrial code</li>\n<li>22                            Scenedesmus obliquus mitochondrial code</li>\n<li>23                            Thraustochytrium mitochondrial code</li>\n</ul>\n</li>\n<li>\n<p><strong>[--suffix_len (INT)]</strong>             [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] <strong>(强烈建议设置此项)</strong> reads 后缀的长度。例如 &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot; 的 --suffix_len 为 26 (&quot;YBT-1520&quot; 为菌株名) (Default 0)</p>\n</li>\n<li>\n<p><strong>[--logs (STRING)]</strong>                Log 文件的名字 (Default Logs.txt)</p>\n</li>\n<li>\n<p><strong>[--threads (INT)]</strong>                运行程序时调用的线程数目 (Default 4)<br />\n<br/></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>各模块的局部参数：</strong></p>\n<ul>\n<li>\n<p><strong>--Assemble</strong></p>\n<ul>\n<li>\n<p><strong>[--platform (STRING)]</strong>        [Required] 测序平台，可以选择 “illumina”, “pacbio” 和 “oxford” (Default illumina)</p>\n</li>\n<li>\n<p><strong>[--assembler (STRING)]</strong>       [Required] 用于 illumina 数据组装的软件，可选 &quot;abyss&quot;, &quot;spades&quot; 或 &quot;auto&quot; ( Default abyss )</p>\n</li>\n<li>\n<p><strong>[--kmmer (INT)]</strong>              [Required] Illumina 数据组装时采用的 k-mer 大小 (Default 81)</p>\n</li>\n<li>\n<p><strong>[--genomeSize (FLOAT)]</strong>       [Required] 预估的基因组大小，如 3.7m、2.8g，组装 PacBio data 和 Oxford data 时需要设置此项 (Default Unset)</p>\n</li>\n<li>\n<p><strong>[--short1 (STRING)]</strong>           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li>\n<p><strong>[--short2 (STRING)]</strong>           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li>\n<p><strong>[--long (STRING)]</strong>             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li>\n<p><strong>[--hout (STRING)]</strong>             [Required] Output directory for hybrid assembly ( Default ../../Results/Assembles/Hybrid )</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>--Annotate</strong></p>\n<ul>\n<li>\n<p><strong>[--genus (STRING)]</strong>           菌株的属名 (Default &quot;NA&quot;)</p>\n</li>\n<li>\n<p><strong>[--species (STRING)]</strong>         菌株的种名 (Default &quot;NA&quot;)<br />\n<br/></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>--CoreTree</strong></p>\n<ul>\n<li>\n<p><strong>[--CDsPath (PATH)]</strong>           [Required] 包含所有菌株核苷酸序列文件的路径，如果设置为 &quot;NO&quot;，将不会构建核心 SNPs 进化树 ( Default &quot;./Results/Annotations/CDs&quot; )</p>\n</li>\n<li>\n<p><strong>[-c (FLOAT)]</strong>                 序列一致性 (identity) 阈值 ( Default 0.5)</p>\n</li>\n<li>\n<p><strong>[-n (INT)]</strong>                   Word_length,  -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li>\n<p><strong>[-G (INT)]</strong>                   Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li>\n<p><strong>[-t (INT)]</strong>                   Tolerance for redundance ( Default 0 )</p>\n</li>\n<li>\n<p><strong>[-aL (FLOAT)]</strong>                Alignment coverage for the longer sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li>\n<p><strong>[-aS (FLOAT)]</strong>                Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li>\n<p><strong>[-g (INT)]</strong>                   If set to 0, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li>\n<p><strong>[-d (INT)]</strong>                   length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )<br />\n<br/></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>--Pan</strong></p>\n<ul>\n<li>\n<p><strong>[--GffPath (PATH)]</strong>           [Required] 存放所有菌株 GFF3 格式文件的路径 ( Default &quot;./Results/Annotations/GFF&quot; )</p>\n</li>\n<li>\n<p><strong>[--identi (INT)]</strong>                  Minimum percentage identity for blastp ( Default 95 )<br />\n<br/></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>--OrthoF</strong></p>\n<ul>\n<li><strong>[--Sprogram (STRING)]</strong>        序列对比程序，Options: blast, mmseqs, blast_gz, diamond (Default blast)<br />\n<br/></li>\n</ul>\n</li>\n<li>\n<p><strong>--ANI</strong></p>\n<ul>\n<li>\n<p><strong>[--queryL (FILE)]</strong>            [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li>\n<p><strong>[--refL (FILE)]</strong>              [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n<li>\n<p><strong>[--ANIO (FILE)]</strong>              The name of output file ( Default &quot;Results/ANI/ANIs&quot; )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p><strong>--VAR</strong></p>\n<ul>\n<li>\n<p><strong>[--refgbk (FILE)]</strong>            [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: &quot;/mnt/g/test/ref.gbk&quot;</p>\n</li>\n<li>\n<p><strong>[--qualtype (STRING)]</strong>        [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;= 1.8)). ( Default sanger )</p>\n</li>\n<li>\n<p><strong>[--qual (INT)]</strong>               Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li>\n<p><strong>[--length (INT)]</strong>             Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li>\n<p><strong>[--mincov (INT)]</strong>             The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li>\n<p><strong>[--minfrac (FLOAT)]</strong>          The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li>\n<p><strong>[--minqual (INT)]</strong>            The minimum VCF variant call &quot;quality&quot; ( Default 100 )</p>\n</li>\n<li>\n<p><strong>[--ram (INT)]</strong>                Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n<li>\n<p><strong>[--tree_builder (STRING)]</strong>    Application to use for tree building [raxml|fasttree|hybrid] ( Default fasttree)</p>\n</li>\n<li>\n<p><strong>[--iterations (INT)]</strong>         Maximum No. of iterations for gubbins ( Default 5 )<br />\n<br/></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>--AntiRes</strong></p>\n<ul>\n<li>\n<p><strong>[--db (STRING)]</strong>              [Required] 用于分析的数据库，options: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, ecoli_vf, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default ncbi )</p>\n</li>\n<li>\n<p><strong>[--identity (INT)]</strong>           [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li>\n<p><strong>[--coverage (INT)]</strong>           [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>--STREE</strong></p>\n<ul>\n<li>\n<p><strong>[--seqfile (STRING)]</strong>        [Required] Path of the sequence file for analysis.</p>\n</li>\n<li>\n<p><strong>[--seqtype (INT)]</strong>           [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n<li>\n<p><strong>[--bsnum (INT)]</strong>             [Required] Times for bootstrap. ( Default 1000 )</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong>         Filter short sequences in the genome and assess the status of the genome (详细参数通过 &quot;pgcgap ACC&quot; 查看)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>依赖软件安装目录</strong></p>\n<p>Not needed if they were in the environment variables path. Users can check with the &quot;--check-external-programs&quot; option for the essential programs.<br />\n<br/></p>\n</li>\n<li>\n<p><strong>[--abricate-bin (PATH)]</strong>          Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li>\n<p><strong>[--abyss-bin (PATH)]</strong>             Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li>\n<p><strong>[--canu-bin (PATH)]</strong>              Path to canu binary file. Default tries if canu is in PATH;</p>\n</li>\n<li>\n<p><strong>[--cd-hit-bin (PATH)]</strong>            Path to cd-hit binary file. Default tries if cd-hit is in PATH;</p>\n</li>\n<li>\n<p><strong>[--fastANI-bin (PATH)]</strong>           Path to the fastANI binary file. Default tries if fastANI is in PATH;</p>\n</li>\n<li>\n<p><strong>[--Gblocks-bin (PATH)]</strong>           Path to the Gblocks binary file. Default tries if Gblocks is in PATH;</p>\n</li>\n<li>\n<p><strong>[--gubbins-bin (PATH)]</strong>           Path to the run_gubbins.py binary file. Default tries if run_gubbins.py is in PATH;</p>\n</li>\n<li>\n<p><strong>[--iqtree-bin (PATH)]</strong>            Path to the iqtree binary file. Default tries if iqtree is in PATH;</p>\n</li>\n<li>\n<p><strong>[--mafft-bin (PATH)]</strong>             Path to mafft binary file. Default tries if mafft is in PATH;</p>\n</li>\n<li>\n<p><strong>[--mash-bin (PATH)]</strong>              Path to the mash binary file. Default tries if mash is in PATH.</p>\n</li>\n<li>\n<p><strong>[--modeltest-ng-bin (PATH)]</strong>      Path to the modeltest-ng binary file. Default tries if modeltest-ng is in PATH.</p>\n</li>\n<li>\n<p><strong>[--muscle-bin (PATH)]</strong>            Path to the muscle binary file. Default tries if muscle is in PATH.</p>\n</li>\n<li>\n<p><strong>[--orthofinder-bin (PATH)]</strong>       Path to the orthofinder binary file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li>\n<p><strong>[--pal2nal-bin (PATH)]</strong>           Path to the <a href=\"http://pal2nal.pl\">pal2nal.pl</a> binary file. Default tries if <a href=\"http://pal2nal.pl\">pal2nal.pl</a> is in PATH;</p>\n</li>\n<li>\n<p><strong>[--prodigal-bin (PATH)]</strong>          Path to prodigal binary file. Default tries if prodigal is in PATH;</p>\n</li>\n<li>\n<p><strong>[--prokka-bin (PATH)]</strong>            Path to prokka binary file. Default tries if prokka is in PATH;</p>\n</li>\n<li>\n<p><strong>[--raxml-ng-bin (PATH)]</strong>          Path to the raxml-ng binary file. Default tries if raxml-ng is in PATH;</p>\n</li>\n<li>\n<p><strong>[--roary-bin (PATH)]</strong>             Path to the roary binary file. Default tries if roary is in PATH;</p>\n</li>\n<li>\n<p><strong>[--sickle-bin (PATH)]</strong>            Path to the sickle-trim binary file. Default tries if sickle is in PATH.</p>\n</li>\n<li>\n<p><strong>[--snippy-bin (PATH)]</strong>            Path to the snippy binary file. Default tries if snippy is in PATH;</p>\n</li>\n<li>\n<p><strong>[--snp-sites-bin (PATH)]</strong>         Path to the snp-sites binary file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li>\n<p><strong>[--unicycler-bin (PATH)]</strong>         Path to the unicycler binary file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p><strong>配置 COG 数据库</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong>                  首次安装 PGCGAP 后需要执行此步<br />\n<br/></li>\n</ul>\n</li>\n<li>\n<p>检查依赖软件包是否安装 (<strong>强烈建议在安装完 PGCGAP 之后运行此步</strong>):</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --check-external-programs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<br/>\n<h2 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\"></a> 示例</h2>\n<ul>\n<li>\n<p><strong>Example 1:</strong> 执行所有模块，以 <em>Escherichia coli</em> 的 6 个 Illumina 双端 reads 为数据集。</p>\n<p><strong>注</strong>：为了提高灵活性，&quot;VAR&quot; 模块需要额外添加。<br/></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --All --platform illumina --filter_length <span class=\"token number\">200</span> --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len <span class=\"token number\">11</span> --kmmer <span class=\"token number\">81</span> --genus Escherichia --species “Escherichia coli” --codon <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 2:</strong> 基因组组装。</p>\n<ul>\n<li>\n<p><strong>Illumina 双端 reads 组装</strong></p>\n<p>该数据集中，reads 的命名格式为 “strain_1.fastq.gz” 和 “strain_2.fastq.gz”。 后缀名为 “_1.fastq.gz”，其长度为 11，因此 &quot;--suffix_len&quot; 设置为 11。</p>\n</li>\n</ul>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --Assemble --platform illumina --assembler abyss --filter_length <span class=\"token number\">200</span> --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer <span class=\"token number\">81</span> --threads <span class=\"token number\">4</span> --suffix_len <span class=\"token number\">11</span>\n\t \n<span class=\"token variable\">$pgcgap</span> --Assemble --platform illumina --assembler spades --filter_length <span class=\"token number\">200</span> --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads <span class=\"token number\">4</span> --suffix_len <span class=\"token number\">11</span>\n\t \n<span class=\"token variable\">$pgcgap</span> --Assemble --platform illumina --assembler auto --filter_length <span class=\"token number\">200</span> --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer <span class=\"token number\">81</span> --threads <span class=\"token number\">4</span> --suffix_len <span class=\"token number\">11</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>\n<p><strong>Oxford reads 组装</strong></p>\n<p>Oxford nanopore 测序仅产生一个 reads 文件，因此只需要设置 &quot;--reads1&quot; 参数，其值为 &quot;.fasta&quot;。 “--genomeSize” 是预估的基因组大小，用户可以到 NCBI 数据库中查看同物种基因组的大小作为参考，此处设置为 &quot;4.8m&quot;。Reads 文件的后缀名为 &quot;.fasta&quot;，其长度为 6，因此将 &quot;--suffix_len&quot; 设置为 6。</p>\n</li>\n</ul>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --Assemble --platform oxford --filter_length <span class=\"token number\">200</span> --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize <span class=\"token number\">4</span>.8m --threads <span class=\"token number\">4</span> --suffix_len <span class=\"token number\">6</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li><strong>PacBio reads 组装</strong></li>\n</ul>\n<p>PacBio 同样只产生一个文件 &quot;pacbio.fastq&quot;，参数设置与 Oxford 类似。此处，文件的后缀名为 &quot;.fastq&quot;，其长度为 6，因此 &quot;--suffix_len&quot; 设置为 6。</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --Assemble --platform pacbio --filter_length <span class=\"token number\">200</span> --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize <span class=\"token number\">4</span>.8m --threads <span class=\"token number\">4</span> --suffix_len <span class=\"token number\">6</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 3:</strong> 基因预测及注释。</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon <span class=\"token number\">11</span> --threads <span class=\"token number\">4</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 4:</strong> 构建单拷贝核心蛋白进化树与核心 SNPs 进化树。</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span>\n<span class=\"token variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --fasttree\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --bsnum <span class=\"token number\">500</span>\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --fastboot <span class=\"token number\">1000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 5:</strong> 仅构建单拷贝核心蛋白进化树。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span>\n<span class=\"token variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --fasttree\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --bsnum <span class=\"token number\">500</span>\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --fastboot <span class=\"token number\">1000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 6:</strong> 进行泛基因组分析并构建单拷贝核心蛋白进化树。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span>\n<span class=\"token variable\">$pgcgap</span> --Pan --codon <span class=\"token number\">11</span> --identi <span class=\"token number\">95</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --GffPath Results/Annotations/GFF --PanTree --fasttree\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --Pan --codon <span class=\"token number\">11</span> --identi <span class=\"token number\">95</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --GffPath Results/Annotations/GFF --PanTree --bsnum <span class=\"token number\">500</span>\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --Pan --codon <span class=\"token number\">11</span> --identi <span class=\"token number\">95</span> --strain_num <span class=\"token number\">6</span> --threads <span class=\"token number\">4</span> --GffPath Results/Annotations/GFF --PanTree --fastboot <span class=\"token number\">1000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 7:</strong> 同源蛋白家族聚类分析并构建进化树。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span>\n<span class=\"token variable\">$pgcgap</span> --OrthoF --threads <span class=\"token number\">4</span> --AAsPath Results/Annotations/AAs --fasttree\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --OrthoF --threads <span class=\"token number\">4</span> --AAsPath Results/Annotations/AAs --bsnum <span class=\"token number\">500</span>\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --OrthoF --threads <span class=\"token number\">4</span> --AAsPath Results/Annotations/AAs --fastboot <span class=\"token number\">1000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 8:</strong> 计算两两基因组之间的平均核苷酸一致性 (ANI)。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --ANI --threads <span class=\"token number\">4</span> --queryL scaf.list --refL scaf.list --ANIO Results/ANI/ANIs --Scaf_suffix .fa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 9:</strong> 通过 MinHash 计算基因组及宏基因组的相似性。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --MASH --scafPath <span class=\"token operator\">&lt;</span><span class=\"token environment constant\">PATH</span><span class=\"token operator\">></span> --Scaf_suffix <span class=\"token operator\">&lt;</span>STRING<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 10:</strong> 对所有基因组进行 COG 注释。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --pCOG --threads <span class=\"token number\">4</span> --strain_num <span class=\"token number\">6</span> --AAsPath Results/Annotations/AAs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 11:</strong> 变异 (SNPs, Indels) 检测与注释，并构建基于参考基因组的 SNPs 进化树。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --VAR --threads <span class=\"token number\">4</span> --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --qualtype sanger --bsnum <span class=\"token number\">500</span>\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --VAR --threads <span class=\"token number\">4</span> --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len <span class=\"token number\">11</span> --strain_num <span class=\"token number\">6</span> --qualtype sanger --fastboot <span class=\"token number\">1000</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 12:</strong> 从基因组中寻找抗生素抗性基因或毒力基因。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads <span class=\"token number\">6</span> --db ncbi --identity <span class=\"token number\">75</span> --coverage <span class=\"token number\">50</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$pgcgap</span> --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length <span class=\"token number\">200</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">   <span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --bsnum <span class=\"token number\">500</span> --threads <span class=\"token number\">4</span>\n\n<span class=\"token comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span>\n<span class=\"token variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --fastboot <span class=\"token number\">1000</span> --threads <span class=\"token number\">4</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"准备输入文件\"><a class=\"markdownIt-Anchor\" href=\"#准备输入文件\"></a> 准备输入文件</h2>\n<h3 id=\"工作目录\"><a class=\"markdownIt-Anchor\" href=\"#工作目录\"></a> 工作目录</h3>\n<ul>\n<li>PGCGAP 的运行目录。</li>\n</ul>\n<h3 id=\"assemble\"><a class=\"markdownIt-Anchor\" href=\"#assemble\"></a> Assemble</h3>\n<ul>\n<li>将所有双端 reads、或 PacBio reads 或 Oxford nanopore reads 存于某个目录下 (Default: ./Reads/Illumina/)。</li>\n</ul>\n<h3 id=\"annotate\"><a class=\"markdownIt-Anchor\" href=\"#annotate\"></a> Annotate</h3>\n<ul>\n<li>基因组文件 (完整或不完整) 存放于某个目录下 (Default: Results/Assembles/Scaf/Illumina)。</li>\n</ul>\n<h3 id=\"ani\"><a class=\"markdownIt-Anchor\" href=\"#ani\"></a> ANI</h3>\n<ul>\n<li>QUERY_LIST 和 REFERENCE_LIST 文件，每个文件中含有需要计算的基因组的绝对路径，每个基因组一行 (default: 工作目录下的 &quot;scaf.list&quot;)。若先运行了 “--Assemble” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"coretree\"><a class=\"markdownIt-Anchor\" href=\"#coretree\"></a> CoreTree</h3>\n<ul>\n<li>将所有菌株的氨基酸文件 (后缀名必须为 “.faa”) 和核苷酸文件 (需以 “.ffn” 为后缀) 分别存放于两个目录中 (default: “./Results/Annotations/AAs/” 和 “./Results/Annotations/CDs/”)。“.faa” 和 “.ffn” 文件需要有相同的前缀名字，且 protein IDs 和 gene IDs 需以菌株名开头。建议用 “Prokka” 软件获取输入文件，若已经运行了 “--Annotate” 模块，则该模块的输入文件会自动生产。若 “--CDsPath” 设置为 “NO”，则不需要提供核苷酸文件，但也不会生产核心 SNPs 进化树。</li>\n</ul>\n<h3 id=\"mash\"><a class=\"markdownIt-Anchor\" href=\"#mash\"></a> MASH</h3>\n<ul>\n<li>基因组文件 (完整或不完整) 存放于某个目录下 (Default: Results/Assembles/Scaf/Illumina)。</li>\n</ul>\n<h3 id=\"orthof\"><a class=\"markdownIt-Anchor\" href=\"#orthof\"></a> OrthoF</h3>\n<ul>\n<li>所有菌株的 fasta 格式氨基酸文件 (每个菌株一个文件) 存放于一个目录中 (default: “./Results/Annotations/AAs/”)。 若先运行了 “--Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"pan\"><a class=\"markdownIt-Anchor\" href=\"#pan\"></a> Pan</h3>\n<ul>\n<li>包含所有菌株 GFF3 文件 (With “.gff” as the suffix) 的目录路径 (default: ./Results/Annotations/GFF/);</li>\n<li>若先运行了 “--Annotate” 模块，上述文件会自动生成。</li>\n</ul>\n<h3 id=\"pcog\"><a class=\"markdownIt-Anchor\" href=\"#pcog\"></a> pCOG</h3>\n<ul>\n<li>存放所有菌株的 fasta 格式氨基酸序列文件 (With “.faa” as the suffix) 的目录路径 (default: ./Results/Annotations/AAs/)。 若先运行了 “--Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"var\"><a class=\"markdownIt-Anchor\" href=\"#var\"></a> VAR</h3>\n<ul>\n<li>包含所有菌株的 Pair-end reads 的目录路径 (default: ./Reads/Over/under the working directory)。</li>\n<li>fasta 格式或 GenBank 格式的参考基因组的绝对路径 (<strong>必需提供</strong>)。</li>\n</ul>\n<h3 id=\"antires\"><a class=\"markdownIt-Anchor\" href=\"#antires\"></a> AntiRes</h3>\n<ul>\n<li>存放基因组 (complete or draft) 的目录 (Default: Results/Assembles/Scaf/Illumina under the working directory).</li>\n</ul>\n<h3 id=\"stree\"><a class=\"markdownIt-Anchor\" href=\"#stree\"></a> STREE</h3>\n<ul>\n<li>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</li>\n</ul>\n<h2 id=\"输出文件解读\"><a class=\"markdownIt-Anchor\" href=\"#输出文件解读\"></a> 输出文件解读</h2>\n<h3 id=\"assemble-2\"><a class=\"markdownIt-Anchor\" href=\"#assemble-2\"></a> Assemble</h3>\n<ul>\n<li>\n<p><strong>Results/Assembles/Illumina/</strong><br/><br />\nDirectories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li>\n<p><strong>Results/Assembles/PacBio/</strong><br/><br />\nDirectories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li>\n<p><strong>Results/Assembles/Oxford/</strong><br/><br />\nDirectories contain ONT assembly files and information of each strain.</p>\n</li>\n<li>\n<p><strong>Results/Assembles/Hybrid/</strong><br/><br />\nDirectory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li>\n<p><strong>Results/Assembles/Scaf/Illumina</strong><br/><br />\nDirectory contains Illumina contigs/scaffolds of all strains. &quot;*.filtered.fas&quot; is the genome after excluding short sequences. &quot;*.prefilter.stats&quot; describes the stats of the genome before filtering, and &quot;*.filtered.stats&quot; describes the stats of the genome after filtering.</p>\n</li>\n<li>\n<p><strong>Results/Assembles/Scaf/Oxford</strong><br/><br />\nDirectory contains Oxford nanopore contigs/scaffolds of all strains.</p>\n</li>\n<li>\n<p><strong>Results/Assembles/Scaf/PacBio</strong><br/><br />\nDirectory contains PacBio contigs/scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"annotate-2\"><a class=\"markdownIt-Anchor\" href=\"#annotate-2\"></a> Annotate</h3>\n<ul>\n<li>\n<p><strong>Results/Annotations/*_annotation</strong><br/><br />\ndirectories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li>\n<p><strong>Results/Annotations/AAs</strong><br/><br />\nDirectory contain amino acids sequences of all strains.</p>\n</li>\n<li>\n<p><strong>Results/Annotations/CDs</strong><br/><br />\nDirectory contain nucleotide sequences of all strains.</p>\n</li>\n<li>\n<p><strong>Results/Annotations/GFF</strong><br/><br />\nDirectory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ani-2\"><a class=\"markdownIt-Anchor\" href=\"#ani-2\"></a> ANI</h3>\n<ul>\n<li>\n<p><strong>Results/ANI/ANIs</strong><br/><br />\nThe file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li>\n<p><strong>Results/ANI/ANIs.matrix</strong><br/><br />\nfile with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li>\n<p><strong>Results/ANI/ANIs.heatmap</strong><br/><br />\nAn ANI matrix of all strains.</p>\n</li>\n<li>\n<p><strong>Results/ANI/ANI_matrix.pdf</strong><br/><br />\nThe heatmap plot of &quot;ANIs.heatmap&quot;.</p>\n</li>\n</ul>\n<h3 id=\"mash-2\"><a class=\"markdownIt-Anchor\" href=\"#mash-2\"></a> MASH</h3>\n<ul>\n<li>\n<p><strong>Results/MASH/MASH</strong><br/><br />\nThe pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li>\n<p><strong>Results/MASH/MASH2</strong><br/><br />\nThe pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li>\n<p><strong>Results/MASH/MASH.heatmap</strong><br/><br />\nA similarity matrix of all genomes.</p>\n</li>\n<li>\n<p><strong>Results/MASH/MASH_matrix.pdf</strong><br/><br />\nA heat map plot of &quot;MASH.heatmap&quot;.</p>\n</li>\n</ul>\n<h3 id=\"coretree-2\"><a class=\"markdownIt-Anchor\" href=\"#coretree-2\"></a> CoreTree</h3>\n<ul>\n<li>\n<p><strong>Results/CoreTrees/ALL.core.protein.fasta</strong><br/><br />\nConcatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li>\n<p><strong>Results/CoreTrees/ALL.core.protein.nwk</strong><br/><br />\nThe phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li>\n<p><strong>Results/CoreTrees/ALL.core.protein.fasta.gb.treefile</strong><br/><br />\nThe phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li>\n<p><strong>Results/CoreTrees/faa2ffn/ALL.core.nucl.fasta</strong><br/><br />\nConcatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li>\n<p><strong>Results/CoreTrees/ALL.core.snp.fasta</strong><br/><br />\nCore SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li>\n<p><strong>Results/CoreTrees/ALL.core.snp.nwk</strong><br/><br />\nThe phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by FastTree.</p>\n</li>\n<li>\n<p><strong>Results/CoreTrees/ALL.core.snp.fasta.gb.treefile</strong><br/><br />\nThe phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE</p>\n</li>\n<li>\n<p><strong>Results/CoreTrees/&quot;Other_files&quot;</strong><br/><br />\nIntermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"orthof-2\"><a class=\"markdownIt-Anchor\" href=\"#orthof-2\"></a> OrthoF</h3>\n<ul>\n<li>\n<p><strong>Results/OrthoFinder/Results_orthoF</strong><br/><br />\nSame as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li>\n<p><strong>Results/OrthoFinder/Results_orthoF/Single_Copy_Orthologue_Tree/</strong><br/><br />\nDirectory contains Phylogenetic tree files based on Single Copy Orthologue sequences.<br/></p>\n</li>\n<li>\n<p><strong>Results/OrthoFinder/Results_orthoF/Single_Copy_Orthologue_Tree/Single.Copy.Orthologue.nwk</strong><br/><br />\nPhylogenetic tree constructed by FastTree.<br/></p>\n</li>\n<li>\n<p><strong>Results/OrthoFinder/Results_orthoF/Single_Copy_Orthologue_Tree/Single.Copy.Orthologue.fasta.gb.treefile</strong><br/><br />\nPhylogenetic tree constructed by IQ-TREE.<br/></p>\n</li>\n</ul>\n<h3 id=\"pan-2\"><a class=\"markdownIt-Anchor\" href=\"#pan-2\"></a> Pan</h3>\n<ul>\n<li>\n<p><strong>Results/PanGenome/Pangenome_Pie.pdf</strong><br/><br />\nA 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li>\n<p><strong>Results/PanGenome/pangenome_frequency.pdf</strong><br/><br />\nA graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li>\n<p><strong>Results/PanGenome/Pangenome_matrix.pdf</strong><br/><br />\nA figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li>\n<p><strong>Results/PanGenome/Core/Roary.core.protein.fasta</strong><br/><br />\nAlignments of single-copy core proteins called by roary software.</p>\n</li>\n<li>\n<p><strong>Results/PanGenome/Core/Roary.core.protein.nwk</strong><br/><br />\nA phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li>\n<p><strong>Results/PanGenome/Core/Roary.core.protein.fasta.gb.treefile</strong><br/><br />\nA phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li>\n<p><strong>Results/PanGenome/Other_files</strong><br/><br />\nsee <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pcog-2\"><a class=\"markdownIt-Anchor\" href=\"#pcog-2\"></a> pCOG</h3>\n<ul>\n<li>\n<p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong><br/><br />\nIntermediate files.</p>\n</li>\n<li>\n<p><strong>*.2Scog.table</strong><br/><br />\nThe super COG table of each strain.</p>\n</li>\n<li>\n<p><strong>*.2Scog.table.pdf</strong><br/><br />\nA plot of super COG table in pdf format.</p>\n</li>\n<li>\n<p><strong>All_flags_relative_abundances.table</strong><br />\nA table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"var-2\"><a class=\"markdownIt-Anchor\" href=\"#var-2\"></a> VAR</h3>\n<ul>\n<li>\n<p><strong>Results/Variants/directory-named-in-strains</strong><br/><br />\ndirectories containing substitutions (snps) and insertions/deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li>\n<p><strong>Results/Variants/Core</strong><br/><br />\nThe directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.*.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>gubbins.core.full.node_labelled.final_tree.tre</strong> : Phylogenetic tree of the whole genome SNP alignment constructed with <strong>gubbins</strong> (get rid of recombination).</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"antires-2\"><a class=\"markdownIt-Anchor\" href=\"#antires-2\"></a> AntiRes</h3>\n<ul>\n<li><strong>Results/AntiRes/*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results/AntiRes/summary.txt</strong> : A matrix of gene presence/absence for all strains.</li>\n</ul>\n<h3 id=\"stree-2\"><a class=\"markdownIt-Anchor\" href=\"#stree-2\"></a> STREE</h3>\n<ul>\n<li><strong>Results/STREE/*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results/STREE/*.aln.gb</strong> : Conserved blocks of the sequences.</li>\n<li><strong>Results/STREE/*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n</ul>\n<h2 id=\"使用许可\"><a class=\"markdownIt-Anchor\" href=\"#使用许可\"></a> 使用许可</h2>\n<p>PGCGAP 不可商用，其它情况可使用免费 (licensed under GPLv3)。</p>\n<h2 id=\"反馈与提问\"><a class=\"markdownIt-Anchor\" href=\"#反馈与提问\"></a> 反馈与提问</h2>\n<p>若有问题，可在 <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> 提出或通过邮件咨询 <a href=\"mailto:liaochenlanruo@webmail.hzau.edu.cn\">liaochenlanruo@webmail.hzau.edu.cn</a>。</p>\n<h2 id=\"引用\"><a class=\"markdownIt-Anchor\" href=\"#引用\"></a> 引用</h2>\n<ul>\n<li>\n<p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. <em>Protocol exchange</em>, 2020. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v5\">10.21203/rs.2.21224/v5</a></p>\n</li>\n<li>\n<p>If you use &quot;--Assemble&quot;, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--Annotate&quot;, please also cite <a href=\"https://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=24642063\">Prokka</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--CoreTree&quot;, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--Pan&quot;, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--OrthoF&quot;, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--ANI&quot;, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--MASH&quot;, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--VAR&quot;, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>,  <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--AntiRes&quot;, please also cite <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li>\n<p>If you use &quot;--STREE&quot;, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a> , <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"常见问题\"><a class=\"markdownIt-Anchor\" href=\"#常见问题\"></a> 常见问题</h2>\n<h3 id=\"q1-var-founction-ran-failed-to-get-annotated-vcfs-and-core-results\"><a class=\"markdownIt-Anchor\" href=\"#q1-var-founction-ran-failed-to-get-annotated-vcfs-and-core-results\"></a> Q1 VAR founction ran failed to get annotated VCFs and Core results</h3>\n<p>Check the log file named in &quot;strain_name.log&quot; under Results/Variants/&lt;strain_name&gt;/ directory. If you find a sentence like &quot;WARNING: All frames are zero! This seems rather odd, please check that 'frame' information in your 'genes' file is accurate.&quot; This is an snpEff error. Users can install JDK8 to solve this problem.</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$conda</span> <span class=\"token function\">install</span> java-jdk<span class=\"token operator\">=</span><span class=\"token number\">8.0</span>.112<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"q2-could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a class=\"markdownIt-Anchor\" href=\"#q2-could-not-determine-version-of-minced-please-install-version-2-or-higher\"></a> Q2 Could not determine version of minced please install version 2 or higher</h3>\n<p>When running prokka of Assemble founction, this error could happened, the error message shows as following:</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">Error: A JNI error has occurred, please check your installation and try again\nException in thread \"main\" java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0\n\tat java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:468)\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:74)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:369)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:363)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:362)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\tat sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)\n[01:09:40] Could not determine version of minced - please install version 2.0 or higher<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$conda</span> <span class=\"token function\">install</span> <span class=\"token assign-left variable\">minced</span><span class=\"token operator\">=</span><span class=\"token number\">0.3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"q3-dyld-library-not-loaded-rpathlibcrypto100dylib\"><a class=\"markdownIt-Anchor\" href=\"#q3-dyld-library-not-loaded-rpathlibcrypto100dylib\"></a> Q3 dyld: Library not loaded: @rpath/libcrypto.1.0.0.dylib</h3>\n<p>This error may happen when running function &quot;VAR&quot; on macOS. It is an error of openssl. Users can solve this problem as following:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#Firstly, install brew if have not installed before</span>\n<span class=\"token variable\">$ruby</span> -e <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\"token variable\">)</span></span>\"</span>\n\n<span class=\"token comment\">#Install openssl with brew</span>\n<span class=\"token variable\">$brew</span> <span class=\"token function\">install</span> openssl\n\n<span class=\"token comment\">#Create the soft link for libraries</span>\n<span class=\"token variable\">$ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/\n\n<span class=\"token variable\">$ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations</p>\n<h3 id=\"q4-use-of-uninitialized-value-in-require-at-encodepm-line-61\"><a class=\"markdownIt-Anchor\" href=\"#q4-use-of-uninitialized-value-in-require-at-encodepm-line-61\"></a> Q4 Use of uninitialized value in require at <a href=\"http://Encode.pm\">Encode.pm</a> line 61</h3>\n<p>This warning may happen when running function &quot;Pan&quot;. It is a warning of Roary software.<br />\nThe content of line 61 is &quot;require Encode::ConfigLocal;&quot;. Users can ignore the warning.<br />\nClick <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"updates\"><a class=\"markdownIt-Anchor\" href=\"#updates\"></a> Updates</h2>\n<ul>\n<li>\n<p>V1.0.3</p>\n<ul>\n<li>Updated ANI fuction.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.4</p>\n<ul>\n<li>Add parallel for function &quot;COG&quot;.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.5</p>\n<ul>\n<li>Bug repair for input of gubbins.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function &quot;COG&quot; to &quot;pCOG&quot;.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.8</p>\n<ul>\n<li>Add the &quot;MASH&quot; function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to &quot;Pan&quot;.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan chart has been added.</li>\n<li>Fixed a bug for ploting the ANI matrix.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.10</p>\n<ul>\n<li>Add the &quot;AntiRes&quot; function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.11</p>\n<ul>\n<li>Users now can choose &quot;abyss&quot; or &quot;spades&quot; for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command &quot;pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]&quot;, and can look up the examples of each module with command &quot;pgcgap Examples&quot;.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls &quot;ABySS&quot; for genome assembly. When the assembled N50 is less than 50,000, it automatically calls &quot;SPAdes&quot; to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.13</p>\n<ul>\n<li>Fixed the &quot;running error&quot; bug of function &quot;Assess&quot; in module &quot;ACC&quot;.</li>\n<li>Added module &quot;STREE&quot; for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq/NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running &quot;Annotate&quot; analysis to avoid program crash.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module &quot;CoreTree&quot;.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module &quot;STREE&quot;.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module &quot;VAR&quot;.</li>\n<li>Fixed a little bug of module &quot;CoreTree&quot; to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.21</p>\n<ul>\n<li>Change the default search program &quot;blast&quot; to &quot;diamond&quot; of module &quot;OrthoF&quot;.</li>\n<li>Fixed a bug of module &quot;pCOG&quot; to output the right figure.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.22</p>\n<ul>\n<li>The drawing function of module &quot;ANI&quot; and module &quot;MASH&quot; has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module &quot;ANI&quot;, that is no heatmap will be drawn when there is &quot;NA&quot; in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.23</p>\n<ul>\n<li>The &quot;--Assess&quot; function of module &quot;ACC&quot; was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module &quot;Pan&quot; to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module &quot;CoreTree&quot; and &quot;Pan&quot;.</li>\n<li>The parameter &quot;--identi&quot; was added into module &quot;Pan&quot; to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module &quot;ANI&quot; and &quot;MASH&quot;.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the &quot;ANI&quot; and &quot;MASH&quot; analysis.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command &quot;pgcgap --check-update&quot;.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/COG\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter &quot;CoreTree&quot; in the module Pan to avoid program termination caused by the &quot;&gt;&quot; in non-sequence lines.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the &quot;permission denied&quot; error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.30</p>\n</li>\n<li>\n<p>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</p>\n</li>\n<li>\n<p>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</p>\n</li>\n<li>\n<p>Added the option of using FastTree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</p>\n</li>\n<li>\n<p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li>\n<p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try &quot;pgcgap Examples&quot; to have a look.</li>\n<li>Updated module AntiRes: the parameter --db had been modified to add choices of &quot;all&quot; and &quot;megares&quot;.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"比较基因组学","path":"api/tags/比较基因组学.json"}]},{"title":"Perl获取外部命令执行结果的输出","slug":"Perl获取外部命令执行结果的输出","date":"2019-04-19T07:54:38.000Z","updated":"2022-03-03T02:49:35.195Z","comments":true,"path":"api/articles/Perl获取外部命令执行结果的输出.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>有时候 perl 脚本需要与 Linux 外部命令进行交互，本文讲解如何将外部命令的执行结果的输出（此处指的不是运行结果的返回值，而是标准输出上的内容之类）赋给 perl 变量。</p>\n<span id=\"more\"></span>\n<p>首先需要了解 perl 调用 shell 命令的三种方式：</p>\n</br>\n**1. system**\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">system<span class=\"token punctuation\">(</span><span class=\"token string\">\"command\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n通过system运行得到的结果是一个返回值，其实是一串数字，若外部命令运行成功，则返回值为“0”，若运行失败，则返回非0的值。\n</br>\n**2. 反引号** （ESC下面的那个键）\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">command</span><span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n通过反引号运行，会返回shell运行结果的输出，下面的脚本通过“which”查询“COG_2014.phr”的绝对路径，并将其赋值给`$path`。然后通过正则表达式获取“COG_2014.phr”所在的目录的路径，并将其赋值给变量`$cogdb_dir`。\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">my <span class=\"token variable\">$cogdb_dir</span><span class=\"token punctuation\">;</span>\nmy <span class=\"token variable\">$path</span> <span class=\"token operator\">=</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">which</span> COG_2014.phr<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token operator\">=~</span>/<span class=\"token punctuation\">(</span>.+<span class=\"token punctuation\">)</span>COG_2014.*/<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$cogdb_dir</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nprint <span class=\"token variable\">$cogdb_dir</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</br>\n**3. exec**\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">exec<span class=\"token punctuation\">(</span><span class=\"token string\">\"command\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\nexec与system相似，但是执行完exec命令之后，perl会终止运行，不再执行后续的代码。\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"Perl捕获外部命令执行异常并继续运行后续代码","slug":"Perl捕获外部命令执行异常并继续运行后续代码","date":"2019-04-19T02:34:49.000Z","updated":"2022-01-08T02:16:28.411Z","comments":true,"path":"api/articles/Perl捕获外部命令执行异常并继续运行后续代码.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>在编写 perl 脚本时经常会调用外部命令，由于种种原因，会遇到外部命令执行异常，而导致整个脚本终止运行。这对于大的项目来说很不经济，因此，可以想办法越过这个异常并继续执行后续脚本。</p>\n<span id=\"more\"></span>\n<p>Examples：</p>\n</br>\n假设有一个外部命令“command”需要执行，将该命令存到一个数组当中：\n</br>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">my @arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"command\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n将外部命令的返回值赋给一个变量：\n</br>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">my <span class=\"token variable\">$return</span> <span class=\"token operator\">=</span> sysstem<span class=\"token punctuation\">(</span>@arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n判断返回值是否为“0”，0代表运行正常，任何非0的值均表示有运行异常。如果返回值不为0，则记录错误，然后继续运行后续代码：\n</br>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$return</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">&#123;</span>\n    print <span class=\"token string\">\"There are some errors when running the command!<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span><span class=\"token punctuation\">;</span>\n    command2<span class=\"token punctuation\">;</span><span class=\"token comment\">#继续运行其他命令</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</br>\n<p>** 注：** 本方案仅在 Linux 系统下测试，不晓得 Windows 和 Mac 的返回值与 Linux 是否一致，Linux 中的 “core dump” 就可以如此来捕获。</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"Wget 技巧","slug":"Wget-技巧","date":"2019-04-14T12:17:46.000Z","updated":"2022-01-08T02:16:28.420Z","comments":true,"path":"api/articles/Wget-技巧.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文例举一些 Linux 系统下的下载工具 “wget” 的高级用法。</p>\n<span id=\"more\"></span>\n<h3 id=\"1下载目录下所有文件\"><a class=\"markdownIt-Anchor\" href=\"#1下载目录下所有文件\"></a> 1. 下载目录下所有文件：</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -c -r -nH -np -nd -R index.html -P ./data ftp://ftp.ncbi.nih.gov/pub/COG/COG2014/data/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p></br>-c：断点续传</p>\n<p>-r：遍历子目录</p>\n<p>-nH：不将文件保存在 FTP 主机名目录下</p>\n<p>-np：递归下载时不搜索上层目录</p>\n<p>-nd：递归下载时不创建一层一层的目录，把所有的文件下载到当前目录</p>\n<p>-R index.html：不生成 index.html 文件</p>\n<p>-P ./data：将数据下载到当前目录下的 data 目录下</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"下载","path":"api/tags/下载.json"}]},{"title":"Github操作","slug":"github操作","date":"2019-04-01T00:46:44.000Z","updated":"2022-03-03T02:49:35.183Z","comments":true,"path":"api/articles/github操作.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文讲述了 Github 一些操作技巧……</p>\n<span id=\"more\"></span>\n<h1 id=\"tag相关操作\"><a class=\"markdownIt-Anchor\" href=\"#tag相关操作\"></a> TAG 相关操作</h1>\n<p></br>通过 Tag 可以将项目生成不同的版本，并进行存档，供用户下载。这在软件中是很常见的。</p>\n<ul>\n<li>\n<p><strong>创建 tag</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag v1.0.0 -m <span class=\"token string\">'first version'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>上传到 github</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin v1.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>存档某个 tag</strong></p>\n  <pre class=\"line-numbers language-bassh\" data-language=\"bassh\"><code class=\"language-bassh\">git archive -v --format&#x3D;tar v1.0.0 &gt; v1.0.0.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>删除 tag</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag -d v1.0.0\n<span class=\"token function\">git</span> push origin :refs/tags/v1.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"branch\"><a class=\"markdownIt-Anchor\" href=\"#branch\"></a> Branch</h1>\n<h2 id=\"创建分支\"><a class=\"markdownIt-Anchor\" href=\"#创建分支\"></a> 创建分支</h2>\n<ul>\n<li>\n<p>创建并切换到名为 <code>pgcgap</code>  的分支</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout -b pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>将 <code>pgcgap</code>  分支推送到远程端</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push -u origin pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"删除分支\"><a class=\"markdownIt-Anchor\" href=\"#删除分支\"></a> 删除分支</h2>\n<p>假设要删除当前所处的 <code>pgcgap</code>  分支。</p>\n<ul>\n<li>\n<p>切换到别的分支，如 master</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>删除本地分支</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch -d pgcgap\n\n<span class=\"token comment\"># 有时候需要强制删除</span>\n<span class=\"token function\">git</span> branch -D pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>删除远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin --delete pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"git-加速\"><a class=\"markdownIt-Anchor\" href=\"#git-加速\"></a> Git 加速</h1>\n<p>进行 git 操作时以 <code>github.com.cnpmjs.org</code>  替换 <code>github.com</code>  可以提速 10 倍左右。</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"}]},{"title":"Ubuntu open-mpi运行错误","slug":"Ubuntu-open-mpi运行错误","date":"2019-03-30T07:07:30.000Z","updated":"2022-01-08T02:16:28.416Z","comments":true,"path":"api/articles/Ubuntu-open-mpi运行错误.json","excerpt":null,"keywords":null,"cover":null,"content":"<span id=\"more\"></span>\n<p>我在 win10 Linux 子系统下使用 mpirun 多线程运行 ABySS 基因组拼接软件的时候，出现以下错误提示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Linux kernel CMA support was requested via the btl_vader_single_copy_mechanism MCA variable, but CMA support is not available due to restrictive ptrace settings.\n\n<span class=\"token punctuation\">[</span>liaochenlanruo:49950<span class=\"token punctuation\">]</span> <span class=\"token number\">4</span> <span class=\"token function\">more</span> processes have sent <span class=\"token builtin class-name\">help</span> message help-mpi-btl-openib-cpc-base.txt / ibv_create_qp failed\n\n<span class=\"token punctuation\">[</span>liaochenlanruo:49950<span class=\"token punctuation\">]</span> Set MCA parameter <span class=\"token string\">\"orte_base_help_aggregate\"</span> to <span class=\"token number\">0</span> to see all <span class=\"token builtin class-name\">help</span> / error messages <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</br>\n<p>结果就是无法运行多线程，跑了一夜的程序没有任何动静，似乎是卡死了。</p>\n</br>\nGoogle到的解决方案，root用户下，终端运行如下命令：\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#echo 0 > /proc/sys/kernel/yama/ptrace_scope</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</br>\n**提示：\"ptrace_scope\"文件中原来的值为“1”，改成“0”就可以了。**\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"OrthoFinder2—同源蛋白家族聚类","slug":"OrthoFinder2—同源蛋白家族聚类","date":"2019-03-20T02:42:16.000Z","updated":"2022-01-08T02:16:28.408Z","comments":true,"path":"api/articles/OrthoFinder2—同源蛋白家族聚类.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png","content":"<p>寻找同源蛋白家族用的比较多的是 Orthomcl，但是该软件多年前已经停止更新，且使用的时候需要安装和使用 MySQL，操作起来比较繁琐。因此 OrthoFinder 应运而生，并且更新到版本 2。后者不但可以寻找同源家族，并且可以构建基因家族进化树。</p>\n<span id=\"more\"></span>\n<ol>\n<li>OrthoFinder 及依赖包的安装</li>\n</ol>\n<ul>\n<li>下载</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/davidemms/OrthoFinder/releases/download/v2.2.7/OrthoFinder-2.2.7.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>解压</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> zxvf OrthoFinder-2.2.7.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>安装（加入环境变量即可）</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.bashrc\n\ni\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token environment constant\">$HOME</span>/tools/OrthoFinder-2.2.7\n\nEsc\n\n<span class=\"token builtin class-name\">shift</span> + <span class=\"token punctuation\">;</span>\n\nwq<span class=\"token operator\">!</span>\n\n<span class=\"token builtin class-name\">source</span> ~/.bashrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>依赖包</p>\n<p>（1）<a href=\"url:https://github.com/bbuchfink/diamond/releases\">DIAMOND</a></p>\n<p>下载对应版本，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/bbuchfink/diamond/releases/download/v0.9.24/diamond-linux64.tar.gz\n\n<span class=\"token function\">tar</span> xzf diamond-linux64.tar.gz\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> diamond /usr/local/bin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>没有 root 权限的可以把 diamond 所在目录加入环境变量。</p>\n<p>(2) <a href=\"url:https://github.com/soedinglab/MMseqs2/releases\">MMseqs2</a></p>\n<p>下载对应版本，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/soedinglab/MMseqs2/releases/download/7-4e23d/MMseqs2-Linux-AVX2.tar.gz\n\n<span class=\"token function\">tar</span> xzf MMseqs2-Linux-AVX2.tar.gz\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> mmseqs2/bin/mmseqs /usr/local/bin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>(3) <a href=\"url:http://micans.org/mcl/\">MCL</a></p>\n<ul>\n<li>Ubuntu, Debian, Linux Mint 安装方法：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> mcl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>Centos, Redhat 安装方法：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://micans.org/mcl/src/mcl-latest.tar.gz\n<span class=\"token function\">tar</span> zxvf mcl-latest.tar.gz\n<span class=\"token builtin class-name\">cd</span> mcl-14-137（视具体情况而定）\n./configure\n<span class=\"token function\">make</span>\n<span class=\"token function\">make</span> check\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>(4) <a href=\"url:http://www.atgc-montpellier.fr/fastme/binaries.php\">FastME</a></p>\n<p>下载二进制文件，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://www.atgc-montpellier.fr/download/sources/fastme/fastme-2.1.5.tar.gz\n<span class=\"token function\">tar</span> zxvf fastme-2.1.5.tar.gz\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> fastme-2.1.5/binaries/fastme-2.1.5-linux64 /usr/local/bin/fastme<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>(5) 可选: <a href=\"url:ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/\">BLAST+</a></p>\n<ul>\n<li>Ubuntu, Debian, Linux Mint 安装方法：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> ncbi-blast+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>Centos, Redhat 安装方法：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.8.1+-x64-linux.tar.gz\n<span class=\"token function\">tar</span> zxvf ncbi-blast-2.8.1+-x64-linux.tar.gz\n<span class=\"token function\">vim</span> ~/.bashrc\ni\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token environment constant\">$HOME</span>/tools/ncbi-blast-2.8.1+/bin\nEsc\n<span class=\"token builtin class-name\">shift</span> + <span class=\"token punctuation\">;</span>\nwq<span class=\"token operator\">!</span>\n<span class=\"token builtin class-name\">source</span> ~/.bashrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>运行 OrthoFinder<br />\n (1) 运行示例数据：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> OrthoFinder-2.2.7\northofinder -f ExampleData<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>运行结果如下，会显示输出文件的路径，表明运行成功：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"示例数据运行结果\" /></p>\n<p>(2) 运行自己的数据：</p>\n<ul>\n<li>step1：数据准备</li>\n</ul>\n<p>下载氨基酸序列，要求为 fasta 格式，每个物种一个文件。将所有 fasta 文件存于一个目录中（如 Data 目录），如下图所示。文件名要简洁并有区分性，因为文件名会作为最终的物种 ID。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder02.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder02.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"目录结构与文件准备\" /></p>\n<ul>\n<li>step2：运行程序</li>\n</ul>\n<p>在 Data 目录的上一级目录打开终端，运行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">orthofinder -f Data -t 线程数<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"3\">\n<li>结果解读</li>\n</ol>\n<p>(1) Results Files: Orthogroups</p>\n<p>包含一个主文件 “Orthogroups.csv” 和两个支持文件：</p>\n<ul>\n<li>\n<p>Orthogroups.csv，每一行为一个 group，每一列为一个物种，行列交汇处为基因名称。</p>\n</li>\n<li>\n<p>Orthogroups_UnassignedGenes.csv，包含所有未分配到任何 group 的基因名称。</p>\n</li>\n<li>\n<p>Orthogroups.txt，OrthoMCL 格式的输出结果，内容等同于 Orthogroups.csv。</p>\n</li>\n</ul>\n<p>（2）Results Files: Orthogroup Statistics</p>\n<p>包含一些统计数据，可用于比较基因组分析、绘图以及质控。</p>\n<ul>\n<li>\n<p>Statistics_Overall.csv 和 Statistics_PerSpecies.csv，提供基本的描述信息</p>\n</li>\n<li>\n<p>Orthogroups_SpeciesOverlaps.csv，两两物种的 group 共享矩阵</p>\n</li>\n<li>\n<p>Species-specific orthogroup：该 group 仅包含一个物种的基因。</p>\n</li>\n<li>\n<p>G50：group 中的基因数，使得 50％的基因处于该大小或更大的 group 中。</p>\n</li>\n<li>\n<p>O50：最小数量的 group，使得 50％的基因处于该大小或更大的 group 中。</p>\n</li>\n<li>\n<p>Single-copy orthogroup：每个物种中只有一个基因的 group（相当于单拷贝核心基因）。这些 group 是构建物种树和许多其他分析的理想选择。</p>\n</li>\n<li>\n<p>Unassigned gene：未与任何其他基因划分到一个 group 的基因。</p>\n</li>\n</ul>\n<p>(3) Results Files: Orthologues</p>\n<p>两两物种间的直系同源基因，每一行为一个 group，第一列为 group 编号，第二列为第一个物种的基因，第三列为第二个物种的基因。同一物种的基因名以 “,” 分割。直向同源物可以是一对一，一对多或多对多。</p>\n<p>(4) Results Files: Gene Trees and Species Tree</p>\n<p>每个 group 的基因树和定根的物种树以 newick 格式输出，可以用各种看树软件展示，如 MEGA、iTOL、Dendroscope 和 FigTree 等，个人推荐用 iTOL。</p>\n<ol start=\"4\">\n<li>高级用法</li>\n</ol>\n<p>（1）添加新物种到之前的分析<br />\n（previous_orthofinder_directory 指的是包含 “SpeciesIDs.txt” 的目录）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">orthofinder -b previous_orthofinder_directory -f new_fasta_directory<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>（2）从之前的分析中移除物种</p>\n<p>从输出目录下找到工作目录 “WorkingDirectory” 中的 “SpeciesIDs.txt” 文件，在要移除的物种那一行最前面加上一个 “#” 并保存，然后运行（previous_orthofinder_directory 指的是包含 “SpeciesIDs.txt” 的目录）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">orthofinder -b previous_orthofinder_directory<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>（3）同时添加和删除物种</p>\n<p>编辑好 “SpeciesIDs.txt” 后，运行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">orthofinder -b previous_orthofinder_directory -f new_fasta_directory<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>（4）更多高级功能请阅读官方文档<br />\n主要包括 “Inferring MSA Gene Trees”、并行计算、单独运行 BLAST、使用预先计算的 BLAST 结果以及回归检测。</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"同源家族","path":"api/tags/同源家族.json"}]},{"title":"为PubMed添加功能","slug":"为PubMed添加功能","date":"2019-03-18T03:29:24.000Z","updated":"2022-01-08T02:16:28.425Z","comments":true,"path":"api/articles/为PubMed添加功能.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png","content":"<p>对于搞科研的小伙伴们来说，PubMed 是一个必不可少的文献查阅数据库，然而输入关键字后，出来的文章少则几十篇，多则上百篇。而这些文章的质量却参差不齐，那么如何高效的选择高水平的文章来下载和阅读呢？</br></p>\n<span id=\"more\"></span>\n<p>首先上图，看一下我的 PubMed 界面：</br><br />\n<img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"PubMed\" /><br />\n</br>从图片中可以看出，文章的影响因子、分区一目了然，甚至提供了全文下载链接，解决了学校图书馆未购买杂志数据库而需付费下载的烦恼。该效果是通过两个谷歌浏览器插件实现的，分别是<a href=\"https://www.novoprolabs.com/support/articles/pubmedy-a-chrome-extension-for-ncbi-201712191285.html\"> PubMedy</a> 和<a href=\"https://www.scholarscope.cn/\"> Scholarscope</a>。前者可以展示影响因子、参考文献格式，并提供全文下载链接；后者可以展示期刊影响因子、领域排名、引用次数及中科院分区。<br />\n</br>这两个插件都可以在谷歌商店中下载，墙内的小伙伴需要想办法科学上网，这里推荐另一款插件 ——“<a href=\"https://www.skyzip.de/\">skyZIP™ Proxy</a>”。<br />\n</br>插件可以自行搜索下载，也可以加入 QQ 群（945751012）下载。</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"PubMed","path":"api/tags/PubMed.json"}]},{"title":"Hexo博客导航栏menu无法跳转https","slug":"Hexo博客导航栏menu无法跳转https","date":"2019-03-05T04:08:12.000Z","updated":"2022-01-08T02:16:28.397Z","comments":true,"path":"api/articles/Hexo博客导航栏menu无法跳转https.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>Hexo 博客部署到 github/coding 后，点击菜单栏 menu 跳转至 http 而非 https，提示找不到页面。</p>\n<span id=\"more\"></span>\n<p>解决方案：</p>\n<p>修改主题配置文件 “_config.yml”，在每一个 menu 的路径后面（url 那一行）加一条正斜线，重新部署即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">menu:\n\n<span class=\"token comment\"># index</span>\n\n  - title: 首页\n\n    icon: home\n\n    url: /\n\n  <span class=\"token comment\"># archives</span>\n\n  - title: 归档\n\n    icon: archive\n\n    url: archives/\n\n  <span class=\"token comment\"># categories</span>\n\n  - title: 分类\n\n    icon: list\n\n    url: categories/\n\n  <span class=\"token comment\"># tags</span>\n\n  - title: 标签\n\n    icon: tags\n\n    url: tags/\n\n  <span class=\"token comment\"># about</span>\n\n  - title: 关于我\n\n    icon: user\n\n    url: /about/\n\n  <span class=\"token comment\"># archives</span>\n\n  - title: 留言板\n\n    icon: comments\n\n    url: Message/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","raw":null,"categories":[{"name":"网站建设","path":"api/categories/网站建设.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"}]},{"title":"windows 10 中文乱码解决方案","slug":"windows-10-中文乱码解决方案","date":"2019-03-01T13:53:01.000Z","updated":"2022-01-08T02:16:28.424Z","comments":true,"path":"api/articles/windows-10-中文乱码解决方案.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_1.png","content":"<p>安装的英文原版系统，导致多数中文乱码，即便是安装了中文语言包，如果设置错误，仍旧无法正确显示中文。</p>\n<span id=\"more\"></span>\n<p>进入正题，按如图所示一步步完成设置，重启系统便可解决问题。我的系统是 18845.1001 版本，其他版本应该不会差别太大。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_1.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"通过开始菜单进入控制面板\" /></p>\n<center>通过开始菜单进入控制面板</center>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_2.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"日期、时间和区域格式设置\" /></p>\n<center>日期、时间和区域格式设置</center>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_3.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"下拉相关设置\" /></p>\n<center>下拉相关设置</center>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_4.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"选择区域\" /></p>\n<center>选择区域</center>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_5.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_5.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"管理-更改系统区域设置\" /></p>\n<center>管理-更改系统区域设置</center>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_6.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_6.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"设置为中文，不要选择Beta版\" /></p>\n<center>设置为中文，不要选择Beta版</center>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_7.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_7.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"复制设置\" /></p>\n<center>复制设置</center>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"系统","path":"api/tags/系统.json"}]}]}