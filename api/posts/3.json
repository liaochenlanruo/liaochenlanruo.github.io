{"total":130,"pageSize":10,"pageCount":13,"data":[{"title":"用metid构建代谢组数据库","slug":"用metid构建代谢组数据库","date":"2023-04-17T09:15:39.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/用metid构建代谢组数据库.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.jpg","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>metid包能够用于in-house代谢物库构建，并可利用MS2 spectra进行代谢物鉴定。metid自带数据库，来自于公共数据库的整合。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span><span class=\"punctuation\">(</span><span class=\"operator\">!</span>require<span class=\"punctuation\">(</span>remotes<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;remotes&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">remotes<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;tidymass/metid&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"数据库构建和使用\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"数据库构建和使用\"></p>\n<h1 id=\"建库\"><a href=\"#建库\" class=\"headerlink\" title=\"建库\"></a>建库</h1><h2 id=\"构建内部库\"><a href=\"#构建内部库\" class=\"headerlink\" title=\"构建内部库\"></a>构建内部库</h2><h3 id=\"质谱数据准备\"><a href=\"#质谱数据准备\" class=\"headerlink\" title=\"质谱数据准备\"></a>质谱数据准备</h3><p>将标准品原始质谱数据用<a href=\"http://www.proteowizard.org/download.html\">ProteoWizard</a>转换为mzXM格式.</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"格式转换\"></p>\n<h3 id=\"标准品信息表\"><a href=\"#标准品信息表\" class=\"headerlink\" title=\"标准品信息表\"></a>标准品信息表</h3><p>将标准品信息整理至csv格式表格中，参考如下。<br>共11列：“Lab.ID”, “Compound.name”, “mz”, “RT”, “CAS.ID”, “HMDB.ID”, “KEGG.ID”, “Formula”, “mz.pos”, “mz.neg”, “Submitter”。也可以添加更多的信息，如“Family”, “Sub.pathway” 和“Note”。</p>\n<p>Lab.ID: 不可重复</p>\n<p>mz: 化合物准确的mass</p>\n<p>RT: 保留时间，以秒为单位</p>\n<p>mz.pos: 正离子模式下化合物的mz，如M+H。可设为NA</p>\n<p>mz.neg: 负离子模式下化合物的mz，如M-H。可设为NA</p>\n<p>Submitter: 个人或组织名称，可设为NA</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"info.csv\"></p>\n<p>新建目录<code>database_construction</code>，将正离子数据放在<code>database_construction/POS</code>中，将负离子数据放在<code>database_construction/NEG</code>中，标准品信息表<code>metabolite.info_RPLC.csv</code>放在<code>database_construction</code>中。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"数据集\"></p>\n<p><strong>注意</strong>：每个文件名必须包含碰撞能（collision energy），如<code>test_NCE25.mzXML</code>。</p>\n<h3 id=\"建库-1\"><a href=\"#建库-1\" class=\"headerlink\" title=\"建库\"></a>建库</h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>metid<span class=\"punctuation\">)</span></span><br><span class=\"line\">datapath<span class=\"operator\">&lt;-</span>file.path<span class=\"punctuation\">(</span><span class=\"string\">&quot;./database_construction&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">mydb <span class=\"operator\">&lt;-</span> construct_database<span class=\"punctuation\">(</span></span><br><span class=\"line\">    path <span class=\"operator\">=</span> datapath<span class=\"punctuation\">,</span></span><br><span class=\"line\">\tversion <span class=\"operator\">=</span> <span class=\"string\">&quot;0.0.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\tmetabolite.info.name <span class=\"operator\">=</span> <span class=\"string\">&quot;metabolite.info_RPLC.csv&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\tsource <span class=\"operator\">=</span> <span class=\"string\">&quot;my lab&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\tlink <span class=\"operator\">=</span> <span class=\"string\">&quot;http://xxx.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\tcreater <span class=\"operator\">=</span> <span class=\"string\">&quot;someone&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\temail <span class=\"operator\">=</span> <span class=\"string\">&quot;x@126.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\trt <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> <span class=\"comment\"># Do the metabolites have RT information or not?</span></span><br><span class=\"line\">\tmz.tol <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">,</span> <span class=\"comment\"># m/z tolerance for the match between metabolites and precursor m/z of MS2 spectra.</span></span><br><span class=\"line\">\trt.tol <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">,</span> <span class=\"comment\"># RT tolerance for the match between metabolites and precursor m/z of MS2 spectra.</span></span><br><span class=\"line\">\tthreads <span class=\"operator\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存数据库</span></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>mydb<span class=\"punctuation\">,</span> file<span class=\"operator\">=</span><span class=\"string\">&quot;mydb&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong>：保存时前后名字必须一样。</p>\n<h2 id=\"构建公共库\"><a href=\"#构建公共库\" class=\"headerlink\" title=\"构建公共库\"></a>构建公共库</h2><h3 id=\"安装massdatabase\"><a href=\"#安装massdatabase\" class=\"headerlink\" title=\"安装massdatabase\"></a>安装<a href=\"https://massdatabase.tidymass.org/index.html\">massdatabase</a></h3><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">remotes<span class=\"operator\">::</span>install_github<span class=\"punctuation\">(</span><span class=\"string\">&quot;tidymass/massdatabase&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>可将msp格式的数据库转换为metid数据库。<font color=#FF0000>目前有bug：Error in `dplyr::select()`: ! Can’t subset columns that don’t exist. ✖ Column `Name` doesn’t exist.</font></p>\n<p>bug解决前可以下载已经构建好的公共库：<a href=\"https://tidymass.github.io/metid/articles/public_databases.html\">Database provided for metid</a>。</p>\n<h3 id=\"MassBank\"><a href=\"#MassBank\" class=\"headerlink\" title=\"MassBank\"></a><a href=\"https://github.com/MassBank/MassBank-data/releases\">MassBank</a></h3><p>下载最新的release <a href=\"https://github.com/MassBank/MassBank-data/releases/download/2022.12.1/MassBank_NIST.msp\">MassBank_NIST.msp</a>，将其放在当前目录下。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;C:/Users/liu/Downloads&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>metid<span class=\"punctuation\">)</span></span><br><span class=\"line\">massbank_database_2022.12.01 <span class=\"operator\">&lt;-</span> construct_mona_database<span class=\"punctuation\">(</span></span><br><span class=\"line\">  file <span class=\"operator\">=</span> <span class=\"string\">&quot;MassBank_NIST.msp&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  path <span class=\"operator\">=</span> <span class=\"string\">&quot;.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  version <span class=\"operator\">=</span> <span class=\"string\">&quot;2022.12.01&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  source <span class=\"operator\">=</span> <span class=\"string\">&quot;MassBank&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  link <span class=\"operator\">=</span> <span class=\"string\">&quot;https://github.com/MassBank/MassBank-data/releases&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  creater <span class=\"operator\">=</span> <span class=\"string\">&quot;Hualin Liu&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  email <span class=\"operator\">=</span> <span class=\"string\">&quot;LHL371@126.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  rt <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  threads <span class=\"operator\">=</span> <span class=\"number\">15</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>massbank_database_2022.12.01<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;massbank_database_2022.12.01&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MoNA\"><a href=\"#MoNA\" class=\"headerlink\" title=\"MoNA\"></a><a href=\"https://mona.fiehnlab.ucdavis.edu/downloads\">MoNA</a></h3><p>下载对应数据库，如此处下载<code>LC-MS Spectra (153,242 spectra)</code>，截至<a href=\"https://mona.fiehnlab.ucdavis.edu/spectra/statistics\">2023.04.16</a>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>metid<span class=\"punctuation\">)</span></span><br><span class=\"line\">mona_database_2023.04.16 <span class=\"operator\">&lt;-</span> construct_mona_database<span class=\"punctuation\">(</span></span><br><span class=\"line\">  file <span class=\"operator\">=</span> <span class=\"string\">&quot;MoNA-export-LC-MS_Spectra.msp&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  path <span class=\"operator\">=</span> <span class=\"string\">&quot;.&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  version <span class=\"operator\">=</span> <span class=\"string\">&quot;2023.04.16&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  source <span class=\"operator\">=</span> <span class=\"string\">&quot;MoNA&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  link <span class=\"operator\">=</span> <span class=\"string\">&quot;https://mona.fiehnlab.ucdavis.edu/&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  creater <span class=\"operator\">=</span> <span class=\"string\">&quot;Hualin Liu&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  email <span class=\"operator\">=</span> <span class=\"string\">&quot;LHL371@126.com&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  rt <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  threads <span class=\"operator\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">save<span class=\"punctuation\">(</span>mona_database_2023.04.16<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"string\">&quot;mona_database_2023.04.16&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>massdatabase<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">data <span class=\"operator\">&lt;-</span> massdatabase<span class=\"operator\">::</span>read_msp_data<span class=\"punctuation\">(</span><span class=\"string\">&quot;MoNA-export-LC-MS_Spectra.msp&quot;</span><span class=\"punctuation\">,</span> source <span class=\"operator\">=</span> <span class=\"string\">&quot;mona&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">massdatabase<span class=\"operator\">::</span>convert_mona2metid<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> data<span class=\"punctuation\">,</span> path <span class=\"operator\">=</span> <span class=\"string\">&quot;.&quot;</span><span class=\"punctuation\">,</span> threads <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://tidymass.github.io/metid/articles/database_construction.html\">Construct in-house MS2 datbase using metid</a></li>\n<li><a href=\"https://tidymass.github.io/metid/articles/public_database_construction.html\">Construct public MS2 datbase using metid</a></li>\n</ul>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"代谢组学","path":"api/tags/代谢组学.json"}]},{"title":"使用xcms3处理和分析LC-MS数据","slug":"使用xcms3处理和分析LC-MS数据","date":"2023-02-06T07:45:39.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/使用xcms3处理和分析LC-MS数据.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_1.png","content":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>本文档描述了xcms（version&gt;&#x3D;3）的LCMS实验的数据导入、探索、预处理和分析。示例和基本工作流程改编自Colin A.Smith的原始LC&#x2F;MS预处理和分析。</p>\n<p>新版本使用<code>XCMSnExpe</code>对象（而不是旧的xcmsSet对象）作为预处理结果的容器。然而，为了支持依赖于xcmsSet对象的包和管道，可以使用as方法（即xset&lt;-as(x, “xcmsSet”)）将XCMSnExpe转换为xcmsSet对象，其中x是XCMSnxp对象。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>require<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">,</span> quietly <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">BiocManager<span class=\"operator\">::</span>install<span class=\"punctuation\">(</span><span class=\"string\">&quot;xcms&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"导入数据\"><a href=\"#导入数据\" class=\"headerlink\" title=\"导入数据\"></a>导入数据</h1><p>xcms支持（AIA&#x2F;ANDI）NetCDF、mzXML和mzML格式的LC&#x2F;MS数据。对于实际数据导入，使用Bioconductor的<a href=\"https://bioconductor.org/packages/3.15/mzR\">mzR</a>。出于演示目的，我们将分析[1]中的数据子集，其研究了敲除脂肪酸酰胺水解酶（FAAH）基因在小鼠中的代谢后果。原始数据文件（NetCDF格式）随<code>faahKO</code>数据包提供。数据集包括来自6只敲除小鼠和6只野生型小鼠脊髓的样本。每个文件包含在正离子模式下以200-600 m&#x2F;z和2500-4500秒采集的质心模式（centroid mode）数据。为了加快处理速度，我们仅分析8个文件，且限定保留时间范围为2500到3500秒。</p>\n<p>下面我们加载所有必需的包，在<code>faahKO</code>包中找到原始CDF文件，并构建描述实验设置的表型（phenodata）数据框。注意，对于实际实验，建议定义一个文件（表），其中包含原始数据文件的文件名以及每个文件的样本描述，作为附加列。然后，可以使用例如<code>read.table</code>导入该文件作为变量pd（而不是在下面的示例中在R中定义），并且可以将文件名传递给下面的<code>readMSData</code>函数，例如<code>files=paste0(MZML_PATH, &quot;/&quot;, pd$MZML_file)</code>，其中<code>MZML_PATH</code>是文件所在目录的路径，<code>&quot;mzMLfile&quot;</code>是phenodata文件中包含文件名那一列的<strong>列名</strong>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>xcms<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>faahKO<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>RColorBrewer<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>pander<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>magrittr<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>pheatmap<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>SummarizedExperiment<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Get the full path to the CDF files</span></span><br><span class=\"line\">cdfs <span class=\"operator\">&lt;-</span> dir<span class=\"punctuation\">(</span>system.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;cdf&quot;</span><span class=\"punctuation\">,</span> package <span class=\"operator\">=</span> <span class=\"string\">&quot;faahKO&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> full.names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> recursive <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span> <span class=\"number\">6</span><span class=\"punctuation\">,</span> <span class=\"number\">7</span><span class=\"punctuation\">,</span> <span class=\"number\">8</span><span class=\"punctuation\">,</span> <span class=\"number\">11</span><span class=\"punctuation\">,</span> <span class=\"number\">12</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\">## Create a phenodata data.frame</span></span><br><span class=\"line\">pd <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>sample_name <span class=\"operator\">=</span> sub<span class=\"punctuation\">(</span>basename<span class=\"punctuation\">(</span>cdfs<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> pattern <span class=\"operator\">=</span> <span class=\"string\">&quot;.CDF&quot;</span><span class=\"punctuation\">,</span> replacement <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span> fixed <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> sample_group <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;KO&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;WT&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> stringsAsFactors <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>随后，我们使用<code>MSnbase</code>包中的<code>readMSData</code>方法将原始数据加载为<code>OnDiskMSnExpe</code>对象。MSnbase为质谱数据处理提供了基础结构和基础设施。此外，MSnbase可用于形心剖面模式（centroid profile-mode）MS数据（参见MSnbase包中的相应介绍）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raw_data <span class=\"operator\">&lt;-</span> readMSData<span class=\"punctuation\">(</span>files <span class=\"operator\">=</span> cdfs<span class=\"punctuation\">,</span> pdata <span class=\"operator\">=</span> new<span class=\"punctuation\">(</span><span class=\"string\">&quot;NAnnotatedDataFrame&quot;</span><span class=\"punctuation\">,</span> pd<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mode <span class=\"operator\">=</span> <span class=\"string\">&quot;onDisk&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>接下来，我们将数据集限制在2500到3500秒的保留时间范围内。这仅仅是为了减少该示例的处理时间。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raw_data <span class=\"operator\">&lt;-</span> filterRt<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2500</span><span class=\"punctuation\">,</span> <span class=\"number\">3500</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>生成的<code>OnDiskMSnExpe</code>对象包含关于spectrum数量、保留时间、测量的总离子电流等的一般信息，但不包含完整的原始数据（即每个测量光谱的m&#x2F;z和强度值）。因此，它的内存占用相当小，是代表大型代谢组学实验的理想对象，同时允许执行简单的质量控制、数据检查和探索以及数据取子集操作。m&#x2F;z和强度值根据需要从原始数据文件中导入，因此原始数据文件的位置在初始数据导入后不应更改。</p>\n<h1 id=\"初始数据检查\"><a href=\"#初始数据检查\" class=\"headerlink\" title=\"初始数据检查\"></a>初始数据检查</h1><p><code>OnDiskMSnExp</code>按spectrum组织MS数据，并提供<code>intensity</code>、<code>mz</code>和<code>rtime</code>方法以访问文件中的原始数据（测量的强度值、相应的m&#x2F;z和保留时间值）。此外，<code>spectra</code>方法可用于返回封装在spectrum对象中的所有数据。下面我们从对象中提取保留时间值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>rtime<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class=\"line\">## 2501.378 2502.943 2504.508 2506.073 2507.638 2509.203</span><br></pre></td></tr></table></figure>\n\n<p>即使实验由多个文件&#x2F;样本组成，所有数据都会作为一维矢量（one-dimensional vectors，rtime的一个数值型向量，一个向量列表for mz和intensity，每个各自都包含一个spectrum的值）返回。<code>fromFile</code>函数返回一个整型向量，提供值到原始文件的映射。下面我们使用<code>fromFile</code>索引按文件组织<code>mz</code>值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mzs <span class=\"operator\">&lt;-</span> mz<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Split the list by file</span></span><br><span class=\"line\">mzs_by_file <span class=\"operator\">&lt;-</span> split<span class=\"punctuation\">(</span>mzs<span class=\"punctuation\">,</span> f <span class=\"operator\">=</span> fromFile<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">length</span><span class=\"punctuation\">(</span>mzs_by_file<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] 8</span><br></pre></td></tr></table></figure>\n\n<p>作为数据的第一次评估，我们在实验中绘制了每个文件的基峰色谱图（base peak chromatogram, BPC）。我们使用<code>chromatogram</code>方法并将<code>aggregationFun</code>设置为<code>&quot;max&quot;</code>，以返回每个spectrum的最大强度，从而根据原始数据创建BPC。为了创建总离子色谱图（total ion chromatogram），我们可以将<code>aggregationFun</code>设置为<code>sum</code>。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Get the base peak chromatograms. This reads data from the files.</span></span><br><span class=\"line\">bpis <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">,</span> aggregationFun <span class=\"operator\">=</span> <span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">## Define colors for the two groups</span></span><br><span class=\"line\">group_colors <span class=\"operator\">&lt;-</span> paste0<span class=\"punctuation\">(</span>brewer.pal<span class=\"punctuation\">(</span><span class=\"number\">3</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Set1&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;60&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>group_colors<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;KO&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;WT&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Plot all chromatograms.</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_1.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>bpis<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>raw_data<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"MChromatograms\"></p>\n<p><code>chromatogram</code>返回了一个<code>MCchromatograms</code>对象，该对象以二维矩阵形式组织各个<code>Chromatogram</code>对象（实际上包含chromatographic数据）：列表示样本，行（可选）表示m&#x2F;z和&#x2F;或保留时间范围。下面我们提取第一个样品的chromatogram，并获取其保留时间和强度值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bpi_1 <span class=\"operator\">&lt;-</span> bpis<span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>rtime<span class=\"punctuation\">(</span>bpi_1<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class=\"line\">## 2501.378 2502.943 2504.508 2506.073 2507.638 2509.203</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>intensity<span class=\"punctuation\">(</span>bpi_1<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class=\"line\">##   43888    43960    43392    42632    42200    42288 </span><br></pre></td></tr></table></figure>\n\n<p><code>chromatogram</code>法还支持从MS数据的m&#x2F;z-rt切片中提取chromatographic数据。在下一节中，我们将使用此方法为选定的峰创建提取的离子色谱图（extracted ion chromatogram, EIC）。</p>\n<p>注意，<code>chromatogram</code>从每个文件读取原始数据以计算chromatogram。另一方面，<code>bpi</code>和<code>tic</code>方法不从原始文件读取任何数据，而是使用输入文件的头定义(header definition)中提供的相应信息（可能与实际数据不同）。</p>\n<p>下面我们创建表示每个文件总离子流分布的箱线图。这些图对于发现有问题或失败的MS运行非常有用。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Get the total ion current by file</span></span><br><span class=\"line\">tc <span class=\"operator\">&lt;-</span> split<span class=\"punctuation\">(</span>tic<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> f <span class=\"operator\">=</span> fromFile<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">boxplot<span class=\"punctuation\">(</span>tc<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>raw_data<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        ylab <span class=\"operator\">=</span> <span class=\"string\">&quot;intensity&quot;</span><span class=\"punctuation\">,</span> main <span class=\"operator\">=</span> <span class=\"string\">&quot;Total ion current&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Distribution of total ion currents per file\"></p>\n<p>此外，我们可以根据样品的BPC的相似性对样品进行聚类。这也有助于在实验中发现潜在的有问题的样本，或获得实验中样本分组的初步概述。由于样本之间的保留时间不完全相同，我们使用<code>bin</code>函数将强度分组在沿保留时间轴的固定时间范围（bins）中。在本示例中，我们使用的bin大小为2秒，默认值为0.5秒。聚类是使用完全连锁分级聚类（complete linkage hierarchical clustering）对合并的BPC的成对相关性进行的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Bin the BPC</span></span><br><span class=\"line\">bpis_bin <span class=\"operator\">&lt;-</span> MSnbase<span class=\"operator\">::</span>bin<span class=\"punctuation\">(</span>bpis<span class=\"punctuation\">,</span> binSize <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Calculate correlation on the log2 transformed base peak intensities</span></span><br><span class=\"line\">cormat <span class=\"operator\">&lt;-</span> cor<span class=\"punctuation\">(</span>log2<span class=\"punctuation\">(</span>do.call<span class=\"punctuation\">(</span>cbind<span class=\"punctuation\">,</span> lapply<span class=\"punctuation\">(</span>bpis_bin<span class=\"punctuation\">,</span> intensity<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">colnames<span class=\"punctuation\">(</span>cormat<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> rownames<span class=\"punctuation\">(</span>cormat<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> raw_data<span class=\"operator\">$</span>sample_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Define which phenodata columns should be highlighted in the plot</span></span><br><span class=\"line\">ann <span class=\"operator\">&lt;-</span> data.frame<span class=\"punctuation\">(</span>group <span class=\"operator\">=</span> raw_data<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">)</span></span><br><span class=\"line\">rownames<span class=\"punctuation\">(</span>ann<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> raw_data<span class=\"operator\">$</span>sample_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Perform the cluster analysis</span></span><br><span class=\"line\">pheatmap<span class=\"punctuation\">(</span>cormat<span class=\"punctuation\">,</span> annotation <span class=\"operator\">=</span> ann<span class=\"punctuation\">,</span> annotation_color <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>group <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Grouping of samples based on similarity of their base peak chromatogram\"></p>\n<p>样本以成对方式聚类，样本索引的KO和WT样本具有最相似的BPC。</p>\n<h1 id=\"色谱峰检测\"><a href=\"#色谱峰检测\" class=\"headerlink\" title=\"色谱峰检测\"></a>色谱峰检测</h1><p>接下来，我们使用<code>centWave</code>算法进行色谱峰检测[2]。然而，在运行峰值检测之前，强烈建议目视检查内参或已知化合物的提取离子色谱图，以评估和调整峰值检测设置，因为默认设置不适用于大多数LCMS实验。centWave的两个最关键的参数是<code>peakwidth</code>（色谱峰宽度的预期范围）和<code>ppm</code>（对应于一个色谱峰的centroids m&#x2F;z值的最大预期偏差；这通常比制造商规定的ppm大得多）参数。为了评估典型的色谱峰宽度，我们绘制了一个峰的EIC。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Define the rt and m/z range of the peak area</span></span><br><span class=\"line\">rtr <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2700</span><span class=\"punctuation\">,</span> <span class=\"number\">2900</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">mzr <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">334.9</span><span class=\"punctuation\">,</span> <span class=\"number\">335.1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">## extract the chromatogram</span></span><br><span class=\"line\">chr_raw <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_raw<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>chr_raw<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Extracted ion chromatogram for one peak\"></p>\n<p>注意，如果在特定扫描（即特定保留时间）中，在各自的mz范围内没有测量到信号，则通过<code>chromatogram</code>法提取的Chromatogram对象包含<code>NA值</code>。反映在上图中为不连续的线。</p>\n<p>上面的峰值宽度约为50秒。<code>peakwidth</code>参数应设置为适应数据集中预期的峰值宽度。对于当前示例数据集，我们将其设置为<code>20,80</code>。</p>\n<p>对于<code>ppm</code>参数，我们提取对应于上述峰值的完整MS数据（强度、保留时间和m&#x2F;z值）。为此，我们首先按保留时间过滤原始对象，然后按m&#x2F;z过滤，最后用<code>type=“XIC”</code>绘制对象以生成下图。我们使用pipe（<code>%&gt;%</code>）命令更好地说明了相应的工作流。还应注意，在这种类型的图中，如果存在色谱峰，则默认显示色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">raw_data <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    filterRt<span class=\"punctuation\">(</span>rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    filterMz<span class=\"punctuation\">(</span>mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\">    plot<span class=\"punctuation\">(</span>type <span class=\"operator\">=</span> <span class=\"string\">&quot;XIC&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_5.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_5.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Visualization of the raw MS data for one peak\"></p>\n<p><strong>图注</strong>：对于每个图：上面板：根据保留时间绘制强度值的色谱图；下面板：m&#x2F;z根据保留时间绘图。各个数据点根据强度进行着色。</p>\n<p>在目前的数据中，m&#x2F;z值实际上没有变化。通常可以看到m&#x2F;z值（下面板）散布在化合物的实际m&#x2F;z值周围。centWave算法的第一步基于连续扫描的m&#x2F;z值的差异定义所谓的感兴趣区域（regions of interest, ROI）。具体而言，如果ROI的m&#x2F;z和平均m&#x2F;z之间的差小于用户定义的ppm参数，则来自连续扫描的m&#x2F;z值被包括在ROI中。因此，ppm的合理选择可以是来自作为色谱峰一部分的相邻扫描&#x2F;光谱（scans&#x2F;spectra）的数据点的最大m&#x2F;z差。建议检查许多化合物（内标或样品中已知存在的化合物）的m&#x2F;z值范围，并根据这些确定centWave的ppm参数。</p>\n<p>注意，我们也可以对提取的离子色谱图（ion chromatogram）进行峰检测。这有助于评估不同的峰值检测设置。只需注意，提取的离子色谱图上的峰值检测不会考虑ppm参数，并且背景信号的估计与完整数据集上的峰值探测不同；因此，<code>snthresh</code>的值将具有不同的结果。下面我们使用<code>findChromPeaks</code>函数对提取的离子色谱图进行峰值检测。提交的参数对象定义将使用的算法，并允许定义此算法的设置。我们使用带有默认设置的centWave算法，<code>snthresh</code>除外。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xchr <span class=\"operator\">&lt;-</span> findChromPeaks<span class=\"punctuation\">(</span>chr_raw<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> CentWaveParam<span class=\"punctuation\">(</span>snthresh <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>我们可以使用<code>chromPeaks</code>函数访问已识别的色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xchr<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##            rt    rtmin    rtmax       into       intb  maxo  sn row column</span><br><span class=\"line\">## [1,] 2781.505 2761.160 2809.674  412134.25  355516.37 16856  13   1      1</span><br><span class=\"line\">## [2,] 2786.199 2764.290 2812.803 1496244.21 1391821.33 58736  20   1      2</span><br><span class=\"line\">## [3,] 2734.556 2714.211 2765.855   21579.37   18449.43   899   4   1      3</span><br><span class=\"line\">## [4,] 2797.154 2775.245 2815.933  159058.78  150289.31  6295  12   1      3</span><br><span class=\"line\">## [5,] 2784.635 2761.160 2808.109   54947.54   37923.53  2715   2   1      4</span><br><span class=\"line\">## [6,] 2859.752 2845.668 2878.532   13895.21   13874.87   905 904   1      4</span><br></pre></td></tr></table></figure>\n\n<p>与<code>chromPeaks</code>矩阵相似，还有一个数据框<code>chromPeakData</code>，允许为每个色谱峰添加任意注释。下面我们提取这个数据框，默认情况下，该数据框只包含识别峰值的MS水平。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chromPeakData<span class=\"punctuation\">(</span>xchr<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## DataFrame with 12 rows and 4 columns</span><br><span class=\"line\">##      ms_level is_filled       row    column</span><br><span class=\"line\">##     &lt;integer&gt; &lt;logical&gt; &lt;integer&gt; &lt;integer&gt;</span><br><span class=\"line\">## 1           1     FALSE         1         1</span><br><span class=\"line\">## 2           1     FALSE         1         2</span><br><span class=\"line\">## 3           1     FALSE         1         3</span><br><span class=\"line\">## 4           1     FALSE         1         3</span><br><span class=\"line\">## 5           1     FALSE         1         4</span><br><span class=\"line\">## ...       ...       ...       ...       ...</span><br><span class=\"line\">## 8           1     FALSE         1         4</span><br><span class=\"line\">## 9           1     FALSE         1         5</span><br><span class=\"line\">## 10          1     FALSE         1         6</span><br><span class=\"line\">## 11          1     FALSE         1         7</span><br><span class=\"line\">## 12          1     FALSE         1         8</span><br></pre></td></tr></table></figure>\n\n<p>接下来，我们在提取的离子色谱图中绘制已识别的色谱峰。我们使用<code>col</code>参数为各个色谱线上色。还可以为识别的峰值指定颜色，<code>peakCol</code>为前景&#x2F;边框颜色，<code>peakBg</code>为背景&#x2F;填充颜色。必须为<code>chromPeaks</code>列出的每个色谱峰提供一种颜色。下面我们定义了一种颜色，以指示样本所在的样本组，并使用峰<code>“sample”</code>列中的样本信息为每个色谱峰分配正确的颜色。更多峰值突出显示选项将在下面进一步描述。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sample_colors <span class=\"operator\">&lt;-</span> group_colors<span class=\"punctuation\">[</span>xchr<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>xchr<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">,</span></span><br><span class=\"line\">     peakBg <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>xchr<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_6.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_6.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Signal for an example peak\"></p>\n<p><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。已识别色谱峰的峰面积用样品组颜色突出显示。</p>\n<p>最后，我们对整个数据集进行色谱峰检测。请注意，我们将参数<code>prefilter</code>设置为<code>c(6, 5000)</code>，将<code>noise</code>设置为<code>5000</code>，以减少该示例的运行时间。使用此设置，我们只考虑峰值检测步骤中值大于5000的信号。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cwp <span class=\"operator\">&lt;-</span> CentWaveParam<span class=\"punctuation\">(</span>peakwidth <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">,</span> <span class=\"number\">80</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> noise <span class=\"operator\">=</span> <span class=\"number\">5000</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                     prefilter <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">6</span><span class=\"punctuation\">,</span> <span class=\"number\">5000</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> findChromPeaks<span class=\"punctuation\">(</span>raw_data<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> cwp<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>结果作为<code>XCMSnExp</code>对象返回，该对象通过存储LC&#x2F;GC-MS预处理结果来扩展<code>OnDiskMSnExp</code>对象。这也意味着，所有设置和过滤数据或访问（原始）数据的方法都是从<code>OnDiskMSnExp</code>对象继承的，因此可以重新使用。还请注意，通过使用参数<code>add＝TRUE</code>调用<code>findChromPeaks</code>，可以对<code>xdata</code>对象执行额外的峰值检测（例如，在MS level＞1的数据上）。</p>\n<p>色谱峰检测的结果可通过<code>chromPeaks</code>方法获得。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##           mz mzmin mzmax       rt    rtmin    rtmax      into      intb  maxo    sn sample</span><br><span class=\"line\">## CP0001 453.2 453.2 453.2 2509.203 2501.378 2527.982 1007409.0 1007380.8 38152 38151      1</span><br><span class=\"line\">## CP0002 236.1 236.1 236.1 2518.593 2501.378 2537.372  253501.0  226896.3 12957    11      1</span><br><span class=\"line\">## CP0003 594.0 594.0 594.0 2601.535 2581.191 2637.529  161042.2  149297.3  7850    13      1</span><br><span class=\"line\">## CP0004 577.0 577.0 577.0 2604.665 2581.191 2626.574  136105.2  129195.5  6215    13      1</span><br><span class=\"line\">## CP0005 369.2 369.2 369.2 2587.451 2556.151 2631.269  483852.3  483777.1  7215  7214      1</span><br><span class=\"line\">## CP0006 369.2 369.2 369.2 2568.671 2557.716 2578.061  144624.8  144602.9  7033  7032      1</span><br></pre></td></tr></table></figure>\n\n<p>返回的<code>matrix</code>提供了每个已识别色谱峰的m&#x2F;z和保留时间范围，以及整合的信号强度（“into”）和最大峰强度（“maxo”）。“sample”列包含确定峰值的对象&#x2F;实验中样本的索引。</p>\n<p>可以使用<code>chromPeakData</code>函数提取每个峰的注释。该数据框还可以用于为每个检测到的峰添加&#x2F;存储任意注释。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chromPeakData<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## DataFrame with 1707 rows and 2 columns</span><br><span class=\"line\">##         ms_level is_filled</span><br><span class=\"line\">##        &lt;integer&gt; &lt;logical&gt;</span><br><span class=\"line\">## CP0001         1     FALSE</span><br><span class=\"line\">## CP0002         1     FALSE</span><br><span class=\"line\">## CP0003         1     FALSE</span><br><span class=\"line\">## CP0004         1     FALSE</span><br><span class=\"line\">## CP0005         1     FALSE</span><br><span class=\"line\">## ...          ...       ...</span><br><span class=\"line\">## CP1703         1     FALSE</span><br><span class=\"line\">## CP1704         1     FALSE</span><br><span class=\"line\">## CP1705         1     FALSE</span><br><span class=\"line\">## CP1706         1     FALSE</span><br><span class=\"line\">## CP1707         1     FALSE</span><br></pre></td></tr></table></figure>\n\n<p>峰检测不会总是完美地工作，从而导致峰检测伪影（artifacts），例如重叠峰或人为分割峰。<code>refineChromPeaks</code>函数允许通过去除未通过特定标准的已识别峰或合并人工拆分的色谱峰来优化峰检测结果。使用参数对象<code>CleanPeaksParam</code>和<code>FilterIntensityParam</code>，可以分别删除保留时间范围或强度低于阈值的峰（有关更多详细信息和示例，请参阅各自的帮助页面）。使用<code>MergeNeighbringPeaksParam</code>可以合并色谱峰。下面我们对峰检测结果进行进一步处理，如果它们之间的信号低于较小峰最大强度的75%，合并每个文件在4秒窗口中重叠的峰值（merging peaks overlapping in a 4 second window per file）。有关设置和方法的详细说明，请参阅<code>MergeNeighborgingPeaksParam</code>帮助页面。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mpp <span class=\"operator\">&lt;-</span> MergeNeighboringPeaksParam<span class=\"punctuation\">(</span>expandRt <span class=\"operator\">=</span> <span class=\"number\">4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata_pp <span class=\"operator\">&lt;-</span> refineChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> mpp<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如下展示了合并峰的示例。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mzr_1 <span class=\"operator\">&lt;-</span> 305.1 <span class=\"operator\">+</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">chr_1 <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>filterFile<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">chr_2 <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>filterFile<span class=\"punctuation\">(</span>xdata_pp<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_7.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_8.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_2<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_7.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_7.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Result from the peak refinement step: 处理前的数据\" style=\"width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_8.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_8.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Result from the peak refinement step: 处理后的数据，峰被合并\" style=\"width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p>对于以上色谱图centWave检测到3个峰（1个峰代表整个区域，两个较小的峰，见上图中的左侧面板）。<code>MergeNeighborgingPeaksParam</code>的峰细化（refinement ）将它们减少为单个峰（上图中的右面板）。注意，这种细化不会合并相邻峰值，因为它们之间的信号低于一定比例（参见下图）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mzr_1 <span class=\"operator\">&lt;-</span> 496.2 <span class=\"operator\">+</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">chr_1 <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>filterFile<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">chr_2 <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>filterFile<span class=\"punctuation\">(</span>xdata_pp<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_9.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_1<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_10.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_2<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_9.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_9.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Result from the peak refinement step: 处理前的数据\" style=\"width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_10.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_10.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Result from the peak refinement step: 处理后的数据，峰未合并\" style=\"width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p>还应注意，可以对提取的离子色谱图进行峰细化。这可以例如用于微调参数的设置。为了说明这一点，我们下面对提取的离子色谱图<code>chr_1</code>进行了峰细化，减少了<code>minProp</code>参数，以强制连接两个峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res <span class=\"operator\">&lt;-</span> refineChromPeaks<span class=\"punctuation\">(</span>chr_1<span class=\"punctuation\">,</span> MergeNeighboringPeaksParam<span class=\"punctuation\">(</span>minProp <span class=\"operator\">=</span> <span class=\"number\">0.05</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">chromPeaks<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         mz mzmin mzmax       rt    rtmin    rtmax     into intb    maxo  sn</span><br><span class=\"line\">## CPM1 496.2 496.2 496.2 3384.012 3294.809 3412.181 45940118   NA 1128960 177</span><br><span class=\"line\">##      sample row column</span><br><span class=\"line\">## CPM1      1   1      1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;cxms_11.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_11.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_11.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"强制连接两个峰\"></p>\n<p>在继续之前，我们用峰细化的结果替换<code>xdata</code>对象。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> xdata_pp</span><br></pre></td></tr></table></figure>\n\n<p>下面我们使用<code>chromPeaks</code>矩阵中的数据来计算每个文件的一些摘要。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">summary_fun <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"built_in\">c</span><span class=\"punctuation\">(</span>peak_count <span class=\"operator\">=</span> nrow<span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> quantile<span class=\"punctuation\">(</span>z<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;rtmax&quot;</span><span class=\"punctuation\">]</span> <span class=\"operator\">-</span> z<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;rtmin&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">T</span> <span class=\"operator\">&lt;-</span> lapply<span class=\"punctuation\">(</span>split.data.frame<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> f <span class=\"operator\">=</span> chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> FUN <span class=\"operator\">=</span> summary_fun<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">T</span> <span class=\"operator\">&lt;-</span> do.call<span class=\"punctuation\">(</span>rbind<span class=\"punctuation\">,</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">rownames<span class=\"punctuation\">(</span><span class=\"built_in\">T</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> basename<span class=\"punctuation\">(</span>fileNames<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pandoc.table<span class=\"punctuation\">(</span><span class=\"built_in\">T</span><span class=\"punctuation\">,</span> caption <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;Summary statistics on identified chromatographic&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot; peaks. Shown are number of identified peaks per&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot; sample and widths/duration of chromatographic &quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;peaks.&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">------------------------------------------------------------------------</span><br><span class=\"line\">    &amp;nbsp;      peak_count   rt.0%   rt.25%   rt.50%   rt.75%   rt.100%</span><br><span class=\"line\">-------------- ------------ ------- -------- -------- -------- ---------</span><br><span class=\"line\"> **ko15.CDF**      400       10.95   34.43    42.25    53.21     319.2</span><br><span class=\"line\"></span><br><span class=\"line\"> **ko16.CDF**      522       10.95   32.86    42.25    53.21     151.8</span><br><span class=\"line\"></span><br><span class=\"line\"> **ko21.CDF**      215       10.95   42.25    50.08    64.95     164.3</span><br><span class=\"line\"></span><br><span class=\"line\"> **ko22.CDF**      239       10.95   37.56    46.95    59.47     147.1</span><br><span class=\"line\"></span><br><span class=\"line\"> **wt15.CDF**      408       10.95    31.3    42.25    53.21     161.2</span><br><span class=\"line\"></span><br><span class=\"line\"> **wt16.CDF**      366       10.95   35.99    45.38    59.47     162.8</span><br><span class=\"line\"></span><br><span class=\"line\"> **wt21.CDF**      228       10.95   35.99    48.51    65.73     172.1</span><br><span class=\"line\"></span><br><span class=\"line\"> **wt22.CDF**      334       10.95   35.99    43.82     57.9     228.5</span><br><span class=\"line\">------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">Table: Summary statistics on identified chromatographic peaks. Shown are number of identified peaks per sample and widths/duration of chromatographic peaks.</span><br></pre></td></tr></table></figure>\n\n<p>我们还可以使用<code>plotChromPeaks</code>函数绘制一个文件的m&#x2F;z——保留时间空间中已识别色谱峰的位置。下面我们绘制了第三个样品的色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_12.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> file <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_12.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_12.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Identified chromatographic peaks in the m/z by retention time space for one sample\"></p>\n<p>为了获得峰检测的全局概览，我们可以沿着保留时间轴绘制每个文件的已识别峰的频率。这允许识别MS运行中的时间段，在该时间段中识别出更多数量的峰，并评估这在文件之间是否一致。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_13.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotChromPeakImage<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_13.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_13.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Frequency of identified chromatographic peaks along the retention time axis\"></p>\n<p><strong>图注</strong>：频率是彩色编码的，较高的频率由黄-白表示。每行显示一个文件的峰值频率。</p>\n<p>接下来，我们重点介绍前面示例峰的已识别色谱峰。在对应于已知峰或内标的峰列表上评估这样的图有助于确保峰检测设置是适当的并且正确地识别预期峰。我们从峰检测结果对象中提取离子色谱图，其中还包含我们可以使用<code>chromPeaks</code>函数提取的该离子的已识别色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chr_ex <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">)</span></span><br><span class=\"line\">chromPeaks<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##         mz mzmin mzmax       rt    rtmin    rtmax      into      intb  maxo sn</span><br><span class=\"line\">## CP0045 335   335   335 2781.505 2761.160 2809.674  412134.3  383167.4 16856 23</span><br><span class=\"line\">## CP0501 335   335   335 2786.199 2764.290 2812.803 1496244.2 1461187.3 58736 72</span><br><span class=\"line\">## CP1041 335   335   335 2797.154 2775.245 2815.933  159058.8  149229.6  6295 13</span><br><span class=\"line\">## CP2002 335   335   335 2786.199 2764.290 2812.803  932645.2  915333.8 35856 66</span><br><span class=\"line\">## CP2391 335   335   335 2792.461 2768.987 2823.760  876585.5  848569.1 27200 36</span><br><span class=\"line\">##        sample row column</span><br><span class=\"line\">## CP0045      1   1      1</span><br><span class=\"line\">## CP0501      2   1      2</span><br><span class=\"line\">## CP1041      3   1      3</span><br><span class=\"line\">## CP2002      6   1      6</span><br><span class=\"line\">## CP2391      7   1      7</span><br></pre></td></tr></table></figure>\n\n<p>我们还可以绘制提取的离子色谱图。已识别的色谱峰将在图中自动突出显示。下面我们用矩形突出显示色谱峰，从峰的最小到最大rt，从0到峰的最大信号。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sample_colors <span class=\"operator\">&lt;-</span> group_colors<span class=\"punctuation\">[</span>chr_ex<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_14.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">,</span> peakType <span class=\"operator\">=</span> <span class=\"string\">&quot;rectangle&quot;</span><span class=\"punctuation\">,</span> peakCol <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> peakBg <span class=\"operator\">=</span> <span class=\"literal\">NA</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_14.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_14.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Signal for an example peak\"></p>\n<p><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。矩形表示每个样品的色谱峰。</p>\n<p>作为上述矩形可视化的替代方案，可以用一个点表示每个峰的顶点位置（将参数<code>type=&quot;point&quot;</code>传递给函数），或通过指定<code>type=&quot;polygon&quot;</code>绘制实际识别的峰。为了完全省略突出显示已识别的峰（例如绘制基本峰色谱图或类似图），可以使用<code>type = &quot;none&quot;</code>”。下面我们使用<code>type=&quot;polygon&quot;</code>填充每个样品中每个已识别色谱峰的峰面积。然而，在这样的图中是否仍然可以识别单个峰取决于从中绘制峰的样本数量。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_15.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>chr_raw<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> lwd <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">     peakBg <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>chr_ex<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_15.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_15.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Signal for an example peak\"><br><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。已识别色谱峰的信号区域用颜色填充。</p>\n<p>注意，我们还可以通过在<code>chromPeaks</code>方法中提供各自的m&#x2F;z和保留时间范围以及<code>mz</code>和<code>rt</code>参数，提取选定区域的已鉴定色谱峰。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pander<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> caption <span class=\"operator\">=</span> paste<span class=\"punctuation\">(</span><span class=\"string\">&quot;Identified chromatographic peaks in a selected &quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;m/z and retention time range.&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-----------------------------------------------------------------------------</span><br><span class=\"line\">   &amp;nbsp;     mz    mzmin   mzmax    rt    rtmin   rtmax    into      intb</span><br><span class=\"line\">------------ ----- ------- ------- ------ ------- ------- --------- ---------</span><br><span class=\"line\"> **CP0045**   335    335     335    2782   2761    2810    412134    383167</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP0501**   335    335     335    2786   2764    2813    1496244   1461187</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP1041**   335    335     335    2797   2775    2816    159059    149230</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP2002**   335    335     335    2786   2764    2813    932645    915334</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP2391**   335    335     335    2792   2769    2824    876586    848569</span><br><span class=\"line\">-----------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">Table: Identified chromatographic peaks in a selected  m/z and retention time range. (continued below)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">----------------------------------</span><br><span class=\"line\">   &amp;nbsp;     maxo    sn   sample</span><br><span class=\"line\">------------ ------- ---- --------</span><br><span class=\"line\"> **CP0045**   16856   23     1</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP0501**   58736   72     2</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP1041**   6295    13     3</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP2002**   35856   66     6</span><br><span class=\"line\"></span><br><span class=\"line\"> **CP2391**   27200   36     7</span><br><span class=\"line\">----------------------------------</span><br></pre></td></tr></table></figure>\n\n<p>最后，我们还绘制了每个样本的峰强度分布。这允许调查样本之间的峰信号是否存在系统差异。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract a list of per-sample peak intensities (in log2 scale)</span></span><br><span class=\"line\">ints <span class=\"operator\">&lt;-</span> split<span class=\"punctuation\">(</span>log2<span class=\"punctuation\">(</span>chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;into&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> f <span class=\"operator\">=</span> chromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_16.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">boxplot<span class=\"punctuation\">(</span>ints<span class=\"punctuation\">,</span> varwidth <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> ylab <span class=\"operator\">=</span> <span class=\"built_in\">expression</span><span class=\"punctuation\">(</span><span class=\"built_in\">log</span><span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"operator\">~</span>intensity<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> main <span class=\"operator\">=</span> <span class=\"string\">&quot;Peak intensities&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">grid<span class=\"punctuation\">(</span>nx <span class=\"operator\">=</span> <span class=\"literal\">NA</span><span class=\"punctuation\">,</span> ny <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_16.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_16.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Peak intensity distribution per sample\"><br>注意，除了上述色谱峰的识别之外，还可以使用<code>manualChromPeaks</code>函数手动定义和添加色谱峰（更多信息请参见<code>?manualChronPeaks</code>帮助页面）。</p>\n<h1 id=\"Alignment\"><a href=\"#Alignment\" class=\"headerlink\" title=\"Alignment\"></a>Alignment</h1><p>分析物在色谱中洗脱的时间可能因样品（甚至化合物）而异。在上一节中作为示例所示的提取离子色谱图中已经可以观察到这种差异。对齐步骤，也称为保留时间校正，旨在通过沿保留时间轴移动信号来调整这一点，以在实验中对齐不同样本之间的信号。</p>\n<p>存在很多的对齐算法（参见[3]），其中一些算法也在xcms中实现。在xcms中执行对齐&#x2F;保留时间校正的方法是<code>adjustRtime</code>，其根据所提供的参数类别使用不同的对齐算法。</p>\n<p>在下面的示例中，我们使用<em>obiwarp</em>方法[4]来对齐样本。我们使用<code>binSize＝0.6</code>，它在mz为0.6的bins中创建扭曲函数（warping functions）。此外，这里建议修改每个实验的设置，并评估保留时间校正是否对齐了内参或已知化合物。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> adjustRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> ObiwarpParam<span class=\"punctuation\">(</span>binSize <span class=\"operator\">=</span> <span class=\"number\">0.6</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><code>adjustRtime</code>，除了计算每个光谱的校正保留时间外，还调整了已鉴定色谱峰的报告保留时间。</p>\n<p>为了提取校正后的保留时间，我们可以使用<code>adjustedRtime</code>方法，或者简单地使用<code>rtime</code>方法，如果存在的话，默认情况下会从<code>XCMSnExp</code>对象返回校正后的保留时间。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract adjusted retention times</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>adjustedRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006</span><br><span class=\"line\">## 2501.378 2502.958 2504.538 2506.118 2507.699 2509.280</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Or simply use the rtime method</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>rtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006</span><br><span class=\"line\">## 2501.378 2502.958 2504.538 2506.118 2507.699 2509.280</span><br></pre></td></tr></table></figure>\n\n<p>原始保留时间可以从包含与<code>rtime(xdata，adjusted=FALSE)</code>对齐的数据的<code>XCMSnExp</code>中提取。</p>\n<p>为了评估对齐的影响，我们利用校正后的数据绘制BPC。此外，我们使用<code>plotAdjustedRtime</code>函数绘制每个样本的校正后保留时间与原始保留时间的差异。对于基峰色谱图，从结果对象中提取已识别的色谱峰是没有意义的。因此，我们在<code>chromatogram</code>调用中使用参数<code>include=&quot;none&quot;</code>，以在返回的对象中不包含色谱峰。请注意，也可以通过在<code>plot</code>调用中设置<code>peakType = &quot;none&quot;</code>来避免绘制它们。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Get the base peak chromatograms.</span></span><br><span class=\"line\">bpis_adj <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> aggregationFun <span class=\"operator\">=</span> <span class=\"string\">&quot;max&quot;</span><span class=\"punctuation\">,</span> include <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mar <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">4.5</span><span class=\"punctuation\">,</span> <span class=\"number\">4.2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_17.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>bpis_adj<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>bpis_adj<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Plot also the difference of adjusted to raw retention time.</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_18.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotAdjustedRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_17.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_17.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Obiwarp aligned data\"><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_18.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_18.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Obiwarp aligned data\"></p>\n<p><strong>图注</strong>：对齐后的基峰色谱图（顶部）和沿保留时间轴的校正保留时间与原始保留时间之间的差异（底部）。</p>\n<p>校正后的保留时间与原始保留时间之间的差异太大，可能表明样品或对齐效果不佳（poorly performing samples or alignment）。</p>\n<p><strong>注意</strong>：<code>XCMSnExp</code>对象保存原始数据以及校正后的保留时间，在大多数情况下，子设置（subsetting）将删除校正后的保持时间。因此，一些情况下用校正后的保留时间代替原始保留时间可能是有用的。这可以通过<code>applyAdjustedRtime</code>完成。</p>\n<p>最后，我们评估了对齐对测试峰的影响。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">## Plot the raw data</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_19.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_raw<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>chr_raw<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Extract the chromatogram from the adjusted object</span></span><br><span class=\"line\">chr_adj <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> rt <span class=\"operator\">=</span> rtr<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_20.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chr_adj<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> group_colors<span class=\"punctuation\">[</span>chr_raw<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> peakType <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_19.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_19.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Example extracted ion chromatogram before (top) and after alignment (bottom)\"><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_20.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_20.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Example extracted ion chromatogram before (top) and after alignment (bottom)\"></p>\n<h2 id=\"Subset-based-alignment\"><a href=\"#Subset-based-alignment\" class=\"headerlink\" title=\"Subset-based alignment\"></a>Subset-based alignment</h2><p>在一些实验中，仅根据样本的子集进行比对可能会有所帮助，例如，如果QC样本定期注射（injected ），或者如果实验包含空白样本。xcms中的对齐方法允许估计样本子集（不包括空白样本的所有样本或在测量运行期间定期注入的质控样本）的保留时间漂移，并使用这些来调整整个数据集。</p>\n<p>参数<code>subset</code>（<code>PeakGroupsParam</code>或<code>ObiwarpParam</code>对象）可用于定义样本子集，整个数据集的对齐将基于该样本子集（例如，子集是QC样本的索引），参数<code>subsetAdjust</code>允许指定调整遗漏样本（left-out samples）的方法。目前有两个选项可用：</p>\n<ul>\n<li><code>subsetAdjust = &quot;previous&quot;</code>：根据先前子集样本（例如QC样本）的对齐结果调整非子集样本的保留时间。如果样本的顺序为A1、B1、B2、A2、B3、B4，A代表QC样本，B代表研究样本，则使用<code>subset = c(1, 4)</code>和<code>subsetAdjust = &quot;previous&quot;</code>将导致所有A样本彼此对齐，而非子集样本B1和B2将根据子集样本A1和B3以及B4对A2样本的对齐结果进行调整。</li>\n<li><code>subsetAdjust = &quot;average&quot;</code>：基于先前和后续子集样本的对齐结果的内插（interpolation）来调整非子集样本的保留时间。在上述示例中，B1将基于子集（QC）样本A1和A2之间的校正保留时间的平均值进行调整。由于在非子集样本B3和B4之后没有子集样本，因此将仅基于A2的对齐结果来校正这些样本。注意，加权平均值用于计算经校正的保留时间平均值，其使用非子集样本与子集样本的索引之差的倒数作为权重。因此，如果我们有类似A1、B1、B2、A2的设置，在校正非子集样本B1时，A1的校正保留时间将比A2的更大，从而使其校正保留时间更接近A1的保留时间，而不是A2的保留时间。请参见下面的示例。</li>\n</ul>\n<p>这两种情况都需要对对象内的样本进行有意义的&#x2F;正确的排序（例如按注入索引排序）。</p>\n<p>以下示例旨在说明这些对齐选项的效果。我们假设faahKO数据集中的样本1、4和7是质控样本（样本池）。因此，我们希望基于这些样本执行对齐，随后基于来自相邻子集（QC）样本的结果的插值来校正剩余的样本（2、3、5、6和8）的保留时间。在初始峰分组后，我们使用峰组法（peak groups method）进行校准，通过子集参数传递我们希望校准所基于的样本的索引，并指定<code>subsetAdjust = &quot;average&quot;</code>以根据相邻子集&#x2F;QC样本的校准结果的插值校正研究样本。</p>\n<p>注意，对于任何子集对齐，所有参数（如<code>minFraction</code>）都是相对于子集的，而不是整个实验！</p>\n<p>要重新执行对齐，我们可以首先使用<code>dropAdjustedRtime</code>函数删除以前的对齐结果。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> dropAdjustedRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Define the experimental layout</span></span><br><span class=\"line\">xdata<span class=\"operator\">$</span>sample_type <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;study&quot;</span></span><br><span class=\"line\">xdata<span class=\"operator\">$</span>sample_type<span class=\"punctuation\">[</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span> <span class=\"number\">7</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;QC&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来，我们必须进行初始对应分析，因为峰群对齐方法通过对齐之前识别的hook峰（存在于大多数&#x2F;所有样品中的色谱峰；下一节将介绍所用算法的详细信息）来校正保留时间。我们在这里使用默认设置，但强烈建议为每个数据集调整参数。<br><code>PeakDensityParam</code>必须定义样本组（即，将单个样本分配给实验中的样本组）。如果实验中没有样本组，则应将每个文件的样本组设置为单个值（例如<code>rep(1, length(fileNames(xdata))</code>）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Initial peak grouping. Use sample_type as grouping variable</span></span><br><span class=\"line\">pdp_subs <span class=\"operator\">&lt;-</span> PeakDensityParam<span class=\"punctuation\">(</span>sampleGroups <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_type<span class=\"punctuation\">,</span></span><br><span class=\"line\">                             minFraction <span class=\"operator\">=</span> <span class=\"number\">0.9</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> groupChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> pdp_subs<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Define subset-alignment options and perform the alignment</span></span><br><span class=\"line\">pgp_subs <span class=\"operator\">&lt;-</span> PeakGroupsParam<span class=\"punctuation\">(</span>minFraction <span class=\"operator\">=</span> <span class=\"number\">0.85</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                            subset <span class=\"operator\">=</span> which<span class=\"punctuation\">(</span>xdata<span class=\"operator\">$</span>sample_type <span class=\"operator\">==</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">                            subsetAdjust <span class=\"operator\">=</span> <span class=\"string\">&quot;average&quot;</span><span class=\"punctuation\">,</span> span <span class=\"operator\">=</span> <span class=\"number\">0.4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> adjustRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> pgp_subs<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>下面，我们绘制了对齐结果，用绿色标记了作为子集一部分的样本，其他样本用灰色标注。这很好地显示了<code>subsetAdjust = &quot;average&quot;</code>的插值是如何工作的：样本2的保留时间是根据子集样本1和4的保留时间进行校正的，但是，给更接近的子集样本1赋予了更大的权重，这导致校正后的样本2的保持时间与样本1的保持时间更相似。另一方面，样本3得到校正，给第二子集样本（4）赋予更多权重。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clrs <span class=\"operator\">&lt;-</span> <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#00000040&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">8</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">clrs<span class=\"punctuation\">[</span>xdata<span class=\"operator\">$</span>sample_type <span class=\"operator\">==</span> <span class=\"string\">&quot;QC&quot;</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#00ce0080&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">par<span class=\"punctuation\">(</span>mfrow <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> mar <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">,</span> <span class=\"number\">4.5</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_21.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> aggregationFun <span class=\"operator\">=</span> <span class=\"string\">&quot;sum&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> clrs<span class=\"punctuation\">,</span> peakType <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_22.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotAdjustedRtime<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> clrs<span class=\"punctuation\">,</span> peakGroupsPch <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> peakGroupsCol <span class=\"operator\">=</span> <span class=\"string\">&quot;#00ce0040&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_21.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_21.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Subset-alignment results with option average\"><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_22.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_22.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Subset-alignment results with option average\"></p>\n<p><strong>图注</strong>：沿保留时间轴校正保留时间与原始保留时间之间的差异。对校准模型进行估算的样本显示为绿色，研究样本显示为灰色。</p>\n<p>选项<code>subsetAdjust = &quot;previous&quot;</code>基于单个子集样本（先前的）校正非子集样本的保留时间，这在大多数情况下导致非子集样本校正后的保留时间与用于校正的子集样本高度相似。</p>\n<h1 id=\"Correspondence\"><a href=\"#Correspondence\" class=\"headerlink\" title=\"Correspondence\"></a>Correspondence</h1><p>代谢组学预处理的最后一步是匹配样本之间（取决于设置，如果样本相邻，也在样本内）检测到的色谱峰的对应关系。在xcms中执行对应的方法是<code>groupChromPeaks</code>。我们将使用峰密度法[5]对色谱峰进行分组。该算法结合了色谱峰，这取决于沿着mz维度的小切片中沿着保留时间轴的峰密度。为了说明这一点，我们绘制了每个样品中具有多个色谱峰的mz切片的色谱图。我们使用0.4的<code>minFraction</code>参数值，因此每个样本组中至少有40%的样本中存在的色谱峰被分组为特征（feature）。样品组分配是使用<code>sampleGroups</code>参数指定的。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Define the mz slice.</span></span><br><span class=\"line\">mzr <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">305.05</span><span class=\"punctuation\">,</span> <span class=\"number\">305.15</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Extract and plot the chromatograms</span></span><br><span class=\"line\">chr_mzr <span class=\"operator\">&lt;-</span> chromatogram<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> mz <span class=\"operator\">=</span> mzr<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">## Define the parameters for the peak density method</span></span><br><span class=\"line\">pdp <span class=\"operator\">&lt;-</span> PeakDensityParam<span class=\"punctuation\">(</span>sampleGroups <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">,</span> minFraction <span class=\"operator\">=</span> <span class=\"number\">0.4</span><span class=\"punctuation\">,</span> bw <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_23.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotChromPeakDensity<span class=\"punctuation\">(</span>chr_mzr<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> pdp<span class=\"punctuation\">,</span> peakBg <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>chr_mzr<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> peakCol <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>chr_mzr<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> peakPch <span class=\"operator\">=</span> <span class=\"number\">16</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_23.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_23.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Example for peak density correspondence\"></p>\n<p><strong>图注</strong>：上图：具有多个色谱峰的mz切片的色谱图。下图：确定保留时间的色谱峰(x轴)和不同bw参数值的实验样品内的指数(y轴)。黑线表示峰密度估计值。峰分组（基于提供的设置）由灰色矩形表示。</p>\n<p>上图中的上部面板显示了每个样品的提取离子色谱图，突出显示了检测到的峰。中间和下部曲线显示了不同样品中每个检测到的峰的保留时间。黑色实线表示检测到的峰沿保留时间的密度分布。组合成特征（峰值组）的峰值用灰色矩形表示。这种类型的可视化非常适合在将示例m&#x2F;z切片应用于完整数据集之前测试它们的对应设置。</p>\n<p>下面，我们将基于定义设置（defined settings）对整个数据集进行对应分析。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Perform the correspondence</span></span><br><span class=\"line\">pdp <span class=\"operator\">&lt;-</span> PeakDensityParam<span class=\"punctuation\">(</span>sampleGroups <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">,</span> minFraction <span class=\"operator\">=</span> <span class=\"number\">0.4</span><span class=\"punctuation\">,</span> bw <span class=\"operator\">=</span> <span class=\"number\">30</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> groupChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> pdp<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>基于xcms的预处理结果可以通过<code>quantify</code>法从<em>SummarizedExperiment</em>包中汇总为<code>SummarizedExperiment</code>对象。该对象将包含作为分析矩阵的特征丰度、作为<code>rowData</code>（即行注释）的特征定义（其m&#x2F;z、保留时间和其他元数据）和作为<code>colData</code>（即列注释）的样本&#x2F;表型信息。所有处理历史记录都将放入对象的元数据中（metadata）。然后，该对象可以用于任何进一步的（与xcms无关的）处理和分析。</p>\n<p>下面我们使用<code>quantify</code>来生成当前分析的结果对象。参数值和任何其他附加参数将传递给<code>featureValues</code>方法，该方法在内部用于创建特征丰度矩阵。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res <span class=\"operator\">&lt;-</span> quantify<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"string\">&quot;into&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>样品注释可以通过<code>colData</code>方法访问。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">colData<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## DataFrame with 8 rows and 3 columns</span><br><span class=\"line\">##          sample_name sample_group sample_type</span><br><span class=\"line\">##          &lt;character&gt;  &lt;character&gt; &lt;character&gt;</span><br><span class=\"line\">## ko15.CDF        ko15           KO          QC</span><br><span class=\"line\">## ko16.CDF        ko16           KO       study</span><br><span class=\"line\">## ko21.CDF        ko21           KO       study</span><br><span class=\"line\">## ko22.CDF        ko22           KO          QC</span><br><span class=\"line\">## wt15.CDF        wt15           WT       study</span><br><span class=\"line\">## wt16.CDF        wt16           WT       study</span><br><span class=\"line\">## wt21.CDF        wt21           WT          QC</span><br><span class=\"line\">## wt22.CDF        wt22           WT       study</span><br></pre></td></tr></table></figure>\n\n<p>通过<code>rowData</code>注释特征：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rowData<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DataFrame with 357 rows and 11 columns</span><br><span class=\"line\">          mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks</span><br><span class=\"line\">      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;</span><br><span class=\"line\">FT001     200.1     200.1     200.1   2902.25   2882.24   2922.27         2</span><br><span class=\"line\">FT002     205.0     205.0     205.0   2789.40   2782.36   2795.94         8</span><br><span class=\"line\">FT003     206.0     206.0     206.0   2788.64   2780.79   2793.78         7</span><br><span class=\"line\">FT004     207.1     207.1     207.1   2718.25   2713.28   2726.63         7</span><br><span class=\"line\">FT005     219.1     219.1     219.1   2518.60   2517.35   2521.09         3</span><br><span class=\"line\">...         ...       ...       ...       ...       ...       ...       ...</span><br><span class=\"line\">FT353    595.25     595.2     595.3   3010.39   2992.58   3014.38         6</span><br><span class=\"line\">FT354    596.20     596.2     596.2   2997.60   2992.58   3002.61         2</span><br><span class=\"line\">FT355    596.30     596.3     596.3   3818.98   3811.68   3835.78         4</span><br><span class=\"line\">FT356    597.40     597.4     597.4   3821.10   3817.96   3825.14         3</span><br><span class=\"line\">FT357    599.30     599.3     599.3   4070.45   4042.10   4123.52         3</span><br><span class=\"line\">             KO        WT            peakidx  ms_level</span><br><span class=\"line\">      &lt;numeric&gt; &lt;numeric&gt;             &lt;list&gt; &lt;integer&gt;</span><br><span class=\"line\">FT001         2         0           463,1180         1</span><br><span class=\"line\">FT002         4         4     47,448,960,...         1</span><br><span class=\"line\">FT003         3         4   32, 435,1164,...         1</span><br><span class=\"line\">FT004         4         3     19,425,943,...         1</span><br><span class=\"line\">FT005         1         2     1140,1379,2382         1</span><br><span class=\"line\">...         ...       ...                ...       ...</span><br><span class=\"line\">FT353         2         3   67, 529,1466,...         1</span><br><span class=\"line\">FT354         0         2          1457,2452         1</span><br><span class=\"line\">FT355         2         2  332,1110,2071,...         1</span><br><span class=\"line\">FT356         1         2      838,2355,2680         1</span><br><span class=\"line\">FT357         1         2      375,1757,2137         1</span><br></pre></td></tr></table></figure>\n\n<p>特征丰度可以通过<code>assay</code>方法获得。还要注意，<code>SummarizedExperiment</code>支持多个这样的分析矩阵。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class=\"line\">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class=\"line\">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class=\"line\">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001         NA</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<p>此外，还可以使用<code>featureDefinitions</code>和<code>featureValues</code>方法分别从对应分析中提取结果，前者返回带有特征定义的数据框(即mz和rt范围，在列peakidx中为每个特征的<code>chromPeaks</code>矩阵中的色谱峰指数)，后者为特征丰度。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract the feature definitions</span></span><br><span class=\"line\">featureDefinitions<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DataFrame with 357 rows and 11 columns</span><br><span class=\"line\">          mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks</span><br><span class=\"line\">      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;</span><br><span class=\"line\">FT001     200.1     200.1     200.1   2902.25   2882.24   2922.27         2</span><br><span class=\"line\">FT002     205.0     205.0     205.0   2789.40   2782.36   2795.94         8</span><br><span class=\"line\">FT003     206.0     206.0     206.0   2788.64   2780.79   2793.78         7</span><br><span class=\"line\">FT004     207.1     207.1     207.1   2718.25   2713.28   2726.63         7</span><br><span class=\"line\">FT005     219.1     219.1     219.1   2518.60   2517.35   2521.09         3</span><br><span class=\"line\">...         ...       ...       ...       ...       ...       ...       ...</span><br><span class=\"line\">FT353    595.25     595.2     595.3   3010.39   2992.58   3014.38         6</span><br><span class=\"line\">FT354    596.20     596.2     596.2   2997.60   2992.58   3002.61         2</span><br><span class=\"line\">FT355    596.30     596.3     596.3   3818.98   3811.68   3835.78         4</span><br><span class=\"line\">FT356    597.40     597.4     597.4   3821.10   3817.96   3825.14         3</span><br><span class=\"line\">FT357    599.30     599.3     599.3   4070.45   4042.10   4123.52         3</span><br><span class=\"line\">             KO        WT            peakidx  ms_level</span><br><span class=\"line\">      &lt;numeric&gt; &lt;numeric&gt;             &lt;list&gt; &lt;integer&gt;</span><br><span class=\"line\">FT001         2         0           463,1180         1</span><br><span class=\"line\">FT002         4         4     47,448,960,...         1</span><br><span class=\"line\">FT003         3         4   32, 435,1164,...         1</span><br><span class=\"line\">FT004         4         3     19,425,943,...         1</span><br><span class=\"line\">FT005         1         2     1140,1379,2382         1</span><br><span class=\"line\">...         ...       ...                ...       ...</span><br><span class=\"line\">FT353         2         3   67, 529,1466,...         1</span><br><span class=\"line\">FT354         0         2          1457,2452         1</span><br><span class=\"line\">FT355         2         2  332,1110,2071,...         1</span><br><span class=\"line\">FT356         1         2      838,2355,2680         1</span><br><span class=\"line\">FT357         1         2      375,1757,2137         1</span><br></pre></td></tr></table></figure>\n\n<p><code>featureValues</code>方法返回一个矩阵，其中行是特征，列是样本。这个矩阵的内容可以使用<code>value</code>参数定义。默认值<code>value = &quot;into&quot;</code>返回一个矩阵，其中包含样本中某个特征对应的峰的整合信号。<code>chromPeaks</code>矩阵的任何列名都可以传递给参数<code>value</code>。下面我们提取每个特征&#x2F;样本的整合峰值强度。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract the into column for each feature.</span></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"string\">&quot;into&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class=\"line\">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class=\"line\">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class=\"line\">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001         NA</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<p>该特征矩阵包含某些样品在特征m&#x2F;z-rt区域未检测到色谱峰（NA值）。虽然在许多情况下，在相应的区域可能确实没有峰信号，但也可能有信号，但峰检测算法未能检测到色谱峰(例如，因为信号太低或噪声太大)。xcms提供<code>fillChromPeaks</code>方法来填充原始文件中这些缺失值的强度数据。填充的峰被添加到chromPeaks矩阵中，并在<code>chromPeakData</code>数据框的<code>“is_filled”</code>列中用<code>TRUE</code>表示。下面我们执行这样的填充。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xdata <span class=\"operator\">&lt;-</span> fillChromPeaks<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> param <span class=\"operator\">=</span> ChromPeakAreaParam<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">head<span class=\"punctuation\">(</span>featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">       ko15.CDF   ko16.CDF   ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001  135315.2  506848.88  111783.48  169955.6  210166.7  141768.0  233086.7</span><br><span class=\"line\">FT002 1924712.0 1757150.96 1383416.72 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.67  164404.50  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.66  343897.76  208002.8  364609.8  360908.9  225332.1</span><br><span class=\"line\">FT005  161425.0   37819.63   82574.72  107348.5  223951.8  135617.6  191928.5</span><br><span class=\"line\">FT006  286221.4  286834.04  164008.97  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001  142142.23</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<p>对于样本中没有检测到峰的特征，该方法提取特征的mz-rt区域中的所有强度，对信号进行整合（integrates），并将填充的峰添加到<code>chromPeaks</code>矩阵中。如果特征的mz-rt区域没有测量&#x2F;可用信号，则不添加峰。对于这些，即使在填写了缺失的峰数据后，也会在<code>featureValues</code>矩阵中报告NA。</p>\n<p>可以使用不同的选项来定义特征的mz-rt区域。使用上面使用的<code>ChromPeakAreaParam()</code>参数对象，使用其所有（检测到的）色谱峰的m&#x2F;z和rt范围定义特征区域：区域中低的m&#x2F;z值定义为特征所有峰的“mzmin”值的下四分位（25%分位数），高m&#x2F;z值为“mzmax”值的上四分位数（75%分位数），低rt值作为“rtmin”值的下四分位（25%分位数），高rt值为“rtmax”值的上四分位数（75%分位数）。这确保了信号是从特定特征区域集成的。</p>\n<p>或者，可以在<code>fillChromPeaks</code>调用中使用<code>FillChromPpeaksParam</code>参数对象，这类似于初始（old）xcms实现的方法。</p>\n<p>下面我们比较填写缺失值前后缺失值的数量。我们可以使用<code>featureValues</code>方法的<code>filled</code>参数来定义是否也应该返回填充的峰值（filled-in peak values）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Missing values before filling in peaks</span></span><br><span class=\"line\">apply<span class=\"punctuation\">(</span>featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> filled <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> MARGIN <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> FUN <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## ko15.CDF ko16.CDF ko21.CDF ko22.CDF wt15.CDF wt16.CDF wt21.CDF wt22.CDF</span><br><span class=\"line\">##       91       93      168      154       95      119      167      123</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Missing values after filling in peaks</span></span><br><span class=\"line\">apply<span class=\"punctuation\">(</span>featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> MARGIN <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span> FUN <span class=\"operator\">=</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span><span class=\"built_in\">is.na</span><span class=\"punctuation\">(</span>z<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## ko15.CDF ko16.CDF ko21.CDF ko22.CDF wt15.CDF wt16.CDF wt21.CDF wt22.CDF</span><br><span class=\"line\">##        5        4        5        5        4        7        6        2</span><br></pre></td></tr></table></figure>\n\n<p>接下来，我们使用<code>featureSummary</code>函数获取每个特征的一般摘要，其中包括找到峰的样本数量或为特征分配了多个峰的样本数。同时指定样本组可以分解每个样本组的汇总统计信息。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>featureSummary<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> group <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      count  perc multi_count multi_perc       rsd KO_count KO_perc</span><br><span class=\"line\">FT001     2  25.0           0          0 0.7039537        2      50</span><br><span class=\"line\">FT002     8 100.0           0          0 0.1936518        4     100</span><br><span class=\"line\">FT003     7  87.5           0          0 0.1717662        3      75</span><br><span class=\"line\">FT004     7  87.5           0          0 0.2609145        4     100</span><br><span class=\"line\">FT005     3  37.5           0          0 0.5385767        1      25</span><br><span class=\"line\">FT006     7  87.5           0          0 0.3016973        3      75</span><br><span class=\"line\">      KO_multi_count KO_multi_perc    KO_rsd WT_count WT_perc WT_multi_count</span><br><span class=\"line\">FT001              0             0 0.7039537        0       0              0</span><br><span class=\"line\">FT002              0             0 0.2178920        4     100              0</span><br><span class=\"line\">FT003              0             0 0.2501505        4     100              0</span><br><span class=\"line\">FT004              0             0 0.2957873        3      75              0</span><br><span class=\"line\">FT005              0             0        NA        2      50              0</span><br><span class=\"line\">FT006              0             0 0.3765933        4     100              0</span><br><span class=\"line\">      WT_multi_perc    WT_rsd</span><br><span class=\"line\">FT001             0        NA</span><br><span class=\"line\">FT002             0 0.1918936</span><br><span class=\"line\">FT003             0 0.1327983</span><br><span class=\"line\">FT004             0 0.2575039</span><br><span class=\"line\">FT005             0 0.6375539</span><br><span class=\"line\">FT006             0 0.1641781</span><br></pre></td></tr></table></figure>\n\n<p>我们可以将特征值矩阵与缺失峰值的填充数据一起添加到我们的<code>SummarizedExperiment</code>对象res中，作为附加矩阵（assay）：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assays<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span><span class=\"operator\">$</span>raw_filled <span class=\"operator\">&lt;-</span> featureValues<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> filled <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>我们现在有两个可用的矩阵（assays），一个具有检测值的矩阵，一个包含检测值和填充值的矩阵，每个都可以通过其名称访问。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assayNames<span class=\"punctuation\">(</span>res<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## [1] &quot;raw&quot;        &quot;raw_filled&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>res<span class=\"punctuation\">,</span> <span class=\"string\">&quot;raw&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class=\"line\">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class=\"line\">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class=\"line\">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001         NA</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>res<span class=\"punctuation\">,</span> <span class=\"string\">&quot;raw_filled&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       ko15.CDF   ko16.CDF   ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class=\"line\">FT001  135315.2  506848.88  111783.48  169955.6  210166.7  141768.0  233086.7</span><br><span class=\"line\">FT002 1924712.0 1757150.96 1383416.72 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class=\"line\">FT003  213659.3  289500.67  164404.50  178285.7  253825.6  241844.4  240606.0</span><br><span class=\"line\">FT004  349011.5  451863.66  343897.76  208002.8  364609.8  360908.9  225332.1</span><br><span class=\"line\">FT005  161425.0   37819.63   82574.72  107348.5  223951.8  135617.6  191928.5</span><br><span class=\"line\">FT006  286221.4  286834.04  164008.97  149097.6  255697.7  311296.8  366441.5</span><br><span class=\"line\">        wt22.CDF</span><br><span class=\"line\">FT001  142142.23</span><br><span class=\"line\">FT002 1354004.93</span><br><span class=\"line\">FT003  185399.47</span><br><span class=\"line\">FT004  221937.53</span><br><span class=\"line\">FT005   84772.92</span><br><span class=\"line\">FT006  271128.02</span><br></pre></td></tr></table></figure>\n\n<p>应始终通过检查提取的离子色谱图（例如已知化合物、内标或一般识别特征）来评估峰检测、比对（alignment）和对应（correspondence）的性能。<code>featureChromatogram</code>函数允许提取<code>featureDefinitions</code>中每个特征的色谱图。返回的<code>MCchromatograms</code>对象包含每个特征（每行包含一个特征的数据）和样本（每列代表一个样本的数据）的离子色谱图。下面我们提取前4个特征的色谱图。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feature_chroms <span class=\"operator\">&lt;-</span> featureChromatograms<span class=\"punctuation\">(</span>xdata<span class=\"punctuation\">,</span> features <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"operator\">:</span><span class=\"number\">4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">feature_chroms</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## XChromatograms with 4 rows and 8 columns</span><br><span class=\"line\">##                    1               2               3               4</span><br><span class=\"line\">##      &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt;</span><br><span class=\"line\">## [1,]        peaks: 0        peaks: 1        peaks: 0        peaks: 1</span><br><span class=\"line\">## [2,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class=\"line\">## [3,]        peaks: 1        peaks: 1        peaks: 0        peaks: 1</span><br><span class=\"line\">## [4,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class=\"line\">##                    5               6               7               8</span><br><span class=\"line\">##      &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt;</span><br><span class=\"line\">## [1,]        peaks: 0        peaks: 0        peaks: 0        peaks: 0</span><br><span class=\"line\">## [2,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class=\"line\">## [3,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class=\"line\">## [4,]        peaks: 1        peaks: 1        peaks: 0        peaks: 1</span><br><span class=\"line\">## phenoData with 3 variables</span><br><span class=\"line\">## featureData with 5 variables</span><br><span class=\"line\">## - - - xcms preprocessing - - -</span><br><span class=\"line\">## Chromatographic peak detection:</span><br><span class=\"line\">##  method: centWave</span><br><span class=\"line\">## Correspondence:</span><br><span class=\"line\">##  method: chromatographic peak density</span><br><span class=\"line\">##  4 feature(s) identified.</span><br></pre></td></tr></table></figure>\n<p>绘制提取的离子色谱图。我们再次使用每个鉴定峰的组颜色来填充该区域。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_24.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>feature_chroms<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">,</span> peakBg <span class=\"operator\">=</span> sample_colors<span class=\"punctuation\">[</span>chromPeaks<span class=\"punctuation\">(</span>feature_chroms<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;sample&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_24.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_24.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Extracted ion chromatograms for features 1 to 4\"><br> 为了访问第二个特征的EIC，我们可以简单地将<code>feature_chros</code>对象取子集。</p>\n <figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> eic_2 <span class=\"operator\">&lt;-</span> feature_chroms<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">]</span></span><br><span class=\"line\">chromPeaks<span class=\"punctuation\">(</span>eic_2<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        mz mzmin mzmax       rt    rtmin    rtmax    into    intb  maxo sn</span><br><span class=\"line\">CP0055 205   205   205 2791.599 2771.048 2815.323 1924712 1850331 84280 64</span><br><span class=\"line\">CP0502 205   205   205 2795.355 2773.257 2820.612 1757151 1711473 68384 69</span><br><span class=\"line\">CP1049 205   205   205 2795.936 2773.877 2821.143 1383417 1334570 47384 54</span><br><span class=\"line\">CP1277 205   205   205 2788.642 2768.195 2812.229 1180288 1126958 48336 32</span><br><span class=\"line\">CP1567 205   205   205 2782.355 2761.949 2805.895 2129885 2054677 93312 44</span><br><span class=\"line\">CP2005 205   205   205 2787.051 2766.690 2812.111 1634342 1566379 67984 53</span><br><span class=\"line\">CP2392 205   205   205 2790.157 2763.587 2821.427 1623589 1531573 49208 28</span><br><span class=\"line\">CP2649 205   205   205 2787.032 2766.714 2812.043 1354005 1299188 55712 35</span><br><span class=\"line\">       sample row column</span><br><span class=\"line\">CP0055      1   1      1</span><br><span class=\"line\">CP0502      2   1      2</span><br><span class=\"line\">CP1049      3   1      3</span><br><span class=\"line\">CP1277      4   1      4</span><br><span class=\"line\">CP1567      5   1      5</span><br><span class=\"line\">CP2005      6   1      6</span><br><span class=\"line\">CP2392      7   1      7</span><br><span class=\"line\">CP2649      8   1      8</span><br></pre></td></tr></table></figure>\n\n<p>最后，我们进行了主成分分析，以评估本实验中样本的分组。注意，我们没有执行任何数据标准化，因此分组可能（也将）受到技术偏见的影响。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## Extract the features and log2 transform them</span></span><br><span class=\"line\">ft_ints <span class=\"operator\">&lt;-</span> log2<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>res<span class=\"punctuation\">,</span> <span class=\"string\">&quot;raw_filled&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Perform the PCA omitting all features with an NA in any of the</span></span><br><span class=\"line\"><span class=\"comment\">## samples. Also, the intensities are mean centered.</span></span><br><span class=\"line\">pc <span class=\"operator\">&lt;-</span> prcomp<span class=\"punctuation\">(</span>t<span class=\"punctuation\">(</span>na.omit<span class=\"punctuation\">(</span>ft_ints<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> center <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Plot the PCA</span></span><br><span class=\"line\">cols <span class=\"operator\">&lt;-</span> group_colors<span class=\"punctuation\">[</span>xdata<span class=\"operator\">$</span>sample_group<span class=\"punctuation\">]</span></span><br><span class=\"line\">pcSummary <span class=\"operator\">&lt;-</span> summary<span class=\"punctuation\">(</span>pc<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">png<span class=\"punctuation\">(</span>file<span class=\"operator\">=</span><span class=\"string\">&quot;xcms_25.png&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plot<span class=\"punctuation\">(</span>pc<span class=\"operator\">$</span>x<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> pc<span class=\"operator\">$</span>x<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> pch <span class=\"operator\">=</span> <span class=\"number\">21</span><span class=\"punctuation\">,</span> main <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span> xlab <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;PC1: &quot;</span><span class=\"punctuation\">,</span> format<span class=\"punctuation\">(</span>pcSummary<span class=\"operator\">$</span>importance<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span> <span class=\"operator\">*</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> digits <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot; % variance&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> ylab <span class=\"operator\">=</span> paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;PC2: &quot;</span><span class=\"punctuation\">,</span> format<span class=\"punctuation\">(</span>pcSummary<span class=\"operator\">$</span>importance<span class=\"punctuation\">[</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">2</span><span class=\"punctuation\">]</span> <span class=\"operator\">*</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span> digits <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot; % variance&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> <span class=\"string\">&quot;darkgrey&quot;</span><span class=\"punctuation\">,</span> bg <span class=\"operator\">=</span> cols<span class=\"punctuation\">,</span> cex <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">grid<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">text<span class=\"punctuation\">(</span>pc<span class=\"operator\">$</span>x<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> pc<span class=\"operator\">$</span>x<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> labels <span class=\"operator\">=</span> xdata<span class=\"operator\">$</span>sample_name<span class=\"punctuation\">,</span> col <span class=\"operator\">=</span> <span class=\"string\">&quot;darkgrey&quot;</span><span class=\"punctuation\">,</span> pos <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span> cex <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dev.off<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_25.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_25.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"PCA for the faahKO data set, un-normalized intensities\"></p>\n<p> 我们可以在PC2上看到KO和WT样品之间的预期分离。在PC1上样本根据其ID进行分离，ID&lt;&#x3D;18的样本与ID&gt;18的样本被分开。这种分离可能是由于技术偏差（例如，在不同的天&#x2F;周进行的测量）或由于所分析小鼠的生物学特性（性别、年龄、产仔等）造成的。</p>\n<h1 id=\"Further-data-processing-and-analysis\"><a href=\"#Further-data-processing-and-analysis\" class=\"headerlink\" title=\"Further data processing and analysis\"></a>Further data processing and analysis</h1><p>标准化特征的信号强度是必需的，但目前xcms还不支持（在不久的将来可能会添加一些方法）。建议将<code>quantify</code>方法返回的<code>SummarizedExperiment</code>用于任何进一步的数据处理，因为这种类型的对象在同一对象中存储特征定义（feature definitions）、样本注释以及特征丰度。为了识别例如具有显著不同强度&#x2F;丰度的特征，建议使用其他R包中提供的功能，例如Bioconductor的<code>limma</code>包。为了支持依赖于旧<code>xcmsSet</code>结果对象的其他包，可以使用<code>xset &lt;- as(x, &quot;xcmsSet&quot;)</code>将新的<code>XCMSnExp</code>对象强制转换为<code>xcmsSet</code>对象，其中x是<code>XCMSnExp</code>对象。</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"http://127.0.0.1:24676/library/xcms/doc/xcms.html\">LCMS data preprocessing and analysis with xcms</a></li>\n</ul>\n<p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，转载请注明出处请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"代谢组","path":"api/tags/代谢组.json"}]},{"title":"代谢组相关软件的安装及使用","slug":"代谢组相关软件的安装及使用","date":"2023-02-02T05:42:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/代谢组相关软件的安装及使用.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"MZconvert\"><a href=\"#MZconvert\" class=\"headerlink\" title=\"MZconvert\"></a><a href=\"http://www.proteowizard.org/download.html\">MZconvert</a></h2><p>下载ProteoWizard项目下的Linux native 64-bit，上传至服务器并解压缩 (会将所有文件解压至当前目录，建议提前单独建一个目录)，解压后的文件即为可执行程序，需将该目录写入环境变量。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar jxvf pwiz-bin-linux-x86_64-gcc7-release-3_0_23032_0cc4840.tar.bz2</span><br></pre></td></tr></table></figure>\n\n<p><strong>注</strong>：在运行<code>msconvert</code>时，如果遇到报错<code>terminate called after throwing an instance of &#39;std::runtime_error&#39;</code>，<code>what():  locale::facet::_S_create_c_locale name not valid</code>，则在终端里运行命令<code>export LC_ALL=C</code>（去除所有本地化的设置，让命令能正确执行），为了永远生效，可将此命令写入环境变量。</p>\n<h2 id=\"MS-DIAL\"><a href=\"#MS-DIAL\" class=\"headerlink\" title=\"MS-DIAL\"></a><a href=\"http://prime.psc.riken.jp/compms/msdial/main.html\">MS-DIAL</a></h2><p>下载Linux最新版，解压后将路径添加至环境变量即可，有可能需要为主程序（MsdialConsoleApp）添加可执行权限（chmod +x MsdialConsoleApp）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -c http://prime.psc.riken.jp/compms/msdial/download/repository/Linux/MSDIAL%20ver.4.9.221218%20Linuxx64.zip</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"代谢组","path":"api/tags/代谢组.json"}]},{"title":"多种方法批量下载NCBI基因组","slug":"多种方法批量下载NCBI基因组","date":"2022-07-10T02:04:23.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/多种方法批量下载NCBI基因组.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_1.png","content":"<h1 id=\"下载有summary的基因组\"><a href=\"#下载有summary的基因组\" class=\"headerlink\" title=\"下载有summary的基因组\"></a>下载有summary的基因组</h1><ul>\n<li><p>在NCBI基因组数据库搜索物种</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"搜索物种\"></p>\n</li>\n<li><p>下载元数据</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载TSV元数据\"></p>\n</li>\n<li><p>获取下载链接<br>打开下载的元数据文件<code>prokaryotes.csv</code>（该文件也可以直接去NCBI FTP中下载，一般在各物种的目录下，名字为<code>assembly_summary.txt</code>，其格式与<code>prokaryotes.csv</code>略有不同，但都含有链接），将倒数第二列或最后一列的链接拷贝到TXT文本文档中，在每一行的最后加上要下载的文件名和数据类型：</p>\n<ul>\n<li>基因组：文件名 _genomic.fna.gz</li>\n<li>蛋白序列：文件名 _protein.faa.gz</li>\n<li>CDs序列：文件名 _cds_from_genomic.fna.gz </li>\n<li>…</li>\n</ul>\n<p>可参考下图中的示例进行命名：<br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.5.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.5.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"NCBI文件命名示例\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"获取下载链接\"></p>\n<p>建议用正则表达式替换（依赖EditPlus或其他具有正则表达式功能的文本编辑器），以基因组序列为例：</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"正则表达式批量替换获取基因组下载链接\"><br><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_5.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_5.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"替换后获得的基因组完整下载链接\"></p>\n</li>\n<li><p>开始下载<br>将获得的完整链接保存到名字为<code>link.txt</code>的文本文档中，在LINUX终端中运行<code>for link in $(cat link.txt); do wget -c $link; done</code>即可批量下载基因组到<code>genome</code>目录中。若不慎在行末引入了看不见的换行符，可以用命令<code>perl -pe &#39;s/[\\n\\r]+//g&#39; link.txt &gt; link2.txt</code>进行删除。再用<code>for link in $(cat link2.txt); do wget -c $link; done</code>下载。</p>\n</li>\n</ul>\n<h1 id=\"SRA数据下载\"><a href=\"#SRA数据下载\" class=\"headerlink\" title=\"SRA数据下载\"></a>SRA数据下载</h1><ul>\n<li><p>下载<a href=\"https://github.com/ncbi/sra-tools/wiki/01.-Downloading-SRA-Toolkit\">SRA Toolkit</a></p>\n<p>根据自己的系统选择合适的版本进行下载，并将软件包中<code>bin</code>的绝对路径或相对路径加入到环境变量中，以便可以在终端中直接调用。</p>\n</li>\n<li><p>设置默认下载目录</p>\n<p>如果不设置，默认会将基因组下载到家目录下，通过在终端里输入<code>vdb-config -i</code>命令配置下载目录，即下载到当前目录下。</p>\n<p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_6.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_6.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"设置SRA Toolkit默认下载文件存放位置\"></p>\n<p>  <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_7.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_7.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"设置SRA Toolkit默认下载文件存放位置\"></p>\n</li>\n<li><p>准备包含<code>SRA号</code>的列表文件，每一行含有一个编号，文件命名为<code>SRA.list</code>。</p>\n</li>\n<li><p>开始下载<br>将列表文件与脚本<code>downloadSRA.pl</code>放在同一目录下，在终端中运行<code>perl downloadSRA.pl</code>。</p>\n</li>\n</ul>\n<h1 id=\"利用FTP软件根据物种下载基因组\"><a href=\"#利用FTP软件根据物种下载基因组\" class=\"headerlink\" title=\"利用FTP软件根据物种下载基因组\"></a>利用FTP软件根据物种下载基因组</h1><p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_8.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_8.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过FileZilla批量下载基因组\"><br> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_9.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_9.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过FileZilla批量下载基因组\"><br>    在右侧的列表中选中所有目录拖拽到本地即可开始下载。</p>\n<h1 id=\"根据WGA-assession-number下载基因组\"><a href=\"#根据WGA-assession-number下载基因组\" class=\"headerlink\" title=\"根据WGA assession number下载基因组\"></a>根据WGA assession number下载基因组</h1><ul>\n<li><p>安装<a href=\"https://github.com/kblin/ncbi-genome-download\">ncbi-genome-download</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install -c bioconda ncbi-genome-download</span><br></pre></td></tr></table></figure></li>\n<li><p>准备WGA assession number列表文件</p>\n</li>\n<li><p>开始下载<br>终端里输入如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ncbi-genome-download --assembly-accessions GCA.txt --output-folder 6_3 bacteria --section genbank --formats fasta</span><br></pre></td></tr></table></figure>\n<p>其中<code>GCA.txt</code>为包含assession number的列表文件，每行一个assession number。<br>该软件的问题在于，需要<code>科学上网</code>，所以很多时候会掉链子。</p>\n</li>\n</ul>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“213”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"NCBI","path":"api/tags/NCBI.json"},{"name":"下载","path":"api/tags/下载.json"}]},{"title":"利用PGCGAP根据ids提取序列信息","slug":"利用PGCGAP根据ids提取序列信息","date":"2022-04-15T13:57:11.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/利用PGCGAP根据ids提取序列信息.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h1><p>假设有一个fasta格式的序列文件<code>SRR9620252.faa</code>，我们想要提取其中的一些序列到一个新的文件中，我们拥有这些序列的id （假设这些id存放在文件<code>ids.txt</code>中）。常规操作的话，可以复制id，在fasta文件中打开搜索，粘贴id，点击查找，复制找到的序列，粘贴到新的文件中（假设为<code>Seqout.fasta</code>）。假如你只找一条序列，1 min之内可以完成，假如你要找100条序列，1 h可能没了。而用PGCGAP可以在1 min之内完成，剩下的59 min可以喝喝茶。</p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><h2 id=\"PGCGAP安装\"><a href=\"#PGCGAP安装\" class=\"headerlink\" title=\"PGCGAP安装\"></a>PGCGAP安装</h2><p>参考<a href=\"https://liaochenlanruo.fun/pgcgap/\">官网</a>，需要版本v1.0.35及以上。</p>\n<h2 id=\"开始提取\"><a href=\"#开始提取\" class=\"headerlink\" title=\"开始提取\"></a>开始提取</h2><p>在终端里打开PGCGAP的conda安装环境，并运行如下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ids.txt中含有要提取序列的id，可以是一列或者多列，如果为多列，需要用空格或者制表符来分隔列与列，id本身是不能带空格的。</span><br><span class=\"line\"></span><br><span class=\"line\">pgcgap --ACC --id2seq --ids ids.txt --seqin SRR9620252.faa --seqout Seqout.fasta</span><br></pre></td></tr></table></figure>\n\n<p>提取的文件保存在<code>Seqout.fasta</code>中。</p>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><p>Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. Protocol exchange, 2022. DOI: 10.21203&#x2F;rs.2.21224&#x2F;v6</p>\n<h1 id=\"示例获取\"><a href=\"#示例获取\" class=\"headerlink\" title=\"示例获取\"></a>示例获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e6ae”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用PGCGAP，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite PGCGAP. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"序列处理","path":"api/tags/序列处理.json"}]},{"title":"PGCGAP - the Prokaryotic Genomics and Comparative Genomics Analysis Pipeline v1.0.33","slug":"PGCGAP-v1.0.33","date":"2022-03-15T11:14:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/PGCGAP-v1.0.33.json","excerpt":null,"keywords":null,"cover":"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green","content":"<table>\n<thead>\n<tr>\n<th><img src=\"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></th>\n<th><a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/liaochenlanruo/pgcgap\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/github/license/liaochenlanruo/pgcgap\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"License\"></a></th>\n<th><a href=\"https://anaconda.org/bioconda/pgcgap\"><img src=\"https://anaconda.org/bioconda/pgcgap/badges/version.svg\" class=\"lazyload placeholder\" data-srcset=\"https://anaconda.org/bioconda/pgcgap/badges/version.svg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"GitHubversion\"></a></th>\n<th><img src=\"https://img.shields.io/conda/dn/bioconda/pgcgap.svg?style=flat\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/conda/dn/bioconda/pgcgap.svg?style=flat\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></th>\n<th><a href=\"http://bioconda.github.io/recipes/pgcgap/README.html\"><img src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"install with bioconda\"></a></th>\n<th><a href=\"//shang.qq.com/wpa/qunwpa?idkey=fd4637eecd73bf0a5a8caa274843a07afdf1fbbc40a86630df5d4b029749cc7b\"><img src=\"https://pub.idqqimg.com/wpa/images/group.png\" class=\"lazyload placeholder\" data-srcset=\"https://pub.idqqimg.com/wpa/images/group.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅\" title=\"945751012\"></a></th>\n</tr>\n</thead>\n</table>\n<p><center>\n<script type=\"text/javascript\" src=\"//rf.revolvermaps.com/0/0/4.js?i=0ett3z77b0x&amp;m=0&amp;h=128&amp;c=ff0000&amp;r=0\" async=\"async\"></script>\n&nbsp;&nbsp;&nbsp;&nbsp;\n<script type=\"text/javascript\" src=\"//rf.revolvermaps.com/0/0/0.js?i=0ett3z77b0x&amp;d=3&amp;p=1&amp;b=1&amp;w=293&amp;g=2&amp;f=arial&amp;fs=13&amp;r=0&amp;c0=ff8a00&amp;c1=0006ff&amp;c2=000000&amp;ic0=0&amp;ic1=0\" async=\"async\"></script>\n</center></p>\n\n<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/post/848f.html\">中文说明</a></p>\n<pre><code>      ____       ____      ____     ____       _        ____    \n    U|  _&quot;\\ u U /&quot;___|u U /&quot;___| U /&quot;___|u U  /&quot;\\  u  U|  _&quot;\\ u \n    \\| |_) |/ \\| |  _ / \\| | u   \\| |  _ /  \\/ _ \\/   \\| |_) |/ \n     |  __/    | |_| |   | |/__   | |_| |   / ___ \\    |  __/   \n     |_|        \\____|    \\____|   \\____|  /_/   \\_\\   |_|      \n     ||&gt;&gt;_      _)(|_    _// \\\\    _)(|_    \\\\    &gt;&gt;   ||&gt;&gt;_    \n    (__)__)    (__)__)  (__)(__)  (__)__)  (__)  (__) (__)__)   \n</code></pre>\n<h2 id=\"Multi-version-instructions-This-one-for-the-latest-version\"><a href=\"#Multi-version-instructions-This-one-for-the-latest-version\" class=\"headerlink\" title=\"Multi-version instructions (This one for the latest version)\"></a>Multi-version instructions (This one for the latest version)</h2><hr>\n<ul>\n<li><a href=\"./index-v1.0.29.html\">Instructions for V1.0.29</a></li>\n<li><a href=\"./index-v1.0.32.html\">Instructions for V1.0.32</a></li>\n<li><a href=\"./index.html\">Instructions for the latest version</a></li>\n</ul>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><hr>\n<p>PGCGAP is a pipeline for prokaryotic comparative genomics analysis. It can take the pair-end reads, ONT reads or PacBio reads as input. In addition to genome assembly, gene prediction and annotation, it can also get common comparative genomics analysis results such as phylogenetic trees of single-core proteins and core SNPs, pan-genome, whole-genome Average Nucleotide Identity (ANI), orthogroups and orthologs, COG annotations, substitutions (SNPs) and insertions&#x2F;deletions (indels), and antimicrobial and virulence genes mining with only one line of commands. <strong><u>To follow this document, please upgrade PGCGAP to version v1.0.33 or later</u></strong>.</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><hr>\n<p>The software was tested successfully on Windows WSL, Linux x64 platform, and macOS. Because this software relies on a large number of other software, so it is recommended to install with <strong><a href=\"https://bioconda.github.io/index.html\">Bioconda</a></strong>.</p>\n<p><strong>Step1: Install PGCGAP</strong></p>\n<ul>\n<li><p>Method 1: use mamba to install PGCGAP</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install mamba first</span></span><br><span class=\"line\">conda install mamba</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Usually specify the latest version of PGCGAP (v1.0.33 is coming soon)</span></span><br><span class=\"line\">mamba create -n pgcgap pgcgap=1.0.33</span><br></pre></td></tr></table></figure>\n\n<p>  <strong>Notice</strong>: <u>I had submitted the latest version (v1.0.33) of the Bioconda recipe for PGCGAP for a test. However, Bioconda moved to a new test server which allocated very little memory, causing the test to fail. As a result, I had to remove some dependencies from the Bioconda recipe to pass the test, so after installing the main program of PGCGAP v1.0.33 through Conda, users still need to install some dependencies (Installing V1.0.32 and previous versions does not require an additional dependency package installation). This situation will be resolved soon with the release of Conda v4.12 as Bioconda will switch to the less memory-consuming Mamba for recipe testing. After that, users will still be able to install PGCGAP and its dependencies just using the above commands.</u> However, at present, after the previous step, the user needs to execute the following command to complete the installation of the dependency packages:</p>\n<p>  当安装PGCGAP v1.0.33的时候还需要单独安装依赖包，这是由于Bioconda换了新的测试服务器。我在提交最新版本的recipe并进行测试的时候，服务器仅分配了极小的内存，导致测试失败。因此，我不得不从Bioconda recipe中移除一些依赖包以通过测试。所以，在通过conda安装完PGCGAP的主程序后，还需要安装一些依赖包。这种状况将在不久的将来得到解决，即随着conda v4.12释放以后，Bioconda将转用耗费内存更小的mamba来进行recipe的测试，此后，用户仍可通过上述命令完成PGCGAP和其依赖包的安装。目前，在执行完上一步操作之后，用户还需要执行下面这条命令完成依赖包的安装（当然，安装v1.0.32及以前的版本不需要单独再安装依赖包了）：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate pgcgap</span><br><span class=\"line\">mamba install -y abricate canu roary orthofinder fastani fastp snippy sickle-trim unicycler perl-file-copy-recursive prokka pal2nal mash trimal</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Method 2: use &quot;environment.yaml&quot;. Run the following commands to download the <a href=\"https://bcam.hzau.edu.cn/PGCGAP/conda/pgcgap_latest_env.yml\">latest environmental file</a> and install PGCGAP:</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install mamba first</span></span><br><span class=\"line\">conda install mamba</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download pgcgap_latest_env.yml</span></span><br><span class=\"line\">wget --no-check-certificate https://bcam.hzau.edu.cn/PGCGAP/conda/pgcgap_latest_env.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class=\"line\">mamba <span class=\"built_in\">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>Step2: Setup COG database</strong> (Users should execute this after the first installation of pgcgap)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate pgcgap</span><br><span class=\"line\">pgcgap --setup-COGdb</span><br><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure>\n\n<p>Users with <a href=\"https://hub.docker.com/\">docker container</a> installed have another choice to install PGCGAP.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n\n<p>(see <a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">pgcgap&#x2F;tags</a> for valid values for &lt;tag&gt;)</p>\n<h2 id=\"Required-dependencies\"><a href=\"#Required-dependencies\" class=\"headerlink\" title=\"Required dependencies\"></a>Required dependencies</h2><hr>\n<ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org/\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><hr>\n<ul>\n<li><p><strong>Print the help messages:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Check for update:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --check-update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>General usage:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap [modules] [options]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Show parameters for each module:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Show examples of each module:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap Examples</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Setup COG database:</strong> (Users should execute this after the first installation of pgcgap)</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --setup-COGdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Modules:</strong></p>\n<ul>\n<li><p><strong>[--All]</strong> Perform Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH, AntiRes and pCOG functions with one command</p>\n</li>\n<li><p><strong>[--Assemble]</strong> Assemble reads (short, long or hybrid) into contigs</p>\n</li>\n<li><p><strong>[--Annotate]</strong> Genome annotation</p>\n</li>\n<li><p><strong>[--CoreTree]</strong> Construct single-core proteins tree and SNPs tree of single-copy core genes</p>\n</li>\n<li><p><strong>[--Pan]</strong> Run &quot;roary&quot; pan-genome pipeline with gff3 files, and construct a phylogenetic tree with the sing-copy core proteins called by roary</p>\n</li>\n<li><p><strong>[--OrthoF]</strong> Identify orthologous protein sequence families with &quot;OrthoFinder&quot;, and construct a phylogenetic tree with the sing-copy core Orthologues</p>\n</li>\n<li><p><strong>[--ANI]</strong> Compute whole-genome Average Nucleotide Identity ( ANI )</p>\n</li>\n<li><p><strong>[--MASH]</strong> Genome and metagenome similarity estimation using MinHash</p>\n</li>\n<li><p><strong>[--pCOG]</strong> Run COG annotation for each strain (*.faa), and generate a table containing the relative abundance of each flag for all strains</p>\n</li>\n<li><p><strong>[--VAR]</strong> Rapid haploid variant calling and core genome alignment with &quot;Snippy&quot;</p>\n</li>\n<li><p><strong>[--AntiRes]</strong> Screening of contigs for antimicrobial and virulence genes</p>\n</li>\n<li><p><strong>[--STREE]</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n</li>\n<li><p><strong>[--ACC]</strong> Other useful gadgets (now includes &#39;Assess&#39; for filtering short sequences in the genome and assessing the statistics of the genome only)</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Global Options:</strong></p>\n<ul>\n<li><p><strong>[--strain_num (INT)]</strong> [Required by &quot;--All&quot;, &quot;--CoreTree&quot;, &quot;--Pan&quot;, &quot;--VAR&quot; and &quot;--pCOG&quot;] The total number of strains used for analysis, not including the reference genome</p>\n</li>\n<li><p><strong>[--ReadsPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] Reads of all strains as file paths ( Default .&#x2F;Reads&#x2F;Illumina )</p>\n</li>\n<li><p><strong>[--scafPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot;, &quot;--MASH&quot; and &quot;--AntiRes&quot;] Path for contigs&#x2F;scaffolds (Default &quot;Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina&quot;)</p>\n</li>\n<li><p><strong>[--AAsPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Pan&quot;, &quot;--OrthoF&quot; and &quot;--pCOG&quot;] Amino acids of all strains as fasta file paths, ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;AAs&quot; )</p>\n</li>\n<li><p><strong>[--reads1 (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] The suffix name of reads 1 ( for example: if the name of reads 1 is &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot;, &quot;YBT-1520&quot; is the strain same, so the suffix name should be &quot;.R1.clean.fastq.gz&quot;)</p>\n</li>\n<li><p><strong>[--reads2 (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] The suffix name of reads 2( for example: if the name of reads 2 is &quot;YBT-1520_2.fq&quot;, the suffix name should be &quot;_2.fq&quot; )</p>\n</li>\n<li><p><strong>[--Scaf_suffix (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot; &quot;--MASH&quot;, &quot;--ANI&quot; and &quot;--AntiRes&quot;] The suffix of scaffolds or genome files. This is an important parameter that must be set (Default -8.fa)</p>\n</li>\n<li><p><strong>[--filter_length (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--Assess&quot;]&gt; Sequences shorter than the &#39;filter_length&#39; will be removed from the assembled genomes. ( Default 200 )</p>\n</li>\n<li><p><strong>[--codon (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Annotate&quot;, &quot;--CoreTree&quot; and &quot;--Pan&quot;] Translation table ( Default 11 )</p>\n<pre><code>- 1 Universal code\n- 2 Vertebrate mitochondrial code\n- 3 Yeast mitochondrial code\n- 4 Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma/Spiroplasma code\n- 5 Invertebrate mitochondrial\n- 6 Ciliate, Dasycladacean and Hexamita nuclear code\n- 9 Echinoderm and Flatworm mitochondrial code\n- 10 Euplotid nuclear code\n- 11 Bacterial, archaeal and plant plastid code ( Default )\n- 12 Alternative yeast nuclear code\n- 13 Ascidian mitochondrial code\n- 14 Alternative flatworm mitochondrial code\n- 15 Blepharisma nuclear code\n- 16 Chlorophycean mitochondrial code\n- 21 Trematode mitochondrial code\n- 22 Scenedesmus obliquus mitochondrial code\n- 23 Thraustochytrium mitochondrial code\n</code></pre>\n</li>\n<li><p><strong>[--suffix_len (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] <strong><u>(Strongly recommended)</u></strong> The suffix length of the reads, that is the length of your reads name minus the length of your strain name. For example the --suffix_len of &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot; is 26 ( &quot;YBT-1520&quot; is the strain name ) ( Default 0 )</p>\n</li>\n<li><p><strong>[--fasttree]</strong> [Can be used with &quot;CoreTree&quot;, &quot;Pan&quot; and &quot;OrthoF&quot;] Use FastTree to construct phylogenetic tree quickly instead of IQ-TREE</p>\n</li>\n<li><p><strong>[--bsnum (INT)]</strong> [Required by &quot;CoreTree&quot;, &quot;Pan&quot;, &quot;OrthoF&quot;, &quot;STREE&quot;, and &quot;VAR&quot;] Replicates for bootstrap of IQ-TREE ( Default 500 )</p>\n</li>\n<li><p><strong>[--fastboot (INT)]</strong> [Required by &quot;CoreTree&quot;, &quot;Pan&quot;, &quot;OrthoF&quot;, &quot;STREE&quot;, and &quot;VAR&quot;] Replicates for ultrafast bootstrap of IQ-TREE. ( must &gt;&#x3D; 1000, Default 1000 )</p>\n</li>\n<li><p><strong>[--logs (STRING)]</strong> Name of the log file ( Default Logs.txt )</p>\n</li>\n<li><p><strong>[--threads (INT)]</strong> Number of threads to be used ( Default 4 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Local Options:</strong></p>\n<ul>\n<li><p><strong>--Assemble</strong></p>\n<ul>\n<li><p><strong>[--platform (STRING)]</strong> [Required] Sequencing Platform, &quot;illumina&quot;, &quot;pacbio&quot;, &quot;oxford&quot; and &quot;hybrid&quot; available ( Default illumina )</p>\n</li>\n<li><p><strong>[--assembler (STRING)]</strong> [Required] Software used for illumina reads assembly, &quot;abyss&quot; and &quot;spades&quot; available ( Default auto )</p>\n</li>\n<li><p><strong>[--kmmer (INT)]</strong> [Required] k-mer size for genome assembly of Illumina data ( Default 81 )</p>\n</li>\n<li><p><strong>[--genomeSize (STRING)]</strong> [Required] An estimate of the size of the genome. Common suffixes are allowed, for example, 3.7m or 2.8g. Needed by PacBio data and ONT data ( Default Unset )</p>\n</li>\n<li><p><strong>[--short1 (STRING)]</strong> [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--short2 (STRING)]</strong> [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--long (STRING)]</strong> [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--hout (STRING)]</strong> [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Annotate</strong></p>\n<ul>\n<li><p><strong>[--genus (STRING)]</strong> Genus name of your strain ( Default &quot;NA&quot; )</p>\n</li>\n<li><p><strong>[--species (STRING)]</strong> Species name of your strain ( Default &quot;NA&quot;)\\</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--CoreTree</strong></p>\n<ul>\n<li><p><strong>[--CDsPath (PATH)]</strong> [Required] CDs of all strains as fasta file paths ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;CDs&quot; ), if set to &quot;NO&quot;, the SNPs of single-copy core genes will not be called</p>\n</li>\n<li><p><strong>[-c (FLOAT)]</strong> Sequence identity threshold, ( Default 0.5)</p>\n</li>\n<li><p><strong>[-n (INT)]</strong> Word_length, -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li><p><strong>[-G (INT)]</strong> Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li><p><strong>[-t (INT)]</strong> Tolerance for redundance ( Default 0 )</p>\n</li>\n<li><p><strong>[-aL (FLOAT)]</strong> Alignment coverage for the longer sequence. If set to 0.9, the alignment must cover 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li><p><strong>[-aS (FLOAT)]</strong> Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li><p><strong>[-g (INT)]</strong> If set to 0, a sequence is clustered to the first cluster that meets the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meets the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li><p><strong>[-d (INT)]</strong> length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Pan</strong></p>\n<ul>\n<li><strong>[--GffPath (PATH)]</strong> [Required] Gff files of all strains as paths ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;GFF&quot; )</li>\n<li><strong>[--PanTree]</strong> Construct a phylogenetic tree of single-copy core proteins called by roary</li>\n<li><strong>[--identi (INT)]</strong> Minimum percentage identity for blastp ( Default 95 )</li>\n</ul>\n</li>\n<li><p><strong>--OrthoF</strong></p>\n<ul>\n<li><strong>[--Sprogram (STRING)]</strong> Sequence search program, Options: blast, mmseqs, blast_gz, diamond ( Default diamond)</li>\n</ul>\n</li>\n<li><p><strong>--ANI</strong></p>\n<ul>\n<li><p><strong>[--queryL (FILE)]</strong> [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--refL (FILE)]</strong> [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--VAR</strong></p>\n<ul>\n<li><p><strong>[--refgbk (FILE)]</strong> [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: &quot;&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk&quot;</p>\n</li>\n<li><p><strong>[--qualtype (STRING)]</strong> [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p>\n</li>\n<li><p><strong>[--qual (INT)]</strong> Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li><p><strong>[--length (INT)]</strong> Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li><p><strong>[--mincov (INT)]</strong> The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li><p><strong>[--minfrac (FLOAT)]</strong> The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li><p><strong>[--minqual (INT)]</strong> The minimum VCF variant call &quot;quality&quot; ( Default 100 )</p>\n</li>\n<li><p><strong>[--ram (INT)]</strong> Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--AntiRes</strong></p>\n<ul>\n<li><p><strong>[--db (STRING)]</strong> [Required] The database to use, options: all, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, <a href=\"https://github.com/phac-nml/ecoli_vf\">ecoli_vf</a>, <a href=\"https://megares.meglab.org/\">megares</a>, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default all )</p>\n</li>\n<li><p><strong>[--identity (INT)]</strong> [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li><p><strong>[--coverage (INT)]</strong> [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--STREE</strong></p>\n<ul>\n<li><p><strong>[--seqfile (STRING)]</strong> [Required] Path of the sequence file for analysis.</p>\n</li>\n<li><p><strong>[--seqtype (INT)]</strong> [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--pCOG</strong></p>\n<ul>\n<li><p><strong>[--evalue (FLOAT)]</strong> [Required] Maximum e-value to report alignments, ( Default 1e-3 )</p>\n</li>\n<li><p><strong>[--id (INT)]</strong> [Required] Minimum identity% to report an alignment, ( Default 40 )</p>\n</li>\n<li><p><strong>[--query_cover (INT)]</strong> [Required] Minimum query cover% to report an alignment, ( Default 70 )</p>\n</li>\n<li><p><strong>[--subject_cover (INT)]</strong> [Required] Minimum subject cover% to report an alignment, ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong> Filter short sequences in the genome and assess the status of the genome</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>Paths of external programs</strong></p>\n<p>  Not needed if they were in the environment variables path. Users can check with the &quot;--check-external-programs&quot; option for the essential programs.</p>\n<ul>\n<li><p><strong>[--abricate-bin (PATH)]</strong> Path to abyss binary file.<br>Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--abyss-bin (PATH)]</strong> Path to abyss binary file. Default<br>tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--canu-bin (PATH)]</strong> Path to canu binary file. Default<br>tries if canu is in PATH;</p>\n</li>\n<li><p><strong>[--cd-hit-bin (PATH)]</strong> Path to cd-hit binary file. Default<br>tries if cd-hit is in PATH;</p>\n</li>\n<li><p><strong>[--fastANI-bin (PATH)]</strong> Path to the fastANI binary file.<br>Default tries if fastANI is in PATH;</p>\n</li>\n<li><p><strong>[--iqtree-bin (PATH)]</strong> Path to the iqtree binary file.<br>Default tries if iqtree is in PATH;</p>\n</li>\n<li><p><strong>[--mafft-bin (PATH)]</strong> Path to mafft binary file. Default<br>tries if mafft is in PATH;</p>\n</li>\n<li><p><strong>[--mash-bin (PATH)]</strong> Path to the mash binary file. Default<br>tries if mash is in PATH.</p>\n</li>\n<li><p><strong>[--muscle-bin (PATH)]</strong> Path to the muscle binary file.<br>Default tries if muscle is in PATH.</p>\n</li>\n<li><p><strong>[--orthofinder-bin (PATH)]</strong> Path to the orthofinder binary<br>file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li><p><strong>[--pal2nal-bin (PATH)]</strong> Path to the pal2nal.pl binary<br>file. Default tries if pal2nal.pl is in PATH;</p>\n</li>\n<li><p><strong>[--prodigal-bin (PATH)]</strong> Path to prodigal binary file.<br>Default tries if prodigal is in PATH;</p>\n</li>\n<li><p><strong>[--prokka-bin (PATH)]</strong> Path to prokka binary file. Default<br>tries if prokka is in PATH;</p>\n</li>\n<li><p><strong>[--roary-bin (PATH)]</strong> Path to the roary binary file.<br>Default tries if roary is in PATH;</p>\n</li>\n<li><p><strong>[--sickle-bin (PATH)]</strong> Path to the sickle-trim binary<br>file. Default tries if sickle is in PATH.</p>\n</li>\n<li><p><strong>[--snippy-bin (PATH)]</strong> Path to the snippy binary file.<br>Default tries if snippy is in PATH;</p>\n</li>\n<li><p><strong>[--snp-sites-bin (PATH)]</strong> Path to the snp-sites binary<br>file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li><p><strong>[--trimAL-bin (PATH)]</strong> Path to the trimAL binary file.<br>Default tries if trimAL is in PATH;</p>\n</li>\n<li><p><strong>[--unicycler-bin (PATH)]</strong> Path to the unicycler binary<br>file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Setup COG database</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong> Users should execute this after first<br>installation of pgcgap.</li>\n</ul>\n</li>\n<li><p>Check the required external programs (<strong>It is strongly recommended that this step be performed after the installation of PGCGAP</strong>):</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --check-external-programs</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><p>Example dataset can be download <a href=\"http://bcam.hzau.edu.cn/PGCGAP/PGCGAP_Examples.tar.gz\">here</a>.</p>\n<ul>\n<li><p><strong>Example 1:</strong> Perform all functions, take the <em>Escherichia coli</em> as an example, total 6 strains for analysis.</p>\n<p>  <strong>Notice</strong>: For the sake of flexibility, The &quot;VAR&quot; function needs to be added additionally.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --PanTree --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 2:</strong> Genome assembly.</p>\n<ul>\n<li><p>Illumina reads assembly</p>\n<p>In this dataset, the naming format of the genome is “strain_1.fastq.gz” and “strain_2.fastq.gz”. The string after the strain name is “_1.fastq.gz”, and its length is 11, so &quot;--suffix_len&quot; was set to 11.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Assemble with ABySS</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Assemble with SPAdes</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Assemble with AUTO</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ONT reads assembly</p>\n<p>Oxford nanopore sequencing usually produces one reads file, so only the parameter of &quot;--reads1&quot; needs to be set, where the value is &quot;.fasta&quot;. “--genomeSize” is the estimated genome size, and users can check the genome size of similar strains in the NCBI database for reference. The parameter was set to &quot;4.8m&quot; here. The suffix of the reads file here is &quot;.fasta&quot; and its length is 6, so &quot;--suffix_len&quot; was set to 6.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>PacBio reads assembly</p>\n<p>PacBio also usually produces only one reads file &quot;pacbio.fastq&quot;, the parameter settings are similar to Oxford. The strain name is 6, so &quot;--suffix_len&quot; was set to 6.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Hybrid assembly of short reads and long reads</p>\n<p>Paired-end short reads and long reads in the directory “Reads&#x2F;Hybrid&#x2F;“ were used as inputs. Illumina reads and long reads must be from the same isolates.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform hybrid --ReadsPath Reads/Hybrid --short1 short_reads_1.fastq.gz --short2 short_reads_2.fastq.gz --long long_reads_high_depth.fastq.gz --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>Example 3</strong>: Gene prediction and annotation</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 4</strong>: Constructing single-copy core protein tree and core SNPs tree</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 5:</strong> Constructing single-copy core protein tree only.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 6:</strong> Conduct pan-genome analysis and construct a phylogenetic tree of single-copy core proteins called by roary. <strong><u>Applicable to v1.0.27 and later</u></strong>.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 7:</strong> Inference of orthologous gene groups and construct a phylogenetic tree of single-copy Orthologue proteins. <strong><u>Applicable to v1.0.29 and later</u></strong>.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 8:</strong> Compute whole-genome Average Nucleotide Identity (ANI).</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --ANI --threads 4 --queryL scaf.list --refL scaf.list --Scaf_suffix .fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 9:</strong> Genome and metagenome similarity estimation using MinHash.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --MASH --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 10:</strong> Run COG annotation for each strain.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --pCOG --threads 4 --strain_num 6 --<span class=\"built_in\">id</span> 40 --query_cover 70 --subject_cover 50 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 11:</strong> Variants calling and phylogenetic tree construction based on the reference genome.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 12:</strong> Screening of contigs for antimicrobial and virulence genes.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db all --identity 75 --coverage 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Generating-Input-files\"><a href=\"#Generating-Input-files\" class=\"headerlink\" title=\"Generating Input files\"></a>Generating Input files</h2><hr>\n<h3 id=\"Working-directory\"><a href=\"#Working-directory\" class=\"headerlink\" title=\"Working directory\"></a>Working directory</h3><p>The directory where the PGCGAP software runs.</p>\n<h3 id=\"Assemble\"><a href=\"#Assemble\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><p>Pair-end reads of all strains in a directory or PacBio reads or ONT reads (Default: .&#x2F;Reads&#x2F;Illumina&#x2F; under the working directory).</p>\n<h3 id=\"Annotate\"><a href=\"#Annotate\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"ANI\"><a href=\"#ANI\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><p>QUERY_LIST and REFERENCE_LIST files containing full paths to genomes, one per line (default: scaf.list under the working directory). If the “--Assemble” function was run first, the list file will be generated automatically.</p>\n<h3 id=\"MASH\"><a href=\"#MASH\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"CoreTree\"><a href=\"#CoreTree\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><p>Amino acids file (With “.faa” as the suffix) and nucleotide (With “.ffn” as the suffix) file of each strain placed into two directories (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;“ and “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;“). The “.faa” and “.ffn” files of the same strain should have the same prefix name. The name of protein IDs and gene IDs should be started with the strain name. The “Prokka” software was suggested to generate the input files. If the “--Annotate” function was run first, the files will be generated automatically. If the “--CDsPath” was set to “NO”, the nucleotide files will not be needed.</p>\n<h3 id=\"OrthoF\"><a href=\"#OrthoF\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><p>A set of protein sequence files (one per species) in FASTA format under a directory (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;“). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"Pan\"><a href=\"#Pan\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><p>GFF3 files (With “.gff” as the suffix) of each strain placed into a directory. They must contain the nucleotide sequence at the end of the file. All GFF3 files created by Prokka are valid (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"pCOG\"><a href=\"#pCOG\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><p>Amino acids file (With “.faa” as the suffix) of each strain placed into a directory (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"VAR\"><a href=\"#VAR\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p>Pair-end reads of all strains in a directory (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory).</p>\n</li>\n<li><p>The full path of reference genome in FASTA format or GenBank format (<strong>must be provided</strong>).</p>\n</li>\n</ul>\n<h3 id=\"AntiRes\"><a href=\"#AntiRes\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"STREE\"><a href=\"#STREE\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><p>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</p>\n<h2 id=\"Output-Files\"><a href=\"#Output-Files\" class=\"headerlink\" title=\"Output Files\"></a>Output Files</h2><hr>\n<h3 id=\"Assemble-1\"><a href=\"#Assemble-1\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong></p>\n<p>  Directories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong></p>\n<p>  Directories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong></p>\n<p>  Directories contain ONT assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong></p>\n<p>  Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina&#x2F;</strong></p>\n<p>  Directory contains Illumina contigs&#x2F;scaffolds of all strains. &quot;*.filtered.fas&quot; is the genome after excluding short sequences. &quot;*.prefilter.stats&quot; describes the stats of the genome before filtering, and &quot;*.filtered.stats&quot; describes the stats of the genome after filtering.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford&#x2F;</strong></p>\n<p>  Directory contains ONT contigs&#x2F;scaffolds of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio&#x2F;</strong></p>\n<p>  Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"Annotate-1\"><a href=\"#Annotate-1\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation&#x2F;</strong></p>\n<p>  directories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;AAs&#x2F;</strong></p>\n<p>  Directory contain amino acids sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;CDs&#x2F;</strong></p>\n<p>  Directory contain nucleotide sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;GFF&#x2F;</strong></p>\n<p>  Directory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ANI-1\"><a href=\"#ANI-1\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong></p>\n<p>  The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong></p>\n<p>  file with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong></p>\n<p>  An ANI matrix of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong></p>\n<p>  The heatmap plot of &quot;ANIs.heatmap&quot;.</p>\n</li>\n</ul>\n<h3 id=\"MASH-1\"><a href=\"#MASH-1\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong></p>\n<p>  The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong></p>\n<p>  The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong></p>\n<p>  A similarity matrix of all genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong></p>\n<p>  A heat map plot of &quot;MASH.heatmap&quot;.</p>\n</li>\n</ul>\n<h3 id=\"CoreTree-1\"><a href=\"#CoreTree-1\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong></p>\n<p>  Concatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong></p>\n<p>  The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong></p>\n<p>  The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong></p>\n<p>  Concatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong></p>\n<p>  Core SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.treefile</strong></p>\n<p>  The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;&quot;Other_files&quot;</strong></p>\n<p>  Intermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"OrthoF-1\"><a href=\"#OrthoF-1\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong></p>\n<p>  Same as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong></p>\n<p>  Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong></p>\n<p>  Phylogenetic tree constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong></p>\n<p>  Phylogenetic tree constructed by IQ-TREE.</p>\n</li>\n</ul>\n<h3 id=\"Pan-1\"><a href=\"#Pan-1\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong></p>\n<p>  A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong></p>\n<p>  A graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong></p>\n<p>  A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong></p>\n<p>  Alignments of single-copy core proteins called by roary software.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong></p>\n<p>  A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong></p>\n<p>  A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong></p>\n<p>  see <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pCOG-1\"><a href=\"#pCOG-1\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong></p>\n<p>  Intermediate files.</p>\n</li>\n<li><p><strong>*.2Scog.table</strong></p>\n<p>  The super COG table of each strain.</p>\n</li>\n<li><p><strong>*.2Scog.table.pdf</strong></p>\n<p>  A plot of super COG table in pdf format.</p>\n</li>\n<li><p><strong>All_flags_relative_abundances.table</strong></p>\n<p>  A table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"VAR-1\"><a href=\"#VAR-1\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong></p>\n<p>  directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li><p><strong>Results&#x2F;Variants&#x2F;Core</strong></p>\n<p>  The directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.aln.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>core.aln.treefile</strong> : The best-fit model of evolution selected using IQ-TREE can be found in this file.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"AntiRes-1\"><a href=\"#AntiRes-1\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li>\n</ul>\n<h3 id=\"STREE-1\"><a href=\"#STREE-1\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.iqtree</strong> : Log of IQ-TREE.</li>\n</ul>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><hr>\n<p>PGCGAP is free software, licensed under GPLv3.</p>\n<h2 id=\"Feedback-and-Issues\"><a href=\"#Feedback-and-Issues\" class=\"headerlink\" title=\"Feedback and Issues\"></a>Feedback and Issues</h2><hr>\n<p>Please report any issues to the <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> or email us at <a href=\"mailto:&#x6c;&#105;&#97;&#111;&#x63;&#x68;&#x65;&#110;&#x6c;&#x61;&#110;&#x72;&#x75;&#x6f;&#64;&#x77;&#x65;&#x62;&#109;&#x61;&#x69;&#108;&#x2e;&#104;&#122;&#x61;&#117;&#x2e;&#101;&#x64;&#117;&#x2e;&#x63;&#110;\">&#x6c;&#105;&#97;&#111;&#x63;&#x68;&#x65;&#110;&#x6c;&#x61;&#110;&#x72;&#x75;&#x6f;&#64;&#x77;&#x65;&#x62;&#109;&#x61;&#x69;&#108;&#x2e;&#104;&#122;&#x61;&#117;&#x2e;&#101;&#x64;&#117;&#x2e;&#x63;&#110;</a>.</p>\n<h2 id=\"Citation\"><a href=\"#Citation\" class=\"headerlink\" title=\"Citation\"></a>Citation</h2><hr>\n<ul>\n<li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative<br>  genomics. <em>Protocol exchange</em>, 2022. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v6\">10.21203&#x2F;rs.2.21224&#x2F;v6</a></p>\n</li>\n<li><p>If you use &quot;--Assemble&quot;, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li><p>If you use &quot;--Annotate&quot;, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btu153\">Prokka</a>.</p>\n</li>\n<li><p>If you use &quot;--CoreTree&quot;, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li><p>If you use &quot;--Pan&quot;, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>.</p>\n</li>\n<li><p>If you use &quot;--OrthoF&quot;, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>.</p>\n</li>\n<li><p>If you use &quot;--ANI&quot;, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li><p>If you use &quot;--MASH&quot;, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li><p>If you use &quot;--VAR&quot;, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li><p>If you use &quot;--AntiRes&quot;, please also cite<br>  <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li><p>If you use &quot;--STREE&quot;, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><hr>\n<h3 id=\"Q1-VAR-function-ran-failed-to-get-annotated-VCFs-and-Core-results\"><a href=\"#Q1-VAR-function-ran-failed-to-get-annotated-VCFs-and-Core-results\" class=\"headerlink\" title=\"Q1 VAR function ran failed to get annotated VCFs and Core results\"></a>Q1 VAR function ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in &quot;strain_name.log&quot; under Results&#x2F;Variants&#x2F;&lt;strain_name&gt;&#x2F; directory. If you find a sentence like &quot;WARNING: All frames are zero! This seems rather odd, please check that &#39;frame&#39; information in your &#39;genes&#39; file is accurate.&quot; This is a snpEff error. Users can install JDK8 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install java-jdk=8.0.112</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a href=\"#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\" class=\"headerlink\" title=\"Q2 Could not determine version of minced please install version 2 or higher\"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running the Annotate function, this error could happen, the error message shows as following:</p>\n<pre><code>Error: A JNI error has occurred, please check your installation and try again\nException in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:763)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)\n    at java.net.URLClassLoader.access$100(URLClassLoader.java:74)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:369)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:363)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:362)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)\n[01:09:40] Could not determine version of minced - please install version 2.0 or higher\n</code></pre>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install minced=0.3</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\"><a href=\"#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\" class=\"headerlink\" title=\"Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib\"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function &quot;VAR&quot; on macOS. It is an error of openssl. Users can solve this problem as the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Firstly, install brew if have not installed before</span></span><br><span class=\"line\">ruby -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Install openssl with brew</span></span><br><span class=\"line\">brew install openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Create the soft link for libraries</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations.</p>\n<h3 id=\"Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\"><a href=\"#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\" class=\"headerlink\" title=\"Q4 Use of uninitialized value in require at Encode.pm line 61\"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function &quot;Pan&quot;. It is a warning of Roary software. The content of line 61 is &quot;require Encode::ConfigLocal;&quot;. Users can ignore the warning. Click <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><hr>\n<ul>\n<li><p>V1.0.3</p>\n<ul>\n<li>Updated ANI function.</li>\n</ul>\n</li>\n<li><p>V1.0.4</p>\n<ul>\n<li>Add parallel for function &quot;pCOG&quot;.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.5</p>\n<ul>\n<li>Bug repair for the input of gubbins.</li>\n</ul>\n</li>\n<li><p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li><p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third-generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function &quot;COG&quot; to &quot;pCOG&quot;.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.8</p>\n<ul>\n<li>Add the &quot;MASH&quot; function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li><p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to &quot;Pan&quot;.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan<br>chart has been added.</li>\n<li>Fixed a bug for plotting the ANI matrix.</li>\n</ul>\n</li>\n<li><p>V1.0.10</p>\n<ul>\n<li>Add the &quot;AntiRes&quot; function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li><p>V1.0.11</p>\n<ul>\n<li>Users now can choose &quot;abyss&quot; or &quot;spades&quot; for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command &quot;pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]&quot;, and can look up the examples of each module with command &quot;pgcgap Examples&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls &quot;ABySS&quot; for genome assembly. When the assembled N50 is less than 50,000, it automatically calls &quot;SPAdes&quot; to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li><p>V1.0.13</p>\n<ul>\n<li>Fixed the &quot;running error&quot; bug of function &quot;Assess&quot; in module &quot;ACC&quot;.</li>\n<li>Added module &quot;STREE&quot; for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li><p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n<li>Fixed the error of function &quot;Assess&quot; in module &quot;ACC&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li><p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running &quot;Annotate&quot; analysis to avoid program crash.</li>\n</ul>\n</li>\n<li><p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module &quot;CoreTree&quot;.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li><p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module &quot;STREE&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li><p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module &quot;VAR&quot;.</li>\n<li>Fixed a little bug of module &quot;CoreTree&quot; to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.21</p>\n<ul>\n<li>Change the default search program &quot;blast&quot; to &quot;diamond&quot; of<br>module &quot;OrthoF&quot;.</li>\n<li>Fixed a bug of module &quot;pCOG&quot; to output the right figure.</li>\n</ul>\n</li>\n<li><p>V1.0.22</p>\n<ul>\n<li>The drawing function of module &quot;ANI&quot; and module &quot;MASH&quot; has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module &quot;ANI&quot;, that is no heatmap will be drawn when there is &quot;NA&quot; in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li><p>V1.0.23</p>\n<ul>\n<li>The &quot;--Assess&quot; function of module &quot;ACC&quot; was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li><p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module &quot;Pan&quot; to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module &quot;CoreTree&quot; and &quot;Pan&quot;.</li>\n<li>The parameter &quot;--identi&quot; was added into module &quot;Pan&quot; to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li><p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module &quot;ANI&quot; and &quot;MASH&quot;.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the &quot;ANI&quot; and &quot;MASH&quot; analysis.</li>\n</ul>\n</li>\n<li><p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li><p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command &quot;pgcgap --check-update&quot;.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter &quot;CoreTree&quot; in the module Pan to avoid program termination caused by the &quot;&gt;&quot; in non-sequence lines.</li>\n</ul>\n</li>\n<li><p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the &quot;permission denied&quot; error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li><p>V1.0.30</p>\n<ul>\n<li>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</li>\n<li>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</li>\n<li>Added the option of using fasttree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</li>\n</ul>\n</li>\n<li><p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing of IQ-TREE was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li><p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try &quot;pgcgap Examples&quot; to have a look.</li>\n<li>Updated module AntiRes: the parameter --db had been modified to add choices of &quot;all&quot; and &quot;megares&quot;.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n<li><p>V1.0.33</p>\n<ul>\n<li>Updated module CoreTree: <a href=\"https://bitsandbugs.org/2019/11/06/two-easy-ways-to-run-iq-tree-with-the-correct-number-of-constant-sites/\">Run IQ-TREE with the correct number of constant sites</a> when constructing the single-copy core SNPs tree.</li>\n<li>Updated module VAR: Use &quot;SNP-SITE&quot; and &quot;IQ-TREE -fconst&quot; to generate SNP sites from the &quot;core.full.aln&quot; and construct the phylogenetic tree.</li>\n<li>Updated module pCOG: Replace blast with diamond to speed up analysis.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"比较基因组学","path":"api/tags/比较基因组学.json"},{"name":"PGCGAP","path":"api/tags/PGCGAP.json"}]},{"title":"WSL安装Docker避坑指北","slug":"WSL安装Docker避坑指北","date":"2022-03-10T02:43:42.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/WSL安装Docker避坑指北.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"升级WSL\"><a href=\"#升级WSL\" class=\"headerlink\" title=\"升级WSL\"></a>升级WSL</h1><ul>\n<li><p>查看已安装的WSL版本(Windows PowerShell中运行)</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe -l -v</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>  显示如下：</p>\n  <figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  NAME                   STATE           VERSION</span><br><span class=\"line\">* Ubuntu-20.04           Running         1</span><br><span class=\"line\">  docker-desktop-data    Stopped         2</span><br></pre></td></tr></table></figure>\n<p>  看到安装的为WSL1，据说WSL1不支持Docker，所以换成WSL2，至于WSL1 和WSL2的异同可参考<a href=\"https://docs.microsoft.com/zh-cn/windows/wsl/compare-versions\">比较 WSL 1 和 WSL 2</a>。</p>\n</li>\n<li><p>安装WSL2 (Windows PowerShell中运行)</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe --set-version ubuntu-20.04 2</span><br></pre></td></tr></table></figure>\n<p>  显示如下：</p>\n  <figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">正在进行转换，这可能需要几分钟时间...</span><br><span class=\"line\">有关与 WSL 2 的主要区别的信息，请访问 https://aka.ms/wsl2</span><br><span class=\"line\">转换完成。</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h1><p>在WSL中运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove docker docker-engine docker.io</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install apt-transport-https ca-certificates curl software-properties-common</span><br><span class=\"line\">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\">sudo apt-key fingerprint 0EBFCD88</span><br><span class=\"line\">sudo add-apt-repository <span class=\"string\">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class=\"subst\">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install docker-ce</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Root用户启动Docker\"><a href=\"#Root用户启动Docker\" class=\"headerlink\" title=\"Root用户启动Docker\"></a>Root用户启动Docker</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\"><span class=\"built_in\">export</span> DOCKER_HOST=tcp://localhost:2375</span><br><span class=\"line\">service docker start</span><br></pre></td></tr></table></figure>\n<p>显示如下：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* Starting Docker: docker</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"测试-还是在root用户\"><a href=\"#测试-还是在root用户\" class=\"headerlink\" title=\"测试(还是在root用户)\"></a>测试(还是在root用户)</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"报错\"><a href=\"#报错\" class=\"headerlink\" title=\"报错\"></a>报错</h1><p>以下是报错信息：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client: Docker Engine - Community</span><br><span class=\"line\"> Version:           20.10.12</span><br><span class=\"line\"> API version:       1.41</span><br><span class=\"line\"> Go version:        go1.16.12</span><br><span class=\"line\"> Git commit:        e91ed57</span><br><span class=\"line\"> Built:             Mon Dec 13 11:45:33 2021</span><br><span class=\"line\"> OS/Arch:           linux/amd64</span><br><span class=\"line\"> Context:           default</span><br><span class=\"line\"> Experimental:      true</span><br><span class=\"line\">Cannot connect to the Docker daemon at tcp://localhost:2375. Is the docker daemon running?</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"修复\"><a href=\"#修复\" class=\"headerlink\" title=\"修复\"></a>修复</h1><p><strong>回到普通用户运行</strong></p>\n<ul>\n<li><p>编辑环境变量</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在最下面添加一行：</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DOCKER_HOST=<span class=\"string\">&#x27;unix:///var/run/docker.sock&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>再次测试</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker version</span><br></pre></td></tr></table></figure>\n<p>  显示如下表明成功：</p>\n  <figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client: Docker Engine - Community</span><br><span class=\"line\"> Version:           20.10.12</span><br><span class=\"line\"> API version:       1.41</span><br><span class=\"line\"> Go version:        go1.16.12</span><br><span class=\"line\"> Git commit:        e91ed57</span><br><span class=\"line\"> Built:             Mon Dec 13 11:45:33 2021</span><br><span class=\"line\"> OS/Arch:           linux/amd64</span><br><span class=\"line\"> Context:           default</span><br><span class=\"line\"> Experimental:      true</span><br><span class=\"line\"></span><br><span class=\"line\">Server: Docker Engine - Community</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:          20.10.12</span><br><span class=\"line\">  API version:      1.41 (minimum version 1.12)</span><br><span class=\"line\">  Go version:       go1.16.12</span><br><span class=\"line\">  Git commit:       459d0df</span><br><span class=\"line\">  Built:            Mon Dec 13 11:43:42 2021</span><br><span class=\"line\">  OS/Arch:          linux/amd64</span><br><span class=\"line\">  Experimental:     false</span><br><span class=\"line\"> containerd:</span><br><span class=\"line\">  Version:          1.4.13</span><br><span class=\"line\">  GitCommit:        9cc61520f4cd876b86e77edfeb88fbcd536d1f9d</span><br><span class=\"line\"> runc:</span><br><span class=\"line\">  Version:          1.0.3</span><br><span class=\"line\">  GitCommit:        v1.0.3-0-gf46b6ba</span><br><span class=\"line\"> docker-init:</span><br><span class=\"line\">  Version:          0.19.0</span><br><span class=\"line\">  GitCommit:        de40ad0</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/qq_44701736/article/details/119411485\">WSL安装docker</a></li>\n<li><a href=\"https://www.jianshu.com/p/7c0084fd9003\">Cannot connect to the Docker daemon at tcp:&#x2F;&#x2F;localhost:2375. Is the docker daemon running?</a></li>\n</ul>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"系统","path":"api/tags/系统.json"},{"name":"虚拟机","path":"api/tags/虚拟机.json"}]},{"title":"Nanopore基因组组装","slug":"Nanopore基因组组装","date":"2022-02-26T02:37:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Nanopore基因组组装.json","excerpt":null,"keywords":null,"cover":"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png","content":"<h1 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mamba install miniasm minipolish raven-assembler flye medaka python=3.8 fastp bwa masurca trycycler</span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/rrwick/Minipolish.git</span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/rrwick/Polypolish.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Polypolish</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install cargo</span><br><span class=\"line\">cargo build --release</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Step-1-Generating-assemblies\"><a href=\"#Step-1-Generating-assemblies\" class=\"headerlink\" title=\"Step 1: Generating assemblies\"></a>Step 1: <a href=\"https://github.com/rrwick/Trycycler/wiki/Generating-assemblies\">Generating assemblies</a></h1><h2 id=\"准备三代数据\"><a href=\"#准备三代数据\" class=\"headerlink\" title=\"准备三代数据\"></a>准备三代数据</h2><p>如果是含有多个文件的话，需要合并到一个文件里</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> WHQ17/barcode14/*.fastq &gt; WHQ17.fastq</span><br></pre></td></tr></table></figure>\n<h2 id=\"质控\"><a href=\"#质控\" class=\"headerlink\" title=\"质控\"></a>质控</h2><p>This will discard short reads (less than 1 kbp) and very bad reads (the worst 5%)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filtlong --min_length 1000 --keep_percent 95 WHQ17.fastq &gt; WHQ17.good.fastq</span><br></pre></td></tr></table></figure>\n<h2 id=\"取子集-Subsampling-reads\"><a href=\"#取子集-Subsampling-reads\" class=\"headerlink\" title=\"取子集 Subsampling reads\"></a>取子集 Subsampling reads</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler subsample --reads WHQ17.good.fastq --out_dir read_subsets --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--count: 输出的Reads子集的数量，大部分情况使用默认的12即可。</li>\n<li>--genome_size: 预估的基因组大小 (e.g. –genome_size 5.5m)。不提供的话会通过miniasm 组装基因组，以估计大小，但是速度会慢。此值用于计算reads深度，不需要很精确，10%的错误是允许的。</li>\n<li>--min_read_depth: 允许的最小read深度，控制着取子集的深度。</li>\n<li>--threads: 使用的线程数（越大越好），影响miniasm 的组装速度。<br>+++</li>\n</ul>\n<p><strong>得到</strong>：<code>read_subsets/sample_*.fastq</code></p>\n<h2 id=\"组装-Generating-assemblies\"><a href=\"#组装-Generating-assemblies\" class=\"headerlink\" title=\"组装 Generating assemblies\"></a>组装 Generating assemblies</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">threads=6  <span class=\"comment\"># change as appropriate for your system</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> assemblies</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_01.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_01 &amp;&amp; <span class=\"built_in\">cp</span> assembly_01/assembly.fasta assemblies/assembly_01.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_01</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_02.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_02.gfa &amp;&amp; any2fasta assembly_02.gfa &gt; assemblies/assembly_02.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_02.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_03.fastq &gt; assemblies/assembly_03.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_04.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_04 &amp;&amp; <span class=\"built_in\">cp</span> assembly_04/assembly.fasta assemblies/assembly_04.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_04</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_05.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_05.gfa &amp;&amp; any2fasta assembly_05.gfa &gt; assemblies/assembly_05.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_05.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_06.fastq &gt; assemblies/assembly_06.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_07.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_07 &amp;&amp; <span class=\"built_in\">cp</span> assembly_07/assembly.fasta assemblies/assembly_07.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_07</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_08.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_08.gfa &amp;&amp; any2fasta assembly_08.gfa &gt; assemblies/assembly_08.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_08.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_09.fastq &gt; assemblies/assembly_09.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_10.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_10 &amp;&amp; <span class=\"built_in\">cp</span> assembly_10/assembly.fasta assemblies/assembly_10.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_10</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_11.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_11.gfa &amp;&amp; any2fasta assembly_11.gfa &gt; assemblies/assembly_11.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_11.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_12.fastq &gt; assemblies/assembly_12.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br></pre></td></tr></table></figure>\n\n<p><strong>得到</strong>：<code>assemblies/*.fasta</code></p>\n<p><strong>删除中间文件：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -r read_subsets</span><br></pre></td></tr></table></figure>\n<h1 id=\"Step-2-Clustering-contigs\"><a href=\"#Step-2-Clustering-contigs\" class=\"headerlink\" title=\"Step 2: Clustering contigs\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Clustering-contigs\">Step 2: Clustering contigs</a></h1><h2 id=\"Running-Trycycler-cluster\"><a href=\"#Running-Trycycler-cluster\" class=\"headerlink\" title=\"Running Trycycler cluster\"></a>Running Trycycler cluster</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler cluster --assemblies assemblies/*.fasta --reads WHQ17.good.fastq --out_dir trycycler --threads 10</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--min_contig_len: 最小contig长度（默认1000），短于该长度的contigs将被丢弃。如果你的基因组含有长度更小的质粒，将该值设低。</li>\n<li>--min_contig_depth: 覆盖contigs的reads的最低深度。For example, if an assembly has a mean depth of 90× and this setting is 0.1 (the default), then any contig with &lt;9× depth will be removed.</li>\n<li>--distance: this is the Mash distance threshold used when defining clusters, and the default threshold is 0.01. Smaller thresholds (e.g. 0.005) can result in a larger number of tighter clusters. Larger thresholds (e.g. 0.02) can result in a smaller number of looser clusters.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><ul>\n<li><code>trycycler/contigs.phylip</code>: a matrix of the Mash distances between all contigs in PHYLIP format.</li>\n<li><code>trycycler/contigs.newick</code>: a FastME tree of the contigs built from the distance matrix. This can be visualised in a phylogenetic tree viewer such as FigTree, Dendroscope or Archaeopteryx.</li>\n<li>One directory for each of the clusters: <code>trycycler/cluster_001, trycycler/cluster_002, etc</code>. These directories will each contain a subdirectory named 1_contigs which includes the FASTA files for the contigs in the cluster.</li>\n</ul>\n<h2 id=\"筛选-clusters\"><a href=\"#筛选-clusters\" class=\"headerlink\" title=\"筛选 clusters\"></a><font color=\"#FF0000\">筛选 clusters</font></h2><p>将<code>contigs.newick</code>导入进化树查看软件，肉眼观察，主观意愿挑选，有问题的cluster删掉。参照<a href=\"https://github.com/rrwick/Trycycler/wiki/Clustering-contigs\">Trycycler官方说明</a>。</p>\n<h1 id=\"Step-3-Reconciling-contigs\"><a href=\"#Step-3-Reconciling-contigs\" class=\"headerlink\" title=\"Step 3: Reconciling contigs\"></a>Step 3: <a href=\"https://github.com/rrwick/Trycycler/wiki/Reconciling-contigs\">Reconciling contigs</a></h1><h2 id=\"Running-Trycycler-reconcile\"><a href=\"#Running-Trycycler-reconcile\" class=\"headerlink\" title=\"Running Trycycler reconcile\"></a>Running Trycycler reconcile</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_001 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_002 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_003 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_004 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_005 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_006 --threads 10</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析<br>General settings:</p>\n<ul>\n<li>--linear: use this option if your input contigs are not circular. It will disable the circularisation-correction steps in Trycycler reconcile.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.</li>\n<li>--verbose: use this flag to display extra output. Mainly there for debugging purposes.</li>\n</ul>\n<p>Initial check:</p>\n<ul>\n<li>--max_mash_dist: if any of the sequences have a pairwise Mash distance of more than this (default &#x3D; 0.02), then the contigs will fail the initial check.</li>\n<li>--max_length_diff: if any of the sequences have a pairwise relative length factor of more than this, then the contigs will fail the initial check. For example, if set to 1.1 (the default), then no contig can be more than 10% longer than any other.</li>\n</ul>\n<p>Circularisation:</p>\n<ul>\n<li>--max_add_seq and –max_add_seq_percent: these control how much sequence Trycycler is willing to add to a contig to circularise it. For example, if they are set to 1000 and 5 (the defaults), then Trycycler will be willing to add up to 1000 bp or 5% of a contig’s length (whichever is smaller) to circularise it. Any contig which requires more than 1000 bp or 5% of its length added to circularise will cause Trycycler reconcile to fail.</li>\n<li>--max_trim_seq and –max_trim_seq_percent: these control how much sequence Trycycler is willing to remove from a contig to circularise it. For example, if they are set to 50000 and 10 (the defaults), then Trycycler will be willing to remove up to 50000 bp or 10% of a contig’s length (whichever is smaller) to circularise it. Any contig which requires more than 50000 bp or 10% of its length removed to circularise will cause Trycycler reconcile to fail.</li>\n</ul>\n<p>Final check:</p>\n<ul>\n<li>--min_identity: if any of the sequences have a pairwise global alignment percent identity of less than this (default &#x3D; 98), then the contigs will fail the final check.</li>\n<li>--max_indel_size: if any of the sequences have a pairwise alignment indel size of more than this (default &#x3D; 250), then the contigs will fail the final check.<br>+++</li>\n</ul>\n<h2 id=\"输出-1\"><a href=\"#输出-1\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, Trycycler reconcile will make <code>2_all_seqs.fasta</code> in the cluster directory, a multi-FASTA file containing each of the contigs ready for multiple sequence alignment.</p>\n<h2 id=\"Dotplots\"><a href=\"#Dotplots\" class=\"headerlink\" title=\"Dotplots\"></a>Dotplots</h2><p>You can optionally run Trycycler dotplot on any problematic clusters to visualise the relationship between the sequences. For example:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler dotplot --cluster_dir trycycler/cluster_002</span><br></pre></td></tr></table></figure>\n\n<p>This will create an image file (dotplots.png) in the cluster directory with a dotplot for all pairwise combinations of sequences. Same-strand k-mer matches are drawn in blue, and opposite-strand k-mer matches are drawn in red. For example:</p>\n<p><img src=\"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png\" class=\"lazyload placeholder\" data-srcset=\"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Dotplot\"><br>In the above example (taken from cluster 2 of the good demo dataset), you can see that most of the sequences are in very nice agreement with each other. They have shifted start positions relative to each other, but that’s expected for contigs of a circular sequence. One of the contigs (E_contig_2) is on the opposite strand as the others, but that too is normal. Sequence D_contig_2, however, is a problem! It contains two entire copies of the same sequence, visible in the dotplot with itself and the dotplots with other sequences. It will need to be excluded or trimmed in order for reconciliation to succeed.</p>\n<h1 id=\"Step-4-Multiple-sequence-alignment\"><a href=\"#Step-4-Multiple-sequence-alignment\" class=\"headerlink\" title=\"Step 4: Multiple sequence alignment\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Multiple-sequence-alignment\">Step 4: Multiple sequence alignment</a></h1><h2 id=\"Running-Trycycler-msa\"><a href=\"#Running-Trycycler-msa\" class=\"headerlink\" title=\"Running Trycycler msa\"></a>Running Trycycler msa</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_001 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_002 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_003 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_004 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_005 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_006 --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析<br>除了线程数外，其他三个参数可以用默认值。</p>\n<ul>\n<li>--kmer: the k-mer size used for sequence partitioning (default &#x3D; 32).</li>\n<li>--step: the step size used for sequence partitioning (default &#x3D; 1000).</li>\n<li>--lookahead: the look-ahead margin used for sequence partitioning (default &#x3D; 10000).</li>\n<li>--threads: this is how many parallel instances of MUSCLE will be used when aligning the sequence partitions. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出-2\"><a href=\"#输出-2\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, Trycycler reconcile will make a <code>3_msa.fasta</code> file in the cluster directory, a FASTA-formatted multiple sequence alignment of the contigs ready for use in generating a consensus. </p>\n<h1 id=\"Step-5-Partitioning-reads\"><a href=\"#Step-5-Partitioning-reads\" class=\"headerlink\" title=\"Step 5: Partitioning reads\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Partitioning-reads\">Step 5: Partitioning reads</a></h1><h2 id=\"Running-Trycycler-partition\"><a href=\"#Running-Trycycler-partition\" class=\"headerlink\" title=\"Running Trycycler partition\"></a>Running Trycycler partition</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler partition --reads WHQ17.good.fastq --cluster_dirs trycycler/cluster_* --threads 8</span><br></pre></td></tr></table></figure>\n\n<p>+++ info 参数解析</p>\n<ul>\n<li>--min_aligned_len: reads with less than this many bases aligned (default &#x3D; 1000) will be ignored.</li>\n<li>--min_read_cov: reads with less than this percentage of their length covered by alignments (default &#x3D; 90.0) will be ignored.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出-3\"><a href=\"#输出-3\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>After Trycycler partition completes, each of the cluster directories should have a <code>4_reads.fastq</code> file which contains its share of the total reads.</p>\n<h1 id=\"Step-6-Generating-a-consensus\"><a href=\"#Step-6-Generating-a-consensus\" class=\"headerlink\" title=\"Step 6: Generating a consensus\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Generating-a-consensus\">Step 6: Generating a consensus</a></h1><h2 id=\"Running-Trycycler-consensus\"><a href=\"#Running-Trycycler-consensus\" class=\"headerlink\" title=\"Running Trycycler consensus\"></a>Running Trycycler consensus</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_001 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_002 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_003 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_004 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_005 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_006 --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--linear: use this option if your input contigs are not circular. It will disable the circularisation steps when aligning reads and choosing variants.</li>\n<li>--min_aligned_len: reads with less than this many bases aligned (default &#x3D; 1000) will be ignored.</li>\n<li>--min_read_cov: reads with less than this percentage of their length aligned (default &#x3D; 90.0) will be ignored.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.</li>\n<li>--verbose: use this flag to display extra output. For every read-assessed variant, this will show the alternative sequences and their read alignment scores.<br>+++</li>\n</ul>\n<h2 id=\"输出-4\"><a href=\"#输出-4\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, you should have a <code>7_final_consensus.fasta</code> file in each of your cluster directories. If you have multiple clusters, you can combine their consensus sequences into a single FASTA file like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> trycycler/cluster_*/7_final_consensus.fasta &gt; trycycler/consensus.fasta</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Step-7-Polishing-after-Trycycler\"><a href=\"#Step-7-Polishing-after-Trycycler\" class=\"headerlink\" title=\"Step 7: Polishing after Trycycler\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Polishing-after-Trycycler\">Step 7: Polishing after Trycycler</a></h1><h2 id=\"Medaka-需要知道测序仪信息basecalling\"><a href=\"#Medaka-需要知道测序仪信息basecalling\" class=\"headerlink\" title=\"Medaka (需要知道测序仪信息basecalling)\"></a>Medaka (需要知道测序仪信息basecalling)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> trycycler/cluster_*; <span class=\"keyword\">do</span></span><br><span class=\"line\">    medaka_consensus -i <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/4_reads.fastq -d <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/7_final_consensus.fasta -o <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka -m r941_prom_hac_g507 -t 8</span><br><span class=\"line\">    <span class=\"built_in\">mv</span> <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka/consensus.fasta <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/8_medaka.fasta</span><br><span class=\"line\">    <span class=\"built_in\">rm</span> -r <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/*.fai <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/*.mmi  <span class=\"comment\"># clean up</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> trycycler/cluster_*/8_medaka.fasta &gt; trycycler/consensus.fasta</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Short-read-polishing\"><a href=\"#Short-read-polishing\" class=\"headerlink\" title=\"Short-read polishing\"></a>Short-read polishing</h2><h3 id=\"Step-1-read-QC\"><a href=\"#Step-1-read-QC\" class=\"headerlink\" title=\"Step 1: read QC\"></a>Step 1: read QC</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastp --in1 WHQ17_BDMS190038054-1a_1.clean.fq.gz --in2 WHQ17_BDMS190038054-1a_2.clean.fq.gz --out1 WHQ17_1.fastq.gz --out2 WHQ17_2.fastq.gz --unpaired1 WHQ17_u.fastq.gz --unpaired2 WHQ17-u.fastq.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Step-2-Polypolish\"><a href=\"#Step-2-Polypolish\" class=\"headerlink\" title=\"Step 2: Polypolish\"></a>Step 2: Polypolish</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bwa index trycycler/consensus.fasta</span><br><span class=\"line\">bwa mem -t 8 -a trycycler/consensus.fasta WHQ17_1.fastq.gz &gt; alignments_1.sam</span><br><span class=\"line\">bwa mem -t 8 -a trycycler/consensus.fasta WHQ17_2.fastq.gz &gt; alignments_2.sam</span><br><span class=\"line\">polypolish trycycler/consensus.fasta alignments_1.sam alignments_2.sam &gt; trycycler/polypolish.fasta</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Step-3-POLCA\"><a href=\"#Step-3-POLCA\" class=\"headerlink\" title=\"Step 3: POLCA\"></a>Step 3: POLCA</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这一步报错，暂未执行</span></span><br><span class=\"line\">polca.sh -a trycycler/polypolish.fasta -r <span class=\"string\">&quot;WHQ17_1.fastq.gz WHQ17_2.fastq.gz&quot;</span> -t 8 -m 10G</span><br><span class=\"line\"><span class=\"built_in\">mv</span> *.PolcaCorrected.fa polypolish_polca.fasta</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"删除无用信息\"><a href=\"#删除无用信息\" class=\"headerlink\" title=\"删除无用信息\"></a>删除无用信息</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> alignments_1.sam alignments_2.sam fastp.*</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf *.read_subsets</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"使用eggNOG-mapper注释基因组","slug":"使用eggNOG-mapper注释基因组","date":"2022-02-26T02:37:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/使用eggNOG-mapper注释基因组.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"EggNOG-mapper简介-本文未完待续…\"><a href=\"#EggNOG-mapper简介-本文未完待续…\" class=\"headerlink\" title=\"EggNOG-mapper简介(本文未完待续…)\"></a>EggNOG-mapper简介(本文未完待续…)</h1><p>EggNOG-mapper (a.k.a. emapper.py or just emapper) is a tool for fast functional annotation of novel sequences. It uses precomputed orthologous groups (OGs) and phylogenies from the eggNOG database (<a href=\"http://eggnogdb.embl.de/\">http://eggnogdb.embl.de/</a>) to transfer functional information from fine-grained orthologs only.</p>\n<p>Common uses of eggNOG-mapper include the annotation of novel genomes, transcriptomes or even metagenomic gene catalogs.</p>\n<p>The use of orthology predictions for functional annotation permits a higher precision than traditional homology searches (i.e. BLAST searches), as it avoids transferring annotations from close paralogs (duplicate genes with a higher chance of being involved in functional divergence).</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><ul>\n<li>Python 3.7 (or greater)</li>\n<li>BioPython 1.76 (python package) (BioPython 1.78 should work since emapper version 2.1.7)</li>\n<li>psutil 5.7.0 (python package)</li>\n<li>xlsxwriter 1.4.3 (python package), only if using the –excel option</li>\n<li>wget (linux command, required for downloading the eggNOG-mapper databases with download_eggnog_data.py, and to create new Diamond&#x2F;MMseqs2 databases with create_dbs.py)</li>\n<li>sqlite (&gt;&#x3D;3.8.2)</li>\n</ul>\n<h2 id=\"需要的存储空间\"><a href=\"#需要的存储空间\" class=\"headerlink\" title=\"需要的存储空间\"></a>需要的存储空间</h2><ul>\n<li>~40 GB for the eggNOG annotation databases (eggnog.db and eggnog.taxa.db)</li>\n<li>~9 GB for Diamond database of eggNOG sequences (required if using -m diamond, which is the default search mode).</li>\n<li><del>11 GB for MMseqs2 database of eggNOG sequences (</del>86 GB if MMseqs2 index is created) (required if using -m mmseqs).</li>\n<li>~3 GB for PFAM database (required if using –pfam_realign options for realignment of queries to PFAM domains).<br>The size of eggNOG diamond&#x2F;mmseqs databases created with create_dbs.py is highly variable, depending on the size of the chosen taxonomic groups.</li>\n</ul>\n<p>Databases for specific taxonomic ranges can be downloaded (for HMMER) or created (for Diamond and MMseqs2). The size of these databases is highly variable. For the size of HMMER databases, check <a href=\"http://eggnog5.embl.de/#/app/downloads\">http://eggnog5.embl.de/#/app/downloads</a>. For Diamond and MMseqs2 databases, DB size will depend on the number of proteins which are from those taxonomic ranges. Also, these proteins need to be downloaded to create the databases, and can be removed afterwards.</p>\n<h2 id=\"Other-Requirements\"><a href=\"#Other-Requirements\" class=\"headerlink\" title=\"Other Requirements\"></a>Other Requirements</h2><ul>\n<li>Using –dbmem loads the whole eggnog.db sqlite3 annotation database during the annotation step, and therefore requires ~44 GB of memory.</li>\n<li>Using the –num_servers option when running HMMER in server mode (a.k.a. hmmgpmd, which is used for -m hmmer –usemem, –pfam_realign denovo or hmm_server.py) loads the HMM database as many times as specified in the argument (e.g. –pfam_realign denovo –num_servers 2 loads the PFAM database into memory twice, with up to roughly 2 GB per instance).</li>\n</ul>\n<h2 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>安装主程序</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install -c bioconda eggnog-mapper</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装数据库</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#创建数据库存储目录</span><br><span class=\"line\">mkdir /home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br><span class=\"line\">#将数据库位置加入环境变量</span><br><span class=\"line\">export EGGNOG_DATA_DIR=/home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br><span class=\"line\">#下载数据库</span><br><span class=\"line\">download_eggnog_data.py -P -M -y -f --data_dir /home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Similarly, use create_dbs.py. For example, to create a diamond database for Bacteria only:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create_dbs.py -m diamond --dbname bacteria --taxa Bacteria</span><br></pre></td></tr></table></figure>\n<p>This will create a bacteria.dmnd diamond database in the default data directory or the one specified in EGGNOG_DATA_DIR environment variable. Such database can be used with emapper.py –dmnd_db bacteria.dmnd. Note that the first time create_dbs.py is used it will take time to download the eggNOG proteins and create the Diamond or MMseqs2 database. Next calls to create_dbs.py (to the same data directory pointed by EGGNOG_DATA_DIR, or –data_dir, or data&#x2F; by default) will not need to download the eggnog5 proteins again. If no more databases are going to be created, the proteins can be removed. For further info, check create_dbs.py –help.</p>\n<h1 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h1><h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"Microbial Ecology投稿经验","slug":"Microbial-Ecology投稿经验","date":"2022-01-19T03:06:36.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Microbial-Ecology投稿经验.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/8e76_1.jpg","content":"<h1 id=\"Geographic-Scale-Influences-the-Interactivities-Between-Determinism-and-Stochasticity-in-the-Assembly-of-Sedimentary-Microbial-Communities-on-the-South-China-Sea-Shelf投稿过程\"><a href=\"#Geographic-Scale-Influences-the-Interactivities-Between-Determinism-and-Stochasticity-in-the-Assembly-of-Sedimentary-Microbial-Communities-on-the-South-China-Sea-Shelf投稿过程\" class=\"headerlink\" title=\"Geographic Scale Influences the Interactivities Between Determinism and Stochasticity in the Assembly of Sedimentary Microbial Communities on the South China Sea Shelf投稿过程\"></a>Geographic Scale Influences the Interactivities Between Determinism and Stochasticity in the Assembly of Sedimentary Microbial Communities on the South China Sea Shelf投稿过程</h1><h2 id=\"类型：\"><a href=\"#类型：\" class=\"headerlink\" title=\"类型：\"></a>类型：</h2><ul>\n<li>Artical</li>\n</ul>\n<h2 id=\"周期：\"><a href=\"#周期：\" class=\"headerlink\" title=\"周期：\"></a>周期：</h2><ul>\n<li>~4.5个月</li>\n</ul>\n<h2 id=\"节点：\"><a href=\"#节点：\" class=\"headerlink\" title=\"节点：\"></a>节点：</h2><ul>\n<li><strong>First Submission</strong>：2021.09.08</li>\n<li><strong>分配审稿人</strong>：2021.09.14</li>\n<li><strong>审稿完毕</strong>：2021.09.21</li>\n<li><strong>返回修稿意见</strong>：2021.10.23 早上</li>\n<li><strong>Resubmission</strong>：2021.11.16 早上</li>\n<li><strong>With Editor</strong>：2021.11.16 中午</li>\n<li><strong>Under review</strong>: 2021.11.17 早上</li>\n<li><strong>Required reviews completed</strong>：2021.12.03 中午</li>\n<li><strong>Minor revision needed</strong>：2021.12.09 早上</li>\n<li><strong>Revision submitted to journal</strong>：2020.12.09 夜晚</li>\n<li><strong>With editor</strong>：2021.12.10 中午</li>\n<li><strong>返回修稿意见</strong>：2021.12.11 9:50<br>编辑发邮件让修稿，然而修稿意见里面是空的。我们于12月13号发信问编辑，当天收到回信，结果是他搞错了，不需要再修稿了。</li>\n<li><strong>Accepted</strong>：2021.12.14 20:32</li>\n<li><strong>Proof</strong>：2022.01.17 10:30</li>\n<li><strong>Online</strong>：2022.01.18</li>\n</ul>\n<h2 id=\"文章链接\"><a href=\"#文章链接\" class=\"headerlink\" title=\"文章链接\"></a>文章链接</h2><p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/8e76_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/8e76_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p><a href=\"https://doi.org/10.1007/s00248-021-01946-x\">Geographic Scale Influences the Interactivities Between Determinism and Stochasticity in the Assembly of Sedimentary Microbial Communities on the South China Sea Shelf</a></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>该杂志速度还是比较快的，审稿人有点多，4位，但是提的意见非常有助于提升文章的质量。</p>\n","raw":null,"categories":[{"name":"投稿","path":"api/categories/投稿.json"}],"tags":[{"name":"投稿经验","path":"api/tags/投稿经验.json"}]}]}