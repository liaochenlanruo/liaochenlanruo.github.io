{"total":141,"pageSize":10,"pageCount":15,"data":[{"title":"What is RAG","slug":"What-is-RAG","date":"2025-08-03T08:49:01.000Z","updated":"2025-08-03T08:53:50.219Z","comments":true,"path":"api/articles/What-is-RAG.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/RAG.png","content":"<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/RAG.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/RAG.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"一图看懂RAG\"></p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n","raw":null,"categories":[],"tags":[]},{"title":"一种用于多重图像处理与分析的端到端工作流程","slug":"一种用于多重图像处理与分析的端到端工作流程","date":"2025-06-30T12:42:04.000Z","updated":"2025-07-11T14:10:37.243Z","comments":true,"path":"api/articles/一种用于多重图像处理与分析的端到端工作流程.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig1.jpg","content":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>多重成像技术能够在单细胞分辨率下同时对组织中的数十种生物分子进行空间分析。从多重组织成像数据中提取生物学相关信息（如细胞表型的空间分布）涉及多项计算任务，包括图像分割、特征提取和空间分辨的单细胞分析。在此，我们提出了一种用于多重组织图像处理和分析的端到端工作流程，该流程整合了之前开发的计算工具，以用户友好和可定制的方式实现这些任务。在数据质量评估方面，我们强调了napari-imc在交互式检查原始成像数据方面的实用性，以及cytomapper R&#x2F;Bioconductor包在R中进行图像可视化的功能。使用steinbock工具包执行原始数据预处理、图像分割和特征提取。我们展示了两种基于监督像素分类和预训练深度学习模型的细胞分割替代方法。提取的单细胞数据随后在R中进行读取、处理和分析。该方案描述了使用社区建立的数据容器的方法，从而便于应用R&#x2F;Bioconductor包进行降维、单细胞可视化和表型分析。我们提供了使用imcRtools R&#x2F;Bioconductor包进行空间分辨单细胞分析的说明，包括群落分析、细胞邻域检测和细胞-细胞相互作用测试。该工作流程之前已应用于成像质谱细胞计数数据，但可以轻松适应其他高度多重成像技术。本方案可由具有基本生物信息学培训的研究人员实施，并且所提供的数据集的分析可在5–6小时内完成。扩展版本可在<a href=\"https://bodenmillergroup.github.io/IMCDataAnalysis/%E4%B8%8A%E8%8E%B7%E5%BE%97%E3%80%82\">https://bodenmillergroup.github.io/IMCDataAnalysis/上获得。</a></p>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>高度多重成像技术能够在组织中同时检测到数十种生物分子（如蛋白质和转录本，也称为“标志物”）。最近建立的多重组织成像技术依赖于荧光标记抗体的循环染色技术[1–3]，或使用寡核苷酸标记的[4,5]或金属标记的[6,7]抗体等技术。这些技术的关键优势在于，它们允许对组织空间环境中的单个细胞进行深入分析。因此，这些方法已经能够对肿瘤微环境的空间结构[1,8–10]、用于评估细胞类型和趋化因子空间共定位的核酸和蛋白质丰度[11]、病毒感染细胞的空间生态位[12]，以及2019年冠状病毒病（COVID-19）感染[13,14]、1型糖尿病进展[15]和自身免疫性疾病[16]期间的病理特征进行分析。</p>\n<p>为了充分利用多重成像数据中包含的信息进行生物学和临床分析，无论生物学问题是什么，都必须执行一系列计算步骤。这些步骤包括：（1）对图像进行目视检查，以初步评估数据质量；（2）生物图像处理与分割，以提取用于下游分析的单细胞特征；（3）单细胞分析，如将单细胞数据投影到低维空间、进行聚类和细胞表型分析，以支持探索性数据分析和量化样本之间的生物学差异[8,15,17]；（4）利用从多重成像数据中提取的空间信息来检测细胞表型之间的相互作用或避免作用[18]、表征细胞邻域（CNs）[5,10,19]和空间群落[8]，以及识别相似细胞的斑块[11]。存在许多计算工具和方法来执行上述步骤；然而，许多工具缺乏互操作性、可扩展性，并且依赖于复杂的自定义脚本。</p>\n<p>在此，我们提出了一种简化且易于扩展的多重图像分析端到端工作流程，该流程支持所有关键步骤，并与现有软件实现互操作性。该工作流程最初是为分析成像质谱细胞计数（IMC）数据而开发的，也适用于其他高度多重成像技术生成的数据。我们专门为可视化原始IMC数据开发的napari图像查看器插件napari-imc可实现交互式图像可视化。steinbock工具包可实现多重图像处理，包括数据提取、图像分割和数据导出。具体而言，我们展示了使用监督像素分类[21,22]和预训练深度学习模型[23]的分割方法，以从多重图像中提取空间分辨的单细胞信息。随后，imcRtools R&#x2F;Bioconductor包将生成的单细胞数据读入R编程语言。通过使用社区建立的数据容器，该工作流程集成了许多先前开发的R&#x2F;Bioconductor包，以执行信号溢出校正[24]，并允许进行低维可视化、质量控制、细胞表型分析、单细胞聚类和图像可视化[17,25]。最后，我们描述了如何以用户友好的方式使用imcRtools包执行空间群落分析、细胞邻域（CN）和空间上下文（SC）检测、细胞斑块表征和细胞表型相互作用分析。工作流程中使用的所有工具都记录详尽，并且旨在通过互操作性、可重复性和用户友好性分析，为接受过基本生物信息学培训的研究人员提供服务。我们描述了该工作流程，强调了常见陷阱，并讨论了针对各个步骤进行故障排除的方法。</p>\n<h1 id=\"程序概述\"><a href=\"#程序概述\" class=\"headerlink\" title=\"程序概述\"></a>程序概述</h1><p>本方案描述了分析由高度多重组织成像技术生成的数据的基本步骤。整个流程分为九个阶段：交互式成像数据可视化（步骤1-5）、数据预处理（步骤6）、图像分割（步骤7）、单细胞特征提取（步骤8）、将数据读入R（步骤9-13）、溢出校正（步骤14-21）、质量控制（步骤22-27）、细胞表型分析（步骤28-30）和空间分辨单细胞分析（步骤31-35）。图1给出了该程序的概览，而工作流程的详细描述可在<a href=\"https://bodenmillergroup.github.io/IMCDataAnalysis/%E4%B8%8A%E6%9F%A5%E9%98%85%E3%80%82\">https://bodenmillergroup.github.io/IMCDataAnalysis/上查阅。</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图1 | 多重组织图像分析工作流程概述。原始成像数据可通过使用如napari-imc等napari插件进行交互式检查，以评估数据质量和进行探索性可视化（步骤1–5），适用于IMC（离子束成像）。数据预处理是从原始数据中提取TIFF格式的多通道图像（步骤6）。图像分割可通过应用预训练的深度学习模型（左侧）或通过监督像素分类（右侧）来执行。我们重点介绍了使用steinbook工具包进行深度学习分割，以及使用Ilastik和CellProfiler进行基于像素分类的分割（步骤7–8）。空间分辨单细胞数据可通过imcRtools（https://bioconductor.org/packages/release/bioc/html/imcRtools.html）和cytomapper R/Bioconductor软件包（https://bioconductor.org/packages/release/bioc/html/cytomapper.html）读入R（步骤9–13），这些软件包支持溢出校正、质量控制、细胞表型分析和空间分析（步骤14–35）。BiocStickers根据知识共享许可协议CC0 1.0从https://github.com/Bioconductor/BiocStickers重新印制。\"></p>\n<p>在计算分析之前，通过灵活可视化标记丰度对原始成像数据进行定性检查是手动评估数据质量的关键步骤26。最近开发的多维图像查看器<code>napari</code>能够实现多通道图像的快速交互式可视化20。为了方便检查原始离子束成像（IMC）数据，我们开发了<code>napari-imc</code>插件，该插件使napari能够加载<code>Hyperion</code>成像系统生成的<code>MCD/TXT</code>文件。使用napari-imc，研究人员可以将多重IMC采集数据与仪器获取的光学图像（用于区域选择，即“全景图”）进行叠加，从而便于对原始数据进行定性检查。对于其他多重成像技术，如多重离子束成像（MIBI）7、通过索引共检测（CODEX）5和循环免疫荧光（CyCIF）1，这些技术无法提供生物样本的固有多模态视图（这些数据相当于IMC采集数据，而非IMC全景图），成像数据通常可以转换为napari原生支持的文件格式。</p>\n<p>多通道图像处理能够实现多重成像捕获的生物实体的定量分析。单个处理步骤包括图像提取和预处理、图像分割以及生物对象（如细胞）的量化。本文介绍了如何使用<code>Ilastik</code><sup>21</sup>和<code>CellProfiler</code><sup>22</sup>执行基于随机森林的监督像素分类图像分割（以下简称“基于像素分类的分割”）。这种方法之前曾被用于从多重图像中提取单细胞信息，以进行组织空间表征<sup>8,13,15,27</sup>。作为一种替代策略，我们还提供了使用深度学习支持的Mesmer分割算法23（以下简称“基于深度学习的分割”）执行基于预训练神经网络的全自动细胞分割的指南。我们的<code>steinbock</code>多通道图像处理工具包提供了基于深度学习的分割方法。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig2.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图2 | 图像处理后的数据输出及在R中的表示。在图像处理过程中，首先对所有提供的多通道图像进行分割，以检测并存储为分割掩膜的单个细胞。基于这些分割掩膜，提取单细胞特征，包括每个细胞和通道的平均像素强度、形态学特征、细胞的xy位置（区域属性）和空间细胞图。为了在R中处理生成的数据，将所有多通道图像读入一个单一的`CytoImageList`对象，将所有分割掩膜读入另一个单一的CytoImageList对象，并将所有图像的单细胞特征读入一个单一的`SpatialExperiment`对象。患者和图像级别的特征分别存储在每个CytoImageList对象的`elementMetadata`插槽和SpatialExperiment对象的`colData`插槽中。BiocStickers根据知识共享许可协议CC0 1.0从https://github.com/Bioconductor/BiocStickers重新印制。\"></p>\n<p>图像分割和空间分辨单细胞数据提取后，将执行下游分析步骤以表征组织环境中的细胞。为此，分别使用imcRtools和cytomapper R&#x2F;Bioconductor软件包将单细胞数据和图像读入R（图2）。初步数据处理步骤包括溢出校正，以纠正相邻通道间的伪信号24，以及分割和样本质量控制。通过将单细胞数据存储在R&#x2F;Bioconductor的SpatialExperiment28对象中，该工作流程促进了单细胞数据分析步骤，包括使用现有工具进行聚类、降维、可视化和批次校正17,29,30。为了检测具有相似标记表达（以下简称“细胞表型”）的细胞群，我们描述了两种基于标记真实数据的单细胞聚类和分类的替代方法。最后，我们描述了<code>imcRtools</code>软件包支持的一系列空间数据分析任务，以表征空间组织结构。我们展示了如何检测空间肿瘤和间质群落，这些群落可用于表征不同细胞表型之间的高阶相互作用8。为了结合细胞表型信息检测空间组织结构，我们使用imcRtools软件包将细胞聚合成<code>细胞邻域（CNs）</code>5,10和<code>超级细胞（SCs）</code>19。作为检测空间组织结构的另一种有监督方式，我们重点介绍了一种补丁检测方法，该方法可用于分析预定细胞表型的空间聚集11。最后，为了评估某些类型的细胞表型在图像中的空间相互作用是否增加或减少，我们描述了使用基于置换的测试策略18。</p>\n<p>要使用此工作流程，需要掌握R编程语言的基础知识。这包括安装软件包、执行函数、理解函数参数以及如何访问函数文档的能力。此外，研究人员应能够在命令行上执行简单操作，如更改目录。</p>\n<p>综上所述，本方案强调了使用最近开发的工具以用户友好和可重复的方式执行端到端的多重图像分析，包括图像可视化和分割、数据质量控制以及单细胞和空间分析。</p>\n<h1 id=\"工作流的应用\"><a href=\"#工作流的应用\" class=\"headerlink\" title=\"工作流的应用\"></a>工作流的应用</h1><h2 id=\"工作流的先前应用\"><a href=\"#工作流的先前应用\" class=\"headerlink\" title=\"工作流的先前应用\"></a>工作流的先前应用</h2><p>之前，所提出的方法已被用于从多重成像数据中提取空间分辨的单细胞特征，以表征组织结构和其与疾病进展的关系8,9,11,15。该方法中描述的图像可视化策略已被用于显示子宫内膜异位症样本的复合图像31，以及在胰岛32和淋巴组织33的分割掩膜上绘制细胞表型和细胞表达的空间图。基于监督像素分类的图像分割方法已被应用于从多重成像数据中提取和分析空间分辨的单细胞数据，以绘制乳腺癌8,9,18,27、1型糖尿病15、COVID-19感染期间的肺和皮肤损伤13,14以及人肾组织空间结构34的特征图。steinbock工具包支持的通过应用预训练的深度学习模型进行图像分割的方法，之前已被用于研究药物筛选期间非小细胞肺癌球体中的标记表达35，以及表征转移性黑色素瘤中的趋化因子环境11。在本文方法中，我们还描述了一种细胞表型分析策略，即根据图像中细胞的标记表达进行手动标记，然后用于分类。该策略之前已被用于识别转移性黑色素瘤11和COVID-19患者皮肤样本14中的细胞表型。在方法的最后部分，我们提供了空间单细胞分析策略的指导。空间群落检测方法之前已被用于表征乳腺癌的空间结构及其与单细胞病理学组的关系8。细胞邻域（CN）和超级细胞（SC）检测已被用于了解结直肠癌样本内空间域的作用和组装10,19。本文描述的补丁检测方法已被用于识别趋化因子环境的细胞成分11。最后，用于识别细胞表型之间相互作用或避免作用的测试策略，之前已被用于表征乳腺癌8,18,27、转移性黑色素瘤11和胰腺组织15中的局部细胞表型相互作用。</p>\n<p>对于图像分割，我们描述了两种基于监督像素分类和预训练深度学习模型的替代方法。基于监督像素分类的分割方法通过调整CellProfiler管道提供了灵活性，并可以通过训练特定的Ilastik分类器15扩展到分割更大的组织结构，如胰岛。该管道之前已在多项研究中用于从多重图像中提取单细胞信息8,9,13–15,18,27。然而，最初开发的基于像素分类的分割管道需要自定义脚本、手动软件安装，并且仅通过使用随机森林的监督像素分类提供图像分割策略。为了促进多通道图像处理，我们因此开发了<code>steinbock</code>工具包，该工具包可实现数据提取、图像分割并且以用户友好的方式实现数据导出。它还通过使用启用深度学习的Mesmer分割算法，基于预训练的神经网络提供全自动细胞分割。steinbock工具包易于使用，旨在通过提供版本化和容器化的环境，确保在不同运行和平台之间的可重复性。</p>\n<h2 id=\"工作流的技术中立应用\"><a href=\"#工作流的技术中立应用\" class=\"headerlink\" title=\"工作流的技术中立应用\"></a>工作流的技术中立应用</h2><p>所提出的方法之前已被用于IMC（多标记质谱流式细胞术）生成的数据的端到端分析。然而，除了个别明确指示且专门为IMC定制的步骤外，所提供的工具还可应用于其他多重成像技术生成的数据。但是，一些迭代式多重成像技术需要额外的预处理步骤，如图像拼接和配准1,5，而这些步骤并未包含在所提出的工作流中。为了使本文描述的工具适用于给定的多重组织成像数据集，图像必须作为（拼接和共配准的）多通道TIFF文件提供。</p>\n<p>此外，如果使用了免疫荧光通道来检测细胞核和细胞膜36，则所描述的工具还可用于分析空间转录组数据，如seqFISH。对于此类数据，steinbock工具包可用于图像分割和单细胞数据提取，imcRtools包可执行空间数据分析，而cytomapper包则允许在分割掩膜上可视化细胞表型。</p>\n<h2 id=\"工作流的扩展\"><a href=\"#工作流的扩展\" class=\"headerlink\" title=\"工作流的扩展\"></a>工作流的扩展</h2><p>所提出的方法提供了执行多重成像数据基本分析所需的所有工具。然而，根据研究问题，可以使用额外的工具和软件包来扩展所提出的方法。对于查看多通道图像，<code>QuPath</code>26提供了灵活且用户友好的可视化选项，这些选项可在TIFF图像上操作。<code>steinbock</code>工具包允许以流式细胞术标准（FCS）文件的形式导出单细胞数据，以便与FCS Express或Cytobank一起使用。此外，由于可以将单细胞数据以anndata对象37的形式导出，因此可以通过Python中的单细胞和空间数据分析来扩展该方法。可以使用<code>slingshot</code>38进行轨迹分析，<code>spicyR</code>支持检测细胞类型共定位变化32，而<code>edgeR</code>17,39可用于执行差异丰度测试。有关单细胞分析方法的全面概述，请参阅《使用Bioconductor编排单细胞分析》一书，该书可在<a href=\"https://bioconductor.org/books/release/OSCA/%E4%B8%8A%E8%8E%B7%E5%8F%96%E3%80%82\">https://bioconductor.org/books/release/OSCA/上获取。</a></p>\n<h1 id=\"与其他方法的比较\"><a href=\"#与其他方法的比较\" class=\"headerlink\" title=\"与其他方法的比较\"></a>与其他方法的比较</h1><h2 id=\"图像查看器\"><a href=\"#图像查看器\" class=\"headerlink\" title=\"图像查看器\"></a>图像查看器</h2><p>为了交互式多通道图像可视化，之前已开发了包括<code>histoCAT</code>18、<code>CytoMap</code>40、<code>cytokit</code>41和<code>vitessce</code>42在内的多个图像查看器。然而，现有的图像查看器不支持读取存储在专有数据格式中的原始IMC数据所包含的全部信息。本文描述了使用<code>napari-imc</code>专门读取原始IMC数据，并将多重IMC采集叠加到全景图上，从而能够在组织上下文中检查图像。</p>\n<h2 id=\"图像分割方法\"><a href=\"#图像分割方法\" class=\"headerlink\" title=\"图像分割方法\"></a>图像分割方法</h2><p>对于图像分割，之前应用的两种基于像素分类和深度学习模型的方法已被纳入工作流。基于像素分类的分割方法依赖于使用<code>Ilastik</code>进行像素分类和使用<code>CellProfiler</code>进行细胞分割。该分割方法的简化版本已在<code>imcyto</code>管道43中实现。近年来，已开发了诸如<code>StarDist</code>44、<code>Cellpose</code>45和<code>Mesmer</code>23等启用深度学习的图像分割方法，以在多种组织类型和成像平台上实现人类水平的分割性能23。这些方法通常需要自定义脚本和特定的数据预处理步骤。我们已将启用深度学习的<code>Mesmer</code>分割算法纳入<code>steinbock</code>，因为它已针对通过多种多重成像技术获取的数据进行了专门训练。</p>\n<h2 id=\"单细胞与空间分析工具\"><a href=\"#单细胞与空间分析工具\" class=\"headerlink\" title=\"单细胞与空间分析工具\"></a>单细胞与空间分析工具</h2><p>单细胞与空间数据分析依赖于一系列交互式和程序化工具的支持。专为某些多重成像平台设计的图形用户界面（GUI）软件操作简便，可实现多通道图像和单细胞数据的联合可视化<sup>18,40,41,46</sup>。然而，这些工具往往与其他框架的互操作性较差，且难以扩展到其开发数据类型之外的其他用例。本文介绍了一些用户友好的计算工具，能够以简化的方式执行所有关键分析步骤，并确保与现有软件包（如Bioconductor项目中的软件包47）的互操作性。对于程序化的单细胞与空间数据分析，最近开发了<code>squidpy</code>软件包48用于在Python中分析数据，而<code>giotto</code>49则在R中进行类似的分析。这两个软件包都提供了大量用于空间分辨单细胞分析的功能，<code>steinbock</code>工具包则允许导出数据以便与<code>squidpy</code>结合使用。相比之下，Bioconductor项目47中的<code>imcRtools</code>和<code>cytomapper</code>软件包用于空间数据分析和图像可视化，因此能够与使用标准化数据类的众多单细胞数据分析方法相结合17,28。</p>\n<h2 id=\"分析流程\"><a href=\"#分析流程\" class=\"headerlink\" title=\"分析流程\"></a>分析流程</h2><p><code>CellProfiler</code>22、<code>Ilastik</code>21、<code>QuPATH</code>26和<code>cytokit</code>41等单个工具，以及包含<code>imcyto</code>43、<code>MIRIAM</code>50和<code>mplexable</code>51的工作流，可执行图像处理和分割。这些工具和工作流侧重于多重图像分析的特定处理步骤，通常与空间分辨单细胞分析等下游分析任务缺乏互操作性。最近，开发了一个名为<code>MCMICRO</code>的全面流程，用于从使用各种成像技术获取的多通道图像中提取和分析单细胞数据52。MCMICRO流程允许执行迭代染色方法通常所需的图像处理步骤，包括图像拼接和配准、图像分割和特征提取。对于单细胞和空间数据分析，该流程提供了使用<code>phenograph</code>53进行单细胞聚类和使用CN检测54的模块，并且可以通过开发新模块来扩展该流程。本文所述的方案提供了超越MCMICRO流程中模块的空间分辨单细胞分析策略。具体而言，在简化图像分割、特征提取并将数据读入R之后，本文重点介绍了常用的单细胞分析工具，以执行降维、单细胞可视化、批次校正和聚类以及基于分类的表型分析。此外，通过使用<code>SpatialExperiment</code>容器来存储空间分辨单细胞数据，该工作流可与许多当前和未来开发的用于空间和单细胞数据分析的Bioconductor软件包相结合。</p>\n<h1 id=\"数据生成的实验设计\"><a href=\"#数据生成的实验设计\" class=\"headerlink\" title=\"数据生成的实验设计\"></a>数据生成的实验设计</h1><p>在应用本文所述的方案分析多重成像技术生成的数据之前，研究人员必须仔细考虑要成像的样本数量、测量的感兴趣区域的数量和位置、样本质量以及抗体鸡尾酒的特异性和敏感性55。样本大小和感兴趣区域（ROI）大小主要受研究性质和材料可用性的影响。建议进行预实验，以估算最佳采集数量和大小，从而描绘出感兴趣的组织特征56,57。</p>\n<p>在最终数据采集之前，需要针对感兴趣的组织类型和包埋策略（即福尔马林固定石蜡包埋（FFPE）或最佳切割温度复合物（OCT））专门评估每种抗体的染色质量。为了评估技术差异，如染色效率随时间的变化或实验变化，建议与实验样本平行地对控制样本（如细胞系团块）进行染色和采集。这些控制细胞团块也应使用与主要样本相同的流程进行分析，以评估技术差异。</p>\n<p><font color=\"#FF0000\">本文所述的数据分析方案假设所有样本都是使用相同的抗体面板采集的。如果使用不同的面板，则应对每个子批次样本分别应用该方案。下文讨论了评估数据质量的几种方法，并提出了在分析步骤中纠正和&#x2F;或避免技术偏差的方法。</font></p>\n<h1 id=\"局限性\"><a href=\"#局限性\" class=\"headerlink\" title=\"局限性\"></a>局限性</h1><h2 id=\"多通道图像处理的内存和存储限制\"><a href=\"#多通道图像处理的内存和存储限制\" class=\"headerlink\" title=\"多通道图像处理的内存和存储限制\"></a>多通道图像处理的内存和存储限制</h2><p>基于像素分类的分割方法在处理大量图像时会遇到内存和运行时问题。首先，在Ilastik中加载和标记许多大文件会消耗大量内存并减慢像素标注的速度。我们通过裁剪图像来解决这个问题，并需要决定是加载较小的裁剪图像还是较少的图像到Ilastik中。此外，通过启用Ilastik中的“实时模式”来即时重新训练分类器也会消耗大量内存。这个问题可以通过关闭“实时模式”进行标注来解决。最后，所提供的CellProfiler流程会从图像中提取所有可用特征。对于大型数据集，这可能会导致生成存储单细胞特征的大型（多个千兆字节）CSV文件。因此，我们建&#96;议手动选择对下游分析感兴趣的特征。</p>\n<h2 id=\"与其他工具的兼容性\"><a href=\"#与其他工具的兼容性\" class=\"headerlink\" title=\"与其他工具的兼容性\"></a>与其他工具的兼容性</h2><p>steinbock工具包主要处理存储在未压缩TIFF文件中的图像，这需要足够的计算资源。在使用steinbock时，可以通过压缩原始数据进行长期存储并启用图形处理单元（GPU）支持图像分割来减轻与数据集和&#x2F;或图像大小相关的问题。通过批量处理图像瓦片而不是完整图像来支持大型全玻片图像（大小为数十GB）的处理。此外，steinbock尽可能访问磁盘上的TIFF文件，而不是将完整图像加载到内存中。在使用深度学习支持的Mesmer算法进行全自动图像分割时，底层预训练神经网络可能并非对所有数据集都能立即表现出色。steinbock工具包可使用–preprocess&#x2F;–postprocess命令行选项来微调算法参数（参见“故障排除”部分）。或者，也可以采用基于像素分类的监督图像分割方法，其中用于分割的像素分类器可以根据当前数据集进行定制（重新训练）。</p>\n<h2 id=\"R中的图像可视化\"><a href=\"#R中的图像可视化\" class=\"headerlink\" title=\"R中的图像可视化\"></a>R中的图像可视化</h2><p>cytomapper包目前支持以HDF5格式在磁盘上存储图像，这有助于处理大型图像。然而，在R的原生图形设备中一次性显示大型全玻片图像计算成本高昂，我们建议先对图像进行分块，然后并排可视化单个图像块。</p>\n<h2 id=\"选择正确的聚类数量\"><a href=\"#选择正确的聚类数量\" class=\"headerlink\" title=\"选择正确的聚类数量\"></a>选择正确的聚类数量</h2><p>我们在两种情况下描述了聚类方法：首先，是识别细胞表型（第28步），其次，是检测拷贝数（CN）（第32步）。在这两种情况下，选择聚类方法和聚类数量都不简单，需要测试不同的参数，直到忠实地概括所研究系统的先前生物学知识或估计聚类稳定性（例如，一些聚类在不同的参数设置下不会发生变化）。我们在第28步中讨论了合适的参数扫描。然而，为了检测CN，如果可能的话，最好对要检测的组织结构有预先的预期，并相应地调整聚类参数。对于无监督的CN检测，可以测试多种聚类参数设置和方法来估计结果的稳健性。</p>\n<h2 id=\"随着细胞数量增加的可扩展性\"><a href=\"#随着细胞数量增加的可扩展性\" class=\"headerlink\" title=\"随着细胞数量增加的可扩展性\"></a>随着细胞数量增加的可扩展性</h2><p>本协议中介绍的大多数函数在分析空间解析的单细胞数据时都可以处理数百万个细胞。然而，在进行非线性降维、聚类（除k均值聚类外）、图像块检测（当扩展许多图像块时）和细胞表型相互作用测试时，可能会出现内存和运行时问题。这些问题可以通过imcRtools中实现的函数来缓解，这些函数易于并行化或使用近似方法来检测最近邻。对于相互作用测试函数，当同时分析数百万个细胞时，可能会出现内存问题。作为一种解决方法，可以按图像子集处理数据集，因为统计信息是按图像计算的。</p>\n<h1 id=\"材料\"><a href=\"#材料\" class=\"headerlink\" title=\"材料\"></a>材料</h1><h2 id=\"设备\"><a href=\"#设备\" class=\"headerlink\" title=\"设备\"></a>设备</h2><h3 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h3><p>• 要运行该工作流程，需要一台装有最新版本的Windows、Mac或Linux操作系统（OS）的电脑。随着数据集大小的增加，所需的内存也会增加，我们建议使用至少8GB的随机存取存储器（RAM）来分析所提供的数据集（14600×600像素的图像，40个通道，47859个细胞）。对于更大的数据集（数百万个细胞），我们建议使用至少64GB的RAM。或者，如果可以安装Docker（见“设备安装”部分），则可以使用高性能电脑。对于本手稿，工作流程是在MacOS Big Sur（11.7.4）、2.7 GHz四核Intel Core i7、16 GB 2133 MHz LPDDR3上运行的。</p>\n<h3 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h3><p>• napari &amp; napari-imc（针对IMC）：使用多维图像查看器napari（<a href=\"https://napari.org)以及用于加载imc文件的napari-imc插件(https//github.com/BodenmillerGroup/napari-imc%EF%BC%89%E6%9D%A5%E5%8F%AF%E8%A7%86%E5%8C%96%E5%92%8C%E6%A3%80%E6%9F%A5%E5%8E%9F%E5%A7%8B%E7%9A%84%E5%A4%9A%E9%87%8D%E6%88%90%E5%83%8F%E6%95%B0%E6%8D%AE%E3%80%82%E6%88%91%E4%BB%AC%E5%9C%A8%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84conda%EF%BC%88https://conda.io%EF%BC%89%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%AE%89%E8%A3%85%E4%BA%86Python\">https://napari.org）以及用于加载IMC文件的napari-imc插件（https://github.com/BodenmillerGroup/napari-imc）来可视化和检查原始的多重成像数据。我们在一个新的conda（https://conda.io）环境中安装了Python</a> 3.9.12（<a href=\"https://www.python.org)、napari/\">https://www.python.org）、napari</a> 0.4.16和napari-imc 0.6.5；安装说明见下文。</p>\n<p>• 基于深度学习的分割：使用多通道图像处理工具包steinbock（<a href=\"https://bodenmillergroup.github.io/steinbock%EF%BC%89%E5%AF%B9%E5%A4%9A%E9%87%8D%E6%88%90%E5%83%8F%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E9%A2%84%E5%A4%84%E7%90%86%EF%BC%8C%E6%89%A7%E8%A1%8C%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E5%B9%B6%E6%8F%90%E5%8F%96%E5%8D%95%E7%BB%86%E8%83%9E%E6%95%B0%E6%8D%AE%E3%80%82%E6%88%91%E4%BB%AC%E4%BD%BF%E7%94%A8Docker\">https://bodenmillergroup.github.io/steinbock）对多重成像数据进行预处理，执行图像分割并提取单细胞数据。我们使用Docker</a> Desktop 4.9.0 for Mac从GitHub容器注册表中拉取了steinbock Docker容器v0.16.0；安装说明见“设备安装”部分。</p>\n<p>• 基于像素分类的分割：使用基于随机森林的像素分类和基于分水岭的细胞分割方法进行多通道图像处理，使用的是基于Ilastik&#x2F;CellProfiler的分割管道v3.6（<a href=\"https://bodenmillergroup.github.io/ImcSegmentationPipeline/%EF%BC%89%EF%BC%9B%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E%E8%A7%81%E2%80%9C%E8%AE%BE%E5%A4%87%E5%AE%89%E8%A3%85%E2%80%9D%E9%83%A8%E5%88%86%E3%80%82%E6%AD%A4%E5%A4%96%EF%BC%8C%E8%A6%81%E4%BD%BF%E7%94%A8%E8%AF%A5%E7%AE%A1%E9%81%93%EF%BC%8C%E8%BF%98%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E4%BB%A5%E4%B8%8B%E8%BD%AF%E4%BB%B6%EF%BC%9A\">https://bodenmillergroup.github.io/ImcSegmentationPipeline/）；安装说明见“设备安装”部分。此外，要使用该管道，还需要安装以下软件：</a></p>\n<p>  – Ilastik：在细胞分割之前用于像素分类的Ilastik软件21，可从<a href=\"https://www.ilastik.org/download.html%E5%AE%89%E8%A3%85%E3%80%82%E6%9C%AC%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E4%BD%BF%E7%94%A8%E7%9A%84%E7%89%88%E6%9C%AC%E6%98%AFv1.4.0%E3%80%82\">https://www.ilastik.org/download.html安装。本工作流程使用的版本是v1.4.0。</a></p>\n<p>  – CellProfiler：用于分割单个细胞的CellProfiler软件22，可在Windows（64位）和MacOS（10.14+）上从<a href=\"https://cellprofiler.org/previous-releases%E5%AE%89%E8%A3%85%E3%80%82%E6%9C%AC%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E4%BD%BF%E7%94%A8%E7%9A%84%E7%89%88%E6%9C%AC%E6%98%AFv4.2.1%E3%80%82\">https://cellprofiler.org/previous-releases安装。本工作流程使用的版本是v4.2.1。</a></p>\n<p>• R设置：图像处理后的下游分析使用的是统计编程语言R，可从<a href=\"https://cran.r-project.org/%E6%8C%89%E7%85%A7%E7%89%B9%E5%AE%9A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AF%B4%E6%98%8E%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E3%80%82%E6%9C%AC%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E4%BD%BF%E7%94%A8%E7%9A%84%E7%89%88%E6%9C%AC%E6%98%AFv4.3.0%E3%80%82\">https://cran.r-project.org/按照特定操作系统的说明进行安装。本工作流程使用的版本是v4.3.0。</a></p>\n<p>RStudio软件为R中的数据分析提供了一个易于使用的图形用户界面（GUI）。它可以从<a href=\"https://www.rstudio.com/products/rstudio/download/%E5%AE%89%E8%A3%85%E3%80%82%E4%B8%BA%E4%BA%86%E6%89%A7%E8%A1%8C%E6%89%80%E5%B1%95%E7%A4%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BD%BF%E7%94%A8%E4%BA%86RStudio\">https://www.rstudio.com/products/rstudio/download/安装。为了执行所展示的工作流程，我们使用了RStudio</a> Server版本2023.03.0。</p>\n<p>以下是本工作流程中使用的主要R库的版本。此外，补充说明1列出了工作流程中使用的所有R库的软件版本。</p>\n<p>SpatialExperiment版本1.10.0（参考文献28）<br>SingleCellExperiment 1.22.0（参考文献17）<br>CATALYST版本1.24.0（参考文献24）<br>imcRtools版本1.6.0<br>scuttle版本1.10.0（参考文献58）<br>scater版本1.28.0（参考文献58）<br>batchelor版本1.16.0（参考文献30）<br>bluster版本1.10.0<br>scran版本1.28.0（参考文献59）<br>caret版本6.0-94<br>Cytomapper 版本 1.12.0<br>DittoSeq 版本 1.12.0（参考文献29）<br>Tidyverse 版本 2.0</p>\n<h2 id=\"数据\"><a href=\"#数据\" class=\"headerlink\" title=\"数据\"></a>数据</h2><p>IMC 示例数据：我们提供了一个小型IMC数据集作为示例，以展示多通道图像处理和空间分辨单细胞数据分析。这些数据是使用Hyperion成像系统（Standard BioTools）在大型适应性癌症患者队列的综合免疫分析（IMMUcan）项目中生成的。数据可访问于<a href=\"https://zenodo.org/record/7575859%EF%BC%8C%E5%8C%85%E5%90%AB%E4%BB%A5%E4%B8%8B%E6%96%87%E4%BB%B6%EF%BC%9A\">https://zenodo.org/record/7575859，包含以下文件：</a></p>\n<ul>\n<li><p>Patient1.zip, Patient2.zip, Patient3.zip, Patient4.zip：四个患者样本的原始IMC数据。每个ZIP归档包含一个文件夹，其中包含一个MCD文件（所有采集的数据和元数据）和多个TXT文件（每个采集一个文件，无元数据）。</p>\n</li>\n<li><p>compensation.zip：此ZIP归档包含一个文件夹，其中包含一个MCD文件和多个TXT文件。采集了“溢出载玻片”的多个点，每个TXT文件根据点样金属命名。这些数据用于通道溢出校正（步骤14–21）。</p>\n</li>\n<li><p>sample_metadata.csv：此文件将每个患者与其癌症类型相关联（SCCHN，头颈癌；BCC，乳腺癌；NSCLC，肺癌；CRC，结直肠癌）。</p>\n</li>\n<li><p>我们还提供了steinbock格式的panel.csv文件，其中包含实验中使用的每个抗体或通道的元数据。在此文件中，“channel”列指示用于标记每个抗体的金属同位素。“name”列包含每个抗体的蛋白质靶点。“keep”列指示哪些通道是从原始数据中提取的，因此在下游分析中保留。重要的是，“keep”列设置为1的行的顺序与提取的多通道图像中通道的顺序相匹配。最后，“deepcell”列指示在使用DeepCell&#x2F;Mesmer进行自动图像分割时使用了哪些通道（即聚合）：核通道设置为1，细胞质通道设置为2，其他&#x2F;未使用的通道留空。该文件可访问于<a href=\"https://zenodo.org/record/7624451%E3%80%82\">https://zenodo.org/record/7624451。</a></p>\n</li>\n<li><p>此外，我们还提供了包含先前筛选细胞的SpatialExperiment对象。这些细胞构成了基于分类的表型分析中的真实细胞表型标签（步骤28）。数据可访问于<a href=\"https://zenodo.org/record/7647079%E3%80%82\">https://zenodo.org/record/7647079。</a></p>\n</li>\n</ul>\n<h2 id=\"设备设置\"><a href=\"#设备设置\" class=\"headerlink\" title=\"设备设置\"></a>设备设置</h2><h3 id=\"安装说明\"><a href=\"#安装说明\" class=\"headerlink\" title=\"安装说明\"></a>安装说明</h3><p>除非另有说明，否则本节中的命令必须在命令行上执行（Windows上的“命令提示符”或“Anaconda提示符”，Linux&#x2F;Mac OS上的“终端”）。</p>\n<ul>\n<li>napari 和 napari-imc：</li>\n</ul>\n<ol>\n<li><p>根据<a href=\"https://docs.conda.io/projects/conda/en/latest/user-guide/install/%E4%B8%8A%E7%9A%84%E8%AF%B4%E6%98%8E%E5%AE%89%E8%A3%85conda%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8%E3%80%82\">https://docs.conda.io/projects/conda/en/latest/user-guide/install/上的说明安装conda包管理器。</a></p>\n</li>\n<li><p>创建一个新的conda环境，包含Python 3.9：</p>\n</li>\n</ol>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n napari-imc -y python=<span class=\"number\">3.9</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>激活conda环境并安装napari和napari-imc：</li>\n</ol>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate napari-imc</span><br><span class=\"line\"></span><br><span class=\"line\">pip install <span class=\"string\">&quot;napari[all]==0.4.16&quot;</span> napari-imc==<span class=\"number\">0.6</span><span class=\"number\">.5</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>基于深度学习的分割：有关安装容器化steinbock工具包的说明，可在steinbock在线文档中找到（<a href=\"https://bodenmillergroup.github.io/steinbock/%EF%BC%89%E3%80%82%E7%89%B9%E5%88%AB%E6%98%AF%EF%BC%8C%E8%A6%81%E8%BF%90%E8%A1%8Csteinbock%E5%AE%B9%E5%99%A8%EF%BC%8C%E9%9C%80%E8%A6%81%E5%85%88%E5%AE%89%E8%A3%85Docker%EF%BC%88%E8%AF%B7%E5%8F%82%E9%98%85%E5%9C%A8%E7%BA%BF%E8%AF%B4%E6%98%8E%EF%BC%89%E3%80%82%E5%AF%B9%E4%BA%8E%E6%9C%AC%E6%89%8B%E7%A8%BF%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BD%BF%E7%94%A8%E4%BB%A5%E4%B8%8B%E5%88%AB%E5%90%8D%E8%BF%90%E8%A1%8Csteinbock%EF%BC%9A\">https://bodenmillergroup.github.io/steinbock/）。特别是，要运行steinbock容器，需要先安装Docker（请参阅在线说明）。对于本手稿，我们使用以下别名运行steinbock：</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> steinbock=<span class=\"string\">&quot;docker run -v /path/to/data/steinbock:/data -u (id−u):(id -g) ghcr.io/bodenmillergroup/steinbock:0.16.0&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>▲ 关键说明：在上述命令中，需要将&#x2F;path&#x2F;to&#x2F;data&#x2F;steinbock替换为预期的steinbock数据&#x2F;工作目录。</p>\n<ul>\n<li>基于像素分类的分割：基于像素分类的分割流程的预处理步骤是使用自定义脚本在Python中执行的。要设置预处理脚本，需要执行以下步骤：</li>\n</ul>\n<ol>\n<li>根据<a href=\"https://docs.conda.io/projects/conda/en/latest/user-guide/install/%E4%B8%8A%E7%9A%84%E8%AF%B4%E6%98%8E%E5%AE%89%E8%A3%85conda%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8%E3%80%82\">https://docs.conda.io/projects/conda/en/latest/user-guide/install/上的说明安装conda包管理器。</a></li>\n<li>克隆代码仓库</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --recursive https://github.com/BodenmillerGroup/ImcSegmentationPipeline.git</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>创建imcsegpipe的conda环境：</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ImcSegmentationPipeline</span><br><span class=\"line\">conda <span class=\"built_in\">env</span> create -f environment.yml</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>通过打开CellProfler的图形用户界面（GUI），选择Preferences并将CellProfler插件目录设置为path&#x2F;to&#x2F;ImcSegmentationPipeline&#x2F;resources&#x2F;ImcPluginsCP&#x2F;plugins，来配置CellProfler以使用所需的插件，然后重启CellProfler。</li>\n</ol>\n<p>▲ 关键说明：将此路径调整为下载的CellProfler插件所在的位置。按照上述方式克隆仓库时，插件位于resources&#x2F;ImcPluginsCP&#x2F;plugins中。</p>\n<ul>\n<li><p>R库：该工作流程强调了使用cytomapper、imcRtools和其他R包。以下R命令会安装所有相关的R包：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>requireNamespace<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">,</span> quietly <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"> install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">BiocManager<span class=\"operator\">::</span>install<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;pheatmap&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;viridis&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"string\">&quot;tiff&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;distill&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ggrepel&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;patchwork&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"string\">&quot;mclust&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;RColorBrewer&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;uwot&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Rtsne&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;caret&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"string\">&quot;randomForest&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ggridges&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;gridGraphics&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;scales&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"string\">&quot;CATALYST&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;scuttle&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;scater&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dittoSeq&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"string\">&quot;tidyverse&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;batchelor&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;bluster&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;scran&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"string\">&quot;cytomapper&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;imcRtools&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>可以从GitHub或Bioconductor直接安装R包的开发版本，同时指定开发版本。开发版本通常包含发行版中尚未提供的功能；然而，对于使用描述的工作流程，无需从开发源安装R包。<br>为确保工作流程的可重复性，我们还提供了一个Docker容器，该容器打包了所有相关的R库。以下命令行调用可获取Docker镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull ghcr.io/bodenmillergroup/imcdataanalysis:2023-05-01</span><br></pre></td></tr></table></figure>\n\n<p>使用Docker容器重现分析的说明可在<a href=\"https://github.com/BodenmillerGroup/IMCDataAnalysis/tree/main/publication%E4%B8%8A%E6%9F%A5%E7%9C%8B%E3%80%82%E6%AD%A4%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E4%B8%AD%E6%98%BE%E7%A4%BA%E7%9A%84%E5%88%86%E6%9E%90%E6%98%AF%E5%9C%A8Docker%E5%AE%B9%E5%99%A8%E5%86%85%E6%89%A7%E8%A1%8C%E7%9A%84%EF%BC%9B%E4%BD%86%E6%98%AF%EF%BC%8CR%E5%8C%85%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%8C%89%E7%85%A7%E4%B8%8A%E8%BF%B0%E8%AF%B4%E6%98%8E%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85%E3%80%82\">https://github.com/BodenmillerGroup/IMCDataAnalysis/tree/main/publication上查看。此工作流程中显示的分析是在Docker容器内执行的；但是，R包也可以按照上述说明手动安装。</a></p>\n<h2 id=\"数据下载\"><a href=\"#数据下载\" class=\"headerlink\" title=\"数据下载\"></a>数据下载</h2><p>在R语言中，可以按照以下步骤下载IMC示例数据和门控细胞：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options<span class=\"punctuation\">(</span>timeout <span class=\"operator\">=</span> <span class=\"number\">10000</span><span class=\"punctuation\">)</span> <span class=\"comment\"># 设置超时时间为10000秒</span></span><br><span class=\"line\">dir.create<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/steinbock/raw&quot;</span><span class=\"punctuation\">,</span> recursive <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> <span class=\"comment\"># 创建数据存放目录，若上级目录不存在则一并创建</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载面板文件</span></span><br><span class=\"line\">download.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://zenodo.org/record/7624451/files/panel.csv&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;data/steinbock/panel.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载患者数据</span></span><br><span class=\"line\">download.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://zenodo.org/record/7575859/files/Patient1.zip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;data/steinbock/raw/Patient1.zip&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">download.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://zenodo.org/record/7575859/files/Patient2.zip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;data/steinbock/raw/Patient2.zip&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">download.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://zenodo.org/record/7575859/files/Patient3.zip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;data/steinbock/raw/Patient3.zip&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">download.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://zenodo.org/record/7575859/files/Patient4.zip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;data/steinbock/raw/Patient4.zip&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载补偿文件并解压</span></span><br><span class=\"line\">download.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://zenodo.org/record/7575859/files/compensation.zip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;data/compensation.zip&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">unzip<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/compensation.zip&quot;</span><span class=\"punctuation\">,</span> exdir<span class=\"operator\">=</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">,</span> overwrite<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> <span class=\"comment\"># 解压到data目录，若文件已存在则覆盖</span></span><br><span class=\"line\">unlink<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/compensation.zip&quot;</span><span class=\"punctuation\">)</span> <span class=\"comment\"># 删除压缩包文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载样本元数据文件</span></span><br><span class=\"line\">download.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://zenodo.org/record/7575859/files/sample_metadata.csv&quot;</span><span class=\"punctuation\">,</span> destfile <span class=\"operator\">=</span> <span class=\"string\">&quot;data/sample_metadata.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载门控细胞数据并解压</span></span><br><span class=\"line\">download.file<span class=\"punctuation\">(</span><span class=\"string\">&quot;https://zenodo.org/record/7647079/files/gated_cells.zip&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;data/gated_cells.zip&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">unzip<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/gated_cells.zip&quot;</span><span class=\"punctuation\">,</span> exdir<span class=\"operator\">=</span><span class=\"string\">&quot;data&quot;</span><span class=\"punctuation\">,</span> overwrite<span class=\"operator\">=</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> <span class=\"comment\"># 解压到data目录，若文件已存在则覆盖</span></span><br><span class=\"line\">unlink<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/gated_cells.zip&quot;</span><span class=\"punctuation\">)</span> <span class=\"comment\"># 删除压缩包文件</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键说明：下载的数据和相关的面板文件用于steinbock。若要下载用于基于像素分类的分割流程的示例数据，请遵循步骤6B(iii)。</p>\n<h1 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h1><h2 id=\"原始成像数据检查（IMC专用）\"><a href=\"#原始成像数据检查（IMC专用）\" class=\"headerlink\" title=\"原始成像数据检查（IMC专用）\"></a>原始成像数据检查（IMC专用）</h2><p>● 耗时：20–40分钟</p>\n<p>除非另有说明，否则本节中的命令必须在命令行中执行（在Windows上为“命令提示符”或“Anaconda提示符”，在Linux&#x2F;Mac OS上为“终端”）。</p>\n<ol>\n<li>激活之前创建的napari-imc conda环境并启动napari：</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate napari-imc</span><br><span class=\"line\">napari</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li><p>在napari中，使用“文件”→“打开文件(s)”打开包含原始IMC数据的MCD文件。打开文件后，将出现napari-imc小部件（图3，右侧）。</p>\n</li>\n<li><p>在MCD文件树（napari-imc小部件，顶部）中，选择要在napari主面板中以叠加方式可视化的全景图和&#x2F;或采集数据。</p>\n</li>\n<li><p>对于上一步中选择的采集数据，选择要可视化的通道（napari-imc小部件，中部），并调整通道属性，如颜色和对比度（napari-imc小部件，底部）。</p>\n</li>\n<li><p>使用napari中的平移&#x2F;缩放功能对合成图像进行定性检查。</p>\n</li>\n</ol>\n<h2 id=\"多重组织图像处理\"><a href=\"#多重组织图像处理\" class=\"headerlink\" title=\"多重组织图像处理\"></a>多重组织图像处理</h2><p>除非另有说明，否则本节中的命令必须在命令行中执行（在Windows上为“命令提示符”或“Anaconda提示符”，在Linux&#x2F;Mac OS上为“终端”）。</p>\n<p>多重组织图像处理通常包括图像提取和预处理、图像分割以及单细胞数据提取等步骤。在此，我们提出了两种用于分割多重组织成像数据的替代工作流程：</p>\n<p>（A）基于steinbock的深度学习工作流程，steinbock是我们用于多重组织图像处理的容器化工具包（图4，DeepCell变体）。该工作流程可通过命令行界面进行，并利用DeepCell包中实现的深度学习Mesmer算法，基于预训练神经网络以全自动方式分割细胞。所有steinbock命令的输入和输出文件及目录均可通过命令行选项进行控制。若未明确指定这些选项，steinbock命令行界面将预期以下数据&#x2F;工作目录结构：<br>steinbock数据&#x2F;工作目录<br>├── raw（用户提供，从原始数据开始）<br>├── panel.csv（用户提供或从原始数据生成，步骤6(A)）<br>├── img（用户提供，从TIFF文件开始，或从原始数据提取，步骤6(A)）<br>├── masks（步骤7(A)生成，细胞分割掩码）<br>├── intensities（步骤8(A)生成，平均细胞像素强度）<br>├── regionprops（步骤8(A)生成，形态细胞特征）<br>├── neighbors（步骤8(A)生成，空间细胞邻域列表）</p>\n<p>（B）使用Jupyter笔记本和CellProfiler管道简化的基于像素分类的工作流程（图5）。在此工作流程中，首先使用Ilastik软件手动训练一个针对当前数据集定制的随机森林像素分类器。然后，使用CellProfiler管道基于像素分类来分割单个细胞。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig3.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图3 | napari和napari-imc的截图。可视化存储在Patient4.mcd文件中的原始IMC数据（采集6、8叠加在全景图9、10、11上）。展示的是CD163（黄色）、CD20（红色）、CD3（绿色）、E-钙黏蛋白（青色）和DNA（蓝色）。对比度限制已手动调整以便目视检查。\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig4.png\" alt=\"图4 | 使用steinbock的典型多重图像处理工作流程。\n各个步骤用箭头表示，下方列出了相应的steinbock命令（命令行界面）和Python模块（编程使用）。进一步的参数和第三方软件（包含在steinbock Docker容器中）已叠加在箭头上。输入和输出数据以概念方式表示。图示步骤包括从平台特定的原始数据中提取图像的预处理步骤、（基于分类的）分割步骤以获得细胞掩膜（展示了两种替代工作流程）、测量步骤以提取细胞水平特征，并导出为与各种下游分析环境（例如Python、R、CytoScape76、histoCAT18）兼容的文件格式，以表示空间单细胞数据。\"></p>\n<p>基于像素分类的分割管道的文件夹结构如下所示。该管道期望将原始IMC数据放置在“raw”文件夹中，或将OME–TIFF数据放置在“ometiff”文件夹中。</p>\n<p>基于Ilastik&#x2F;CellProfiler的分割管道数据&#x2F;工作目录<br>├── raw（用户提供，当从原始数据开始时）<br>├── analysis<br> ├── cpin<br> ├── ometiff（用户提供，当从OME-TIFF开始时，或在步骤6(B)中从原始数据生成）<br> ├── cpout（在步骤6-8(B)中生成；最终输出文件）<br> ├── histocat（在步骤6(B)中生成；用于histoCAT导入的文件）<br> ├── crops（在步骤7(B)中生成；Ilastik裁剪图像）<br> ├── ilastik（在步骤6-7(B)中生成；与Ilastik相关的文件）<br>├── scripts（原始数据处理脚本）<br>├── resources（CellProfiler管道和插件）</p>\n<p>▲ 重要提示：steinbock工具包（图4）也支持此处所示的基于像素分类的分割方法（图5）。为简洁起见，在本方案中，仅展示了steinbock的深度学习工作流程；如需更多信息，请参阅steinbock的在线文档。</p>\n<p>这两个工作流程都接受用户提供的多通道图像作为输入，这些图像可以是TIFF文件（steinbock；需放置在“img”文件夹中），也可以是OME–TIFF格式（基于像素分类的分割管道；需放置在“analysis&#x2F;ometiff”文件夹中）。另外，也可以直接将原始IMC数据提供给这两个工作流程（需放置在“raw”文件夹中，适用于两个工作流程），并使用我们自主研发的readimc Python包（框1）将其自动转换为相应的文件格式。此外，这两种工作流程都需要一个CSV格式的面板文件，用于指定实验中使用的抗体以及在后续处理中应保留的任何额外通道（例如，用于复染的金属61）。这些面板文件可以自动从原始数据中生成（steinbock），也可以由用户手动指定（steinbock和基于像素分类的工作流程）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig5.png\" alt=\"图5 | 基于像素分类的分割管道概述。\n数据预处理步骤包括将原始MCD文件转换为OME–TIFF和TIFF文件。图像分割通过以下步骤完成：（i）裁剪图像，（ii）训练Ilastik分类器并提取像素概率，以及（iii）对像素概率进行细胞分割，从而生成分割掩膜。通过结合多通道图像（完整堆栈）和分割掩膜来执行单细胞数据提取。所得单细胞数据可以使用imcRtools包进行读取和分析，而多通道图像和分割掩膜可以使用cytomapper包进行可视化。BiocStickers图案根据Creative Commons CC0 1.0许可证从https://github.com/Bioconductor/BiocStickers重新印制。\"></p>\n<hr>\n<p>框1<br>原始IMC数据</p>\n<p>Hyperion成像系统生成专有MCD&#x2F;TXT格式的文件，这些文件存储在以下文件夹结构中：<br>├── {XYZ}_ROI_001_1.txt<br>├── {XYZ}_ROI_002_2.txt<br>├── {XYZ}_ROI_003_3.txt<br>├── {XYZ}.mcd</p>\n<p>在这里，{XYZ}定义了文件名，ROI_001、ROI_002、ROI_003是用户为所选ROI定义的名称（描述），而1、2、3表示唯一的采集标识符。在选择ROI时，可以在Standard BioTools软件中指定ROI描述条目。MCD文件包含所有采集到的ROI的原始成像数据和完整元数据，而每个TXT文件则包含单个ROI的数据（不包含元数据）。为了遵循一致的命名方案并捆绑所有元数据，我们建议将文件夹压缩为ZIP文件。每个ZIP文件应仅包含一个MCD文件及其对应的TXT文件，并且ZIP文件的名称应与MCD文件的名称相匹配。</p>\n<hr>\n<h2 id=\"数据预处理（特定于技术）\"><a href=\"#数据预处理（特定于技术）\" class=\"headerlink\" title=\"数据预处理（特定于技术）\"></a>数据预处理（特定于技术）</h2><p>● 选项A耗时5分钟，选项B耗时10–20分钟</p>\n<p>在本方案中，数据预处理是指从原始成像数据中提取多通道图像，并为后续处理做准备。所需步骤取决于成像技术；在此，我们展示了原始IMC数据的预处理，其中包括热点像素过滤步骤（框2）。在图像分割之前，可以进行额外的模态特异性预处理步骤，如IMC去噪62或通道间溢出校正（步骤14–21），以促进后续的图像分析步骤。以前，对于IMC数据，热点像素过滤就足以进行有效的分割。</p>\n<p>对于除IMC之外的多重组织成像模态，可以使用steinbock的预处理外部命令将外部预处理过的二维多通道图像转换为steinbock兼容的TIFF文件。例如，迭代多重组织成像方法的外部预处理通常包括诸如拼接和注册对应于单个成像周期的图像等任务63。有关更多详细信息，请参阅steinbock的在线文档。</p>\n<ol start=\"6\">\n<li><p>预处理多通道图像。<br>  （A）基于深度学习的工作流程<br> （i）在steinbock面板文件格式（表1；请参阅steinbock的在线文档）中手动创建一个panel.csv文件，并将其放置在steinbock的数据&#x2F;工作目录中。本方案中使用的完整steinbock面板文件可从<a href=\"https://zenodo.org/record/7624451%E4%B8%8B%E8%BD%BD%E3%80%82\">https://zenodo.org/record/7624451下载。</a></p>\n<p> ▲ 关键信息：在使用steinbock处理自定义IMC数据集时，可以使用steinbock的预处理imc面板命令（请参阅steinbock的在线文档），从放置在原始数据目录中的MCD&#x2F;TXT文件中自动生成模板面板文件。此命令将自动填充“通道”和“名称”列，并可作为创建有效面板文件的起点。<br> （ii）从MCD&#x2F;TXT文件中提取单个IMC采集，仅保留面板文件中“保留”列设置为1的通道。使用50的阈值过滤热点像素，并将生成的图像存储为TIFF文件。提取图像中通道的顺序由面板文件中通道的顺序（“通道”列）决定。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steinbock preprocess imc images --hpf 50</span><br></pre></td></tr></table></figure>\n<p> ◆ 故障排除</p>\n</li>\n</ol>\n<p>  （B）基于像素分类的工作流程</p>\n<pre><code>（i）创建一个包含列条目“金属标签”、“full”和“ilastik”的面板文件（表2）。一个可用于所提供数据的示例面板文件可在https://zenodo.org/record/7575859上访问。\n\n（ii）在ImcSegmentationPipeline文件夹内，激活之前创建的imc-segpipe conda环境（参见“安装说明”），并启动jupyter-lab：\n\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate imcsegpipe</span><br><span class=\"line\">jupyter lab</span><br></pre></td></tr></table></figure>\n\n（iii）按照位于“scripts/imc_preprocessing.ipynb”的脚本执行以下预处理任务：\n\n    • 根据“scripts/download_examples.ipynb”脚本下载示例数据\n    • 将文件类型从MCD转换为OME–TIFF\n    • （可选）将OME–TIFF文件转换为单通道TIFF文件，以便在histoCAT18中使用\n    • 将OME–TIFF文件转换为热点像素过滤后的多通道TIFF堆栈，用于（1）图像分析（包含在“full”列中的通道）和（2）ilastik像素分类（指定在“ilastik”列中的通道）\n    \n</code></pre>\n<hr>\n<p>框2<br>热点像素过滤<br>热点像素过滤的工作原理是将每个像素与其八邻域（即切比雪夫距离为1的相邻像素）进行比较。如果某个像素与其八个相邻像素中的最大值之间的差异超过热点像素过滤阈值，则将该像素设置为最大相邻像素值（“热点像素过滤后”）。在这里，使用的热点像素过滤阈值为50；但是，该阈值可以根据具体的数据集进行调整。</p>\n<hr>\n<p><strong>表1 | steinbock面板文件格式中的示例面板文件（摘录）</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/table1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/table1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p>每一行对应于多重成像数据中的一个通道。在IMC（多重同位素标记质量细胞成像）数据中，“通道”列指示用于标记每种抗体的独特金属同位素，该列用于将面板文件和原始数据相关联。“名称”列包含唯一、用户定义的通道名称（例如，每种抗体的蛋白质靶点），这些名称将在派生的单细胞数据和下游分析中使用。“保留”列指示应从原始数据中提取并因此保留以供下游分析哪些通道。重要的是，保留列设置为1的行的顺序将与提取的多通道图像中通道的顺序相匹配。最后，“deepcell”列指示应使用（即聚合）哪些通道，以便使用DeepCell&#x2F;Mesmer进行全自动图像分割（核通道标记为1，细胞质通道标记为2，其他&#x2F;未使用的通道该列留空）。本方案中使用的完整steinbock面板文件已从“数据下载”部分的<a href=\"https://zenodo.org/record/7624451%E4%B8%8B%E8%BD%BD%E3%80%82\">https://zenodo.org/record/7624451下载。</a></p>\n<p><strong>表2 | 基于像素分类的工作流的面板规范</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/table2.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/table2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></p>\n<p>“金属标签”列存储每个采集通道的金属同位素。“全部”和“ilastik”列设置为0或1。“全部”列中的1指定应写入图像堆栈的通道，该图像堆栈稍后将用于提取特征（也称为“全部堆栈”）。“ilastik”列中的1表示将用于Ilastik像素分类的通道，因此将用于图像分割（也称为“ilastik堆栈”）。</p>\n<h2 id=\"图像分割\"><a href=\"#图像分割\" class=\"headerlink\" title=\"图像分割\"></a>图像分割</h2><p>● 选项A耗时10–20分钟，选项B耗时2–3小时</p>\n<ol start=\"7\">\n<li>执行图像分割以检测单个细胞，生成并存储为TIFF文件的细胞掩膜。细胞掩膜是与相应输入图像大小相同的单通道灰度图像，其中对应于同一细胞的像素显示相同的灰度值（背景像素的像素值为0）。</li>\n</ol>\n<p>  （A）基于深度学习的工作流<br>    （i）使用DeepCell软件包中实现的启用深度学习的Mesmer算法，基于预训练神经网络执行全自动细胞分割。在以下命令中，将根据面板文件中的“deepcell”列对通道进行最小-最大归一化和均值聚合。</p>\n<pre><code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steinbock segment deepcell --minmax</span><br></pre></td></tr></table></figure>\n\n◆ 故障排除\n</code></pre>\n<p>  （B）基于像素分类的工作流<br>    （i）为Ilastik像素分类准备图像。</p>\n<pre><code>第一步，使用CellProfiler中的“resources/pipelines/1_prepare_ilastik.cppipe”管道为像素标记和分类准备图像。在CellProfiler中导入管道后，首先执行以下步骤：\n\n• 将“analysis/ilastik”文件夹拖放到“Images”下的窗口中\n\n• 在“输出设置”中，将“analysis/crops”文件夹设置为“默认输出文件夹”\n\n管道将读取“analysis/ilastik”文件夹中所有包含“_ilastik”后缀的多通道图像。以下步骤是管道的一部分：\n\n• 计算所有通道的平均强度，乘以100以匹配实际标记的范围，并将其作为第一通道添加到ilastik堆栈中\n\n• ilastik堆栈的像素按两倍比例放大。这将使图像中的像素数量增加四倍，并便于像素标记\n\n▲ 关键提示：为便于视觉像素标记，在使用如IMC等分辨率较低的复用成像技术时，我们建议放大像素。对于基于荧光的技术，可以跳过此步骤。\n\n• 将ilastik堆栈裁剪成较小的视野。默认情况下，这些是500×500像素的裁剪图像；对于大型数据集，较小的图像裁剪即可满足需求\n\n• 将放大的ilastik堆栈以HDF5格式（文件名以_s2.h5结尾）保存到“analysis/ilastik”文件夹中，并将裁剪后的图像保存到“analysis/crops”文件夹中\n</code></pre>\n<p>  （ii）训练和应用Ilastik像素分类器。可以在<a href=\"https://zenodo.org/record/7997296%E4%B8%8A%E8%AE%BF%E9%97%AE%E5%9C%A8%E6%8F%90%E4%BE%9B%E7%9A%84%E7%A4%BA%E4%BE%8B%E6%95%B0%E6%8D%AE%E4%B8%8A%E9%A2%84%E8%AE%AD%E7%BB%83%E7%9A%84Ilastik%E5%83%8F%E7%B4%A0%E5%88%86%E7%B1%BB%E5%99%A8%E3%80%82\">https://zenodo.org/record/7997296上访问在提供的示例数据上预训练的Ilastik像素分类器。</a></p>\n<p>  打开Ilastik并按照以下步骤操作：</p>\n<p>  • 创建一个新的“Pixel Classification”（像素分类）项目</p>\n<p>  • 在“Input Data”（输入数据）下，点击“Add New…”（添加新…）&gt;“Add separate Image(s)”（添加单独的图像），并选择“analysis&#x2F;crops”文件夹中的所有.h5文件</p>\n<p>  • 特征选择：我们一般建议选择与σ ≥ 1的所有特征</p>\n<p>  • 通过基于三类（标签1为“细胞核”，标签2为“细胞质”，标签3为“背景”）标记像素来训练Ilastik分类器。使用“Live Update”（实时更新）视图观察三类的预测结果。通过点击“Uncertainty”（不确定性）旁边的眼睛符号来观察不确定性，这将显示分类不确定性最高的区域。这些区域需要重新标记</p>\n<p>  ▲ 关键提示：为了在分割过程中分离单个细胞，建议在两个靠得很近的细胞核之间绘制一条“细胞质线”，并用“细胞质”圈住细胞核。不应标记图像的大片区域，而应跨不同细胞和组织区域相对稀疏地放置像素标签。当在细胞核&#x2F;细胞质和细胞质&#x2F;背景边界处不确定性最高，而在其他位置不确定性较低时，分类器训练良好。</p>\n<p>  • 分类器训练良好后，将预测结果导出为无符号的16位TIFF图像</p>\n<p>  • 通过选择“analysis&#x2F;ilastik”文件夹中的所有_s2.h5文件来批量处理所有文件。此步骤将生成包含图像分割像素概率的三通道（细胞核、细胞质、背景）图像</p>\n<p>（iii）分割单个细胞。</p>\n<p>将‘resources&#x2F;pipelines&#x2F;2_segment_ilastik.cppipe’流程导入CellProfiler，并执行以下步骤：</p>\n<p>•\t将‘analysis&#x2F;ilastik’文件夹拖放到“Images”（图像）窗口中<br>•\t在“Output Settings”（输出设置）中，将“Default Output Folder”（默认输出文件夹）调整为‘analysis&#x2F;cpout’<br>以下步骤将作为流程的一部分自动执行：<br>•\t读取像素概率，将其缩小以匹配初始图像的尺寸，并拆分为三个通道<br>•\t将核通道和细胞质通道相加，形成一个单一通道<br>•\t根据指定的面积阈值对细胞核进行分割和过滤<br>•\t通过扩展核分割掩码到全细胞概率的边缘来分割整个细胞<br>•\t将分割掩码作为16位单通道TIFF图像写入到‘analysis&#x2F;cpout&#x2F;masks’文件夹中<br>•\t将缩小后的像素概率图像作为16位三通道TIFF图像写入到‘analysis&#x2F;cpout&#x2F;probabilities’文件夹中<br>◆ 故障排除</p>\n<h2 id=\"单细胞数据提取\"><a href=\"#单细胞数据提取\" class=\"headerlink\" title=\"单细胞数据提取\"></a>单细胞数据提取</h2><p>● 选项A耗时5分钟，选项B耗时10分钟</p>\n<ol start=\"8\">\n<li>从分割后的图像（即多通道图像和相应细胞掩码的配对）中提取空间分辨的单细胞数据。</li>\n</ol>\n<p>(A) 基于深度学习的工作流程<br>  (i) 对于每张图像，提取每个细胞和标记物的平均像素强度。得到的细胞水平的强度值以单独的CSV文件存储（每张图像一个文件）：<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steinbock measure intensities</span><br></pre></td></tr></table></figure></p>\n<p>  (ii) 对于每张图像，提取每个细胞的形态学特征（面积、质心、长轴&#x2F;短轴长度、默认离心率；若要计算其他形态学特征，请参阅steinbock在线文档）。得到的细胞水平特征以单独的CSV文件存储（每张图像一个文件）：<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steinbock measure regionprops</span><br></pre></td></tr></table></figure></p>\n<p>  (iii) 在每张图像中，检测空间上接近的细胞。得到的空间细胞图（框3）以单独的CSV格式有向边列表存储（每张图像一个文件）：<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">steinbock measure neighbors --<span class=\"built_in\">type</span> expansion --dmax 4</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>框3</p>\n<p>空间细胞图</p>\n<p>空间细胞图（也称为“邻域图”）是有向或无向的图（网络），其中细胞对应于节点，空间上邻近的细胞通过边相连。空间细胞图可用于分析细胞表型的空间共现情况（步骤31–35）。存在多种类型的空间细胞图；此处展示的是通过像素扩展构建的无向空间细胞图，在这种图中，仅当细胞在各方向上最多扩展4个像素后“接触”时，才认为它们是相邻的。</p>\n<hr>\n<p>（B）基于像素分类的工作流程</p>\n<p>（i）测量细胞特征。</p>\n<p>“resources&#x2F;pipelines&#x2F;3_measure_mask.cppipe”流程用于测量单细胞和单图像特征。将其导入CellProfiler并执行以下步骤：</p>\n<p>•\t将“analysis&#x2F;cpout”文件夹拖放到“Images”（图像）窗口中<br>•\t在“Output Settings”（输出设置）中，将“Default Output Folder”（默认输出文件夹）调整为“analysis&#x2F;cpout”，并将“Default Input Folder”（默认输入文件夹）调整为“analysis&#x2F;cpinp”<br>以下步骤是该流程的一部分：<br>•\t以16位灰度图像的形式读取分割掩码，并在保留其原始标签的同时将其转换为对象<br>•\t通过定义的距离扩展掩码来检测每个细胞的邻居<br>•\t提取每个细胞的完整堆栈通道强度和形状特征<br>•\t提取每个细胞的概率堆栈通道强度<br>•\t提取每幅图像的完整堆栈和概率堆栈强度<br>•\t将细胞、图像和实验数据保存为CSV文件。单细胞强度值通过对应于位深度的缩放因子进行缩放。对于本方案中使用的16位无符号整数图像（uint16），这些值除以2^16 - 1 &#x3D; 65,535<br>•\t将空间细胞图导出为包含边列表的CSV文件</p>\n<p>◆ 故障排除</p>\n<h1 id=\"单细胞和空间数据分析\"><a href=\"#单细胞和空间数据分析\" class=\"headerlink\" title=\"单细胞和空间数据分析\"></a>单细胞和空间数据分析</h1><p>本节中的命令必须在R中执行，RStudio软件可以简化执行过程。</p>\n<h2 id=\"数据读取\"><a href=\"#数据读取\" class=\"headerlink\" title=\"数据读取\"></a>数据读取</h2><p>● 耗时5分钟</p>\n<ol start=\"9\">\n<li>使用imcRtools包将空间分辨的单细胞数据读入R。在本方案的其余部分，我们将继续使用下面（A）中读入的steinbock生成的数据。</li>\n</ol>\n<p>（A）读取使用steinbock工具包生成的数据</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>imcRtools<span class=\"punctuation\">)</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> read_steinbock<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/steinbock/&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>（B）读取CellProfiler生成的数据</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spe2 <span class=\"operator\">&lt;-</span> read_cpout<span class=\"punctuation\">(</span><span class=\"string\">&quot;path/to/analysis/cpout/&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键操作：调整路径以指向生成的空间分辨单细胞数据所在的位置。</p>\n<ol start=\"10\">\n<li>在读取单细胞数据后，需要对SpatialExperiment对象（框4）进行进一步处理。首先，根据图像名称和细胞标识符设置列名。患者标识符和ROI标识符以及癌症类型也保存在对象中，这些信息可以从提供的“data&#x2F;sample_metadata.csv”文件中读取。为了后续方便访问，选择了包含生物变异的通道。最后，使用1作为共因子，对每个通道和细胞的平均像素强度进行arsinh变换。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>tidyverse<span class=\"punctuation\">)</span></span><br><span class=\"line\">colnames<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> paste0<span class=\"punctuation\">(</span>spe<span class=\"operator\">$</span>sample_id<span class=\"punctuation\">,</span> <span class=\"string\">&quot;_&quot;</span><span class=\"punctuation\">,</span> spe<span class=\"operator\">$</span>ObjectNumber<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取患者元数据</span></span><br><span class=\"line\">meta <span class=\"operator\">&lt;-</span> read_csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/sample_metadata.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 从样本名称中提取患者ID和ROI ID</span></span><br><span class=\"line\">spe<span class=\"operator\">$</span>patient_id <span class=\"operator\">&lt;-</span> str_extract<span class=\"punctuation\">(</span>spe<span class=\"operator\">$</span>sample_id<span class=\"punctuation\">,</span> <span class=\"string\">&quot;Patient[1-4]&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">spe<span class=\"operator\">$</span>ROI <span class=\"operator\">&lt;-</span> str_extract<span class=\"punctuation\">(</span>spe<span class=\"operator\">$</span>sample_id<span class=\"punctuation\">,</span> <span class=\"string\">&quot;00[1-8]&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Store cancer type in SPE object</span></span><br><span class=\"line\">spe<span class=\"operator\">$</span>indication <span class=\"operator\">&lt;-</span> meta<span class=\"operator\">$</span>Indication<span class=\"punctuation\">[</span>match<span class=\"punctuation\">(</span>spe<span class=\"operator\">$</span>patient_id<span class=\"punctuation\">,</span> meta<span class=\"operator\">$</span>`Sample ID`<span class=\"punctuation\">)</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\"># Specify which channels to use for downstream analysis</span></span><br><span class=\"line\">rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel <span class=\"operator\">&lt;-</span> <span class=\"operator\">!</span>grepl<span class=\"punctuation\">(</span><span class=\"string\">&quot;DNA|Histone&quot;</span><span class=\"punctuation\">,</span> rownames<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Transform the counts</span></span><br><span class=\"line\">assay<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">asinh</span><span class=\"punctuation\">(</span>counts<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">/</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键提示 与通常使用5作为共因子的arsinh变换的CyTOF数据集相比，IMC数据集的强度通常要低得多。在这里，我们使用1作为共因子，这是对信号与噪声之间阈值的粗略估计。之前已有类似共因子值用于IMC数据9,11和MIBI数据64,65的分析。然而，对于不同类型的数据或信号强度更高&#x2F;更低的IMC数据集，需要调整这个共因子。虽然这通常是根据定性标准手动完成的，但最近已有基于细胞类型特异性标志物共表达来启发式优化共因子值的系统方法被提出66。另外，也可以在此阶段对数据应用其他数据处理方法，包括Jackson等人8所使用的对数&#x2F;平方根变换和数据截断。</p>\n<ol start=\"11\">\n<li>使用cytomapper包25将多通道图像作为CytoImageList容器读入。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>cytomapper<span class=\"punctuation\">)</span></span><br><span class=\"line\">images <span class=\"operator\">&lt;-</span> loadImages<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/steinbock/https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">channelNames<span class=\"punctuation\">(</span>images<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> rownames<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键提示 在使用steinbock工具包时，面板文件、图像和单细胞数据中的通道顺序是相同的。但是，当使用其他框架（如基于像素分类的分割方法）时，在设置通道名称时需要格外小心。</p>\n<ol start=\"12\">\n<li>将分割掩码作为CytoImageList容器读入。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">masks <span class=\"operator\">&lt;-</span> loadImages<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/steinbock/masks/&quot;</span><span class=\"punctuation\">,</span> as.is <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键提示 除非另有配置（见“故障排除”），否则steinbock工具包会将分割掩码导出为16位图像。为了正确读取16位图像，需要设置‘as.is &#x3D; TRUE’参数。在读取32位图像时，应使用默认参数设置（‘as.is &#x3D; FALSE’）。</p>\n<p>◆ 故障排除</p>\n<hr>\n<p>框4<br>R中的单细胞数据容器<br>单细胞数据可以以SpatialExperiment（默认）或SingleCellExperiment对象17,28的形式读入。每个通道和细胞的平均像素强度存储在counts槽中。列代表细胞，行代表通道。与单个细胞相关的元数据存储在colData槽中。在初始图像处理后，这些元数据包括标签（ObjectNumber）、面积和每个细胞的形态学特征。此外，sample_id条目存储了从中提取每个细胞的图像名称。该工作流程支持SpatialExperiment和SingleCellExperiment对象。这些数据对象之间的主要区别在于存储所有细胞空间位置的方式。对于SingleCellExperiment容器，位置存储在colData槽中，而SpatialExperiment容器则将它们存储在spatialCoords槽中。steinbock等工具生成的空间细胞图被读入SpatialExperiment（或SingleCellExperiment）对象的colPair槽中。最后，与通道相关的元数据存储在rowData槽中。</p>\n<hr>\n<ol start=\"13\">\n<li>对于下游的可视化和分析任务，需要在存储多通道图像和分割掩码的CytoImageList对象中添加额外的元数据。在这里，通过sample_id条目将单个图像、分割掩码和空间实验（SpatialExperiment）对象中的条目进行匹配。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从图像名称中提取患者ID</span></span><br><span class=\"line\">patient_id <span class=\"operator\">&lt;-</span> str_extract<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>images<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Patient[1-4]&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 从元数据文件中检索每位患者的癌症类型</span></span><br><span class=\"line\">indication <span class=\"operator\">&lt;-</span> meta<span class=\"operator\">$</span>Indication<span class=\"punctuation\">[</span>match<span class=\"punctuation\">(</span>patient_id<span class=\"punctuation\">,</span> meta<span class=\"operator\">$</span>`Sample ID`<span class=\"punctuation\">)</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\"># 在elementMetadata中存储患者和图像级别的信息</span></span><br><span class=\"line\">mcols<span class=\"punctuation\">(</span>images<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> mcols<span class=\"punctuation\">(</span>masks<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> DataFrame<span class=\"punctuation\">(</span>sample_id <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>images<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> patient_id <span class=\"operator\">=</span> patient_id<span class=\"punctuation\">,</span></span><br><span class=\"line\"> indication <span class=\"operator\">=</span> indication<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"溢出校正（IMC特有）\"><a href=\"#溢出校正（IMC特有）\" class=\"headerlink\" title=\"溢出校正（IMC特有）\"></a>溢出校正（IMC特有）</h2><p>● 耗时：20分钟</p>\n<p>在IMC^(24)、MIBI^(67)和CyCIF^(68)等多重免疫荧光成像中，观察到两个通道之间存在低信号溢出（也称为串扰）。溢出被定义为在主要通道中可以检测到相邻通道信号的一小部分。由于溢出与相邻通道的信号成线性关系，因此可以通过之前描述的补偿方法^(24)进行校正。此处介绍的溢出校正是IMC特有的，如果假设已采用其他溢出最小化&#x2F;校正方法，则在使用其他多重成像技术生成的数据时，可以跳过以下部分的步骤。</p>\n<p>▲ 重要提示：如果核和细胞质通道相邻，也可以在图像分割之前进行溢出校正，以避免偏差。在这种情况下，需要将溢出校正后的图像写入“img”文件夹以供steinbock重新处理。然而，基于深度学习的分割方法对相邻通道之间的微量溢出不太敏感，而基于像素分类的分割方法则学会区分真实的核&#x2F;细胞质信号和溢出信号。尽管如此，还是建议通过视觉检查确保用于分割的通道中的溢出量最小。</p>\n<ol start=\"14\">\n<li>根据Chevrier等人24的研究，从溢出玻片中读取数据进行通道间溢出校正。创建和获取溢出玻片的实验过程可见补充说明2。根据CATALYST R&#x2F;Bioconductor包69的建议，使用5作为辅因子对像素强度进行arsinh变换。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sce <span class=\"operator\">&lt;-</span> readSCEfromTXT<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/compensation/&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">assay<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">,</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">asinh</span><span class=\"punctuation\">(</span>counts<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">)</span><span class=\"operator\">/</span><span class=\"number\">5</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 重要提示：提供的溢出玻片数据是专门为此数据集获取的，不能应用于其他数据集。因此，必须为每组使用的抗体-金属螯合物以及理想情况下为每个实验获取一个溢出玻片。</p>\n<ol start=\"15\">\n<li>通过可视化每个通道和点样金属的中位像素强度来评估溢出数据的质量（图6a）。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plotSpotHeatmap<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 重要提示：评估每个通道和点样金属的中位像素强度有两个目的：首先，较小的中位像素强度（~200个计数）可能会妨碍对通道溢出的稳健估计。其次，每个点样金属（行）应在其对应的通道（列）中显示出最高的中位像素强度。</p>\n<p>◆ 故障排除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig6.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig6.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图6 | 单细胞数据和多通道图像的溢出校正。\"></p>\n<p>a，热图可视化每个通道（列）和点样金属（行）的log10转换后的中位像素强度。<br>b，热图可视化正确和错误分配给每个点样金属的像素的log10转换后的计数。x轴表示点样金属，y轴表示每个像素被分配到的金属。<br>c，通过散点图中可视化相邻通道（CD303：Yb174；Ecad：Yb173）的共检测标记强度，评估单细胞溢出校正的有效性。<br>d，图像显示了由于相邻通道溢出而产生的伪影信号。溢出校正消除了这些伪影。</p>\n<ol start=\"16\">\n<li>（可选）执行像素分箱以增加中位像素强度。这仅在像素强度过低（中位值低于约200计数）时才需要。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sce2 <span class=\"operator\">&lt;-</span> binAcrossPixels<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">,</span> bin_size <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"17\">\n<li>过滤错误分配的像素。以下步骤使用CATALYST包提供的函数对像素进行“去条形码化”处理。基于所有通道的强度分布，将像素分配给其对应的条形码，这里即为已知的金属点。此过程会识别出无法稳健分配给点样金属的像素。此类像素可视为“噪声”、“背景”或“伪影”，并应在溢出估计之前去除。需要指定点样通道（bc_key）。</li>\n</ol>\n<p>像素去条形码化的一般工作流程如下：</p>\n<p>• 为每个像素分配一个初步的金属质量<br>• 对于每个像素，估计正像素集和负像素集之间距离的截断参数<br>• 应用估计的截断值来识别真正的正像素</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>CATALYST<span class=\"punctuation\">)</span></span><br><span class=\"line\">bc_key <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.numeric</span><span class=\"punctuation\">(</span>unique<span class=\"punctuation\">(</span>sce<span class=\"operator\">$</span>sample_mass<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">bc_key <span class=\"operator\">&lt;-</span> bc_key<span class=\"punctuation\">[</span>order<span class=\"punctuation\">(</span>bc_key<span class=\"punctuation\">)</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">sce <span class=\"operator\">&lt;-</span> assignPrelim<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">,</span> bc_key <span class=\"operator\">=</span> bc_key<span class=\"punctuation\">)</span></span><br><span class=\"line\">sce <span class=\"operator\">&lt;-</span> estCutoffs<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">)</span></span><br><span class=\"line\">sce <span class=\"operator\">&lt;-</span> applyCutoffs<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"18\">\n<li>观察每个点正确和错误分配的像素数量。图6b中的热图描绘了对角线上分配给每个点的像素数量、非对角线上错误分配的像素以及第一行中无法分配给特定点的像素。对于当前数据集，所有像素要么被分配给相应的点，要么被标记为未分配。在以下代码块中，我们观察到有10%到55%的像素无法分配给其对应的点，这是可以预料的，因为点样抗体在溢出玻片上的空间分布可能是异质性的。在filterPixels函数中，minevents参数指定了正确分配的像素集被排除在溢出估计之外的阈值。correct_pixels参数指示是否将分配给除点样质量以外的质量的像素排除在溢出估计之外。默认值通常足以进行足够的像素过滤；但是，如果每个点测量的像素非常少（~100），则需要降低minevents参数的值。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>pheatmap<span class=\"punctuation\">)</span></span><br><span class=\"line\">cur_table <span class=\"operator\">&lt;-</span> table<span class=\"punctuation\">(</span>sce<span class=\"operator\">$</span>bc_id<span class=\"punctuation\">,</span> sce<span class=\"operator\">$</span>sample_mass<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 可视化正确和错误分配的像素</span></span><br><span class=\"line\">pheatmap<span class=\"punctuation\">(</span>log10<span class=\"punctuation\">(</span>cur_table <span class=\"operator\">+</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> cluster_rows <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> cluster_cols <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 计算每个点未分配像素的比例</span></span><br><span class=\"line\">cur_table<span class=\"punctuation\">[</span><span class=\"string\">&quot;0&quot;</span><span class=\"punctuation\">,</span><span class=\"punctuation\">]</span> <span class=\"operator\">/</span> colSums<span class=\"punctuation\">(</span>cur_table<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># 过滤分配给除点样质量以外的质量的像素</span></span><br><span class=\"line\">sce <span class=\"operator\">&lt;-</span> filterPixels<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">,</span> minevents <span class=\"operator\">=</span> <span class=\"number\">40</span><span class=\"punctuation\">,</span> correct_pixels <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>◆ 故障排除</p>\n<ol start=\"19\">\n<li>使用CATALYST包计算和存储溢出矩阵。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sce <span class=\"operator\">&lt;-</span> computeSpillmat<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">)</span></span><br><span class=\"line\">sm <span class=\"operator\">&lt;-</span> metadata<span class=\"punctuation\">(</span>sce<span class=\"punctuation\">)</span><span class=\"operator\">$</span>spillover_matrix</span><br></pre></td></tr></table></figure>\n\n<ol start=\"20\">\n<li>使用CATALYST包执行单细胞数据补偿。compCytof函数使用先前估计的溢出矩阵直接在单细胞强度上校正通道间的溢出。CATALYST包提供的isotope_list变量需要扩展为包含不在此列表中的同位素。通过比较校正前后相邻通道（例如Yb173和Yb174）的标记强度可视化，可以评估溢出校正的有效性（图6c）。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>dittoSeq<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>patchwork<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Specify the channel_name entry for use with CATALYST</span></span><br><span class=\"line\">rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>channel_name <span class=\"operator\">&lt;-</span> paste0<span class=\"punctuation\">(</span>rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>channel<span class=\"punctuation\">,</span> <span class=\"string\">&quot;Di&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Add the missing metal isotope to the isotope_list variable</span></span><br><span class=\"line\">isotope_list <span class=\"operator\">&lt;-</span> CATALYST<span class=\"operator\">::</span>isotope_list</span><br><span class=\"line\">isotope_list<span class=\"operator\">$</span>Ar <span class=\"operator\">&lt;-</span> 80</span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> compCytof<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> sm<span class=\"punctuation\">,</span></span><br><span class=\"line\"> transform <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> cofactor <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> isotope_list <span class=\"operator\">=</span> isotope_list<span class=\"punctuation\">,</span></span><br><span class=\"line\"> overwrite <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize biaxial plots before/after compensation</span></span><br><span class=\"line\">before <span class=\"operator\">&lt;-</span> dittoScatterPlot<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> x.var <span class=\"operator\">=</span> <span class=\"string\">&quot;Ecad&quot;</span><span class=\"punctuation\">,</span> y.var <span class=\"operator\">=</span> <span class=\"string\">&quot;CD303&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> assay.x <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">,</span> assay.y <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ggtitle<span class=\"punctuation\">(</span><span class=\"string\">&quot;Before compensation&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">after <span class=\"operator\">&lt;-</span> dittoScatterPlot<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> x.var <span class=\"operator\">=</span> <span class=\"string\">&quot;Ecad&quot;</span><span class=\"punctuation\">,</span> y.var <span class=\"operator\">=</span> <span class=\"string\">&quot;CD303&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> assay.x <span class=\"operator\">=</span> <span class=\"string\">&quot;compexprs&quot;</span><span class=\"punctuation\">,</span> assay.y <span class=\"operator\">=</span> <span class=\"string\">&quot;compexprs&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ggtitle<span class=\"punctuation\">(</span><span class=\"string\">&quot;After compensation&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">before <span class=\"operator\">+</span> after</span><br><span class=\"line\"><span class=\"comment\"># Replace uncompensated assays</span></span><br><span class=\"line\">assay<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;counts&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> assay<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;compcounts&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">assay<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> assay<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;compexprs&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">assay<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;compcounts&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> assay<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;compexprs&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"21\">\n<li>对多通道图像进行通道间溢出校正。为此，需要对先前计算得到的溢出矩阵进行调整，仅保留存储在多通道图像中的通道。通过可视化相邻通道，可以评估溢出校正的效果（图6d）。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Use mass tags as channel names</span></span><br><span class=\"line\">channelNames<span class=\"punctuation\">(</span>images<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>channel_name</span><br><span class=\"line\"><span class=\"comment\"># Adapt spillover matrix to retain channels contained</span></span><br><span class=\"line\"><span class=\"comment\"># in the multi-channel images</span></span><br><span class=\"line\">adapted_sm <span class=\"operator\">&lt;-</span> adaptSpillmat<span class=\"punctuation\">(</span>sm<span class=\"punctuation\">,</span> channelNames<span class=\"punctuation\">(</span>images<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> isotope_list <span class=\"operator\">=</span> isotope_list<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Perform image compensation</span></span><br><span class=\"line\">images_comp <span class=\"operator\">&lt;-</span> compImage<span class=\"punctuation\">(</span>images<span class=\"punctuation\">,</span> adapted_sm<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize neighboring channels before/after compensation</span></span><br><span class=\"line\">plotPixels<span class=\"punctuation\">(</span>images<span class=\"punctuation\">[</span><span class=\"number\">5</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> colour_by <span class=\"operator\">=</span> <span class=\"string\">&quot;Yb173Di&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> image_title <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>text <span class=\"operator\">=</span> <span class=\"string\">&quot;Yb173 (Ecad) - before&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> position <span class=\"operator\">=</span> <span class=\"string\">&quot;topleft&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> legend <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> bcg <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>Yb173Di <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotPixels<span class=\"punctuation\">(</span>images<span class=\"punctuation\">[</span><span class=\"number\">5</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> colour_by <span class=\"operator\">=</span> <span class=\"string\">&quot;Yb174Di&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> image_title <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>text <span class=\"operator\">=</span> <span class=\"string\">&quot;Yb174 (CD303) - before&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> position <span class=\"operator\">=</span> <span class=\"string\">&quot;topleft&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> legend <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> bcg <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>Yb174Di <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotPixels<span class=\"punctuation\">(</span>images_comp<span class=\"punctuation\">[</span><span class=\"number\">5</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> colour_by <span class=\"operator\">=</span> <span class=\"string\">&quot;Yb173Di&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> image_title <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>text <span class=\"operator\">=</span> <span class=\"string\">&quot;Yb173 (Ecad) - after&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> position <span class=\"operator\">=</span> <span class=\"string\">&quot;topleft&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> legend <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> bcg <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>Yb173Di <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotPixels<span class=\"punctuation\">(</span>images_comp<span class=\"punctuation\">[</span><span class=\"number\">5</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> colour_by <span class=\"operator\">=</span> <span class=\"string\">&quot;Yb174Di&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> image_title <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>text <span class=\"operator\">=</span> <span class=\"string\">&quot;Yb174 (CD303) - after&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> position <span class=\"operator\">=</span> <span class=\"string\">&quot;topleft&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> legend <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span> bcg <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>Yb174Di <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">4</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Switch back to using target names as channel names</span></span><br><span class=\"line\">channelNames<span class=\"punctuation\">(</span>images_comp<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> rownames<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"质控\"><a href=\"#质控\" class=\"headerlink\" title=\"质控\"></a>质控</h2><p>● 时间：10分钟</p>\n<ol start=\"22\">\n<li>在组合图像上勾勒细胞轮廓，以便对分割质量进行视觉评估（图7）。为了可视化，我们从三组图像中选取子集，并在通道归一化后，在组合图像上勾勒出所有细胞的轮廓。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">20220118</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">img_ids <span class=\"operator\">&lt;-</span> sample<span class=\"punctuation\">(</span><span class=\"built_in\">seq_len</span><span class=\"punctuation\">(</span><span class=\"built_in\">length</span><span class=\"punctuation\">(</span>images_comp<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">cur_images <span class=\"operator\">&lt;-</span> images_comp<span class=\"punctuation\">[</span>img_ids<span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\"># Normalize each channel between 0 and 1</span></span><br><span class=\"line\">cur_images <span class=\"operator\">&lt;-</span> cytomapper<span class=\"operator\">::</span>normalize<span class=\"punctuation\">(</span>cur_images<span class=\"punctuation\">,</span> separateImages <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Clip channel intensities at 0 and 0.2</span></span><br><span class=\"line\">cur_images <span class=\"operator\">&lt;-</span> cytomapper<span class=\"operator\">::</span>normalize<span class=\"punctuation\">(</span>cur_images<span class=\"punctuation\">,</span> inputRange <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">0.2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotPixels<span class=\"punctuation\">(</span>cur_images<span class=\"punctuation\">,</span></span><br><span class=\"line\"> mask <span class=\"operator\">=</span> masks<span class=\"punctuation\">[</span>img_ids<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> missing_colour <span class=\"operator\">=</span> <span class=\"string\">&quot;white&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> colour_by <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;CD163&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;CD20&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;CD3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Ecad&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;DNA1&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> colour <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>CD163 <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;black&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;yellow&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> CD20 <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;black&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> CD3 <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;black&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;green&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> Ecad <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;black&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;cyan&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> DNA1 <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;black&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;blue&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> image_title <span class=\"operator\">=</span> <span class=\"literal\">NULL</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> legend <span class=\"operator\">=</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>colour_by.title.cex <span class=\"operator\">=</span> <span class=\"number\">0.9</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> colour_by.labels.cex <span class=\"operator\">=</span> <span class=\"number\">0.9</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p> ▲ 关键信息：这种可视化方法有助于识别图像中分割错误的细胞。建议可视化多张图像并放大以评估分割质量。如果单个细胞核由其各自的细胞掩膜勾勒出来，而没有明显的细胞聚集或分裂现象，则图像分割足够准确。如果测量的标志物定位于细胞核内或在细胞内相对均匀分布，则仅对细胞核进行分割，以减少来自相邻细胞的侧向溢出。这可以选择性地与steinbock utils的expand命令（参见steinbock在线文档）结合使用，以略微扩大细胞掩膜捕获的细胞区域11,70。</p>\n<p>◆ 故障排除</p>\n<ol start=\"23\">\n<li>可视化细胞面积的分布（图8）并过滤掉小细胞。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dittoPlot<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> var <span class=\"operator\">=</span> <span class=\"string\">&quot;area&quot;</span><span class=\"punctuation\">,</span> group.by <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span> plots <span class=\"operator\">=</span> <span class=\"string\">&quot;boxplot&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> ylab<span class=\"punctuation\">(</span><span class=\"string\">&quot;细胞面积&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> xlab<span class=\"punctuation\">(</span><span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> spe<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span>spe<span class=\"operator\">$</span>area <span class=\"operator\">&gt;=</span> <span class=\"number\">5</span><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键信息：组织切片的多重成像通常不会捕获完整的细胞，而是测量细胞的切片。因此，可能无法准确代表相应细胞的小细胞切片应从分析中排除。所选阈值特定于数据集，应通过可视化细胞面积的分布进行微调。</p>\n<p>◆ 故障排除</p>\n<ol start=\"24\">\n<li>可视化每幅图像中细胞覆盖的图像区域（图9）。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 计算细胞覆盖的图像面积的比例</span></span><br><span class=\"line\">cell_density <span class=\"operator\">&lt;-</span> colData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\"> as.data.frame<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\"> group_by<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\"> <span class=\"comment\"># Compute the number of pixels covered by cells and</span></span><br><span class=\"line\"> <span class=\"comment\"># the total number of pixels</span></span><br><span class=\"line\"> summarize<span class=\"punctuation\">(</span>cell_area <span class=\"operator\">=</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>area<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> no_pixels <span class=\"operator\">=</span> mean<span class=\"punctuation\">(</span>width_px<span class=\"punctuation\">)</span> <span class=\"operator\">*</span> mean<span class=\"punctuation\">(</span>height_px<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\"> <span class=\"comment\"># Divide the total number of pixels</span></span><br><span class=\"line\"> <span class=\"comment\"># by the number of pixels covered by cells</span></span><br><span class=\"line\"> mutate<span class=\"punctuation\">(</span>covered_area <span class=\"operator\">=</span> cell_area <span class=\"operator\">/</span> no_pixels<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize the image area covered by cells per image</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>cell_density<span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> geom_point<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>sample_id<span class=\"punctuation\">,</span> covered_area<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> theme_minimal<span class=\"punctuation\">(</span>base_size <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> theme<span class=\"punctuation\">(</span>axis.text.x <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>angle <span class=\"operator\">=</span> <span class=\"number\">90</span><span class=\"punctuation\">,</span> hjust <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ylim<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ylab<span class=\"punctuation\">(</span><span class=\"string\">&quot;% covered area&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> xlab<span class=\"punctuation\">(</span><span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键信息：在选择致密组织区域进行采集时，我们预期图像像素的大部分将被细胞覆盖。然而，由于稀疏组织结构（如血管）的存在或组织丢失，覆盖比例可能会降低。</p>\n<p>◆ 故障排除</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig7.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig7.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图7 | 分割质量的视觉评估。在由六种标志物（CD163，黄色，髓系细胞；CD20，红色，B细胞；CD3，绿色，T细胞；E-钙粘蛋白，青色，上皮细胞；DNA1，蓝色，细胞核）伪彩色合成的图像上勾勒出分割后的细胞轮廓。\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig8.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig8.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图8 | 细胞面积分布。以箱线图的形式显示每幅图像（x轴）上的细胞面积分布（y轴）。黑条表示中位数，铰链表示分布的第一四分位数和第三四分位数。\"></p>\n<ol start=\"25\">\n<li>可视化选定标志物在样本间的染色差异。结合低维细胞可视化（步骤26），图10显示了样本间标志物表达的差异。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">multi_dittoPlot<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> vars <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;HLADR&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;CD3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Ecad&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;PDGFRb&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> group.by <span class=\"operator\">=</span> <span class=\"string\">&quot;patient_id&quot;</span><span class=\"punctuation\">,</span> plots <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;ridgeplot&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> assay <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"26\">\n<li>可视化单细胞的低维嵌入。这里，我们使用scater包58来计算均匀流形近似和投影（UMAP）嵌入，并在低维空间中可视化细胞（图11a）。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>scater<span class=\"punctuation\">)</span></span><br><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">220225</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> runUMAP<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> subset_row <span class=\"operator\">=</span> rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel<span class=\"punctuation\">,</span></span><br><span class=\"line\"> exprs_values <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize the UMAP embedding and color cells by patient ID</span></span><br><span class=\"line\">dittoDimPlot<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> var <span class=\"operator\">=</span> <span class=\"string\">&quot;patient_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> reduction.use <span class=\"operator\">=</span> <span class=\"string\">&quot;UMAP&quot;</span><span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> <span class=\"number\">0.2</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ggtitle<span class=\"punctuation\">(</span><span class=\"string\">&quot;Patient ID on UMAP&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig9.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig9.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图9 | 每幅图像中细胞覆盖的图像区域可视化。显示每幅图像（x轴）上细胞覆盖的像素比例（y轴）。\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig10.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig10.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图10 | 患者间标志物分布差异的可视化。脊线图显示了数据集中每个患者选定标志物的每个细胞的arsinh转换平均像素强度分布。\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig11.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig11.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图11 | 单细胞的低维表示。a，按患者标识符着色的单细胞的UMAP表示。b，经过fastMNN批次校正后按患者着色的UMAP表示。\"></p>\n<p>▲ 关键信息：在UMAP可视化（步骤25-26，图10和11a）中，标志物分布的差异或非重叠样本可能表明样本间的染色差异或生物学差异。当样本处理方式不同或使用不同批次的抗体混合物进行染色时，可能会出现染色差异。</p>\n<p>◆ 故障排除</p>\n<ol start=\"27\">\n<li>执行批次校正以消除样本间的差异（图11b）。这里，我们使用batchelor包的fastMNN方法30。在以下代码块中，为了可重复性，在设置种子后依次执行非确定性的fastMNN和runUMAP函数。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>batchelor<span class=\"punctuation\">)</span></span><br><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">220228</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Perform batch correction</span></span><br><span class=\"line\">out <span class=\"operator\">&lt;-</span> fastMNN<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> batch <span class=\"operator\">=</span> spe<span class=\"operator\">$</span>patient_id<span class=\"punctuation\">,</span></span><br><span class=\"line\"> auto.merge <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> subset.row <span class=\"operator\">=</span> rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel<span class=\"punctuation\">,</span></span><br><span class=\"line\"> assay.type <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Store corrected embeddings in SPE object</span></span><br><span class=\"line\">reducedDim<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;fastMNN&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> reducedDim<span class=\"punctuation\">(</span>out<span class=\"punctuation\">,</span> <span class=\"string\">&quot;corrected&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Compute UMAP on corrected embeddings</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> runUMAP<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> dimred<span class=\"operator\">=</span> <span class=\"string\">&quot;fastMNN&quot;</span><span class=\"punctuation\">,</span> name <span class=\"operator\">=</span> <span class=\"string\">&quot;UMAP_mnnCorrected&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize corrected UMAP</span></span><br><span class=\"line\">dittoDimPlot<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> var <span class=\"operator\">=</span> <span class=\"string\">&quot;patient_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> reduction.use <span class=\"operator\">=</span> <span class=\"string\">&quot;UMAP_mnnCorrected&quot;</span><span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> <span class=\"number\">0.2</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ggtitle<span class=\"punctuation\">(</span><span class=\"string\">&quot;Patient ID on UMAP after correction&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键信息：需要视觉评估批次校正的准确性，以估计是否除了技术变异外还消除了生物变异。这可以通过根据已知在某些细胞表型中表达的标志物对UMAP嵌入进行着色来实现。这些标志物应在UMAP嵌入中聚类的细胞中表达。可以使用其他批次效应校正方法来改进数据整合71,72。</p>\n<p>◆ 故障排除</p>\n<h2 id=\"细胞表型分析\"><a href=\"#细胞表型分析\" class=\"headerlink\" title=\"细胞表型分析\"></a>细胞表型分析</h2><p>● 时间：选项A需30分钟，选项B需1-2小时（更大数据集需要更多时间）</p>\n<ol start=\"28\">\n<li>定义细胞表型。为此，可以对单细胞进行聚类（A）或通过分类进行表型分析（B）。</li>\n</ol>\n<p>（A）通过聚类进行细胞表型分析</p>\n<p>使用bluster和scran R&#x2F;Bioconductor包59中的函数进行基于图的聚类。另外，也可以使用其他方法，如phenograph53或FlowSOM73对单细胞进行聚类。</p>\n<p>（i）在批次校正后的细胞嵌入上估计基于图的聚类的最佳聚类参数。我们遍历聚类参数的所有可能组合（图12），包括要考虑的最近邻数（k）和边权重方法（类型）。我们保持社区检测算法（cluster.fun）固定，因为Louvain方法74是基于图的聚类中最常用的算法之一。为了评估聚类的稳定性，我们计算所有细胞的平均轮廓宽度，并选择平均轮廓宽度最高的聚类参数组合。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig12.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig12.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图12 | 用于最优参数估计的聚类参数遍历。数据集使用四种聚类参数组合（x轴）进行聚类。对于每种组合，计算了所有细胞的平均轮廓宽度。较高的值表示聚类分离度更好。\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>bluster<span class=\"punctuation\">)</span></span><br><span class=\"line\">library<span class=\"punctuation\">(</span>BiocParallel<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Select the corrected cell embeddings for clustering</span></span><br><span class=\"line\">mat <span class=\"operator\">&lt;-</span> reducedDim<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;fastMNN&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Perform the cluster sweep</span></span><br><span class=\"line\">combinations <span class=\"operator\">&lt;-</span> clusterSweep<span class=\"punctuation\">(</span>mat<span class=\"punctuation\">,</span> BLUSPARAM<span class=\"operator\">=</span>SNNGraphParam<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> k<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">10L</span><span class=\"punctuation\">,</span> <span class=\"number\">20L</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> type <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;rank&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;jaccard&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> cluster.fun <span class=\"operator\">=</span> <span class=\"string\">&quot;louvain&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> BPPARAM <span class=\"operator\">=</span> SerialParam<span class=\"punctuation\">(</span>RNGseed <span class=\"operator\">=</span> <span class=\"number\">230214</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Compute the average silhouette width per parameter combination</span></span><br><span class=\"line\">sil <span class=\"operator\">&lt;-</span> vapply<span class=\"punctuation\">(</span>as.list<span class=\"punctuation\">(</span>combinations<span class=\"operator\">$</span>clusters<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> mean<span class=\"punctuation\">(</span>approxSilhouette<span class=\"punctuation\">(</span>mat<span class=\"punctuation\">,</span> x<span class=\"punctuation\">)</span><span class=\"operator\">$</span>width<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize the average silhouette width per parameter</span></span><br><span class=\"line\"><span class=\"comment\"># combination</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>data.frame<span class=\"punctuation\">(</span>method <span class=\"operator\">=</span> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>sil<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> sil <span class=\"operator\">=</span> sil<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> geom_point<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>method<span class=\"punctuation\">,</span> sil<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> theme_classic<span class=\"punctuation\">(</span>base_size <span class=\"operator\">=</span> <span class=\"number\">15</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> theme<span class=\"punctuation\">(</span>axis.text.x <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>angle <span class=\"operator\">=</span> <span class=\"number\">45</span><span class=\"punctuation\">,</span> hjust <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> xlab<span class=\"punctuation\">(</span><span class=\"string\">&quot;Cluster parameter combination&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ylab<span class=\"punctuation\">(</span><span class=\"string\">&quot;Average silhouette width&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键信息：对于每个数据集，应独立进行参数估计。对于大型数据集，该函数运行时间较长，为了近似处理，可以对数据集进行子采样以加快聚类遍历的速度。</p>\n<p>（ii）基于所选参数，使用基于图的算法对细胞进行聚类。如前所述，将参数设置为k&#x3D;20和类型“rank”应该能得到分离度较好的聚类。然后，将聚类标识符保存在SpatialExperiment对象中。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>scran<span class=\"punctuation\">)</span></span><br><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">220621</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">clusters <span class=\"operator\">&lt;-</span> clusterCells<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> use.dimred <span class=\"operator\">=</span> <span class=\"string\">&quot;fastMNN&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> BLUSPARAM <span class=\"operator\">=</span> SNNGraphParam<span class=\"punctuation\">(</span>k <span class=\"operator\">=</span> <span class=\"number\">20</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> cluster.fun <span class=\"operator\">=</span> <span class=\"string\">&quot;louvain&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> type <span class=\"operator\">=</span> <span class=\"string\">&quot;rank&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">spe<span class=\"operator\">$</span>nn_clusters <span class=\"operator\">&lt;-</span> clusters</span><br></pre></td></tr></table></figure>\n\n<p>◆ 故障排除</p>\n<p>（iii）为了根据各聚类中包含的细胞表型对其进行注释，可以以热图的形式可视化每个聚类的标志物表达（图13）。为了可视化目的，从数据集中随机选择了2000个细胞。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>viridis<span class=\"punctuation\">)</span></span><br><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">220619</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">cur_cells <span class=\"operator\">&lt;-</span> sample<span class=\"punctuation\">(</span><span class=\"built_in\">seq_len</span><span class=\"punctuation\">(</span>ncol<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">2000</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">dittoHeatmap<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span>cur_cells<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> genes <span class=\"operator\">=</span> rownames<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span>rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> assay <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">,</span> scale <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> heatmap.colors <span class=\"operator\">=</span> viridis<span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> annot.by <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;nn_clusters&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;patient_id&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig13.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig13.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图13 | 聚类特异性表达模式的可视化。2000个随机选取的细胞的arsinh转换后的标志物表达显示出聚类特异性的表达模式。每一列代表一个单独的细胞，每一行包含一个单独的标志物。细胞根据其所属的聚类和患者ID进行标记。\"></p>\n<p>（iv）在观察到聚类特异性表达模式后，可以对各个聚类进行注释。例如，聚类12显示出B细胞标志物CD20的高表达，因此可以标记为“Bcell”。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cluster_celltype <span class=\"operator\">&lt;-</span> recode<span class=\"punctuation\">(</span>spe<span class=\"operator\">$</span>nn_clusters<span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;1&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Tumor_proliferating&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;2&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Myeloid&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;3&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Tumor&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;4&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Tumor&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;5&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Stroma&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;6&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Proliferating&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;7&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Myeloid&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;8&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Plasma_cell&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;9&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;CD8&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;10&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;CD4&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;11&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Neutrophil&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;12&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Bcell&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;13&quot;</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Stroma&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>（B）基于分类的细胞表型分析</p>\n<p>（i）使用cytomapper包中包含的cytomapperShiny函数，根据标志物的表达来界定单个细胞的表型。对于每张图像，细胞根据其标志物表达的层次结构进行界定，以定义预期的细胞表型。然后，将界定的细胞以轮廓的形式显示在伪彩色合成图像上。一旦正确标记了细胞，就可以将它们作为仅包含选定细胞的SpatialExperiment对象下载。在下载时，可以指定细胞标签，该标签存储在colData插槽的cytomapper_CellLabel条目中，以便稍后用于训练分类器（步骤28B(iv)）。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cytomapperShiny<span class=\"punctuation\">(</span>object <span class=\"operator\">=</span> spe<span class=\"punctuation\">,</span> mask <span class=\"operator\">=</span> masks<span class=\"punctuation\">,</span> image <span class=\"operator\">=</span> images_comp<span class=\"punctuation\">,</span></span><br><span class=\"line\"> cell_id <span class=\"operator\">=</span> <span class=\"string\">&quot;ObjectNumber&quot;</span><span class=\"punctuation\">,</span> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键信息：由于分割不完全，侧向溢出会导致某些标志物的表达水平不正确。因此，我们建议仅对表达其特定细胞表型标志物的细胞进行界定。</p>\n<p>（ii）读取包含界定细胞的文件，并将它们合并成一个SpatialExperiment对象。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>SingleCellExperiment<span class=\"punctuation\">)</span></span><br><span class=\"line\">label_files <span class=\"operator\">&lt;-</span> list.files<span class=\"punctuation\">(</span><span class=\"string\">&quot;data/gated_cells&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> full.names <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span> pattern <span class=\"operator\">=</span> <span class=\"string\">&quot;.rds$&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Read in individual files containing gated cells</span></span><br><span class=\"line\">spes <span class=\"operator\">&lt;-</span> lapply<span class=\"punctuation\">(</span>label_files<span class=\"punctuation\">,</span> readRDS<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Concatenate the individual objects into one</span></span><br><span class=\"line\">concat_spe <span class=\"operator\">&lt;-</span> do.call<span class=\"punctuation\">(</span><span class=\"string\">&quot;cbind&quot;</span><span class=\"punctuation\">,</span> spes<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>（iii）移除被多次标记的细胞，并重新分配肿瘤细胞。由于采用多步骤标记方法，一些细胞可能被标记了多次。在细胞同时被标记为肿瘤细胞和免疫细胞的情况下，我们保留免疫细胞标签，因为这些细胞很可能是驻留在肿瘤内的免疫细胞。所有其他被多次标记的细胞都被移除。最后，将标签存储在主要的SpatialExperiment对象中。我们首先定义一个辅助函数，该函数返回仅被标记一次的细胞的标签。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter_labels <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>object<span class=\"punctuation\">,</span></span><br><span class=\"line\"> label <span class=\"operator\">=</span> <span class=\"string\">&quot;cytomapper_CellLabel&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"> cur_tab <span class=\"operator\">&lt;-</span> <span class=\"built_in\">unclass</span><span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>colnames<span class=\"punctuation\">(</span>object<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> object<span class=\"punctuation\">[[</span>label<span class=\"punctuation\">]</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"> cur_labels <span class=\"operator\">&lt;-</span> colnames<span class=\"punctuation\">(</span>cur_tab<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span>apply<span class=\"punctuation\">(</span>cur_tab<span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> which.max<span class=\"punctuation\">)</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"> <span class=\"built_in\">names</span><span class=\"punctuation\">(</span>cur_labels<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> rownames<span class=\"punctuation\">(</span>cur_tab<span class=\"punctuation\">)</span></span><br><span class=\"line\"> cur_labels <span class=\"operator\">&lt;-</span> cur_labels<span class=\"punctuation\">[</span>rowSums<span class=\"punctuation\">(</span>cur_tab<span class=\"punctuation\">)</span> <span class=\"operator\">==</span> <span class=\"number\">1</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"> <span class=\"built_in\">return</span><span class=\"punctuation\">(</span>cur_labels<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来，应用此函数来检索所有仅被标记一次的细胞。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">labels <span class=\"operator\">&lt;-</span> filter_labels<span class=\"punctuation\">(</span>concat_spe<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>再次对所有细胞应用该函数，同时排除“Tumor”标签。这种方法可以识别那些既被标记为肿瘤细胞又被标记为免疫细胞的细胞。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cur_spe <span class=\"operator\">&lt;-</span> concat_spe<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span>concat_spe<span class=\"operator\">$</span>cytomapper_CellLabel <span class=\"operator\">!=</span> <span class=\"string\">&quot;Tumor&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">non_tumor_labels <span class=\"operator\">&lt;-</span> filter_labels<span class=\"punctuation\">(</span>cur_spe<span class=\"punctuation\">)</span></span><br><span class=\"line\">additional_cells <span class=\"operator\">&lt;-</span> setdiff<span class=\"punctuation\">(</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>non_tumor_labels<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>labels<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>最后，将两组细胞标签合并并存储在SpatialExperiment对象中。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">final_labels <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span>labels<span class=\"punctuation\">,</span> non_tumor_labels<span class=\"punctuation\">[</span>additional_cells<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Transfer labels to SPE object</span></span><br><span class=\"line\">spe_labels <span class=\"operator\">&lt;-</span> <span class=\"built_in\">rep</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;unlabeled&quot;</span><span class=\"punctuation\">,</span> ncol<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>spe_labels<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> colnames<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span></span><br><span class=\"line\">spe_labels<span class=\"punctuation\">[</span><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>final_labels<span class=\"punctuation\">)</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> final_labels</span><br><span class=\"line\">spe<span class=\"operator\">$</span>cell_labels <span class=\"operator\">&lt;-</span> spe_labels</span><br></pre></td></tr></table></figure>\n\n<p>（iv）为未标记细胞的表型分类训练一个随机森林分类器。首先，将细胞分为标记细胞和未标记细胞。然后，我们对标记细胞进行75&#x2F;25的划分，以分别选择训练集和测试集。基于训练集，我们进行五折交叉验证来调整随机森林模型的参数。在以下代码块中，为了可重复性，在设置随机种子后，依次执行了非确定性的createDataPartition函数和train函数。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>caret<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Split between labeled and unlabeled cells</span></span><br><span class=\"line\">lab_spe <span class=\"operator\">&lt;-</span> spe<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span>spe<span class=\"operator\">$</span>cell_labels <span class=\"operator\">!=</span> <span class=\"string\">&quot;unlabeled&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">unlab_spe <span class=\"operator\">&lt;-</span> spe<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span>spe<span class=\"operator\">$</span>cell_labels <span class=\"operator\">==</span> <span class=\"string\">&quot;unlabeled&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\"># Randomly split into train and test data</span></span><br><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">221029</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">trainIndex <span class=\"operator\">&lt;-</span> createDataPartition<span class=\"punctuation\">(</span>factor<span class=\"punctuation\">(</span>lab_spe<span class=\"operator\">$</span>cell_labels<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">p <span class=\"operator\">=</span> <span class=\"number\">0.75</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">train_spe <span class=\"operator\">&lt;-</span> lab_spe<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span>trainIndex<span class=\"operator\">$</span>Resample1<span class=\"punctuation\">]</span></span><br><span class=\"line\">test_spe <span class=\"operator\">&lt;-</span> lab_spe<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span><span class=\"operator\">-</span>trainIndex<span class=\"operator\">$</span>Resample1<span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"comment\"># Define fit parameters for 5-fold cross validation</span></span><br><span class=\"line\">fitControl <span class=\"operator\">&lt;-</span> trainControl<span class=\"punctuation\">(</span>method <span class=\"operator\">=</span> <span class=\"string\">&quot;cv&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> number <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Select the arsinh-transformed counts for training</span></span><br><span class=\"line\">cur_mat <span class=\"operator\">&lt;-</span> t<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>train_spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span></span><br><span class=\"line\">rowData<span class=\"punctuation\">(</span>train_spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel<span class=\"punctuation\">,</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Train a random forest classifier</span></span><br><span class=\"line\">rffit <span class=\"operator\">&lt;-</span> train<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> cur_mat<span class=\"punctuation\">,</span></span><br><span class=\"line\"> y <span class=\"operator\">=</span> factor<span class=\"punctuation\">(</span>train_spe<span class=\"operator\">$</span>cell_labels<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> method <span class=\"operator\">=</span> <span class=\"string\">&quot;rf&quot;</span><span class=\"punctuation\">,</span> ntree <span class=\"operator\">=</span> <span class=\"number\">1000</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> tuneLength <span class=\"operator\">=</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> trControl <span class=\"operator\">=</span> fitControl<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>◆ 故障排除</p>\n<p>（v）通过计算测试集的混淆矩阵来评估分类器的性能。confusionMatrix函数将预测的细胞标签与真实的细胞标签进行比较，并计算多个性能指标。期望每个细胞表型标签都具有高灵敏度和高特异性。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Select the arsinh-transformed counts of the test data</span></span><br><span class=\"line\">cur_mat <span class=\"operator\">&lt;-</span> t<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>test_spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span></span><br><span class=\"line\">rowData<span class=\"punctuation\">(</span>test_spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel<span class=\"punctuation\">,</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Predict the cell phenotype labels of the test data</span></span><br><span class=\"line\">cur_pred <span class=\"operator\">&lt;-</span> predict<span class=\"punctuation\">(</span>rffit<span class=\"punctuation\">,</span> newdata <span class=\"operator\">=</span> cur_mat<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Compute the confusion matrix between predicted</span></span><br><span class=\"line\"><span class=\"comment\"># and actual labels</span></span><br><span class=\"line\">confusionMatrix<span class=\"punctuation\">(</span>data <span class=\"operator\">=</span> cur_pred<span class=\"punctuation\">,</span></span><br><span class=\"line\"> reference <span class=\"operator\">=</span> factor<span class=\"punctuation\">(</span>test_spe<span class=\"operator\">$</span>cell_labels<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> mode <span class=\"operator\">=</span> <span class=\"string\">&quot;everything&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>（vi）预测未标记细胞的标签。对于最高类别概率低于40%的细胞，将其标记为“未知”。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Select the arsinh-transformed counts of</span></span><br><span class=\"line\"><span class=\"comment\"># the unlabeled data for prediction</span></span><br><span class=\"line\">cur_mat <span class=\"operator\">&lt;-</span> t<span class=\"punctuation\">(</span>assay<span class=\"punctuation\">(</span>unlab_spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span></span><br><span class=\"line\">rowData<span class=\"punctuation\">(</span>unlab_spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel<span class=\"punctuation\">,</span><span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Predict the cell phenotype labels of the unlabeled data</span></span><br><span class=\"line\">cell_class <span class=\"operator\">&lt;-</span> <span class=\"built_in\">as.character</span><span class=\"punctuation\">(</span>predict<span class=\"punctuation\">(</span>rffit<span class=\"punctuation\">,</span></span><br><span class=\"line\"> newdata <span class=\"operator\">=</span> cur_mat<span class=\"punctuation\">,</span></span><br><span class=\"line\"> type <span class=\"operator\">=</span> <span class=\"string\">&quot;raw&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"built_in\">names</span><span class=\"punctuation\">(</span>cell_class<span class=\"punctuation\">)</span> <span class=\"operator\">&lt;-</span> rownames<span class=\"punctuation\">(</span>cur_mat<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Extract prediction probabilities for each cell</span></span><br><span class=\"line\">cell_prob <span class=\"operator\">&lt;-</span> predict<span class=\"punctuation\">(</span>rffit<span class=\"punctuation\">,</span></span><br><span class=\"line\"> newdata <span class=\"operator\">=</span> cur_mat<span class=\"punctuation\">,</span></span><br><span class=\"line\"> type <span class=\"operator\">=</span> <span class=\"string\">&quot;prob&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Label cells with a low prediction probability as undefined</span></span><br><span class=\"line\">cell_class<span class=\"punctuation\">[</span>rowMax<span class=\"punctuation\">(</span>as.matrix<span class=\"punctuation\">(</span>cell_prob<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">&lt;</span> <span class=\"number\">0.4</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> <span class=\"string\">&quot;undefined&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># Store cell phenotype labels in SPE object</span></span><br><span class=\"line\">cell_labels <span class=\"operator\">&lt;-</span> spe<span class=\"operator\">$</span>cell_labels</span><br><span class=\"line\">cell_labels<span class=\"punctuation\">[</span>colnames<span class=\"punctuation\">(</span>unlab_spe<span class=\"punctuation\">)</span><span class=\"punctuation\">]</span> <span class=\"operator\">&lt;-</span> cell_class</span><br><span class=\"line\">spe<span class=\"operator\">$</span>celltype <span class=\"operator\">&lt;-</span> cell_labels</span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键信息：将细胞标记为未定义的阈值需要根据每个数据集进行调整。当预测更多的细胞类别时，阈值可能会降低；而当预测较少的类别时，阈值可以相应提高。</p>\n<ol start=\"29\">\n<li>在UMAP嵌入上可视化细胞表型和注释后的聚类标签，以定性评估细胞表型（图14）。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> dittoDimPlot<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> var <span class=\"operator\">=</span> <span class=\"string\">&quot;celltype&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> reduction.use <span class=\"operator\">=</span> <span class=\"string\">&quot;UMAP_mnnCorrected&quot;</span><span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> <span class=\"number\">0.2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> do.label <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ggtitle<span class=\"punctuation\">(</span><span class=\"string\">&quot;Cell types on UMAP, integrated cells&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">p2 <span class=\"operator\">&lt;-</span> dittoDimPlot<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> var <span class=\"operator\">=</span> <span class=\"string\">&quot;cluster_celltype&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> reduction.use <span class=\"operator\">=</span> <span class=\"string\">&quot;UMAP_mnnCorrected&quot;</span><span class=\"punctuation\">,</span> size <span class=\"operator\">=</span> <span class=\"number\">0.2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> do.label <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> ggtitle<span class=\"punctuation\">(</span><span class=\"string\">&quot;Cluster cell types on UMAP, integrated cells&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> p2</span><br></pre></td></tr></table></figure>\n\n<ol start=\"30\">\n<li>以热图的形式可视化每个细胞表型和每个注释后的聚类的平均标志物表达（图15）。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>scuttle<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Calculate the mean of the arsinh-transformed counts per cell phenotype</span></span><br><span class=\"line\">celltype_mean <span class=\"operator\">&lt;-</span> aggregateAcrossCells<span class=\"punctuation\">(</span>as<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;SingleCellExperiment&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> ids <span class=\"operator\">=</span> spe<span class=\"operator\">$</span>celltype<span class=\"punctuation\">,</span></span><br><span class=\"line\">  statistics <span class=\"operator\">=</span> <span class=\"string\">&quot;mean&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> use.assay.type <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> subset_row <span class=\"operator\">=</span> rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel<span class=\"punctuation\">)</span></span><br><span class=\"line\">dittoHeatmap<span class=\"punctuation\">(</span>celltype_mean<span class=\"punctuation\">,</span></span><br><span class=\"line\"> assay <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">,</span> cluster_cols <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> scale <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> heatmap.colors <span class=\"operator\">=</span> viridis<span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> annot.by <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;celltype&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ncells&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Calculate the mean of the arsinh-transformed counts per annotated </span></span><br><span class=\"line\"><span class=\"comment\"># cluster</span></span><br><span class=\"line\"> cluster_mean <span class=\"operator\">&lt;-</span> aggregateAcrossCells<span class=\"punctuation\">(</span>as<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> <span class=\"string\">&quot;SingleCellExperiment&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> ids <span class=\"operator\">=</span> spe<span class=\"operator\">$</span>cluster_celltype<span class=\"punctuation\">,</span></span><br><span class=\"line\"> statistics <span class=\"operator\">=</span> <span class=\"string\">&quot;mean&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> use.assay.type <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> subset_row <span class=\"operator\">=</span> rowData<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">)</span><span class=\"operator\">$</span>use_channel<span class=\"punctuation\">)</span></span><br><span class=\"line\">dittoHeatmap<span class=\"punctuation\">(</span>cluster_mean<span class=\"punctuation\">,</span></span><br><span class=\"line\"> assay <span class=\"operator\">=</span> <span class=\"string\">&quot;exprs&quot;</span><span class=\"punctuation\">,</span> cluster_cols <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> scale <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> heatmap.colors <span class=\"operator\">=</span> viridis<span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> annot.by <span class=\"operator\">=</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;cluster_celltype&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;ncells&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键信息：我们期望单个细胞表型能够显示出其特异性标志物的最高平均表达。此外，在如UMAP这样的低维嵌入中，细胞表型应能在视觉上被区分开来。</p>\n<p>◆ 故障排除</p>\n<h2 id=\"空间分析\"><a href=\"#空间分析\" class=\"headerlink\" title=\"空间分析\"></a>空间分析</h2><p>● 预计时间：20分钟</p>\n<p>本方案介绍了一系列空间分析方法，旨在研究细胞在组织环境中的分布情况。如需概览，请见图16。</p>\n<ol start=\"31\">\n<li>使用Jackson等人提出的空间群落分析方法8（图17），并借助imcRtools软件包提供的detectCommunity函数。该方法通过先前构建的空间细胞图，仅根据细胞在组织中的位置对细胞进行分组。我们分别对肿瘤细胞和非肿瘤细胞进行了群落检测。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig14.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig14.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14 | UMAP嵌入上展示的细胞表型。a，细胞在低维UMAP空间中展示，并根据通过细胞分类确定的表型进行着色。b，UMAP空间中的细胞根据其注释的聚类标识符进行着色。\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig15.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig15.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图15 | 平均标志物表达热图。a，热图可视化了通过细胞分类定义的每个细胞表型的平均arsinh转换后的标志物表达。b，热图展示了每个注释聚类的平均arsinh转换后的标志物表达。\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Define if cells are part of the tumor or stroma</span></span><br><span class=\"line\">spe<span class=\"operator\">$</span>tumor_stroma <span class=\"operator\">&lt;-</span> ifelse<span class=\"punctuation\">(</span>spe<span class=\"operator\">$</span>celltype <span class=\"operator\">==</span> <span class=\"string\">&quot;Tumor&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Tumor&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Stroma&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Detect spatial communities</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> detectCommunity<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> colPairName <span class=\"operator\">=</span> <span class=\"string\">&quot;neighborhood&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> size_threshold <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> group_by <span class=\"operator\">=</span> <span class=\"string\">&quot;tumor_stroma&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> BPPARAM <span class=\"operator\">=</span> SerialParam<span class=\"punctuation\">(</span>RNGseed <span class=\"operator\">=</span> <span class=\"number\">220819</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize spatial tumor communities</span></span><br><span class=\"line\">plotSpatial<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">[</span><span class=\"punctuation\">,</span>spe<span class=\"operator\">$</span>celltype <span class=\"operator\">==</span> <span class=\"string\">&quot;Tumor&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;spatial_community&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_size_fix <span class=\"operator\">=</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> theme<span class=\"punctuation\">(</span>legend.position <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> scale_color_manual<span class=\"punctuation\">(</span>values <span class=\"operator\">=</span> rev<span class=\"punctuation\">(</span>colors<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>在检测到空间群落之后，可以进行一系列下游分析。这些分析包括（i）计算用于元聚类的每个群落的细胞表型比例，（ii）识别样本间的共享群落以进行比较分析，以及（iii）计算单个群落的大小以估计组织分隔。</p>\n<ol start=\"32\">\n<li>按照Schürch等人10和Goltsev等人5的提议执行拷贝数（CN）分析（图18）。拷贝数是具有特征细胞表型组成的组织区域，它们代表了独特的局部生物过程和相互作用的位点。我们首先基于细胞的质心构建一个空间20近邻图，与先前使用steinbock构建的空间细胞图相比，该图包含了更多的邻居。然后，使用imcRtools包的aggregateNeighbors函数计算每个细胞在其20近邻中的细胞表型比例。接着，使用k均值聚类对细胞进行聚类以检测拷贝数。最后，可以根据细胞的拷贝数对其进行空间可视化和着色，并计算每个拷贝数的细胞表型比例。在图18中，拷贝数3代表B细胞的空间聚集，而拷贝数1主要包含肿瘤组织。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig16.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig16.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图16 | 空间分析方法的输入、可解释性和输出。本方案强调了一系列用于研究组织结构的空间分析方法。所提供的函数需要SpatialExperiment或SingleCellExperiment对象作为输入，并在内部使用存储在对象的colData、spatialCoords和colPairs槽中的信息。每个任务下的示例图像下方展示了一些可以解决的生物学问题。各个分析方法的输出要么是添加了额外colData条目的SpatialExperiment对象，要么是数据框。\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct a 20-nearest neighbor graph</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> buildSpatialGraph<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span> type <span class=\"operator\">=</span> <span class=\"string\">&quot;knn&quot;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">k <span class=\"operator\">=</span> <span class=\"number\">20</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Compute the fraction of cell phenotypes in each cells neighborhood</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> aggregateNeighbors<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> colPairName <span class=\"operator\">=</span> <span class=\"string\">&quot;knn_interaction_graph&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> aggregate_by <span class=\"operator\">=</span> <span class=\"string\">&quot;metadata&quot;</span><span class=\"punctuation\">,</span> count_by <span class=\"operator\">=</span> <span class=\"string\">&quot;celltype&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">set.seed<span class=\"punctuation\">(</span><span class=\"number\">220705</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Cluster cells based on cell phenotype fractions</span></span><br><span class=\"line\">cn_1 <span class=\"operator\">&lt;-</span> kmeans<span class=\"punctuation\">(</span>spe<span class=\"operator\">$</span>aggregatedNeighbors<span class=\"punctuation\">,</span> centers <span class=\"operator\">=</span> <span class=\"number\">6</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">spe<span class=\"operator\">$</span>cn_celltypes <span class=\"operator\">&lt;-</span> as.factor<span class=\"punctuation\">(</span>cn_1<span class=\"operator\">$</span>cluster<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize cellular neighborhoods</span></span><br><span class=\"line\">plotSpatial<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;cn_celltypes&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_size_fix <span class=\"operator\">=</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> scale_color_brewer<span class=\"punctuation\">(</span>palette <span class=\"operator\">=</span> <span class=\"string\">&quot;Set3&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Compute the fraction of cell phenotypes in each cellular </span></span><br><span class=\"line\"><span class=\"comment\"># neighborhood</span></span><br><span class=\"line\">mat <span class=\"operator\">&lt;-</span> prop.table<span class=\"punctuation\">(</span>table<span class=\"punctuation\">(</span>spe<span class=\"operator\">$</span>cn_celltypes<span class=\"punctuation\">,</span> spe<span class=\"operator\">$</span>celltype<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> margin <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize cell phenotype fractions in each cellular neighborhood</span></span><br><span class=\"line\">pheatmap<span class=\"punctuation\">(</span>mat<span class=\"punctuation\">,</span></span><br><span class=\"line\"> color <span class=\"operator\">=</span> colorRampPalette<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;dark blue&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;white&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;dark red&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> scale <span class=\"operator\">=</span> <span class=\"string\">&quot;column&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>▲ 关键步骤：与第28步类似，应通过参数扫描来估计k的最优值。但是，如果事先了解要检测的组织结构，则可以相应地设置k值。或者，也可以根据细胞邻域内细胞的平均标志物表达来对细胞进行聚类。此外，lisaClust R&#x2F;Bioconductor包还提供了检测拷贝数（CNs）的其他策略75。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig17.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig17.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图17 | 空间肿瘤群落。使用先前构建的空间细胞图，根据肿瘤细胞的空间位置将其聚类成群落，并根据其空间群落标识符进行着色。\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig18.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig18.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图18 | 细胞邻域检测。a，根据细胞20个最近邻中的细胞表型频率对细胞进行聚类，并根据其细胞邻域进行着色。b，热图展示了每个细胞邻域内的细胞表型比例。列数据已进行z分数标准化。\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig19.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig19.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图19 | 空间背景检测。a，根据细胞的空间背景进行着色，空间背景定义为可在每个细胞邻域中找到的拷贝数（CNs）的组合（例如，处于SC 1_6中的细胞是位于CN 1和CN 6之间的细胞）。b，空间背景图显示了哪些空间背景存在相互作用。节点的颜色由每个空间背景中的细胞数量决定。\"></p>\n<ol start=\"33\">\n<li>按照Bhate等人19的提议执行空间背景（SC）分析（图19）。空间背景建立在拷贝数（CNs）的概念之上，是拷贝数的局部生物过程相互作用并发生特殊生物事件的区域。我们构建了第二个k近邻图，其中k值较大（k&#x3D;40），以包含可在生物信号交换的长度尺度上的细胞。对于每个细胞，aggregateNeighbors函数计算其40个最近邻中拷贝数的比例。detectSpatialContext函数将拷贝数比例从高到低排序，并将每个细胞的空间背景分配为累积超过用户定义阈值（此处为0.9）的最小拷贝数组合。在过滤检测到的空间背景后，我们可以对其进行空间可视化，并将空间背景相互作用表示为分层图。我们观察到，SC 1（以肿瘤为主）、SC 1_6（肿瘤与肿瘤-间质界面）和SC 4_5（浆细胞&#x2F;T细胞和髓系细胞&#x2F;中性粒细胞界面）是该数据集中最常见的空间背景。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct a 40-nearest neighbor graph</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> buildSpatialGraph<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> type <span class=\"operator\">=</span> <span class=\"string\">&quot;knn&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> name <span class=\"operator\">=</span> <span class=\"string\">&quot;knn_spatialcontext_graph&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> k <span class=\"operator\">=</span> <span class=\"number\">40</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Compute the fraction of cellular neighborhoods around each cell</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> aggregateNeighbors<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> colPairName <span class=\"operator\">=</span> <span class=\"string\">&quot;knn_spatialcontext_graph&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> aggregate_by <span class=\"operator\">=</span> <span class=\"string\">&quot;metadata&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> count_by <span class=\"operator\">=</span> <span class=\"string\">&quot;cn_celltypes&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> name <span class=\"operator\">=</span> <span class=\"string\">&quot;aggregatedNeighborhood&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Detect spatial contexts</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> detectSpatialContext<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> entry <span class=\"operator\">=</span> <span class=\"string\">&quot;aggregatedNeighborhood&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> threshold <span class=\"operator\">=</span> <span class=\"number\">0.90</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> name <span class=\"operator\">=</span> <span class=\"string\">&quot;spatial_context&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Filter out small and infrequent spatial contexts</span></span><br><span class=\"line\">spe <span class=\"operator\">&lt;-</span> filterSpatialContext<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> entry <span class=\"operator\">=</span> <span class=\"string\">&quot;spatial_context&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> group_by <span class=\"operator\">=</span> <span class=\"string\">&quot;patient_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> group_threshold <span class=\"operator\">=</span> <span class=\"number\">3</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> cells_threshold <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> name <span class=\"operator\">=</span> <span class=\"string\">&quot;spatial_context_filtered&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize cell location colored by their spatial context</span></span><br><span class=\"line\">plotSpatial<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;spatial_context_filtered&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_size_fix <span class=\"operator\">=</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize spatial contexts as graph</span></span><br><span class=\"line\">plotSpatialContext<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> entry <span class=\"operator\">=</span> <span class=\"string\">&quot;spatial_context_filtered&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> group_by <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;n_cells&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_size_by <span class=\"operator\">=</span> <span class=\"string\">&quot;n_group&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_label_color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;n_cells&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> scale_color_viridis<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"34\">\n<li>按照Hoch等人11的提议执行斑块检测分析（图20）。imcRtools包的patchDetection函数检测感兴趣细胞的完全连接成分，在每个成分周围构造凹包，并将此凹包扩展以包含相邻细胞。在下文中，我们检测包含至少十个细胞的连接肿瘤成分，并稍微扩展凹包以包含斑块内的细胞。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spe <span class=\"operator\">&lt;-</span> patchDetection<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> patch_cells <span class=\"operator\">=</span> spe<span class=\"operator\">$</span>celltype <span class=\"operator\">==</span> <span class=\"string\">&quot;Tumor&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> expand_by <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> min_patch_size <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> colPairName <span class=\"operator\">=</span> <span class=\"string\">&quot;neighborhood&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">plotSpatial<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_color_by <span class=\"operator\">=</span> <span class=\"string\">&quot;patch_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> img_id <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> node_size_fix <span class=\"operator\">=</span> <span class=\"number\">0.5</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> theme<span class=\"punctuation\">(</span>legend.position <span class=\"operator\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> scale_color_manual<span class=\"punctuation\">(</span>values <span class=\"operator\">=</span> rev<span class=\"punctuation\">(</span>colors<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"35\">\n<li>按照Schapiro等人18的提议执行相互作用分析（图21）。该方法检测与细胞表型的随机分布相比表现出更强（“相互作用”）或更弱（“避免”）共定位的细胞表型对。使用先前构建的空间细胞图（此处为使用steinbock创建的图），imcRtools包的testInteraction函数计算每幅图像中每对细胞表型的平均相互作用次数，并将其与通过随机置换所有细胞标签获得的经验空分布进行比较。返回的数据框包含每幅图像中每对细胞表型的一个条目，指示经验P值和统计显著性（相互作用：1；无显著性：0；避免：-1）。这些显著性值可以跨所有图像求和，并以热图的形式可视化。我们观察到，肿瘤细胞大多被分隔开，并与其他细胞类型相互避免，而调节性T细胞则位于CD4+ T细胞和CD8+ T细胞旁边。</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig20.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig20.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图20 | 空间斑块检测。检测出肿瘤细胞的完全连接成分以及位于肿瘤斑块内的细胞。每个细胞根据其斑块标识符进行着色。\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig21.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/287e/fig21.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图21 | 细胞-细胞相互作用测试。热图显示了所有图像中每对细胞表型的显著性值之和。每幅图像和每对细胞表型的显著性值定义如下：1表示相互作用的细胞表型（红色）；0表示无相互作用或避免（白色）；-1表示细胞表型之间的避免（蓝色）。这些显著性值在所有14幅图像中相加，得出的可能范围在-14到14之间。\"></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>scales<span class=\"punctuation\">)</span></span><br><span class=\"line\">out <span class=\"operator\">&lt;-</span> testInteractions<span class=\"punctuation\">(</span>spe<span class=\"punctuation\">,</span></span><br><span class=\"line\"> group_by <span class=\"operator\">=</span> <span class=\"string\">&quot;sample_id&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> label <span class=\"operator\">=</span> <span class=\"string\">&quot;celltype&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> colPairName <span class=\"operator\">=</span> <span class=\"string\">&quot;neighborhood&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> BPPARAM <span class=\"operator\">=</span> SerialParam<span class=\"punctuation\">(</span>RNGseed <span class=\"operator\">=</span> <span class=\"number\">221029</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Sum interaction values across all images</span></span><br><span class=\"line\">summed_sigvals <span class=\"operator\">&lt;-</span> out <span class=\"operator\">%&gt;%</span> as_tibble<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\"> group_by<span class=\"punctuation\">(</span>from_label<span class=\"punctuation\">,</span> to_label<span class=\"punctuation\">)</span> <span class=\"operator\">%&gt;%</span></span><br><span class=\"line\"> summarize<span class=\"punctuation\">(</span>sum_sigval <span class=\"operator\">=</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>sigval<span class=\"punctuation\">,</span> na.rm <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\"># Visualize summed interaction values in form of a heatmap</span></span><br><span class=\"line\">ggplot<span class=\"punctuation\">(</span>summed_sigvals<span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> geom_tile<span class=\"punctuation\">(</span>aes<span class=\"punctuation\">(</span>from_label<span class=\"punctuation\">,</span> to_label<span class=\"punctuation\">,</span> fill <span class=\"operator\">=</span> sum_sigval<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> scale_fill_gradient2<span class=\"punctuation\">(</span>low <span class=\"operator\">=</span> muted<span class=\"punctuation\">(</span><span class=\"string\">&quot;blue&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> mid <span class=\"operator\">=</span> <span class=\"string\">&quot;white&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> high <span class=\"operator\">=</span> muted<span class=\"punctuation\">(</span><span class=\"string\">&quot;red&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span></span><br><span class=\"line\"> theme<span class=\"punctuation\">(</span>axis.text.x <span class=\"operator\">=</span> element_text<span class=\"punctuation\">(</span>angle <span class=\"operator\">=</span> <span class=\"number\">45</span><span class=\"punctuation\">,</span> hjust <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>◆ 故障排除</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li>Windhager J , Zanotelli V R T , Schulz D ,et al.An end-to-end workflow for multiplexed image processing and analysis[J].Nature Protocols, 2023, 18(11).DOI:10.1038&#x2F;s41596-023-00881-0.</li>\n</ul>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"图像识别","path":"api/tags/图像识别.json"},{"name":"单细胞测序","path":"api/tags/单细胞测序.json"}]},{"title":"Shiny从入门到入定——16-Escaping the graph","slug":"Shiny从入门到入定——16-Escaping-the-graph","date":"2024-09-26T14:05:28.000Z","updated":"2024-09-26T14:29:29.863Z","comments":true,"path":"api/articles/Shiny从入门到入定——16-Escaping-the-graph.json","excerpt":null,"keywords":null,"cover":"https://d33wubrfki0l68.cloudfront.net/df8aa242946fb586f90d40d735dd0ea497a56b4d/0d739/diagrams/reactivity-tracking/invalidate-1.png","content":"<h1 id=\"跳出反应式图\"><a href=\"#跳出反应式图\" class=\"headerlink\" title=\"跳出反应式图\"></a>跳出反应式图</h1><h2 id=\"16-1-引言\"><a href=\"#16-1-引言\" class=\"headerlink\" title=\"16.1 引言\"></a>16.1 引言</h2><p>Shiny的反应式编程框架极其有用，因为它能自动确定在输入变化时更新所有输出所需的最小计算集。但这个框架也故意施加了一些限制，有时你需要摆脱这些限制去做一些有风险但必要的事情。</p>\n<p>在本章中，你将学习如何结合<a href=\"https://rdrr.io/pkg/shiny/man/reactiveValues.html\">reactiveValues()</a>和<code>observe()</code>&#x2F;<code>observeEvent()</code>将反应式图的右侧连接到左侧。这些技术之所以强大，是因为它们让你能够手动控制图的一部分。但它们也很危险，因为它们会让你的应用做不必要的工作。最重要的是，你现在可以创建无限循环，让你的应用陷入永无止境的更新循环中。</p>\n<p>如果你发现本章中探讨的想法很有趣，你可能还想看看<a href=\"https://github.com/hadley/shinySignals/\">shinySignals</a>和<a href=\"https://github.com/jcheng5/rxtools\">rxtools</a>包。这两个都是实验性包，旨在探索“高阶”反应式，即通过其他反应式编程创建的反应式。我不建议你在“真实”应用中使用它们，但阅读源代码可能会很有启发性。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"16-2-反应式图没有捕获什么？\"><a href=\"#16-2-反应式图没有捕获什么？\" class=\"headerlink\" title=\"16.2 反应式图没有捕获什么？\"></a>16.2 反应式图没有捕获什么？</h2><p>在第14.4节中，我们讨论了当用户导致输入失效时会发生什么。作为应用开发者，你可能还有两个重要的情况需要使输入失效：</p>\n<ul>\n<li><p>你调用一个更新函数并设置值参数。这会向浏览器发送消息以更改输入的值，然后通知R输入值已更改。</p>\n</li>\n<li><p>你修改了一个反应式值（使用<code>reactiveVal()</code>或<code>reactiveValues()</code>创建）的值。</p>\n</li>\n</ul>\n<p>重要的是要理解，在这两种情况下，反应式值和观察者之间并没有创建反应式依赖关系。虽然这些操作会导致图失效，但它们并没有通过新的连接被记录下来。</p>\n<p>为了具体说明这个想法，请考虑以下简单的应用，其反应式图如图16.1所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;nm&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;clr&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Clear&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;hi&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  hi <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>paste0<span class=\"punctuation\">(</span><span class=\"string\">&quot;Hi &quot;</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>nm<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>hi <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span>hi<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>clr<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    updateTextInput<span class=\"punctuation\">(</span>session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;nm&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/df8aa242946fb586f90d40d735dd0ea497a56b4d/0d739/diagrams/reactivity-tracking/invalidate-1.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/df8aa242946fb586f90d40d735dd0ea497a56b4d/0d739/diagrams/reactivity-tracking/invalidate-1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图16.1 反应式图没有记录未命名观察者和nm输入之间的连接；这种依赖关系超出了它的范围\"></p>\n<p>当你按下清除按钮时会发生什么？</p>\n<ul>\n<li><code>input$clr</code>失效，然后观察者也会失效。</li>\n<li>观察者重新计算，重新建立对<code>input$clr</code>的依赖，并告诉浏览器更改输入控件的值。</li>\n<li>浏览器更改nm的值。</li>\n<li><code>input$nm</code>失效，导致<code>hi()</code>失效，然后是<code>output$hi</code>。</li>\n<li><code>output$hi</code>重新计算，强制<code>hi()</code>重新计算。</li>\n</ul>\n<p>这些操作都没有改变反应式图，所以它仍然如图16.1所示，并且图没有捕获从观察者到<code>input$nm</code>的连接。</p>\n<h2 id=\"16-3-案例研究\"><a href=\"#16-3-案例研究\" class=\"headerlink\" title=\"16.3 案例研究\"></a>16.3 案例研究</h2><p>接下来，让我们看一些有用的案例，在这些案例中，你可能需要结合<code>reactiveValues()</code>和<code>observeEvent()</code>或<code>observe()</code>来解决一些非常具有挑战性（甚至不可能）的问题。这些是你的应用中有用的模板。</p>\n<h3 id=\"16-3-1-多个输入修改一个输出\"><a href=\"#16-3-1-多个输入修改一个输出\" class=\"headerlink\" title=\"16.3.1 多个输入修改一个输出\"></a>16.3.1 多个输入修改一个输出</h3><p>首先，我们将解决一个非常简单的问题：我希望有一个文本框，它可以由多个事件更新。</p>\n<figure class=\"highlight plaintext\"><figcaption><span><- fluidPage(</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  actionButton(&quot;drink&quot;, &quot;drink me&quot;),</span><br><span class=\"line\">  actionButton(&quot;eat&quot;, &quot;eat me&quot;),</span><br><span class=\"line\">  textOutput(&quot;notice&quot;)</span><br><span class=\"line\">)</span><br><span class=\"line\">server &lt;- function(input, output, session) &#123;</span><br><span class=\"line\">  r &lt;- reactiveValues(notice = &quot;&quot;)</span><br><span class=\"line\">  observeEvent(input$drink, &#123;</span><br><span class=\"line\">    r$notice &lt;- &quot;You are no longer thirsty&quot;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  observeEvent(input$eat, &#123;</span><br><span class=\"line\">    r$notice &lt;- &quot;You are no longer hungry&quot;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  output$notice &lt;- renderText(r$notice)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在下一个例子中，事情会变得稍微复杂一些，我们有一个应用，其中有两个按钮，分别用于增加和减少值。我们使用<code>reactiveValues()</code>来存储当前值，然后使用<code>observeEvent()</code>在按下相应的按钮时增加或减少该值。这里的主要额外复杂性在于，<code>r$n</code>的新值取决于之前的值。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;up&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;up&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;down&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;down&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>n <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>up<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    r<span class=\"operator\">$</span>n <span class=\"operator\">&lt;-</span> r<span class=\"operator\">$</span>n <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>down<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    r<span class=\"operator\">$</span>n <span class=\"operator\">&lt;-</span> r<span class=\"operator\">$</span>n <span class=\"operator\">-</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>n <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>图16.2显示了此示例的反应式图。再次注意，反应式图不包括从观察者到反应式值<code>n</code>的任何连接。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/11c52cd6c1484323dcac858b7e003cc437ed83ae/3dcbe/diagrams/reactivity-components/button.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/11c52cd6c1484323dcac858b7e003cc437ed83ae/3dcbe/diagrams/reactivity-components/button.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图16.2 反应式图不捕获从观察者到输入值的连接\"></p>\n<h3 id=\"16-3-2-累加输入\"><a href=\"#16-3-2-累加输入\" class=\"headerlink\" title=\"16.3.2 累加输入\"></a>16.3.2 累加输入</h3><p>如果你想通过累加数据来支持数据输入，那么这也是一个类似的模式。这里的主要区别在于，我们使用<a href=\"https://rdrr.io/pkg/shiny/man/updateTextInput.html\">updateTextInput()</a>在用户点击添加按钮后重置文本框。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;add&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;add&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;names&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span><span class=\"built_in\">names</span> <span class=\"operator\">=</span> character<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>add<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    r<span class=\"operator\">$</span><span class=\"built_in\">names</span> <span class=\"operator\">&lt;-</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>name<span class=\"punctuation\">,</span> r<span class=\"operator\">$</span><span class=\"built_in\">names</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateTextInput<span class=\"punctuation\">(</span>session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span><span class=\"built_in\">names</span> <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span><span class=\"built_in\">names</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>我们可以让这个应用更加实用，方法是提供一个删除按钮，并确保添加按钮不会创建重复的名称：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  textInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;add&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;add&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;del&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;delete&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;names&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span><span class=\"built_in\">names</span> <span class=\"operator\">=</span> character<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>add<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    r<span class=\"operator\">$</span><span class=\"built_in\">names</span> <span class=\"operator\">&lt;-</span> union<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span><span class=\"built_in\">names</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>name<span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateTextInput<span class=\"punctuation\">(</span>session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>del<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    r<span class=\"operator\">$</span><span class=\"built_in\">names</span> <span class=\"operator\">&lt;-</span> setdiff<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span><span class=\"built_in\">names</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>name<span class=\"punctuation\">)</span></span><br><span class=\"line\">    updateTextInput<span class=\"punctuation\">(</span>session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;name&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span><span class=\"built_in\">names</span> <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span><span class=\"built_in\">names</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"16-3-3-暂停动画\"><a href=\"#16-3-3-暂停动画\" class=\"headerlink\" title=\"16.3.3 暂停动画\"></a>16.3.3 暂停动画</h3><p>另一个常见的用例是提供一个开始和停止按钮，以便你控制一些重复发生的事件。此示例使用运行中的反应式值来控制数字是否递增，并使用<code>invalidateLater()</code>来确保在运行时每250毫秒使观察者失效一次。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;start&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;start&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;stop&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;stop&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;n&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>running <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">,</span> n <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>start<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    r<span class=\"operator\">$</span>running <span class=\"operator\">&lt;-</span> <span class=\"literal\">TRUE</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observeEvent<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>stop<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    r<span class=\"operator\">$</span>running <span class=\"operator\">&lt;-</span> <span class=\"literal\">FALSE</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>running<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      r<span class=\"operator\">$</span>n <span class=\"operator\">&lt;-</span> isolate<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span> <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\">      invalidateLater<span class=\"punctuation\">(</span><span class=\"number\">250</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>n <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>n<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>请注意，在这种情况下，我们不能轻松地使用<code>observeEvent()</code>，因为我们需要根据<code>running()</code>是TRUE还是FALSE来执行不同的操作。由于我们不能使用<code>observeEvent()</code>，因此我们必须使用<code>isolate()</code>——如果我们不使用它，这个观察者还会对<code>n</code>产生反应式依赖，而<code>n</code>正是它更新的对象，因此它会陷入无限循环。</p>\n<p>希望这些示例能让你对使用<code>reactiveValues()</code>和<code>observe()</code>进行编程有所感受。它非常直观：当发生这种情况时，执行那个操作；当发生那种情况时，执行另一个操作。这在小范围内更容易理解，但当更大的部分开始交互时就更难理解了。因此，一般来说，你会希望尽可能少地使用它，并将其隔离开来，以便尽可能少的观察者修改反应式值。</p>\n<h3 id=\"16-3-4-练习\"><a href=\"#16-3-4-练习\" class=\"headerlink\" title=\"16.3.4 练习\"></a>16.3.4 练习</h3><p>提供一个服务器函数，当点击“normal”时，绘制100个正态分布的随机数的直方图，当点击“uniform”时，绘制100个均匀分布的随机数。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;rnorm&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Normal&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;runif&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Uniform&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>修改你上面的代码以使其与以下UI一起工作：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;type&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;Normal&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;Uniform&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;go&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;go&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;plot&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>根据你之前的答案重写代码，以消除对<code>observe()</code>&#x2F;<code>observeEvent()</code>的使用，而仅使用<code>reactive()</code>。为什么你可以在第二个UI中这样做，而在第一个UI中却不能？</p>\n<h2 id=\"16-4-反模式-Anti-patterns\"><a href=\"#16-4-反模式-Anti-patterns\" class=\"headerlink\" title=\"16.4 反模式 (Anti-patterns)\"></a>16.4 反模式 (Anti-patterns)</h2><p>一旦你掌握了这种模式，就很容易养成坏习惯：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>df <span class=\"operator\">=</span> cars<span class=\"punctuation\">)</span></span><br><span class=\"line\">  observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    r<span class=\"operator\">$</span>df <span class=\"operator\">&lt;-</span> head<span class=\"punctuation\">(</span>cars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>nrows<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span>plot<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>df<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>table <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>df<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在这个简单的例子中，与使用<code>reactive()</code>的替代方案相比，这段代码并没有做太多额外的工作：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  df <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>head<span class=\"punctuation\">(</span>cars<span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>nrows<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>plot <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span>plot<span class=\"punctuation\">(</span>df<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>table <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span>df<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>但仍然存在两个缺点：</p>\n<ul>\n<li><p>如果表格或图表位于当前不可见的标签页中，观察者仍然会绘制&#x2F;显示它们。</p>\n</li>\n<li><p>如果<code>head()</code>函数出错，<code>observe()</code>将终止应用，但<code>reactive()</code>会传播错误，以便显示。然而，如果<code>reactive()</code>抛出错误，它不会被传播。</p>\n</li>\n</ul>\n<p>随着应用变得越来越复杂，情况会逐渐变得更糟。很容易退回到第13.2.3节中描述的事件驱动编程情况。你最终会花费大量精力来分析应用中的事件流，而不是依赖Shiny自动为你处理。</p>\n<p>比较这两个反应式图是有启发性的。图16.3显示了第一个示例的图。这是误导性的，因为它看起来不像<code>nrows</code>与<code>df()</code>有连接。使用如图16.4所示的反应式，可以很容易地看到它们之间的精确连接。拥有一个尽可能简单的反应式图对于人类和Shiny来说都很重要。简单的图对人类来说更容易理解，对Shiny来说也更容易优化。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/f86c5d20efbea98c76a10026851060db8cbede2d/d2245/diagrams/reactivity-components/danger.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/f86c5d20efbea98c76a10026851060db8cbede2d/d2245/diagrams/reactivity-components/danger.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图16.3 使用响应式值和观察者会导致图表的一部分断开连接\"></p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/216ca90acb1508ba9e1d7ee23d9db15becdb2ef2/ced9f/diagrams/reactivity-components/danger-2.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/216ca90acb1508ba9e1d7ee23d9db15becdb2ef2/ced9f/diagrams/reactivity-components/danger-2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图16.4 使用响应式编程使得组件之间的依赖关系非常清晰\"></p>\n<h2 id=\"16-5-总结\"><a href=\"#16-5-总结\" class=\"headerlink\" title=\"16.5 总结\"></a>16.5 总结</h2><p>在过去的四章中，您深入了解了Shiny使用的响应式编程模型。您学习了为什么响应式编程很重要（它允许Shiny仅完成所需的工作，不多也不少），以及响应式图的细节。您还稍微了解了一些基本构建块在内部的工作原理，以及如何在需要时利用它们来摆脱响应式图的限制。</p>\n<p>在接下来的七章中，您将学习如何保持Shiny应用程序的可维护性、性能和安全性，随着其规模和影响力的不断增长。</p>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“85d7”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]},{"title":"Shiny从入门到入定——15-Reactive building blocks","slug":"Shiny从入门到入定——15-Reactive-building-blocks","date":"2024-09-26T14:00:23.000Z","updated":"2024-09-26T14:29:29.863Z","comments":true,"path":"api/articles/Shiny从入门到入定——15-Reactive-building-blocks.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"15-反应式构建块\"><a href=\"#15-反应式构建块\" class=\"headerlink\" title=\"15 反应式构建块\"></a>15 反应式构建块</h1><p>既然你已经理解了反应式图背后的理论，并且有了一些实践经验，那么现在是时候更详细地讨论反应式如何融入R编程语言中了。反应式编程有三个基本构建块：<code>反应式值</code>、<code>反应式表达式</code>和<code>观察者</code>。你已经看到了反应式值和表达式的大部分重要部分，所以本章将花更多时间讨论观察者和输出（你将了解到输出是一种特殊的观察者）。你还将学习控制反应式图的另外两个工具：<code>隔离</code>和<code>定时无效化</code>。</p>\n<p>本章将再次使用反应式控制台，这样我们就可以直接在控制台中试验反应式，而无需每次都启动一个Shiny应用程序。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>shiny<span class=\"punctuation\">)</span></span><br><span class=\"line\">reactiveConsole<span class=\"punctuation\">(</span><span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"15-1-反应式值\"><a href=\"#15-1-反应式值\" class=\"headerlink\" title=\"15.1 反应式值\"></a>15.1 反应式值</h2><p>反应式值有两种类型：</p>\n<ul>\n<li><p>使用<a href=\"https://rdrr.io/pkg/shiny/man/reactiveVal.html\">reactiveVal()</a>创建的单个反应式值。</p>\n</li>\n<li><p>使用<a href=\"https://rdrr.io/pkg/shiny/man/reactiveValues.html\">reactiveValues()</a>创建的反应式值列表。</p>\n</li>\n</ul>\n<p>它们在获取和设置值时的接口略有不同：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">x<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"comment\"># get</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 10</span></span><br><span class=\"line\">x<span class=\"punctuation\">(</span><span class=\"number\">20</span><span class=\"punctuation\">)</span>     <span class=\"comment\"># set</span></span><br><span class=\"line\">x<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"comment\"># get</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 20</span></span><br><span class=\"line\"></span><br><span class=\"line\">r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">r<span class=\"operator\">$</span>x       <span class=\"comment\"># get</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 10</span></span><br><span class=\"line\">r<span class=\"operator\">$</span>x <span class=\"operator\">&lt;-</span> 20 <span class=\"comment\"># set</span></span><br><span class=\"line\">r<span class=\"operator\">$</span>x       <span class=\"comment\"># get</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 20</span></span><br></pre></td></tr></table></figure>\n\n<p>不幸的是，这两个类似的对象有着截然不同的接口，但没有办法将它们标准化。然而，尽管它们看起来不同，但行为是相同的，所以你可以根据自己的语法偏好来选择使用哪一个。在本书中，我使用<code>reactiveValues()</code>，因为它的语法一目了然，但在我的代码中，我倾向于使用<code>reactiveVal()</code>，因为它的语法清楚地表明正在发生一些不寻常的事情。</p>\n<p>重要的是要注意，这两种类型的反应式值都具有所谓的引用语义。大多数R对象在修改时具有复制语义，这意味着如果你将相同的值赋给两个名称，一旦你修改了其中一个，连接就会断开：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a1 <span class=\"operator\">&lt;-</span> a2 <span class=\"operator\">&lt;-</span> 10</span><br><span class=\"line\">a2 <span class=\"operator\">&lt;-</span> 20</span><br><span class=\"line\">a1 <span class=\"comment\"># 未改变</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 10</span></span><br></pre></td></tr></table></figure>\n\n<p>但反应式值则不是这样——它们总是保持对相同值的引用，因此修改任何副本都会修改所有值：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b1 <span class=\"operator\">&lt;-</span> b2 <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>x <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">b1<span class=\"operator\">$</span>x <span class=\"operator\">&lt;-</span> 20</span><br><span class=\"line\">b2<span class=\"operator\">$</span>x</span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 20</span></span><br></pre></td></tr></table></figure>\n\n<p>我们将在第16章中讨论为什么你可能需要创建自己的反应式值。否则，你将遇到的大多数反应式值都将来自<code>server</code>函数的输入参数。这些与你自己创建的<code>reactiveValues()</code>略有不同，因为它们是只读的：你不能修改这些值，因为Shiny会根据浏览器中的用户操作自动更新它们。</p>\n<h3 id=\"15-1-1-练习\"><a href=\"#15-1-1-练习\" class=\"headerlink\" title=\"15.1.1 练习\"></a>15.1.1 练习</h3><ul>\n<li><p>这两个反应式值列表之间有什么区别？比较获取和设置单个反应式值的语法。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">l1 <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>a <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span> b <span class=\"operator\">=</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">l2 <span class=\"operator\">&lt;-</span> <span class=\"built_in\">list</span><span class=\"punctuation\">(</span>a <span class=\"operator\">=</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> b <span class=\"operator\">=</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设计并执行一个小实验，以验证<code>reactiveVal()</code>也具有引用语义。</p>\n</li>\n</ul>\n<h2 id=\"15-2-反应式表达式\"><a href=\"#15-2-反应式表达式\" class=\"headerlink\" title=\"15.2 反应式表达式\"></a>15.2 反应式表达式</h2><p>回忆一下，反应式有两个重要特性：它是<code>惰性</code>的并且具有<code>缓存</code>。这意味着它只有在真正需要时才会工作，如果连续调用两次，它会返回之前的值。</p>\n<p>我们还没有涵盖两个重要的细节：反应式表达式如何处理错误，以及为什么<code>on.exit()</code>在它们内部有效。</p>\n<h3 id=\"15-2-1-错误\"><a href=\"#15-2-1-错误\" class=\"headerlink\" title=\"15.2.1 错误\"></a>15.2.1 错误</h3><p>反应式表达式以与缓存值完全相同的方式缓存错误。例如，考虑这个反应式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>stop<span class=\"punctuation\">(</span><span class=\"string\">&quot;Error occured at &quot;</span><span class=\"punctuation\">,</span> Sys.time<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> call. <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">r<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Error: Error occured at 2022-08-23 23:10:12</span></span><br></pre></td></tr></table></figure>\n\n<p>如果我们等待一两秒钟，我们可以看到我们得到了与之前相同的错误：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sys.sleep<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">r<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; Error: Error occured at 2022-08-23 23:10:12</span></span><br></pre></td></tr></table></figure>\n\n<p>在反应式图中，错误的处理方式与值相同：错误通过反应式图传播的方式与常规值完全相同。唯一的区别是当错误遇到输出或观察者时会发生什么：</p>\n<ul>\n<li>输出中的错误将在应用程序中显示。</li>\n<li>观察者中的错误将导致当前会话终止。如果你不希望发生这种情况，你需要将代码包装在<code>try()</code>或<code>tryCatch()</code>中。</li>\n</ul>\n<p>这个相同的系统还支持<code>req()</code>（第8.1.2节），它发出一种特殊类型的错误。这种特殊错误会导致观察者和输出停止它们正在做的事情，但不会导致失败。默认情况下，它会使输出重置为其初始空白状态，但如果你使用<code>req(..., cancelOutput = TRUE)</code>，它们将保留其当前显示。</p>\n<h3 id=\"15-2-2-on-exit\"><a href=\"#15-2-2-on-exit\" class=\"headerlink\" title=\"15.2.2 on.exit()\"></a>15.2.2 on.exit()</h3><p>你可以将<code>reactive(x())</code>视为<code>function() x()</code>的快捷方式，它自动添加了惰性和缓存。这主要在你想要了解Shiny是如何实现的时候很重要，但这也意味着你可以使用那些只能在函数内部工作的函数。其中最有用的是<code>on.exit()</code>，它允许你在反应式表达式完成时运行代码，无论反应式是否成功返回错误或失败。这就是<code>on.exit()</code>在第8.2.2节中工作的原因。</p>\n<h3 id=\"15-2-3-练习\"><a href=\"#15-2-3-练习\" class=\"headerlink\" title=\"15.2.3 练习\"></a>15.2.3 练习</h3><ul>\n<li><p>使用<code>reactlog</code>包来观察以下应用程序中错误通过反应式传播的情况，确认它遵循与值传播相同的规则。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  checkboxInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;error&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;error?&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;result&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  a <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>error<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      stop<span class=\"punctuation\">(</span><span class=\"string\">&quot;Error!&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  b <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>a<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"built_in\">c</span> <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>b<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>result <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改上述应用程序，使用<code>req()</code>代替<code>stop()</code>。验证事件是否仍然以相同的方式传播。当你使用<code>cancelOutput</code>参数时会发生什么？</p>\n</li>\n</ul>\n<h2 id=\"15-3-观察者和输出\"><a href=\"#15-3-观察者和输出\" class=\"headerlink\" title=\"15.3 观察者和输出\"></a>15.3 观察者和输出</h2><p>观察者和输出是反应式图中的终端节点。它们在两个重要方面与反应式表达式不同：</p>\n<ul>\n<li><p>它们是急切的且健忘的——它们尽可能快地运行，并且不记得之前的操作。这种急切性是“传染性的”，因为如果它们使用了一个反应式表达式，那么该反应式表达式也将被评估。</p>\n</li>\n<li><p>观察者返回的值被忽略，因为它们被设计为与称为副作用的函数一起工作，如<code>cat()</code>或<code>write.csv()</code>。</p>\n</li>\n</ul>\n<p>观察者和输出由同一个底层工具提供支持：<code>observe()</code>。这设置了一个代码块，每次它使用的反应式值或表达式更新时，该代码块就会运行。请注意，当你创建观察者时，它会立即运行——它必须这样做才能确定其反应式依赖项。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  message<span class=\"punctuation\">(</span><span class=\"string\">&quot;`y` is &quot;</span><span class=\"punctuation\">,</span> y<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; `y` is 10</span></span><br><span class=\"line\"></span><br><span class=\"line\">y<span class=\"punctuation\">(</span><span class=\"number\">5</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; `y` is 5</span></span><br><span class=\"line\">y<span class=\"punctuation\">(</span><span class=\"number\">4</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; `y` is 4</span></span><br></pre></td></tr></table></figure>\n\n<p>在这本书中，我很少使用<a href=\"https://rdrr.io/pkg/shiny/man/observe.html\">observe()</a>，因为它是为用户友好的<a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">observeEvent()</a>提供动力的底层工具。通常，你应该坚持使用<code>observeEvent()</code>，除非它无法实现你想要的功能。在本书中，我只会向你展示一个必须使用<code>observe()</code>的案例，即第16.3.3节。</p>\n<p><code>observe()</code>也为响应式输出提供动力。响应式输出是一种特殊的观察者，它们具有两个重要属性：</p>\n<ul>\n<li><p>当你将它们赋值给输出时，它们就会被定义，即<code>output$text &lt;- ...</code>会创建观察者。</p>\n</li>\n<li><p>它们具有一些有限的检测能力，可以检测到自己是否不可见（即它们位于非活动标签页中），因此不必重新计算。</p>\n</li>\n</ul>\n<p>重要的是要注意，<code>observe()</code>和响应式输出并不“执行”某些操作，而是“创建”某些东西（然后根据需要采取行动）。这种思维方式有助于你理解这个例子中的情况：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">y <span class=\"operator\">&lt;-</span> observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  x<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  observe<span class=\"punctuation\">(</span>print<span class=\"punctuation\">(</span>x<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 1</span></span><br><span class=\"line\">x<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 2</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 2</span></span><br><span class=\"line\">x<span class=\"punctuation\">(</span><span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 3</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 3</span></span><br></pre></td></tr></table></figure>\n\n<p>每当<code>x</code>发生变化时，观察者就会被触发。观察者本身会调用<code>observe()</code>来设置另一个观察者。因此，每次<code>x</code>发生变化时，都会获得另一个观察者，从而导致其值再次被打印。</p>\n<p>作为一般规则，你应该只在服务器函数的顶层创建观察者或输出。如果你发现自己试图嵌套它们或在输出内部创建观察者，那么你应该坐下来，画出你想要创建的响应式图表的草图——几乎可以肯定存在更好的方法。在更复杂的应用程序中，这个错误可能更难直接发现，但你可以始终使用<code>reactlog</code>：只需查找观察者（或输出）中意外的变化，然后追踪到是什么导致了这些变化。</p>\n<h2 id=\"15-4-代码隔离\"><a href=\"#15-4-代码隔离\" class=\"headerlink\" title=\"15.4 代码隔离\"></a>15.4 代码隔离</h2><p>为了结束本章，我将讨论两个重要的工具，用于精确控制响应式图表的失效方式和时间。在本节中，我将讨论<a href=\"https://rdrr.io/pkg/shiny/man/isolate.html\">isolate()</a>，这是<code>observeEvent()</code>和<a href=\"https://rdrr.io/pkg/shiny/man/observeEvent.html\">eventReactive()</a>的底层工具，它允许你在不需要时避免创建响应式依赖。在下一节中，你将学习<a href=\"https://rdrr.io/pkg/shiny/man/invalidateLater.html\">invalidateLater()</a>，它允许你按计划生成响应式失效。</p>\n<h3 id=\"15-4-1-isolate\"><a href=\"#15-4-1-isolate\" class=\"headerlink\" title=\"15.4.1 isolate()\"></a>15.4.1 isolate()</h3><p>观察者通常与响应式值结合使用，以便跟踪状态随时间的变化。例如，考虑以下代码，它跟踪<code>x</code>发生变化的次数：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>count <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> x <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  r<span class=\"operator\">$</span>x</span><br><span class=\"line\">  r<span class=\"operator\">$</span>count <span class=\"operator\">&lt;-</span> r<span class=\"operator\">$</span>count <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你运行这段代码，你会立即陷入无限循环，因为观察者会对<code>x</code>和<code>count</code>产生响应式依赖；由于观察者修改了<code>count</code>，它会立即重新运行。</p>\n<p>幸运的是，Shiny提供了<code>isolate()</code>来解决这个问题。此函数允许你访问响应式值或表达式的当前值，而不会产生对它的依赖：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>count <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> x <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"built_in\">class</span><span class=\"punctuation\">(</span>r<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] &quot;rv_flush_on_write&quot; &quot;reactivevalues&quot;</span></span><br><span class=\"line\">observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  r<span class=\"operator\">$</span>x</span><br><span class=\"line\">  r<span class=\"operator\">$</span>count <span class=\"operator\">&lt;-</span> isolate<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>count<span class=\"punctuation\">)</span> <span class=\"operator\">+</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">r<span class=\"operator\">$</span>x <span class=\"operator\">&lt;-</span> 1</span><br><span class=\"line\">r<span class=\"operator\">$</span>x <span class=\"operator\">&lt;-</span> 2</span><br><span class=\"line\">r<span class=\"operator\">$</span>count</span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">r<span class=\"operator\">$</span>x <span class=\"operator\">&lt;-</span> 3</span><br><span class=\"line\">r<span class=\"operator\">$</span>count</span><br><span class=\"line\"><span class=\"comment\">#&gt; [1] 3</span></span><br></pre></td></tr></table></figure>\n\n<p>和<code>observe()</code>一样，很多时候你不需要直接使用<code>isolate()</code>，因为有两个有用的函数封装了最常见的用法：<code>observeEvent()</code>和<code>eventReactive()</code>。</p>\n<h3 id=\"15-4-2-observeEvent-和-eventReactive\"><a href=\"#15-4-2-observeEvent-和-eventReactive\" class=\"headerlink\" title=\"15.4.2 observeEvent() 和 eventReactive()\"></a>15.4.2 observeEvent() 和 eventReactive()</h3><p>当你看到上面的代码时，你可能会想起第3.6节，并好奇为什么我没有使用<code>observeEvent()</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">observeEvent<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>x<span class=\"punctuation\">,</span> <span class=\"punctuation\">&#123;</span> </span><br><span class=\"line\">  r<span class=\"operator\">$</span>count <span class=\"operator\">&lt;-</span> r<span class=\"operator\">$</span>count <span class=\"operator\">+</span> <span class=\"number\">1</span> </span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>实际上，我本可以使用它，因为<code>observeEvent(x, y)</code>等价于<code>observe(&#123;x; isolate(y)&#125;)</code>。它优雅地将你想要监听的内容与你想要执行的操作分离开来。而<code>eventReactive()</code>则为响应式值执行类似的任务：<code>eventReactive(x, y)</code>等价于<code>reactive(&#123;x; isolate(y)&#125;)</code>。</p>\n<p><code>observeEvent()</code>和<code>eventReactive()</code>都有额外的参数，允许你控制它们的操作细节：</p>\n<ul>\n<li>默认情况下，这两个函数都会忽略产生NULL的任何事件（或在操作按钮的特殊情况下为0）。使用<code>ignoreNULL = FALSE</code>来处理NULL值。</li>\n<li>默认情况下，当你创建这两个函数时，它们都会运行一次。使用<code>ignoreInit = TRUE</code>来跳过这次运行。</li>\n<li>仅对于<code>observeEvent()</code>，你可以使用<code>once = TRUE</code>来使处理程序仅运行一次。</li>\n</ul>\n<p>这些参数很少需要，但知道它们的存在是很有用的，这样你就可以在需要时从文档中查找详细信息。</p>\n<h3 id=\"15-4-3-练习\"><a href=\"#15-4-3-练习\" class=\"headerlink\" title=\"15.4.3 练习\"></a>15.4.3 练习</h3><p>使用服务器函数完成下面的应用程序，该函数仅在按钮被按下时更新<code>out</code>的值为<code>x</code>的值。</p>\n<p>（注意：由于这是一个练习，我不会直接给出完整的代码，但你可以按照以下思路编写：</p>\n<ol>\n<li>在UI中定义一个动作按钮和一个用于显示结果的文本输出。</li>\n<li>在服务器函数中，使用<code>observeEvent()</code>监听按钮点击事件。</li>\n<li>在<code>observeEvent()</code>的回调函数中，更新文本输出的值。）</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">50</span><span class=\"punctuation\">,</span> <span class=\"built_in\">min</span> <span class=\"operator\">=</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span> <span class=\"operator\">=</span> <span class=\"number\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  actionButton<span class=\"punctuation\">(</span><span class=\"string\">&quot;capture&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;capture&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;out&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"15-5-定时失效\"><a href=\"#15-5-定时失效\" class=\"headerlink\" title=\"15.5 定时失效\"></a>15.5 定时失效</h2><p><code>isolate()</code> 减少了响应式图被失效的时间。而本节的主题 <code>invalidateLater()</code> 则做相反的事情：它允许你在数据没有变化时使响应式图失效。在 3.5.1 节中，你通过 <a href=\"https://rdrr.io/pkg/shiny/man/reactiveTimer.html\">reactiveTimer()</a> 看到了它的一个例子，但现在是时候讨论它背后的底层工具了：<code>invalidateLater()</code>。</p>\n<p><code>invalidateLater(ms)</code> 会导致任何响应式消费者在将来的某个时间点（<code>ms</code> 毫秒后）失效。这对于创建动画和连接到 Shiny 响应式框架之外可能随时间变化的数据源非常有用。例如，以下响应式表达式将每半秒自动生成 10 个新的随机正态分布数：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  invalidateLater<span class=\"punctuation\">(</span><span class=\"number\">500</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  rnorm<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>而这个观察者将使用一个随机数增加累积和：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sum</span> <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  invalidateLater<span class=\"punctuation\">(</span><span class=\"number\">300</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span>isolate<span class=\"punctuation\">(</span><span class=\"built_in\">sum</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> runif<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>在后续部分中，你将学习如何使用 <code>invalidateLater()</code> 从磁盘读取变化的数据，如何避免 <code>invalidateLater()</code> 陷入无限循环，以及关于失效确切发生时间的偶尔重要的细节。</p>\n<h3 id=\"15-5-1-轮询\"><a href=\"#15-5-1-轮询\" class=\"headerlink\" title=\"15.5.1 轮询\"></a>15.5.1 轮询</h3><p><code>invalidateLater()</code> 的一个有用应用是将 Shiny 连接到 R 外部变化的数据。例如，你可以使用以下响应式表达式每秒重新读取一次 CSV 文件：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"built_in\">on.exit</span><span class=\"punctuation\">(</span>invalidateLater<span class=\"punctuation\">(</span><span class=\"number\">1000</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>这会将变化的数据连接到 Shiny 的响应式图中，但它有一个严重的缺点：当你使响应式失效时，你也会使所有下游消费者失效，因此即使数据相同，所有下游工作也必须重做。</p>\n<p>为了避免这个问题，Shiny 提供了 <a href=\"https://rdrr.io/pkg/shiny/man/reactivePoll.html\">reactivePoll()</a>，它接受两个函数：一个执行相对便宜的检查以查看数据是否已更改，另一个更昂贵的函数实际执行计算。我们可以使用 <code>reactivePoll()</code> 重写前面的响应式，如下所示。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactivePoll<span class=\"punctuation\">(</span><span class=\"number\">1000</span><span class=\"punctuation\">,</span> session<span class=\"punctuation\">,</span> </span><br><span class=\"line\">    <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> file.mtime<span class=\"punctuation\">(</span><span class=\"string\">&quot;data.csv&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> read.csv<span class=\"punctuation\">(</span><span class=\"string\">&quot;data.csv&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>这里我们使用了 <a href=\"https://rdrr.io/r/base/file.info.html\">file.mtime()</a>，它返回文件最后一次修改的时间，作为是否需要重新加载文件的廉价检查。</p>\n<p>当文件变化时读取文件是一个常见任务，因此 Shiny 提供了一个更具体的辅助函数，它只需要文件名和读取函数：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  data <span class=\"operator\">&lt;-</span> reactiveFileReader<span class=\"punctuation\">(</span><span class=\"number\">1000</span><span class=\"punctuation\">,</span> session<span class=\"punctuation\">,</span> <span class=\"string\">&quot;data.csv&quot;</span><span class=\"punctuation\">,</span> read.csv<span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你需要从其他来源（例如数据库）读取变化的数据，你需要自己编写 <code>reactivePoll()</code> 代码。</p>\n<h3 id=\"15-5-2-长时间运行的响应式\"><a href=\"#15-5-2-长时间运行的响应式\" class=\"headerlink\" title=\"15.5.2 长时间运行的响应式\"></a>15.5.2 长时间运行的响应式</h3><p>如果你正在执行长时间的计算，你需要考虑一个重要问题：何时执行 <code>invalidateLater()</code>？例如，考虑以下响应式：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  invalidateLater<span class=\"punctuation\">(</span><span class=\"number\">500</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  Sys.sleep<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>假设Shiny在0时刻开始反应式运行，它将在500毫秒时请求失效。反应式运行需要1000毫秒，所以现在时间到了1000毫秒，它立即失效并需要重新计算，这又会触发另一次失效：我们陷入了一个无限循环。</p>\n<p>另一方面，如果你在末尾运行<code>invalidateLater()</code>，它将在完成后500毫秒失效，所以反应式将每1500毫秒重新运行一次。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"built_in\">on.exit</span><span class=\"punctuation\">(</span>invalidateLater<span class=\"punctuation\">(</span><span class=\"number\">500</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> add <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  Sys.sleep<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>这是选择<code>invalidateLater()</code>而不是我们之前使用的更简单的<code>reactiveTimer()</code>的主要原因：它让你对失效发生的确切时间有更大的控制权。</p>\n<h3 id=\"15-5-3-定时器准确性\"><a href=\"#15-5-3-定时器准确性\" class=\"headerlink\" title=\"15.5.3 定时器准确性\"></a>15.5.3 定时器准确性</h3><p><code>invalidateLater()</code>中指定的毫秒数是一个礼貌的请求，而不是一个强制要求。当你请求失效发生时，R可能正在做其他事情，所以你的请求必须等待。这实际上意味着这个数值是一个最小值，失效可能会比你预期的时间更长。在大多数情况下，这并不重要，因为小的差异不太可能影响用户对应用程序的感知。然而，在许多小错误会累积的情况下，你应该计算实际经过的时间并使用它来调整你的计算。</p>\n<p>例如，以下代码根据速度和经过的时间计算距离。而不是假设<code>invalidateLater(100)</code>总是精确延迟100毫秒，我计算经过的时间并在计算位置时使用它。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">velocity <span class=\"operator\">&lt;-</span> 3</span><br><span class=\"line\">r <span class=\"operator\">&lt;-</span> reactiveValues<span class=\"punctuation\">(</span>distance <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">last <span class=\"operator\">&lt;-</span> <span class=\"built_in\">proc.time</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span><span class=\"number\">3</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  cur <span class=\"operator\">&lt;-</span> <span class=\"built_in\">proc.time</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[[</span><span class=\"number\">3</span><span class=\"punctuation\">]</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">  time <span class=\"operator\">&lt;-</span> last <span class=\"operator\">-</span> cur</span><br><span class=\"line\">  last <span class=\"operator\">&lt;&lt;-</span> cur</span><br><span class=\"line\">  </span><br><span class=\"line\">  r<span class=\"operator\">$</span>distance <span class=\"operator\">&lt;-</span> isolate<span class=\"punctuation\">(</span>r<span class=\"operator\">$</span>distance<span class=\"punctuation\">)</span> <span class=\"operator\">+</span> velocity <span class=\"operator\">*</span> time</span><br><span class=\"line\">  invalidateLater<span class=\"punctuation\">(</span><span class=\"number\">100</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你不是在仔细做动画，那么请随意忽略<code>invalidateLater()</code>中固有的变化。只需记住，它是一个礼貌的请求，而不是一个要求。</p>\n<h3 id=\"15-5-4-练习\"><a href=\"#15-5-4-练习\" class=\"headerlink\" title=\"15.5.4 练习\"></a>15.5.4 练习</h3><p>为什么这个反应式表达式永远不会被执行？你的解释应该涉及反应式图和失效机制。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  x <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    invalidateLater<span class=\"punctuation\">(</span><span class=\"number\">500</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">    rnorm<span class=\"punctuation\">(</span><span class=\"number\">10</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span>  </span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你熟悉SQL，请使用<code>reactivePoll()</code>来仅当新行被添加时才重新读取一个虚构的“Results”表。你可以假设Results表有一个时间戳字段，该字段包含记录被添加的日期和时间。</p>\n<h3 id=\"15-6-总结\"><a href=\"#15-6-总结\" class=\"headerlink\" title=\"15.6 总结\"></a>15.6 总结</h3><p>在本章中，你深入了解了使Shiny工作的基石：反应式值、反应式表达式、观察者和定时评估。现在，我们将注意力转向反应式值和观察者的特定组合，这种组合使我们能够摆脱反应式图的一些约束（无论好坏）。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]},{"title":"Shiny从入门到入定——14-The reactive graph","slug":"Shiny从入门到入定——14-The-reactive-graph","date":"2024-09-26T13:56:01.000Z","updated":"2024-09-26T14:29:29.863Z","comments":true,"path":"api/articles/Shiny从入门到入定——14-The-reactive-graph.json","excerpt":null,"keywords":null,"cover":"https://d33wubrfki0l68.cloudfront.net/9f65da9e6e5066eb409030bd85c465aa0c787e0c/7fce6/diagrams/reactivity-tracking/08.png","content":"<h1 id=\"反应图\"><a href=\"#反应图\" class=\"headerlink\" title=\"反应图\"></a>反应图</h1><h2 id=\"14-1-引言\"><a href=\"#14-1-引言\" class=\"headerlink\" title=\"14.1 引言\"></a>14.1 引言</h2><p>为了理解反应式计算，首先需要理解反应图。在本章中，我们将深入探讨反应图的细节，尤其关注事情发生的精确顺序。特别是，你将了解无效化的重要性，这是一个确保Shiny进行最少工作的关键过程。你还将了解<code>reactlog</code>包，它可以自动为实际应用程序绘制反应图。</p>\n<p>如果你有一段时间没有查看<a href=\"https://www.liaochenlanruo.fun/post/41c3.html\">第3章</a>了，我强烈建议你在继续之前重新熟悉一下。它为我们将在这里更详细探讨的概念奠定了基础。</p>\n<h2 id=\"14-2-反应式执行的逐步介绍\"><a href=\"#14-2-反应式执行的逐步介绍\" class=\"headerlink\" title=\"14.2 反应式执行的逐步介绍\"></a>14.2 反应式执行的逐步介绍</h2><p>为了解释反应式执行的过程，我们将使用图14.1中显示的图形。它包含三个反应式输入、三个反应式表达式和三个输出。请记住，反应式输入和表达式统称为<code>反应式生产者</code>；反应式表达式和输出是<code>反应式消费者</code>。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/9f65da9e6e5066eb409030bd85c465aa0c787e0c/7fce6/diagrams/reactivity-tracking/08.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/9f65da9e6e5066eb409030bd85c465aa0c787e0c/7fce6/diagrams/reactivity-tracking/08.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.1 包含三个输入、三个反应式表达式和三个输出的虚构应用程序的完整反应图\"></p>\n<p>组件之间的连接是有方向的，箭头表示反应的方向。这个方向可能会让你感到惊讶，因为很容易想到一个消费者依赖于一个或多个生产者。然而，很快你就会看到，反应流更准确地被建模为相反的方向。</p>\n<p>底层应用程序并不重要，但如果你需要一些具体的东西来帮助你理解，你可以假设它源自这个不太有用的应用程序。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;b&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;c&quot;</span><span class=\"punctuation\">,</span> value <span class=\"operator\">=</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plotOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;x&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tableOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;y&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;z&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  rng <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>a <span class=\"operator\">*</span> <span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  smp <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>sample<span class=\"punctuation\">(</span>rng<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> input<span class=\"operator\">$</span>b<span class=\"punctuation\">,</span> replace <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  bc <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>b <span class=\"operator\">*</span> input<span class=\"operator\">$</span><span class=\"built_in\">c</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  output<span class=\"operator\">$</span>x <span class=\"operator\">&lt;-</span> renderPlot<span class=\"punctuation\">(</span>hist<span class=\"punctuation\">(</span>smp<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>y <span class=\"operator\">&lt;-</span> renderTable<span class=\"punctuation\">(</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>smp<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>z <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span>bc<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"14-3-会话开始\"><a href=\"#14-3-会话开始\" class=\"headerlink\" title=\"14.3 会话开始\"></a>14.3 会话开始</h2><p>图14.2展示了应用程序启动后且服务器函数首次执行完毕时的反应图。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/df8d3e4488102866bed17e0ac822adb0228c298e/621da/diagrams/reactivity-tracking/01.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/df8d3e4488102866bed17e0ac822adb0228c298e/621da/diagrams/reactivity-tracking/01.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.2 应用程序加载后的初始状态。对象之间没有连接，所有反应式表达式都被标记为无效（灰色）。有六个反应式消费者和六个反应式生产者\"></p>\n<p>该图中有三个重要信息：</p>\n<ul>\n<li>元素之间没有连接，因为Shiny没有反应式之间关系的先验知识。</li>\n<li>所有反应式表达式和输出都处于起始状态，即无效（灰色），意味着它们尚未运行。</li>\n<li>反应式输入已就绪（绿色），表明它们的值可用于计算。</li>\n</ul>\n<h3 id=\"14-3-1-执行开始\"><a href=\"#14-3-1-执行开始\" class=\"headerlink\" title=\"14.3.1 执行开始\"></a>14.3.1 执行开始</h3><p>现在我们开始执行阶段，如图14.3所示。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/2c6395ada69f84b77a5bf1b273994aa077958640/b1089/diagrams/reactivity-tracking/02.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/2c6395ada69f84b77a5bf1b273994aa077958640/b1089/diagrams/reactivity-tracking/02.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.3 Shiny开始执行任意的观察者/输出，标记为橙色\"></p>\n<p>在这个阶段，Shiny选择一个无效的输出并开始执行（橙色）。你可能会好奇Shiny是如何决定执行哪个无效输出的。简而言之，你应该假设它是随机的：你的观察者和输出不应该关心它们执行的顺序，因为它们被设计为独立运行。</p>\n<h3 id=\"14-3-2-读取反应式表达式\"><a href=\"#14-3-2-读取反应式表达式\" class=\"headerlink\" title=\"14.3.2 读取反应式表达式\"></a>14.3.2 读取反应式表达式</h3><p>执行输出可能需要从反应式中获取值，如图14.4所示。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/e31822819269ca1d29979b1776625198cbc6f434/246f1/diagrams/reactivity-tracking/03.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/e31822819269ca1d29979b1776625198cbc6f434/246f1/diagrams/reactivity-tracking/03.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.4 输出需要反应式表达式的值，因此它开始执行该表达式\"></p>\n<p>读取反应式会以两种方式改变图形：</p>\n<ul>\n<li>反应式表达式也需要开始计算其值（变为橙色）。请注意，输出仍在计算中：它正在等待反应式表达式返回其值，以便自己的执行可以继续进行，就像在R中进行常规函数调用一样。</li>\n<li>Shiny在输出和反应式表达式之间建立关系（即我们绘制一个箭头）。箭头的方向很重要：表达式记录它被输出使用；输出不记录它使用表达式。这是一个微妙的区别，但当你学习无效化时会更加清楚其重要性。</li>\n</ul>\n<h3 id=\"14-3-3-读取输入\"><a href=\"#14-3-3-读取输入\" class=\"headerlink\" title=\"14.3.3 读取输入\"></a>14.3.3 读取输入</h3><p>这个特定的反应式表达式碰巧读取了一个反应式输入。同样，建立了依赖&#x2F;被依赖的关系，所以在图14.5中我们添加了另一个箭头。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/1d51f64be17e3f140ee874bb2ad0a2990fc613b6/06ad6/diagrams/reactivity-tracking/04.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/1d51f64be17e3f140ee874bb2ad0a2990fc613b6/06ad6/diagrams/reactivity-tracking/04.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.5 反应式表达式也从反应式值中读取，因此我们添加了另一个箭头\"></p>\n<p>与反应式表达式和输出不同，反应式输入没有要执行的内容，因此可以立即返回。</p>\n<h3 id=\"14-3-4-反应式表达式完成\"><a href=\"#14-3-4-反应式表达式完成\" class=\"headerlink\" title=\"14.3.4 反应式表达式完成\"></a>14.3.4 反应式表达式完成</h3><p>在我们的示例中，反应式表达式读取了另一个反应式表达式，而后者又读取了另一个输入。我们将跳过对这些步骤的逐一描述，因为它们是我们已经描述过的内容的重复，并直接跳转到图14.6。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/1f35d954406c03d863cff5dc78775d5cab72f9f6/c0fa9/diagrams/reactivity-tracking/05.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/1f35d954406c03d863cff5dc78775d5cab72f9f6/c0fa9/diagrams/reactivity-tracking/05.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.6 反应式表达式已完成计算，因此变为绿色\"></p>\n<p>现在，反应式表达式已完成执行并变为绿色，表示它已就绪。它缓存了结果，因此除非其输入发生变化，否则不需要重新计算。</p>\n<h3 id=\"14-3-5-输出完成\"><a href=\"#14-3-5-输出完成\" class=\"headerlink\" title=\"14.3.5 输出完成\"></a>14.3.5 输出完成</h3><p>现在，反应式表达式已返回其值，输出可以完成执行，并变为绿色，如图14.7所示。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/0cd132c9390e1368118f5b80724ba1e8f8ae54c1/c0265/diagrams/reactivity-tracking/06.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/0cd132c9390e1368118f5b80724ba1e8f8ae54c1/c0265/diagrams/reactivity-tracking/06.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.7 输出已完成执行并变为绿色\"></p>\n<h3 id=\"14-3-6-执行下一个输出\"><a href=\"#14-3-6-执行下一个输出\" class=\"headerlink\" title=\"14.3.6 执行下一个输出\"></a>14.3.6 执行下一个输出</h3><p>现在第一个输出已完成，Shiny 会选择另一个来执行。这个输出会变成橙色（如图14.8所示），并开始从响应式生产者读取值。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/59a70dfa5486abed0124ebe23148bf25f0965237/b17bf/diagrams/reactivity-tracking/07.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/59a70dfa5486abed0124ebe23148bf25f0965237/b17bf/diagrams/reactivity-tracking/07.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.8 下一个输出开始计算，变为橙色\"></p>\n<p>已完成的响应式对象可以立即返回它们的值；无效的响应式对象将启动它们自己的执行图。这个循环将重复进行，直到每个无效的输出进入完成（绿色）状态。</p>\n<h3 id=\"14-3-7-执行完成，输出刷新\"><a href=\"#14-3-7-执行完成，输出刷新\" class=\"headerlink\" title=\"14.3.7 执行完成，输出刷新\"></a>14.3.7 执行完成，输出刷新</h3><p>现在所有的输出都已完成执行并处于空闲状态（如图14.9所示）。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/9f65da9e6e5066eb409030bd85c465aa0c787e0c/7fce6/diagrams/reactivity-tracking/08.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/9f65da9e6e5066eb409030bd85c465aa0c787e0c/7fce6/diagrams/reactivity-tracking/08.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.9 所有输出和响应式表达式都已完成并变为绿色\"></p>\n<p>这一轮响应式执行已完成，除非系统受到某种外部作用（例如，Shiny 应用程序的用户在用户界面中移动滑块），否则不会进行更多工作。从响应式的角度来看，这个会话现在处于静止状态。</p>\n<p>让我们先暂停一下，思考一下我们所做的事情。我们读取了一些输入，计算了一些值，并生成了一些输出。但更重要的是，我们还发现了响应式对象之间的关系。当一个响应式输入发生变化时，我们知道需要更新哪些响应式对象。</p>\n<h2 id=\"14-4-输入发生变化\"><a href=\"#14-4-输入发生变化\" class=\"headerlink\" title=\"14.4 输入发生变化\"></a>14.4 输入发生变化</h2><p>上一步结束时，我们的Shiny会话处于完全空闲状态。现在假设应用程序的用户更改了滑块的值。这会导致浏览器向服务器函数发送一条消息，指示Shiny更新相应的响应式输入。这将启动一个无效化阶段，该阶段包含三个部分：<code>无效化输入</code>、<code>通知依赖项</code>，然后<code>移除现有的连接</code>。</p>\n<h3 id=\"14-4-1-无效化输入\"><a href=\"#14-4-1-无效化输入\" class=\"headerlink\" title=\"14.4.1 无效化输入\"></a>14.4.1 无效化输入</h3><p>无效化阶段从已更改的输入&#x2F;值开始，我们将其填充为灰色，这是我们通常用于无效化的颜色（如图14.10所示）。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/df849130469d68302afd959a483194fe5715330d/72fad/diagrams/reactivity-tracking/09.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/df849130469d68302afd959a483194fe5715330d/72fad/diagrams/reactivity-tracking/09.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.10 用户与应用程序交互，使一个输入无效\"></p>\n<h3 id=\"14-4-2-通知依赖项\"><a href=\"#14-4-2-通知依赖项\" class=\"headerlink\" title=\"14.4.2 通知依赖项\"></a>14.4.2 通知依赖项</h3><p>现在，我们按照之前绘制的箭头方向，将每个节点着色为灰色，并将我们跟随的箭头着色为浅灰色。这产生了图14.11。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/265498cff697785cf8458453b4c316b2cb739002/4df87/diagrams/reactivity-tracking/10.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/265498cff697785cf8458453b4c316b2cb739002/4df87/diagrams/reactivity-tracking/10.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.11 无效化从输入开始，按照从左到右的每个箭头流动。在无效化过程中，Shiny 跟随的箭头被着色为较浅的灰色\"></p>\n<h3 id=\"14-4-3-移除关系\"><a href=\"#14-4-3-移除关系\" class=\"headerlink\" title=\"14.4.3 移除关系\"></a>14.4.3 移除关系</h3><p>接下来，每个无效的响应式表达式和输出都会“擦除”所有进入和离开它的箭头，从而得到图14.12，并完成无效化阶段。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/2cc1585580182ea1a8c6b7feaa570763c7114f2a/82889/diagrams/reactivity-tracking/11.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/2cc1585580182ea1a8c6b7feaa570763c7114f2a/82889/diagrams/reactivity-tracking/11.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.12：无效的节点会忘记它们之前的所有关系，以便重新发现它们\"></p>\n<p>从一个节点发出的箭头是一次性通知，它们将在下一次值发生变化时触发。现在它们已经触发了，完成了它们的使命，我们可以将它们擦除。</p>\n<p>为什么我们要擦除进入无效节点的箭头，即使它们来自的节点并未无效化，这一点可能不太明显。虽然这些箭头代表尚未触发的通知，但无效的节点不再关心它们：响应式消费者只关心通知以使自己无效化，而这已经发生了。</p>\n<p>我们如此重视这些关系，但现在却把它们抛弃了，这似乎有点反常！但这是Shiny响应式编程模型的关键部分：<font color=#FF0000>虽然这些特定的箭头很重要，但它们现在已经过时了</font>。确保我们的图保持准确性的唯一方法是，在它们变得陈旧时擦除箭头，并让Shiny在重新执行时重新发现这些节点周围的关系。我们将在第14.5节中再次讨论这个重要话题。</p>\n<h3 id=\"14-4-4-重新执行\"><a href=\"#14-4-4-重新执行\" class=\"headerlink\" title=\"14.4.4 重新执行\"></a>14.4.4 重新执行</h3><p>现在，我们处于与执行第二个输出时非常相似的情况，此时既有有效也有无效的反应式。是时候做我们之前做过的事情了：执行无效的输出，每次执行一个，从图14.13开始。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/4dadc6829acfaf4b05bbb2564904b30446287d8c/76119/diagrams/reactivity-tracking/12.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/4dadc6829acfaf4b05bbb2564904b30446287d8c/76119/diagrams/reactivity-tracking/12.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.13 现在，重新执行的过程与执行过程相同，但因为我们不是从零开始，所以要做的工作就少了很多\"></p>\n<p>同样，我不会展示具体细节，但最终结果将是一个所有节点都被标记为绿色的静止反应式图。这个过程的巧妙之处在于，Shiny只做了最小量的工作——我们只做了更新那些实际受输入变化影响的输出所需的工作。</p>\n<h3 id=\"14-4-5-练习\"><a href=\"#14-4-5-练习\" class=\"headerlink\" title=\"14.4.5 练习\"></a>14.4.5 练习</h3><ol>\n<li>为以下服务器函数绘制反应式图，并解释为什么反应式没有运行。</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"built_in\">sum</span> <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>x <span class=\"operator\">+</span> input<span class=\"operator\">$</span>y <span class=\"operator\">+</span> input<span class=\"operator\">$</span>z<span class=\"punctuation\">)</span></span><br><span class=\"line\">  <span class=\"built_in\">prod</span> <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>x <span class=\"operator\">*</span> input<span class=\"operator\">$</span>y <span class=\"operator\">*</span> input<span class=\"operator\">$</span>z<span class=\"punctuation\">)</span></span><br><span class=\"line\">  division <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"built_in\">prod</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">/</span> <span class=\"built_in\">sum</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>以下反应式图通过使用Sys.sleep()模拟长时间运行的计算：</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x1 <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">x2 <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">x3 <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">3</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">y1 <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  Sys.sleep<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  x1<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">y2 <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  Sys.sleep<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  x2<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">y3 <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  Sys.sleep<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  x2<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> x3<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> y2<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"operator\">+</span> y2<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">observe<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  print<span class=\"punctuation\">(</span>y1<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  print<span class=\"punctuation\">(</span>y2<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  print<span class=\"punctuation\">(</span>y3<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果<code>x1</code>改变，图重新计算需要多长时间？<code>x2</code>或<code>x3</code>呢？</p>\n<ol start=\"3\">\n<li>如果你尝试创建一个带有循环的反应式图，会发生什么？</li>\n</ol>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x <span class=\"operator\">&lt;-</span> reactiveVal<span class=\"punctuation\">(</span><span class=\"number\">1</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">y <span class=\"operator\">&lt;-</span> reactive<span class=\"punctuation\">(</span>x <span class=\"operator\">+</span> y<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">y<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"14-5-动态性\"><a href=\"#14-5-动态性\" class=\"headerlink\" title=\"14.5 动态性\"></a>14.5 动态性</h2><p>在第14.4.3节中，你了解到Shiny“忘记”了它在记录时花费大量精力建立的反应式组件之间的连接。这使得Shiny的反应式具有动态性，因为它可以在你的应用程序运行时发生变化。这种动态性非常重要，我想用一个简单的例子来强调它：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ui <span class=\"operator\">&lt;-</span> fluidPage<span class=\"punctuation\">(</span></span><br><span class=\"line\">  selectInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;choice&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;A or B?&quot;</span><span class=\"punctuation\">,</span> <span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;b&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  numericInput<span class=\"punctuation\">(</span><span class=\"string\">&quot;b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;b&quot;</span><span class=\"punctuation\">,</span> <span class=\"number\">10</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  textOutput<span class=\"punctuation\">(</span><span class=\"string\">&quot;out&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">server <span class=\"operator\">&lt;-</span> <span class=\"keyword\">function</span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> output<span class=\"punctuation\">,</span> session<span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  output<span class=\"operator\">$</span>out <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>choice <span class=\"operator\">==</span> <span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      input<span class=\"operator\">$</span>a</span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      input<span class=\"operator\">$</span>b</span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> </span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>你可能会期望反应式图看起来如图14.14所示。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/3aa4c110444589f5a2be4ea81ad573315d9cf899/eb8e6/diagrams/reactivity-tracking/dynamic.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/3aa4c110444589f5a2be4ea81ad573315d9cf899/eb8e6/diagrams/reactivity-tracking/dynamic.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.14 如果Shiny静态地分析反应式，那么反应式图总是会将`choice`、`a`和`b`连接到`out`\"></p>\n<p>但是，由于Shiny在输出被标记为无效后会动态地重建图，因此它实际上看起来会像图14.15中的任何一个图，这取决于<code>input$choice</code>的值。这确保了当输入被标记为无效时，Shiny会做最少量的工作。在这种情况下，如果<code>input$choice</code>被设置为“b”，那么<code>input$a</code>的值不会影响<code>output$out</code>，因此没有必要重新计算它。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/e06cc554ebc90037aed6cbaaf28cc970d31c594a/63c0d/diagrams/reactivity-tracking/dynamic2.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/e06cc554ebc90037aed6cbaaf28cc970d31c594a/63c0d/diagrams/reactivity-tracking/dynamic2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.15 但是，Shiny的反应式图是动态的，所以图要么将`out`连接到`choice`和`a`（左图），要么连接到`choice`和`b`（右图）\"></p>\n<p>值得注意的是（正如Yindeng Jiang在他们的博客中所做的那样），一个微小的更改将导致输出始终依赖于<code>a</code>和<code>b</code>：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output<span class=\"operator\">$</span>out <span class=\"operator\">&lt;-</span> renderText<span class=\"punctuation\">(</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  a <span class=\"operator\">&lt;-</span> input<span class=\"operator\">$</span>a</span><br><span class=\"line\">  b <span class=\"operator\">&lt;-</span> input<span class=\"operator\">$</span>b</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>input<span class=\"operator\">$</span>choice <span class=\"operator\">==</span> <span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    a</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span> <span class=\"keyword\">else</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    b</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">)</span> </span><br></pre></td></tr></table></figure>\n\n<p>这对正常的R代码输出没有影响，但在这里却有所不同，因为反应式依赖是在你从输入中读取值时建立的，而不是在你使用该值时建立的。</p>\n<h2 id=\"14-6-reactlog包\"><a href=\"#14-6-reactlog包\" class=\"headerlink\" title=\"14.6 reactlog包\"></a>14.6 reactlog包</h2><p>手动绘制反应式图是一种强大的技术，可以帮助你理解简单的应用程序，并构建出反应式编程的准确心理模型。但对于拥有许多动态部分的实际应用程序来说，这样做很痛苦。如果我们能使用Shiny对其了解的内容自动绘制图形，那岂不是太好了？这就是<code>reactlog</code>包的工作，它生成所谓的反应日志（reactlog），展示了反应式图如何随时间演变。</p>\n<p>要查看反应日志，你首先需要安装reactlog包，使用<code>reactlog::reactlog_enable()</code>启用它，然后启动你的应用程序。你有两个选项：</p>\n<ul>\n<li><p>在应用程序运行时，按Cmd + F3（在Windows上是Ctrl + F3），以显示到目前为止生成的反应日志。</p>\n</li>\n<li><p>在应用程序关闭后，运行<code>shiny::reactlogShow()</code>以查看整个会话的日志。</p>\n</li>\n</ul>\n<p>reactlog使用与本章相同的图形约定，因此你应该会立即感到熟悉。最大的不同是，reactlog绘制了所有依赖项，即使它们当前未被使用，以保持自动布局的稳定性。当前不活跃的连接（但过去或将来会活跃）被绘制为细虚线。</p>\n<p>图14.16展示了reactlog为我们上面使用的应用程序绘制的反应式图。截图中有一个惊喜：有三个额外的反应式输入（<code>clientData$output_x_height</code>、<code>clientData$output_x_width</code>和<code>clientData$pixelratio</code>）没有出现在源代码中。这些存在是因为图表对输出的大小有隐式依赖；每当输出大小改变时，图表都需要重新绘制。</p>\n<p><img src=\"https://d33wubrfki0l68.cloudfront.net/f5c46b4a728eb6b329549c5156a299c3fe28fb21/6b5cb/images/reactivity-graph/reactlog.png\" class=\"lazyload placeholder\" data-srcset=\"https://d33wubrfki0l68.cloudfront.net/f5c46b4a728eb6b329549c5156a299c3fe28fb21/6b5cb/images/reactivity-graph/reactlog.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"图14.16 由reactlog绘制的假设应用程序的反应式图\"></p>\n<p>请注意，虽然反应式输入和输出有名称，但反应式表达式和观察者没有，因此它们用其内容标记。为了更容易理解，你可能想使用<a href=\"https://rdrr.io/pkg/shiny/man/reactive.html\">reactive()</a>和<a href=\"https://rdrr.io/pkg/shiny/man/observe.html\">observe()</a>的<code>label</code>参数，这样它们就会出现在反应日志中。你可以使用表情符号来使特别重要的反应式在视觉上脱颖而出。</p>\n<h2 id=\"14-7-总结\"><a href=\"#14-7-总结\" class=\"headerlink\" title=\"14.7 总结\"></a>14.7 总结</h2><p>在本章中，你精确地学习了反应式图是如何工作的。特别是，你首次了解了无效化阶段，它不会立即导致重新计算，而是将反应式消费者标记为无效，以便在需要时重新计算。无效化周期也很重要，因为它清除了之前发现的依赖项，以便它们可以自动重新发现，从而使反应式图具有动态性。</p>\n<p>现在你已经掌握了全局，下一章将提供一些关于支持反应式值、表达式和输出的底层数据结构的额外细节，并讨论与定时无效化相关的概念。</p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"编程","path":"api/tags/编程.json"},{"name":"Shiny入门系列","path":"api/tags/Shiny入门系列.json"}]},{"title":"Scikit-learn机器学习实战-PCA","slug":"Scikit-learn机器学习实战-PCA","date":"2024-09-01T08:38:58.000Z","updated":"2024-09-01T09:07:23.418Z","comments":true,"path":"api/articles/Scikit-learn机器学习实战-PCA.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_5_0.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>PCA的全称是<strong>Principal Component Analysis</strong>，即主成分分析。这是一种常用的数据分析方法，主要用于数据降维。PCA的主要思想是将原始的高维特征空间通过线性变换投射到一个新的低维特征空间上，同时尽量保持原始数据的方差，使得在新的低维空间中数据的差异性得以保留。这一过程中，通过计算数据集的协方差矩阵，找到其特征值和特征向量，进而确定主成分的方向和贡献率，实现数据的有效降维。</p>\n<p>具体来说，PCA的计算过程包括以下几个步骤：</p>\n<ul>\n<li>数据标准化：将原始数据转换为均值为0，标准差为1的标准化数据，以消除不同量纲对分析结果的影响。</li>\n<li>计算协方差矩阵：标准化后的数据矩阵的协方差矩阵反映了各变量之间的相关性。</li>\n<li>计算特征值和特征向量：对协方差矩阵进行特征值分解，得到特征值和对应的特征向量。特征值的大小反映了对应主成分的重要性，而特征向量则指示了主成分的方向。</li>\n<li>选取主成分：根据特征值的大小，选取前k个主成分，使得这k个主成分的累计贡献率达到一定的阈值（如80%或90%）。</li>\n<li>转换数据到新的主成分空间：将原始数据转换到由选定的主成分构成的新空间中，得到降维后的数据。</li>\n</ul>\n<p>PCA在数据分析和机器学习领域有着广泛的应用，如特征提取、数据压缩、噪声消除、图像识别等。同时，PCA也是一种无监督学习的方法，它不需要数据的标签信息，就可以从数据中提取出有用的特征信息。</p>\n<p>本文通过鸢尾花数据集演示PCA方法，讲解如何确定降维采用的特征向量的数量，并完成降维。包括手写函数实现和通过SK-learn实现代码。</p>\n<h1 id=\"导入数据集\"><a href=\"#导入数据集\" class=\"headerlink\" title=\"导入数据集\"></a>导入数据集</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">url = <span class=\"string\">&#x27;https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data&#x27;</span></span><br><span class=\"line\">df = pd.read_csv(url)</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>5.1</th>\n      <th>3.5</th>\n      <th>1.4</th>\n      <th>0.2</th>\n      <th>Iris-setosa</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.4</td>\n      <td>3.9</td>\n      <td>1.7</td>\n      <td>0.4</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加列名，分别为 sepal_len, sepal_wid, petal_len, petal_wid, class</span></span><br><span class=\"line\"><span class=\"comment\"># 前四列为特征，最后一列为类别，共有3种类别</span></span><br><span class=\"line\">df.columns=[<span class=\"string\">&#x27;sepal_len&#x27;</span>, <span class=\"string\">&#x27;sepal_wid&#x27;</span>, <span class=\"string\">&#x27;petal_len&#x27;</span>, <span class=\"string\">&#x27;petal_wid&#x27;</span>, <span class=\"string\">&#x27;class&#x27;</span>]</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_len</th>\n      <th>sepal_wid</th>\n      <th>petal_len</th>\n      <th>petal_wid</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.4</td>\n      <td>3.9</td>\n      <td>1.7</td>\n      <td>0.4</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拆分特征和标签</span></span><br><span class=\"line\"></span><br><span class=\"line\">X = df.iloc[:,<span class=\"number\">0</span>:<span class=\"number\">4</span>].values</span><br><span class=\"line\">y = df.iloc[:,<span class=\"number\">4</span>].values</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"特征工程\"><a href=\"#特征工程\" class=\"headerlink\" title=\"特征工程\"></a>特征工程</h1><h2 id=\"特征展示\"><a href=\"#特征展示\" class=\"headerlink\" title=\"特征展示\"></a>特征展示</h2><p>查看特征的取值范围以及其和类别的关系。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入matplotlib库中的pyplot模块，用于绘图</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"comment\"># 导入math库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个字典，映射数字到鸢尾花的种类名称</span></span><br><span class=\"line\">label_dict = &#123;<span class=\"number\">1</span>: <span class=\"string\">&#x27;Iris-Setosa&#x27;</span>,</span><br><span class=\"line\">              <span class=\"number\">2</span>: <span class=\"string\">&#x27;Iris-Versicolor&#x27;</span>,</span><br><span class=\"line\">              <span class=\"number\">3</span>: <span class=\"string\">&#x27;Iris-Virgnica&#x27;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个字典，映射数字到鸢尾花的特征名称</span></span><br><span class=\"line\">feature_dict = &#123;<span class=\"number\">0</span>: <span class=\"string\">&#x27;sepal length [cm]&#x27;</span>,</span><br><span class=\"line\">                <span class=\"number\">1</span>: <span class=\"string\">&#x27;sepal width [cm]&#x27;</span>,</span><br><span class=\"line\">                <span class=\"number\">2</span>: <span class=\"string\">&#x27;petal length [cm]&#x27;</span>,</span><br><span class=\"line\">                <span class=\"number\">3</span>: <span class=\"string\">&#x27;petal width [cm]&#x27;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个8x6英寸的图像</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">8</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\"><span class=\"comment\"># 循环绘制4个子图，每个子图代表一个特征的直方图</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> cnt <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 在图像中创建2x2的子图，并指定当前子图的位置</span></span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, cnt+<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 遍历每种鸢尾花类别，绘制直方图</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> lab <span class=\"keyword\">in</span> (<span class=\"string\">&#x27;Iris-setosa&#x27;</span>, <span class=\"string\">&#x27;Iris-versicolor&#x27;</span>, <span class=\"string\">&#x27;Iris-virginica&#x27;</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 绘制指定特征的直方图，使用不同颜色和透明度区分不同类别</span></span><br><span class=\"line\">        plt.hist(X[y==lab, cnt],</span><br><span class=\"line\">                 label=lab,</span><br><span class=\"line\">                 bins=<span class=\"number\">10</span>,</span><br><span class=\"line\">                 alpha=<span class=\"number\">0.3</span>,)</span><br><span class=\"line\">    <span class=\"comment\"># 设置子图的x轴标签</span></span><br><span class=\"line\">    plt.xlabel(feature_dict[cnt])</span><br><span class=\"line\">    <span class=\"comment\"># 添加图例，用于标识不同类别的鸢尾花</span></span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>, fancybox=<span class=\"literal\">True</span>, fontsize=<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调整子图间的间距，使布局更加紧凑</span></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\"><span class=\"comment\"># 显示绘制的图像</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_5_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_5_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<ul>\n<li>发现<code>花萼的长度</code>和<code>宽度</code>能够较好的区分3种类别。</li>\n<li>四个特征取值范围差异较大，需要进行标准化。</li>\n</ul>\n<h2 id=\"数据标准化\"><a href=\"#数据标准化\" class=\"headerlink\" title=\"数据标准化\"></a>数据标准化</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进行数据标准化</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">X_std = StandardScaler().fit_transform(X)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (X_std)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[[-1.1483555  -0.11805969 -1.35396443 -1.32506301]\n [-1.3905423   0.34485856 -1.41098555 -1.32506301]\n [-1.51163569  0.11339944 -1.29694332 -1.32506301]\n [-1.02726211  1.27069504 -1.35396443 -1.32506301]\n [-0.54288852  1.9650724  -1.18290109 -1.0614657 ]\n [-1.51163569  0.8077768  -1.35396443 -1.19326436]\n [-1.02726211  0.8077768  -1.29694332 -1.32506301]\n [-1.75382249 -0.34951881 -1.35396443 -1.32506301]\n [-1.1483555   0.11339944 -1.29694332 -1.45686167]\n [-0.54288852  1.50215416 -1.29694332 -1.32506301]\n [-1.2694489   0.8077768  -1.23992221 -1.32506301]\n [-1.2694489  -0.11805969 -1.35396443 -1.45686167]\n [-1.87491588 -0.11805969 -1.52502777 -1.45686167]\n [-0.05851493  2.19653152 -1.46800666 -1.32506301]\n [-0.17960833  3.122368   -1.29694332 -1.0614657 ]\n [-0.54288852  1.9650724  -1.41098555 -1.0614657 ]\n [-0.90616871  1.03923592 -1.35396443 -1.19326436]\n [-0.17960833  1.73361328 -1.18290109 -1.19326436]\n [-0.90616871  1.73361328 -1.29694332 -1.19326436]\n [-0.54288852  0.8077768  -1.18290109 -1.32506301]\n [-0.90616871  1.50215416 -1.29694332 -1.0614657 ]\n [-1.51163569  1.27069504 -1.58204889 -1.32506301]\n [-0.90616871  0.57631768 -1.18290109 -0.92966704]\n [-1.2694489   0.8077768  -1.06885886 -1.32506301]\n [-1.02726211 -0.11805969 -1.23992221 -1.32506301]\n [-1.02726211  0.8077768  -1.23992221 -1.0614657 ]\n [-0.78507531  1.03923592 -1.29694332 -1.32506301]\n [-0.78507531  0.8077768  -1.35396443 -1.32506301]\n [-1.3905423   0.34485856 -1.23992221 -1.32506301]\n [-1.2694489   0.11339944 -1.23992221 -1.32506301]\n [-0.54288852  0.8077768  -1.29694332 -1.0614657 ]\n [-0.78507531  2.42799064 -1.29694332 -1.45686167]\n [-0.42179512  2.65944976 -1.35396443 -1.32506301]\n [-1.1483555   0.11339944 -1.29694332 -1.45686167]\n [-1.02726211  0.34485856 -1.46800666 -1.32506301]\n [-0.42179512  1.03923592 -1.41098555 -1.32506301]\n [-1.1483555   0.11339944 -1.29694332 -1.45686167]\n [-1.75382249 -0.11805969 -1.41098555 -1.32506301]\n [-0.90616871  0.8077768  -1.29694332 -1.32506301]\n [-1.02726211  1.03923592 -1.41098555 -1.19326436]\n [-1.63272909 -1.73827353 -1.41098555 -1.19326436]\n [-1.75382249  0.34485856 -1.41098555 -1.32506301]\n [-1.02726211  1.03923592 -1.23992221 -0.79786838]\n [-0.90616871  1.73361328 -1.06885886 -1.0614657 ]\n [-1.2694489  -0.11805969 -1.35396443 -1.19326436]\n [-0.90616871  1.73361328 -1.23992221 -1.32506301]\n [-1.51163569  0.34485856 -1.35396443 -1.32506301]\n [-0.66398191  1.50215416 -1.29694332 -1.32506301]\n [-1.02726211  0.57631768 -1.35396443 -1.32506301]\n [ 1.39460583  0.34485856  0.52773232  0.25652088]\n [ 0.66804545  0.34485856  0.41369009  0.38831953]\n [ 1.27351244  0.11339944  0.64177455  0.38831953]\n [-0.42179512 -1.73827353  0.12858453  0.12472222]\n [ 0.78913885 -0.58097793  0.47071121  0.38831953]\n [-0.17960833 -0.58097793  0.41369009  0.12472222]\n [ 0.54695205  0.57631768  0.52773232  0.52011819]\n [-1.1483555  -1.50681441 -0.27056327 -0.27067375]\n [ 0.91023225 -0.34951881  0.47071121  0.12472222]\n [-0.78507531 -0.81243705  0.07156341  0.25652088]\n [-1.02726211 -2.43265089 -0.15652104 -0.27067375]\n [ 0.06257847 -0.11805969  0.24262675  0.38831953]\n [ 0.18367186 -1.96973265  0.12858453 -0.27067375]\n [ 0.30476526 -0.34951881  0.52773232  0.25652088]\n [-0.30070172 -0.34951881 -0.09949993  0.12472222]\n [ 1.03132564  0.11339944  0.35666898  0.25652088]\n [-0.30070172 -0.11805969  0.41369009  0.38831953]\n [-0.05851493 -0.81243705  0.18560564 -0.27067375]\n [ 0.42585866 -1.96973265  0.41369009  0.38831953]\n [-0.30070172 -1.27535529  0.07156341 -0.1388751 ]\n [ 0.06257847  0.34485856  0.58475344  0.78371551]\n [ 0.30476526 -0.58097793  0.12858453  0.12472222]\n [ 0.54695205 -1.27535529  0.64177455  0.38831953]\n [ 0.30476526 -0.58097793  0.52773232 -0.00707644]\n [ 0.66804545 -0.34951881  0.29964787  0.12472222]\n [ 0.91023225 -0.11805969  0.35666898  0.25652088]\n [ 1.15241904 -0.58097793  0.58475344  0.25652088]\n [ 1.03132564 -0.11805969  0.69879566  0.65191685]\n [ 0.18367186 -0.34951881  0.41369009  0.38831953]\n [-0.17960833 -1.04389617 -0.15652104 -0.27067375]\n [-0.42179512 -1.50681441  0.0145423  -0.1388751 ]\n [-0.42179512 -1.50681441 -0.04247882 -0.27067375]\n [-0.05851493 -0.81243705  0.07156341 -0.00707644]\n [ 0.18367186 -0.81243705  0.75581678  0.52011819]\n [-0.54288852 -0.11805969  0.41369009  0.38831953]\n [ 0.18367186  0.8077768   0.41369009  0.52011819]\n [ 1.03132564  0.11339944  0.52773232  0.38831953]\n [ 0.54695205 -1.73827353  0.35666898  0.12472222]\n [-0.30070172 -0.11805969  0.18560564  0.12472222]\n [-0.42179512 -1.27535529  0.12858453  0.12472222]\n [-0.42179512 -1.04389617  0.35666898 -0.00707644]\n [ 0.30476526 -0.11805969  0.47071121  0.25652088]\n [-0.05851493 -1.04389617  0.12858453 -0.00707644]\n [-1.02726211 -1.73827353 -0.27056327 -0.27067375]\n [-0.30070172 -0.81243705  0.24262675  0.12472222]\n [-0.17960833 -0.11805969  0.24262675 -0.00707644]\n [-0.17960833 -0.34951881  0.24262675  0.12472222]\n [ 0.42585866 -0.34951881  0.29964787  0.12472222]\n [-0.90616871 -1.27535529 -0.44162661 -0.1388751 ]\n [-0.17960833 -0.58097793  0.18560564  0.12472222]\n [ 0.54695205  0.57631768  1.2690068   1.70630611]\n [-0.05851493 -0.81243705  0.75581678  0.91551417]\n [ 1.51569923 -0.11805969  1.21198569  1.17911148]\n [ 0.54695205 -0.34951881  1.04092235  0.78371551]\n [ 0.78913885 -0.11805969  1.15496457  1.31091014]\n [ 2.12116622 -0.11805969  1.61113348  1.17911148]\n [-1.1483555  -1.27535529  0.41369009  0.65191685]\n [ 1.75788602 -0.34951881  1.44007014  0.78371551]\n [ 1.03132564 -1.27535529  1.15496457  0.78371551]\n [ 1.63679263  1.27069504  1.32602791  1.70630611]\n [ 0.78913885  0.34485856  0.75581678  1.04731282]\n [ 0.66804545 -0.81243705  0.869859    0.91551417]\n [ 1.15241904 -0.11805969  0.98390123  1.17911148]\n [-0.17960833 -1.27535529  0.69879566  1.04731282]\n [-0.05851493 -0.58097793  0.75581678  1.57450745]\n [ 0.66804545  0.34485856  0.869859    1.4427088 ]\n [ 0.78913885 -0.11805969  0.98390123  0.78371551]\n [ 2.24225961  1.73361328  1.6681546   1.31091014]\n [ 2.24225961 -1.04389617  1.78219682  1.4427088 ]\n [ 0.18367186 -1.96973265  0.69879566  0.38831953]\n [ 1.27351244  0.34485856  1.09794346  1.4427088 ]\n [-0.30070172 -0.58097793  0.64177455  1.04731282]\n [ 2.24225961 -0.58097793  1.6681546   1.04731282]\n [ 0.54695205 -0.81243705  0.64177455  0.78371551]\n [ 1.03132564  0.57631768  1.09794346  1.17911148]\n [ 1.63679263  0.34485856  1.2690068   0.78371551]\n [ 0.42585866 -0.58097793  0.58475344  0.78371551]\n [ 0.30476526 -0.11805969  0.64177455  0.78371551]\n [ 0.66804545 -0.58097793  1.04092235  1.17911148]\n [ 1.63679263 -0.11805969  1.15496457  0.52011819]\n [ 1.87897942 -0.58097793  1.32602791  0.91551417]\n [ 2.48444641  1.73361328  1.49709126  1.04731282]\n [ 0.66804545 -0.58097793  1.04092235  1.31091014]\n [ 0.54695205 -0.58097793  0.75581678  0.38831953]\n [ 0.30476526 -1.04389617  1.04092235  0.25652088]\n [ 2.24225961 -0.11805969  1.32602791  1.4427088 ]\n [ 0.54695205  0.8077768   1.04092235  1.57450745]\n [ 0.66804545  0.11339944  0.98390123  0.78371551]\n [ 0.18367186 -0.11805969  0.58475344  0.78371551]\n [ 1.27351244  0.11339944  0.92688012  1.17911148]\n [ 1.03132564  0.11339944  1.04092235  1.57450745]\n [ 1.27351244  0.11339944  0.75581678  1.4427088 ]\n [-0.05851493 -0.81243705  0.75581678  0.91551417]\n [ 1.15241904  0.34485856  1.21198569  1.4427088 ]\n [ 1.03132564  0.57631768  1.09794346  1.70630611]\n [ 1.03132564 -0.11805969  0.81283789  1.4427088 ]\n [ 0.54695205 -1.27535529  0.69879566  0.91551417]\n [ 0.78913885 -0.11805969  0.81283789  1.04731282]\n [ 0.42585866  0.8077768   0.92688012  1.4427088 ]\n [ 0.06257847 -0.11805969  0.75581678  0.78371551]]\n</code></pre>\n<h1 id=\"确定特征向量的数量\"><a href=\"#确定特征向量的数量\" class=\"headerlink\" title=\"确定特征向量的数量\"></a>确定特征向量的数量</h1><h2 id=\"协方差矩阵\"><a href=\"#协方差矩阵\" class=\"headerlink\" title=\"协方差矩阵\"></a>协方差矩阵</h2><p>协方差是衡量两个变量总体误差的期望，用于描述两个变量之间的线性关系程度和方向。两个特征间的协方差值越大，表明其相关性越强。</p>\n<p>对于两个随机变量$X$和$Y$，其协方差$Cov(X,Y)$的计算公式为：</p>\n<p>$$Cov(X,Y) &#x3D; E[(X - E[X])(Y - E[Y])]$$</p>\n<p>其中，$E[X]$和$E[Y]$分别是$X$和$Y$的期望值（即均值）。</p>\n<p>在实际应用中，当我们只有样本数据时，我们通常使用样本协方差来估计总体协方差。对于包含$n$个样本点的数据集，样本协方差$s_{xy}$的计算公式为：</p>\n<p>$$s_{xy} &#x3D; \\frac{1}{n-1} \\sum_{i&#x3D;1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})$$</p>\n<p>其中，$x_i$和$y_i$是样本点，$\\bar{x}$和$\\bar{y}$分别是$X$和$Y$的样本均值，计算公式为：</p>\n<p>$$\\bar{x} &#x3D; \\frac{1}{n} \\sum_{i&#x3D;1}^{n} x_i$$</p>\n<p>$$\\bar{y} &#x3D; \\frac{1}{n} \\sum_{i&#x3D;1}^{n} y_i$$</p>\n<p>注意，在计算样本协方差时，分母是$n-1$而不是$n$，这是为了得到总体协方差的无偏估计。</p>\n<p><strong>以下命令二选一</strong>：</p>\n<ul>\n<li>构造函数计算协方差矩阵</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 计算特征向量的均值，用于中心化数据</span></span><br><span class=\"line\">mean_vec = np.mean(X_std, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算数据的协方差矩阵，用于理解特征之间的线性关系</span></span><br><span class=\"line\"><span class=\"comment\"># (X_std - mean_vec).T.dot((X_std - mean_vec) )计算的是(X_std - mean_vec)的矩阵乘法</span></span><br><span class=\"line\"><span class=\"comment\"># 除以(X_std.shape[0]-1)是为了获得一个无偏估计</span></span><br><span class=\"line\">cov_mat = (X_std - mean_vec).T.dot((X_std - mean_vec)) / (X_std.shape[<span class=\"number\">0</span>]-<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出协方差矩阵，以便于后续分析和使用</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Covariance matrix \\n%s&#x27;</span> %cov_mat)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Covariance matrix \n[[ 1.00675676 -0.10448539  0.87716999  0.82249094]\n [-0.10448539  1.00675676 -0.41802325 -0.35310295]\n [ 0.87716999 -0.41802325  1.00675676  0.96881642]\n [ 0.82249094 -0.35310295  0.96881642  1.00675676]]\n</code></pre>\n<ul>\n<li>使用numpy计算协方差矩阵</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;NumPy covariance matrix: \\n%s&#x27;</span> %np.cov(X_std.T))</span><br></pre></td></tr></table></figure>\n\n<pre><code>NumPy covariance matrix: \n[[ 1.00675676 -0.10448539  0.87716999  0.82249094]\n [-0.10448539  1.00675676 -0.41802325 -0.35310295]\n [ 0.87716999 -0.41802325  1.00675676  0.96881642]\n [ 0.82249094 -0.35310295  0.96881642  1.00675676]]\n</code></pre>\n<p>求协方差矩阵的特征向量和特征值。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 求协方差矩阵</span></span><br><span class=\"line\">cov_mat = np.cov(X_std.T)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 求协方差矩阵的特征向量，返回特征向量（eig_vecs）和特征值（eig_vals）</span></span><br><span class=\"line\">eig_vals, eig_vecs = np.linalg.eig(cov_mat)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Eigenvectors \\n%s&#x27;</span> %eig_vecs)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\nEigenvalues \\n%s&#x27;</span> %eig_vals)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Eigenvectors \n[[ 0.52308496 -0.36956962 -0.72154279  0.26301409]\n [-0.25956935 -0.92681168  0.2411952  -0.12437342]\n [ 0.58184289 -0.01912775  0.13962963 -0.80099722]\n [ 0.56609604 -0.06381646  0.63380158  0.52321917]]\n\nEigenvalues \n[2.92442837 0.93215233 0.14946373 0.02098259]\n</code></pre>\n<p>肉眼观察<code>Eigenvalues</code>，应当取前2个特征值对应的特征向量，因为其最重要。</p>\n<p>创建一个包含特征值和对应特征向量的元组列表。按特征值降序排序这些元组。打印排序后的特征值，确认排序正确。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Make a list of (eigenvalue, eigenvector) tuples</span></span><br><span class=\"line\">eig_pairs = [(np.<span class=\"built_in\">abs</span>(eig_vals[i]), eig_vecs[:,i]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(eig_vals))]</span><br><span class=\"line\"><span class=\"built_in\">print</span> (eig_pairs)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;----------&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># Sort the (eigenvalue, eigenvector) tuples from high to low</span></span><br><span class=\"line\">eig_pairs.sort(key=<span class=\"keyword\">lambda</span> x: x[<span class=\"number\">0</span>], reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Visually confirm that the list is correctly sorted by decreasing eigenvalues</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Eigenvalues in descending order:&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> eig_pairs:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>[(np.float64(2.9244283691111117), array([ 0.52308496, -0.25956935,  0.58184289,  0.56609604])), (np.float64(0.9321523302535062), array([-0.36956962, -0.92681168, -0.01912775, -0.06381646])), (np.float64(0.14946373489813364), array([-0.72154279,  0.2411952 ,  0.13962963,  0.63380158])), (np.float64(0.020982592764271016), array([ 0.26301409, -0.12437342, -0.80099722,  0.52321917]))]\n----------\nEigenvalues in descending order:\n2.9244283691111117\n0.9321523302535062\n0.14946373489813364\n0.020982592764271016\n</code></pre>\n<p>计算累计变异解释百分比，以评估前几个主成分能解释的总变异比例。最后输出累计变异解释百分比。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 计算所有特征值的总和</span></span><br><span class=\"line\">tot = <span class=\"built_in\">sum</span>(eig_vals)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算每个特征值占总和的百分比，并按降序排序</span></span><br><span class=\"line\"><span class=\"comment\"># 这一步的目的是确定每个特征值在总变异中所占的百分比</span></span><br><span class=\"line\">var_exp = [(i / tot)*<span class=\"number\">100</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(eig_vals, reverse=<span class=\"literal\">True</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出每个特征值的变异解释百分比</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(var_exp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算累计变异解释百分比</span></span><br><span class=\"line\"><span class=\"comment\"># 这一步是为了了解前几个主成分可以解释多少总变异</span></span><br><span class=\"line\">cum_var_exp = np.cumsum(var_exp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 累计变异解释百分比</span></span><br><span class=\"line\">cum_var_exp</span><br></pre></td></tr></table></figure>\n\n\n<p>  [np.float64(72.62003332692032), np.float64(23.147406858644143), np.float64(3.711515564584531), np.float64(0.5210442498510259)]</p>\n<p>  array([ 72.62003333,  95.76744019,  99.47895575, 100.        ])</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 演示np.cumsum() 函数的用法</span></span><br><span class=\"line\">a = np.array([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span> (a)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;-----------&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (np.cumsum(a)) <span class=\"comment\"># 元素的累加和</span></span><br></pre></td></tr></table></figure>\n\n<pre><code>[1 2 3 4]\n-----------\n[ 1  3  6 10]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 绘制特征值的重要性</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">6</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">plt.bar(<span class=\"built_in\">range</span>(<span class=\"number\">4</span>), var_exp, alpha=<span class=\"number\">0.5</span>, align=<span class=\"string\">&#x27;center&#x27;</span>,</span><br><span class=\"line\">            label=<span class=\"string\">&#x27;individual explained variance&#x27;</span>)</span><br><span class=\"line\">plt.step(<span class=\"built_in\">range</span>(<span class=\"number\">4</span>), cum_var_exp, where=<span class=\"string\">&#x27;mid&#x27;</span>,</span><br><span class=\"line\">             label=<span class=\"string\">&#x27;cumulative explained variance&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Explained variance ratio&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Principal components&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_20_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_20_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>根据上图可以决定取几个特征值进行降维，此例中前两个特征值已经足够（~95.77%）。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 根据前两个主要成分构造转换矩阵W</span></span><br><span class=\"line\"><span class=\"comment\"># 选择主要成分分析（PCA）得到的前两个特征向量</span></span><br><span class=\"line\"><span class=\"comment\"># 将特征向量重塑为4x1的矩阵形式，以便进行矩阵操作</span></span><br><span class=\"line\"><span class=\"comment\"># 这两个特征向量代表了数据中方差最大的两个方向</span></span><br><span class=\"line\">matrix_w = np.hstack((eig_pairs[<span class=\"number\">0</span>][<span class=\"number\">1</span>].reshape(<span class=\"number\">4</span>,<span class=\"number\">1</span>),</span><br><span class=\"line\">                      eig_pairs[<span class=\"number\">1</span>][<span class=\"number\">1</span>].reshape(<span class=\"number\">4</span>,<span class=\"number\">1</span>)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印转换矩阵W，以便于查看和验证结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Matrix W:\\n&#x27;</span>, matrix_w)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Matrix W:\n [[ 0.52308496 -0.36956962]\n [-0.25956935 -0.92681168]\n [ 0.58184289 -0.01912775]\n [ 0.56609604 -0.06381646]]\n</code></pre>\n<h1 id=\"矩阵降维\"><a href=\"#矩阵降维\" class=\"headerlink\" title=\"矩阵降维\"></a>矩阵降维</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 标准化数据X_std与权重矩阵matrix_w进行点积运算，用于特征提取和数据转换</span></span><br><span class=\"line\">Y = X_std.dot(matrix_w)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出转换后的数据Y</span></span><br><span class=\"line\">Y</span><br></pre></td></tr></table></figure>\n\n\n\n\n<pre><code>array([[-2.10795032,  0.64427554],\n       [-2.38797131,  0.30583307],\n       [-2.32487909,  0.56292316],\n       [-2.40508635, -0.687591  ],\n       [-2.08320351, -1.53025171],\n       [-2.4636848 , -0.08795413],\n       [-2.25174963, -0.25964365],\n       [-2.3645813 ,  1.08255676],\n       [-2.20946338,  0.43707676],\n       [-2.17862017, -1.08221046],\n       [-2.34525657, -0.17122946],\n       [-2.24590315,  0.6974389 ],\n       [-2.66214582,  0.92447316],\n       [-2.2050227 , -1.90150522],\n       [-2.25993023, -2.73492274],\n       [-2.21591283, -1.52588897],\n       [-2.20705382, -0.52623535],\n       [-1.9077081 , -1.4415791 ],\n       [-2.35411558, -1.17088308],\n       [-1.93202643, -0.44083479],\n       [-2.21942518, -0.96477499],\n       [-2.79116421, -0.50421849],\n       [-1.83814105, -0.11729122],\n       [-2.24572458, -0.17450151],\n       [-1.97825353,  0.59734172],\n       [-2.06935091, -0.27755619],\n       [-2.18514506, -0.56366755],\n       [-2.15824269, -0.34805785],\n       [-2.28843932,  0.30256102],\n       [-2.16501749,  0.47232759],\n       [-1.8491597 , -0.45547527],\n       [-2.62023392, -1.84237072],\n       [-2.44885384, -2.1984673 ],\n       [-2.20946338,  0.43707676],\n       [-2.23112223,  0.17266644],\n       [-2.06147331, -0.6957435 ],\n       [-2.20946338,  0.43707676],\n       [-2.45783833,  0.86912843],\n       [-2.1884075 , -0.30439609],\n       [-2.30357329, -0.48039222],\n       [-1.89932763,  2.31759817],\n       [-2.57799771,  0.4400904 ],\n       [-1.98020921, -0.50889705],\n       [-2.14679556, -1.18365675],\n       [-2.09668176,  0.68061705],\n       [-2.39554894, -1.16356284],\n       [-2.41813611,  0.34949483],\n       [-2.24196231, -1.03745802],\n       [-2.22484727, -0.04403395],\n       [ 1.09225538, -0.86148748],\n       [ 0.72045861, -0.59920238],\n       [ 1.2299583 , -0.61280832],\n       [ 0.37598859,  1.756516  ],\n       [ 1.05729685,  0.21303055],\n       [ 0.36816104,  0.58896262],\n       [ 0.73800214, -0.77956125],\n       [-0.52021731,  1.84337921],\n       [ 0.9113379 , -0.02941906],\n       [-0.01292322,  1.02537703],\n       [-0.15020174,  2.65452146],\n       [ 0.42437533,  0.05686991],\n       [ 0.52894687,  1.77250558],\n       [ 0.70241525,  0.18484154],\n       [-0.05385675,  0.42901221],\n       [ 0.86277668, -0.50943908],\n       [ 0.33388091,  0.18785518],\n       [ 0.13504146,  0.7883247 ],\n       [ 1.19457128,  1.63549265],\n       [ 0.13677262,  1.30063807],\n       [ 0.72711201, -0.40394501],\n       [ 0.45564294,  0.41540628],\n       [ 1.21038365,  0.94282042],\n       [ 0.61327355,  0.4161824 ],\n       [ 0.68512164,  0.06335788],\n       [ 0.85951424, -0.25016762],\n       [ 1.23906722,  0.08500278],\n       [ 1.34575245, -0.32669695],\n       [ 0.64732915,  0.22336443],\n       [-0.06728496,  1.05414028],\n       [ 0.10033285,  1.56100021],\n       [-0.00745518,  1.57050182],\n       [ 0.2179082 ,  0.77368423],\n       [ 1.04116321,  0.63744742],\n       [ 0.20719664,  0.27736006],\n       [ 0.42154138, -0.85764157],\n       [ 1.03691937, -0.52112206],\n       [ 1.015435  ,  1.39413373],\n       [ 0.0519502 ,  0.20903977],\n       [ 0.25582921,  1.32747797],\n       [ 0.25384813,  1.11700714],\n       [ 0.60915822, -0.02858679],\n       [ 0.31116522,  0.98711256],\n       [-0.39679548,  2.01314578],\n       [ 0.26536661,  0.85150613],\n       [ 0.07385897,  0.17160757],\n       [ 0.20854936,  0.37771566],\n       [ 0.55843737,  0.15286277],\n       [-0.47853403,  1.53421644],\n       [ 0.23545172,  0.59332536],\n       [ 1.8408037 , -0.86943848],\n       [ 1.13831104,  0.70171953],\n       [ 2.19615974, -0.54916658],\n       [ 1.42613827,  0.05187679],\n       [ 1.8575403 , -0.28797217],\n       [ 2.74511173, -0.78056359],\n       [ 0.34010583,  1.5568955 ],\n       [ 2.29180093, -0.40328242],\n       [ 1.98618025,  0.72876171],\n       [ 2.26382116, -1.91685818],\n       [ 1.35591821, -0.69255356],\n       [ 1.58471851,  0.43102351],\n       [ 1.87342402, -0.41054652],\n       [ 1.23656166,  1.16818977],\n       [ 1.45128483,  0.4451459 ],\n       [ 1.58276283, -0.67521526],\n       [ 1.45956552, -0.25105642],\n       [ 2.43560434, -2.55096977],\n       [ 3.29752602,  0.01266612],\n       [ 1.23377366,  1.71954411],\n       [ 2.03218282, -0.90334021],\n       [ 0.95980311,  0.57047585],\n       [ 2.88717988, -0.38895776],\n       [ 1.31405636,  0.48854962],\n       [ 1.69619746, -1.01153249],\n       [ 1.94868773, -0.99881497],\n       [ 1.1574572 ,  0.31987373],\n       [ 1.007133  , -0.06550254],\n       [ 1.7733922 ,  0.19641059],\n       [ 1.85327106, -0.55077372],\n       [ 2.4234788 , -0.2397454 ],\n       [ 2.31353522, -2.62038074],\n       [ 1.84800289,  0.18799967],\n       [ 1.09649923,  0.29708201],\n       [ 1.1812503 ,  0.81858241],\n       [ 2.79178861, -0.83668445],\n       [ 1.57340399, -1.07118383],\n       [ 1.33614369, -0.420823  ],\n       [ 0.91061354, -0.01965942],\n       [ 1.84350913, -0.66872729],\n       [ 2.00701161, -0.60663655],\n       [ 1.89319854, -0.68227708],\n       [ 1.13831104,  0.70171953],\n       [ 2.03519535, -0.86076914],\n       [ 1.99464025, -1.04517619],\n       [ 1.85977129, -0.37934387],\n       [ 1.54200377,  0.90808604],\n       [ 1.50925493, -0.26460621],\n       [ 1.3690965 , -1.01583909],\n       [ 0.94680339,  0.02182097]])\n</code></pre>\n<p>查看降维前的区分表现。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">6</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"keyword\">for</span> lab, col <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>((<span class=\"string\">&#x27;Iris-setosa&#x27;</span>, <span class=\"string\">&#x27;Iris-versicolor&#x27;</span>, <span class=\"string\">&#x27;Iris-virginica&#x27;</span>),</span><br><span class=\"line\">                        (<span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>)):</span><br><span class=\"line\">     plt.scatter(X[y==lab, <span class=\"number\">0</span>],</span><br><span class=\"line\">                X[y==lab, <span class=\"number\">1</span>],</span><br><span class=\"line\">                label=lab,</span><br><span class=\"line\">                c=col)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;sepal_len&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;sepal_wid&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_26_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_26_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>查看降维后的区分表现。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">6</span>, <span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"keyword\">for</span> lab, col <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>((<span class=\"string\">&#x27;Iris-setosa&#x27;</span>, <span class=\"string\">&#x27;Iris-versicolor&#x27;</span>, <span class=\"string\">&#x27;Iris-virginica&#x27;</span>),</span><br><span class=\"line\">                        (<span class=\"string\">&#x27;blue&#x27;</span>, <span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;green&#x27;</span>)):</span><br><span class=\"line\">     plt.scatter(Y[y==lab, <span class=\"number\">0</span>],</span><br><span class=\"line\">                Y[y==lab, <span class=\"number\">1</span>],</span><br><span class=\"line\">                label=lab,</span><br><span class=\"line\">                c=col)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Principal Component 1&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Principal Component 2&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;lower center&#x27;</span>)</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_28_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_28_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<h1 id=\"利用SK-LEARN-PCA进行降维\"><a href=\"#利用SK-LEARN-PCA进行降维\" class=\"headerlink\" title=\"利用SK-LEARN PCA进行降维\"></a>利用SK-LEARN PCA进行降维</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.decomposition <span class=\"keyword\">import</span> PCA</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 加载鸢尾花数据集</span></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">X = iris.data</span><br><span class=\"line\">y = iris.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 数据标准化</span></span><br><span class=\"line\">scaler = StandardScaler()</span><br><span class=\"line\">X_std = scaler.fit_transform(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 应用PCA降维</span></span><br><span class=\"line\">pca = PCA()</span><br><span class=\"line\">X_pca = pca.fit_transform(X_std)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 计算特征值总和</span></span><br><span class=\"line\">tot = <span class=\"built_in\">sum</span>(pca.explained_variance_)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 计算每个特征值占总和的百分比，并按降序排序</span></span><br><span class=\"line\">var_exp = [(i / tot) * <span class=\"number\">100</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(pca.explained_variance_, reverse=<span class=\"literal\">True</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. 输出每个特征值的变异解释百分比</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;变异解释百分比:&quot;</span>, var_exp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7. 计算累计变异解释百分比</span></span><br><span class=\"line\">cum_var_exp = np.cumsum(var_exp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 8. 输出累计变异解释百分比</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;累计变异解释百分比:&quot;</span>, cum_var_exp)</span><br></pre></td></tr></table></figure>\n\n<pre><code>变异解释百分比: [np.float64(72.96244541329987), np.float64(22.850761786701742), np.float64(3.668921889282886), np.float64(0.5178709107154782)]\n累计变异解释百分比: [ 72.96244541  95.8132072   99.48212909 100.        ]\n</code></pre>\n<p>由上述结果同样可见，前两个特征向量累计贡献的方差为95.81%，故取前2个特征向量。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 应用PCA降维到2个主成分</span></span><br><span class=\"line\">pca = PCA(n_components=<span class=\"number\">2</span>)</span><br><span class=\"line\">X_pca = pca.fit_transform(X_std)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 绘制PCA图</span></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">8</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为不同的类别绘制不同颜色的点</span></span><br><span class=\"line\">colors = [<span class=\"string\">&#x27;r&#x27;</span>, <span class=\"string\">&#x27;g&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>]</span><br><span class=\"line\">markers = [<span class=\"string\">&#x27;s&#x27;</span>, <span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;o&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, color, marker <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(<span class=\"built_in\">range</span>(<span class=\"number\">3</span>), colors, markers):</span><br><span class=\"line\">    plt.scatter(x=X_pca[y == idx, <span class=\"number\">0</span>], </span><br><span class=\"line\">                y=X_pca[y == idx, <span class=\"number\">1</span>],</span><br><span class=\"line\">                c=color, </span><br><span class=\"line\">                marker=marker,</span><br><span class=\"line\">                label=iris.target_names[idx])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加标题和标签</span></span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;PCA of Iris Dataset&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Principal Component 1&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Principal Component 2&#x27;</span>)</span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\">plt.grid(<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示图形</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_32_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/PCA_files/PCA_32_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”，获取更多教程。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"AI","path":"api/categories/AI.json"}],"tags":[{"name":"机器学习","path":"api/tags/机器学习.json"},{"name":"Scikit-learn","path":"api/tags/Scikit-learn.json"}]},{"title":"PyTorch实战-利用卷积神经网络完成手写数字识别","slug":"PyTorch实战-利用卷积神经网络完成手写数字识别","date":"2024-09-01T04:37:55.000Z","updated":"2024-09-01T04:57:42.611Z","comments":true,"path":"api/articles/PyTorch实战-利用卷积神经网络完成手写数字识别.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/mnist.pytorchOK_files/mnist.pytorchOK_5_0.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>卷积神经网络（Convolutional Neural Networks, CNNs）是一种特殊类型的神经网络，在图像和视频识别、推荐系统、图像分类、医学图像分析、自然语言处理等领域有着广泛的应用。它们能够自动从原始图像中提取特征，并通过多层网络结构学习这些特征的高级表示。本文通过手写数字识别项目带大家学习卷积神经网络。</p>\n<h1 id=\"卷积神经网络基本概念\"><a href=\"#卷积神经网络基本概念\" class=\"headerlink\" title=\"卷积神经网络基本概念\"></a>卷积神经网络基本概念</h1><h2 id=\"CNN结构\"><a href=\"#CNN结构\" class=\"headerlink\" title=\"CNN结构\"></a>CNN结构</h2><p>输入层（Input Layer）–&gt; {卷积层（Convolutional Layer） –&gt; 池化层（Pooling Layer）–&gt; 卷积层（Convolutional Layer） –&gt; 池化层（Pooling Layer）}(重复) –&gt; 全连接层（Fully Connected Layer）</p>\n<h2 id=\"卷积层\"><a href=\"#卷积层\" class=\"headerlink\" title=\"卷积层\"></a>卷积层</h2><p>在深度学习和计算机视觉中，尤其是在处理卷积神经网络（CNN）时，计算输出尺寸（Output Size）的公式非常重要。您给出的公式是卷积层输出尺寸计算的一个基本公式，但通常我们会用更直观的符号来表示它。下面是该公式转换为常用表示方法的形式：</p>\n<p>$$ O &#x3D; \\left\\lfloor \\frac{I + 2P - K}{S} \\right\\rfloor + 1 $$</p>\n<p>其中：</p>\n<ul>\n<li>$O$ 代表输出尺寸（Output Size），通常是输出特征图的高度或宽度（假设它们是相等的，即正方形特征图）。</li>\n<li>$I$ 代表输入尺寸（Input Size），即输入特征图的高度或宽度。</li>\n<li>$P$ 代表填充（Padding）的大小，即在输入特征图的边界上添加的零的层数。注意，这里的 $2P$ 表示在输入特征图的两侧（或上下两侧，取决于维度）都添加了 $P$ 层的零。</li>\n<li>$K$ 代表卷积核（Kernel Size）的大小，即卷积核的高度或宽度（在正方形卷积核的情况下）。</li>\n<li>$S$ 代表步长（Stride），即卷积核在输入特征图上移动的步数。</li>\n<li>$\\left\\lfloor \\cdot \\right\\rfloor$ 表示向下取整操作，因为像素数必须是整数。</li>\n</ul>\n<p>这个公式适用于计算卷积层（包括标准卷积层和转置卷积层，但转置卷积层有额外的参数和复杂性）后的输出特征图尺寸。在实际应用中，了解如何根据这些参数调整网络结构以得到期望的输出尺寸是非常重要的。</p>\n<h2 id=\"激活函数（Activation-Function）\"><a href=\"#激活函数（Activation-Function）\" class=\"headerlink\" title=\"激活函数（Activation Function）\"></a>激活函数（Activation Function）</h2><p>激活函数用于在卷积层（以及其他类型的神经网络层）之后引入非线性。常见的激活函数包括ReLU（Rectified Linear Unit，修正线性单元）、sigmoid和tanh等。ReLU因其简单性和减少梯度消失问题的能力而在CNN中广泛使用。</p>\n<h2 id=\"池化层\"><a href=\"#池化层\" class=\"headerlink\" title=\"池化层\"></a>池化层</h2><p>池化层（Pooling Layer）在卷积神经网络（CNN）中扮演着重要的角色，主要用于特征融合和降维，以减少计算量和控制过拟合。池化层的输入尺寸和输出尺寸计算公式可以根据不同的参数设置而有所不同，但基本思路是相似的。</p>\n<h3 id=\"池化层的输出尺寸计算公式\"><a href=\"#池化层的输出尺寸计算公式\" class=\"headerlink\" title=\"池化层的输出尺寸计算公式\"></a>池化层的输出尺寸计算公式</h3><p>池化层的输出尺寸计算公式可以表示为：</p>\n<p>$$ O &#x3D; \\left\\lfloor \\frac{I + 2P - F}{S} + 1 \\right\\rfloor $$</p>\n<p>其中：</p>\n<ul>\n<li>$O$ 代表输出尺寸（Output Size），即池化层输出的特征图的高度和宽度。</li>\n<li>$I$ 代表输入尺寸（Input Size），即输入特征图的高度和宽度。</li>\n<li>$F$ 是池化窗口（Pooling Window）的大小，即池化操作覆盖的输入特征图的区域大小。</li>\n<li>$S$ 是步长（Stride），即池化窗口在输入特征图上移动的步数。</li>\n<li>$P$ 是填充（Padding），即在输入特征图的边界上添加的零的层数，用于控制输出尺寸。</li>\n<li>$\\left\\lfloor \\cdot \\right\\rfloor$ 表示向下取整操作，因为像素数必须是整数。</li>\n</ul>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>池化层通常不涉及权重和偏置参数，因此它们不会影响模型的学习能力，但对于减少计算量和控制过拟合非常有帮助。</li>\n<li>在实际应用中，池化窗口的大小$F$和步长$S$通常设置为相同的值，如2或3，这样可以更有效地降低特征图的维度。</li>\n<li>填充$P$的值可以是0（无填充），也可以是其他正整数（有填充），具体取决于需要保持输出特征图尺寸与输入特征图尺寸的比例关系。</li>\n</ul>\n<h2 id=\"全连接层（Fully-Connected-Layer-FC-Layer）\"><a href=\"#全连接层（Fully-Connected-Layer-FC-Layer）\" class=\"headerlink\" title=\"全连接层（Fully Connected Layer, FC Layer）\"></a>全连接层（Fully Connected Layer, FC Layer）</h2><p>在CNN的末端，通常会有几个全连接层。这些层中的每个神经元都与前一层的所有神经元相连接。全连接层的作用是将前面层学到的“分布式特征表示”映射到样本标记空间。在分类任务中，全连接层的输出可以传递给softmax函数来生成最终的类别概率分布。</p>\n<h2 id=\"参数共享（Parameter-Sharing）\"><a href=\"#参数共享（Parameter-Sharing）\" class=\"headerlink\" title=\"参数共享（Parameter Sharing）\"></a>参数共享（Parameter Sharing）</h2><p>在CNN中，卷积核的参数是在整个输入数据上共享的。这意味着无论数据中的哪个位置，卷积核都使用相同的权重和偏置参数进行卷积操作。这种参数共享机制减少了模型的参数量，并有助于模型学习到输入数据的空间层次结构。</p>\n<h2 id=\"局部连接（Local-Connectivity）\"><a href=\"#局部连接（Local-Connectivity）\" class=\"headerlink\" title=\"局部连接（Local Connectivity）\"></a>局部连接（Local Connectivity）</h2><p>在卷积层中，每个神经元仅与输入数据的一个局部区域（即感受野）相连接，而不是与整个输入数据相连接。这种局部连接机制使得CNN能够学习到数据的局部特征，这与人类视觉系统的处理机制相似。</p>\n<h2 id=\"反向传播（Backpropagation）\"><a href=\"#反向传播（Backpropagation）\" class=\"headerlink\" title=\"反向传播（Backpropagation）\"></a>反向传播（Backpropagation）</h2><p>反向传播算法是训练CNN（以及其他类型的神经网络）的关键算法。在训练过程中，通过计算损失函数关于网络参数的梯度，并利用梯度下降（或其变体）来更新网络参数，以最小化损失函数。反向传播算法通过链式法则在网络的每一层中传播梯度信息。</p>\n<h1 id=\"MNIST数据集介绍\"><a href=\"#MNIST数据集介绍\" class=\"headerlink\" title=\"MNIST数据集介绍\"></a>MNIST数据集介绍</h1><p>在探索机器学习领域的广阔天地时，手写数字识别作为一个经典且基础的任务，始终占据着重要的地位。而MNIST（Modified National Institute of Standards and Technology）数据集，正是这一任务中最常用、最经典的数据集之一。本文将首先介绍MNIST数据集，为后续的手写数字识别模型训练与测试打下坚实的基础。</p>\n<h2 id=\"MNIST数据集概述\"><a href=\"#MNIST数据集概述\" class=\"headerlink\" title=\"MNIST数据集概述\"></a>MNIST数据集概述</h2><p>MNIST数据集由Yann LeCun等人搜集整理，是一个大型的手写体数字数据库。该数据集最初来源于NIST（National Institute of Standards and Technology）的两个数据库：专用数据库1（Special Database 1）和特殊数据库3（Special Database 3）。通过精心筛选与预处理，MNIST最终成为了一个包含大量手写数字图像的标准数据集，广泛应用于各种图像处理系统和机器学习算法的训练与测试中。</p>\n<h2 id=\"数据集的构成\"><a href=\"#数据集的构成\" class=\"headerlink\" title=\"数据集的构成\"></a>数据集的构成</h2><p>MNIST数据集由60,000个训练样本和10,000个测试样本组成，每个样本都是一张<code>28x28</code>像素的灰度图像，表示一个手写数字（0-9）。这些图像均已被归一化，像素值范围在0到255之间，其中<code>0</code>代表黑色，<code>255</code>代表白色。数据集的图像由来自不同人群的手写体构成，包括高中生和美国人口普查局的工作人员，确保了数据的多样性和代表性。</p>\n<h2 id=\"数据集的特点\"><a href=\"#数据集的特点\" class=\"headerlink\" title=\"数据集的特点\"></a>数据集的特点</h2><ol>\n<li><p><strong>简单性</strong>：虽然MNIST数据集包含的手写数字种类繁多，但由于其图像尺寸小（28x28像素）、像素深度低（灰度图像），使得处理起来相对简单。这使其成为机器学习初学者练习图像识别、模式识别等任务的理想选择。</p>\n</li>\n<li><p><strong>代表性</strong>：MNIST数据集中的手写数字覆盖了各种书写风格和变体，使得训练出的模型能够较好地泛化到未知的手写数字上。因此，该数据集在评估机器学习算法性能时具有很高的参考价值。</p>\n</li>\n<li><p><strong>广泛应用</strong>：由于其简单性和代表性，MNIST数据集在机器学习领域得到了广泛应用。从简单的神经网络到复杂的深度学习模型，几乎所有的图像识别算法都会使用MNIST数据集进行训练和测试。</p>\n</li>\n</ol>\n<h2 id=\"数据集的下载与使用\"><a href=\"#数据集的下载与使用\" class=\"headerlink\" title=\"数据集的下载与使用\"></a>数据集的下载与使用</h2><p>MNIST数据集可以通过多种途径下载，其中最常用的方式是通过互联网直接下载。用户可以从Yann LeCun的官方网站（<a href=\"http://yann.lecun.com/exdb/mnist/%EF%BC%89%E6%88%96%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0%E8%8E%B7%E5%8F%96%E8%AF%A5%E6%95%B0%E6%8D%AE%E9%9B%86%E3%80%82%E4%B8%8B%E8%BD%BD%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE%E9%9B%86%E9%80%9A%E5%B8%B8%E5%8C%85%E5%90%AB%E5%9B%9B%E4%B8%AA%E6%96%87%E4%BB%B6%EF%BC%9A%E8%AE%AD%E7%BB%83%E9%9B%86%E5%9B%BE%E5%83%8F%E3%80%81%E8%AE%AD%E7%BB%83%E9%9B%86%E6%A0%87%E7%AD%BE%E3%80%81%E6%B5%8B%E8%AF%95%E9%9B%86%E5%9B%BE%E5%83%8F%E5%92%8C%E6%B5%8B%E8%AF%95%E9%9B%86%E6%A0%87%E7%AD%BE%E3%80%82%E8%BF%99%E4%BA%9B%E6%96%87%E4%BB%B6%E5%9D%87%E4%B8%BA%E5%8E%8B%E7%BC%A9%E6%A0%BC%E5%BC%8F%EF%BC%8C%E7%94%A8%E6%88%B7%E9%9C%80%E8%A6%81%E8%A7%A3%E5%8E%8B%E5%90%8E%E6%89%8D%E8%83%BD%E4%BD%BF%E7%94%A8%E3%80%82\">http://yann.lecun.com/exdb/mnist/）或其他数据共享平台获取该数据集。下载后的数据集通常包含四个文件：训练集图像、训练集标签、测试集图像和测试集标签。这些文件均为压缩格式，用户需要解压后才能使用。</a></p>\n<p>在使用MNIST数据集时，用户需要根据自己的需求进行预处理和加载操作。例如，可以使用Python的NumPy库或Pandas库来读取和处理数据集中的图像和标签信息；也可以使用深度学习框架（如TensorFlow、PyTorch等）中提供的数据加载工具来简化这一过程。</p>\n<h1 id=\"下载并导入数据集\"><a href=\"#下载并导入数据集\" class=\"headerlink\" title=\"下载并导入数据集\"></a>下载并导入数据集</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入必要的库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn <span class=\"keyword\">as</span> nn</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.optim <span class=\"keyword\">as</span> optim</span><br><span class=\"line\"><span class=\"keyword\">from</span> torchvision <span class=\"keyword\">import</span> datasets, transforms</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.data <span class=\"keyword\">import</span> DataLoader</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn.functional <span class=\"keyword\">as</span> F</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据预处理</span></span><br><span class=\"line\"><span class=\"comment\"># 使用Compose组合多个变换，这里将数据转换为张量并进行标准化</span></span><br><span class=\"line\">transform = transforms.Compose([</span><br><span class=\"line\">    transforms.ToTensor(),</span><br><span class=\"line\">    transforms.Normalize((<span class=\"number\">0.5</span>,), (<span class=\"number\">0.5</span>,))</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载MNIST数据集并划分为训练集和测试集</span></span><br><span class=\"line\">train_dataset = datasets.MNIST(root=<span class=\"string\">&#x27;./data&#x27;</span>, train=<span class=\"literal\">True</span>, download=<span class=\"literal\">True</span>, transform=transform)</span><br><span class=\"line\">test_dataset = datasets.MNIST(root=<span class=\"string\">&#x27;./data&#x27;</span>, train=<span class=\"literal\">False</span>, download=<span class=\"literal\">True</span>, transform=transform)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>查看训练集属性：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看整个训练集的样本数量及单个样本的形状</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;训练集大小: <span class=\"subst\">&#123;<span class=\"built_in\">len</span>(train_dataset)&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 查看第一个样本的数据和标签</span></span><br><span class=\"line\">first_sample, first_label = train_dataset[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;首个样本数据形状: <span class=\"subst\">&#123;first_sample.shape&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;首个样本标签: <span class=\"subst\">&#123;first_label&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果想查看前几个样本的具体数据内容，可以通过循环实现</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>):</span><br><span class=\"line\">    data, label = train_dataset[i]</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;样本 <span class=\"subst\">&#123;i+<span class=\"number\">1</span>&#125;</span> 的数据:\\n<span class=\"subst\">&#123;data&#125;</span>\\n标签: <span class=\"subst\">&#123;label&#125;</span>\\n&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>训练集大小: 60000\n首个样本数据形状: torch.Size([1, 28, 28])\n首个样本标签: 5\n样本 1 的数据:\ntensor([[[-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.9765, -0.8588,\n          -0.8588, -0.8588, -0.0118,  0.0667,  0.3725, -0.7961,  0.3020,\n           1.0000,  0.9373, -0.0039, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.7647, -0.7176, -0.2627,  0.2078,  0.3333,  0.9843,\n           0.9843,  0.9843,  0.9843,  0.9843,  0.7647,  0.3490,  0.9843,\n           0.8980,  0.5294, -0.4980, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.6157,  0.8667,  0.9843,  0.9843,  0.9843,  0.9843,  0.9843,\n           0.9843,  0.9843,  0.9843,  0.9686, -0.2706, -0.3569, -0.3569,\n          -0.5608, -0.6941, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.8588,  0.7176,  0.9843,  0.9843,  0.9843,  0.9843,  0.9843,\n           0.5529,  0.4275,  0.9373,  0.8902, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.3725,  0.2235, -0.1608,  0.9843,  0.9843,  0.6078,\n          -0.9137, -1.0000, -0.6627,  0.2078, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -0.8902, -0.9922,  0.2078,  0.9843, -0.2941,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000,  0.0902,  0.9843,  0.4902,\n          -0.9843, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -0.9137,  0.4902,  0.9843,\n          -0.4510, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.7255,  0.8902,\n           0.7647,  0.2549, -0.1529, -0.9922, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3647,\n           0.8824,  0.9843,  0.9843, -0.0667, -0.8039, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.6471,  0.4588,  0.9843,  0.9843,  0.1765, -0.7882, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.8745, -0.2706,  0.9765,  0.9843,  0.4667, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.9529,  0.9843,  0.9529, -0.4980,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.6392,  0.0196,  0.4353,  0.9843,  0.9843,  0.6235, -0.9843,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.6941,  0.1608,\n           0.7961,  0.9843,  0.9843,  0.9843,  0.9608,  0.4275, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -0.8118, -0.1059,  0.7333,  0.9843,\n           0.9843,  0.9843,  0.9843,  0.5765, -0.3882, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.8196, -0.4824,  0.6706,  0.9843,  0.9843,  0.9843,\n           0.9843,  0.5529, -0.3647, -0.9843, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.8588,\n           0.3412,  0.7176,  0.9843,  0.9843,  0.9843,  0.9843,  0.5294,\n          -0.3725, -0.9294, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -0.5686,  0.3490,  0.7725,\n           0.9843,  0.9843,  0.9843,  0.9843,  0.9137,  0.0431, -0.9137,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000,  0.0667,  0.9843,  0.9843,\n           0.9843,  0.6627,  0.0588,  0.0353, -0.8745, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000]]])\n标签: 5\n\n样本 2 的数据:\ntensor([[[-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.6000,  0.2471,  0.9843,  0.2471, -0.6078, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.6235,  0.8667,  0.9765,  0.9765,  0.9765,  0.8588, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.5765,\n           0.7804,  0.9843,  0.9765,  0.8745,  0.8275,  0.9765, -0.5529,\n          -0.9529, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -0.9216, -0.5294,  0.7569,\n           0.9765,  0.9843,  0.9765,  0.5843, -0.3412,  0.9765,  0.9843,\n          -0.0431, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000,  0.2784,  0.9765,  0.9765,\n           0.9765,  0.9843,  0.9765,  0.9765, -0.2471,  0.4824,  0.9843,\n           0.3098, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -0.6000,  0.8667,  0.9843,  0.9843,\n           0.4902, -0.1059,  0.9843,  0.7882, -0.6314, -0.3804,  1.0000,\n           0.3176, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -0.6235,  0.8667,  0.9765,  0.9765,  0.4039,\n          -0.9059, -0.4118, -0.0510, -0.8353, -1.0000, -1.0000,  0.9843,\n           0.9059, -0.6078, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.7020,  0.2941,  0.9843,  0.8275,  0.6314, -0.3412,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.9843,\n           0.9765,  0.2941, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.9451,  0.3961,  0.9765,  0.8824, -0.4431, -0.8510, -0.7804,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.9843,\n           0.9765,  0.5294, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.5529,  0.9765,  0.9765, -0.5059, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.9843,\n           0.9765,  0.5294, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n           0.5529,  0.9843,  0.4902, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  1.0000,\n           0.9843,  0.5373, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.4039,\n           0.9294,  0.9765, -0.1216, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.9843,\n           0.9765,  0.1608, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3333,\n           0.9765,  0.8039, -0.8039, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -0.9451,  0.0588,  0.9843,\n           0.4588, -0.9059, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3333,\n           0.9765,  0.7490, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -0.9451,  0.0275,  0.9765,  0.7647,\n          -0.4431, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3333,\n           0.9765,  0.1373, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -0.6235,  0.2941,  0.9765,  0.3569, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3255,\n           0.9843,  0.7647, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.1059,  0.8667,  0.9843,  0.2706, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3333,\n           0.9765,  0.9529,  0.1451, -0.6235, -0.7725, -0.3333,  0.3961,\n           0.7647,  0.9843,  0.7490,  0.3098, -0.5608, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3333,\n           0.9765,  0.9765,  0.9765,  0.7961,  0.6863,  0.9765,  0.9765,\n           0.9765,  0.5373,  0.0196, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.7804,\n           0.5608,  0.9765,  0.9765,  0.9843,  0.9765,  0.9765,  0.8275,\n           0.1373, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.8039,  0.0039,  0.9765,  0.9843,  0.9765,  0.1059, -0.7098,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000]]])\n标签: 0\n\n样本 3 的数据:\ntensor([[[-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.4745,\n           0.8196, -0.6941, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -0.5137, -0.3647, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.0588,\n           0.4118, -0.6941, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -0.0118,  0.2784, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.9843,  0.2000,\n           0.6471, -0.6863, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000,  0.7255,  0.2784, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.7882,  0.9922,\n           0.2706, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000,  0.7412,  0.2784, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.4353,  0.9922,\n          -0.0196, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -0.6392,  0.9216,  0.2784, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,  0.5529,  0.9922,\n          -0.5608, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -0.0588,  0.9922,  0.2784, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -0.8196,  0.8118,  0.9922,\n          -0.7725, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000,  0.2471,  0.9922, -0.0588, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000,  0.2784,  0.9922,  0.6941,\n          -0.8745, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000,  0.2471,  0.9922, -0.4745, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.8902, -0.3255,  0.3961,  0.9451,  0.9922, -0.2863,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000,  0.2471,  0.9922, -0.3333, -1.0000,\n          -1.0000, -1.0000, -0.6314, -0.6157, -0.0902,  0.1294,  0.1765,\n           0.8902,  0.9059,  0.8353,  0.4039,  0.8902,  0.9765, -0.6863,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000,  0.1765,  0.9843,  0.8588,  0.6235,\n           0.6235,  0.6235,  0.9843,  0.9922,  0.9608,  0.8824,  0.5529,\n           0.1216, -0.2863, -0.7804, -0.9608,  0.8275,  0.9608, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -0.0667,  0.3882,  0.3882,\n           0.3882,  0.3882,  0.3882, -0.2314, -0.5608, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -0.2000,  0.9922,  0.7255, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.3255,  0.9922,  0.0745, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.3255,  0.9922, -0.5529, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.3255,  0.9922, -0.5529, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.3255,  1.0000, -0.2627, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.3255,  0.9922, -0.2471, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.3255,  0.9922,  0.2000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.3255,  1.0000,  0.2000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -0.2471,  0.9922,  0.2000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000]]])\n标签: 4\n\n样本 4 的数据:\ntensor([[[-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -0.0275,  0.9843,  1.0000,\n          -0.5059, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -0.2471,  0.9137,  0.9686,  0.9843,\n          -0.5137, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -0.0039,  0.9686,  0.9686,  0.9843,\n          -0.5137, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -0.4667,  0.8510,  0.9686,  0.6549, -0.7569,\n          -0.9373, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.5294,  0.7882,  0.9686,  0.9686, -0.2627, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000,  0.2157,  0.9843,  0.9843,  0.4824, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.8431,  0.9843,  0.9686,  0.8431, -0.4824, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.7490,\n           0.6078,  0.9843,  0.9686, -0.0118, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.1843,\n           0.9686,  0.9843,  0.4431, -0.8824, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.3725,  0.8824,\n           0.9686,  0.5137, -0.8196, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -0.7490,  0.9843,  0.9843,\n           0.9843,  0.2471, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000,  0.1843,  0.9686,  0.9686,\n           0.9686, -0.6941, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -0.6235,  0.7333,  0.9686,  0.9686,\n           0.3490, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.8353,  0.9686,  0.9686,  0.5373,\n          -0.9059, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000,  0.9843,  0.9686,  0.9686, -0.3020,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000,  0.2471,  1.0000,  0.9843,  0.9843, -0.7569,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.6235,  0.7882,  0.9843,  0.9373,  0.0980, -0.9373,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.4980,  0.9686,  0.9843,  0.7255, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.4980,  0.9686,  0.9843,  0.7255, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.8118,  0.5137,  0.9843,  0.7255, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000]]])\n标签: 1\n\n样本 5 的数据:\ntensor([[[-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.5686,  0.1608,\n           0.6471,  0.9843,  0.9843, -0.1137, -0.3176,  0.1608, -0.5686,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -0.3176,  0.8196,  0.9765,\n           0.9843,  0.4824,  0.6471,  0.9765,  0.9765,  0.9843,  0.3176,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -0.9686, -0.5529,  0.8980,  0.9765,  0.4902,\n          -0.4902, -0.9608, -0.9059,  0.4275,  0.9765,  0.9843, -0.0902,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -0.2471,  0.9765,  0.9765,  0.4353, -0.8902,\n          -1.0000, -1.0000, -0.2784,  0.9765,  0.9765,  0.7647, -0.8353,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000,  0.0353,  0.9843,  0.9765,  0.1451, -0.8902, -1.0000,\n          -1.0000, -1.0000,  0.6863,  0.9765,  0.9765, -0.3804, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.0118,  0.9843,  0.9373,  0.3804, -0.9294, -1.0000, -1.0000,\n          -0.9373, -0.3882,  0.9216,  0.9843,  0.0118, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.8745,\n           0.8196,  0.9765,  0.3804, -1.0000, -1.0000, -1.0000, -0.7176,\n           0.5765,  0.9765,  0.9765,  0.3255, -0.9137, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.8275,\n           0.9765,  0.9765, -0.7647, -0.8275, -0.0667,  0.5451,  0.8902,\n           0.9843,  0.9765,  0.9686, -0.3961, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.8745,\n           0.8118,  0.9765,  0.9843,  0.9765,  0.9765,  0.9765,  0.7725,\n           0.7804,  0.9765,  0.8118, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.5686,  0.8431,  0.9843,  0.7020,  0.0824, -0.6706, -0.8118,\n           0.5059,  0.9765,  0.1216, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.5137,\n           1.0000,  0.9843, -0.1451, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.4431,\n           0.9843,  0.9765, -0.8353, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n           0.9843,  0.9765, -0.8353, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.4431,\n           0.9843,  0.9765, -0.8353, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.1686,\n           0.9843,  0.9765, -0.8353, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -0.6471,\n           1.0000,  0.9843, -0.8353, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n           0.7098,  0.9765, -0.5608, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.2471,  0.9765,  0.4824, -0.6706, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -0.8902,  0.4431,  0.9765,  0.3333, -0.9137, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -0.8902,  0.1529,  0.9765, -0.6706, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000],\n         [-1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000,\n          -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000, -1.0000]]])\n标签: 9\n</code></pre>\n<p>展示训练集中的第一幅图片：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取第一个样本的数据和标签</span></span><br><span class=\"line\">first_image, first_label = train_dataset[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将图像数据从形状 (1, 28, 28) 转换为 (28, 28)，以便显示</span></span><br><span class=\"line\">first_image = first_image.squeeze().numpy()  <span class=\"comment\"># 去除通道维度，并转换为numpy数组</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示图像</span></span><br><span class=\"line\">plt.imshow(first_image, cmap=<span class=\"string\">&#x27;gray&#x27;</span>)  <span class=\"comment\"># 使用灰度色阶显示图像</span></span><br><span class=\"line\">plt.title(<span class=\"string\">f&#x27;Label: <span class=\"subst\">&#123;first_label&#125;</span>&#x27;</span>)  <span class=\"comment\"># 显示图像标签作为标题</span></span><br><span class=\"line\">plt.axis(<span class=\"string\">&#x27;off&#x27;</span>)  <span class=\"comment\"># 不显示坐标轴</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/mnist.pytorchOK_files/mnist.pytorchOK_5_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/mnist.pytorchOK_files/mnist.pytorchOK_5_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取第一个样本的数据</span></span><br><span class=\"line\">first_image, _ = train_dataset[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将张量转换为numpy数组以便打印</span></span><br><span class=\"line\">first_image_np = first_image.numpy()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印原始的三维数组（包含通道维度）</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;原始图像数据（包含通道维度）:&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(first_image_np)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<pre><code>原始图像数据（包含通道维度）:\n[[[-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -0.9764706  -0.85882354 -0.85882354\n   -0.85882354 -0.01176471  0.06666672  0.37254906 -0.79607844\n    0.30196083  1.          0.9372549  -0.00392157 -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -0.7647059  -0.7176471\n   -0.26274508  0.20784318  0.33333337  0.9843137   0.9843137\n    0.9843137   0.9843137   0.9843137   0.7647059   0.34901965\n    0.9843137   0.8980392   0.5294118  -0.4980392  -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -0.6156863   0.8666667   0.9843137\n    0.9843137   0.9843137   0.9843137   0.9843137   0.9843137\n    0.9843137   0.9843137   0.96862745 -0.27058822 -0.35686272\n   -0.35686272 -0.56078434 -0.69411767 -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -0.85882354  0.7176471   0.9843137\n    0.9843137   0.9843137   0.9843137   0.9843137   0.5529412\n    0.427451    0.9372549   0.8901961  -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -0.372549    0.22352946\n   -0.1607843   0.9843137   0.9843137   0.60784316 -0.9137255\n   -1.         -0.6627451   0.20784318 -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -0.8901961\n   -0.99215686  0.20784318  0.9843137  -0.29411763 -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.          0.09019613  0.9843137   0.4901961  -0.9843137\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -0.9137255   0.4901961   0.9843137  -0.45098037\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -0.7254902   0.8901961   0.7647059\n    0.254902   -0.15294117 -0.99215686 -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -0.36470586  0.88235295\n    0.9843137   0.9843137  -0.06666666 -0.8039216  -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -0.64705884\n    0.45882356  0.9843137   0.9843137   0.17647064 -0.7882353\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -0.8745098  -0.27058822  0.9764706   0.9843137   0.4666667\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.          0.9529412   0.9843137   0.9529412\n   -0.4980392  -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -0.6392157\n    0.0196079   0.43529415  0.9843137   0.9843137   0.62352943\n   -0.9843137  -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -0.69411767  0.16078436  0.79607844\n    0.9843137   0.9843137   0.9843137   0.9607843   0.427451\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -0.8117647  -0.10588235  0.73333335  0.9843137   0.9843137\n    0.9843137   0.9843137   0.5764706  -0.38823527 -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -0.81960785 -0.4823529\n    0.67058825  0.9843137   0.9843137   0.9843137   0.9843137\n    0.5529412  -0.36470586 -0.9843137  -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -0.85882354  0.3411765   0.7176471   0.9843137\n    0.9843137   0.9843137   0.9843137   0.5294118  -0.372549\n   -0.92941177 -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -0.5686275\n    0.34901965  0.77254903  0.9843137   0.9843137   0.9843137\n    0.9843137   0.9137255   0.04313731 -0.9137255  -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.          0.06666672\n    0.9843137   0.9843137   0.9843137   0.6627451   0.05882359\n    0.03529418 -0.8745098  -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]\n  [-1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.         -1.         -1.\n   -1.         -1.         -1.        ]]]\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果你想去掉通道维度，打印二维矩阵</span></span><br><span class=\"line\">first_image_2d = first_image_np.squeeze()  <span class=\"comment\"># 去掉通道维度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n去掉通道后的二维矩阵:&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(first_image_2d)</span><br></pre></td></tr></table></figure>\n\n<pre><code>去掉通道后的二维矩阵:\n[[-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -0.9764706  -0.85882354 -0.85882354 -0.85882354 -0.01176471  0.06666672\n   0.37254906 -0.79607844  0.30196083  1.          0.9372549  -0.00392157\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -0.7647059  -0.7176471  -0.26274508  0.20784318\n   0.33333337  0.9843137   0.9843137   0.9843137   0.9843137   0.9843137\n   0.7647059   0.34901965  0.9843137   0.8980392   0.5294118  -0.4980392\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -0.6156863   0.8666667   0.9843137   0.9843137   0.9843137\n   0.9843137   0.9843137   0.9843137   0.9843137   0.9843137   0.96862745\n  -0.27058822 -0.35686272 -0.35686272 -0.56078434 -0.69411767 -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -0.85882354  0.7176471   0.9843137   0.9843137   0.9843137\n   0.9843137   0.9843137   0.5529412   0.427451    0.9372549   0.8901961\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -0.372549    0.22352946 -0.1607843   0.9843137\n   0.9843137   0.60784316 -0.9137255  -1.         -0.6627451   0.20784318\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -0.8901961  -0.99215686  0.20784318\n   0.9843137  -0.29411763 -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.          0.09019613\n   0.9843137   0.4901961  -0.9843137  -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -0.9137255\n   0.4901961   0.9843137  -0.45098037 -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -0.7254902   0.8901961   0.7647059   0.254902   -0.15294117 -0.99215686\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -0.36470586  0.88235295  0.9843137   0.9843137  -0.06666666\n  -0.8039216  -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -0.64705884  0.45882356  0.9843137   0.9843137\n   0.17647064 -0.7882353  -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -0.8745098  -0.27058822  0.9764706\n   0.9843137   0.4666667  -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.          0.9529412\n   0.9843137   0.9529412  -0.4980392  -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -0.6392157   0.0196079   0.43529415  0.9843137\n   0.9843137   0.62352943 -0.9843137  -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -0.69411767  0.16078436  0.79607844  0.9843137   0.9843137   0.9843137\n   0.9607843   0.427451   -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -0.8117647  -0.10588235\n   0.73333335  0.9843137   0.9843137   0.9843137   0.9843137   0.5764706\n  -0.38823527 -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -0.81960785 -0.4823529   0.67058825  0.9843137\n   0.9843137   0.9843137   0.9843137   0.5529412  -0.36470586 -0.9843137\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -0.85882354  0.3411765   0.7176471   0.9843137   0.9843137   0.9843137\n   0.9843137   0.5294118  -0.372549   -0.92941177 -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -0.5686275   0.34901965\n   0.77254903  0.9843137   0.9843137   0.9843137   0.9843137   0.9137255\n   0.04313731 -0.9137255  -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.          0.06666672  0.9843137\n   0.9843137   0.9843137   0.6627451   0.05882359  0.03529418 -0.8745098\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]\n [-1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.         -1.         -1.\n  -1.         -1.         -1.         -1.        ]]\n</code></pre>\n<h1 id=\"定义模型、优化器、损失函数\"><a href=\"#定义模型、优化器、损失函数\" class=\"headerlink\" title=\"定义模型、优化器、损失函数\"></a>定义模型、优化器、损失函数</h1><p>进行2次卷积和2次池化，得到64<em>7</em>17，再进行2次全连接，得到10个输出。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义批次大小</span></span><br><span class=\"line\">batch_size = <span class=\"number\">64</span></span><br><span class=\"line\"><span class=\"comment\"># 使用DataLoader加载数据，以便在训练过程中更方便地迭代数据</span></span><br><span class=\"line\">train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=<span class=\"literal\">True</span>)</span><br><span class=\"line\">test_loader = DataLoader(test_dataset, batch_size=batch_size, shuffle=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义模型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Net</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Net, self).__init__()</span><br><span class=\"line\">        <span class=\"comment\"># 初始化卷积层、池化层、全连接层和dropout层</span></span><br><span class=\"line\">        <span class=\"comment\"># 定义第一个卷积层，用于提取特征</span></span><br><span class=\"line\">        <span class=\"comment\"># 输入通道数为1（适用于灰度图像），输出通道数为32，卷积核大小为5x5，步长为1，padding为2</span></span><br><span class=\"line\">        <span class=\"comment\"># 第一次卷积后生成的特征图大小为32*28*28</span></span><br><span class=\"line\">        self.conv1 = nn.Conv2d(<span class=\"number\">1</span>, <span class=\"number\">32</span>, kernel_size=<span class=\"number\">5</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">2</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 定义最大池化层，用于降低特征维度，减少计算量</span></span><br><span class=\"line\">        <span class=\"comment\"># 池化窗口大小为2x2，步长为2，无padding</span></span><br><span class=\"line\">        <span class=\"comment\"># 第一次池化后生成的特征图大小为32*14*14</span></span><br><span class=\"line\">        self.pool = nn.MaxPool2d(kernel_size=<span class=\"number\">2</span>, stride=<span class=\"number\">2</span>, padding=<span class=\"number\">0</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 定义第二个卷积层，进一步提取和整合特征</span></span><br><span class=\"line\">        <span class=\"comment\"># 输入通道数为32，输出通道数为64，卷积核大小为5x5，步长为1，padding为2</span></span><br><span class=\"line\">        <span class=\"comment\"># 第二次卷积后生成的特征图大小为64*14*14</span></span><br><span class=\"line\">        self.conv2 = nn.Conv2d(<span class=\"number\">32</span>, <span class=\"number\">64</span>, kernel_size=<span class=\"number\">5</span>, stride=<span class=\"number\">1</span>, padding=<span class=\"number\">2</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 定义第一个全连接层，用于分类前的特征转换</span></span><br><span class=\"line\">        <span class=\"comment\"># 输入大小为64*7*7（这里的尺寸为64*7*7是因为在前向传播时对第二次卷积进行了池化操作），输出大小为1024</span></span><br><span class=\"line\">        self.fc1 = nn.Linear(<span class=\"number\">64</span> * <span class=\"number\">7</span> * <span class=\"number\">7</span>, <span class=\"number\">1024</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 定义第二个全连接层，用于最终的分类输出</span></span><br><span class=\"line\">        <span class=\"comment\"># 输入大小为1024，输出大小为10（假设分类任务有10个类别）</span></span><br><span class=\"line\">        self.fc2 = nn.Linear(<span class=\"number\">1024</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 定义Dropout层，用于训练过程中的正则化，防止过拟合</span></span><br><span class=\"line\">        <span class=\"comment\"># Dropout比例为0.5，即在训练过程中随机将50%的元素置为0</span></span><br><span class=\"line\">        self.dropout = nn.Dropout(p=<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 定义前向传播过程</span></span><br><span class=\"line\">        x = self.pool(F.relu(self.conv1(x)))</span><br><span class=\"line\">        x = self.pool(F.relu(self.conv2(x)))</span><br><span class=\"line\">        x = x.view(-<span class=\"number\">1</span>, <span class=\"number\">64</span> * <span class=\"number\">7</span> * <span class=\"number\">7</span>)</span><br><span class=\"line\">        x = F.relu(self.fc1(x))</span><br><span class=\"line\">        x = self.dropout(x)</span><br><span class=\"line\">        x = self.fc2(x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例化模型</span></span><br><span class=\"line\">model = Net()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义优化器</span></span><br><span class=\"line\"><span class=\"comment\"># 使用Adam优化器更新模型参数</span></span><br><span class=\"line\">optimizer = optim.Adam(model.parameters(), lr=<span class=\"number\">1e-4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义损失函数</span></span><br><span class=\"line\"><span class=\"comment\"># 使用交叉熵损失函数进行分类任务</span></span><br><span class=\"line\">criterion = nn.CrossEntropyLoss()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"训练模型\"><a href=\"#训练模型\" class=\"headerlink\" title=\"训练模型\"></a>训练模型</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将模型转移到GPU设备上（如果可用）</span></span><br><span class=\"line\">device = torch.device(<span class=\"string\">&quot;cuda&quot;</span> <span class=\"keyword\">if</span> torch.cuda.is_available() <span class=\"keyword\">else</span> <span class=\"string\">&quot;cpu&quot;</span>)</span><br><span class=\"line\">model.to(device)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义训练轮数</span></span><br><span class=\"line\">num_epochs = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"comment\"># 开始训练过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num_epochs):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i, (images, labels) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(train_loader):</span><br><span class=\"line\">        <span class=\"comment\"># 将数据转移到GPU设备上（如果可用）</span></span><br><span class=\"line\">        images, labels = images.to(device), labels.to(device)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 前向传播</span></span><br><span class=\"line\">        outputs = model(images)</span><br><span class=\"line\">        loss = criterion(outputs, labels)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 反向传播和优化</span></span><br><span class=\"line\">        optimizer.zero_grad()</span><br><span class=\"line\">        loss.backward()</span><br><span class=\"line\">        optimizer.step()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 打印损失信息</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i + <span class=\"number\">1</span>) % <span class=\"number\">100</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Epoch [<span class=\"subst\">&#123;epoch + <span class=\"number\">1</span>&#125;</span>/<span class=\"subst\">&#123;num_epochs&#125;</span>], Step [<span class=\"subst\">&#123;i + <span class=\"number\">1</span>&#125;</span>/<span class=\"subst\">&#123;<span class=\"built_in\">len</span>(train_loader)&#125;</span>], Loss: <span class=\"subst\">&#123;loss.item():<span class=\"number\">.4</span>f&#125;</span>&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存模型参数到文件</span></span><br><span class=\"line\">torch.save(model.state_dict(), <span class=\"string\">&#x27;model.pth&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Epoch [1/10], Step [100/938], Loss: 0.0037\nEpoch [1/10], Step [200/938], Loss: 0.0029\nEpoch [1/10], Step [300/938], Loss: 0.0022\nEpoch [1/10], Step [400/938], Loss: 0.0651\nEpoch [1/10], Step [500/938], Loss: 0.0038\nEpoch [1/10], Step [600/938], Loss: 0.0022\nEpoch [1/10], Step [700/938], Loss: 0.0079\nEpoch [1/10], Step [800/938], Loss: 0.0019\nEpoch [1/10], Step [900/938], Loss: 0.0016\nEpoch [2/10], Step [100/938], Loss: 0.0016\nEpoch [2/10], Step [200/938], Loss: 0.0102\nEpoch [2/10], Step [300/938], Loss: 0.0341\nEpoch [2/10], Step [400/938], Loss: 0.0060\nEpoch [2/10], Step [500/938], Loss: 0.0257\nEpoch [2/10], Step [600/938], Loss: 0.0013\nEpoch [2/10], Step [700/938], Loss: 0.0767\nEpoch [2/10], Step [800/938], Loss: 0.0018\nEpoch [2/10], Step [900/938], Loss: 0.0343\nEpoch [3/10], Step [100/938], Loss: 0.0063\nEpoch [3/10], Step [200/938], Loss: 0.0096\nEpoch [3/10], Step [300/938], Loss: 0.0007\nEpoch [3/10], Step [400/938], Loss: 0.0002\nEpoch [3/10], Step [500/938], Loss: 0.0124\nEpoch [3/10], Step [600/938], Loss: 0.0109\nEpoch [3/10], Step [700/938], Loss: 0.0340\nEpoch [3/10], Step [800/938], Loss: 0.0004\nEpoch [3/10], Step [900/938], Loss: 0.0586\nEpoch [4/10], Step [100/938], Loss: 0.0002\nEpoch [4/10], Step [200/938], Loss: 0.0554\nEpoch [4/10], Step [300/938], Loss: 0.0008\nEpoch [4/10], Step [400/938], Loss: 0.0029\nEpoch [4/10], Step [500/938], Loss: 0.0036\nEpoch [4/10], Step [600/938], Loss: 0.0009\nEpoch [4/10], Step [700/938], Loss: 0.0281\nEpoch [4/10], Step [800/938], Loss: 0.0826\nEpoch [4/10], Step [900/938], Loss: 0.0003\nEpoch [5/10], Step [100/938], Loss: 0.0001\nEpoch [5/10], Step [200/938], Loss: 0.0240\nEpoch [5/10], Step [300/938], Loss: 0.0040\nEpoch [5/10], Step [400/938], Loss: 0.0003\nEpoch [5/10], Step [500/938], Loss: 0.0107\nEpoch [5/10], Step [600/938], Loss: 0.0019\nEpoch [5/10], Step [700/938], Loss: 0.0002\nEpoch [5/10], Step [800/938], Loss: 0.0006\nEpoch [5/10], Step [900/938], Loss: 0.0008\nEpoch [6/10], Step [100/938], Loss: 0.0003\nEpoch [6/10], Step [200/938], Loss: 0.0001\nEpoch [6/10], Step [300/938], Loss: 0.0003\nEpoch [6/10], Step [400/938], Loss: 0.0226\nEpoch [6/10], Step [500/938], Loss: 0.0024\nEpoch [6/10], Step [600/938], Loss: 0.0020\nEpoch [6/10], Step [700/938], Loss: 0.0005\nEpoch [6/10], Step [800/938], Loss: 0.0007\nEpoch [6/10], Step [900/938], Loss: 0.0188\nEpoch [7/10], Step [100/938], Loss: 0.0286\nEpoch [7/10], Step [200/938], Loss: 0.0007\nEpoch [7/10], Step [300/938], Loss: 0.0004\nEpoch [7/10], Step [400/938], Loss: 0.0008\nEpoch [7/10], Step [500/938], Loss: 0.0001\nEpoch [7/10], Step [600/938], Loss: 0.0006\nEpoch [7/10], Step [700/938], Loss: 0.0005\nEpoch [7/10], Step [800/938], Loss: 0.0007\nEpoch [7/10], Step [900/938], Loss: 0.0432\nEpoch [8/10], Step [100/938], Loss: 0.0005\nEpoch [8/10], Step [200/938], Loss: 0.0005\nEpoch [8/10], Step [300/938], Loss: 0.0000\nEpoch [8/10], Step [400/938], Loss: 0.0013\nEpoch [8/10], Step [500/938], Loss: 0.0005\nEpoch [8/10], Step [600/938], Loss: 0.0002\nEpoch [8/10], Step [700/938], Loss: 0.0004\nEpoch [8/10], Step [800/938], Loss: 0.0111\nEpoch [8/10], Step [900/938], Loss: 0.0001\nEpoch [9/10], Step [100/938], Loss: 0.0004\nEpoch [9/10], Step [200/938], Loss: 0.0693\nEpoch [9/10], Step [300/938], Loss: 0.0071\nEpoch [9/10], Step [400/938], Loss: 0.0000\nEpoch [9/10], Step [500/938], Loss: 0.0003\nEpoch [9/10], Step [600/938], Loss: 0.0003\nEpoch [9/10], Step [700/938], Loss: 0.0001\nEpoch [9/10], Step [800/938], Loss: 0.0000\nEpoch [9/10], Step [900/938], Loss: 0.0029\nEpoch [10/10], Step [100/938], Loss: 0.0008\nEpoch [10/10], Step [200/938], Loss: 0.0001\nEpoch [10/10], Step [300/938], Loss: 0.0000\nEpoch [10/10], Step [400/938], Loss: 0.0273\nEpoch [10/10], Step [500/938], Loss: 0.0001\nEpoch [10/10], Step [600/938], Loss: 0.0002\nEpoch [10/10], Step [700/938], Loss: 0.0010\nEpoch [10/10], Step [800/938], Loss: 0.0019\nEpoch [10/10], Step [900/938], Loss: 0.0000\n</code></pre>\n<h1 id=\"评估模型\"><a href=\"#评估模型\" class=\"headerlink\" title=\"评估模型\"></a>评估模型</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 实例化一个与原模型结构相同的模型</span></span><br><span class=\"line\">model = Net().to(device)  <span class=\"comment\"># 确保模型被放置在正确的设备上</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载模型参数</span></span><br><span class=\"line\">model.load_state_dict(torch.load(<span class=\"string\">&#x27;model.pth&#x27;</span>, map_location=device, weights_only=<span class=\"literal\">True</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将模型设置为评估模式</span></span><br><span class=\"line\">model.<span class=\"built_in\">eval</span>()</span><br><span class=\"line\"><span class=\"comment\"># 禁用梯度计算以减少内存消耗</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> torch.no_grad():</span><br><span class=\"line\">    correct = <span class=\"number\">0</span></span><br><span class=\"line\">    total = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\"># 在测试集上进行预测</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> images, labels <span class=\"keyword\">in</span> test_loader:</span><br><span class=\"line\">        images, labels = images.to(device), labels.to(device)</span><br><span class=\"line\">        outputs = model(images)</span><br><span class=\"line\">        _, predicted = torch.<span class=\"built_in\">max</span>(outputs.data, <span class=\"number\">1</span>)</span><br><span class=\"line\">        total += labels.size(<span class=\"number\">0</span>)</span><br><span class=\"line\">        correct += (predicted == labels).<span class=\"built_in\">sum</span>().item()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 打印测试集上的准确率</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;Test Accuracy of the model on the <span class=\"subst\">&#123;total&#125;</span> test images: <span class=\"subst\">&#123;<span class=\"number\">100</span> * correct / total&#125;</span>%&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Test Accuracy of the model on the 10000 test images: 99.29%\n</code></pre>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“a7fe”获取完整版代码下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"AI","path":"api/categories/AI.json"}],"tags":[{"name":"机器学习","path":"api/tags/机器学习.json"},{"name":"深度学习","path":"api/tags/深度学习.json"},{"name":"PyTorch","path":"api/tags/PyTorch.json"},{"name":"卷积神经网络","path":"api/tags/卷积神经网络.json"}]},{"title":"Scikit-learn机器学习实战-HumanResourcesAnalytics","slug":"Scikit-learn机器学习实战-HumanResourcesAnalytics","date":"2024-08-30T14:24:05.000Z","updated":"2024-08-30T14:59:29.868Z","comments":true,"path":"api/articles/Scikit-learn机器学习实战-HumanResourcesAnalytics.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_10_0.png","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>本文构建预测员工是否会离职的模型，并使用模型对员工进行预测。通过本文可以学习到：</p>\n<ul>\n<li>查看数据集的统计信息</li>\n<li>特征工程</li>\n<li>数据集的划分</li>\n<li>数据集的预处理</li>\n<li>数据集的可视化</li>\n<li>模型训练</li>\n<li>模型调参</li>\n<li>模型评估</li>\n<li>模型预测</li>\n</ul>\n<h1 id=\"查看数据集信息\"><a href=\"#查看数据集信息\" class=\"headerlink\" title=\"查看数据集信息\"></a>查看数据集信息</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读入数据</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/data/ML/HumanResourcesAnalytics/HR_comma_sep.csv&#x27;</span></span><br><span class=\"line\">df = pd.read_csv(url)</span><br><span class=\"line\"><span class=\"comment\">#df = pd.read_csv(&#x27;HR_comma_sep.csv&#x27;)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.info()) <span class=\"comment\">#474241623</span></span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 14999 entries, 0 to 14998\nData columns (total 10 columns):\n #   Column                 Non-Null Count  Dtype  \n---  ------                 --------------  -----  \n 0   satisfaction_level     14999 non-null  float64\n 1   last_evaluation        14999 non-null  float64\n 2   number_project         14999 non-null  int64  \n 3   average_montly_hours   14999 non-null  int64  \n 4   time_spend_company     14999 non-null  int64  \n 5   Work_accident          14999 non-null  int64  \n 6   left                   14999 non-null  int64  \n 7   promotion_last_5years  14999 non-null  int64  \n 8   sales                  14999 non-null  object \n 9   salary                 14999 non-null  object \ndtypes: float64(2), int64(6), object(2)\nmemory usage: 1.1+ MB\nNone\n</code></pre>\n<div style=\"overflow-x: auto; width: 100%;\">\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n</head>\n<body>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_montly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n      <th>sales</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<p><strong>header 信息</strong></p>\n<ul>\n<li>satisfaction_level\t员工满意度</li>\n<li>last_evaluation\t员工考核评分</li>\n<li>number_project\t员工参与的项目数</li>\n<li>average_montly_hours\t每个月均工作时长</li>\n<li>time_spend_company\t员工工作年限</li>\n<li>Work_accident\t是否发生过事故</li>\n<li>left\t员工是否离职</li>\n<li>promotion_last_5years\t过去5年中是否有升职</li>\n<li>sales\t员工岗位</li>\n<li>salary 员工薪资水平</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更正列名</span></span><br><span class=\"line\">df.rename(columns=&#123;<span class=\"string\">&#x27;average_montly_hours&#x27;</span>:<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>, <span class=\"string\">&#x27;sales&#x27;</span>:<span class=\"string\">&#x27;department&#x27;</span>&#125;, </span><br><span class=\"line\">          inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n      <th>department</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>medium</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>sales</td>\n      <td>low</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 展示数据集的统计信息，仅展示数值列</span></span><br><span class=\"line\">df.describe()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n      <td>14999.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.612834</td>\n      <td>0.716102</td>\n      <td>3.803054</td>\n      <td>201.050337</td>\n      <td>3.498233</td>\n      <td>0.144610</td>\n      <td>0.238083</td>\n      <td>0.021268</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.248631</td>\n      <td>0.171169</td>\n      <td>1.232592</td>\n      <td>49.943099</td>\n      <td>1.460136</td>\n      <td>0.351719</td>\n      <td>0.425924</td>\n      <td>0.144281</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.090000</td>\n      <td>0.360000</td>\n      <td>2.000000</td>\n      <td>96.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.440000</td>\n      <td>0.560000</td>\n      <td>3.000000</td>\n      <td>156.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.640000</td>\n      <td>0.720000</td>\n      <td>4.000000</td>\n      <td>200.000000</td>\n      <td>3.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.820000</td>\n      <td>0.870000</td>\n      <td>5.000000</td>\n      <td>245.000000</td>\n      <td>4.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>7.000000</td>\n      <td>310.000000</td>\n      <td>10.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看各元素的出现次数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;Departments:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (df[<span class=\"string\">&#x27;department&#x27;</span>].value_counts())</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;\\nSalary:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (df[<span class=\"string\">&#x27;salary&#x27;</span>].value_counts())</span><br></pre></td></tr></table></figure>\n\n<pre><code>Departments:\ndepartment\nsales          4140\ntechnical      2720\nsupport        2229\nIT             1227\nproduct_mng     902\nmarketing       858\nRandD           787\naccounting      767\nhr              739\nmanagement      630\nName: count, dtype: int64\n\nSalary:\nsalary\nlow       7316\nmedium    6446\nhigh      1237\nName: count, dtype: int64\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 记录各特征的类型和取值范围</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">satisfaction_level | Satisfaction level of employee based on survey | Continuous | [0.09, 1]</span></span><br><span class=\"line\"><span class=\"string\">last_evaluation | Score based on employee&#x27;s last evaluation | Continuous | [0.36, 1]</span></span><br><span class=\"line\"><span class=\"string\">number_project | Number of projects | Continuous | [2, 7]</span></span><br><span class=\"line\"><span class=\"string\">average_monthly_hours | Average monthly hours | Continuous | [96, 310]</span></span><br><span class=\"line\"><span class=\"string\">time_spend_company | Years at company | Continuous | [2, 10]</span></span><br><span class=\"line\"><span class=\"string\">Work_accident | Whether employee had a work accident | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">left | Whether employee had left (Outcome Variable) | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">promotion_last_5years | Whether employee had a promotion in the last 5 years | Categorical | &#123;0, 1&#125;</span></span><br><span class=\"line\"><span class=\"string\">department | Department employee worked in | Categorical | 10 departments</span></span><br><span class=\"line\"><span class=\"string\">salary | Level of employee&#x27;s salary | Categorical | &#123;low, medium, high&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;\\nsatisfaction_level | Satisfaction level of employee based on survey | Continuous | [0.09, 1]\\nlast_evaluation | Score based on employee&#x27;s last evaluation | Continuous | [0.36, 1]\\nnumber_project | Number of projects | Continuous | [2, 7]\\naverage_monthly_hours | Average monthly hours | Continuous | [96, 310]\\ntime_spend_company | Years at company | Continuous | [2, 10]\\nWork_accident | Whether employee had a work accident | Categorical | &#123;0, 1&#125;\\nleft | Whether employee had left (Outcome Variable) | Categorical | &#123;0, 1&#125;\\npromotion_last_5years | Whether employee had a promotion in the last 5 years | Categorical | &#123;0, 1&#125;\\ndepartment | Department employee worked in | Categorical | 10 departments\\nsalary | Level of employee&#x27;s salary | Categorical | &#123;low, medium, high&#125;\\n&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"特征工程\"><a href=\"#特征工程\" class=\"headerlink\" title=\"特征工程\"></a>特征工程</h1><ul>\n<li>查找相关性大的特征，只保留其中的一个。</li>\n<li>也可查看与标签（left）相关性较大的特征，如此数据集中的<code>satisfaction_level</code>。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 筛选 DataFrame 中的所有数值列</span></span><br><span class=\"line\">numeric_df = df.select_dtypes(include=[np.number])</span><br><span class=\"line\"><span class=\"comment\"># 计算数值列之间的相关系数</span></span><br><span class=\"line\">numeric_df.corr()</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>left</th>\n      <th>promotion_last_5years</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>satisfaction_level</th>\n      <td>1.000000</td>\n      <td>0.105021</td>\n      <td>-0.142970</td>\n      <td>-0.020048</td>\n      <td>-0.100866</td>\n      <td>0.058697</td>\n      <td>-0.388375</td>\n      <td>0.025605</td>\n    </tr>\n    <tr>\n      <th>last_evaluation</th>\n      <td>0.105021</td>\n      <td>1.000000</td>\n      <td>0.349333</td>\n      <td>0.339742</td>\n      <td>0.131591</td>\n      <td>-0.007104</td>\n      <td>0.006567</td>\n      <td>-0.008684</td>\n    </tr>\n    <tr>\n      <th>number_project</th>\n      <td>-0.142970</td>\n      <td>0.349333</td>\n      <td>1.000000</td>\n      <td>0.417211</td>\n      <td>0.196786</td>\n      <td>-0.004741</td>\n      <td>0.023787</td>\n      <td>-0.006064</td>\n    </tr>\n    <tr>\n      <th>average_monthly_hours</th>\n      <td>-0.020048</td>\n      <td>0.339742</td>\n      <td>0.417211</td>\n      <td>1.000000</td>\n      <td>0.127755</td>\n      <td>-0.010143</td>\n      <td>0.071287</td>\n      <td>-0.003544</td>\n    </tr>\n    <tr>\n      <th>time_spend_company</th>\n      <td>-0.100866</td>\n      <td>0.131591</td>\n      <td>0.196786</td>\n      <td>0.127755</td>\n      <td>1.000000</td>\n      <td>0.002120</td>\n      <td>0.144822</td>\n      <td>0.067433</td>\n    </tr>\n    <tr>\n      <th>Work_accident</th>\n      <td>0.058697</td>\n      <td>-0.007104</td>\n      <td>-0.004741</td>\n      <td>-0.010143</td>\n      <td>0.002120</td>\n      <td>1.000000</td>\n      <td>-0.154622</td>\n      <td>0.039245</td>\n    </tr>\n    <tr>\n      <th>left</th>\n      <td>-0.388375</td>\n      <td>0.006567</td>\n      <td>0.023787</td>\n      <td>0.071287</td>\n      <td>0.144822</td>\n      <td>-0.154622</td>\n      <td>1.000000</td>\n      <td>-0.061788</td>\n    </tr>\n    <tr>\n      <th>promotion_last_5years</th>\n      <td>0.025605</td>\n      <td>-0.008684</td>\n      <td>-0.006064</td>\n      <td>-0.003544</td>\n      <td>0.067433</td>\n      <td>0.039245</td>\n      <td>-0.061788</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\">%matplotlib inline</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看离职员工部门分布，发现HR离职员工最多</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;department&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df)</span><br><span class=\"line\">plot.set_xticklabels(rotation=<span class=\"number\">45</span>, horizontalalignment=<span class=\"string\">&#x27;right&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_10_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_10_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看工资水平和离职率的关系</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;salary&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_11_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_11_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看经理工资水平分布</span></span><br><span class=\"line\">df[df[<span class=\"string\">&#x27;department&#x27;</span>]==<span class=\"string\">&#x27;management&#x27;</span>][<span class=\"string\">&#x27;salary&#x27;</span>].value_counts().plot(kind=<span class=\"string\">&#x27;pie&#x27;</span>, title=<span class=\"string\">&#x27;Management salary level distribution&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_12_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_12_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看研发工资水平分布</span></span><br><span class=\"line\">df[df[<span class=\"string\">&#x27;department&#x27;</span>]==<span class=\"string\">&#x27;RandD&#x27;</span>][<span class=\"string\">&#x27;salary&#x27;</span>].value_counts().plot(kind=<span class=\"string\">&#x27;pie&#x27;</span>, title=<span class=\"string\">&#x27;R&amp;D dept salary level distribution&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_13_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_13_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 绘制员工满意度分布的直方图，并分为两类员工：已离职和未离职</span></span><br><span class=\"line\"><span class=\"comment\"># 生成21个等间距的数值作为直方图的区间，范围从0.0001到1.0001</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">0.0001</span>, <span class=\"number\">1.0001</span>, <span class=\"number\">21</span>)</span><br><span class=\"line\"><span class=\"comment\"># 绘制直方图。首先筛选出已离职员工（df[&#x27;left&#x27;]==1）和未离职员工（df[&#x27;left&#x27;]==0）的满意度数据，使用指定的区间（bins）、透明度（alpha）和标签（label）进行绘制。</span></span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;satisfaction_level&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.7</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;satisfaction_level&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.5</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;satisfaction_level&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 设置x轴的显示范围从0到1.05</span></span><br><span class=\"line\">plt.xlim((<span class=\"number\">0</span>,<span class=\"number\">1.05</span>))</span><br><span class=\"line\"><span class=\"comment\"># 在最合适的位置添加图例</span></span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_14_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_14_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>发现已离职员工对公司的满意度比较低（0~0.5），当然也存在满意度较高（0.8附近）的员工离职的情况。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Last evaluation</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">0.3501</span>, <span class=\"number\">1.0001</span>, <span class=\"number\">14</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;last_evaluation&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;last_evaluation&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;last_evaluation&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_16_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_16_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>公司评分高（0.8~1.0）的员工离职了很多，原因可能是这部分员工能力强，跳槽寻求更好的工作机会。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Number of projects </span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">1.5</span>, <span class=\"number\">7.5</span>, <span class=\"number\">7</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;number_project&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;number_project&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;number_project&#x27;</span>)</span><br><span class=\"line\">plt.grid(axis=<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_18_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_18_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>项目少时离职了，可能因为员工锻炼机会少。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Average monthly hours</span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">75</span>, <span class=\"number\">325</span>, <span class=\"number\">11</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;average_monthly_hours&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_20_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_20_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>工作时长少和多都容易离职。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Years at company </span></span><br><span class=\"line\">bins = np.linspace(<span class=\"number\">1.5</span>, <span class=\"number\">10.5</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">1</span>][<span class=\"string\">&#x27;time_spend_company&#x27;</span>], bins=bins, alpha=<span class=\"number\">1</span>, label=<span class=\"string\">&#x27;Employees Left&#x27;</span>)</span><br><span class=\"line\">plt.hist(df[df[<span class=\"string\">&#x27;left&#x27;</span>]==<span class=\"number\">0</span>][<span class=\"string\">&#x27;time_spend_company&#x27;</span>], bins=bins, alpha=<span class=\"number\">0.4</span>, label=<span class=\"string\">&#x27;Employees Stayed&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;time_spend_company&#x27;</span>)</span><br><span class=\"line\">plt.xlim((<span class=\"number\">1</span>,<span class=\"number\">11</span>))</span><br><span class=\"line\">plt.grid(axis=<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">plt.xticks(np.arange(<span class=\"number\">2</span>,<span class=\"number\">11</span>))</span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;best&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_22_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_22_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>工作年限3年，离职率最高。年限越长，离职率越低。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># whether employee had work accident</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;Work_accident&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_24_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_24_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>未发生工作事故的离职率较高，难以解释。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#whether employee had promotion in last 5 years</span></span><br><span class=\"line\">plot = sns.catplot(x=<span class=\"string\">&#x27;promotion_last_5years&#x27;</span>, y=<span class=\"string\">&#x27;left&#x27;</span>, kind=<span class=\"string\">&#x27;bar&#x27;</span>, data=df);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_26_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_26_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<p>不升职的离职率较高。</p>\n<h1 id=\"数据预处理\"><a href=\"#数据预处理\" class=\"headerlink\" title=\"数据预处理\"></a>数据预处理</h1><h2 id=\"独热编码替换分类数据\"><a href=\"#独热编码替换分类数据\" class=\"headerlink\" title=\"独热编码替换分类数据\"></a>独热编码替换分类数据</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 丢弃标签（left）列</span></span><br><span class=\"line\">X = df.drop(<span class=\"string\">&#x27;left&#x27;</span>, axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"comment\"># 提取标签列</span></span><br><span class=\"line\">y = df[<span class=\"string\">&#x27;left&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 删除部门与工资列，后面会通过独热编码将信息添加回来</span></span><br><span class=\"line\">X.drop([<span class=\"string\">&#x27;department&#x27;</span>,<span class=\"string\">&#x27;salary&#x27;</span>], axis=<span class=\"number\">1</span>, inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># One-hot encoding</span></span><br><span class=\"line\"><span class=\"comment\"># 对工资进行独热编码</span></span><br><span class=\"line\">salary_dummy = pd.get_dummies(df[<span class=\"string\">&#x27;salary&#x27;</span>])</span><br><span class=\"line\"><span class=\"comment\"># 对部门进行独热编码</span></span><br><span class=\"line\">department_dummy = pd.get_dummies(df[<span class=\"string\">&#x27;department&#x27;</span>])</span><br><span class=\"line\">X = pd.concat([X, salary_dummy], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">X = pd.concat([X, department_dummy], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">X.head()</span><br></pre></td></tr></table></figure>\n\n<div style=\"overflow-x: auto; width: 100%;\">\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>satisfaction_level</th>\n      <th>last_evaluation</th>\n      <th>number_project</th>\n      <th>average_monthly_hours</th>\n      <th>time_spend_company</th>\n      <th>Work_accident</th>\n      <th>promotion_last_5years</th>\n      <th>high</th>\n      <th>low</th>\n      <th>medium</th>\n      <th>IT</th>\n      <th>RandD</th>\n      <th>accounting</th>\n      <th>hr</th>\n      <th>management</th>\n      <th>marketing</th>\n      <th>product_mng</th>\n      <th>sales</th>\n      <th>support</th>\n      <th>technical</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.38</td>\n      <td>0.53</td>\n      <td>2</td>\n      <td>157</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.80</td>\n      <td>0.86</td>\n      <td>5</td>\n      <td>262</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.11</td>\n      <td>0.88</td>\n      <td>7</td>\n      <td>272</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.72</td>\n      <td>0.87</td>\n      <td>5</td>\n      <td>223</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>2</td>\n      <td>159</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h2 id=\"拆分训练集和测试集\"><a href=\"#拆分训练集和测试集\" class=\"headerlink\" title=\"拆分训练集和测试集\"></a>拆分训练集和测试集</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 划分训练集和测试集 (70%/30%)</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.3</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据标准化\"><a href=\"#数据标准化\" class=\"headerlink\" title=\"数据标准化\"></a>数据标准化</h2><ul>\n<li>比较大的数值，算法会认为其比较重要，导致结果不准确。</li>\n<li>数值差异比较大的话，模型收敛较慢。</li>\n<li>因此，需要将数据标准化。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据标准化，这里是一个例子</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">stdsc = StandardScaler()</span><br><span class=\"line\">X_example = np.array([[ <span class=\"number\">10.</span>, -<span class=\"number\">2.</span>,  <span class=\"number\">23.</span>],</span><br><span class=\"line\">                      [ <span class=\"number\">5.</span>,  <span class=\"number\">32.</span>,  <span class=\"number\">211.</span>],</span><br><span class=\"line\">                      [ <span class=\"number\">10.</span>,  <span class=\"number\">1.</span>, -<span class=\"number\">130.</span>]])</span><br><span class=\"line\">X_example = stdsc.fit_transform(X_example)</span><br><span class=\"line\">X_example = pd.DataFrame(X_example)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (X_example)</span><br><span class=\"line\">X_example.describe()</span><br></pre></td></tr></table></figure>\n\n<pre><code>          0         1         2\n0  0.707107 -0.802454 -0.083658\n1 -1.414214  1.409716  1.264429\n2  0.707107 -0.607262 -1.180771\n</code></pre>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>3.000000e+00</td>\n      <td>3.000000e+00</td>\n      <td>3.000000e+00</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>-2.960595e-16</td>\n      <td>-1.110223e-16</td>\n      <td>7.401487e-17</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.224745e+00</td>\n      <td>1.224745e+00</td>\n      <td>1.224745e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-1.414214e+00</td>\n      <td>-8.024539e-01</td>\n      <td>-1.180771e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>-3.535534e-01</td>\n      <td>-7.048582e-01</td>\n      <td>-6.322145e-01</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>7.071068e-01</td>\n      <td>-6.072624e-01</td>\n      <td>-8.365788e-02</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.071068e-01</td>\n      <td>4.012270e-01</td>\n      <td>5.903856e-01</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>7.071068e-01</td>\n      <td>1.409716e+00</td>\n      <td>1.264429e+00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 分别对训练集和测试集进行标准化</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"></span><br><span class=\"line\">stdsc = StandardScaler()</span><br><span class=\"line\"><span class=\"comment\"># transform our training features</span></span><br><span class=\"line\">X_train_std = stdsc.fit_transform(X_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (X_train_std[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"comment\"># transform the testing features in the same way</span></span><br><span class=\"line\">X_test_std = stdsc.transform(X_test)</span><br></pre></td></tr></table></figure>\n\n<pre><code>[ 1.40697692 -0.21068428 -0.65422416 -1.37529896 -1.02172591 -0.41080801\n -0.14595719 -0.30564365 -0.98084819  1.16499228 -0.2981308  -0.23781569\n -0.22665375 -0.23057496 -0.21332806 -0.24641294 -0.25073288  1.62416352\n -0.41712208 -0.47247431]\n</code></pre>\n<h1 id=\"构建模型\"><a href=\"#构建模型\" class=\"headerlink\" title=\"构建模型\"></a>构建模型</h1><h2 id=\"随机森林法\"><a href=\"#随机森林法\" class=\"headerlink\" title=\"随机森林法\"></a>随机森林法</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 交叉验证（Cross validation）</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> ShuffleSplit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进行20折交叉验证</span></span><br><span class=\"line\">cv = ShuffleSplit(n_splits=<span class=\"number\">20</span>, test_size=<span class=\"number\">0.3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建随机森林模型</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\">rf_model = RandomForestClassifier()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置RF模型，建立树的数量</span></span><br><span class=\"line\">rf_param = &#123;<span class=\"string\">&#x27;n_estimators&#x27;</span>: <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 探索模型参数（最佳树的个数）</span></span><br><span class=\"line\">rf_grid = GridSearchCV(rf_model, rf_param, cv=cv)</span><br><span class=\"line\">rf_grid.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出最佳参数和最佳得分</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Parameter with best score:&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(rf_grid.best_params_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Cross validation score:&#x27;</span>, rf_grid.best_score_)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Parameter with best score:\n&#123;&#39;n_estimators&#39;: 9&#125;\nCross validation score: 0.9835079365079364\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在测试集上评估模型</span></span><br><span class=\"line\">best_rf = rf_grid.best_estimator_</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Test score:&#x27;</span>, best_rf.score(X_test, y_test))</span><br></pre></td></tr></table></figure>\n\n<pre><code>Test score: 0.9884444444444445\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过随机森林查看特征的重要性，原理是每次打乱一个特征（或添加噪音），然后看预测结果（错误率）是否发生变化，如果变化大，则该特征对预测结果有影响，否则没有影响</span></span><br><span class=\"line\">features = X.columns</span><br><span class=\"line\">feature_importances = best_rf.feature_importances_</span><br><span class=\"line\"></span><br><span class=\"line\">features_df = pd.DataFrame(&#123;<span class=\"string\">&#x27;Features&#x27;</span>: features, <span class=\"string\">&#x27;Importance Score&#x27;</span>: feature_importances&#125;)</span><br><span class=\"line\">features_df.sort_values(<span class=\"string\">&#x27;Importance Score&#x27;</span>, inplace=<span class=\"literal\">True</span>, ascending=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">features_df</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Features</th>\n      <th>Importance Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>satisfaction_level</td>\n      <td>0.260366</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>average_monthly_hours</td>\n      <td>0.186585</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>number_project</td>\n      <td>0.179788</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>time_spend_company</td>\n      <td>0.179571</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>last_evaluation</td>\n      <td>0.144083</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Work_accident</td>\n      <td>0.011949</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>low</td>\n      <td>0.006395</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>high</td>\n      <td>0.005206</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>medium</td>\n      <td>0.003336</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>sales</td>\n      <td>0.003200</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>support</td>\n      <td>0.003070</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>technical</td>\n      <td>0.003039</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>RandD</td>\n      <td>0.002143</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>IT</td>\n      <td>0.002048</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>accounting</td>\n      <td>0.001887</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>promotion_last_5years</td>\n      <td>0.001799</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>management</td>\n      <td>0.001755</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>hr</td>\n      <td>0.001425</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>product_mng</td>\n      <td>0.001182</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>marketing</td>\n      <td>0.001173</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 计算前五项特征的重要性之和</span></span><br><span class=\"line\">features_df[<span class=\"string\">&#x27;Importance Score&#x27;</span>][:<span class=\"number\">5</span>].<span class=\"built_in\">sum</span>()</span><br></pre></td></tr></table></figure>\n\n<pre><code>np.float64(0.9503925098929926)\n</code></pre>\n<h2 id=\"基于聚类模型的分析\"><a href=\"#基于聚类模型的分析\" class=\"headerlink\" title=\"基于聚类模型的分析\"></a>基于聚类模型的分析</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\">%matplotlib inline</span><br><span class=\"line\"></span><br><span class=\"line\">data = pd.read_csv(url)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize = (<span class=\"number\">8</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">plt.plot(data.satisfaction_level[data.left == <span class=\"number\">1</span>],data.last_evaluation[data.left == <span class=\"number\">1</span>],<span class=\"string\">&#x27;o&#x27;</span>, alpha = <span class=\"number\">0.1</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Employees who left&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction level&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;Employees who stayed&#x27;</span>)</span><br><span class=\"line\">plt.plot(data.satisfaction_level[data.left == <span class=\"number\">0</span>],data.last_evaluation[data.left == <span class=\"number\">0</span>],<span class=\"string\">&#x27;o&#x27;</span>, alpha = <span class=\"number\">0.1</span>)</span><br><span class=\"line\">plt.xlim([<span class=\"number\">0.4</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction level&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>Text(0.5, 0, &#39;Satisfaction level&#39;)\n</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_43_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_43_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用KMeans聚类分析</span></span><br><span class=\"line\"><span class=\"comment\"># 导入KMeans聚类算法模块</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选取数据中已经离职的员工（left列为1），并从这些数据中删除特定的列</span></span><br><span class=\"line\"><span class=\"comment\"># 这里axis=1表示按列删除，这些列包括：项目数量、月平均工作小时、公司服务时间、工作事故、是否离职、过去5年是否晋升、销售部门和薪水等</span></span><br><span class=\"line\">kmeans_df =  data[data.left == <span class=\"number\">1</span>].drop([ <span class=\"string\">u&#x27;number_project&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">u&#x27;average_montly_hours&#x27;</span>, <span class=\"string\">u&#x27;time_spend_company&#x27;</span>, <span class=\"string\">u&#x27;Work_accident&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">u&#x27;left&#x27;</span>, <span class=\"string\">u&#x27;promotion_last_5years&#x27;</span>, <span class=\"string\">u&#x27;sales&#x27;</span>, <span class=\"string\">u&#x27;salary&#x27;</span>],axis = <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用KMeans算法对处理后的数据进行聚类，设定聚类数为3，并设置随机种子为0以确保结果的可复现性</span></span><br><span class=\"line\"><span class=\"comment\"># 这里fit方法用于训练模型，使其学习数据的聚类结构</span></span><br><span class=\"line\">kmeans = KMeans(n_clusters = <span class=\"number\">3</span>, random_state = <span class=\"number\">0</span>).fit(kmeans_df)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 访问并输出每个聚类中心点的坐标，这些坐标表示了每个聚类的中心位置</span></span><br><span class=\"line\">kmeans.cluster_centers_</span><br></pre></td></tr></table></figure>\n\n<pre><code>array([[0.41014545, 0.51698182],\n       [0.80851586, 0.91170931],\n       [0.11115466, 0.86930085]])\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 筛选出离职员工的数据</span></span><br><span class=\"line\">left = data[data.left == <span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用布尔索引和 .loc 方法将 KMeans 聚类的标签分配给离职员工数据</span></span><br><span class=\"line\">left_labels = (data.left == <span class=\"number\">1</span>)</span><br><span class=\"line\">data.loc[left_labels, <span class=\"string\">&#x27;label&#x27;</span>] = kmeans.labels_</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新获取带有标签的离职员工数据</span></span><br><span class=\"line\">left = data[data.left == <span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个新的图形窗口</span></span><br><span class=\"line\">plt.figure()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 x 轴标签为满意度水平</span></span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Satisfaction Level&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 y 轴标签为最后一次评估结果</span></span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;Last Evaluation&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置图形标题为“离职员工的3个聚类”</span></span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;3 Clusters of employees who left&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制不同聚类的离职员工的满意度水平和最后一次评估结果</span></span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">0</span>], left.last_evaluation[left.label==<span class=\"number\">0</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">1</span>], left.last_evaluation[left.label==<span class=\"number\">1</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">plt.plot(left.satisfaction_level[left.label==<span class=\"number\">2</span>], left.last_evaluation[left.label==<span class=\"number\">2</span>], <span class=\"string\">&#x27;o&#x27;</span>, alpha=<span class=\"number\">0.2</span>, color=<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加图例，解释不同聚类的含义，并设置图例的位置和字体大小</span></span><br><span class=\"line\">plt.legend([<span class=\"string\">&#x27;Winners&#x27;</span>, <span class=\"string\">&#x27;Frustrated&#x27;</span>, <span class=\"string\">&#x27;Bad Match&#x27;</span>], loc=<span class=\"number\">3</span>, fontsize=<span class=\"number\">15</span>, frameon=<span class=\"literal\">True</span>);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_45_0.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/WhoWillLeave_files/WhoWillLeave_45_0.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"png\"></p>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>关注公众号“生信之巅”</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"AI","path":"api/categories/AI.json"}],"tags":[{"name":"机器学习","path":"api/tags/机器学习.json"},{"name":"Scikit-learn","path":"api/tags/Scikit-learn.json"}]},{"title":"NCBI上传基因簇之table2asn的使用","slug":"NCBI上传基因簇之table2asn的使用","date":"2024-08-28T12:44:49.000Z","updated":"2024-08-28T13:12:11.597Z","comments":true,"path":"api/articles/NCBI上传基因簇之table2asn的使用.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>向<a href=\"https://www.ncbi.nlm.nih.gov/\">NCBI</a>提交基因簇的时候需要提供sqn格式的文件，之前我在文章<a href=\"http://liaochenlanruo.fun/post/d444.html\">《NCBI上传基因簇之tbl2asn的使用》</a>中介绍过如何使用<a href=\"https://www.ncbi.nlm.nih.gov/genbank/tbl2asn2/\">tbl2asn</a>生成<code>sqn</code>文件，遗憾的是<code>tbl2asn</code>官方已经<a href=\"https://ftp.ncbi.nih.gov/toolbox/ncbi_tools/converters/by_program/tbl2asn/README\">不再提供软件下载了</a>，提供的新工具为<a href=\"https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/\">table2asn</a>，本文介绍<code>table2asn</code>的使用方法。</p>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"下载table2asn\"><a href=\"#下载table2asn\" class=\"headerlink\" title=\"下载table2asn\"></a>下载table2asn</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此处下载Linux版，Windows和MacOS请自行到https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/下载</span></span><br><span class=\"line\">wget https://ftp.ncbi.nlm.nih.gov/asn1-converters/by_program/table2asn/linux64.table2asn.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>解压缩文件后得到可执行程序，将其重命名为<code>table2asn</code>，并将其加入环境变量即可，环境变量的设置请自行搜索。</p>\n<h1 id=\"文件准备\"><a href=\"#文件准备\" class=\"headerlink\" title=\"文件准备\"></a>文件准备</h1><p>table2asn依赖三个文件来生成sqn文件：</p>\n<ul>\n<li>文件1：fasta格式的基因组序列文件，文件后缀需要为<code>.fsa</code>，如<code>Toyoncin.fas</code>。</li>\n</ul>\n<p><strong>注意Header处需要添加中括号部分，及相关描述信息。</strong></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Toyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster [organism=Bacillus toyonensis] [strain=XIN-YC13] [topology=linear] [moltype=DNA] [tech=wgs] [gcode=11] [country=China] Bacillus toyonensis strain XIN-YC13 Toyoncin biosynthesis gene cluster, complete sequence</span><br><span class=\"line\">ttaaaa taatttaata</span><br><span class=\"line\">gggaagtttt ttagttgttt tggactcttc ccaaacactg ctttaagtgt tggattaaca</span><br><span class=\"line\"> tcatccctat tccccgaaaa cataatgtga ggatttatga ataatgcata tgctctaaca</span><br><span class=\"line\">ttattatcat caacaccact ctctgaacga gccataatac ccttatcaat taattttcta</span><br><span class=\"line\">accaatggac taactttagt ttcatgtctt ccaatttttt tagctaattc tcgctgagtt</span><br><span class=\"line\"> aatgggattt gttctttcga attaatatca ttaactaaac aattacttaa aaaacctaca</span><br><span class=\"line\">cacattgaaa tatctactaa aaataccttc tcagcatttg ttaaataatc aatttcgaac</span><br><span class=\"line\"> aaatactgga tattttgttg aataatctga acaaacttcg ctttattttt cactttacgc</span><br><span class=\"line\"> tcaggaacta atttcattcc tcttgaacga gcttttgatt gaagtttatt tgctaaatac</span><br><span class=\"line\"> atctcttctt cagacaagac ctttaaatcc tcaatatctc tcaatcttga atttttttca</span><br><span class=\"line\"> gcttgttcta agttgataaa ctttgacata ttctttttgc tcctcttttc taagattttc</span><br><span class=\"line\"> aactagagaa ggaaaaaatt ttatgttatg attcctgtag aatttacaat tcaatatgta</span><br><span class=\"line\"> caaaagaact ccccttttct aattgatagt ttggtcgctt tcaattataa tacaagggga</span><br><span class=\"line\"> ttttttacat cttaaaattt ttcatttttg aatcaatccc tgaaaatata aagaacacat</span><br><span class=\"line\"> cacataaatt attcttaata ttttataatc gaaaaaataa taggaataaa gaaaaatact</span><br><span class=\"line\"> gcaataaata tattcatctg tttcttactc aaaccggcca ctatatttaa tcccattcct</span><br><span class=\"line\"> ataataatta attcccaaat tgaaaacact tcaaatttac tacaaattat atatagtaat</span><br><span class=\"line\"> gtacctggtt caaatattga acccaaacta gtatacgtta ctatttctcc tcctataaat</span><br><span class=\"line\"> agtgttaata atgtattaat taatttacct aaaatagaaa ttacactagc aaatattgta</span><br><span class=\"line\"> atagatacta actttttata agaaacatct ttactcatca gcatcattac aatctttaaa</span><br><span class=\"line\"> ataatccccc aaataaaagg tgtaattaaa gcaatgaaaa tcgatgcaaa acctcctaac</span><br><span class=\"line\"> atcatttggg aaacaagggg tatttccata tctgcaaata cttctttttg aattttaacc</span><br><span class=\"line\"> aattctggat tgctatgtct tgcatataca gataaaatcc ctattattgc ttgtataact</span><br><span class=\"line\"> gataaataca taagaggaaa ccatatcgga ctaattattt tcatacgctc gaattcagaa</span><br><span class=\"line\"> ataggagatg taatcataaa aattagagat ggtttttcat aattgttttt ttctttattc</span><br><span class=\"line\"> actactaaac tattatccat atattaacac cttctttttt tattcataac gtaatgcttc</span><br><span class=\"line\"> aattggatct aattttgcag ccttattggc tggaatcaat ccaaatataa taccaagcga</span><br><span class=\"line\"> catcgaaaat aatacgccac ccacaacaac ttcccatgaa acaagaggcg gccattttgc</span><br><span class=\"line\"> aaatgtggac acaatgtacg ctccacaata accaagtcca atcccaatca atccaccaag</span><br><span class=\"line\"> aagtgtcaac ataattgctt caattaaaaa ttgcaacaaa attttaccac gcgttgctcc</span><br><span class=\"line\">aagtgcttta cgtaccccaa tctcacgtgt acgctctgtt acagaaacaa gcatgatatt</span><br><span class=\"line\">cataactcca attccgccta caactaaaga aatacttgca atacctgcaa taatcattgt</span><br><span class=\"line\">cataatatta gtaactttag aaataccttt ttggatttct tctaaattta caatttcata</span><br><span class=\"line\"> tttcccttta aactcttcag attgtctatc atttaataat tttactccct tttttccagc</span><br><span class=\"line\">tgtttgtaat tgatcaaccc ctattgcttg aattgtaata gattgttgag agttatcatc</span><br><span class=\"line\"> tccatataat attggccata ttgaaagtgg tattaaaatt tctgacattc caaaaccaag</span><br><span class=\"line\"> ctcttcatct cctgaactga atagaccaat aatttgaagt ggctgacctt taatttctat</span><br><span class=\"line\"> aattttacca atgactgatt catgctcatt aggaaataac tctttcacta atgtttgatt</span><br><span class=\"line\"> aaccattatt acattattac cttgcatcaa atcatcttca ttaagagaac gacctttctc</span><br><span class=\"line\"> tattttcatt ttagtcatat taaaatattc ttttgtaata ccatttatat tagttacaac</span><br><span class=\"line\">ctttttatca tcaccaatta atgtctctgt actagagttt tgaacaatta catttttaat</span><br><span class=\"line\"> ttcttttatc ttttttaact caaaaagatc ttcttcactt acagatggtt ttttgtcatt</span><br><span class=\"line\"> catagatcct gttgttaata actcattaat atcttcttta tatgtaatcg gaatagtgtt</span><br><span class=\"line\"> attgccagaa gcggtaaatt gtgatttaag cattgcttct ccacctttac caatggctac</span><br><span class=\"line\"> aacagtaata atagaaccta caccaataat aattccaagc atcgtaagag ctgagcgcag</span><br><span class=\"line\"> tttatgagct aaaatagaag ataaggcaat ttttatacta tctaataaac tcataccata</span><br><span class=\"line\"> caccttctat cttctgtaat tttcccatct cgcaatatga tgcgacgtga agaataagct</span><br><span class=\"line\"> gctacctctt cttcatgtgt aaccataacg attgtcgtac cttctgcatt taacttcgta</span><br><span class=\"line\"> aagatatcca taacttgtgc accagacttc gtatcaagcg caccagttgg ctcatcagcc</span><br><span class=\"line\"> ataataaacg ttggattatt cgcaatcgat cttgcaatag caacacgctg cttctgtcca</span><br><span class=\"line\"> cctgacagct cactaggtaa atgatgtact ctatccgcta atccaacttt cccaagcgct</span><br><span class=\"line\"> tcgagcgctc tttgacgacg ctctgctttc ttcactccac cataaatcag tggtaattca</span><br><span class=\"line\"> acgttttcca ctgcggaaag gcgcggcaat aaattaaaat gctggaacac aaaaccgata</span><br><span class=\"line\">tattcattac gaattaaagc aagttttgac tcatctgctg ttaaaatatt cacatcattc</span><br><span class=\"line\">agcatatatt cgccttctgt tggacgatct aaacaaccga taatattcat aagagttgat</span><br><span class=\"line\">ttaccagaac cagacggtcc cataattgaa acaaattcac caccttgaat agttaaacta</span><br><span class=\"line\">ataccgtgca aaataggaac cgccattttt ccttgataat acgttttagc aatattattt</span><br><span class=\"line\">aacgtaatca tttctctttc acttccattc cgtcatatac gttgtcggaa ggatttttaa</span><br><span class=\"line\">ccaccttttg ccccactgtt gcgccctcta caatctctgt ccaatctcca tcagtagcac</span><br><span class=\"line\">cttttttcac attttgttta cgaagcttac ctttctcttc gatatataca aatgcatcat</span><br><span class=\"line\">      cgcctttttc aacaatactc ttacttggaa cagcaatcat tcttttattc tctaaattta</span><br><span class=\"line\">      cttgtaacga aacatgataa cctggagata aaccatcttg actatcaaga cttgctttat</span><br><span class=\"line\">      atgtatattg agacatattt tgagtcactt cccccatgcc atcagcttga gccatttcta</span><br><span class=\"line\">      cacttgttgg gaactcactt acctctgtaa tcttccctgt ccactttttc ttactatttg</span><br><span class=\"line\">      ctttcgcagt tacagtaaac gtttgatcct tttgaatttg cgacttctga agctcagtta</span><br><span class=\"line\">      atgttccttg aatttggaat ggatctttag aagcaacttg taaaaaggct ttcccttgac</span><br><span class=\"line\">      cacctaacgc ttgtgatgaa ctttgtgctg catctttatc taacttttga acaacaccag</span><br><span class=\"line\">      caaaattgct ataaatcgta agttcgttct gctttttatt taactcttct ttttgtaact</span><br><span class=\"line\">      tccctttctc tttctcaagg tctgttgtct tttgcgctat ttctaattca cttacttgct</span><br><span class=\"line\">      cttccatcgg atctattact tctttcccag ctccgctatc tttcgccttc ttaatttctt</span><br><span class=\"line\">      tcttcaacga atcaatcttc tttttccctt ggtcataacg catatctgcc atcttttgat</span><br><span class=\"line\">      caagcacagc ttgcttcatt tgcaaattaa tttcttcatt atcgtaagaa aacaatttcg</span><br><span class=\"line\">      ttcccttttc tatttcttgt ccttctttca cttcaatatc tttcactttt cctttagtca</span><br><span class=\"line\">      gatccgcgta gaaactttca atattccccg gcttcacttg accagaaatt aactttgtat</span><br><span class=\"line\">      tattaagatt gcgctctgtg actttttcaa aactaacagt atctattttt gttaccgctt</span><br><span class=\"line\">      tcttcttact ttgcactacg aaaatattaa taaatgtaac aataacaatt aacgcaataa</span><br><span class=\"line\">      ctccaataat agctcctttc tttttatttt taaaaataaa aagttctttt ttaatcacaa</span><br><span class=\"line\">      caatcttctc cttattcata tctaaaattt aaacttttaa attttacata aaaatttaaa</span><br><span class=\"line\">      acttctaaaa tataacatgt ataatttacc atagatgatt tattttgtat aatataaaaa</span><br><span class=\"line\">      tatctatata aataatgcta attttcaaac aatggggtgg aagatactaa tgttagaaaa</span><br><span class=\"line\">      aaaagataga ctaacagaaa tagaggaaca aattatatac ttaatttcaa aggaattagg</span><br><span class=\"line\">      aaataaagaa atagcggaaa aattaaatta ttcacaacgt agcatcggtt acaaaataaa</span><br><span class=\"line\">      taatattttt aaaaaattaa atgttaattc aagaatcgga ctgattatag aagctgtaaa</span><br><span class=\"line\">      aaaaaatata atttaaatat aagaatgctt tcatgttaat attttataga aactaaatat</span><br><span class=\"line\">      agaggtgatt aaaatgcaaa aattttttga agctattagt gctataggta tagtaggtta</span><br><span class=\"line\">      ctttttaggt aaattcacaa gtattccttt aatagacaaa tatacattgt atttcggcgt</span><br><span class=\"line\">      aatgttgatg attggggtta ttggaagatt tattataaaa gtaattaact cagaagaaga</span><br><span class=\"line\">      gacacatgat tcaaacaaat aaaatactct aataaaaatg gaagaagatt gcacttaagt</span><br><span class=\"line\">      gcaatcttct tccattttta ttgaaaattg attaaataat gttaatattg caattgtgtg</span><br><span class=\"line\">      gtgcagatta gggtgattat gtaatagggg gaaattaaaa atgatcaata cagcttggaa</span><br><span class=\"line\">      aattattaaa gcactacaaa aatacggtac aaaagcatac aatgttatca aaaaaggcgg</span><br><span class=\"line\">      ccaagcaatg tacgacagct tcatggcagc taaagctaaa ggttggacac atgcagcttg</span><br><span class=\"line\">      gtggctagta gaacatggtt caactttagg aacattctat gatttattaa aagctgctgg</span><br><span class=\"line\">      attaatcgac taattacagc aactaaacaa ctaaacaact aaacaactta aaaatacaaa</span><br><span class=\"line\">      ttaccctaaa ctgtacccct attacatatt aactaattat tttaaaggtt ggatgataat</span><br><span class=\"line\">      atgtcaaata acatcatatc tgtaaaaaat ttaattaaaa gcttcgataa caaaatagta</span><br><span class=\"line\">      ttagataaat taaatttcga aatgaaagaa aactccactg ttgtaataat aggtaaaaac</span><br><span class=\"line\">      ggtgcaggta aaagtgtctt tctaaattgt ttacttggat ttattcatta caaccaaggt</span><br><span class=\"line\">      tcaatactaa tagatggaca acctgtagaa aatcgattac atctccgcaa gattacatcg</span><br><span class=\"line\">      ttaatttctt cagaccatca agaacatcta aatttattaa cccccaatga atatttttct</span><br><span class=\"line\">      tttttacaag atatttacca actaaaaagt aataataaag acaaaattca aaattactca</span><br><span class=\"line\">     gaagatctat atgttactaa agaactcaat actgtatttt catcactttc ttttggaaca</span><br><span class=\"line\">     aaaaagaaaa tacaattaat tggtagccta ttatattctc ctaaattatt gatttgcgac</span><br><span class=\"line\">     gaaatatttg aagggcttga tacagactca gtaaaatggg ttaaaaactt atttcaacaa</span><br><span class=\"line\">     agaaaacaag aaaatctttc tactttattt acaactcata ttactgaaca tataacagat</span><br><span class=\"line\">     ataacagaaa aaaattacat acttgaaaat ggaaaattaa ttgtgtaagt ttaaccactt</span><br><span class=\"line\">     atatttaaag ctaaaattaa ggagcttaaa atatgaattt taatatatat aagagactat</span><br><span class=\"line\">     atgataaatc aacagaagaa aaaagcaaaa caataacaaa acaaatatta tttggaatta</span><br><span class=\"line\">     taaatagttc tatattaata ggtatactac tcacatgttt ggagattttc aactttaaaa</span><br><span class=\"line\">     tttcaactgt aatgtatggt tatttcacta tatatataat actagaactt ttactattat</span><br><span class=\"line\">     tctctgcaaa tcaactatat gaaagtacag aattcataat aaaattcctt aaatatacac</span><br><span class=\"line\">     caataaccat aaataaacta tatttctcac attttctaag ttctaaatat tcattttcca</span><br><span class=\"line\">     atctttttga aataataact ctcacatcaa ttttattaat atataatgtc gatatcttat</span><br><span class=\"line\">     attcatttat tttcataatt agcttacaaa ttattagctt aataagaaca tatttagaat</span><br><span class=\"line\">     ttttactatt atattctcaa aaaaaacagg ttaaaatttt tactctaacc cattttgttt</span><br><span class=\"line\">     tcataatatc tatggttttt tatattattg ttaaaacaaa atcgatagat ttagtattct</span><br><span class=\"line\">     ttgaaaacac aaatatgtta attatatctg ttcttctcat aacattcttg atatcacttt</span><br><span class=\"line\">     taacatataa acatattata gaatacttaa tgaaaaataa tgaaattgta tataatgcta</span><br><span class=\"line\">     tttttatcaa gttaactttt aacacagcta atttaattag taaattattt aaatttaata</span><br><span class=\"line\">     catcaattgc atctttaata aaaatacata taatacgatt attacgtaat caagactata</span><br><span class=\"line\">     taagtagatt actaaaaata ggaatattac tatttatttt ttcttctata agctttctat</span><br><span class=\"line\">     ttttcgataa atcatcaaca aacaatgaaa tgagtgatat actttacttt tcatttttta</span><br><span class=\"line\">     tttccttatt tagtttttct aacatacgat tagactataa cttagtttct aaattaagct</span><br><span class=\"line\">     tagaggatta tccaataaca aaattacaat caagattaag cattgatata gcacatggaa</span><br><span class=\"line\">     ttttactatt tatactatct ttatttcttt tattaacaca atacttattg aatccaacaa</span><br><span class=\"line\">     atattctaac tctaattgat ggtttattat catttatttg tttttatttt ctaagtcttg</span><br><span class=\"line\">     gtatagaaaa agcagatatt ataataacac caaaaacaaa atggaaaatg tatccattat</span><br><span class=\"line\">     tttttgtgat gggattaata attgaagcaa tatttctatt aaaattcaaa atatggataa</span><br><span class=\"line\">     aattaataac tttattcctt tgtatactgt ggtcatattt acgtgtttat tggaaattaa</span><br><span class=\"line\">     aaaaacaata aacacaatta aaaagttccc ttcatatttt ttgaagggaa cttttatttt</span><br><span class=\"line\">     aaacaaaaat tacaaacaag caaagttatt taaaagtaaa cttttaaaat tattgaatta</span><br><span class=\"line\">     ataacaatta gtctaagata tatcagccaa atttaatttt taaacaaacc gaaaaaccct</span><br><span class=\"line\">     ttccgttttt gtttctgatt ttggctctgt atttctctaa tgttttcaag caataactga</span><br><span class=\"line\">     tctcgttttt caaatttttt ctctataaaa acctctaatt caatattttt atcttctact</span><br><span class=\"line\">     tcctttaatt ttctctccgt attagccaaa tgttcttttg tggtaactaa ttcattcgta</span><br><span class=\"line\">     atctcttgta atttttgaac aagcgtttga ttgaactgat tttgtaattg ttgattttct</span><br><span class=\"line\">     aatacttcat ccaacttctt ttctaattcc gatttttcct ctcttgaaac aaacaaatca</span><br><span class=\"line\">     agttctccat tccgccatgc tcgaacttga tcataagacc atttttgcac ctgtattttt</span><br><span class=\"line\">     tctttaattg ctatcaattc ttctatattt tcctttgagt acctacgatg ccctccctga</span><br><span class=\"line\">     cttcgctccg tttgtatatt aaattcgttt gaccatgctt ttaacaagtc aggggtaatc</span><br><span class=\"line\">     cctaaacgat ccgcaacaat tttcggtgta tacatttctg attttaattc caa</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件2：描述基因特征的feature table文件（.tbl），文件名与FASTA文件一致，如<code>Toyoncin.tbl</code>。</li>\n</ul>\n<p>该文件可以用prokka对文件1进行注释而得到，但是需要自己加以修改，加上gene相关的信息，<code>product</code>部分也要自己修改，该文件共<code>5</code>列，各列之间用制表符分隔。Header部分的名称要与Fasta文件中的一致，但开头需要加上<code>Feature</code>。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;Feature Toyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster</span><br><span class=\"line\">585\t1\tgene</span><br><span class=\"line\">\t\t\tgene\torf1</span><br><span class=\"line\">585\t1\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00001</span><br><span class=\"line\">\t\t\tproduct\tMarR family transcriptional regulator</span><br><span class=\"line\">1476\t811\tgene</span><br><span class=\"line\">\t\t\tgene\torf2</span><br><span class=\"line\">1476\t811\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00002</span><br><span class=\"line\">\t\t\tproduct\tYIP1 family membrane protein</span><br><span class=\"line\">2710\t1496\tgene</span><br><span class=\"line\">\t\t\tgene\torf3</span><br><span class=\"line\">2710\t1496\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00003</span><br><span class=\"line\">\t\t\tproduct\tABC transporter permease</span><br><span class=\"line\">3387\t2707\tgene</span><br><span class=\"line\">\t\t\tgene\torf4</span><br><span class=\"line\">3387\t2707\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00004</span><br><span class=\"line\">\t\t\tproduct\tABC transporter ATP-binding protein</span><br><span class=\"line\">4595\t3384\tgene</span><br><span class=\"line\">\t\t\tgene\torf5</span><br><span class=\"line\">4595\t3384\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00005</span><br><span class=\"line\">\t\t\tproduct\tRND family efflux transporter, MFP subunit</span><br><span class=\"line\">4746\t4952\tgene</span><br><span class=\"line\">\t\t\tgene\torf6</span><br><span class=\"line\">4746\t4952\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00006</span><br><span class=\"line\">\t\t\tproduct\tHelix-turn-helix transcriptional regulator</span><br><span class=\"line\">5010\t5198\tgene</span><br><span class=\"line\">\t\t\tgene\torf7</span><br><span class=\"line\">5010\t5198\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00007</span><br><span class=\"line\">\t\t\tproduct\tPutative membrane protein</span><br><span class=\"line\">5337\t5549\tgene</span><br><span class=\"line\">\t\t\tgene\ttoyA</span><br><span class=\"line\">5337\t5549\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00008</span><br><span class=\"line\">\t\t\tproduct\tToyonsin precusor</span><br><span class=\"line\">5657\t6304\tgene</span><br><span class=\"line\">\t\t\tgene\torf9</span><br><span class=\"line\">5657\t6304\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00009</span><br><span class=\"line\">\t\t\tproduct\tABC transporter ATP-binding protein</span><br><span class=\"line\">6349\t7707\tgene</span><br><span class=\"line\">\t\t\tgene\torf10</span><br><span class=\"line\">6349\t7707\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00010</span><br><span class=\"line\">\t\t\tproduct\tPutative membrane protein</span><br><span class=\"line\">8391\t7849\tgene</span><br><span class=\"line\">\t\t\tgene\torf11</span><br><span class=\"line\">8391\t7849\tCDS</span><br><span class=\"line\">\t\t\tinference\tab initio prediction:Prodigal:002006</span><br><span class=\"line\">\t\t\tlocus<span class=\"built_in\">_</span>tag\tToyoncin<span class=\"built_in\">_</span>biosynthesis<span class=\"built_in\">_</span>gene<span class=\"built_in\">_</span>cluster<span class=\"built_in\">_</span>00011</span><br><span class=\"line\">\t\t\tproduct\tMarR family transcriptional regulator</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文件3：描述作者信息的模板文件（.sbt）</li>\n</ul>\n<p>可以在<a href=\"https://submit.ncbi.nlm.nih.gov/genbank/template/submission/\">NCBI</a>上生成该文件。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Submit-block ::= &#123;</span><br><span class=\"line\">  contact &#123;</span><br><span class=\"line\">    contact &#123;</span><br><span class=\"line\">      name name &#123;</span><br><span class=\"line\">        last &quot;xin&quot;,</span><br><span class=\"line\">        first &quot;bingyue&quot;,</span><br><span class=\"line\">        middle &quot;&quot;,</span><br><span class=\"line\">        initials &quot;&quot;,</span><br><span class=\"line\">        suffix &quot;&quot;,</span><br><span class=\"line\">        title &quot;&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      affil std &#123;</span><br><span class=\"line\">        affil &quot;Huaibei Normal University&quot;,</span><br><span class=\"line\">        div &quot;College of Life Sciences&quot;,</span><br><span class=\"line\">        city &quot;Huaibei&quot;,</span><br><span class=\"line\">        sub &quot;Anhui&quot;,</span><br><span class=\"line\">        country &quot;China&quot;,</span><br><span class=\"line\">        street &quot;Dongshan road No.100&quot;,</span><br><span class=\"line\">        email &quot;xinbingyuex@163.com&quot;,</span><br><span class=\"line\">        postal-code &quot;235000&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  cit &#123;</span><br><span class=\"line\">    authors &#123;</span><br><span class=\"line\">      names std &#123;</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          name name &#123;</span><br><span class=\"line\">            last &quot;Xin&quot;,</span><br><span class=\"line\">            first &quot;Bingyue&quot;,</span><br><span class=\"line\">            middle &quot;&quot;,</span><br><span class=\"line\">            initials &quot;&quot;,</span><br><span class=\"line\">            suffix &quot;&quot;,</span><br><span class=\"line\">            title &quot;&quot;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      affil std &#123;</span><br><span class=\"line\">        affil &quot;Huaibei Normal University&quot;,</span><br><span class=\"line\">        div &quot;College of Life Sciences&quot;,</span><br><span class=\"line\">        city &quot;Huaibei&quot;,</span><br><span class=\"line\">        sub &quot;Anhui&quot;,</span><br><span class=\"line\">        country &quot;China&quot;,</span><br><span class=\"line\">        street &quot;Dongshan road No.100&quot;,</span><br><span class=\"line\">        postal-code &quot;235000&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  subtype new</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= pub &#123;</span><br><span class=\"line\">  pub &#123;</span><br><span class=\"line\">    gen &#123;</span><br><span class=\"line\">      cit &quot;unpublished&quot;,</span><br><span class=\"line\">      authors &#123;</span><br><span class=\"line\">        names std &#123;</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            name name &#123;</span><br><span class=\"line\">              last &quot;Xin&quot;,</span><br><span class=\"line\">              first &quot;Bingyue&quot;,</span><br><span class=\"line\">              middle &quot;&quot;,</span><br><span class=\"line\">              initials &quot;&quot;,</span><br><span class=\"line\">              suffix &quot;&quot;,</span><br><span class=\"line\">              title &quot;&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      title &quot;Purification and characterization of a novel leaderless bacteriocin, toyoncin, produced by Bacillus toyonensis XIN-YC13 that specifically active against Bacilus cereus and Listeria monocytogenes&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= user &#123;</span><br><span class=\"line\">  type str &quot;Submission&quot;,</span><br><span class=\"line\">  data &#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      label str &quot;AdditionalComment&quot;,</span><br><span class=\"line\">      data str &quot;ALT EMAIL:xinbingyuex@163.com&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Seqdesc ::= user &#123;</span><br><span class=\"line\">  type str &quot;Submission&quot;,</span><br><span class=\"line\">  data &#123;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      label str &quot;AdditionalComment&quot;,</span><br><span class=\"line\">      data str &quot;Submission Title:None&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>注意</strong>：文件1和文件2的序列描述信息必须一致，此例中均为“Toyoncin_biosynthesis_gene_cluster”。</p>\n<h1 id=\"文件生成\"><a href=\"#文件生成\" class=\"headerlink\" title=\"文件生成\"></a>文件生成</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">table2asn -i Toyoncin.fas -t template.sbt -V vb</span><br></pre></td></tr></table></figure>\n\n<p>-i 指定FASTA文件<br>-t 指定模板文件<br>-V<br>  -v 生成验证文件，保存错误信息<br>  -b 生成gbf文件<br>-x 文件1（FASTA文件）的后缀名，根据实际情况填写</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://ftp.ncbi.nih.gov/toolbox/ncbi_tools/converters/by_program/table2asn_GFF/DOCUMENTATION/table2asn_readme.txt\">table2asn</a></p>\n</li>\n<li><p><a href=\"http://liaochenlanruo.fun/post/d444.html\">《NCBI上传基因簇之tbl2asn的使用》</a></p>\n</li>\n</ul>\n<h1 id=\"加关注\"><a href=\"#加关注\" class=\"headerlink\" title=\"加关注\"></a>加关注</h1><p>扫码关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"NCBI","path":"api/tags/NCBI.json"},{"name":"序列处理","path":"api/tags/序列处理.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"深入理解特征标准化：为何、如何及其重要性","slug":"特征标准化","date":"2024-08-12T10:30:19.000Z","updated":"2024-08-12T12:01:50.986Z","comments":true,"path":"api/articles/特征标准化.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p>在数据驱动的时代，无论是机器学习模型的构建、数据分析的深入探索，还是统计建模的精确预测，数据预处理都是不可或缺的一环。数据预处理如同烹饪前的食材准备，它决定了最终成果的质量与口感。在众多预处理技术中，特征标准化（Feature Standardization）以其独特的优势，成为了提升模型性能、加速算法收敛、确保数值稳定性的重要手段。</p>\n<p>特征标准化，简而言之，是通过数学变换将原始数据特征转换为具有特定均值（通常为0）和标准差（通常为1）的新数据的过程。这一过程不仅消除了不同特征之间因量纲差异而可能导致的偏见，还使得模型在训练过程中能够更加高效地遍历参数空间，从而更快地找到最优解。此外，特征标准化还有助于避免极端值对模型训练造成的干扰，确保数值计算的稳定性和准确性。</p>\n<p>本文旨在深入探讨特征标准化的概念、方法、应用场景及其重要性。我们将从定义出发，逐步解析特征标准化的原理与优势；通过实例展示如何在实践中应用特征标准化技术；并探讨在实施过程中可能遇到的挑战与注意事项。希望通过本文的阐述，读者能够全面理解并掌握特征标准化的精髓，从而在数据分析和机器学习项目中更加得心应手。</p>\n<h1 id=\"一、特征标准化的基本概念\"><a href=\"#一、特征标准化的基本概念\" class=\"headerlink\" title=\"一、特征标准化的基本概念\"></a>一、特征标准化的基本概念</h1><p><strong>定义解析</strong>：</p>\n<p><code>特征标准化</code>，又称Z-score标准化或标准差标准化，是一种将数据按比例缩放，使其落入一个小的特定区间（通常是-1到1之间，但并非严格限制）的技术。这一过程主要通过去除数据的均值并除以数据的标准差来实现，从而确保处理后的数据具有单位方差和指定的均值（在Z-score标准化中，均值通常为0）。特征标准化的数学表达式通常基于Z-score公式，如下所示：</p>\n<p>$Z &#x3D; \\frac{X - \\mu}{\\sigma}$</p>\n<p>其中，$X$ 是原始数据特征中的某个值，$\\mu$ 是该特征所有值的均值，$\\sigma$ 是该特征所有值的标准差，而<em>Z</em>则是经过标准化处理后的新值。通过这个公式，我们可以将任何一组数据转换为具有相同尺度的数据，使得不同量纲或分布的数据能够在同一框架下进行比较和分析。</p>\n<p><strong>与归一化的区别</strong>：</p>\n<p>特征标准化与数据归一化（Min-Max Scaling）虽然都旨在将数据缩放到一个统一的范围内，但它们在实现方法和适用场景上存在显著差异。</p>\n<ul>\n<li><p><strong>实现方法</strong>：特征标准化通过去除均值并除以标准差来实现，而数据归一化则是通过将数据缩放到指定的最小值和最大值之间（通常是0到1）来完成。归一化的数学表达式可以表示为：</p>\n<p>$X_{\\text{norm}} &#x3D; {\\frac{X - X_{\\min}}{X_{\\max} - X_{\\min}}}\\times (range_{max} - range_{min}) + range_{min}$</p>\n<p>其中，$X_{\\text{norm}}$ 是归一化后的值，$X_{\\min}$ 和 $X_{\\max}$ 分别是原始数据中的最小值和最大值，$range_{max}$和$range_{min}$分别是缩放后的目标范围的最小值和最大值。</p>\n</li>\n<li><p><strong>适用场景</strong>：特征标准化更适合于那些分布符合高斯分布（或接近高斯分布）的数据集，以及那些对异常值不敏感或希望保留异常值影响的场景。因为标准化不会改变数据的分布形状，只是进行了尺度上的缩放。相比之下，归一化更适合于那些数据分布范围已知且较为稳定的场景，尤其是当数据分布明显偏离高斯分布时。此外，归一化对于需要限制数据范围到特定区间的算法（如某些神经网络层的激活函数）特别有用。</p>\n</li>\n</ul>\n<h1 id=\"二、为何需要特征标准化\"><a href=\"#二、为何需要特征标准化\" class=\"headerlink\" title=\"二、为何需要特征标准化\"></a>二、为何需要特征标准化</h1><p>在机器学习和数据科学领域，特征标准化是一项至关重要的预处理步骤，它对于提升模型性能、加快训练过程以及确保数值计算的稳定性具有显著作用。以下是特征标准化的几个关键原因：</p>\n<h2 id=\"1-消除量纲影响\"><a href=\"#1-消除量纲影响\" class=\"headerlink\" title=\"1. 消除量纲影响\"></a>1. 消除量纲影响</h2><p>不同特征往往具有不同的量纲和度量单位，例如，一个特征可能表示年龄（以年为单位），而另一个特征可能表示收入（以美元为单位）。这些不同量纲的数据在数值上差异巨大，如果直接用于模型训练，会导致某些特征在模型中的权重被不恰当地放大或缩小，从而影响模型的训练效果和泛化能力。通过特征标准化，即将所有特征缩放到同一尺度（如均值为0，标准差为1），可以消除这种量纲差异，使得每个特征在模型训练过程中都能被公平对待。</p>\n<h2 id=\"2-加快收敛速度\"><a href=\"#2-加快收敛速度\" class=\"headerlink\" title=\"2. 加快收敛速度\"></a>2. 加快收敛速度</h2><p>在大多数机器学习算法中，尤其是基于梯度下降的优化算法，特征标准化能够显著加快收敛速度。梯度下降算法通过计算损失函数关于模型参数的梯度来更新参数，以最小化损失函数。如果特征未经过标准化处理，不同特征的数值范围差异可能导致梯度在更新过程中呈现不同的步长，使得优化过程变得曲折且缓慢。通过标准化，所有特征的梯度更新步长变得相对一致，从而加快了算法的收敛速度，减少了达到最优解所需的迭代次数。</p>\n<h2 id=\"3-提升模型性能\"><a href=\"#3-提升模型性能\" class=\"headerlink\" title=\"3. 提升模型性能\"></a>3. 提升模型性能</h2><p>多项研究表明，特征标准化能够显著提升模型的准确率和稳定性。标准化后的数据使得模型更容易学习到数据中的真实模式，而不是被数据的量纲差异所误导。此外，标准化还有助于减少过拟合的风险，因为标准化后的数据分布更加均匀，减少了模型对特定数据点的过度依赖。通过实例或研究数据展示，我们可以发现，在相同的数据集和模型架构下，经过标准化的模型往往能够取得更高的准确率和更低的误差率。</p>\n<h2 id=\"4-避免数值问题\"><a href=\"#4-避免数值问题\" class=\"headerlink\" title=\"4. 避免数值问题\"></a>4. 避免数值问题</h2><p>极端值（如非常大或非常小的数值）在数据集中是常见的，它们可能导致数值计算问题，如梯度爆炸或梯度消失，进而影响模型的训练过程。梯度爆炸指的是在梯度更新过程中，梯度值变得异常大，导致模型参数更新不稳定；而梯度消失则相反，梯度值变得非常小，使得模型参数几乎不更新。通过特征标准化，可以将极端值限制在一个合理的范围内，从而有效避免这些数值问题，确保模型训练的顺利进行。</p>\n<h1 id=\"三、特征标准化的方法\"><a href=\"#三、特征标准化的方法\" class=\"headerlink\" title=\"三、特征标准化的方法\"></a>三、特征标准化的方法</h1><h2 id=\"Z-score标准化\"><a href=\"#Z-score标准化\" class=\"headerlink\" title=\"Z-score标准化\"></a>Z-score标准化</h2><p>Z-score标准化，也称为标准差标准化，是最常用的特征标准化方法之一。它通过计算每个特征值的Z分数（即该值与其均值的差除以标准差）来实现数据的标准化。具体计算过程如下：</p>\n<ol>\n<li><p><strong>计算均值</strong>：首先，对于每个特征，计算其所有样本值的均值（$\\mu$）。均值反映了该特征的中心趋势。</p>\n</li>\n<li><p><strong>计算标准差</strong>：接着，计算该特征的标准差（$\\sigma$）。标准差衡量了数据点相对于均值的离散程度，是数据分布宽度的一个度量。</p>\n</li>\n<li><p><strong>标准化处理</strong>：最后，使用Z-score公式将每个特征值转换为标准化后的值（$Z$）。公式为：</p>\n<p>$Z &#x3D; \\frac{X - \\mu}{\\sigma}$</p>\n<p>其中，$X$ 是原始特征值，$Z$ 是转换后的标准化值。</p>\n</li>\n</ol>\n<p>Z-score标准化的作用在于将数据转换为均值为0、标准差为1的分布，从而消除了不同特征之间的量纲差异，使得它们在模型训练中具有相同的权重。此外，Z-score标准化对异常值相对不敏感，因为它依赖于整个数据集的统计特性（均值和标准差）。Z-score标准化会改变原始数据的稀疏性（原来很多非零数据变为0）及分布，而且并不是归一化的。</p>\n<h2 id=\"MinMaxScaler标准化\"><a href=\"#MinMaxScaler标准化\" class=\"headerlink\" title=\"MinMaxScaler标准化\"></a>MinMaxScaler标准化</h2><p>虽然Min-Max标准化并不完全等同于特征标准化（因为它不改变数据的分布形状和稀疏性，只是进行了线性缩放），但它仍然是一种常用的数据缩放方法，并经常与特征标准化进行比较。Min-Max标准化的原理是将数据缩放到一个指定的最小值和最大值之间（通常是0和1），其计算公式为：</p>\n<p>$X_{\\text{norm}} &#x3D; {\\frac{X - X_{\\min}}{X_{\\max} - X_{\\min}}}\\times (range_{max} - range_{min}) + range_{min}$</p>\n<p>其中，$X_{\\text{norm}}$ 是归一化后的值，$X$ 是原始特征值，$X_{\\min}$ 和 $X_{\\max}$ 分别是该特征的最小值和最大值，$range_{max}$和$range_{min}$分别是缩放后的目标范围的最小值和最大值。</p>\n<p>Min-Max标准化适用于那些需要数据范围限制在特定区间的场景，比如某些神经网络的激活函数。然而，它对于新数据的加入比较敏感，因为新数据的最大值和最小值可能会改变整个数据集的缩放比例。</p>\n<h2 id=\"MaxAbsScaler\"><a href=\"#MaxAbsScaler\" class=\"headerlink\" title=\"MaxAbsScaler\"></a>MaxAbsScaler</h2><p>分别对每个特征进行缩放和平移，使得每个特征的最大绝对值为1，最终的值在[-1, 1]。该法不会导致数据整体形态发生大的变化，因此不破坏稀疏性（非零数据不会变为0，0还是0）。因此，可用于比较稀疏的数据。虽然会对分布造成一定的改变，但大致形态接近。</p>\n<p>$X_{\\text{norm}} &#x3D; \\frac{X}{\\left\\vert X_{max} \\right\\vert}$</p>\n<h2 id=\"保持分布的归一化缩放\"><a href=\"#保持分布的归一化缩放\" class=\"headerlink\" title=\"保持分布的归一化缩放\"></a>保持分布的归一化缩放</h2><p>若把一个样本用向量来表示，对于不全是0的向量，对其进行独立于其他样本的缩放，从而使其范数等于1，即将样本分别表转化为单位范数。</p>\n<p><code>L1范数</code>是向量中所有元素值的绝对值之和；<code>L2范数</code>是所有元素平方和的平方根；<code>inf范数</code>指所有元素最大绝对值。</p>\n<p><strong>L2范数标准化（也称为单位向量标准化）</strong>：将特征向量缩放为具有单位L2范数（即欧几里得距离）。这种方法常用于文本数据处理（文本分类、聚类）或图像处理中，以确保特征向量之间的比较是公平的。该缩放基本保持了原始数据的分布，并且对范围进行了归一化（[0, 1]）。</p>\n<p>$X_{\\text{norm}} &#x3D; \\frac{X}{\\left\\vert\\left\\vert X \\right\\vert\\right\\vert}$</p>\n<h2 id=\"缩放含离群值的特征（RobustScaler）\"><a href=\"#缩放含离群值的特征（RobustScaler）\" class=\"headerlink\" title=\"缩放含离群值的特征（RobustScaler）\"></a>缩放含离群值的特征（RobustScaler）</h2><p>若数据包含很多异常离群值，用Z-score方法效果不佳。可以使用RobustScaler替代。</p>\n<p><strong>原理</strong>：通过计算每个特征的中位数和四分位数范围来进行数据缩放。具体来说，它将每个特征的值减去该特征的中位数，然后再除以该特征的四分位数范围。这种方法可以有效地处理异常值的影响，因为四分位数范围对异常值不敏感，从而使得标准化后的数据更加稳定和可靠。</p>\n<p><strong>应用</strong>：RobustScaler在机器学习模型中的应用主要体现在提高模型的泛化能力和稳定性上。通过减少异常值对数据分析的影响，RobustScaler可以帮助模型更好地学习数据的内在规律，从而提高模型的预测准确性和稳定性。</p>\n<p>$X_{\\text{norm}} &#x3D; \\frac{X-Q1}{IQR}$</p>\n<p>其中 $X$ 是原始数据值 $Q1$ 是第一四分位数 $IQR$ 是四分位数间距，即 $Q3−Q1$。</p>\n<h2 id=\"其他标准化技术\"><a href=\"#其他标准化技术\" class=\"headerlink\" title=\"其他标准化技术\"></a>其他标准化技术</h2><p>除了上述标准化之外，还存在其他几种标准化方法，每种方法都有其特定的适用场景：</p>\n<ul>\n<li><p><strong>小数定标标准化（Decimal Scaling Normalization）</strong>：通过移动数据的小数点位置来进行标准化。具体移动多少位取决于数据的最大值。这种方法适用于数据范围已知且相对稳定的场景。</p>\n</li>\n<li><p><strong>对数标准化</strong>：对于某些具有长尾分布的数据，可以通过取对数来减少极端值的影响，并进行标准化处理。这种方法在经济学和金融数据分析中尤为常见。</p>\n</li>\n</ul>\n<p>每种标准化方法都有其独特的优势和局限性，因此在选择时应根据数据的特性、模型的需求以及业务场景来综合考虑。</p>\n<h1 id=\"四、特征标准化的实施步骤\"><a href=\"#四、特征标准化的实施步骤\" class=\"headerlink\" title=\"四、特征标准化的实施步骤\"></a>四、特征标准化的实施步骤</h1><h2 id=\"数据准备\"><a href=\"#数据准备\" class=\"headerlink\" title=\"数据准备\"></a>数据准备</h2><p>在进行特征标准化之前，数据准备是至关重要的一步。数据准备阶段主要包括数据清洗和预处理，以确保数据的质量和一致性，为后续的标准化过程打下坚实的基础。以下是数据准备阶段的关键步骤：</p>\n<ol>\n<li><p><strong>数据清洗</strong>：检查并处理数据中的缺失值、重复值、错误格式等问题。对于缺失值，可以采用填充（如均值填充、中位数填充、众数填充或插值法）或删除的方法进行处理。对于重复值，根据业务需求决定是保留还是删除。</p>\n</li>\n<li><p><strong>异常值处理</strong>：识别并处理数据中的异常值。异常值可能对标准化过程和模型训练产生不利影响。可以通过统计方法（如箱线图、IQR四分位距法）或基于模型的方法（如孤立森林）来检测异常值，并采取相应的处理措施（如删除、替换或标记）。</p>\n</li>\n<li><p><strong>数据划分</strong>：将数据集划分为训练集、验证集和测试集（如果可用）。虽然这一步不是直接针对特征标准化的，但它对于后续评估标准化效果至关重要。</p>\n</li>\n</ol>\n<h2 id=\"选择标准化方法\"><a href=\"#选择标准化方法\" class=\"headerlink\" title=\"选择标准化方法\"></a>选择标准化方法</h2><p>在选择标准化方法时，需要考虑数据类型、数据分布、模型需求以及业务场景等因素。对于大多数情况，Z-score标准化是一个安全且有效的选择，因为它能够消除量纲差异，并且对数据分布形状的影响较小。然而，在某些特定场景下，如需要限制数据范围到特定区间时，Min-Max标准化可能更为合适。此外，还可以根据数据的具体特性和业务需求探索其他标准化方法。</p>\n<h2 id=\"应用标准化\"><a href=\"#应用标准化\" class=\"headerlink\" title=\"应用标准化\"></a>应用标准化</h2><p>在确定了标准化方法后，可以使用编程工具来实现特征标准化。以下是一个使用Python的Pandas和Scikit-learn库进行Z-score标准化的示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设df是你的DataFrame，其中包含了需要标准化的特征</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用StandardScaler进行Z-score标准化</span></span><br><span class=\"line\">scaler = StandardScaler()</span><br><span class=\"line\">df_scaled = scaler.fit_transform(df)  <span class=\"comment\"># 注意：这会返回NumPy数组，而不是DataFrame</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果你需要DataFrame格式，可以这样做：</span></span><br><span class=\"line\">df_scaled = pd.DataFrame(df_scaled, columns=df.columns)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者，如果你只想标准化DataFrame中的某些列，可以这样做：</span></span><br><span class=\"line\">scaler = StandardScaler()</span><br><span class=\"line\">df[[<span class=\"string\">&#x27;feature1&#x27;</span>, <span class=\"string\">&#x27;feature2&#x27;</span>]] = scaler.fit_transform(df[[<span class=\"string\">&#x27;feature1&#x27;</span>, <span class=\"string\">&#x27;feature2&#x27;</span>]])</span><br></pre></td></tr></table></figure>\n\n<p>注意：在实际应用中，通常只在训练集上调用<code>fit_transform()</code>方法来拟合并转换数据，然后在验证集和测试集上调用<code>transform()</code>方法应用相同的转换规则，以确保数据的一致性。</p>\n<h2 id=\"验证效果\"><a href=\"#验证效果\" class=\"headerlink\" title=\"验证效果\"></a>验证效果</h2><p>验证标准化效果是评估特征标准化对模型性能影响的关键步骤。这通常通过比较标准化前后模型的性能指标（如准确率、召回率、F1分数等）来实现。此外，还可以观察模型训练过程中的收敛速度、损失函数的变化情况以及梯度更新的稳定性等指标来评估标准化的效果。如果标准化后模型的性能有所提升，且训练过程更加稳定，那么可以认为标准化是有效的。反之，则需要考虑调整标准化方法或进一步探索其他数据预处理技术。</p>\n<h1 id=\"五、特征标准化的应用场景\"><a href=\"#五、特征标准化的应用场景\" class=\"headerlink\" title=\"五、特征标准化的应用场景\"></a>五、特征标准化的应用场景</h1><h2 id=\"机器学习模型\"><a href=\"#机器学习模型\" class=\"headerlink\" title=\"机器学习模型\"></a>机器学习模型</h2><p>在机器学习领域，特征标准化是提升模型性能的重要手段之一。以下是几个常见机器学习任务中特征标准化的应用：</p>\n<ul>\n<li><p><strong>分类任务</strong>：在分类问题中，如文本分类、图像识别等，特征标准化可以帮助模型更好地学习数据中的真实模式，减少因量纲差异导致的偏差。通过标准化，模型可以更加公平地对待不同特征，从而提高分类的准确率。</p>\n</li>\n<li><p><strong>回归任务</strong>：在回归问题中，如房价预测、股票价格预测等，特征标准化同样重要。标准化后的数据能够加快梯度下降等优化算法的收敛速度，使模型更快找到最优解。此外，标准化还能提高模型的泛化能力，减少过拟合的风险。</p>\n</li>\n<li><p><strong>聚类任务</strong>：在聚类分析中，如K-means聚类、层次聚类等，特征标准化能够确保不同特征在聚类过程中具有相同的权重，从而得到更加合理和准确的聚类结果。未标准化的数据可能会导致某些特征在聚类过程中占据主导地位，影响聚类的有效性。</p>\n</li>\n</ul>\n<h2 id=\"深度学习\"><a href=\"#深度学习\" class=\"headerlink\" title=\"深度学习\"></a>深度学习</h2><p>在深度学习领域，神经网络训练过程中特征标准化的重要性更加凸显。神经网络通常包含多层非线性变换，如果输入数据未经过标准化处理，可能会导致梯度消失或梯度爆炸问题，严重影响模型的训练效果。通过特征标准化，可以确保输入数据在合理的范围内波动，有助于神经网络学习过程的稳定进行。此外，标准化后的数据还能加速神经网络的收敛速度，提高模型的训练效率。</p>\n<h2 id=\"金融分析\"><a href=\"#金融分析\" class=\"headerlink\" title=\"金融分析\"></a>金融分析</h2><p>在金融领域，特征标准化广泛应用于时间序列分析、风险评估等任务中。在金融时间序列分析中，不同金融指标（如股票价格、汇率、利率等）的量纲和波动范围差异较大，直接用于分析可能导致结果失真。通过特征标准化，可以消除这些差异，使得不同指标在模型中具有相同的权重和重要性。在风险评估领域，标准化后的数据有助于构建更加稳定和准确的风险评估模型，提高风险识别的准确性和及时性。</p>\n<h2 id=\"其他领域\"><a href=\"#其他领域\" class=\"headerlink\" title=\"其他领域\"></a>其他领域</h2><p>除了上述领域外，特征标准化还在生物信息学、图像处理等其他领域发挥着重要作用。在生物信息学中，基因表达数据、蛋白质结构数据等通常需要进行标准化处理，以便进行后续的生物信息学分析和挖掘。在图像处理中，像素值的标准化有助于减少光照变化、噪声等因素对图像质量的影响，提高图像识别和分析的准确性。</p>\n<h1 id=\"六、注意事项与挑战\"><a href=\"#六、注意事项与挑战\" class=\"headerlink\" title=\"六、注意事项与挑战\"></a>六、注意事项与挑战</h1><h2 id=\"数据泄露\"><a href=\"#数据泄露\" class=\"headerlink\" title=\"数据泄露\"></a>数据泄露</h2><p>在进行特征标准化时，需要特别注意数据泄露的问题。特别是在使用交叉验证或测试集来评估模型性能时，应避免在测试集上直接使用训练集计算得到的统计量（如均值和标准差）进行标准化。这样做会导致数据泄露问题，使得模型在测试集上的性能被高估。正确的做法是使用训练集计算统计量，并仅对训练集进行标准化处理；在评估模型性能时，应对测试集使用训练集统计量进行标准化，以确保评估的公正性和准确性。</p>\n<h2 id=\"异常值处理\"><a href=\"#异常值处理\" class=\"headerlink\" title=\"异常值处理\"></a>异常值处理</h2><p>异常值处理是特征标准化前的重要步骤之一。异常值可能会对统计量的计算产生显著影响，导致标准化后的数据出现偏差。因此，在进行特征标准化之前，应对数据进行全面的异常值检测和处理。常见的异常值处理方法包括删除、替换（如使用中位数或均值替换）、标记（如设置标志位）等。根据数据的特性和业务需求选择合适的异常值处理方法至关重要。</p>\n<h2 id=\"选择适合的标准化方法\"><a href=\"#选择适合的标准化方法\" class=\"headerlink\" title=\"选择适合的标准化方法\"></a>选择适合的标准化方法</h2><p>选择适合的标准化方法对于提高模型性能至关重要。不同的标准化方法适用于不同的数据类型和业务场景。例如，Z-score标准化适用于大多数连续型数据的标准化处理；Min-Max标准化适用于需要限制数据范围到特定区间的场景；小数定标标准化适用于数据范围已知且相对稳定的场景等。在选择标准化方法时，应充分考虑数据的特性、模型的需求以及业务场景的要求，以确保标准化过程的有效性和合理性。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>在本文中，我们全面探讨了特征标准化的定义、重要性、方法、实施步骤以及广泛的应用场景。特征标准化作为数据预处理的关键步骤之一，通过调整数据的分布和量纲，使得不同特征在模型中具有相同的权重和重要性，从而提高了模型的训练效率和预测性能。</p>\n<p>首先，我们回顾了特征标准化的基本定义，即通过对数据进行缩放或平移操作，使其满足特定的统计特性（如均值为0，标准差为1）。接着，我们强调了特征标准化在机器学习、深度学习以及金融分析等领域中的重要性，指出它能够有效减少模型训练时间、提高模型泛化能力并优化模型性能。</p>\n<p>在方法部分，我们介绍了多种常见的特征标准化方法，包括Z-score标准化、Min-Max标准化以及小数定标标准化等，并讨论了它们各自的适用场景和优缺点。通过对比不同方法的特点和效果，读者可以根据实际需求选择最适合的标准化方法。</p>\n<p>在实施步骤方面，我们详细阐述了数据准备、选择标准化方法、应用标准化以及验证效果等关键步骤。这些步骤为读者提供了从数据清洗到模型评估的完整流程，有助于他们在实际项目中有效地应用特征标准化技术。</p>\n<p>此外，我们还探讨了特征标准化在多个领域的应用场景，包括机器学习模型中的分类、回归和聚类任务，深度学习中的神经网络训练，以及金融分析中的时间序列分析和风险评估等。这些应用案例不仅展示了特征标准化的广泛适用性，还进一步强调了其在解决实际问题中的重要作用。</p>\n<p>展望未来，随着数据科学和机器学习技术的不断发展，特征标准化技术也将迎来新的发展机遇。自动化标准化工具的发展将使得特征标准化的过程更加简便快捷，降低了技术门槛并提高了工作效率。同时，随着新算法和新模型的不断涌现，特征标准化的方法和应用场景也将不断拓展和深化。</p>\n<p>最后，我们鼓励读者在自己的项目中积极尝试应用特征标准化技术，并通过实践不断积累经验。通过分享实践经验和学习心得，我们可以共同推动特征标准化技术的发展和应用，为数据科学和机器学习领域的发展贡献自己的力量。</p>\n<h1 id=\"关注我\"><a href=\"#关注我\" class=\"headerlink\" title=\"关注我\"></a>关注我</h1><p>关注公众号“生信之巅”。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"机器学习","path":"api/tags/机器学习.json"},{"name":"特征工程","path":"api/tags/特征工程.json"}]}]}