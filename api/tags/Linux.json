{"name":"Linux","postlist":[{"title":"Linux和基因组测序技术初识","slug":"Linux和基因组测序技术初识","date":"2019-10-31T14:05:49.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Linux和基因组测序技术初识.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png","content":"<p>该文档可以帮助读者入门Linux系统，掌握常用命令和多种软件安装方式。此外还简述了全基因组测序技术，希望读者可以通过此文档初步了解生物信息学。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Linux初识\"><a href=\"#Linux初识\" class=\"headerlink\" title=\"Linux初识\"></a>Linux初识</h1><h2 id=\"目录结构与路径\"><a href=\"#目录结构与路径\" class=\"headerlink\" title=\"目录结构与路径\"></a>目录结构与路径</h2><h3 id=\"根目录\"><a href=\"#根目录\" class=\"headerlink\" title=\"根目录\"></a>根目录</h3><p>根目录（root）是系统最顶级目录，以“&#x2F;”表示，其他目录均为根目录的下级目录。</p>\n<h3 id=\"家目录\"><a href=\"#家目录\" class=\"headerlink\" title=\"家目录\"></a>家目录</h3><p>家目录（home）是用户的最顶级目录，以“~&#x2F;”表示，用户所有的目录均为家目录的下级目录。</p>\n<h3 id=\"绝对路径\"><a href=\"#绝对路径\" class=\"headerlink\" title=\"绝对路径\"></a>绝对路径</h3><p>绝对路径指的是目录或文件的绝对位置，是从根目录开始的完整路径，如“&#x2F;home&#x2F;bio&#x2F;”。可通过“pwd”命令获取当前目录的绝对路径。</p>\n<h3 id=\"相对路径\"><a href=\"#相对路径\" class=\"headerlink\" title=\"相对路径\"></a>相对路径</h3><p>相对路径不需要从根目录开始，只要指定与当前目录的相对位置即可。</p>\n<h3 id=\"当前目录\"><a href=\"#当前目录\" class=\"headerlink\" title=\"当前目录\"></a>当前目录</h3><p>当前所在的路径，以“.&#x2F;“表示。</p>\n<h3 id=\"上级目录\"><a href=\"#上级目录\" class=\"headerlink\" title=\"上级目录\"></a>上级目录</h3><p>也称为父目录，以“..&#x2F;“表示向上一级的目录，以“..&#x2F;..&#x2F;”表示向上两级的目录，以此类推。</p>\n<h2 id=\"命名法则\"><a href=\"#命名法则\" class=\"headerlink\" title=\"命名法则\"></a>命名法则</h2><ul>\n<li>文档与目录均以英文命名，可使用字母、数字和下划线；</li>\n<li>文档与目录的名称不允许存在空格；</li>\n<li>名称区分大小写。</li>\n</ul>\n<h2 id=\"终端工具\"><a href=\"#终端工具\" class=\"headerlink\" title=\"终端工具\"></a>终端工具</h2><p>终端（terminal）是运行Linux命令的工具，类似于Windows的命令行工具。Linux各发行版均自带终端。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Linux自带终端\"></p>\n<p>远程操控Linux服务器时，可以使用第三方的终端工具，如PuTTy软件。输入IP地址即可远程登录服务器运行命令。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Putty\"></p>\n<p>本地计算机与服务器之间的文件传输可以通过FTP软件实现,如FileZilla。输入服务器的IP地址、用户名、密码以及端口即可链接服务器。如果服务器采用的时FTP协议，则端口填写21，若采用的是SFTP协议，则端口设置为22。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"FileZilla\"></p>\n<h2 id=\"常用的命令\"><a href=\"#常用的命令\" class=\"headerlink\" title=\"常用的命令\"></a>常用的命令</h2><p><strong>pwd：</strong> 获取当前位置的绝对路径</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">pwd</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"获取当前位置的绝对路径\"></p>\n<p><strong>mkdir：</strong> 创建目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mkdir</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"创建tools目录\"></p>\n<p><strong>ls：</strong> 查看当前目录包含的内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录包含的内容\"></p>\n<p>查看所有的目录和文件（包含隐藏的内容）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> -a</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录包含的所有内容\"></p>\n<p>查看根目录所含内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> /</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看根目录所含内容\"></p>\n<p>查看家目录所含内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ~/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看家目录所含内容\"></p>\n<p><strong>cd：</strong> 切换路径</p>\n<p>进入“tools”目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> tools</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入“tools”目录\"></p>\n<p><strong>vim：</strong> 创建&#x2F;编辑文档</p>\n<p>以下所有操作均需在英文输入法状态下进行。首先创建一个新文档“example.txt”，并输入内容。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim example.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"创建“example.txt”文档\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"此时无法输入内容\"></p>\n<p>此时无法输入内容，需要按一下字母“i”键切换到输入模式。当左下角出现“–NSERT –” 字样时，可以输入文字。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"vim插入模式\"></p>\n<p>输入相关的内容。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"vim输入内容\"></p>\n<p>输入完毕时需要先按一下“ESC”键退出编辑模式，此时“–NSERT –” 字样消失。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"退出vim编辑模式\"></p>\n<p>按住组合键“shift + :”切换到vim操作模式，此时左下角出现一个“:”。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"shift + :\"></p>\n<p>输入“wq!”保存修改并退出。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"保存并退出vim\"></p>\n<p>查看创建的文件是否在于目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录下的文件及目录\"></p>\n<p><strong>cp：</strong> 复制目录或文件</p>\n<p>将创建的“example.txt”文档复制到上一级目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cp</span> example.txt ../</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"向上级目录复制文件\"></p>\n<p>查看上一级目录下是否存在刚刚复制的文档。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ../</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看父目录下的文件及目录\"></p>\n<p><strong>rm：</strong> 删除目录或文件</p>\n<p>删除tools目录下的“example.txt”文档。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">rm</span> example.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"删除tools目录下的“example.txt”文档\"></p>\n<p>查看文档是否被删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看是否成功删除文件\"></p>\n<p><strong>mv：</strong> 移动&#x2F;重命名</p>\n<p>将上一级目录下的“example.txt”文档移动到当前目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mv</span> ../example.txt ./</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"移动文件\"></p>\n<p>查看文档是否移动成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ../</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看是否成功移动文件\"></p>\n<p>将“example.txt”文档重命名为“examp2.txt”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mv</span> example.txt examp2.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"文档重命名\"></p>\n<p>查看重命名结果。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看重命名结果\"></p>\n<p><strong>wget：</strong> 下载</p>\n<p>使用wget工具下载基因组拼接软件“AbySS”到tools目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://www.bcgsc.ca/platform/bioinfo/software/abyss/releases/2.1.5/abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载AbySS软件\"></p>\n<p><strong>tar：</strong> 压缩&#x2F;解压缩</p>\n<p>tar.gz格式的文件可用“tar zxvf”进行解压，将刚才下载的“abyss-2.1.5.tar.gz”解压缩。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar zxvf abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"解压缩AbySS软件\"></p>\n<p><strong>top：</strong> 查看系统进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ top</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过top查看系统进程\"></p>\n<p>按字母键“q”退出。Ubuntu还带有另一个更加直观的查看系统进程的工具“htop”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ htop</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过htop查看系统进程\"></p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>在软件安装的时候经常需要设置环境变量，所谓的环境变量就是告诉计算机软件的安装位置。存放环境变量的文件在用户的家目录下，为隐藏文件，可通过“ls -a”命令查看。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> -a ~/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看家目录中的所有文档和目录\"></p>\n<p>“.bashrc”和“.profile”均为环境变量配置文件，通常我们只需要编辑“.bashrc”。</p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><h3 id=\"源码编译安装\"><a href=\"#源码编译安装\" class=\"headerlink\" title=\"源码编译安装\"></a>源码编译安装</h3><p>源码安装适合于所有的Linux发行版以及macOS。以刚下载的“AbySS”基因组拼接软件为例演示源码编译安装，一共分三步：配置（.&#x2F;configure）、编译（make）和安装（sudo make install）。首先进入“AbySS”软件目录下，并查看目录中的文件，找到配置文件“configure”，根据“README.md”中的指示对软件进行配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> abyss-2.1.5/</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入AbySS目录并查看其所含内容\"></p>\n<p>“.&#x2F;configure”表示运行configure进行安装前配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./configure</span><br></pre></td></tr></table></figure>\n\n<p>进行编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br></pre></td></tr></table></figure>\n\n<p>进行安装，需要“sudo”命令提供对系统目录的写入权限。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo make install</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong> 以上只演示了一般的安装方法，但是“AbySS”软件依赖其他的一些软件，需要先安装依赖包，最后安装“AbySS”，否则会安装失败。</p>\n<h2 id=\"通过包管理工具安装\"><a href=\"#通过包管理工具安装\" class=\"headerlink\" title=\"通过包管理工具安装\"></a>通过包管理工具安装</h2><p>不同的Linux发行版具有各自的软件包管理器。目前常用的Linux发行版主要是基于“RedHat”和“Debian”而制作的。<br>RedHat 系列的包管理器为“yum”，使用方法为在终端输入“sudo yum install -y 软件名称”。</p>\n<p>Debian 系列的包管理器为“apt-get”，使用方法为在终端输入“sudo apt-get install 软件名称”。</p>\n<p>示例：通过apt-get在Ubuntu中安装AbySS软件，输入命令和密码后，根据提示输入“Y”并按回车键进行自动安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install abyss</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过apt-get安装AbySS\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过apt-get安装AbySS\"></p>\n<h2 id=\"添加环境变量\"><a href=\"#添加环境变量\" class=\"headerlink\" title=\"添加环境变量\"></a>添加环境变量</h2><p>以原核生物基因预测软件“Prodigal”为例演示。首先在Github上找到prodigal的源码，点击“Clone or download”，并按照图示点击链接右侧的图标以复制git地址。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"复制prodigal链接\"></p>\n<p>在终端中进入tools目录，并输入克隆命令将项目克隆到本地计算机。命令公式为“git clone link”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/hyattpd/Prodigal.git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"克隆prodigal\"></p>\n<p>克隆完成后进入“Prodigal”目录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> Prodigal</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入Prodigal目录\"></p>\n<p>编译软件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"编译prodigal\"></p>\n<p>报错信息提示找不到gcc命令，因此需要首先安装gcc，输入命令后根据提示输入密码，直至安装完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install gcc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"安装gcc\"></p>\n<p>重新编译prodigal</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal编译结果\"></p>\n<p>编译完成后得到了可执行程序，但是系统无法找到prodigal的路径，因此需要我们将其所在的路径加入到环境变量中。通过vim打开环境变量配置文件“.bashrc”，进入编辑模式。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"打开环境变量文件\"></p>\n<p>在文档末尾添加配置语句 <strong>“export PATH&#x3D;$PATH:$HOME&#x2F;tools&#x2F;Prodigal”</strong> 。$HOME代表家目录，“$HOME&#x2F;tools&#x2F;Prodigal”代表prodigal可执行程序所在的目录。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在环境变量中添加prodigal路径\"></p>\n<p>编辑完成后保存并退出。然后执行“source ~&#x2F;.bashrc”命令刷新，通知系统“.bashrc”文档已经更改。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"刷新环境变量\"></p>\n<p>测试配置是否成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prodigal -h</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal帮助信息\"></p>\n<p>若要将其他软件加入到环境变量，只需在后面加入其他软件所在路径即可，各软件的路径间以英文“:“分割，不得有空格。下图为将多个软件加入到环境变量的示例。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"添加多个软件路径\"></p>\n<h2 id=\"创建软链接\"><a href=\"#创建软链接\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h2><p>软链接（Soft Link）相当于Windows系统中的快捷方式，可以将可执行程序的软链接存放至系统默认的环境变量之中，如“&#x2F;usr&#x2F;bin&#x2F;”或“&#x2F;usr&#x2F;local&#x2F;bin”之中。仍旧以刚编译好的prodigal软件为例，创建软链接的公式为 <strong>“sudo ln -s &#x2F;home&#x2F;bio&#x2F;tools&#x2F;Prodigal&#x2F;prodigal &#x2F;usr&#x2F;local&#x2F;bin&#x2F;prodigal”</strong> ，根据提示输入密码完成创建。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo <span class=\"built_in\">ln</span> -s /home/bio/tools/Prodigal/prodigal /usr/local/bin/prodigal</span><br></pre></td></tr></table></figure>\n\n<p>通过“whereis”命令查看软链接是否创建成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ whereis prodigal</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal安装路径\"></p>\n<p><strong>注意：</strong> 创建软链接时要输入绝对路径，否则会报错“Too many levels of symbolic links”。</p>\n<h2 id=\"通过Anaconda包管理器进行安装\"><a href=\"#通过Anaconda包管理器进行安装\" class=\"headerlink\" title=\"通过Anaconda包管理器进行安装\"></a>通过Anaconda包管理器进行安装</h2><p><a href=\"https://www.anaconda.com/\">Anaconda</a>是一款比较易用的跨平台软件包管理器，<a href=\"http://bioconda.github.io/\">Bioconda</a>是conda的一个通道，专门管理生物信息学软件。通过conda安装软件时可以一键安装所有的依赖包，大大节约了时间并降低了安装难度。Bioconda目前有超过600个贡献者和500个成员，大部分生物信息学软件都被包含其中。用户可以到其官网搜索需要的软件是否被囊括其中。</p>\n<p><strong>（1）安装conda</strong></p>\n<p>此处，我们安装Miniconda，进入<a href=\"https://docs.conda.io/en/latest/miniconda.html\">官网</a>，选择适应自身系统及python版本的安装文件。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看Miniconda安装包\"></p>\n<p>查看系统python版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -v</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看python版本\"></p>\n<p>可以看出该系统已经安装了python3，因此下载Linux Python 3.7 64-bit (bash installer)。右键单击相应安装包获取链接，使用wget下载至tools目录下。建议用户安装Python 3，因为Python 软件基金会将于2020年元旦停止对Python 2的维护（<a href=\"https://pythonclock.org/%EF%BC%89%E3%80%82\">https://pythonclock.org/）。</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载Miniconda\"></p>\n<p>开始安装Miniconda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bash Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>根据提示按“Enter”键查看license，并输入“yes” 按“Enter”继续，按“Enter”确认安装位置，miniconda被安装到家目录下的miniconda3目录中。最后输入“yes”，按“Enter”进行初始化。最后，通过“source ~&#x2F;.bashrc”命令刷新。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"初始化Miniconda\"></p>\n<p><strong>（2）设置bioconda channel</strong></p>\n<p>在终端中输入以下三条命令添加channels：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda config --add channels defaults</span><br><span class=\"line\">$ conda config --add channels bioconda</span><br><span class=\"line\">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure>\n\n<p>至此，bioconda配置完毕，可以通过conda安装生物信息学软件。下面通过conda安装mapping软件“bwa”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install bwa</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"安装bwa\"></p>\n<p>根据提示输入“y”完成安装。</p>\n<h2 id=\"MacOS相关操作\"><a href=\"#MacOS相关操作\" class=\"headerlink\" title=\"MacOS相关操作\"></a>MacOS相关操作</h2><p>MacOS与Linux系统相似，基本命令相同，但是软件安装存在一些差异。</p>\n<h3 id=\"MacOS安装生物信息学软件\"><a href=\"#MacOS安装生物信息学软件\" class=\"headerlink\" title=\"MacOS安装生物信息学软件\"></a>MacOS安装生物信息学软件</h3><h3 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h3><p>源码安装方式与Linux安装方式一致。</p>\n<h3 id=\"创建软链接-1\"><a href=\"#创建软链接-1\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h3><p>配置方法与Linux一致。</p>\n<h3 id=\"环境变量-1\"><a href=\"#环境变量-1\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>MacOS环境变量配置方法与Linux配置方法一致，但配置文件为家目录下的“.bash_profile”，即运行如下命令进行编辑。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<p>编辑完成并保存后需要运行source命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"包管理器\"><a href=\"#包管理器\" class=\"headerlink\" title=\"包管理器\"></a>包管理器</h3><p>MacOS的软件包管理器为Homebrew，可以在终端中通过以下命令安装Homebrew。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ruby -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过Homebrew安装mapping软件“bwa”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install bwa</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MacOS配置Anaconda\"><a href=\"#MacOS配置Anaconda\" class=\"headerlink\" title=\"MacOS配置Anaconda\"></a>MacOS配置Anaconda</h3><p>安装Miniconda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh</span><br><span class=\"line\">$ sh Miniconda3-latest-MacOSX-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>添加Bioconda通道</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda config --add channels defaults</span><br><span class=\"line\">$ conda config --add channels bioconda</span><br><span class=\"line\">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure>\n\n<p>安装软件bwa</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install bwa</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"现代测序技术\"><a href=\"#现代测序技术\" class=\"headerlink\" title=\"现代测序技术\"></a>现代测序技术</h1><h2 id=\"二代测序-“Next-generation”-sequencing-technology\"><a href=\"#二代测序-“Next-generation”-sequencing-technology\" class=\"headerlink\" title=\"二代测序(“Next-generation” sequencing technology)\"></a>二代测序(“Next-generation” sequencing technology)</h2><p>第二代测序技术的核心思想是边合成边测序（Sequencing by Synthesis），即通过捕捉新合成的末端的标记来确定DNA的序列。应用最广的技术平台主要为Illumina公司的产品。其优点为高通量、错误率低、成本低等。</p>\n<ul>\n<li>Illumina测序中的几个名词</li>\n<li>   <strong>Read length：</strong> 测序的DNA片段的碱基长度。</li>\n<li>   <strong>Insert size：</strong> 双端测序时接头（adapter）中间序列的长度。</li>\n<li>   <strong>Junction：</strong> insert序列中间未被测序的部分。</li>\n<li>   <strong>Flowcell：</strong> 是指Illumina测序时，测序反应发生的位置，1个flowcell含有8条lane。</li>\n<li>   <strong>Lane：</strong> 每一个flowcell上都有8条泳道，用于测序反应，可以添加试剂，洗脱等等。</li>\n<li>   <strong>Raw data：</strong> 测序完成后未去接头、引物以及去除低质量序列的数据。</li>\n<li>   <strong>Clean data：</strong> 去除Raw data中的接头序列、linker、低质量reads、长度较短的reads及核糖体RNA和ncRNA产生的reads。</li>\n<li>   <strong>数据量：</strong> read长度乘以reads数目。</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"二代测序名词示意图\"></p>\n<h2 id=\"三代测序\"><a href=\"#三代测序\" class=\"headerlink\" title=\"三代测序\"></a>三代测序</h2><p>三代测序又称为单分子测序，测序过程无需进行PCR扩增，可以产生超长的reads，因此能够跨越高GC含量区域和高度重复区域。目前常用的测序平台包括Pacific Biosciences（PacBio）和Oxford Nanopore。</p>\n<p>PacBio以SMRT Cell为载体进行测序反应，SMRT Cell是一张带有纳米孔的超薄金属片。PacBio采用边合成便测序的方式，测序反应在纳米孔中进行，一个纳米孔中固定一个DNA聚合酶和一条DNA模板。延伸反应的过程中检测dNTP荧光信号以确定碱基顺序。</p>\n<p>Oxford开发的纳米单分子测序技术属于真正的实时测序，它基于电信号来判读碱基。</p>\n<caption>Table 1. Characteristics, strengths and weaknesses of commonly used sequencing platforms (Besser et al. 2018)</caption>\n<table border=\"1\">\n<tr>\n<th>Platform\\Instrument</th>\n<th>Throughput (Gb)</th>\n<th>Read length (bp)</th>\n<th>Strength</th>\n<th>Weakness</th>\n</tr>\n<tr>\n<td><B>Sanger sequencing</B></td>\n</tr>\n<tr>\n<td>ABI 3500/3730</td>\n<td>0.0003</td>\n<td>Up to 1 kb</td>\n<td>Read accuracy and length</td>\n<td>Cost and throughput</td>\n</tr>\n<tr>\n<td><B>Illumina</B></td>\n</tr>\n<tr>\n<td>MiniSeq</td>\n<td>1.7–7.5</td>\n<td>1×75 to ×150</td>\n<td>Low initial investment</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>MiSeq</td>\n<td>0.3–15</td>\n<td>1×36 to 2×300</td>\n<td>Read length, scalability</td>\n<td>Run length</td>\n</tr>\n<tr>\n<td>NextSeq</td>\n<td>10–120</td>\n<td>1×75 to 2×150</td>\n<td>Throughput</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>HiSeq (2500)</td>\n<td>10–1000</td>\n<td>×50 to ×250</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td>NovaSeq 5000/6000</td>\n<td>2000–6000</td>\n<td>2×50 to ×150</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td><B>IonTorrent</B></td>\n</tr>\n<tr>\n<td>PGM</td>\n<td>0.08–2</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Throughput, homopolymers</td>\n</tr>\n<tr>\n<td>S5</td>\n<td>0.6–15</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td>Proton</td>\n<td>10–15</td>\n<td>Up to 200</td>\n<td>Speed, throughput</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td><B>Pacific BioSciences</B></td>\n</tr>\n<tr>\n<td>PacBio RSII</td>\n<td>0.5–1</td>\n<td>Up to 60 kb</td>\n<td>ead length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate and initial</td>\n</tr>\n<tr>\n<td>Sequel</td>\n<td>5–10</td>\n<td>Up to 60 kb</td>\n<td>Read length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate</td>\n</tr>\n<tr>\n<td><B>Oxford Nanopore</B></td>\n</tr>\n<tr>\n<td>MInION</td>\n<td>0.1–1</td>\n<td>Up to 100 kb</td>\n<td>Read length, portability</td>\n<td>High error rate, run length</td>\n</tr>\n</table>\n\n<h2 id=\"常见序列格式\"><a href=\"#常见序列格式\" class=\"headerlink\" title=\"常见序列格式\"></a>常见序列格式</h2><h3 id=\"Fastq\"><a href=\"#Fastq\" class=\"headerlink\" title=\"Fastq\"></a>Fastq</h3><p>我们得到的下机序列一般为fastq格式，每一条read包含4行，第一行为测序仪器信息以及测序信息，第二行为碱基序列，第三行一般无信息，第四行为对应第二行中每个碱基的测序质量信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"fastq文件内容\"></p>\n<caption>Table 2. Descriptions of the first line of the fastq file</caption>\n<table border=\"1\">\n<tr>\n<th>Strings</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>@ST-E00310</td>\n<td>The unique instrument name</td>\n</tr>\n<tr>\n<td>147</td>\n<td>The run id</td>\n</tr>\n<tr>\n<td>HVT25CCXX</td>\n<td>The flowcell id</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Flowcell lane</td>\n</tr>\n<tr>\n<td>1011</td>\n<td>The number within the flowcell lane</td>\n</tr>\n<tr>\n<td>13382</td>\n<td>‘x’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1819</td>\n<td>‘y’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1</td>\n<td>The number of a pair, 1 or 2 (paired-end or mate-pair reads only)</td>\n</tr>\n<tr>\n<td>N</td>\n<td>Y if the read fails filter (read is bad), N otherwise</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0 when none of the control bits are on, otherwise it is an even number</td>\n</tr>\n<tr>\n<td>TGAAGACA</td>\n<td>Index sequence</td>\n</tr>\n</table>\n\n\n<h3 id=\"Fasta\"><a href=\"#Fasta\" class=\"headerlink\" title=\"Fasta\"></a>Fasta</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.fasta.html?highlight=fasta#module-skbio.io.format.fasta\">FASTA</a>格式为文本文档，内含核苷酸或氨基酸序列以及其IDs。每条序列包含两部分，第一部分为ID及注释信息，以 <strong>“&gt;”</strong> 开头，at the start, 第二部分为核苷酸序列或氨基酸序列。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"fasta文件内容\"></p>\n<h3 id=\"Genbank\"><a href=\"#Genbank\" class=\"headerlink\" title=\"Genbank\"></a>Genbank</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.genbank.html\">GenBank</a>格式包含了基因组序列和注释信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Genbank文件内容\"></p>\n<h3 id=\"GFF3\"><a href=\"#GFF3\" class=\"headerlink\" title=\"GFF3\"></a>GFF3</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.gff3.html?highlight=gff#module-skbio.io.format.gff3\">GFF3</a> (Generic Feature Format version 3) 格式描述了序列的特征，每一行含有9列数据，列与列之间以制表符分割。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"GFF3文件内容\"></p>\n<h2 id=\"基因组拼接基本概念\"><a href=\"#基因组拼接基本概念\" class=\"headerlink\" title=\"基因组拼接基本概念\"></a>基因组拼接基本概念</h2><h3 id=\"测序深度\"><a href=\"#测序深度\" class=\"headerlink\" title=\"测序深度\"></a>测序深度</h3><p>测序深度（Sequencing depth）指测序得到的总碱基数（read长度x reads数目）与待测基因组大小的比值。假设一个基因组大小为2M，测序深度为10X，那么获得的总数据量为20M。</p>\n<h3 id=\"测序覆盖度\"><a href=\"#测序覆盖度\" class=\"headerlink\" title=\"测序覆盖度\"></a>测序覆盖度</h3><p>指测序获得的序列占整个基因组的比例。由于基因组中的高GC、重复序列等复杂区域的存在，测序获得的序列经常无法覆盖基因组上所有的区域。例如覆盖度是96%，表明还有4%的序列区域未测到。</p>\n<h3 id=\"Read、Contig、Scaffold\"><a href=\"#Read、Contig、Scaffold\" class=\"headerlink\" title=\"Read、Contig、Scaffold\"></a>Read、Contig、Scaffold</h3><p>测序得到的序列被称作reads，在一个read中连续的N个碱基所组成的序列称作k-mer，把k-mer集合拼接起来形成的长DNA序列称为contig。通过pair ends信息将contigs按顺序进行排列得到scaffold。</p>\n<h3 id=\"N50\"><a href=\"#N50\" class=\"headerlink\" title=\"N50\"></a>N50</h3><p>将contigs或scaffolds根据长度从大到小排列并累加，当其累计长度达到全部组装序列总长度的50%时，加上去的最后一个contig或scaffold的大小即为N50的大小，N50是评价基因组拼接质量的重要参数。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>Besser J, Carleton HA, Gerner-Smidt P, Lindsey RL, Trees E. Next-generation sequencing technologies and their application to the study and control of bacterial infections. <em>Clinical Microbiology and Infection</em>, 2018, 24: 335-341</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"Linux中使用tar将大文件压缩为多个小的压缩包","slug":"Linux中使用tar将大文件压缩为多个小的压缩包","date":"2021-11-26T14:35:35.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Linux中使用tar将大文件压缩为多个小的压缩包.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>在GitHub上传文件时，单个文件不允许超过100m，超过的话需要使用Git Large File Storage，操作起来稍有些复杂，而且我记得也有限制。在这里我们可以将大文件压缩并切片，使之被分割为多个小文件，再上传GitHub，下载之后再合并即可。</p>\n<ul>\n<li><p>压缩</p>\n<p>假设有个大文件<code>CAZy.faa</code>，原始大小为725m，压缩后为135m，因此我们可以将其压缩为2~3个文件 即可避免100m的限制。建议上传至GitHub的单个文件大小不要超过50m，因此我们以50m为阈值对文件进行切割（参数-b）。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar czf - CAZy.faa | <span class=\"built_in\">split</span> -b 50m - CAZy.faa.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>运行命令后，得到了3个文件：CAZy.faa.tar.gzaa，CAZy.faa.tar.gzab，CAZy.faa.tar.gzac。</p>\n</li>\n<li><p>解压</p>\n<p>通过如下命令解压后可以得到完整的<code>CAZy.faa</code>文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> CAZy.faa.tar.gz* | tar -xzv</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Windows下解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 先合并，再用压缩软件解压</span></span><br><span class=\"line\"><span class=\"comment\">## 按“win+r”键，在弹出的输入框中输入“cmd”进入windows下的命令提示符界面。切换路径，如进入F盘，直接输入“F:”，再进入F盘的xin文件夹输入“cd xin”，输入以下命令进行合并（注意，用的是cmd而不是powershell）：</span></span><br><span class=\"line\">copy /b CAZy.faa.tar.gza* CAZy.faa.tar.gz</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://my.oschina.net/yysue/blog/1815340\">Linux下将一个文件压缩分包成多个小文件</a></li>\n</ul>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"},{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"Linux骚操作","slug":"Linux骚操作","date":"2021-01-15T07:37:43.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Linux骚操作.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill1.png","content":"<p>记录一些平时遇到的Linux问题及解决方法！</p>\n<span id=\"more\"></span>\n\n<h1 id=\"骚操作1：查杀僵尸进程\"><a href=\"#骚操作1：查杀僵尸进程\" class=\"headerlink\" title=\"骚操作1：查杀僵尸进程\"></a>骚操作1：查杀僵尸进程</h1><h2 id=\"通过top命令发现了僵尸进程\"><a href=\"#通过top命令发现了僵尸进程\" class=\"headerlink\" title=\"通过top命令发现了僵尸进程\"></a>通过top命令发现了僵尸进程</h2><p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"发现僵尸进程\"></p>\n<p>这里的aragorn和prodigal为僵尸进程。</p>\n<h2 id=\"寻找僵尸进程的父进程\"><a href=\"#寻找僵尸进程的父进程\" class=\"headerlink\" title=\"寻找僵尸进程的父进程\"></a>寻找僵尸进程的父进程</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -A -ostat,ppid,pid,cmd | grep -e <span class=\"string\">&#x27;^[Zz]&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"寻找父进程ppid\"></p>\n<p>aragorn和prodigal的父进程的ppid为133619。</p>\n<h2 id=\"杀死父进程\"><a href=\"#杀死父进程\" class=\"headerlink\" title=\"杀死父进程\"></a>杀死父进程</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -9 133619</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"僵尸进程已被杀死\"></p>\n<p>之所以选择杀死父进程是因为僵尸进程本身很难被杀掉！</p>\n<h1 id=\"骚操作2：使用sudo或nohup运行bash报错\"><a href=\"#骚操作2：使用sudo或nohup运行bash报错\" class=\"headerlink\" title=\"骚操作2：使用sudo或nohup运行bash报错\"></a>骚操作2：使用sudo或nohup运行bash报错</h1><h2 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h2><p>在终端里使用sudo或nohup运行bash的时候经常报错：-bash: syntax error near unexpected token ‘do’。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>将要运行的命令加到如下语句中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#用超级用户运行时</span></span><br><span class=\"line\">sudo bash -c <span class=\"string\">&#x27;your commands&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#服务器投后台运行</span></span><br><span class=\"line\"><span class=\"built_in\">nohup</span> bash -c <span class=\"string\">&#x27;your commands&#x27;</span> &amp;</span><br></pre></td></tr></table></figure>\n<h1 id=\"骚操作3：CentOS升级GCC\"><a href=\"#骚操作3：CentOS升级GCC\" class=\"headerlink\" title=\"骚操作3：CentOS升级GCC\"></a>骚操作3：CentOS升级GCC</h1><h2 id=\"安装SCL（第三方软件选集）\"><a href=\"#安装SCL（第三方软件选集）\" class=\"headerlink\" title=\"安装SCL（第三方软件选集）\"></a>安装SCL（第三方软件选集）</h2><p>使用下面命令安装SCL<br>SCL可以在不覆盖原有软件包的情况下与其共存，缺点就是仅支持64位<br>SCL仅支持安装devtoolset-4（gcc 5.2）（不含）之后的gcc版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y centos-release-scl</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装gcc\"><a href=\"#安装gcc\" class=\"headerlink\" title=\"安装gcc\"></a>安装gcc</h2><p>使用以下命令安装gcc，其中的9表示大版本号，默认安装大版本下的最新稳定版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"将gcc加入环境变量\"><a href=\"#将gcc加入环境变量\" class=\"headerlink\" title=\"将gcc加入环境变量\"></a>将gcc加入环境变量</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;source /opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt; /etc/profile</span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"骚操作4：CentOS-7防火墙\"><a href=\"#骚操作4：CentOS-7防火墙\" class=\"headerlink\" title=\"骚操作4：CentOS 7防火墙\"></a>骚操作4：CentOS 7防火墙</h1><h2 id=\"启动防火墙\"><a href=\"#启动防火墙\" class=\"headerlink\" title=\"启动防火墙\"></a>启动防火墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">启动： systemctl start firewalld</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"开启端口\"><a href=\"#开启端口\" class=\"headerlink\" title=\"开启端口\"></a>开启端口</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --add-port=80/tcp --permanent </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重新载入\"><a href=\"#重新载入\" class=\"headerlink\" title=\"重新载入\"></a>重新载入</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看防火墙状态\"><a href=\"#查看防火墙状态\" class=\"headerlink\" title=\"查看防火墙状态\"></a>查看防火墙状态</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --state</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看当前开了哪些端口\"><a href=\"#查看当前开了哪些端口\" class=\"headerlink\" title=\"查看当前开了哪些端口\"></a>查看当前开了哪些端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --list-services</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看所有打开的端口\"><a href=\"#查看所有打开的端口\" class=\"headerlink\" title=\"查看所有打开的端口\"></a>查看所有打开的端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"骚操作5：Linux基本指令丢失修复办法\"><a href=\"#骚操作5：Linux基本指令丢失修复办法\" class=\"headerlink\" title=\"骚操作5：Linux基本指令丢失修复办法\"></a>骚操作5：Linux基本指令丢失修复办法</h1><p>如输入ls、cd、cat等基本指令提示找不到命令，可以通过以下命令修复：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"Perl捕获外部命令执行异常并继续运行后续代码","slug":"Perl捕获外部命令执行异常并继续运行后续代码","date":"2019-04-19T02:34:49.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Perl捕获外部命令执行异常并继续运行后续代码.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>在编写perl脚本时经常会调用外部命令，由于种种原因，会遇到外部命令执行异常，而导致整个脚本终止运行。这对于大的项目来说很不经济，因此，可以想办法越过这个异常并继续执行后续脚本。</p>\n<span id=\"more\"></span>\n\n<p>Examples：</p>\n</br>\n假设有一个外部命令“command”需要执行，将该命令存到一个数组当中：\n\n</br>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my @arr = (<span class=\"string\">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n</br>\n将外部命令的返回值赋给一个变量：\n\n</br>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my <span class=\"variable\">$return</span> = sysstem(@arr);</span><br></pre></td></tr></table></figure>\n\n</br>\n判断返回值是否为“0”，0代表运行正常，任何非0的值均表示有运行异常。如果返回值不为0，则记录错误，然后继续运行后续代码：\n\n</br>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!(<span class=\"variable\">$return</span> == 0))&#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span> <span class=\"string\">&quot;There are some errors when running the command!\\n&quot;</span>;</span><br><span class=\"line\">    command2;<span class=\"comment\">#继续运行其他命令</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</br>\n\n<p><strong>注：</strong>本方案仅在Linux系统下测试，不晓得Windows和Mac的返回值与Linux是否一致，Linux中的“core dump”就可以如此来捕获。</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"Perl获取外部命令执行结果的输出","slug":"Perl获取外部命令执行结果的输出","date":"2019-04-19T07:54:38.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Perl获取外部命令执行结果的输出.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>有时候perl脚本需要与Linux外部命令进行交互，本文讲解如何将外部命令的执行结果的输出（此处指的不是运行结果的返回值，而是标准输出上的内容之类）赋给perl变量。</p>\n<span id=\"more\"></span>\n<p>首先需要了解perl调用shell命令的三种方式：</p>\n</br>\n**1. system**\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system(<span class=\"string\">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n</br>\n通过system运行得到的结果是一个返回值，其实是一串数字，若外部命令运行成功，则返回值为“0”，若运行失败，则返回非0的值。\n\n</br>\n**2. 反引号** （ESC下面的那个键）\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">`<span class=\"built_in\">command</span>`;</span><br></pre></td></tr></table></figure>\n\n</br>\n通过反引号运行，会返回shell运行结果的输出，下面的脚本通过“which”查询“COG_2014.phr”的绝对路径，并将其赋值给`$path`。然后通过正则表达式获取“COG_2014.phr”所在的目录的路径，并将其赋值给变量`$cogdb_dir`。\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my <span class=\"variable\">$cogdb_dir</span>;</span><br><span class=\"line\">my <span class=\"variable\">$path</span> = `<span class=\"built_in\">which</span> COG_2014.phr`;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$path</span>=~/(.+)COG_2014.*/) &#123;</span><br><span class=\"line\">\t<span class=\"variable\">$cogdb_dir</span> = <span class=\"variable\">$1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"variable\">$cogdb_dir</span>;</span><br></pre></td></tr></table></figure>\n\n</br>\n**3. exec**\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">exec</span>(<span class=\"string\">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n</br>\nexec与system相似，但是执行完exec命令之后，perl会终止运行，不再执行后续的代码。\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"perl","path":"api/tags/perl.json"},{"name":"编程","path":"api/tags/编程.json"}]},{"title":"R语言安装依赖包错误集锦","slug":"R语言安装依赖包错误集锦","date":"2021-11-02T04:56:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/R语言安装依赖包错误集锦.json","excerpt":null,"keywords":null,"cover":null,"content":"<h1 id=\"devtools安装错误\"><a href=\"#devtools安装错误\" class=\"headerlink\" title=\"devtools安装错误\"></a>devtools安装错误</h1><h2 id=\"XML包-安装之-ERROR-configuration-failed-for-package-‘XML’\"><a href=\"#XML包-安装之-ERROR-configuration-failed-for-package-‘XML’\" class=\"headerlink\" title=\"XML包 安装之 ERROR: configuration failed for package ‘XML’\"></a>XML包 安装之 ERROR: configuration failed for package ‘XML’</h2><ul>\n<li><p>CentOS解决方案</p>\n<p>在Linux终端中运行如下命令即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y libxml2-devel</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"qiime2R安装错误\"><a href=\"#qiime2R安装错误\" class=\"headerlink\" title=\"qiime2R安装错误\"></a>qiime2R安装错误</h1><h2 id=\"rjcommon-h-11-21-fatal-error-jpeglib-h-No-such-file-or-directory\"><a href=\"#rjcommon-h-11-21-fatal-error-jpeglib-h-No-such-file-or-directory\" class=\"headerlink\" title=\"rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory\"></a>rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory</h2><p>该错误是安装依赖包“jpeg”时发生的。</p>\n<ul>\n<li><p>CentOS解决方案</p>\n<p>在Linux终端中运行如下命令即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install sudo yum install -y libjpeg-turbo-devel.x86_64</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"WGCNA安装错误\"><a href=\"#WGCNA安装错误\" class=\"headerlink\" title=\"WGCNA安装错误\"></a>WGCNA安装错误</h1><p>Warning in install.packages :<br>  没有’‘impute’, ‘preprocessCore’, ‘GO.db’, ‘AnnotationDbi’’这种相依关系</p>\n<ul>\n<li>解决方案：在R环境下通过<code>BiocManager</code>安装<code>GO.db</code>。<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>requireNamespace<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">,</span> quietly <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">BiocManager<span class=\"operator\">::</span>install<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;GO.db&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;impute&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;preprocessCore&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"Ubuntu open-mpi运行错误","slug":"Ubuntu-open-mpi运行错误","date":"2019-03-30T07:07:30.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Ubuntu-open-mpi运行错误.json","excerpt":null,"keywords":null,"cover":null,"content":"<span id=\"more\"></span>\n\n<p>我在win10 Linux子系统下使用mpirun多线程运行ABySS基因组拼接软件的时候，出现以下错误提示：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Linux kernel CMA support was requested via the btl_vader_single_copy_mechanism MCA variable, but CMA support is not available due to restrictive ptrace settings.</span><br><span class=\"line\"></span><br><span class=\"line\">[liaochenlanruo:49950] 4 more processes have sent <span class=\"built_in\">help</span> message help-mpi-btl-openib-cpc-base.txt / ibv_create_qp failed</span><br><span class=\"line\"></span><br><span class=\"line\">[liaochenlanruo:49950] Set MCA parameter <span class=\"string\">&quot;orte_base_help_aggregate&quot;</span> to 0 to see all <span class=\"built_in\">help</span> / error messages </span><br></pre></td></tr></table></figure>\n</br>\n\n<p>结果就是无法运行多线程，跑了一夜的程序没有任何动静，似乎是卡死了。</p>\n</br>\nGoogle到的解决方案，root用户下，终端运行如下命令：\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#echo 0 &gt; /proc/sys/kernel/yama/ptrace_scope</span></span><br></pre></td></tr></table></figure>\n\n</br>\n**提示：\"ptrace_scope\"文件中原来的值为“1”，改成“0”就可以了。**\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"Wget 技巧","slug":"Wget-技巧","date":"2019-04-14T12:17:46.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Wget-技巧.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文例举一些Linux系统下的下载工具“wget”的高级用法。</p>\n<span id=\"more\"></span>\n<h3 id=\"1-下载目录下所有文件：\"><a href=\"#1-下载目录下所有文件：\" class=\"headerlink\" title=\"1.下载目录下所有文件：\"></a>1.下载目录下所有文件：</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -c -r -nH -np -nd -R index.html -P ./data ftp://ftp.ncbi.nih.gov/pub/COG/COG2014/data/</span><br></pre></td></tr></table></figure>\n\n<p></br>-c：断点续传</p>\n<p>-r：遍历子目录</p>\n<p>-nH：不将文件保存在FTP主机名目录下</p>\n<p>-np：递归下载时不搜索上层目录</p>\n<p>-nd：递归下载时不创建一层一层的目录，把所有的文件下载到当前目录</p>\n<p>-R index.html：不生成 index.html文件</p>\n<p>-P .&#x2F;data：将数据下载到当前目录下的data目录下</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"下载","path":"api/tags/下载.json"}]},{"title":"WSL安装Docker避坑指北","slug":"WSL安装Docker避坑指北","date":"2022-03-10T02:43:42.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/WSL安装Docker避坑指北.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"升级WSL\"><a href=\"#升级WSL\" class=\"headerlink\" title=\"升级WSL\"></a>升级WSL</h1><ul>\n<li><p>查看已安装的WSL版本(Windows PowerShell中运行)</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe -l -v</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>  显示如下：</p>\n  <figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  NAME                   STATE           VERSION</span><br><span class=\"line\">* Ubuntu-20.04           Running         1</span><br><span class=\"line\">  docker-desktop-data    Stopped         2</span><br></pre></td></tr></table></figure>\n<p>  看到安装的为WSL1，据说WSL1不支持Docker，所以换成WSL2，至于WSL1 和WSL2的异同可参考<a href=\"https://docs.microsoft.com/zh-cn/windows/wsl/compare-versions\">比较 WSL 1 和 WSL 2</a>。</p>\n</li>\n<li><p>安装WSL2 (Windows PowerShell中运行)</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe --set-version ubuntu-20.04 2</span><br></pre></td></tr></table></figure>\n<p>  显示如下：</p>\n  <figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">正在进行转换，这可能需要几分钟时间...</span><br><span class=\"line\">有关与 WSL 2 的主要区别的信息，请访问 https://aka.ms/wsl2</span><br><span class=\"line\">转换完成。</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h1><p>在WSL中运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove docker docker-engine docker.io</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install apt-transport-https ca-certificates curl software-properties-common</span><br><span class=\"line\">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\">sudo apt-key fingerprint 0EBFCD88</span><br><span class=\"line\">sudo add-apt-repository <span class=\"string\">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class=\"subst\">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install docker-ce</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Root用户启动Docker\"><a href=\"#Root用户启动Docker\" class=\"headerlink\" title=\"Root用户启动Docker\"></a>Root用户启动Docker</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\"><span class=\"built_in\">export</span> DOCKER_HOST=tcp://localhost:2375</span><br><span class=\"line\">service docker start</span><br></pre></td></tr></table></figure>\n<p>显示如下：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* Starting Docker: docker</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"测试-还是在root用户\"><a href=\"#测试-还是在root用户\" class=\"headerlink\" title=\"测试(还是在root用户)\"></a>测试(还是在root用户)</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"报错\"><a href=\"#报错\" class=\"headerlink\" title=\"报错\"></a>报错</h1><p>以下是报错信息：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client: Docker Engine - Community</span><br><span class=\"line\"> Version:           20.10.12</span><br><span class=\"line\"> API version:       1.41</span><br><span class=\"line\"> Go version:        go1.16.12</span><br><span class=\"line\"> Git commit:        e91ed57</span><br><span class=\"line\"> Built:             Mon Dec 13 11:45:33 2021</span><br><span class=\"line\"> OS/Arch:           linux/amd64</span><br><span class=\"line\"> Context:           default</span><br><span class=\"line\"> Experimental:      true</span><br><span class=\"line\">Cannot connect to the Docker daemon at tcp://localhost:2375. Is the docker daemon running?</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"修复\"><a href=\"#修复\" class=\"headerlink\" title=\"修复\"></a>修复</h1><p><strong>回到普通用户运行</strong></p>\n<ul>\n<li><p>编辑环境变量</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在最下面添加一行：</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DOCKER_HOST=<span class=\"string\">&#x27;unix:///var/run/docker.sock&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>再次测试</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker version</span><br></pre></td></tr></table></figure>\n<p>  显示如下表明成功：</p>\n  <figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Client: Docker Engine - Community</span><br><span class=\"line\"> Version:           20.10.12</span><br><span class=\"line\"> API version:       1.41</span><br><span class=\"line\"> Go version:        go1.16.12</span><br><span class=\"line\"> Git commit:        e91ed57</span><br><span class=\"line\"> Built:             Mon Dec 13 11:45:33 2021</span><br><span class=\"line\"> OS/Arch:           linux/amd64</span><br><span class=\"line\"> Context:           default</span><br><span class=\"line\"> Experimental:      true</span><br><span class=\"line\"></span><br><span class=\"line\">Server: Docker Engine - Community</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:          20.10.12</span><br><span class=\"line\">  API version:      1.41 (minimum version 1.12)</span><br><span class=\"line\">  Go version:       go1.16.12</span><br><span class=\"line\">  Git commit:       459d0df</span><br><span class=\"line\">  Built:            Mon Dec 13 11:43:42 2021</span><br><span class=\"line\">  OS/Arch:          linux/amd64</span><br><span class=\"line\">  Experimental:     false</span><br><span class=\"line\"> containerd:</span><br><span class=\"line\">  Version:          1.4.13</span><br><span class=\"line\">  GitCommit:        9cc61520f4cd876b86e77edfeb88fbcd536d1f9d</span><br><span class=\"line\"> runc:</span><br><span class=\"line\">  Version:          1.0.3</span><br><span class=\"line\">  GitCommit:        v1.0.3-0-gf46b6ba</span><br><span class=\"line\"> docker-init:</span><br><span class=\"line\">  Version:          0.19.0</span><br><span class=\"line\">  GitCommit:        de40ad0</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://blog.csdn.net/qq_44701736/article/details/119411485\">WSL安装docker</a></li>\n<li><a href=\"https://www.jianshu.com/p/7c0084fd9003\">Cannot connect to the Docker daemon at tcp:&#x2F;&#x2F;localhost:2375. Is the docker daemon running?</a></li>\n</ul>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"系统","path":"api/tags/系统.json"},{"name":"虚拟机","path":"api/tags/虚拟机.json"}]},{"title":"命令模式下配置Linux网络","slug":"命令模式下配置Linux网络","date":"2021-10-30T00:41:29.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/命令模式下配置Linux网络.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>配置网卡接口eth0:</p>\n<p>进入配置文件所在目录，并在超级用户权限下编辑网络配置对应的文件（不同的机器文件名可能不一样）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/sysconfig/network-scripts</span><br><span class=\"line\"></span><br><span class=\"line\">vim ifcfg-enp4s0f0</span><br></pre></td></tr></table></figure>\n\n<p>内容如下：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TYPE=Ethernet</span><br><span class=\"line\">PROXY<span class=\"built_in\">_</span>METHOD=none</span><br><span class=\"line\">BROWSER<span class=\"built_in\">_</span>ONLY=no</span><br><span class=\"line\">BOOTPROTO=none</span><br><span class=\"line\">DEFROUTE=yes</span><br><span class=\"line\">IPV4<span class=\"built_in\">_</span>FAILURE<span class=\"built_in\">_</span>FATAL=no</span><br><span class=\"line\">IPV6INIT=yes</span><br><span class=\"line\">IPV6<span class=\"built_in\">_</span>AUTOCONF=yes</span><br><span class=\"line\">IPV6<span class=\"built_in\">_</span>DEFROUTE=yes</span><br><span class=\"line\">IPV6<span class=\"built_in\">_</span>FAILURE<span class=\"built_in\">_</span>FATAL=no</span><br><span class=\"line\">IPV6<span class=\"built_in\">_</span>ADDR<span class=\"built_in\">_</span>GEN<span class=\"built_in\">_</span>MODE=stable-privacy</span><br><span class=\"line\">NAME=enp4s0f0</span><br><span class=\"line\">UUID=10a90825-f850-4717-a2c3-0d7e936bd33X</span><br><span class=\"line\">DEVICE=enp4s0f0</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=172.16.98.15X</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br><span class=\"line\">GATEWAY=172.16.98.X</span><br><span class=\"line\">DNS1=10.8.8.X</span><br><span class=\"line\">DNS2=10.8.4.X</span><br><span class=\"line\">MACADDR=&quot;08:3A:88:54:C7:7X&quot;</span><br></pre></td></tr></table></figure>\n\n<p><strong>MACADDR</strong>为MAC地址，<strong>IPADDR</strong>为IP地址，<strong>NETMASK</strong>为子网掩码，<strong>GATEWAY</strong>为网关地址，“X”为虚构的，保护隐私。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"在Linux服务器中安装网页版Rstudio","slug":"在Linux服务器中安装网页版Rstudio","date":"2021-11-02T01:37:03.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/在Linux服务器中安装网页版Rstudio.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg","content":"<p>本文演示如何在CentOS7服务器上安装Rstudio server。</p>\n<h1 id=\"安装Rstudio\"><a href=\"#安装Rstudio\" class=\"headerlink\" title=\"安装Rstudio\"></a>安装Rstudio</h1><p>访问<a href=\"https://www.rstudio.com/products/rstudio/download-server\">Rstudio官网</a>，选择对应的Linux发行版，下载Rstudio安装包。本文以最常见的CentOS7为例演示，<strong>前提是系统中已经安装了R</strong>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://download2.rstudio.org/server/centos7/x86_64/rstudio-server-rhel-2021.09.0-351-x86_64.rpm</span><br><span class=\"line\">sudo yum install rstudio-server-rhel-2021.09.0-351-x86_64.rpm</span><br></pre></td></tr></table></figure>\n<h1 id=\"开启Rstudio服务\"><a href=\"#开启Rstudio服务\" class=\"headerlink\" title=\"开启Rstudio服务\"></a>开启Rstudio服务</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> rstudio-server.service</span><br><span class=\"line\">sudo systemctl start rstudio-server.service</span><br><span class=\"line\">sudo systemctl status rstudio-server</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"开启8787端口\"><a href=\"#开启8787端口\" class=\"headerlink\" title=\"开启8787端口\"></a>开启8787端口</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo firewalld</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-port=8787/tcp</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-port=8787/udp</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"远程登录Rstudio\"><a href=\"#远程登录Rstudio\" class=\"headerlink\" title=\"远程登录Rstudio\"></a>远程登录Rstudio</h1><p>在浏览器地址栏输入<code>http://ip:8787/</code>打开网页，输入自己的用户名和密码登录即可。</p>\n<h1 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h1><h2 id=\"Rstudio服务启动失败\"><a href=\"#Rstudio服务启动失败\" class=\"headerlink\" title=\"Rstudio服务启动失败\"></a>Rstudio服务启动失败</h2><h3 id=\"症状\"><a href=\"#症状\" class=\"headerlink\" title=\"症状\"></a>症状</h3><p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server status\"></p>\n<h3 id=\"排雷\"><a href=\"#排雷\" class=\"headerlink\" title=\"排雷\"></a>排雷</h3><ul>\n<li><p>检查安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rstudio-server verify-installation</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server verify-installation\"></p>\n<p>提示“&#x2F;usr&#x2F;lib&#x2F;rstudio-server&#x2F;bin&#x2F;rsession: error while loading shared libraries: libR.so: cannot open shared object file: No such file or directory”，表明缺少libR.so库。</p>\n</li>\n<li><p>安装R</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y R.x86_64</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>再次检查安装情况</p>\n<p>提示找不到R。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server verify-installation\"></p>\n<p>可以看到这里进入了conda的base环境，它影响了程序的判断，退出conda环境后再试一下就不再报错了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure>\n\n<p><strong>注</strong>：conda环境一定要退彻底。</p>\n</li>\n<li><p>再次启动Rstudio服务，并查看状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rstudio-server start</span><br><span class=\"line\">sudo rstudio-server status</span><br></pre></td></tr></table></figure>\n\n<p>  <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"rstudio-server正常运行\"></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"生物信息学1：VMware虚拟机及Bio-linux安装与配置","slug":"生物信息学1：虚拟机及Bio-linux安装与配置","date":"2018-11-15T09:11:21.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/生物信息学1：虚拟机及Bio-linux安装与配置.json","excerpt":null,"keywords":null,"cover":"http://upload-images.jianshu.io/upload_images/11790868-2a735eb4a37c7f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","content":"<h4>前言：大家按照步骤从头看到尾，末尾有常见错误解决办法，如果有其他问题，大家先看错误提示，根据提示自行百度，很多问题都可以得到解决，实在解决不了的可以问我，谢谢！</h4>\n<span id=\"more\"></span>\n\n<p></p>\n<p></p>\n<h4>\n<b>找我远程的，先</b>下载一个teamviewer，账号密码发我QQ！</h4>\n<p></p>\n</blockquote><h4><b>一、虚拟机安装（VMware）</b></h4><p><b>（1）下载 <a href=\"http://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.1-10737736.exe\" target=\"_blank\">VMware</a></b></p><p>        32位系统请下载<a href=\"http://www.uzzf.com/soft/65978.html\" target=\"_blank\">VMware10</a></p><p><b>（2）安装 VMware：根据提示安装即可。</b></p><p><b>        许可证</b>（来自 <a href=\"https://www.nocmd.com/740.html\" target=\"_blank\">https://www.nocmd.com/740.html</a>）：</p><p>        ZC10K-8EF57-084QZ-VXYXE-ZF2XF</p><p>        UF71K-2TW5J-M88QZ-8WMNT-WKUY4</p><p>        AZ7MK-44Y1J-H819Z-WMYNC-N7ATF</p><p>        CU702-DRD1M-H89GP-JFW5E-YL8X6</p><p>        YY5EA-00XDJ-480RP-35QQV-XY8F6</p><p>        VA510-23F57-M85PY-7FN7C-MCRG0</p><p><b>（3）工作区配置</b></p><p>        依次点击菜单栏中的“Edit”——“Preferences”，打开设置窗口。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-2a735eb4a37c7f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-2a735eb4a37c7f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 1 工作区配置1</div>\n</div><p>        选择左侧的“工作区”，右侧“Browse”，选择系统镜像存放位置，注意选择剩余空间大于60G的分区。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-af6ce78c2a7b7457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-af6ce78c2a7b7457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 2 工作区配置2</div>\n</div><hr><h4><b>二、Bio-linux安装与配置</b></h4><p><b>（1）下载：</b></p><p>安装版：<a href=\"http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.iso\" target=\"_blank\">http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.iso</a></p><p>虚拟机版：<a href=\"http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.ova\" target=\"_blank\">http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.ova</a></p><blockquote><p><b>注：</b>虚拟机版不需要安装，可直接导入虚拟机，大部分用户可选择此版本。如果想装双系统，可以下载安装版。以下讲到的均以虚拟机版为例。</p></blockquote><blockquote><p><b>        首先检查ova文件的完整性，即验证MD5值，用群里的“MD5批量校验工具”。bio-linux-8-latest.ova 正确的MD5值为“4c3b5aea740f5334d9775cc31533a387”，若不对应，表明下载错误，需重新下载。</b></p></blockquote><p><b>（2）系统导入虚拟机</b></p><p>        若下载的是压缩文件，则解压缩，解压缩后进入文件夹，右击“Bio-Linux-8.0.7.ovf”，选择“VMware Player”打开。</p><p>        若下载的是.ova后缀的，则直接导入虚拟机即可，不需要解压。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-d77bd01708c5c312.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-d77bd01708c5c312.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 3 导入系统</div>\n</div><p>        选择剩余空间比较大的分区作为存放路径，然后导入。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-62d48c257aba00cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-62d48c257aba00cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 4 选择系统存放路径</div>\n</div><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-d6abdb679af2cbe0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-d6abdb679af2cbe0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 5 等待系统导入</div>\n</div><p><b>（3）虚拟机配置</b></p><p>        导入完成后会自动打开“VMware Workstation Player”，左侧选择刚导入的“Bio-Linux-8.0.7”，右侧选择“编辑虚拟机设置”。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-b12838b49940089f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-b12838b49940089f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 6 进入虚拟机设置</div>\n</div><p>        左侧“硬件”选项卡中选择“内存”，右侧可输入或者托选内存的大小。此处根据自己电脑的内存大小而设置，大部分电脑的内存为4G，此处可以设为2G。内存大的电脑可适当增加此值。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-13e86567a1c3d1a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-13e86567a1c3d1a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 7 内存设置</div>\n</div><p>        处理器内核数量亦需根据自己的电脑配置而设置。双核四线程的可以设置为2，四核八线程的可以设置为4.建议设置为2的整数倍。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6ed7759fc7c4a2fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6ed7759fc7c4a2fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 8 处理器设置</div>\n</div><p>        网络适配器按照下图所示设置，启动系统后可通过浏览器检测是否可以上网,若不能上网，可以设置为“NAT模式”。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6a517339f86d6aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6a517339f86d6aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 9 网络设置</div>\n</div><p><b>（4）启动 Bio-Linux</b></p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-d7bea03f01ddced8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-d7bea03f01ddced8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 10 播放虚拟机</div>\n</div><blockquote><p>注：启动错误，需要手动开启 “VMware Authorization Service”。</p></blockquote><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-78481c384ff49df5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-78481c384ff49df5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 11 播放错误</div>\n</div><p>        按照如下3图所示，手动开启 “VMware Authorization Service”。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-d2342fb3b84f389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-d2342fb3b84f389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 12 搜索Services</div>\n</div><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-0d5c9228a7e4bc8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-0d5c9228a7e4bc8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 13 右键选择“开启”</div>\n</div><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-57f38df1e9a13554.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-57f38df1e9a13554.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 14 依旧报错</div>\n</div><p>        如果报“6000009”错误，尝试重新安装 “VMware Workstation”（新安装的用户一般不会出现上述错误）。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6d8fe325a8ee6b61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6d8fe325a8ee6b61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 15 更新 “VMware Workstation Player”</div>\n</div><p><b>（5）全屏显示</b></p><p>        系统启动后，默认为小窗口显示，不便于操作，点击菜单栏上的“全屏”按钮，以便全屏显示。若无法全屏，则需要安装 “VMware-tools”。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-8789d5887344b994.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-8789d5887344b994.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 7 全屏</div>\n</div><p><b>（6）安装 VMware-tools</b></p><p>        如下图所示依次点击，未曾安装过VMware Tools时会显示“安装VMware Tools”。点击之后按照提示下载。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-48519484db56bd57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-48519484db56bd57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 8 启动 VMware Tools安装</div>\n</div><p>        下载后，打开文件管理，左侧的“Devices”下多出一个“VMware tools”，点击后在右侧窗口可以看到 “VMware Tools-*.tar.gz”，此压缩包便是安装文件。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-c500f096f70c4517.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-c500f096f70c4517.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 9 VMware tools安装包</div>\n</div><p>        将 “VMware Tools-*.tar.gz”压缩包拷贝至“Downloads”目录下，并解压缩。按住 “Ctrl + Alt + T”，打开终端，输入“cd Downloads/vmware-tools-distrib”进入刚刚解压的目录下（如下图，cd后有空格，路径根据实际情况而定，“/home/lhl/”是我的家目录，可以不必输入）。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-be42781ff555d6e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-be42781ff555d6e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 10 cd命令进入目录</div>\n</div><p>        终端内输入“sudo perl vmware-install.pl”命令，回车后要求输入密码，密码为“manager”。输入密码时，光标处不显示字符，尽管输入，完成后回车即可。回车后看到一句提示语“Do you still want to proceed with this installation? [ no ]”，在其后输入“yes”，继续一路回车，直到安装完毕。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-06f006a967b87716.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-06f006a967b87716.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 11 安装VMware Tools</div>\n</div><p>        安装完毕后重启一下linux系统即可全屏显示。关机时请勿直接关闭VMware，而是如下图箭头所示的位置，点击后选择“Shut Down”，避免损坏Linux系统而导致无法开机。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-e3c241a2a819389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-e3c241a2a819389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 12 关机与重启</div>\n</div><hr><h3><b>三、问题集锦</b></h3><p>1. Intel 虚拟化技术未开启（Figure 13），需要进BIOS开启“Intel Virtualization Technology”，可参考网友的解决方案<a href=\"https://jingyan.baidu.com/article/fc07f98976710e12ffe519de.html\" target=\"_blank\">https://jingyan.baidu.com/article/fc07f98976710e12ffe519de.html</a></p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-252182874ccd07de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-252182874ccd07de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 13 Intel NT 未开启错误提示</div>\n</div><p>2. 终端内某些字符（如~，#）无法输入的问题</p><p>        该问题是由于本虚拟系统的键盘配置有错误，需要我们手动改正，方法如下：</p><p>        在系统左侧点击打开终端，输入“sudo dpkg-reconfigure keyboard-configuration”，回车（不包含引号），输入密码“manager”回车，会出现图形界面。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ab22cb6d470676d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ab22cb6d470676d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 14 输入配置键盘命令</div>\n</div><p>        在弹出的图形界面中，按住向下的光标键，找到微软键盘（箭头所示），回车进入下一步。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-b4800a54fbfd2143.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-b4800a54fbfd2143.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 15 切换微软键盘</div>\n</div><p>        在接下来的界面选择美式英语（箭头所示），回车，后面的几项一路回车即可。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-f7be766e2d301c0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-f7be766e2d301c0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 16 切换美式英语</div>\n</div><p>3. 虚拟系统无法联网</p><p>        主要是因为VMware DHCP服务没有开启，我每次重启电脑之后都需要手动开启  VMware 相关服务。首先将虚拟机的联网方式设置为“NAT”，然后在windows下搜索“services”，打开服务。win10可以直接搜索，其他版本windows可以按“win+R”组合键开启搜索。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-8a7832bba7dd71f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-8a7832bba7dd71f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 17 打开services设置</div>\n</div><p>        向下拖动滚动条，找到VMware相关服务项，右键开启。启动方式可以设置为自动，但我设置了，并没什么效果，重启仍旧变为手动，win10 v1809 最近bug一波接一波，不知道是否与系统bug有关。所有服务开启后，虚拟系统应该可以上网了。我就是这么解决的，如果还是不能上网，各位去问问度娘吧，我是没辙了。</p><div class=\"image-package\">\n<img name=\"\" src=\"http://upload-images.jianshu.io/upload_images/11790868-19d53ef881a58c18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-19d53ef881a58c18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"><br><div class=\"image-caption\">Figure 18 开启VMware相关所有服务</div>\n \n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"虚拟机","path":"api/tags/虚拟机.json"}]},{"title":"生物信息学2：VirtualBox虚拟机及Bio-Linux安装","slug":"生物信息学2：VirtualBox及Bio-Linux","date":"2018-11-20T02:40:21.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/生物信息学2：VirtualBox及Bio-Linux.json","excerpt":null,"keywords":null,"cover":"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240","content":"<p>前言：<a href=\"https://www.jianshu.com/p/2f765a81e7dd\" target=\"_blank\">上一篇</a>文章讲到了利用Vmware虚拟机加载Bio-Linux，但有的小伙伴表示Vmware无法安装，也未见有效的错误提示，因此推荐第二款常用的老牌虚拟机软件——VirtualBox。</p>\n<span id=\"more\"></span>\n\n<p>1. <a href=\"https://www.virtualbox.org/\" target=\"_blank\">VirtualBox</a>下载与安装。</p><p>    该软件的安装比较简单，双击后根据提示一步步往下走即可。安装完毕后打开软件。</p><p><br></p><hr><p>2. 导入及配置Bio-Linux</p><p>（1）依次点击菜单栏的 “管理”——“导入虚拟电脑”</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 1 导入虚拟电脑1</div>\n</div><p>（2）在弹出的窗口中选择下载的 “Bio-Linux-8.0.7.ovf”进行导入</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-a6c955cec07389b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-a6c955cec07389b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 2 选择系统文件</div>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ce38f58eb9d87d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ce38f58eb9d87d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">Figure 3 准备导入虚拟电脑</div>\n</div><p>（3）虚拟电脑导入设置：此处有三项可以设置，分别是处理器的数量、内存大小和最后面的虚拟硬盘位置。前两者根据自己的电脑配置情况进行设置，硬盘位置一定要选择剩余容量大于50-60G的分区。点击“导入”等待完成即可，此时电脑可能会断网，重新连接一下即可。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-bbda5c1ad0811dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-bbda5c1ad0811dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 4 处理器及内存设置</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-140370931dbc3b86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-140370931dbc3b86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 5 虚拟硬盘位置自设</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-5b261a13f79e7291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-5b261a13f79e7291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 6 等待虚拟电脑导入完毕</div></p>\n</div><p>（4）鼠标单击导入完成的系统，菜单栏的 “设置”变成彩色可点击状态，点击进行系统设置。所有设置按如下5图（Figure 7-Figure 11）进行。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-7136bffed8701961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-7136bffed8701961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 7 粘贴板与拖放共享</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-520fee7dd398e306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-520fee7dd398e306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 8 存储控制 器输入输出</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ca76c38fb47dc821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ca76c38fb47dc821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 9 开启固态驱动器</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-75ccf98fbbf97d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-75ccf98fbbf97d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 10 显存设置（根据配置自设大小）</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-333bd34368d9b4ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-333bd34368d9b4ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 11 创建虚拟光盘</div></p>\n</div><p>（5）保存设置后，启动系统。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-f26c49cedf490ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-f26c49cedf490ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 12 启动虚拟电脑</div></p>\n</div><p>（6）进入系统后不需要更新，可以通过浏览器测试是否可以上网。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6e83ecb2661fc193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6e83ecb2661fc193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 13 系统启动完成</div></p>\n</div><p>（7）安装增强功能，参照如下4图（Figure12-Figure 15）</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ba16243bb4520ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ba16243bb4520ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 14 安装增强功能1</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-1626909ed7b36761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-1626909ed7b36761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 15 安装增强功能2</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-83e661db9b1fde93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-83e661db9b1fde93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 16 安装增强功能3（密码：manager）</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-0e3aa0b41841928b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-0e3aa0b41841928b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 17 安装增强功能4（输入yes回车）</div></p>\n</div><p>（8）提示按 “Press Return to close this window ...”的时候按一下回车键即可，重启Linux。</p><h3>问题：目前无法实现从windows到虚拟机的文件拷贝，暂时未找到解决方案，可通过共享文件夹解决。</h3><p>(9)共享文件夹设置</p><p>通过设置共享文件夹可以实现windows和虚拟机之间的同步，而不需要复制粘贴。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-8032463856bf4c85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-8032463856bf4c85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 18 共享文件夹设置1</div></p>\n</div><p>        点击右上角的 “文件夹+”图标，选择共享文件夹路径（windows上的一个文件夹），共享文件夹名称会自动分配，勾选 “自动挂载” 和 “固定分配”。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-ead5f24448be0c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-ead5f24448be0c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 19 共享文件夹设置2</div></p>\n</div><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-054fbf18099da74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-054fbf18099da74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 20 共享文件夹设置3</div></p>\n</div><p>        设置完成后重启Linux系统，打开目录，即可看到共享文件夹 “sf_softwares”。若不成功可重新安装增强功能并重启。</p><div class=\"image-package\">\n<img class=\"uploaded-img lazyload placeholder\" src=\"http://upload-images.jianshu.io/upload_images/11790868-6dfe1cdbe1153fd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" class=\"lazyload placeholder\" data-srcset=\"http://upload-images.jianshu.io/upload_images/11790868-6dfe1cdbe1153fd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" width=\"auto\" height=\"auto\"><br><div class=\"image-caption\">\n\n<p>Figure 21 共享文件夹设置4</div></p>\n</div><p>以上为基于VirtualBox 的 Bio-Linux配置，有问题的可以在下方留言，统一解答。</p>\n\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"虚拟机","path":"api/tags/虚拟机.json"}]}]}