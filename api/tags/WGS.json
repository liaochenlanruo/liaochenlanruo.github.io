{"name":"WGS","postlist":[{"title":"Linux和基因组测序技术初识","slug":"Linux和基因组测序技术初识","date":"2019-10-31T14:05:49.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Linux和基因组测序技术初识.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png","content":"<p>该文档可以帮助读者入门Linux系统，掌握常用命令和多种软件安装方式。此外还简述了全基因组测序技术，希望读者可以通过此文档初步了解生物信息学。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Linux初识\"><a href=\"#Linux初识\" class=\"headerlink\" title=\"Linux初识\"></a>Linux初识</h1><h2 id=\"目录结构与路径\"><a href=\"#目录结构与路径\" class=\"headerlink\" title=\"目录结构与路径\"></a>目录结构与路径</h2><h3 id=\"根目录\"><a href=\"#根目录\" class=\"headerlink\" title=\"根目录\"></a>根目录</h3><p>根目录（root）是系统最顶级目录，以“&#x2F;”表示，其他目录均为根目录的下级目录。</p>\n<h3 id=\"家目录\"><a href=\"#家目录\" class=\"headerlink\" title=\"家目录\"></a>家目录</h3><p>家目录（home）是用户的最顶级目录，以“~&#x2F;”表示，用户所有的目录均为家目录的下级目录。</p>\n<h3 id=\"绝对路径\"><a href=\"#绝对路径\" class=\"headerlink\" title=\"绝对路径\"></a>绝对路径</h3><p>绝对路径指的是目录或文件的绝对位置，是从根目录开始的完整路径，如“&#x2F;home&#x2F;bio&#x2F;”。可通过“pwd”命令获取当前目录的绝对路径。</p>\n<h3 id=\"相对路径\"><a href=\"#相对路径\" class=\"headerlink\" title=\"相对路径\"></a>相对路径</h3><p>相对路径不需要从根目录开始，只要指定与当前目录的相对位置即可。</p>\n<h3 id=\"当前目录\"><a href=\"#当前目录\" class=\"headerlink\" title=\"当前目录\"></a>当前目录</h3><p>当前所在的路径，以“.&#x2F;“表示。</p>\n<h3 id=\"上级目录\"><a href=\"#上级目录\" class=\"headerlink\" title=\"上级目录\"></a>上级目录</h3><p>也称为父目录，以“..&#x2F;“表示向上一级的目录，以“..&#x2F;..&#x2F;”表示向上两级的目录，以此类推。</p>\n<h2 id=\"命名法则\"><a href=\"#命名法则\" class=\"headerlink\" title=\"命名法则\"></a>命名法则</h2><ul>\n<li>文档与目录均以英文命名，可使用字母、数字和下划线；</li>\n<li>文档与目录的名称不允许存在空格；</li>\n<li>名称区分大小写。</li>\n</ul>\n<h2 id=\"终端工具\"><a href=\"#终端工具\" class=\"headerlink\" title=\"终端工具\"></a>终端工具</h2><p>终端（terminal）是运行Linux命令的工具，类似于Windows的命令行工具。Linux各发行版均自带终端。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Linux自带终端\"></p>\n<p>远程操控Linux服务器时，可以使用第三方的终端工具，如PuTTy软件。输入IP地址即可远程登录服务器运行命令。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Putty\"></p>\n<p>本地计算机与服务器之间的文件传输可以通过FTP软件实现,如FileZilla。输入服务器的IP地址、用户名、密码以及端口即可链接服务器。如果服务器采用的时FTP协议，则端口填写21，若采用的是SFTP协议，则端口设置为22。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"FileZilla\"></p>\n<h2 id=\"常用的命令\"><a href=\"#常用的命令\" class=\"headerlink\" title=\"常用的命令\"></a>常用的命令</h2><p><strong>pwd：</strong> 获取当前位置的绝对路径</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">pwd</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"获取当前位置的绝对路径\"></p>\n<p><strong>mkdir：</strong> 创建目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mkdir</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"创建tools目录\"></p>\n<p><strong>ls：</strong> 查看当前目录包含的内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录包含的内容\"></p>\n<p>查看所有的目录和文件（包含隐藏的内容）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> -a</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录包含的所有内容\"></p>\n<p>查看根目录所含内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> /</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看根目录所含内容\"></p>\n<p>查看家目录所含内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ~/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看家目录所含内容\"></p>\n<p><strong>cd：</strong> 切换路径</p>\n<p>进入“tools”目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> tools</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入“tools”目录\"></p>\n<p><strong>vim：</strong> 创建&#x2F;编辑文档</p>\n<p>以下所有操作均需在英文输入法状态下进行。首先创建一个新文档“example.txt”，并输入内容。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim example.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"创建“example.txt”文档\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"此时无法输入内容\"></p>\n<p>此时无法输入内容，需要按一下字母“i”键切换到输入模式。当左下角出现“–NSERT –” 字样时，可以输入文字。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"vim插入模式\"></p>\n<p>输入相关的内容。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"vim输入内容\"></p>\n<p>输入完毕时需要先按一下“ESC”键退出编辑模式，此时“–NSERT –” 字样消失。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"退出vim编辑模式\"></p>\n<p>按住组合键“shift + :”切换到vim操作模式，此时左下角出现一个“:”。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"shift + :\"></p>\n<p>输入“wq!”保存修改并退出。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"保存并退出vim\"></p>\n<p>查看创建的文件是否在于目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看当前目录下的文件及目录\"></p>\n<p><strong>cp：</strong> 复制目录或文件</p>\n<p>将创建的“example.txt”文档复制到上一级目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cp</span> example.txt ../</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"向上级目录复制文件\"></p>\n<p>查看上一级目录下是否存在刚刚复制的文档。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ../</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看父目录下的文件及目录\"></p>\n<p><strong>rm：</strong> 删除目录或文件</p>\n<p>删除tools目录下的“example.txt”文档。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">rm</span> example.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"删除tools目录下的“example.txt”文档\"></p>\n<p>查看文档是否被删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看是否成功删除文件\"></p>\n<p><strong>mv：</strong> 移动&#x2F;重命名</p>\n<p>将上一级目录下的“example.txt”文档移动到当前目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mv</span> ../example.txt ./</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"移动文件\"></p>\n<p>查看文档是否移动成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> ../</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看是否成功移动文件\"></p>\n<p>将“example.txt”文档重命名为“examp2.txt”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">mv</span> example.txt examp2.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"文档重命名\"></p>\n<p>查看重命名结果。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看重命名结果\"></p>\n<p><strong>wget：</strong> 下载</p>\n<p>使用wget工具下载基因组拼接软件“AbySS”到tools目录下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget http://www.bcgsc.ca/platform/bioinfo/software/abyss/releases/2.1.5/abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载AbySS软件\"></p>\n<p><strong>tar：</strong> 压缩&#x2F;解压缩</p>\n<p>tar.gz格式的文件可用“tar zxvf”进行解压，将刚才下载的“abyss-2.1.5.tar.gz”解压缩。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar zxvf abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"解压缩AbySS软件\"></p>\n<p><strong>top：</strong> 查看系统进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ top</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过top查看系统进程\"></p>\n<p>按字母键“q”退出。Ubuntu还带有另一个更加直观的查看系统进程的工具“htop”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ htop</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过htop查看系统进程\"></p>\n<h2 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h2><p>在软件安装的时候经常需要设置环境变量，所谓的环境变量就是告诉计算机软件的安装位置。存放环境变量的文件在用户的家目录下，为隐藏文件，可通过“ls -a”命令查看。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">ls</span> -a ~/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看家目录中的所有文档和目录\"></p>\n<p>“.bashrc”和“.profile”均为环境变量配置文件，通常我们只需要编辑“.bashrc”。</p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><h3 id=\"源码编译安装\"><a href=\"#源码编译安装\" class=\"headerlink\" title=\"源码编译安装\"></a>源码编译安装</h3><p>源码安装适合于所有的Linux发行版以及macOS。以刚下载的“AbySS”基因组拼接软件为例演示源码编译安装，一共分三步：配置（.&#x2F;configure）、编译（make）和安装（sudo make install）。首先进入“AbySS”软件目录下，并查看目录中的文件，找到配置文件“configure”，根据“README.md”中的指示对软件进行配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> abyss-2.1.5/</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入AbySS目录并查看其所含内容\"></p>\n<p>“.&#x2F;configure”表示运行configure进行安装前配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./configure</span><br></pre></td></tr></table></figure>\n\n<p>进行编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br></pre></td></tr></table></figure>\n\n<p>进行安装，需要“sudo”命令提供对系统目录的写入权限。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo make install</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong> 以上只演示了一般的安装方法，但是“AbySS”软件依赖其他的一些软件，需要先安装依赖包，最后安装“AbySS”，否则会安装失败。</p>\n<h2 id=\"通过包管理工具安装\"><a href=\"#通过包管理工具安装\" class=\"headerlink\" title=\"通过包管理工具安装\"></a>通过包管理工具安装</h2><p>不同的Linux发行版具有各自的软件包管理器。目前常用的Linux发行版主要是基于“RedHat”和“Debian”而制作的。<br>RedHat 系列的包管理器为“yum”，使用方法为在终端输入“sudo yum install -y 软件名称”。</p>\n<p>Debian 系列的包管理器为“apt-get”，使用方法为在终端输入“sudo apt-get install 软件名称”。</p>\n<p>示例：通过apt-get在Ubuntu中安装AbySS软件，输入命令和密码后，根据提示输入“Y”并按回车键进行自动安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install abyss</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过apt-get安装AbySS\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"通过apt-get安装AbySS\"></p>\n<h2 id=\"添加环境变量\"><a href=\"#添加环境变量\" class=\"headerlink\" title=\"添加环境变量\"></a>添加环境变量</h2><p>以原核生物基因预测软件“Prodigal”为例演示。首先在Github上找到prodigal的源码，点击“Clone or download”，并按照图示点击链接右侧的图标以复制git地址。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"复制prodigal链接\"></p>\n<p>在终端中进入tools目录，并输入克隆命令将项目克隆到本地计算机。命令公式为“git clone link”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/hyattpd/Prodigal.git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"克隆prodigal\"></p>\n<p>克隆完成后进入“Prodigal”目录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> Prodigal</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"进入Prodigal目录\"></p>\n<p>编译软件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"编译prodigal\"></p>\n<p>报错信息提示找不到gcc命令，因此需要首先安装gcc，输入命令后根据提示输入密码，直至安装完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install gcc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"安装gcc\"></p>\n<p>重新编译prodigal</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ make</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal编译结果\"></p>\n<p>编译完成后得到了可执行程序，但是系统无法找到prodigal的路径，因此需要我们将其所在的路径加入到环境变量中。通过vim打开环境变量配置文件“.bashrc”，进入编辑模式。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"打开环境变量文件\"></p>\n<p>在文档末尾添加配置语句 <strong>“export PATH&#x3D;$PATH:$HOME&#x2F;tools&#x2F;Prodigal”</strong> 。$HOME代表家目录，“$HOME&#x2F;tools&#x2F;Prodigal”代表prodigal可执行程序所在的目录。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在环境变量中添加prodigal路径\"></p>\n<p>编辑完成后保存并退出。然后执行“source ~&#x2F;.bashrc”命令刷新，通知系统“.bashrc”文档已经更改。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"刷新环境变量\"></p>\n<p>测试配置是否成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ prodigal -h</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal帮助信息\"></p>\n<p>若要将其他软件加入到环境变量，只需在后面加入其他软件所在路径即可，各软件的路径间以英文“:“分割，不得有空格。下图为将多个软件加入到环境变量的示例。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"添加多个软件路径\"></p>\n<h2 id=\"创建软链接\"><a href=\"#创建软链接\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h2><p>软链接（Soft Link）相当于Windows系统中的快捷方式，可以将可执行程序的软链接存放至系统默认的环境变量之中，如“&#x2F;usr&#x2F;bin&#x2F;”或“&#x2F;usr&#x2F;local&#x2F;bin”之中。仍旧以刚编译好的prodigal软件为例，创建软链接的公式为 <strong>“sudo ln -s &#x2F;home&#x2F;bio&#x2F;tools&#x2F;Prodigal&#x2F;prodigal &#x2F;usr&#x2F;local&#x2F;bin&#x2F;prodigal”</strong> ，根据提示输入密码完成创建。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo <span class=\"built_in\">ln</span> -s /home/bio/tools/Prodigal/prodigal /usr/local/bin/prodigal</span><br></pre></td></tr></table></figure>\n\n<p>通过“whereis”命令查看软链接是否创建成功。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ whereis prodigal</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看prodigal安装路径\"></p>\n<p><strong>注意：</strong> 创建软链接时要输入绝对路径，否则会报错“Too many levels of symbolic links”。</p>\n<h2 id=\"通过Anaconda包管理器进行安装\"><a href=\"#通过Anaconda包管理器进行安装\" class=\"headerlink\" title=\"通过Anaconda包管理器进行安装\"></a>通过Anaconda包管理器进行安装</h2><p><a href=\"https://www.anaconda.com/\">Anaconda</a>是一款比较易用的跨平台软件包管理器，<a href=\"http://bioconda.github.io/\">Bioconda</a>是conda的一个通道，专门管理生物信息学软件。通过conda安装软件时可以一键安装所有的依赖包，大大节约了时间并降低了安装难度。Bioconda目前有超过600个贡献者和500个成员，大部分生物信息学软件都被包含其中。用户可以到其官网搜索需要的软件是否被囊括其中。</p>\n<p><strong>（1）安装conda</strong></p>\n<p>此处，我们安装Miniconda，进入<a href=\"https://docs.conda.io/en/latest/miniconda.html\">官网</a>，选择适应自身系统及python版本的安装文件。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看Miniconda安装包\"></p>\n<p>查看系统python版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -v</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"查看python版本\"></p>\n<p>可以看出该系统已经安装了python3，因此下载Linux Python 3.7 64-bit (bash installer)。右键单击相应安装包获取链接，使用wget下载至tools目录下。建议用户安装Python 3，因为Python 软件基金会将于2020年元旦停止对Python 2的维护（<a href=\"https://pythonclock.org/%EF%BC%89%E3%80%82\">https://pythonclock.org/）。</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"下载Miniconda\"></p>\n<p>开始安装Miniconda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bash Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>根据提示按“Enter”键查看license，并输入“yes” 按“Enter”继续，按“Enter”确认安装位置，miniconda被安装到家目录下的miniconda3目录中。最后输入“yes”，按“Enter”进行初始化。最后，通过“source ~&#x2F;.bashrc”命令刷新。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"初始化Miniconda\"></p>\n<p><strong>（2）设置bioconda channel</strong></p>\n<p>在终端中输入以下三条命令添加channels：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda config --add channels defaults</span><br><span class=\"line\">$ conda config --add channels bioconda</span><br><span class=\"line\">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure>\n\n<p>至此，bioconda配置完毕，可以通过conda安装生物信息学软件。下面通过conda安装mapping软件“bwa”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install bwa</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"安装bwa\"></p>\n<p>根据提示输入“y”完成安装。</p>\n<h2 id=\"MacOS相关操作\"><a href=\"#MacOS相关操作\" class=\"headerlink\" title=\"MacOS相关操作\"></a>MacOS相关操作</h2><p>MacOS与Linux系统相似，基本命令相同，但是软件安装存在一些差异。</p>\n<h3 id=\"MacOS安装生物信息学软件\"><a href=\"#MacOS安装生物信息学软件\" class=\"headerlink\" title=\"MacOS安装生物信息学软件\"></a>MacOS安装生物信息学软件</h3><h3 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h3><p>源码安装方式与Linux安装方式一致。</p>\n<h3 id=\"创建软链接-1\"><a href=\"#创建软链接-1\" class=\"headerlink\" title=\"创建软链接\"></a>创建软链接</h3><p>配置方法与Linux一致。</p>\n<h3 id=\"环境变量-1\"><a href=\"#环境变量-1\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>MacOS环境变量配置方法与Linux配置方法一致，但配置文件为家目录下的“.bash_profile”，即运行如下命令进行编辑。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<p>编辑完成并保存后需要运行source命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"包管理器\"><a href=\"#包管理器\" class=\"headerlink\" title=\"包管理器\"></a>包管理器</h3><p>MacOS的软件包管理器为Homebrew，可以在终端中通过以下命令安装Homebrew。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ruby -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过Homebrew安装mapping软件“bwa”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install bwa</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MacOS配置Anaconda\"><a href=\"#MacOS配置Anaconda\" class=\"headerlink\" title=\"MacOS配置Anaconda\"></a>MacOS配置Anaconda</h3><p>安装Miniconda</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh</span><br><span class=\"line\">$ sh Miniconda3-latest-MacOSX-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>添加Bioconda通道</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda config --add channels defaults</span><br><span class=\"line\">$ conda config --add channels bioconda</span><br><span class=\"line\">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure>\n\n<p>安装软件bwa</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ conda install bwa</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"现代测序技术\"><a href=\"#现代测序技术\" class=\"headerlink\" title=\"现代测序技术\"></a>现代测序技术</h1><h2 id=\"二代测序-“Next-generation”-sequencing-technology\"><a href=\"#二代测序-“Next-generation”-sequencing-technology\" class=\"headerlink\" title=\"二代测序(“Next-generation” sequencing technology)\"></a>二代测序(“Next-generation” sequencing technology)</h2><p>第二代测序技术的核心思想是边合成边测序（Sequencing by Synthesis），即通过捕捉新合成的末端的标记来确定DNA的序列。应用最广的技术平台主要为Illumina公司的产品。其优点为高通量、错误率低、成本低等。</p>\n<ul>\n<li>Illumina测序中的几个名词</li>\n<li>   <strong>Read length：</strong> 测序的DNA片段的碱基长度。</li>\n<li>   <strong>Insert size：</strong> 双端测序时接头（adapter）中间序列的长度。</li>\n<li>   <strong>Junction：</strong> insert序列中间未被测序的部分。</li>\n<li>   <strong>Flowcell：</strong> 是指Illumina测序时，测序反应发生的位置，1个flowcell含有8条lane。</li>\n<li>   <strong>Lane：</strong> 每一个flowcell上都有8条泳道，用于测序反应，可以添加试剂，洗脱等等。</li>\n<li>   <strong>Raw data：</strong> 测序完成后未去接头、引物以及去除低质量序列的数据。</li>\n<li>   <strong>Clean data：</strong> 去除Raw data中的接头序列、linker、低质量reads、长度较短的reads及核糖体RNA和ncRNA产生的reads。</li>\n<li>   <strong>数据量：</strong> read长度乘以reads数目。</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"二代测序名词示意图\"></p>\n<h2 id=\"三代测序\"><a href=\"#三代测序\" class=\"headerlink\" title=\"三代测序\"></a>三代测序</h2><p>三代测序又称为单分子测序，测序过程无需进行PCR扩增，可以产生超长的reads，因此能够跨越高GC含量区域和高度重复区域。目前常用的测序平台包括Pacific Biosciences（PacBio）和Oxford Nanopore。</p>\n<p>PacBio以SMRT Cell为载体进行测序反应，SMRT Cell是一张带有纳米孔的超薄金属片。PacBio采用边合成便测序的方式，测序反应在纳米孔中进行，一个纳米孔中固定一个DNA聚合酶和一条DNA模板。延伸反应的过程中检测dNTP荧光信号以确定碱基顺序。</p>\n<p>Oxford开发的纳米单分子测序技术属于真正的实时测序，它基于电信号来判读碱基。</p>\n<caption>Table 1. Characteristics, strengths and weaknesses of commonly used sequencing platforms (Besser et al. 2018)</caption>\n<table border=\"1\">\n<tr>\n<th>Platform\\Instrument</th>\n<th>Throughput (Gb)</th>\n<th>Read length (bp)</th>\n<th>Strength</th>\n<th>Weakness</th>\n</tr>\n<tr>\n<td><B>Sanger sequencing</B></td>\n</tr>\n<tr>\n<td>ABI 3500/3730</td>\n<td>0.0003</td>\n<td>Up to 1 kb</td>\n<td>Read accuracy and length</td>\n<td>Cost and throughput</td>\n</tr>\n<tr>\n<td><B>Illumina</B></td>\n</tr>\n<tr>\n<td>MiniSeq</td>\n<td>1.7–7.5</td>\n<td>1×75 to ×150</td>\n<td>Low initial investment</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>MiSeq</td>\n<td>0.3–15</td>\n<td>1×36 to 2×300</td>\n<td>Read length, scalability</td>\n<td>Run length</td>\n</tr>\n<tr>\n<td>NextSeq</td>\n<td>10–120</td>\n<td>1×75 to 2×150</td>\n<td>Throughput</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>HiSeq (2500)</td>\n<td>10–1000</td>\n<td>×50 to ×250</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td>NovaSeq 5000/6000</td>\n<td>2000–6000</td>\n<td>2×50 to ×150</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td><B>IonTorrent</B></td>\n</tr>\n<tr>\n<td>PGM</td>\n<td>0.08–2</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Throughput, homopolymers</td>\n</tr>\n<tr>\n<td>S5</td>\n<td>0.6–15</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td>Proton</td>\n<td>10–15</td>\n<td>Up to 200</td>\n<td>Speed, throughput</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td><B>Pacific BioSciences</B></td>\n</tr>\n<tr>\n<td>PacBio RSII</td>\n<td>0.5–1</td>\n<td>Up to 60 kb</td>\n<td>ead length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate and initial</td>\n</tr>\n<tr>\n<td>Sequel</td>\n<td>5–10</td>\n<td>Up to 60 kb</td>\n<td>Read length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate</td>\n</tr>\n<tr>\n<td><B>Oxford Nanopore</B></td>\n</tr>\n<tr>\n<td>MInION</td>\n<td>0.1–1</td>\n<td>Up to 100 kb</td>\n<td>Read length, portability</td>\n<td>High error rate, run length</td>\n</tr>\n</table>\n\n<h2 id=\"常见序列格式\"><a href=\"#常见序列格式\" class=\"headerlink\" title=\"常见序列格式\"></a>常见序列格式</h2><h3 id=\"Fastq\"><a href=\"#Fastq\" class=\"headerlink\" title=\"Fastq\"></a>Fastq</h3><p>我们得到的下机序列一般为fastq格式，每一条read包含4行，第一行为测序仪器信息以及测序信息，第二行为碱基序列，第三行一般无信息，第四行为对应第二行中每个碱基的测序质量信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"fastq文件内容\"></p>\n<caption>Table 2. Descriptions of the first line of the fastq file</caption>\n<table border=\"1\">\n<tr>\n<th>Strings</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>@ST-E00310</td>\n<td>The unique instrument name</td>\n</tr>\n<tr>\n<td>147</td>\n<td>The run id</td>\n</tr>\n<tr>\n<td>HVT25CCXX</td>\n<td>The flowcell id</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Flowcell lane</td>\n</tr>\n<tr>\n<td>1011</td>\n<td>The number within the flowcell lane</td>\n</tr>\n<tr>\n<td>13382</td>\n<td>‘x’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1819</td>\n<td>‘y’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1</td>\n<td>The number of a pair, 1 or 2 (paired-end or mate-pair reads only)</td>\n</tr>\n<tr>\n<td>N</td>\n<td>Y if the read fails filter (read is bad), N otherwise</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0 when none of the control bits are on, otherwise it is an even number</td>\n</tr>\n<tr>\n<td>TGAAGACA</td>\n<td>Index sequence</td>\n</tr>\n</table>\n\n\n<h3 id=\"Fasta\"><a href=\"#Fasta\" class=\"headerlink\" title=\"Fasta\"></a>Fasta</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.fasta.html?highlight=fasta#module-skbio.io.format.fasta\">FASTA</a>格式为文本文档，内含核苷酸或氨基酸序列以及其IDs。每条序列包含两部分，第一部分为ID及注释信息，以 <strong>“&gt;”</strong> 开头，at the start, 第二部分为核苷酸序列或氨基酸序列。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"fasta文件内容\"></p>\n<h3 id=\"Genbank\"><a href=\"#Genbank\" class=\"headerlink\" title=\"Genbank\"></a>Genbank</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.genbank.html\">GenBank</a>格式包含了基因组序列和注释信息。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Genbank文件内容\"></p>\n<h3 id=\"GFF3\"><a href=\"#GFF3\" class=\"headerlink\" title=\"GFF3\"></a>GFF3</h3><p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.gff3.html?highlight=gff#module-skbio.io.format.gff3\">GFF3</a> (Generic Feature Format version 3) 格式描述了序列的特征，每一行含有9列数据，列与列之间以制表符分割。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"GFF3文件内容\"></p>\n<h2 id=\"基因组拼接基本概念\"><a href=\"#基因组拼接基本概念\" class=\"headerlink\" title=\"基因组拼接基本概念\"></a>基因组拼接基本概念</h2><h3 id=\"测序深度\"><a href=\"#测序深度\" class=\"headerlink\" title=\"测序深度\"></a>测序深度</h3><p>测序深度（Sequencing depth）指测序得到的总碱基数（read长度x reads数目）与待测基因组大小的比值。假设一个基因组大小为2M，测序深度为10X，那么获得的总数据量为20M。</p>\n<h3 id=\"测序覆盖度\"><a href=\"#测序覆盖度\" class=\"headerlink\" title=\"测序覆盖度\"></a>测序覆盖度</h3><p>指测序获得的序列占整个基因组的比例。由于基因组中的高GC、重复序列等复杂区域的存在，测序获得的序列经常无法覆盖基因组上所有的区域。例如覆盖度是96%，表明还有4%的序列区域未测到。</p>\n<h3 id=\"Read、Contig、Scaffold\"><a href=\"#Read、Contig、Scaffold\" class=\"headerlink\" title=\"Read、Contig、Scaffold\"></a>Read、Contig、Scaffold</h3><p>测序得到的序列被称作reads，在一个read中连续的N个碱基所组成的序列称作k-mer，把k-mer集合拼接起来形成的长DNA序列称为contig。通过pair ends信息将contigs按顺序进行排列得到scaffold。</p>\n<h3 id=\"N50\"><a href=\"#N50\" class=\"headerlink\" title=\"N50\"></a>N50</h3><p>将contigs或scaffolds根据长度从大到小排列并累加，当其累计长度达到全部组装序列总长度的50%时，加上去的最后一个contig或scaffold的大小即为N50的大小，N50是评价基因组拼接质量的重要参数。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p>Besser J, Carleton HA, Gerner-Smidt P, Lindsey RL, Trees E. Next-generation sequencing technologies and their application to the study and control of bacterial infections. <em>Clinical Microbiology and Infection</em>, 2018, 24: 335-341</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"Nanopore基因组组装","slug":"Nanopore基因组组装","date":"2022-02-26T02:37:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Nanopore基因组组装.json","excerpt":null,"keywords":null,"cover":"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png","content":"<h1 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mamba install miniasm minipolish raven-assembler flye medaka python=3.8 fastp bwa masurca trycycler</span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/rrwick/Minipolish.git</span><br><span class=\"line\"></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/rrwick/Polypolish.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Polypolish</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install cargo</span><br><span class=\"line\">cargo build --release</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Step-1-Generating-assemblies\"><a href=\"#Step-1-Generating-assemblies\" class=\"headerlink\" title=\"Step 1: Generating assemblies\"></a>Step 1: <a href=\"https://github.com/rrwick/Trycycler/wiki/Generating-assemblies\">Generating assemblies</a></h1><h2 id=\"准备三代数据\"><a href=\"#准备三代数据\" class=\"headerlink\" title=\"准备三代数据\"></a>准备三代数据</h2><p>如果是含有多个文件的话，需要合并到一个文件里</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> WHQ17/barcode14/*.fastq &gt; WHQ17.fastq</span><br></pre></td></tr></table></figure>\n<h2 id=\"质控\"><a href=\"#质控\" class=\"headerlink\" title=\"质控\"></a>质控</h2><p>This will discard short reads (less than 1 kbp) and very bad reads (the worst 5%)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filtlong --min_length 1000 --keep_percent 95 WHQ17.fastq &gt; WHQ17.good.fastq</span><br></pre></td></tr></table></figure>\n<h2 id=\"取子集-Subsampling-reads\"><a href=\"#取子集-Subsampling-reads\" class=\"headerlink\" title=\"取子集 Subsampling reads\"></a>取子集 Subsampling reads</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler subsample --reads WHQ17.good.fastq --out_dir read_subsets --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--count: 输出的Reads子集的数量，大部分情况使用默认的12即可。</li>\n<li>--genome_size: 预估的基因组大小 (e.g. –genome_size 5.5m)。不提供的话会通过miniasm 组装基因组，以估计大小，但是速度会慢。此值用于计算reads深度，不需要很精确，10%的错误是允许的。</li>\n<li>--min_read_depth: 允许的最小read深度，控制着取子集的深度。</li>\n<li>--threads: 使用的线程数（越大越好），影响miniasm 的组装速度。<br>+++</li>\n</ul>\n<p><strong>得到</strong>：<code>read_subsets/sample_*.fastq</code></p>\n<h2 id=\"组装-Generating-assemblies\"><a href=\"#组装-Generating-assemblies\" class=\"headerlink\" title=\"组装 Generating assemblies\"></a>组装 Generating assemblies</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">threads=6  <span class=\"comment\"># change as appropriate for your system</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> assemblies</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_01.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_01 &amp;&amp; <span class=\"built_in\">cp</span> assembly_01/assembly.fasta assemblies/assembly_01.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_01</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_02.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_02.gfa &amp;&amp; any2fasta assembly_02.gfa &gt; assemblies/assembly_02.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_02.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_03.fastq &gt; assemblies/assembly_03.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_04.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_04 &amp;&amp; <span class=\"built_in\">cp</span> assembly_04/assembly.fasta assemblies/assembly_04.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_04</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_05.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_05.gfa &amp;&amp; any2fasta assembly_05.gfa &gt; assemblies/assembly_05.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_05.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_06.fastq &gt; assemblies/assembly_06.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_07.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_07 &amp;&amp; <span class=\"built_in\">cp</span> assembly_07/assembly.fasta assemblies/assembly_07.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_07</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_08.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_08.gfa &amp;&amp; any2fasta assembly_08.gfa &gt; assemblies/assembly_08.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_08.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_09.fastq &gt; assemblies/assembly_09.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br><span class=\"line\"></span><br><span class=\"line\">flye --nano-raw read_subsets/sample_10.fastq --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> --out-dir assembly_10 &amp;&amp; <span class=\"built_in\">cp</span> assembly_10/assembly.fasta assemblies/assembly_10.fasta &amp;&amp; <span class=\"built_in\">rm</span> -r assembly_10</span><br><span class=\"line\">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_11.fastq <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> &gt; assembly_11.gfa &amp;&amp; any2fasta assembly_11.gfa &gt; assemblies/assembly_11.fasta &amp;&amp; <span class=\"built_in\">rm</span> assembly_11.gfa</span><br><span class=\"line\">raven --threads <span class=\"string\">&quot;<span class=\"variable\">$threads</span>&quot;</span> read_subsets/sample_12.fastq &gt; assemblies/assembly_12.fasta &amp;&amp; <span class=\"built_in\">rm</span> raven.cereal</span><br></pre></td></tr></table></figure>\n\n<p><strong>得到</strong>：<code>assemblies/*.fasta</code></p>\n<p><strong>删除中间文件：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -r read_subsets</span><br></pre></td></tr></table></figure>\n<h1 id=\"Step-2-Clustering-contigs\"><a href=\"#Step-2-Clustering-contigs\" class=\"headerlink\" title=\"Step 2: Clustering contigs\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Clustering-contigs\">Step 2: Clustering contigs</a></h1><h2 id=\"Running-Trycycler-cluster\"><a href=\"#Running-Trycycler-cluster\" class=\"headerlink\" title=\"Running Trycycler cluster\"></a>Running Trycycler cluster</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler cluster --assemblies assemblies/*.fasta --reads WHQ17.good.fastq --out_dir trycycler --threads 10</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--min_contig_len: 最小contig长度（默认1000），短于该长度的contigs将被丢弃。如果你的基因组含有长度更小的质粒，将该值设低。</li>\n<li>--min_contig_depth: 覆盖contigs的reads的最低深度。For example, if an assembly has a mean depth of 90× and this setting is 0.1 (the default), then any contig with &lt;9× depth will be removed.</li>\n<li>--distance: this is the Mash distance threshold used when defining clusters, and the default threshold is 0.01. Smaller thresholds (e.g. 0.005) can result in a larger number of tighter clusters. Larger thresholds (e.g. 0.02) can result in a smaller number of looser clusters.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h2><ul>\n<li><code>trycycler/contigs.phylip</code>: a matrix of the Mash distances between all contigs in PHYLIP format.</li>\n<li><code>trycycler/contigs.newick</code>: a FastME tree of the contigs built from the distance matrix. This can be visualised in a phylogenetic tree viewer such as FigTree, Dendroscope or Archaeopteryx.</li>\n<li>One directory for each of the clusters: <code>trycycler/cluster_001, trycycler/cluster_002, etc</code>. These directories will each contain a subdirectory named 1_contigs which includes the FASTA files for the contigs in the cluster.</li>\n</ul>\n<h2 id=\"筛选-clusters\"><a href=\"#筛选-clusters\" class=\"headerlink\" title=\"筛选 clusters\"></a><font color=\"#FF0000\">筛选 clusters</font></h2><p>将<code>contigs.newick</code>导入进化树查看软件，肉眼观察，主观意愿挑选，有问题的cluster删掉。参照<a href=\"https://github.com/rrwick/Trycycler/wiki/Clustering-contigs\">Trycycler官方说明</a>。</p>\n<h1 id=\"Step-3-Reconciling-contigs\"><a href=\"#Step-3-Reconciling-contigs\" class=\"headerlink\" title=\"Step 3: Reconciling contigs\"></a>Step 3: <a href=\"https://github.com/rrwick/Trycycler/wiki/Reconciling-contigs\">Reconciling contigs</a></h1><h2 id=\"Running-Trycycler-reconcile\"><a href=\"#Running-Trycycler-reconcile\" class=\"headerlink\" title=\"Running Trycycler reconcile\"></a>Running Trycycler reconcile</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_001 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_002 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_003 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_004 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_005 --threads 10</span><br><span class=\"line\">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_006 --threads 10</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析<br>General settings:</p>\n<ul>\n<li>--linear: use this option if your input contigs are not circular. It will disable the circularisation-correction steps in Trycycler reconcile.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.</li>\n<li>--verbose: use this flag to display extra output. Mainly there for debugging purposes.</li>\n</ul>\n<p>Initial check:</p>\n<ul>\n<li>--max_mash_dist: if any of the sequences have a pairwise Mash distance of more than this (default &#x3D; 0.02), then the contigs will fail the initial check.</li>\n<li>--max_length_diff: if any of the sequences have a pairwise relative length factor of more than this, then the contigs will fail the initial check. For example, if set to 1.1 (the default), then no contig can be more than 10% longer than any other.</li>\n</ul>\n<p>Circularisation:</p>\n<ul>\n<li>--max_add_seq and –max_add_seq_percent: these control how much sequence Trycycler is willing to add to a contig to circularise it. For example, if they are set to 1000 and 5 (the defaults), then Trycycler will be willing to add up to 1000 bp or 5% of a contig’s length (whichever is smaller) to circularise it. Any contig which requires more than 1000 bp or 5% of its length added to circularise will cause Trycycler reconcile to fail.</li>\n<li>--max_trim_seq and –max_trim_seq_percent: these control how much sequence Trycycler is willing to remove from a contig to circularise it. For example, if they are set to 50000 and 10 (the defaults), then Trycycler will be willing to remove up to 50000 bp or 10% of a contig’s length (whichever is smaller) to circularise it. Any contig which requires more than 50000 bp or 10% of its length removed to circularise will cause Trycycler reconcile to fail.</li>\n</ul>\n<p>Final check:</p>\n<ul>\n<li>--min_identity: if any of the sequences have a pairwise global alignment percent identity of less than this (default &#x3D; 98), then the contigs will fail the final check.</li>\n<li>--max_indel_size: if any of the sequences have a pairwise alignment indel size of more than this (default &#x3D; 250), then the contigs will fail the final check.<br>+++</li>\n</ul>\n<h2 id=\"输出-1\"><a href=\"#输出-1\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, Trycycler reconcile will make <code>2_all_seqs.fasta</code> in the cluster directory, a multi-FASTA file containing each of the contigs ready for multiple sequence alignment.</p>\n<h2 id=\"Dotplots\"><a href=\"#Dotplots\" class=\"headerlink\" title=\"Dotplots\"></a>Dotplots</h2><p>You can optionally run Trycycler dotplot on any problematic clusters to visualise the relationship between the sequences. For example:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler dotplot --cluster_dir trycycler/cluster_002</span><br></pre></td></tr></table></figure>\n\n<p>This will create an image file (dotplots.png) in the cluster directory with a dotplot for all pairwise combinations of sequences. Same-strand k-mer matches are drawn in blue, and opposite-strand k-mer matches are drawn in red. For example:</p>\n<p><img src=\"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png\" class=\"lazyload placeholder\" data-srcset=\"https://github.com/rrwick/Trycycler/wiki/images/dotplots.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Dotplot\"><br>In the above example (taken from cluster 2 of the good demo dataset), you can see that most of the sequences are in very nice agreement with each other. They have shifted start positions relative to each other, but that’s expected for contigs of a circular sequence. One of the contigs (E_contig_2) is on the opposite strand as the others, but that too is normal. Sequence D_contig_2, however, is a problem! It contains two entire copies of the same sequence, visible in the dotplot with itself and the dotplots with other sequences. It will need to be excluded or trimmed in order for reconciliation to succeed.</p>\n<h1 id=\"Step-4-Multiple-sequence-alignment\"><a href=\"#Step-4-Multiple-sequence-alignment\" class=\"headerlink\" title=\"Step 4: Multiple sequence alignment\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Multiple-sequence-alignment\">Step 4: Multiple sequence alignment</a></h1><h2 id=\"Running-Trycycler-msa\"><a href=\"#Running-Trycycler-msa\" class=\"headerlink\" title=\"Running Trycycler msa\"></a>Running Trycycler msa</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_001 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_002 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_003 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_004 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_005 --threads 8</span><br><span class=\"line\">trycycler msa --cluster_dir trycycler/cluster_006 --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析<br>除了线程数外，其他三个参数可以用默认值。</p>\n<ul>\n<li>--kmer: the k-mer size used for sequence partitioning (default &#x3D; 32).</li>\n<li>--step: the step size used for sequence partitioning (default &#x3D; 1000).</li>\n<li>--lookahead: the look-ahead margin used for sequence partitioning (default &#x3D; 10000).</li>\n<li>--threads: this is how many parallel instances of MUSCLE will be used when aligning the sequence partitions. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出-2\"><a href=\"#输出-2\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, Trycycler reconcile will make a <code>3_msa.fasta</code> file in the cluster directory, a FASTA-formatted multiple sequence alignment of the contigs ready for use in generating a consensus. </p>\n<h1 id=\"Step-5-Partitioning-reads\"><a href=\"#Step-5-Partitioning-reads\" class=\"headerlink\" title=\"Step 5: Partitioning reads\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Partitioning-reads\">Step 5: Partitioning reads</a></h1><h2 id=\"Running-Trycycler-partition\"><a href=\"#Running-Trycycler-partition\" class=\"headerlink\" title=\"Running Trycycler partition\"></a>Running Trycycler partition</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler partition --reads WHQ17.good.fastq --cluster_dirs trycycler/cluster_* --threads 8</span><br></pre></td></tr></table></figure>\n\n<p>+++ info 参数解析</p>\n<ul>\n<li>--min_aligned_len: reads with less than this many bases aligned (default &#x3D; 1000) will be ignored.</li>\n<li>--min_read_cov: reads with less than this percentage of their length covered by alignments (default &#x3D; 90.0) will be ignored.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li>\n</ul>\n<h2 id=\"输出-3\"><a href=\"#输出-3\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>After Trycycler partition completes, each of the cluster directories should have a <code>4_reads.fastq</code> file which contains its share of the total reads.</p>\n<h1 id=\"Step-6-Generating-a-consensus\"><a href=\"#Step-6-Generating-a-consensus\" class=\"headerlink\" title=\"Step 6: Generating a consensus\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Generating-a-consensus\">Step 6: Generating a consensus</a></h1><h2 id=\"Running-Trycycler-consensus\"><a href=\"#Running-Trycycler-consensus\" class=\"headerlink\" title=\"Running Trycycler consensus\"></a>Running Trycycler consensus</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_001 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_002 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_003 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_004 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_005 --threads 8</span><br><span class=\"line\">trycycler consensus --cluster_dir trycycler/cluster_006 --threads 8</span><br></pre></td></tr></table></figure>\n<p>+++ info 参数解析</p>\n<ul>\n<li>--linear: use this option if your input contigs are not circular. It will disable the circularisation steps when aligning reads and choosing variants.</li>\n<li>--min_aligned_len: reads with less than this many bases aligned (default &#x3D; 1000) will be ignored.</li>\n<li>--min_read_cov: reads with less than this percentage of their length aligned (default &#x3D; 90.0) will be ignored.</li>\n<li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.</li>\n<li>--verbose: use this flag to display extra output. For every read-assessed variant, this will show the alternative sequences and their read alignment scores.<br>+++</li>\n</ul>\n<h2 id=\"输出-4\"><a href=\"#输出-4\" class=\"headerlink\" title=\"输出\"></a>输出</h2><p>When finished, you should have a <code>7_final_consensus.fasta</code> file in each of your cluster directories. If you have multiple clusters, you can combine their consensus sequences into a single FASTA file like this:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> trycycler/cluster_*/7_final_consensus.fasta &gt; trycycler/consensus.fasta</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Step-7-Polishing-after-Trycycler\"><a href=\"#Step-7-Polishing-after-Trycycler\" class=\"headerlink\" title=\"Step 7: Polishing after Trycycler\"></a><a href=\"https://github.com/rrwick/Trycycler/wiki/Polishing-after-Trycycler\">Step 7: Polishing after Trycycler</a></h1><h2 id=\"Medaka-需要知道测序仪信息basecalling\"><a href=\"#Medaka-需要知道测序仪信息basecalling\" class=\"headerlink\" title=\"Medaka (需要知道测序仪信息basecalling)\"></a>Medaka (需要知道测序仪信息basecalling)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> trycycler/cluster_*; <span class=\"keyword\">do</span></span><br><span class=\"line\">    medaka_consensus -i <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/4_reads.fastq -d <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/7_final_consensus.fasta -o <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka -m r941_prom_hac_g507 -t 8</span><br><span class=\"line\">    <span class=\"built_in\">mv</span> <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka/consensus.fasta <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/8_medaka.fasta</span><br><span class=\"line\">    <span class=\"built_in\">rm</span> -r <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/medaka <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/*.fai <span class=\"string\">&quot;<span class=\"variable\">$c</span>&quot;</span>/*.mmi  <span class=\"comment\"># clean up</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> trycycler/cluster_*/8_medaka.fasta &gt; trycycler/consensus.fasta</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"Short-read-polishing\"><a href=\"#Short-read-polishing\" class=\"headerlink\" title=\"Short-read polishing\"></a>Short-read polishing</h2><h3 id=\"Step-1-read-QC\"><a href=\"#Step-1-read-QC\" class=\"headerlink\" title=\"Step 1: read QC\"></a>Step 1: read QC</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastp --in1 WHQ17_BDMS190038054-1a_1.clean.fq.gz --in2 WHQ17_BDMS190038054-1a_2.clean.fq.gz --out1 WHQ17_1.fastq.gz --out2 WHQ17_2.fastq.gz --unpaired1 WHQ17_u.fastq.gz --unpaired2 WHQ17-u.fastq.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Step-2-Polypolish\"><a href=\"#Step-2-Polypolish\" class=\"headerlink\" title=\"Step 2: Polypolish\"></a>Step 2: Polypolish</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bwa index trycycler/consensus.fasta</span><br><span class=\"line\">bwa mem -t 8 -a trycycler/consensus.fasta WHQ17_1.fastq.gz &gt; alignments_1.sam</span><br><span class=\"line\">bwa mem -t 8 -a trycycler/consensus.fasta WHQ17_2.fastq.gz &gt; alignments_2.sam</span><br><span class=\"line\">polypolish trycycler/consensus.fasta alignments_1.sam alignments_2.sam &gt; trycycler/polypolish.fasta</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Step-3-POLCA\"><a href=\"#Step-3-POLCA\" class=\"headerlink\" title=\"Step 3: POLCA\"></a>Step 3: POLCA</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这一步报错，暂未执行</span></span><br><span class=\"line\">polca.sh -a trycycler/polypolish.fasta -r <span class=\"string\">&quot;WHQ17_1.fastq.gz WHQ17_2.fastq.gz&quot;</span> -t 8 -m 10G</span><br><span class=\"line\"><span class=\"built_in\">mv</span> *.PolcaCorrected.fa polypolish_polca.fasta</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"删除无用信息\"><a href=\"#删除无用信息\" class=\"headerlink\" title=\"删除无用信息\"></a>删除无用信息</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> alignments_1.sam alignments_2.sam fastp.*</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf *.read_subsets</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"PGCGAP - the Prokaryotic Genomics and Comparative Genomics Analysis Pipeline v1.0.33","slug":"PGCGAP-v1.0.33","date":"2022-03-15T11:14:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/PGCGAP-v1.0.33.json","excerpt":null,"keywords":null,"cover":"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green","content":"<table>\n<thead>\n<tr>\n<th><img src=\"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></th>\n<th><a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/liaochenlanruo/pgcgap\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/github/license/liaochenlanruo/pgcgap\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"License\"></a></th>\n<th><a href=\"https://anaconda.org/bioconda/pgcgap\"><img src=\"https://anaconda.org/bioconda/pgcgap/badges/version.svg\" class=\"lazyload placeholder\" data-srcset=\"https://anaconda.org/bioconda/pgcgap/badges/version.svg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"GitHubversion\"></a></th>\n<th><img src=\"https://img.shields.io/conda/dn/bioconda/pgcgap.svg?style=flat\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/conda/dn/bioconda/pgcgap.svg?style=flat\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\"></th>\n<th><a href=\"http://bioconda.github.io/recipes/pgcgap/README.html\"><img src=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" class=\"lazyload placeholder\" data-srcset=\"https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"install with bioconda\"></a></th>\n<th><a href=\"//shang.qq.com/wpa/qunwpa?idkey=fd4637eecd73bf0a5a8caa274843a07afdf1fbbc40a86630df5d4b029749cc7b\"><img src=\"https://pub.idqqimg.com/wpa/images/group.png\" class=\"lazyload placeholder\" data-srcset=\"https://pub.idqqimg.com/wpa/images/group.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅\" title=\"945751012\"></a></th>\n</tr>\n</thead>\n</table>\n<p><center>\n<script type=\"text/javascript\" src=\"//rf.revolvermaps.com/0/0/4.js?i=0ett3z77b0x&amp;m=0&amp;h=128&amp;c=ff0000&amp;r=0\" async=\"async\"></script>\n&nbsp;&nbsp;&nbsp;&nbsp;\n<script type=\"text/javascript\" src=\"//rf.revolvermaps.com/0/0/0.js?i=0ett3z77b0x&amp;d=3&amp;p=1&amp;b=1&amp;w=293&amp;g=2&amp;f=arial&amp;fs=13&amp;r=0&amp;c0=ff8a00&amp;c1=0006ff&amp;c2=000000&amp;ic0=0&amp;ic1=0\" async=\"async\"></script>\n</center></p>\n\n<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/post/848f.html\">中文说明</a></p>\n<pre><code>      ____       ____      ____     ____       _        ____    \n    U|  _&quot;\\ u U /&quot;___|u U /&quot;___| U /&quot;___|u U  /&quot;\\  u  U|  _&quot;\\ u \n    \\| |_) |/ \\| |  _ / \\| | u   \\| |  _ /  \\/ _ \\/   \\| |_) |/ \n     |  __/    | |_| |   | |/__   | |_| |   / ___ \\    |  __/   \n     |_|        \\____|    \\____|   \\____|  /_/   \\_\\   |_|      \n     ||&gt;&gt;_      _)(|_    _// \\\\    _)(|_    \\\\    &gt;&gt;   ||&gt;&gt;_    \n    (__)__)    (__)__)  (__)(__)  (__)__)  (__)  (__) (__)__)   \n</code></pre>\n<h2 id=\"Multi-version-instructions-This-one-for-the-latest-version\"><a href=\"#Multi-version-instructions-This-one-for-the-latest-version\" class=\"headerlink\" title=\"Multi-version instructions (This one for the latest version)\"></a>Multi-version instructions (This one for the latest version)</h2><hr>\n<ul>\n<li><a href=\"./index-v1.0.29.html\">Instructions for V1.0.29</a></li>\n<li><a href=\"./index-v1.0.32.html\">Instructions for V1.0.32</a></li>\n<li><a href=\"./index.html\">Instructions for the latest version</a></li>\n</ul>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><hr>\n<p>PGCGAP is a pipeline for prokaryotic comparative genomics analysis. It can take the pair-end reads, ONT reads or PacBio reads as input. In addition to genome assembly, gene prediction and annotation, it can also get common comparative genomics analysis results such as phylogenetic trees of single-core proteins and core SNPs, pan-genome, whole-genome Average Nucleotide Identity (ANI), orthogroups and orthologs, COG annotations, substitutions (SNPs) and insertions&#x2F;deletions (indels), and antimicrobial and virulence genes mining with only one line of commands. <strong><u>To follow this document, please upgrade PGCGAP to version v1.0.33 or later</u></strong>.</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><hr>\n<p>The software was tested successfully on Windows WSL, Linux x64 platform, and macOS. Because this software relies on a large number of other software, so it is recommended to install with <strong><a href=\"https://bioconda.github.io/index.html\">Bioconda</a></strong>.</p>\n<p><strong>Step1: Install PGCGAP</strong></p>\n<ul>\n<li><p>Method 1: use mamba to install PGCGAP</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install mamba first</span></span><br><span class=\"line\">conda install mamba</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Usually specify the latest version of PGCGAP (v1.0.33 is coming soon)</span></span><br><span class=\"line\">mamba create -n pgcgap pgcgap=1.0.33</span><br></pre></td></tr></table></figure>\n\n<p>  <strong>Notice</strong>: <u>I had submitted the latest version (v1.0.33) of the Bioconda recipe for PGCGAP for a test. However, Bioconda moved to a new test server which allocated very little memory, causing the test to fail. As a result, I had to remove some dependencies from the Bioconda recipe to pass the test, so after installing the main program of PGCGAP v1.0.33 through Conda, users still need to install some dependencies (Installing V1.0.32 and previous versions does not require an additional dependency package installation). This situation will be resolved soon with the release of Conda v4.12 as Bioconda will switch to the less memory-consuming Mamba for recipe testing. After that, users will still be able to install PGCGAP and its dependencies just using the above commands.</u> However, at present, after the previous step, the user needs to execute the following command to complete the installation of the dependency packages:</p>\n<p>  当安装PGCGAP v1.0.33的时候还需要单独安装依赖包，这是由于Bioconda换了新的测试服务器。我在提交最新版本的recipe并进行测试的时候，服务器仅分配了极小的内存，导致测试失败。因此，我不得不从Bioconda recipe中移除一些依赖包以通过测试。所以，在通过conda安装完PGCGAP的主程序后，还需要安装一些依赖包。这种状况将在不久的将来得到解决，即随着conda v4.12释放以后，Bioconda将转用耗费内存更小的mamba来进行recipe的测试，此后，用户仍可通过上述命令完成PGCGAP和其依赖包的安装。目前，在执行完上一步操作之后，用户还需要执行下面这条命令完成依赖包的安装（当然，安装v1.0.32及以前的版本不需要单独再安装依赖包了）：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate pgcgap</span><br><span class=\"line\">mamba install -y abricate canu roary orthofinder fastani fastp snippy sickle-trim unicycler perl-file-copy-recursive prokka pal2nal mash trimal</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Method 2: use &quot;environment.yaml&quot;. Run the following commands to download the <a href=\"https://bcam.hzau.edu.cn/PGCGAP/conda/pgcgap_latest_env.yml\">latest environmental file</a> and install PGCGAP:</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install mamba first</span></span><br><span class=\"line\">conda install mamba</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># download pgcgap_latest_env.yml</span></span><br><span class=\"line\">wget --no-check-certificate https://bcam.hzau.edu.cn/PGCGAP/conda/pgcgap_latest_env.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class=\"line\">mamba <span class=\"built_in\">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>Step2: Setup COG database</strong> (Users should execute this after the first installation of pgcgap)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate pgcgap</span><br><span class=\"line\">pgcgap --setup-COGdb</span><br><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure>\n\n<p>Users with <a href=\"https://hub.docker.com/\">docker container</a> installed have another choice to install PGCGAP.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n\n<p>(see <a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">pgcgap&#x2F;tags</a> for valid values for &lt;tag&gt;)</p>\n<h2 id=\"Required-dependencies\"><a href=\"#Required-dependencies\" class=\"headerlink\" title=\"Required dependencies\"></a>Required dependencies</h2><hr>\n<ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org/\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><hr>\n<ul>\n<li><p><strong>Print the help messages:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Check for update:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --check-update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>General usage:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap [modules] [options]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Show parameters for each module:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Show examples of each module:</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap Examples</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Setup COG database:</strong> (Users should execute this after the first installation of pgcgap)</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --setup-COGdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Modules:</strong></p>\n<ul>\n<li><p><strong>[--All]</strong> Perform Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH, AntiRes and pCOG functions with one command</p>\n</li>\n<li><p><strong>[--Assemble]</strong> Assemble reads (short, long or hybrid) into contigs</p>\n</li>\n<li><p><strong>[--Annotate]</strong> Genome annotation</p>\n</li>\n<li><p><strong>[--CoreTree]</strong> Construct single-core proteins tree and SNPs tree of single-copy core genes</p>\n</li>\n<li><p><strong>[--Pan]</strong> Run &quot;roary&quot; pan-genome pipeline with gff3 files, and construct a phylogenetic tree with the sing-copy core proteins called by roary</p>\n</li>\n<li><p><strong>[--OrthoF]</strong> Identify orthologous protein sequence families with &quot;OrthoFinder&quot;, and construct a phylogenetic tree with the sing-copy core Orthologues</p>\n</li>\n<li><p><strong>[--ANI]</strong> Compute whole-genome Average Nucleotide Identity ( ANI )</p>\n</li>\n<li><p><strong>[--MASH]</strong> Genome and metagenome similarity estimation using MinHash</p>\n</li>\n<li><p><strong>[--pCOG]</strong> Run COG annotation for each strain (*.faa), and generate a table containing the relative abundance of each flag for all strains</p>\n</li>\n<li><p><strong>[--VAR]</strong> Rapid haploid variant calling and core genome alignment with &quot;Snippy&quot;</p>\n</li>\n<li><p><strong>[--AntiRes]</strong> Screening of contigs for antimicrobial and virulence genes</p>\n</li>\n<li><p><strong>[--STREE]</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n</li>\n<li><p><strong>[--ACC]</strong> Other useful gadgets (now includes &#39;Assess&#39; for filtering short sequences in the genome and assessing the statistics of the genome only)</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Global Options:</strong></p>\n<ul>\n<li><p><strong>[--strain_num (INT)]</strong> [Required by &quot;--All&quot;, &quot;--CoreTree&quot;, &quot;--Pan&quot;, &quot;--VAR&quot; and &quot;--pCOG&quot;] The total number of strains used for analysis, not including the reference genome</p>\n</li>\n<li><p><strong>[--ReadsPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] Reads of all strains as file paths ( Default .&#x2F;Reads&#x2F;Illumina )</p>\n</li>\n<li><p><strong>[--scafPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot;, &quot;--MASH&quot; and &quot;--AntiRes&quot;] Path for contigs&#x2F;scaffolds (Default &quot;Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina&quot;)</p>\n</li>\n<li><p><strong>[--AAsPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Pan&quot;, &quot;--OrthoF&quot; and &quot;--pCOG&quot;] Amino acids of all strains as fasta file paths, ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;AAs&quot; )</p>\n</li>\n<li><p><strong>[--reads1 (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] The suffix name of reads 1 ( for example: if the name of reads 1 is &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot;, &quot;YBT-1520&quot; is the strain same, so the suffix name should be &quot;.R1.clean.fastq.gz&quot;)</p>\n</li>\n<li><p><strong>[--reads2 (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] The suffix name of reads 2( for example: if the name of reads 2 is &quot;YBT-1520_2.fq&quot;, the suffix name should be &quot;_2.fq&quot; )</p>\n</li>\n<li><p><strong>[--Scaf_suffix (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot; &quot;--MASH&quot;, &quot;--ANI&quot; and &quot;--AntiRes&quot;] The suffix of scaffolds or genome files. This is an important parameter that must be set (Default -8.fa)</p>\n</li>\n<li><p><strong>[--filter_length (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--Assess&quot;]&gt; Sequences shorter than the &#39;filter_length&#39; will be removed from the assembled genomes. ( Default 200 )</p>\n</li>\n<li><p><strong>[--codon (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Annotate&quot;, &quot;--CoreTree&quot; and &quot;--Pan&quot;] Translation table ( Default 11 )</p>\n<pre><code>- 1 Universal code\n- 2 Vertebrate mitochondrial code\n- 3 Yeast mitochondrial code\n- 4 Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma/Spiroplasma code\n- 5 Invertebrate mitochondrial\n- 6 Ciliate, Dasycladacean and Hexamita nuclear code\n- 9 Echinoderm and Flatworm mitochondrial code\n- 10 Euplotid nuclear code\n- 11 Bacterial, archaeal and plant plastid code ( Default )\n- 12 Alternative yeast nuclear code\n- 13 Ascidian mitochondrial code\n- 14 Alternative flatworm mitochondrial code\n- 15 Blepharisma nuclear code\n- 16 Chlorophycean mitochondrial code\n- 21 Trematode mitochondrial code\n- 22 Scenedesmus obliquus mitochondrial code\n- 23 Thraustochytrium mitochondrial code\n</code></pre>\n</li>\n<li><p><strong>[--suffix_len (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] <strong><u>(Strongly recommended)</u></strong> The suffix length of the reads, that is the length of your reads name minus the length of your strain name. For example the --suffix_len of &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot; is 26 ( &quot;YBT-1520&quot; is the strain name ) ( Default 0 )</p>\n</li>\n<li><p><strong>[--fasttree]</strong> [Can be used with &quot;CoreTree&quot;, &quot;Pan&quot; and &quot;OrthoF&quot;] Use FastTree to construct phylogenetic tree quickly instead of IQ-TREE</p>\n</li>\n<li><p><strong>[--bsnum (INT)]</strong> [Required by &quot;CoreTree&quot;, &quot;Pan&quot;, &quot;OrthoF&quot;, &quot;STREE&quot;, and &quot;VAR&quot;] Replicates for bootstrap of IQ-TREE ( Default 500 )</p>\n</li>\n<li><p><strong>[--fastboot (INT)]</strong> [Required by &quot;CoreTree&quot;, &quot;Pan&quot;, &quot;OrthoF&quot;, &quot;STREE&quot;, and &quot;VAR&quot;] Replicates for ultrafast bootstrap of IQ-TREE. ( must &gt;&#x3D; 1000, Default 1000 )</p>\n</li>\n<li><p><strong>[--logs (STRING)]</strong> Name of the log file ( Default Logs.txt )</p>\n</li>\n<li><p><strong>[--threads (INT)]</strong> Number of threads to be used ( Default 4 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Local Options:</strong></p>\n<ul>\n<li><p><strong>--Assemble</strong></p>\n<ul>\n<li><p><strong>[--platform (STRING)]</strong> [Required] Sequencing Platform, &quot;illumina&quot;, &quot;pacbio&quot;, &quot;oxford&quot; and &quot;hybrid&quot; available ( Default illumina )</p>\n</li>\n<li><p><strong>[--assembler (STRING)]</strong> [Required] Software used for illumina reads assembly, &quot;abyss&quot; and &quot;spades&quot; available ( Default auto )</p>\n</li>\n<li><p><strong>[--kmmer (INT)]</strong> [Required] k-mer size for genome assembly of Illumina data ( Default 81 )</p>\n</li>\n<li><p><strong>[--genomeSize (STRING)]</strong> [Required] An estimate of the size of the genome. Common suffixes are allowed, for example, 3.7m or 2.8g. Needed by PacBio data and ONT data ( Default Unset )</p>\n</li>\n<li><p><strong>[--short1 (STRING)]</strong> [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--short2 (STRING)]</strong> [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--long (STRING)]</strong> [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--hout (STRING)]</strong> [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Annotate</strong></p>\n<ul>\n<li><p><strong>[--genus (STRING)]</strong> Genus name of your strain ( Default &quot;NA&quot; )</p>\n</li>\n<li><p><strong>[--species (STRING)]</strong> Species name of your strain ( Default &quot;NA&quot;)\\</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--CoreTree</strong></p>\n<ul>\n<li><p><strong>[--CDsPath (PATH)]</strong> [Required] CDs of all strains as fasta file paths ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;CDs&quot; ), if set to &quot;NO&quot;, the SNPs of single-copy core genes will not be called</p>\n</li>\n<li><p><strong>[-c (FLOAT)]</strong> Sequence identity threshold, ( Default 0.5)</p>\n</li>\n<li><p><strong>[-n (INT)]</strong> Word_length, -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li><p><strong>[-G (INT)]</strong> Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li><p><strong>[-t (INT)]</strong> Tolerance for redundance ( Default 0 )</p>\n</li>\n<li><p><strong>[-aL (FLOAT)]</strong> Alignment coverage for the longer sequence. If set to 0.9, the alignment must cover 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li><p><strong>[-aS (FLOAT)]</strong> Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li><p><strong>[-g (INT)]</strong> If set to 0, a sequence is clustered to the first cluster that meets the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meets the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li><p><strong>[-d (INT)]</strong> length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Pan</strong></p>\n<ul>\n<li><strong>[--GffPath (PATH)]</strong> [Required] Gff files of all strains as paths ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;GFF&quot; )</li>\n<li><strong>[--PanTree]</strong> Construct a phylogenetic tree of single-copy core proteins called by roary</li>\n<li><strong>[--identi (INT)]</strong> Minimum percentage identity for blastp ( Default 95 )</li>\n</ul>\n</li>\n<li><p><strong>--OrthoF</strong></p>\n<ul>\n<li><strong>[--Sprogram (STRING)]</strong> Sequence search program, Options: blast, mmseqs, blast_gz, diamond ( Default diamond)</li>\n</ul>\n</li>\n<li><p><strong>--ANI</strong></p>\n<ul>\n<li><p><strong>[--queryL (FILE)]</strong> [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--refL (FILE)]</strong> [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--VAR</strong></p>\n<ul>\n<li><p><strong>[--refgbk (FILE)]</strong> [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: &quot;&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk&quot;</p>\n</li>\n<li><p><strong>[--qualtype (STRING)]</strong> [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p>\n</li>\n<li><p><strong>[--qual (INT)]</strong> Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li><p><strong>[--length (INT)]</strong> Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li><p><strong>[--mincov (INT)]</strong> The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li><p><strong>[--minfrac (FLOAT)]</strong> The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li><p><strong>[--minqual (INT)]</strong> The minimum VCF variant call &quot;quality&quot; ( Default 100 )</p>\n</li>\n<li><p><strong>[--ram (INT)]</strong> Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--AntiRes</strong></p>\n<ul>\n<li><p><strong>[--db (STRING)]</strong> [Required] The database to use, options: all, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, <a href=\"https://github.com/phac-nml/ecoli_vf\">ecoli_vf</a>, <a href=\"https://megares.meglab.org/\">megares</a>, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default all )</p>\n</li>\n<li><p><strong>[--identity (INT)]</strong> [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li><p><strong>[--coverage (INT)]</strong> [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--STREE</strong></p>\n<ul>\n<li><p><strong>[--seqfile (STRING)]</strong> [Required] Path of the sequence file for analysis.</p>\n</li>\n<li><p><strong>[--seqtype (INT)]</strong> [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--pCOG</strong></p>\n<ul>\n<li><p><strong>[--evalue (FLOAT)]</strong> [Required] Maximum e-value to report alignments, ( Default 1e-3 )</p>\n</li>\n<li><p><strong>[--id (INT)]</strong> [Required] Minimum identity% to report an alignment, ( Default 40 )</p>\n</li>\n<li><p><strong>[--query_cover (INT)]</strong> [Required] Minimum query cover% to report an alignment, ( Default 70 )</p>\n</li>\n<li><p><strong>[--subject_cover (INT)]</strong> [Required] Minimum subject cover% to report an alignment, ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong> Filter short sequences in the genome and assess the status of the genome</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>Paths of external programs</strong></p>\n<p>  Not needed if they were in the environment variables path. Users can check with the &quot;--check-external-programs&quot; option for the essential programs.</p>\n<ul>\n<li><p><strong>[--abricate-bin (PATH)]</strong> Path to abyss binary file.<br>Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--abyss-bin (PATH)]</strong> Path to abyss binary file. Default<br>tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--canu-bin (PATH)]</strong> Path to canu binary file. Default<br>tries if canu is in PATH;</p>\n</li>\n<li><p><strong>[--cd-hit-bin (PATH)]</strong> Path to cd-hit binary file. Default<br>tries if cd-hit is in PATH;</p>\n</li>\n<li><p><strong>[--fastANI-bin (PATH)]</strong> Path to the fastANI binary file.<br>Default tries if fastANI is in PATH;</p>\n</li>\n<li><p><strong>[--iqtree-bin (PATH)]</strong> Path to the iqtree binary file.<br>Default tries if iqtree is in PATH;</p>\n</li>\n<li><p><strong>[--mafft-bin (PATH)]</strong> Path to mafft binary file. Default<br>tries if mafft is in PATH;</p>\n</li>\n<li><p><strong>[--mash-bin (PATH)]</strong> Path to the mash binary file. Default<br>tries if mash is in PATH.</p>\n</li>\n<li><p><strong>[--muscle-bin (PATH)]</strong> Path to the muscle binary file.<br>Default tries if muscle is in PATH.</p>\n</li>\n<li><p><strong>[--orthofinder-bin (PATH)]</strong> Path to the orthofinder binary<br>file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li><p><strong>[--pal2nal-bin (PATH)]</strong> Path to the pal2nal.pl binary<br>file. Default tries if pal2nal.pl is in PATH;</p>\n</li>\n<li><p><strong>[--prodigal-bin (PATH)]</strong> Path to prodigal binary file.<br>Default tries if prodigal is in PATH;</p>\n</li>\n<li><p><strong>[--prokka-bin (PATH)]</strong> Path to prokka binary file. Default<br>tries if prokka is in PATH;</p>\n</li>\n<li><p><strong>[--roary-bin (PATH)]</strong> Path to the roary binary file.<br>Default tries if roary is in PATH;</p>\n</li>\n<li><p><strong>[--sickle-bin (PATH)]</strong> Path to the sickle-trim binary<br>file. Default tries if sickle is in PATH.</p>\n</li>\n<li><p><strong>[--snippy-bin (PATH)]</strong> Path to the snippy binary file.<br>Default tries if snippy is in PATH;</p>\n</li>\n<li><p><strong>[--snp-sites-bin (PATH)]</strong> Path to the snp-sites binary<br>file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li><p><strong>[--trimAL-bin (PATH)]</strong> Path to the trimAL binary file.<br>Default tries if trimAL is in PATH;</p>\n</li>\n<li><p><strong>[--unicycler-bin (PATH)]</strong> Path to the unicycler binary<br>file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Setup COG database</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong> Users should execute this after first<br>installation of pgcgap.</li>\n</ul>\n</li>\n<li><p>Check the required external programs (<strong>It is strongly recommended that this step be performed after the installation of PGCGAP</strong>):</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --check-external-programs</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><p>Example dataset can be download <a href=\"http://bcam.hzau.edu.cn/PGCGAP/PGCGAP_Examples.tar.gz\">here</a>.</p>\n<ul>\n<li><p><strong>Example 1:</strong> Perform all functions, take the <em>Escherichia coli</em> as an example, total 6 strains for analysis.</p>\n<p>  <strong>Notice</strong>: For the sake of flexibility, The &quot;VAR&quot; function needs to be added additionally.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --PanTree --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 2:</strong> Genome assembly.</p>\n<ul>\n<li><p>Illumina reads assembly</p>\n<p>In this dataset, the naming format of the genome is “strain_1.fastq.gz” and “strain_2.fastq.gz”. The string after the strain name is “_1.fastq.gz”, and its length is 11, so &quot;--suffix_len&quot; was set to 11.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Assemble with ABySS</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Assemble with SPAdes</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Assemble with AUTO</span></span><br><span class=\"line\">pgcgap --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>ONT reads assembly</p>\n<p>Oxford nanopore sequencing usually produces one reads file, so only the parameter of &quot;--reads1&quot; needs to be set, where the value is &quot;.fasta&quot;. “--genomeSize” is the estimated genome size, and users can check the genome size of similar strains in the NCBI database for reference. The parameter was set to &quot;4.8m&quot; here. The suffix of the reads file here is &quot;.fasta&quot; and its length is 6, so &quot;--suffix_len&quot; was set to 6.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>PacBio reads assembly</p>\n<p>PacBio also usually produces only one reads file &quot;pacbio.fastq&quot;, the parameter settings are similar to Oxford. The strain name is 6, so &quot;--suffix_len&quot; was set to 6.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Hybrid assembly of short reads and long reads</p>\n<p>Paired-end short reads and long reads in the directory “Reads&#x2F;Hybrid&#x2F;“ were used as inputs. Illumina reads and long reads must be from the same isolates.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Assemble --platform hybrid --ReadsPath Reads/Hybrid --short1 short_reads_1.fastq.gz --short2 short_reads_2.fastq.gz --long long_reads_high_depth.fastq.gz --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>Example 3</strong>: Gene prediction and annotation</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 4</strong>: Constructing single-copy core protein tree and core SNPs tree</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 5:</strong> Constructing single-copy core protein tree only.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 6:</strong> Conduct pan-genome analysis and construct a phylogenetic tree of single-copy core proteins called by roary. <strong><u>Applicable to v1.0.27 and later</u></strong>.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 7:</strong> Inference of orthologous gene groups and construct a phylogenetic tree of single-copy Orthologue proteins. <strong><u>Applicable to v1.0.29 and later</u></strong>.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 8:</strong> Compute whole-genome Average Nucleotide Identity (ANI).</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --ANI --threads 4 --queryL scaf.list --refL scaf.list --Scaf_suffix .fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 9:</strong> Genome and metagenome similarity estimation using MinHash.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --MASH --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 10:</strong> Run COG annotation for each strain.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --pCOG --threads 4 --strain_num 6 --<span class=\"built_in\">id</span> 40 --query_cover 70 --subject_cover 50 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 11:</strong> Variants calling and phylogenetic tree construction based on the reference genome.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 12:</strong> Screening of contigs for antimicrobial and virulence genes.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db all --identity 75 --coverage 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pgcgap --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file.</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class=\"line\">pgcgap --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\">pgcgap --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Generating-Input-files\"><a href=\"#Generating-Input-files\" class=\"headerlink\" title=\"Generating Input files\"></a>Generating Input files</h2><hr>\n<h3 id=\"Working-directory\"><a href=\"#Working-directory\" class=\"headerlink\" title=\"Working directory\"></a>Working directory</h3><p>The directory where the PGCGAP software runs.</p>\n<h3 id=\"Assemble\"><a href=\"#Assemble\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><p>Pair-end reads of all strains in a directory or PacBio reads or ONT reads (Default: .&#x2F;Reads&#x2F;Illumina&#x2F; under the working directory).</p>\n<h3 id=\"Annotate\"><a href=\"#Annotate\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"ANI\"><a href=\"#ANI\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><p>QUERY_LIST and REFERENCE_LIST files containing full paths to genomes, one per line (default: scaf.list under the working directory). If the “--Assemble” function was run first, the list file will be generated automatically.</p>\n<h3 id=\"MASH\"><a href=\"#MASH\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"CoreTree\"><a href=\"#CoreTree\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><p>Amino acids file (With “.faa” as the suffix) and nucleotide (With “.ffn” as the suffix) file of each strain placed into two directories (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;“ and “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;“). The “.faa” and “.ffn” files of the same strain should have the same prefix name. The name of protein IDs and gene IDs should be started with the strain name. The “Prokka” software was suggested to generate the input files. If the “--Annotate” function was run first, the files will be generated automatically. If the “--CDsPath” was set to “NO”, the nucleotide files will not be needed.</p>\n<h3 id=\"OrthoF\"><a href=\"#OrthoF\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><p>A set of protein sequence files (one per species) in FASTA format under a directory (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;“). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"Pan\"><a href=\"#Pan\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><p>GFF3 files (With “.gff” as the suffix) of each strain placed into a directory. They must contain the nucleotide sequence at the end of the file. All GFF3 files created by Prokka are valid (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"pCOG\"><a href=\"#pCOG\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><p>Amino acids file (With “.faa” as the suffix) of each strain placed into a directory (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;). If the “--Annotate” function was run first, the files will be generated automatically.</p>\n<h3 id=\"VAR\"><a href=\"#VAR\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p>Pair-end reads of all strains in a directory (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory).</p>\n</li>\n<li><p>The full path of reference genome in FASTA format or GenBank format (<strong>must be provided</strong>).</p>\n</li>\n</ul>\n<h3 id=\"AntiRes\"><a href=\"#AntiRes\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p>\n<h3 id=\"STREE\"><a href=\"#STREE\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><p>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</p>\n<h2 id=\"Output-Files\"><a href=\"#Output-Files\" class=\"headerlink\" title=\"Output Files\"></a>Output Files</h2><hr>\n<h3 id=\"Assemble-1\"><a href=\"#Assemble-1\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong></p>\n<p>  Directories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong></p>\n<p>  Directories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong></p>\n<p>  Directories contain ONT assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong></p>\n<p>  Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina&#x2F;</strong></p>\n<p>  Directory contains Illumina contigs&#x2F;scaffolds of all strains. &quot;*.filtered.fas&quot; is the genome after excluding short sequences. &quot;*.prefilter.stats&quot; describes the stats of the genome before filtering, and &quot;*.filtered.stats&quot; describes the stats of the genome after filtering.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford&#x2F;</strong></p>\n<p>  Directory contains ONT contigs&#x2F;scaffolds of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio&#x2F;</strong></p>\n<p>  Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"Annotate-1\"><a href=\"#Annotate-1\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation&#x2F;</strong></p>\n<p>  directories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;AAs&#x2F;</strong></p>\n<p>  Directory contain amino acids sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;CDs&#x2F;</strong></p>\n<p>  Directory contain nucleotide sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;GFF&#x2F;</strong></p>\n<p>  Directory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ANI-1\"><a href=\"#ANI-1\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong></p>\n<p>  The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong></p>\n<p>  file with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong></p>\n<p>  An ANI matrix of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong></p>\n<p>  The heatmap plot of &quot;ANIs.heatmap&quot;.</p>\n</li>\n</ul>\n<h3 id=\"MASH-1\"><a href=\"#MASH-1\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong></p>\n<p>  The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong></p>\n<p>  The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong></p>\n<p>  A similarity matrix of all genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong></p>\n<p>  A heat map plot of &quot;MASH.heatmap&quot;.</p>\n</li>\n</ul>\n<h3 id=\"CoreTree-1\"><a href=\"#CoreTree-1\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong></p>\n<p>  Concatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong></p>\n<p>  The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong></p>\n<p>  The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong></p>\n<p>  Concatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong></p>\n<p>  Core SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.treefile</strong></p>\n<p>  The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;&quot;Other_files&quot;</strong></p>\n<p>  Intermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"OrthoF-1\"><a href=\"#OrthoF-1\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong></p>\n<p>  Same as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong></p>\n<p>  Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong></p>\n<p>  Phylogenetic tree constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong></p>\n<p>  Phylogenetic tree constructed by IQ-TREE.</p>\n</li>\n</ul>\n<h3 id=\"Pan-1\"><a href=\"#Pan-1\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong></p>\n<p>  A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong></p>\n<p>  A graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong></p>\n<p>  A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong></p>\n<p>  Alignments of single-copy core proteins called by roary software.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong></p>\n<p>  A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong></p>\n<p>  A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong></p>\n<p>  see <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pCOG-1\"><a href=\"#pCOG-1\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong></p>\n<p>  Intermediate files.</p>\n</li>\n<li><p><strong>*.2Scog.table</strong></p>\n<p>  The super COG table of each strain.</p>\n</li>\n<li><p><strong>*.2Scog.table.pdf</strong></p>\n<p>  A plot of super COG table in pdf format.</p>\n</li>\n<li><p><strong>All_flags_relative_abundances.table</strong></p>\n<p>  A table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"VAR-1\"><a href=\"#VAR-1\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong></p>\n<p>  directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li><p><strong>Results&#x2F;Variants&#x2F;Core</strong></p>\n<p>  The directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.aln.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>core.aln.treefile</strong> : The best-fit model of evolution selected using IQ-TREE can be found in this file.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"AntiRes-1\"><a href=\"#AntiRes-1\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li>\n</ul>\n<h3 id=\"STREE-1\"><a href=\"#STREE-1\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.iqtree</strong> : Log of IQ-TREE.</li>\n</ul>\n<h2 id=\"License\"><a href=\"#License\" class=\"headerlink\" title=\"License\"></a>License</h2><hr>\n<p>PGCGAP is free software, licensed under GPLv3.</p>\n<h2 id=\"Feedback-and-Issues\"><a href=\"#Feedback-and-Issues\" class=\"headerlink\" title=\"Feedback and Issues\"></a>Feedback and Issues</h2><hr>\n<p>Please report any issues to the <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> or email us at <a href=\"mailto:&#x6c;&#x69;&#x61;&#x6f;&#x63;&#104;&#x65;&#110;&#108;&#97;&#110;&#114;&#117;&#x6f;&#x40;&#x77;&#x65;&#x62;&#109;&#x61;&#105;&#108;&#46;&#104;&#x7a;&#97;&#x75;&#x2e;&#101;&#x64;&#117;&#x2e;&#99;&#110;\">&#x6c;&#x69;&#x61;&#x6f;&#x63;&#104;&#x65;&#110;&#108;&#97;&#110;&#114;&#117;&#x6f;&#x40;&#x77;&#x65;&#x62;&#109;&#x61;&#105;&#108;&#46;&#104;&#x7a;&#97;&#x75;&#x2e;&#101;&#x64;&#117;&#x2e;&#99;&#110;</a>.</p>\n<h2 id=\"Citation\"><a href=\"#Citation\" class=\"headerlink\" title=\"Citation\"></a>Citation</h2><hr>\n<ul>\n<li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative<br>  genomics. <em>Protocol exchange</em>, 2022. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v6\">10.21203&#x2F;rs.2.21224&#x2F;v6</a></p>\n</li>\n<li><p>If you use &quot;--Assemble&quot;, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li><p>If you use &quot;--Annotate&quot;, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btu153\">Prokka</a>.</p>\n</li>\n<li><p>If you use &quot;--CoreTree&quot;, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li><p>If you use &quot;--Pan&quot;, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>.</p>\n</li>\n<li><p>If you use &quot;--OrthoF&quot;, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a> or <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a>.</p>\n</li>\n<li><p>If you use &quot;--ANI&quot;, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li><p>If you use &quot;--MASH&quot;, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li><p>If you use &quot;--VAR&quot;, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>, <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li><p>If you use &quot;--AntiRes&quot;, please also cite<br>  <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li><p>If you use &quot;--STREE&quot;, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><hr>\n<h3 id=\"Q1-VAR-function-ran-failed-to-get-annotated-VCFs-and-Core-results\"><a href=\"#Q1-VAR-function-ran-failed-to-get-annotated-VCFs-and-Core-results\" class=\"headerlink\" title=\"Q1 VAR function ran failed to get annotated VCFs and Core results\"></a>Q1 VAR function ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in &quot;strain_name.log&quot; under Results&#x2F;Variants&#x2F;&lt;strain_name&gt;&#x2F; directory. If you find a sentence like &quot;WARNING: All frames are zero! This seems rather odd, please check that &#39;frame&#39; information in your &#39;genes&#39; file is accurate.&quot; This is a snpEff error. Users can install JDK8 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install java-jdk=8.0.112</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a href=\"#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\" class=\"headerlink\" title=\"Q2 Could not determine version of minced please install version 2 or higher\"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running the Annotate function, this error could happen, the error message shows as following:</p>\n<pre><code>Error: A JNI error has occurred, please check your installation and try again\nException in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:763)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)\n    at java.net.URLClassLoader.access$100(URLClassLoader.java:74)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:369)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:363)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:362)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)\n[01:09:40] Could not determine version of minced - please install version 2.0 or higher\n</code></pre>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install minced=0.3</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\"><a href=\"#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\" class=\"headerlink\" title=\"Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib\"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function &quot;VAR&quot; on macOS. It is an error of openssl. Users can solve this problem as the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Firstly, install brew if have not installed before</span></span><br><span class=\"line\">ruby -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Install openssl with brew</span></span><br><span class=\"line\">brew install openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Create the soft link for libraries</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations.</p>\n<h3 id=\"Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\"><a href=\"#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\" class=\"headerlink\" title=\"Q4 Use of uninitialized value in require at Encode.pm line 61\"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function &quot;Pan&quot;. It is a warning of Roary software. The content of line 61 is &quot;require Encode::ConfigLocal;&quot;. Users can ignore the warning. Click <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><hr>\n<ul>\n<li><p>V1.0.3</p>\n<ul>\n<li>Updated ANI function.</li>\n</ul>\n</li>\n<li><p>V1.0.4</p>\n<ul>\n<li>Add parallel for function &quot;pCOG&quot;.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.5</p>\n<ul>\n<li>Bug repair for the input of gubbins.</li>\n</ul>\n</li>\n<li><p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li><p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third-generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function &quot;COG&quot; to &quot;pCOG&quot;.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.8</p>\n<ul>\n<li>Add the &quot;MASH&quot; function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li><p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to &quot;Pan&quot;.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan<br>chart has been added.</li>\n<li>Fixed a bug for plotting the ANI matrix.</li>\n</ul>\n</li>\n<li><p>V1.0.10</p>\n<ul>\n<li>Add the &quot;AntiRes&quot; function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li><p>V1.0.11</p>\n<ul>\n<li>Users now can choose &quot;abyss&quot; or &quot;spades&quot; for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command &quot;pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]&quot;, and can look up the examples of each module with command &quot;pgcgap Examples&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls &quot;ABySS&quot; for genome assembly. When the assembled N50 is less than 50,000, it automatically calls &quot;SPAdes&quot; to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li><p>V1.0.13</p>\n<ul>\n<li>Fixed the &quot;running error&quot; bug of function &quot;Assess&quot; in module &quot;ACC&quot;.</li>\n<li>Added module &quot;STREE&quot; for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li><p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n<li>Fixed the error of function &quot;Assess&quot; in module &quot;ACC&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li><p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running &quot;Annotate&quot; analysis to avoid program crash.</li>\n</ul>\n</li>\n<li><p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module &quot;CoreTree&quot;.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li><p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module &quot;STREE&quot;.</li>\n</ul>\n</li>\n<li><p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li><p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module &quot;VAR&quot;.</li>\n<li>Fixed a little bug of module &quot;CoreTree&quot; to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.21</p>\n<ul>\n<li>Change the default search program &quot;blast&quot; to &quot;diamond&quot; of<br>module &quot;OrthoF&quot;.</li>\n<li>Fixed a bug of module &quot;pCOG&quot; to output the right figure.</li>\n</ul>\n</li>\n<li><p>V1.0.22</p>\n<ul>\n<li>The drawing function of module &quot;ANI&quot; and module &quot;MASH&quot; has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module &quot;ANI&quot;, that is no heatmap will be drawn when there is &quot;NA&quot; in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li><p>V1.0.23</p>\n<ul>\n<li>The &quot;--Assess&quot; function of module &quot;ACC&quot; was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li><p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module &quot;Pan&quot; to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module &quot;CoreTree&quot; and &quot;Pan&quot;.</li>\n<li>The parameter &quot;--identi&quot; was added into module &quot;Pan&quot; to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li><p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module &quot;ANI&quot; and &quot;MASH&quot;.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the &quot;ANI&quot; and &quot;MASH&quot; analysis.</li>\n</ul>\n</li>\n<li><p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li><p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command &quot;pgcgap --check-update&quot;.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter &quot;CoreTree&quot; in the module Pan to avoid program termination caused by the &quot;&gt;&quot; in non-sequence lines.</li>\n</ul>\n</li>\n<li><p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the &quot;permission denied&quot; error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li><p>V1.0.30</p>\n<ul>\n<li>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</li>\n<li>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</li>\n<li>Added the option of using fasttree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</li>\n</ul>\n</li>\n<li><p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing of IQ-TREE was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li><p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try &quot;pgcgap Examples&quot; to have a look.</li>\n<li>Updated module AntiRes: the parameter --db had been modified to add choices of &quot;all&quot; and &quot;megares&quot;.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n<li><p>V1.0.33</p>\n<ul>\n<li>Updated module CoreTree: <a href=\"https://bitsandbugs.org/2019/11/06/two-easy-ways-to-run-iq-tree-with-the-correct-number-of-constant-sites/\">Run IQ-TREE with the correct number of constant sites</a> when constructing the single-copy core SNPs tree.</li>\n<li>Updated module VAR: Use &quot;SNP-SITE&quot; and &quot;IQ-TREE -fconst&quot; to generate SNP sites from the &quot;core.full.aln&quot; and construct the phylogenetic tree.</li>\n<li>Updated module pCOG: Replace blast with diamond to speed up analysis.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"比较基因组学","path":"api/tags/比较基因组学.json"},{"name":"PGCGAP","path":"api/tags/PGCGAP.json"}]},{"title":"PGCGAP中文说明","slug":"PGCGAP中文说明","date":"2019-04-28T07:22:33.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/PGCGAP中文说明.json","excerpt":null,"keywords":null,"cover":null,"content":"<p><strong>为了方便广大中文用户学习PGCGAP的使用，特意书写该中文文档，但中文文档更新较慢，强烈建议大家阅读英文文档！</strong></p>\n<span id=\"more\"></span>\n\n<p><a href=\"https://liaochenlanruo.github.io/pgcgap\">English Readme</a> | <a href=\"https://liaochenlanruo.github.io/2019/04/28/PGCGAP%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/\">中文说明</a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>PGCGAP是用于原核生物基因组学和比较基因组学分析管道，目前该管道包含12个模块，可以接受Illumina双端reads、Oxford reads或PacBio reads作为输入，可以完成基因组组装、基因预测和注释，并可以进行比较基因组学分析，包括构建单拷贝核心蛋白进化树以及单拷贝核心基因SNPs进化树，泛基因组分析与进化树构建，全基因组平均核苷酸一致性（ANI）计算，同源蛋白家族聚类及进化树构建，COG注释，SNPs和INDELs calling，抗生素抗性基因&#x2F;毒力因子预测，Multi-FASTA进化树构建，组装后基因组短序列过滤与统计信息呈现（genome size，GC content……）。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>PGCGAP可以安装于Windows子系统Linux（WSL）、Linux x64系统以及macOS中。</p>\n<p><strong>Step1：通过<a href=\"https://bioconda.github.io/user/install.html#install-conda\">Bioconda</a>安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> create -n pgcgap python=3.7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> install pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>声明：用conda安装时一直在“Solving environment”怎么办？</strong>随着加入conda的软件越来越多，使其索引库变的庞大，因此安装新的软件时需要逐一验证软件间的兼容性，会耗费大量时间。严重的时候会无法完成软件的安装，这个时候坐以待毙是不行的。下面介绍两种办法解决此问题：<br/></p>\n\n\n<ul>\n<li><p>Method 1: 使用mamba (非常快) 替代conda。前提是已经用conda创建好了pgcgap的虚拟环境：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> install mamba -c conda-forge</span><br><span class=\"line\"><span class=\"variable\">$mamba</span> install pgcgap</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Method 2: 使用本人提供的pgcgap<a href=\"https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.ym\">配置文件</a>来创建环境并安装PGCGAP：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># download pgcgap_latest_env.yml</span></span><br><span class=\"line\"><span class=\"variable\">$wget</span> https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.yml</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class=\"line\"><span class=\"variable\">$conda</span> <span class=\"built_in\">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure>\n<br/></li>\n</ul>\n<p><strong>Step2：配置COG数据库</strong> (初次安装PGCGAP后需要执行此步骤)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$conda</span> deactivate</span><br></pre></td></tr></table></figure>\n\n<p><strong>Step3: 升级PGCGAP(升级版本时运行)</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> activate pgcgap</span><br><span class=\"line\"><span class=\"variable\">$conda</span> update pgcgap</span><br><span class=\"line\"><span class=\"comment\"># v1.0.28以后可通过如下命令升级</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-update</span><br></pre></td></tr></table></figure>\n\n<p><strong>此外，用户也可以通过容器(docker)安装PGCGAP</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$docker</span> pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：</strong> 前提是用户电脑中安装了<a href=\"https://www.docker.com/\">Docker</a>，Docker可以跨平台使用。可用的tag可<a href=\"https://quay.io/repository/biocontainers/pgcgap?tab=tags\">在此</a>查询，建议安装最新版。</p>\n<h2 id=\"依赖包\"><a href=\"#依赖包\" class=\"headerlink\" title=\"依赖包\"></a>依赖包</h2><ul>\n<li><a href=\"https://github.com/tseemann/abricate\">Abricate</a></li>\n<li><a href=\"http://www.bcgsc.ca/platform/bioinfo/software/abyss/\">ABySS</a></li>\n<li><a href=\"http://canu.readthedocs.org/\">Canu</a></li>\n<li><a href=\"http://weizhongli-lab.org/cd-hit/\">CD-HIT</a></li>\n<li><a href=\"https://www.gnu.org/software/coreutils/\">Coreutils</a></li>\n<li><a href=\"https://github.com/bbuchfink/diamond\">Diamond</a></li>\n<li><a href=\"https://github.com/ParBLiSS/FastANI\">FastANI</a></li>\n<li><a href=\"http://www.atgc-montpellier.fr/fastme/binaries.php\">Fastme</a></li>\n<li><a href=\"https://github.com/OpenGene/fastp\">Fastp</a></li>\n<li><a href=\"http://www.microbesonline.org/fasttree\">FastTree</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/gubbins\">Gubbins</a> &gt;&#x3D;2.3.4</li>\n<li><a href=\"https://github.com/samtools/htslib\">Htslib</a></li>\n<li><a href=\"http://www.iqtree.org/\">IQ-TREE</a></li>\n<li><a href=\"https://mafft.cbrc.jp/alignment/software/\">Mafft</a></li>\n<li><a href=\"https://github.com/marbl/Mash\">Mash</a></li>\n<li><a href=\"https://github.com/soedinglab/mmseqs2\">Mmseqs2</a></li>\n<li><a href=\"https://www.ebi.ac.uk/Tools/msa/muscle/\">Muscle</a></li>\n<li><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download\">NCBI-blast+</a></li>\n<li><a href=\"https://github.com/davidemms/OrthoFinder\">OrthoFinder</a></li>\n<li><a href=\"https://openjdk.java.net/\">OpenJDK8</a></li>\n<li><a href=\"http://www.bork.embl.de/pal2nal/\">PAL2NAL v14</a></li>\n<li><a href=\"http://trimal.cgenomics.org/\">trimAL</a></li>\n<li><a href=\"http://www.perl.org/get.html\">Perl</a> &amp; the modules<ul>\n<li><a href=\"http://metacpan.org/pod/BioPerl\">perl-bioperl</a></li>\n<li><a href=\"http://metacpan.org/pod/Data::Dumper\">perl-data-dumper</a></li>\n<li><a href=\"http://metacpan.org/pod/File::Tee\">perl-file-tee</a></li>\n<li><a href=\"http://metacpan.org/pod/Getopt::Long\">perl-getopt-long</a></li>\n<li><a href=\"http://search.cpan.org/~marekr/Pod-Usage-1.69/\">perl-pod-usage</a></li>\n<li><a href=\"https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm\">perl-parallel-forkmanager</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/tseemann/prokka\">Prokka</a></li>\n<li><a href=\"https://www.python.org/\">Python</a> &amp; the modules<ul>\n<li><a href=\"https://biopython.org/\">biopython</a></li>\n<li><a href=\"https://matplotlib.org/\">matplotlib</a></li>\n<li><a href=\"http://www.numpy.org/\">numpy</a></li>\n<li><a href=\"http://pandas.pydata.org/\">pandas</a></li>\n<li><a href=\"http://seaborn.pydata.org/\">seaborn</a></li>\n</ul>\n</li>\n<li><a href=\"https://www.r-project.org/\">R</a> &amp; the packages<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/corrplot/index.html\">corrplot</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/ggplot2/\">ggplot2</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/gplots/\">gplots</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/pheatmap/index.html\">pheatmap</a></li>\n<li><a href=\"https://cran.r-project.org/web/packages/plotrix/\">plotrix</a></li>\n</ul>\n</li>\n<li><a href=\"https://sanger-pathogens.github.io/Roary/\">Roary</a></li>\n<li><a href=\"https://github.com/najoshi/sickle\">Sickle-trim</a></li>\n<li><a href=\"https://github.com/tseemann/snippy\">Snippy</a></li>\n<li><a href=\"https://github.com/sanger-pathogens/snp-sites\">Snp-sites</a></li>\n<li><a href=\"https://github.com/rrwick/Unicycler\">unicycler</a></li>\n<li><a href=\"https://www.gnu.org/software/wget/\">wget</a></li>\n</ul>\n<h2 id=\"PGCGAP用法\"><a href=\"#PGCGAP用法\" class=\"headerlink\" title=\"PGCGAP用法\"></a>PGCGAP用法</h2><ul>\n<li><p><strong>显示帮助信息：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>管道用法：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [modules] [options]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>展示各模块的参数：</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>__展示各模块的运行示例：__（这货是我用的最多的）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> Examples</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>配置COG数据库：</strong> (初次安装PGCGAP后需要配置COG数据库)</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --setup-COGdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>功能模块：</strong></p>\n<ul>\n<li><p><strong>[--All]</strong>                          运行Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH 和 pCOG模块</p>\n</li>\n<li><p><strong>[--Assemble]</strong>                     基因组组装</p>\n</li>\n<li><p><strong>[--Annotate]</strong>                     基因预测及注释</p>\n</li>\n<li><p><strong>[--CoreTree]</strong>                     构建单拷贝核心蛋白进化树与核心SNPs进化树</p>\n</li>\n<li><p><strong>[--Pan]</strong>                          泛基因组分析并构建单拷贝核心蛋白进化树</p>\n</li>\n<li><p><strong>[--OrthoF]</strong>                       同源蛋白家族聚类及单拷贝直系同源蛋白进化树构建</p>\n</li>\n<li><p><strong>[--ANI]</strong>                          计算平均核苷酸一致性 ( ANI )</p>\n</li>\n<li><p><strong>[--MASH]</strong>                         通过MinHash估算基因组&#x2F;宏基因组相似性</p>\n</li>\n<li><p><strong>[--pCOG]</strong>                         COG注释</p>\n</li>\n<li><p><strong>[--VAR]</strong>                          变异检测并构建核心基因组进化树</p>\n</li>\n<li><p><strong>[--AntiRes]</strong>                      从基因组(contigs&#x2F;scaffolds)中预测抗生素抗性基因或毒力基因</p>\n</li>\n<li><p><strong>[--STREE]</strong>                        基于Multi-FASTA序列(所有序列在一个文件中)构建系统发育树</p>\n</li>\n<li><p><strong>[--ACC]</strong>                          一些实用的附加程序(目前只开发了”Assess”用于对基因组中的短序列进行过滤，并评估过滤前后的基因组状态)</p>\n</li>\n</ul>\n</li>\n<li><p><strong>全局参数（请参照英文版，参数有所改变，中文版暂时没有时间修改）：</strong></p>\n<ul>\n<li><p><strong>[--strain_num (INT)]</strong>             [Required by “--All”, “--CoreTree”, “--Pan”, “--VAR” and “--COG”] 用于分析的菌株数目，不包含参考基因组</p>\n</li>\n<li><p><strong>[--ReadsPath (PATH)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] 所有菌株测序reads所在的目录路径  Default .&#x2F;Reads&#x2F;Illumina)</p>\n</li>\n<li><p><strong>[--scafPath (PATH)]</strong>              [Required by “--All”, “--Assess”, “--Annotate” and “--MASH”] contigs&#x2F;scaffolds的存放路径 (Default “Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina”)</p>\n</li>\n<li><p><strong>[--AAsPath (PATH)]</strong>               [Required by “--All”, “--CoreTree”, “--OrthoF” and “--pCOG”] 所有菌株的氨基酸序列文件的存放路径 (Default “.&#x2F;Results&#x2F;Annotations&#x2F;AAs”)</p>\n</li>\n<li><p><strong>[--reads1 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 1的后缀名 (例如 reads 1 的名字为 “YBT-1520_L1_I050.R1.clean.fastq.gz”，”YBT-1520” 是菌株名，则后缀名为 “.R1.clean.fastq.gz”)</p>\n</li>\n<li><p><strong>[--reads2 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 2的后缀名</p>\n</li>\n<li><p><strong>[--Scaf_suffix (STRING)]</strong>         [Required by “--All”, “--Assess”, “--Annotate” “MASH” and “--ANI”] contigs&#x2F;scaffolds的后缀名 (Default -8.fa)</p>\n</li>\n<li><p><strong>[--filter_length (INT)]</strong>          [Required by “--All”, “--Assemble” and “--Assess”]&gt; Sequences shorter than the ‘filter_length’ will be deleted from the assembled genomes. ( Default 200 )</p>\n</li>\n<li><p><strong>[--codon (INT)]</strong>                  [Required by “--All”, “--Annotate”, “--CoreTree” and “--Pan”] 翻译密码子表 (Default 11)</p>\n<ul>\n<li>1                             Universal code</li>\n<li>2                             Vertebrate mitochondrial code</li>\n<li>3                             Yeast mitochondrial code</li>\n<li>4                             Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma&#x2F;Spiroplasma code</li>\n<li>5                             Invertebrate mitochondrial</li>\n<li>6                             Ciliate, Dasycladacean and Hexamita nuclear code</li>\n<li>9                             Echinoderm and Flatworm mitochondrial code</li>\n<li>10                            Euplotid nuclear code</li>\n<li>11                            Bacterial, archaeal and plant plastid code ( Default )</li>\n<li>12                            Alternative yeast nuclear code</li>\n<li>13                            Ascidian mitochondrial code</li>\n<li>14                            Alternative flatworm mitochondrial code</li>\n<li>15                            Blepharisma nuclear code</li>\n<li>16                            Chlorophycean mitochondrial code</li>\n<li>21                            Trematode mitochondrial code</li>\n<li>22                            Scenedesmus obliquus mitochondrial code</li>\n<li>23                            Thraustochytrium mitochondrial code</li>\n</ul>\n</li>\n<li><p><strong>[--suffix_len (INT)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] <strong>(强烈建议设置此项)</strong> reads后缀的长度。例如 “YBT-1520_L1_I050.R1.clean.fastq.gz” 的 --suffix_len 为 26 (“YBT-1520” 为菌株名) (Default 0)</p>\n</li>\n<li><p><strong>[--logs (STRING)]</strong>                Log文件的名字 (Default Logs.txt)</p>\n</li>\n<li><p><strong>[--threads (INT)]</strong>                运行程序时调用的线程数目 (Default 4)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>各模块的局部参数：</strong></p>\n<ul>\n<li><p><strong>--Assemble</strong></p>\n<ul>\n<li><p><strong>[--platform (STRING)]</strong>        [Required] 测序平台，可以选择 “illumina”, “pacbio” 和 “oxford” (Default illumina)</p>\n</li>\n<li><p><strong>[--assembler (STRING)]</strong>       [Required] 用于illumina数据组装的软件，可选”abyss”, “spades” 或”auto” ( Default abyss )</p>\n</li>\n<li><p><strong>[--kmmer (INT)]</strong>              [Required] Illumina数据组装时采用的 k-mer 大小 (Default 81)</p>\n</li>\n<li><p><strong>[--genomeSize (FLOAT)]</strong>       [Required] 预估的基因组大小，如 3.7m、2.8g，组装 PacBio data 和 Oxford data 时需要设置此项 (Default Unset)</p>\n</li>\n<li><p><strong>[--short1 (STRING)]</strong>           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--short2 (STRING)]</strong>           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--long (STRING)]</strong>             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p>\n</li>\n<li><p><strong>[--hout (STRING)]</strong>             [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--Annotate</strong></p>\n<ul>\n<li><p><strong>[--genus (STRING)]</strong>           菌株的属名 ( Default “NA” )</p>\n</li>\n<li><p><strong>[--species (STRING)]</strong>         菌株的种名 ( Default “NA”)</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--CoreTree</strong></p>\n<ul>\n<li><p><strong>[--CDsPath (PATH)]</strong>           [Required] 包含所有菌株核苷酸序列文件的路径，如果设置为”NO”，将不会构建核心SNPs进化树 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;CDs” )</p>\n</li>\n<li><p><strong>[-c (FLOAT)]</strong>                 序列一致性 (identity) 阈值 ( Default 0.5)</p>\n</li>\n<li><p><strong>[-n (INT)]</strong>                   Word_length,  -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p>\n</li>\n<li><p><strong>[-G (INT)]</strong>                   Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p>\n</li>\n<li><p><strong>[-t (INT)]</strong>                   Tolerance for redundance ( Default 0 )</p>\n</li>\n<li><p><strong>[-aL (FLOAT)]</strong>                Alignment coverage for the longer sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.5 )</p>\n</li>\n<li><p><strong>[-aS (FLOAT)]</strong>                Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p>\n</li>\n<li><p><strong>[-g (INT)]</strong>                   If set to 0, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode, Default 1)</p>\n</li>\n<li><p><strong>[-d (INT)]</strong>                   length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--Pan</strong></p>\n<ul>\n<li><p><strong>[--GffPath (PATH)]</strong>           [Required] 存放所有菌株GFF3格式文件的路径 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;GFF” )</p>\n</li>\n<li><p><strong>[--identi (INT)]</strong>                  Minimum percentage identity for blastp ( Default 95 )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n- __\\-\\-OrthoF__\n\n<pre><code>- __[\\-\\-Sprogram (STRING)]__        序列对比程序，Options: blast, mmseqs, blast_gz, diamond ( Default blast)\n</code></pre>\n<br/>\n\n<ul>\n<li><p><strong>--ANI</strong></p>\n<ul>\n<li><p><strong>[--queryL (FILE)]</strong>            [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--refL (FILE)]</strong>              [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p>\n</li>\n<li><p><strong>[--ANIO (FILE)]</strong>              The name of output file ( Default “Results&#x2F;ANI&#x2F;ANIs” )</p>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--VAR</strong></p>\n<ul>\n<li><p><strong>[--refgbk (FILE)]</strong>            [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: “&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk”</p>\n</li>\n<li><p><strong>[--qualtype (STRING)]</strong>        [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p>\n</li>\n<li><p><strong>[--qual (INT)]</strong>               Threshold for trimming based on average quality in a window. ( Default 20 )</p>\n</li>\n<li><p><strong>[--length (INT)]</strong>             Threshold to keep a read based on length after trimming. ( Default 20 )</p>\n</li>\n<li><p><strong>[--mincov (INT)]</strong>             The minimum number of reads covering a site to be considered ( Default 10 )</p>\n</li>\n<li><p><strong>[--minfrac (FLOAT)]</strong>          The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p>\n</li>\n<li><p><strong>[--minqual (INT)]</strong>            The minimum VCF variant call “quality” ( Default 100 )</p>\n</li>\n<li><p><strong>[--ram (INT)]</strong>                Try and keep RAM under this many GB ( Default 8 )</p>\n</li>\n<li><p><strong>[--tree_builder (STRING)]</strong>    Application to use for tree building [raxml|fasttree|hybrid] ( Default fasttree)</p>\n</li>\n<li><p><strong>[--iterations (INT)]</strong>         Maximum No. of iterations for gubbins ( Default 5 )</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>--AntiRes</strong></p>\n<ul>\n<li><p><strong>[--db (STRING)]</strong>              [Required] 用于分析的数据库, options: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">argannot</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">card</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">ecoh</a>, ecoli_vf, <a href=\"https://www.biorxiv.org/content/10.1101/550707v1\">ncbi</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">plasmidfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">resfinder</a> and <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">vfdb</a>. ( Default ncbi )</p>\n</li>\n<li><p><strong>[--identity (INT)]</strong>           [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p>\n</li>\n<li><p><strong>[--coverage (INT)]</strong>           [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--STREE</strong></p>\n<ul>\n<li><p><strong>[--seqfile (STRING)]</strong>        [Required] Path of the sequence file for analysis.</p>\n</li>\n<li><p><strong>[--seqtype (INT)]</strong>           [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p>\n</li>\n<li><p><strong>[--bsnum (INT)]</strong>             [Required] Times for bootstrap. ( Default 1000 )</p>\n</li>\n</ul>\n</li>\n<li><p><strong>--ACC</strong></p>\n<ul>\n<li><strong>[--Assess (STRING)]</strong>         Filter short sequences in the genome and assess the status of the genome(详细参数通过”pgcgap ACC”查看)</li>\n</ul>\n</li>\n<li><p><strong>依赖软件安装目录</strong></p>\n<p>Not needed if they were in the environment variables path. Users can check with the “–check-external-programs” option for the essential programs.</p>\n<br/>\n</li>\n<li><p><strong>[--abricate-bin (PATH)]</strong>          Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--abyss-bin (PATH)]</strong>             Path to abyss binary file. Default tries if abyss is in PATH;</p>\n</li>\n<li><p><strong>[--canu-bin (PATH)]</strong>              Path to canu binary file. Default tries if canu is in PATH;</p>\n</li>\n<li><p><strong>[--cd-hit-bin (PATH)]</strong>            Path to cd-hit binary file. Default tries if cd-hit is in PATH;</p>\n</li>\n<li><p><strong>[--fastANI-bin (PATH)]</strong>           Path to the fastANI binary file. Default tries if fastANI is in PATH;</p>\n</li>\n<li><p><strong>[--Gblocks-bin (PATH)]</strong>           Path to the Gblocks binary file. Default tries if Gblocks is in PATH;</p>\n</li>\n<li><p><strong>[--gubbins-bin (PATH)]</strong>           Path to the run_gubbins.py binary file. Default tries if run_gubbins.py is in PATH;</p>\n</li>\n<li><p><strong>[--iqtree-bin (PATH)]</strong>            Path to the iqtree binary file. Default tries if iqtree is in PATH;</p>\n</li>\n<li><p><strong>[--mafft-bin (PATH)]</strong>             Path to mafft binary file. Default tries if mafft is in PATH;</p>\n</li>\n<li><p><strong>[--mash-bin (PATH)]</strong>              Path to the mash binary file. Default tries if mash is in PATH.</p>\n</li>\n<li><p><strong>[--modeltest-ng-bin (PATH)]</strong>      Path to the modeltest-ng binary file. Default tries if modeltest-ng is in PATH.</p>\n</li>\n<li><p><strong>[--muscle-bin (PATH)]</strong>            Path to the muscle binary file. Default tries if muscle is in PATH.</p>\n</li>\n<li><p><strong>[--orthofinder-bin (PATH)]</strong>       Path to the orthofinder binary file. Default tries if orthofinder is in PATH;</p>\n</li>\n<li><p><strong>[--pal2nal-bin (PATH)]</strong>           Path to the pal2nal.pl binary file. Default tries if pal2nal.pl is in PATH;</p>\n</li>\n<li><p><strong>[--prodigal-bin (PATH)]</strong>          Path to prodigal binary file. Default tries if prodigal is in PATH;</p>\n</li>\n<li><p><strong>[--prokka-bin (PATH)]</strong>            Path to prokka binary file. Default tries if prokka is in PATH;</p>\n</li>\n<li><p><strong>[--raxml-ng-bin (PATH)]</strong>          Path to the raxml-ng binary file. Default tries if raxml-ng is in PATH;</p>\n</li>\n<li><p><strong>[--roary-bin (PATH)]</strong>             Path to the roary binary file. Default tries if roary is in PATH;</p>\n</li>\n<li><p><strong>[--sickle-bin (PATH)]</strong>            Path to the sickle-trim binary file. Default tries if sickle is in PATH.</p>\n</li>\n<li><p><strong>[--snippy-bin (PATH)]</strong>            Path to the snippy binary file. Default tries if snippy is in PATH;</p>\n</li>\n<li><p><strong>[--snp-sites-bin (PATH)]</strong>         Path to the snp-sites binary file. Default tries if snp-sites is in PATH;</p>\n</li>\n<li><p><strong>[--unicycler-bin (PATH)]</strong>         Path to the unicycler binary file. Default tries if unicycler is in PATH;</p>\n</li>\n</ul>\n<br/>\n\n<ul>\n<li><p><strong>配置COG数据库</strong></p>\n<ul>\n<li><strong>[--setup-COGdb]</strong>                  首次安装PGCGAP后需要执行此步</li>\n</ul>\n</li>\n</ul>\n<br/>\n\n\n<ul>\n<li><p>检查依赖软件包是否安装 (<strong>强烈建议在安装完PGCGAP之后运行此步</strong>):</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --check-external-programs</span><br></pre></td></tr></table></figure></li>\n</ul>\n<br/>\n\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><ul>\n<li><p><strong>Example 1:</strong> 执行所有模块，以 <em>Escherichia coli</em> 的6个 Illumina 双端 reads 为数据集。</p>\n<p>__注__：为了提高灵活性，”VAR” 模块需要额外添加。<br/></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 2:</strong> 基因组组装。</p>\n<ul>\n<li><p><strong>Illumina双端reads组装</strong></p>\n<p>该数据集中，reads的命名格式为 “strain_1.fastq.gz” 和 “strain_2.fastq.gz”。 后缀名为 “_1.fastq.gz”，其长度为11，因此 “–suffix_len” 设置为11。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class=\"line\">\t </span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>Oxford reads组装</strong></p>\n<p>Oxford nanopore 测序仅产生一个reads文件，因此只需要设置 “–reads1” 参数，其值为 “.fasta”。 “–genomeSize” 是预估的基因组大小，用户可以到NCBI数据库中查看同物种基因组的大小作为参考，此处设置为 “4.8m”。Reads 文件的后缀名为 “.fasta”，其长度为6，因此将 “–suffix_len” 设置为6。</p>\n</li>\n</ul>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>PacBio reads组装</strong></li>\n</ul>\n<p> PacBio同样只产生一个文件 “pacbio.fastq”，参数设置与Oxford类似。此处，文件的后缀名为 “.fastq”，其长度为6，因此 “–suffix_len” 设置为6。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 3:</strong> 基因预测及注释。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 4:</strong> 构建单拷贝核心蛋白进化树与核心SNPs进化树。</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 5:</strong> 仅构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 6:</strong> 进行泛基因组分析并构建单拷贝核心蛋白进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 7:</strong> 同源蛋白家族聚类分析并构建进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 8:</strong> 计算两两基因组之间的平均核苷酸一致性(ANI)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ANI --threads 4 --queryL scaf.list --refL scaf.list --ANIO Results/ANI/ANIs --Scaf_suffix .fa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 9:</strong> 通过MinHash计算基因组及宏基因组的相似性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --MASH --scafPath &lt;PATH&gt; --Scaf_suffix &lt;STRING&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 10:</strong> 对所有基因组进行COG注释。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --pCOG --threads 4 --strain_num 6 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 11:</strong> 变异(SNPs, Indels)检测与注释，并构建基于参考基因组的SNPs进化树。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 12:</strong> 从基因组中寻找抗生素抗性基因或毒力基因。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db ncbi --identity 75 --coverage 50</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pgcgap</span> --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class=\"line\"><span class=\"variable\">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"准备输入文件\"><a href=\"#准备输入文件\" class=\"headerlink\" title=\"准备输入文件\"></a>准备输入文件</h2><h3 id=\"工作目录\"><a href=\"#工作目录\" class=\"headerlink\" title=\"工作目录\"></a>工作目录</h3><ul>\n<li>PGCGAP的运行目录。</li>\n</ul>\n<h3 id=\"Assemble\"><a href=\"#Assemble\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li>将所有双端reads、或PacBio reads 或 Oxford nanopore reads存于某个目录下 (Default: .&#x2F;Reads&#x2F;Illumina&#x2F;)。</li>\n</ul>\n<h3 id=\"Annotate\"><a href=\"#Annotate\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"ANI\"><a href=\"#ANI\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li>QUERY_LIST 和 REFERENCE_LIST 文件，每个文件中含有需要计算的基因组的绝对路径，每个基因组一行 (default: 工作目录下的”scaf.list”)。若先运行了 “–Assemble” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"CoreTree\"><a href=\"#CoreTree\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li>将所有菌株的氨基酸文件 (后缀名必须为 “.faa”) 和核苷酸文件 (需以 “.ffn” 为后缀) 分别存放于两个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;” 和 “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;”)。“.faa” 和 “.ffn” 文件需要有相同的前缀名字，且 protein IDs 和 gene IDs 需以菌株名开头。建议用 “Prokka” 软件获取输入文件，若已经运行了 “–Annotate” 模块，则该模块的输入文件会自动生产。若 “–CDsPath” 设置为 “NO”，则不需要提供核苷酸文件，但也不会生产核心SNPs进化树。</li>\n</ul>\n<h3 id=\"MASH\"><a href=\"#MASH\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li>\n</ul>\n<h3 id=\"OrthoF\"><a href=\"#OrthoF\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li>所有菌株的fasta格式氨基酸文件(每个菌株一个文件)存放于一个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;”)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"Pan\"><a href=\"#Pan\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li>包含所有菌株GFF3 文件 (With “.gff” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;);</li>\n<li>若先运行了 “–Annotate” 模块，上述文件会自动生成。</li>\n</ul>\n<h3 id=\"pCOG\"><a href=\"#pCOG\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li>存放所有菌株的fasta格式氨基酸序列文件 (With “.faa” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li>\n</ul>\n<h3 id=\"VAR\"><a href=\"#VAR\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li>包含所有菌株的 Pair-end reads 的目录路径 (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory)。</li>\n<li>fasta 格式或 GenBank 格式的参考基因组的绝对路径 (<strong>必需提供</strong>)。</li>\n</ul>\n<h3 id=\"AntiRes\"><a href=\"#AntiRes\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li>存放基因组(complete or draft)的目录 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</li>\n</ul>\n<h3 id=\"STREE\"><a href=\"#STREE\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</li>\n</ul>\n<h2 id=\"输出文件解读\"><a href=\"#输出文件解读\" class=\"headerlink\" title=\"输出文件解读\"></a>输出文件解读</h2><h3 id=\"Assemble-1\"><a href=\"#Assemble-1\" class=\"headerlink\" title=\"Assemble\"></a>Assemble</h3><ul>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong><br/><br>Directories contain Illumina assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong><br/><br>Directories contain PacBio assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong><br/><br>Directories contain ONT assembly files and information of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong><br/><br>Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina</strong><br/><br>Directory contains Illumina contigs&#x2F;scaffolds of all strains. “*.filtered.fas” is the genome after excluding short sequences. “*.prefilter.stats” describes the stats of the genome before filtering, and “*.filtered.stats” describes the stats of the genome after filtering.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford</strong><br/><br>Directory contains Oxford nanopore contigs&#x2F;scaffolds of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio</strong><br/><br>Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p>\n</li>\n</ul>\n<h3 id=\"Annotate-1\"><a href=\"#Annotate-1\" class=\"headerlink\" title=\"Annotate\"></a>Annotate</h3><ul>\n<li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation</strong><br/><br>directories contain <a href=\"https://github.com/tseemann/prokka?_blank\">annotation files</a> of each strain.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;AAs</strong><br/><br>Directory contain amino acids sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;CDs</strong><br/><br>Directory contain nucleotide sequences of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;Annotations&#x2F;GFF</strong><br/><br>Directory contain the master annotation of all strains in GFF3 format.</p>\n</li>\n</ul>\n<h3 id=\"ANI-1\"><a href=\"#ANI-1\" class=\"headerlink\" title=\"ANI\"></a>ANI</h3><ul>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong><br/><br>The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong><br/><br>file with identity values arranged in a <a href=\"https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank\">phylip-formatted lower triangular matrix</a>.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong><br/><br>An ANI matrix of all strains.</p>\n</li>\n<li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong><br/><br>The heatmap plot of “ANIs.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"MASH-1\"><a href=\"#MASH-1\" class=\"headerlink\" title=\"MASH\"></a>MASH</h3><ul>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong><br/><br>The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong><br/><br>The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong><br/><br>A similarity matrix of all genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong><br/><br>A heat map plot of “MASH.heatmap”.</p>\n</li>\n</ul>\n<h3 id=\"CoreTree-1\"><a href=\"#CoreTree-1\" class=\"headerlink\" title=\"CoreTree\"></a>CoreTree</h3><ul>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core proteins.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core genes.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong><br/><br>Core SNPs of single-copy core genes in fasta format.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.nwk</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE</p>\n</li>\n<li><p><strong>Results&#x2F;CoreTrees&#x2F;“Other_files”</strong><br/><br>Intermediate directories and files.</p>\n</li>\n</ul>\n<h3 id=\"OrthoF-1\"><a href=\"#OrthoF-1\" class=\"headerlink\" title=\"OrthoF\"></a>OrthoF</h3><ul>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong><br/><br>Same as <a href=\"https://github.com/davidemms/OrthoFinder?_blank\">OrthoFinder</a> outputs.</p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong><br/><br>Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong><br/><br>Phylogenetic tree constructed by FastTree.<br/></p>\n</li>\n<li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong><br/><br>Phylogenetic tree constructed by IQ-TREE.<br/></p>\n</li>\n</ul>\n<h3 id=\"Pan-1\"><a href=\"#Pan-1\" class=\"headerlink\" title=\"Pan\"></a>Pan</h3><ul>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong><br/><br>A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong><br/><br>A graph with the frequency of genes versus the number of genomes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong><br/><br>A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong><br/><br>Alignments of single-copy core proteins called by roary software.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p>\n</li>\n<li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong><br/><br>see <a href=\"https://sanger-pathogens.github.io/Roary/?_blank\">roary</a> outputs.</p>\n</li>\n</ul>\n<h3 id=\"pCOG-1\"><a href=\"#pCOG-1\" class=\"headerlink\" title=\"pCOG\"></a>pCOG</h3><ul>\n<li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong><br/><br>Intermediate files.</p>\n</li>\n<li><p><strong>*.2Scog.table</strong><br/><br>The super COG table of each strain.</p>\n</li>\n<li><p><strong>*.2Scog.table.pdf</strong><br/><br>A plot of super COG table in pdf format.</p>\n</li>\n<li><p><strong>All_flags_relative_abundances.table</strong><br>A table containing the relative abundance of each flag for all strains.</p>\n</li>\n</ul>\n<h3 id=\"VAR-1\"><a href=\"#VAR-1\" class=\"headerlink\" title=\"VAR\"></a>VAR</h3><ul>\n<li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong><br/><br>directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href=\"https://github.com/tseemann/snippy?_blank\">Snippy</a> outputs for detail.</p>\n</li>\n<li><p><strong>Results&#x2F;Variants&#x2F;Core</strong><br/><br>The directory containing SNP phylogeny files.</p>\n<ul>\n<li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li>\n<li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li>\n<li><strong>core.*.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li>\n<li><strong>gubbins.core.full.node_labelled.final_tree.tre</strong> : Phylogenetic tree of the whole genome SNP alignment constructed with <strong>gubbins</strong> (get rid of recombination).</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"AntiRes-1\"><a href=\"#AntiRes-1\" class=\"headerlink\" title=\"AntiRes\"></a>AntiRes</h3><ul>\n<li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li>\n<li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li>\n</ul>\n<h3 id=\"STREE-1\"><a href=\"#STREE-1\" class=\"headerlink\" title=\"STREE\"></a>STREE</h3><ul>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the sequences.</li>\n<li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li>\n</ul>\n<h2 id=\"使用许可\"><a href=\"#使用许可\" class=\"headerlink\" title=\"使用许可\"></a>使用许可</h2><p>PGCGAP 不可商用，其它情况可使用免费(licensed under GPLv3)。</p>\n<h2 id=\"反馈与提问\"><a href=\"#反馈与提问\" class=\"headerlink\" title=\"反馈与提问\"></a>反馈与提问</h2><p>若有问题，可在 <a href=\"https://github.com/liaochenlanruo/pgcgap/issues?_blank\">issues page</a> 提出或通过邮件咨询 <a href=\"mailto:liaochenlanruo@webmail.hzau.edu.cn\">liaochenlanruo@webmail.hzau.edu.cn</a>。</p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><ul>\n<li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. <em>Protocol exchange</em>, 2020. DOI: <a href=\"https://doi.org/10.21203/rs.2.21224/v5\">10.21203&#x2F;rs.2.21224&#x2F;v5</a></p>\n</li>\n<li><p>If you use “--Assemble”, please also cite one or two of <a href=\"https://github.com/OpenGene/fastp\">Fastp</a>, <a href=\"https://doi.org/10.1101/gr.214346.116\">ABySS</a>, <a href=\"http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13\">SPAdes</a>, <a href=\"https://doi.org/10.1101/gr.215087.116\">Canu</a>, or <a href=\"https://doi.org/10.1371/journal.pcbi.1005595\">Unicycler</a>.</p>\n</li>\n<li><p>If you use “--Annotate”, please also cite <a href=\"https://www.pixiv.net/member_illust.php?mode=medium&illust_id=24642063\">Prokka</a>.</p>\n</li>\n<li><p>If you use “--CoreTree”, please also cite <a href=\"https://doi.org/10.1093/bioinformatics/btl158\">CD-HIT</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/nar/gkl315\">PAL2NAL</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.1099%2Fmgen.0.000056\">SNP-sites</a>.</p>\n</li>\n<li><p>If you use “--Pan”, please also cite <a href=\"https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421\">Roary</a>, <a href=\"https://doi.org/10.1093/nar/gkf436\">MAFFT</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--OrthoF”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-019-1832-y\">OrthoFinder</a>, <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, <a href=\"https://doi.org/10.1371/journal.pone.0009490\">FastTree</a> or <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n<li><p>If you use “--ANI”, please also cite <a href=\"https://dx.doi.org/10.1038%2Fs41467-018-07641-9\">fastANI</a>.</p>\n</li>\n<li><p>If you use “--MASH”, please also cite <a href=\"https://dx.doi.org/10.1186%2Fs13059-016-0997-x\">Mash</a>.</p>\n</li>\n<li><p>If you use “--VAR”, please also cite <a href=\"https://github.com/najoshi/sickle\">Sickle</a>, <a href=\"https://github.com/tseemann/snippy\">Snippy</a>, <a href=\"https://dx.doi.org/10.1093%2Fnar%2Fgku1196\">Gubbins</a>,  <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>, and <a href=\"https://dx.doi.org/10.4161%2Ffly.19695\">SnpEff</a>.</p>\n</li>\n<li><p>If you use “--AntiRes”, please also cite <a href=\"https://github.com/tseemann/abricate\">Abricate</a> and the corresponding database you used: <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410\">NCBI AMRFinderPlus</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/27789705\">CARD</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/22782487\">Resfinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24145532\">ARG-ANNOT</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/26578559\">VFDB</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/24777092\">PlasmidFinder</a>, <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/\">EcOH</a>, or <a href=\"https://academic.oup.com/nar/article/48/D1/D561/5624973\">MEGARES 2.00</a>.</p>\n</li>\n<li><p>If you use “--STREE”, please also cite <a href=\"http://europepmc.org/abstract/MED/30976793\">Muscle</a> , <a href=\"https://doi.org/10.1093/bioinformatics/btp348\">trimAL</a>, and <a href=\"https://doi.org/10.1093/molbev/msaa015\">IQ-TREE</a>.</p>\n</li>\n</ul>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><h3 id=\"Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\"><a href=\"#Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results\" class=\"headerlink\" title=\"Q1 VAR founction ran failed to get annotated VCFs and Core results\"></a>Q1 VAR founction ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in “strain_name.log” under Results&#x2F;Variants&#x2F;<strain_name>&#x2F; directory. If you find a sentence like “WARNING: All frames are zero! This seems rather odd, please check that ‘frame’ information in your ‘genes’ file is accurate.” This is an snpEff error. Users can install JDK8 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install java-jdk=8.0.112</span><br></pre></td></tr></table></figure>\n\n\n<p>Click <a href=\"https://github.com/tseemann/snippy/issues/259?_blank\">here</a> for more solutions.</p>\n<h3 id=\"Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\"><a href=\"#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher\" class=\"headerlink\" title=\"Q2 Could not determine version of minced please install version 2 or higher\"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running prokka of Assemble founction, this error could happened, the error message shows as following:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: A JNI error has occurred, please check your installation and try again</span><br><span class=\"line\">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass1(Native Method)</span><br><span class=\"line\">\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)</span><br><span class=\"line\">\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)</span><br><span class=\"line\">\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:468)</span><br><span class=\"line\">\tat java.net.URLClassLoader.access$100(URLClassLoader.java:74)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:369)</span><br><span class=\"line\">\tat java.net.URLClassLoader$1.run(URLClassLoader.java:363)</span><br><span class=\"line\">\tat java.security.AccessController.doPrivileged(Native Method)</span><br><span class=\"line\">\tat java.net.URLClassLoader.findClass(URLClassLoader.java:362)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class=\"line\">\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class=\"line\">\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class=\"line\">\tat sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)</span><br><span class=\"line\">[01:09:40] Could not determine version of minced - please install version 2.0 or higher</span><br></pre></td></tr></table></figure>\n<p>Users can downgrade the minced to version 0.3 to solve this problem.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$conda</span> install minced=0.3</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://github.com/bioconda/bioconda-recipes/pull/15407?_blank\">here</a> for detail informations.</p>\n<h3 id=\"Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\"><a href=\"#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib\" class=\"headerlink\" title=\"Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib\"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function “VAR” on macOS. It is an error of openssl. Users can solve this problem as following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Firstly, install brew if have not installed before</span></span><br><span class=\"line\"><span class=\"variable\">$ruby</span> -e <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Install openssl with brew</span></span><br><span class=\"line\"><span class=\"variable\">$brew</span> install openssl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Create the soft link for libraries</span></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure>\n\n<p>Click <a href=\"https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7\">here</a> for more informations</p>\n<h3 id=\"Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\"><a href=\"#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61\" class=\"headerlink\" title=\"Q4 Use of uninitialized value in require at Encode.pm line 61\"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function “Pan”. It is a warning of Roary software.<br>The content of line 61 is “require Encode::ConfigLocal;”. Users can ignore the warning.<br>Click <a href=\"https://github.com/sanger-pathogens/Roary/issues/323\">here</a> for details.</p>\n<h2 id=\"Updates\"><a href=\"#Updates\" class=\"headerlink\" title=\"Updates\"></a>Updates</h2><ul>\n<li><p>V1.0.3</p>\n<ul>\n<li>Updated ANI fuction.</li>\n</ul>\n</li>\n<li><p>V1.0.4</p>\n<ul>\n<li>Add parallel for function “COG”.</li>\n<li>Optimized drawing of ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.5</p>\n<ul>\n<li>Bug repair for input of gubbins.</li>\n</ul>\n</li>\n<li><p>V1.0.6</p>\n<ul>\n<li>Modified CoreTree to split protein and SNPs tree constructing.</li>\n</ul>\n</li>\n<li><p>V1.0.7</p>\n<ul>\n<li>Split Assemble and Annotate into two functions.</li>\n<li>Added third generation genome assembly function.</li>\n<li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li>\n<li>Changed the name of function “COG” to “pCOG”.</li>\n<li>Fixed the sorting bug for ANI heat map.</li>\n</ul>\n</li>\n<li><p>V1.0.8</p>\n<ul>\n<li>Add the “MASH” function to compute genome distance and similarity using MinHash.</li>\n</ul>\n</li>\n<li><p>V1.0.9</p>\n<ul>\n<li>The function of constructing a single-copy core protein phylogenetic tree was added to “Pan”.</li>\n<li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan chart has been added.</li>\n<li>Fixed a bug for ploting the ANI matrix.</li>\n</ul>\n</li>\n<li><p>V1.0.10</p>\n<ul>\n<li>Add the “AntiRes” function to screening of contigs for antimicrobial and virulence genes.</li>\n</ul>\n</li>\n<li><p>V1.0.11</p>\n<ul>\n<li>Users now can choose “abyss” or “spades” for illumina reads aseembly.</li>\n<li>New support for hybrid assembly of paired-end short reads and long reads.</li>\n<li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li>\n<li>Optimized display of help information. Users can check parameters for each modulewith command “pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]“, and can look up the examples of each module with command “pgcgap Examples”.</li>\n</ul>\n</li>\n<li><p>V1.0.12</p>\n<ul>\n<li>Added automatic mode for illumina genome assembly. First, PGCGAP calls “ABySS” for genome assembly. When the assembled N50 is less than 50,000, it automatically calls “SPAdes” to try multiple parameters for assembly.</li>\n<li>Added ability to filter short sequences of assembled genomes.</li>\n<li>Added function of genome assembly status assessment.</li>\n<li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li>\n</ul>\n</li>\n<li><p>V1.0.13</p>\n<ul>\n<li>Fixed the “running error” bug of function “Assess” in module “ACC”.</li>\n<li>Added module “STREE” for constructing a phylogenetic tree based on multiple sequences in one file.</li>\n</ul>\n</li>\n<li><p>V1.0.14</p>\n<ul>\n<li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li>\n</ul>\n</li>\n<li><p>V1.0.15</p>\n<ul>\n<li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li>\n<li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li>\n</ul>\n</li>\n<li><p>V1.0.16</p>\n<ul>\n<li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li>\n<li>Force overwriting existing output folder when running “Annotate” analysis to avoid program crash.</li>\n</ul>\n</li>\n<li><p>V1.0.17</p>\n<ul>\n<li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li>\n<li>Added scripts to check if there were single-copy core proteins found while running module “CoreTree”.</li>\n<li>Modified the help message.</li>\n</ul>\n</li>\n<li><p>V1.0.18</p>\n<ul>\n<li>Updated the downloading link of COG database.</li>\n<li>Users can choose the number of threads used for running module “STREE”.</li>\n</ul>\n</li>\n<li><p>V1.0.19</p>\n<ul>\n<li>Can resume from break-point when downloading the COG database.</li>\n<li>Fixed a bug that failed to create multi-level directories.</li>\n</ul>\n</li>\n<li><p>V1.0.20</p>\n<ul>\n<li>Fixed a little bug (path error) of module “VAR”.</li>\n<li>Fixed a little bug of module “CoreTree” to avoid the interference of special characters in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.21</p>\n<ul>\n<li>Change the default search program “blast” to “diamond” of module “OrthoF”.</li>\n<li>Fixed a bug of module “pCOG” to output the right figure.</li>\n</ul>\n</li>\n<li><p>V1.0.22</p>\n<ul>\n<li>The drawing function of module “ANI” and module “MASH” has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li>\n<li>Fixed a bug of module “ANI”, that is no heatmap will be drawn when there is “NA” in the ANI matrix in the previous versions.</li>\n<li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li>\n</ul>\n</li>\n<li><p>V1.0.23</p>\n<ul>\n<li>The “–Assess” function of module “ACC” was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li>\n</ul>\n</li>\n<li><p>V1.0.24</p>\n<ul>\n<li>Fixed a little bug of module “Pan” to avoid the interference of special characters (&gt;) in sequence ID to the program.</li>\n</ul>\n</li>\n<li><p>V1.0.25</p>\n<ul>\n<li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module “CoreTree” and “Pan”.</li>\n<li>The parameter “–identi” was added into module “Pan” to allow users to set the minimum percentage identity for blastp.</li>\n</ul>\n</li>\n<li><p>V1.0.26</p>\n<ul>\n<li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module “ANI” and “MASH”.</li>\n<li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the “ANI” and “MASH” analysis.</li>\n</ul>\n</li>\n<li><p>V1.0.27</p>\n<ul>\n<li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li>\n</ul>\n</li>\n<li><p>V1.0.28</p>\n<ul>\n<li>Users can check and install the latest version of PGCGAP by the command “pgcgap –check-update”.</li>\n<li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li>\n<li>Update module pCOG to adjust the latest database of <a href=\"https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/COG\">COG 2020</a>.</li>\n<li>Optimized the drawing and color scheme of the module pCOG.</li>\n<li>Fixed the parameter “CoreTree” in the module Pan to avoid program termination caused by the “&gt;” in non-sequence lines.</li>\n</ul>\n</li>\n<li><p>V1.0.29</p>\n<ul>\n<li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li>\n<li>Fixed the “permission denied” error when moving directories on the WSL platform.</li>\n</ul>\n</li>\n<li><p>V1.0.30</p>\n</li>\n<li><p>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</p>\n</li>\n<li><p>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</p>\n</li>\n<li><p>Added the option of using FastTree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</p>\n</li>\n<li><p>V1.0.31</p>\n<ul>\n<li>The default replicates for bootstrap testing was set to 500.</li>\n<li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li>\n<li>Prevent the log from being written to the tree file generated by FastTree.</li>\n</ul>\n</li>\n<li><p>V1.0.32</p>\n<ul>\n<li>A more colorful version, try “pgcgap Examples” to have a look.</li>\n<li>Updated module AntiRes: the parameter –db had been modified to add choices of “all” and “megares”.</li>\n<li>A little optimization of module VAR.</li>\n<li>Replaced conda with mamba to update PGCGAP more quickly.</li>\n</ul>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"比较基因组学","path":"api/tags/比较基因组学.json"},{"name":"PGCGAP","path":"api/tags/PGCGAP.json"}]},{"title":"SignalP+TMHMM预测微生物分泌蛋白","slug":"SignalP-TMHMM预测微生物分泌蛋白","date":"2021-10-14T01:09:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/SignalP-TMHMM预测微生物分泌蛋白.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg","content":"<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p>\n<p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的N 端有一般由15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度5-30个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的N-末端的氨基酸序列（有时不一定在N端）。<u>使用<strong>SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong>TMHMM</strong>注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p>\n<h1 id=\"软件-Software\"><a href=\"#软件-Software\" class=\"headerlink\" title=\"软件 Software\"></a><ruby>软件 <rt>Software</rt></ruby></h1><ul>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li><p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p>\n<ul>\n<li><p>Sec&#x2F;SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的“标准”分泌信号肽；<rt>“Standard” secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li><p>Sec&#x2F;SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li><p>Tat&#x2F;SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li><p>Tat&#x2F;SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li><p>Sec&#x2F;SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD&#x2F;PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD&#x2F;PibD).</rt></ruby></p>\n</li>\n<li><p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a></p>\n<ul>\n<li>用于预测蛋白质中的跨膜螺旋。</li>\n</ul>\n</li>\n<li><p>Python</p>\n</li>\n</ul>\n<p>SignalP和TMHMM对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h有效时间）。</p>\n<h1 id=\"软件安装-Installation-of-Softwares\"><a href=\"#软件安装-Installation-of-Softwares\" class=\"headerlink\" title=\"软件安装 Installation of Softwares\"></a><ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1><h2 id=\"安装SignalP-6-0\"><a href=\"#安装SignalP-6-0\" class=\"headerlink\" title=\"安装SignalP 6.0\"></a>安装SignalP 6.0</h2><ul>\n<li><p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“signalp-6.0.fast.tar.gz”。有两个模式可以选择——“slow_sequential”和“fast”。前者runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower；后者uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是fast模式。</p>\n</li>\n<li><p><ruby>安装 <rt>Installation</rt></ruby></p>\n<ul>\n<li><p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p>\n<ul>\n<li><p>Python</p>\n</li>\n<li><p>matplotlib&gt;3.3.2</p>\n</li>\n<li><p>numpy&gt;1.19.2</p>\n</li>\n<li><p>torch&gt;1.7.0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install torch</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>tqdm&gt;4.46.1</p>\n</li>\n</ul>\n</li>\n<li><p>安装SignalP 6.0</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压缩安装文件</span></span><br><span class=\"line\">tar zxvf signalp-6.0.fast.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的软件目录，在终端运行</span></span><br><span class=\"line\">python setup.py install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试安装</span></span><br><span class=\"line\">signalp6 --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装TMHMM-V2-0c\"><a href=\"#安装TMHMM-V2-0c\" class=\"headerlink\" title=\"安装TMHMM V2.0c\"></a>安装TMHMM V2.0c</h2><ul>\n<li><p>下载</p>\n<p>  访问<a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“tmhmm-2.0c.Linux.tar.gz”。</p>\n</li>\n<li><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">tar zxvf tmhmm-2.0c.Linux.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> tmhmm-2.0c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span></span><br><span class=\"line\"><span class=\"built_in\">pwd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><font color=\"#FF0000\">运行错误</font></p>\n<p>运行软件时总报<code>Segmentation fault (core dumped)</code>错误，暂时无解。各位可以使用其<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">在线版</a>。</p>\n</li>\n</ul>\n<h1 id=\"软件用法-Usage\"><a href=\"#软件用法-Usage\" class=\"headerlink\" title=\"软件用法 Usage\"></a><ruby>软件用法 <rt>Usage</rt></ruby></h1><h2 id=\"SignalP-6-0\"><a href=\"#SignalP-6-0\" class=\"headerlink\" title=\"SignalP 6.0\"></a>SignalP 6.0</h2><h3 id=\"预测-Prediction\"><a href=\"#预测-Prediction\" class=\"headerlink\" title=\"预测 Prediction\"></a><ruby>预测 <rt>Prediction</rt></ruby></h3><p>A command takes the following form </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>fastafile</code> <ruby>输入文件为FASTA格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p>\n</li>\n<li><p><code>organism</code> is either <code>other</code> or <code>Eukarya</code>. Specifying <code>Eukarya</code> triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec&#x2F;SPI).</p>\n</li>\n<li><p><code>format</code> can take the values <code>txt</code>, <code>png</code>, <code>eps</code>, <code>all</code>. It defines what output files are created for individual sequences. <code>txt</code> produces a tabular <code>.gff</code> file with the per-position predictions for each sequence. <code>png</code>, <code>eps</code>, <code>all</code> additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p>\n</li>\n<li><p><code>mode</code> is either <code>fast</code>, <code>slow</code> or <code>slow-sequential</code>. Default is <code>fast</code>, which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster. <code>slow</code> runs the full model in parallel, which requires more than 14GB of RAM to be available. <code>slow-sequential</code> runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p>\n</li>\n</ul>\n<h3 id=\"输出-Outputs\"><a href=\"#输出-Outputs\" class=\"headerlink\" title=\"输出 Outputs\"></a><ruby>输出<rt> Outputs</rt></ruby></h3><ul>\n<li><p>output_dir&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"output.gff3\"></p>\n</li>\n<li><p>output_dir&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li><p>output_dir&#x2F;region_output.gff3：包含所有的信号肽区域信息。</p>\n<ul>\n<li><p>n-region: The n-terminal region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as N</p>\n</li>\n<li><p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as H</p>\n</li>\n<li><p>c-region: The c-terminal region of the signal peptide, reported for Sec&#x2F;SPI and Tat&#x2F;SPI.</p>\n</li>\n<li><p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p>\n</li>\n<li><p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p>\n</li>\n<li><p>Sec&#x2F;SPIII: These signal peptides have no known region structure.</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"region_output.gff3\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"批处理与结果优化\"><a href=\"#批处理与结果优化\" class=\"headerlink\" title=\"批处理与结果优化\"></a>批处理与结果优化</h3><p>脚本名：run_SignalP.pl</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 14, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IDNOSEQ, <span class=\"string\">&quot;&gt;IDNOSEQ.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">\t$_ =~ <span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.nodesc&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $sigseq = $1 . <span class=\"string\">&quot;.sigseq&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $outdir = $1 . <span class=\"string\">&quot;_signalp&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $_ || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"regexp\">/^(&gt;\\S+)/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $1 . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash = idse<span class=\"string\">q($out)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $gff = $outdir . <span class=\"string\">&quot;/output.gff3&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (! -z $gff) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$gff&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t&lt;IN&gt;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$sigseq&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$lines[<span class=\"number\">0</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> IDNOSEQ $str . <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"string\">&quot;$lines[0]\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;rm $out&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv $sigseq $outdir&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IDNOSEQ;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">idseq</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($fasta) = @_;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $fasta || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header =~ <span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (%hash);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将run_SignalP.pl与后缀名为“.faa”的FASTA格式文件放在同一目录下，在终端中运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_SignalP.pl</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"结果解读Output-interpretation\"><a href=\"#结果解读Output-interpretation\" class=\"headerlink\" title=\"结果解读Output interpretation\"></a><ruby>结果解读<rt>Output interpretation</rt></ruby></h3><p>*代表输入文件的名字。</p>\n<ul>\n<li><p>*_signalp&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p>\n</li>\n<li><p>*_signalp&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li><p>*_signalp&#x2F;region_output.gff3：包含所有的信号肽区域信息;</p>\n</li>\n<li><p><strong>*_signalp&#x2F;*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作TMHMM的输入文件。</p>\n</li>\n</ul>\n<h2 id=\"TMHMM\"><a href=\"#TMHMM\" class=\"headerlink\" title=\"TMHMM\"></a>TMHMM</h2><h3 id=\"预测\"><a href=\"#预测\" class=\"headerlink\" title=\"预测\"></a>预测</h3><p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的“*_signalp&#x2F;*.sigseq”，将其上传至网页版<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a>，提交任务，等待结果即可。</p>\n<h3 id=\"结果展示\"><a href=\"#结果展示\" class=\"headerlink\" title=\"结果展示\"></a>结果展示</h3><p>TMHMM可以输出多种格式的结果文件，具体请参考其<a href=\"http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output\">官方说明</a>。</p>\n<p> <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"在TMHMM网站提交任务\"></p>\n<ul>\n<li><p><strong>Long output format</strong></p>\n<ul>\n<li><p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li><p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p>\n</li>\n<li><p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li><p>Exp number, first 60 AAs：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li><p>Total prob of N-in：<ruby>N端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p>\n</li>\n<li><p>POSSIBLE N-term signal sequence：<ruby>当“Exp number, first 60 AAs”大于 10 时产生的警告。 <rt> A warning that is produced when “Exp number, first 60 AAs” is larger than 10.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li><p>蛋白F01_bin.1_00110共计436个氨基酸，有5个跨膜螺旋结构。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"含有跨膜结构的蛋白\"></p>\n</li>\n<li><p>蛋白F01_bin.1_00142共计557个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"不含跨膜结构的蛋白\"></p>\n</li>\n<li><p><strong>Short output format</strong></p>\n<ul>\n<li><p>“len&#x3D;”： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li><p>“ExpAA&#x3D;”：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li><p>“First60&#x3D;”：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li><p>“PredHel&#x3D;”：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p>\n</li>\n<li><p>“Topology&#x3D;”：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由“i”分隔，如果螺旋在外部，则由“o”分隔。’i7-29o44-66i87-109o’意味着它从膜内开始，在位置7到29有一个预测的TMH，30-43在膜外，然后是位置44-66的TMH。</p>\n</li>\n</ul>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Short output format\"></p>\n</li>\n</ul>\n<h3 id=\"结果汇总\"><a href=\"#结果汇总\" class=\"headerlink\" title=\"结果汇总\"></a>结果汇总</h3><p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong>run_SignalP.pl</strong>生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong>Statistics.txt</strong>中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp&#x2F;*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp&#x2F;*.membrane.faa</b>文件中。该过程将通过<strong>tmhmm_parser.pl</strong>完成。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 15, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;Statistics.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Strain name\\tSignal peptide numbers\\tSecretory protein numbers\\tMembrane protein numbers\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @sig = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*_signalp&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sig (@sig) &#123;</span><br><span class=\"line\">\t$sig=~<span class=\"regexp\">/(.+)_signalp/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $tmhmm = $sig . <span class=\"string\">&quot;/$str&quot;</span> . <span class=\"string\">&quot;_TMHMM_SHORT.txt&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $fasta = $sig . <span class=\"string\">&quot;/$str&quot;</span> . <span class=\"string\">&quot;.sigseq&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $secretory = $str . <span class=\"string\">&quot;.secretory.faa&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $membrane = $str . <span class=\"string\">&quot;.membrane.faa&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> SEC, <span class=\"string\">&quot;&gt;$secretory&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> MEM, <span class=\"string\">&quot;&gt;$membrane&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $on = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash = idse<span class=\"string\">q($fasta)</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $tmhmm || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\"><span class=\"comment\">#\t\tprint $_ . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">5</span>] eq <span class=\"string\">&quot;Topology=o&quot;</span>) &#123;</span><br><span class=\"line\">\t\t\t$out++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> SEC <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t$on++;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> MEM <span class=\"string\">&quot;&gt;$lines[0]\\n$hash&#123;$lines[0]&#125;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> SEC;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> MEM;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv $secretory $membrane $sig&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $total = $out + $on;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$str\\t$total\\t$out\\t$on\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">idseq</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> ($fasta) = @_;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $fasta || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header =~ <span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (%hash);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl tmhmm_parser.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“c886”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li><p><a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"使用EffectiveT3预测微生物中的III型分泌系统效应蛋白","slug":"使用EffectiveT3预测微生物中的III型分泌系统效应蛋白","date":"2021-10-13T02:01:56.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/使用EffectiveT3预测微生物中的III型分泌系统效应蛋白.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg","content":"<p>III 型分泌系统 (Type III secretion system，T3SS) 主要是革兰氏阴性菌的分泌蛋白分泌到细胞外的运输途径，T3SS效应蛋白 (Type III secretion system Effector protein) 与革兰氏阴性致病菌致病机理有关。</p>\n<p>通常用软件<a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveT3</a> 预测T3SS，通过其内部特定的计算模型对每条氨基酸序列进行评分，分值越高，可信度越高，选出评分高于阈值的序列，认为这些序列为III 型分泌系统效应蛋白。</p>\n<p>EffectiveT3 的更新版本加强了 Effective 中 N 端信号肽的识别。对于更新，开发者收集了新的训练数据集，将来自 T3SEdb 的 504 个经过验证的分泌蛋白与其原始的训练数据结合在一起。新模型同样基于朴素贝叶斯分类器（Naive Bayesian Classifier），只是用了更多数据进行训练。在执行遗漏交叉验证测试（leave-one-taxon-out test ）时，其精度为 0.87，与其之前的报告相当。</p>\n<p>新模型现已嵌入到 Effective 中，也可供下载。在新模型中，朴素贝叶斯分类器对“secreted”类的默认最小分数为 0.9999。该默认值在网页上称为“selective”，而 0.95 称为“sensitive”。阈值也可以自由选择。</p>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><ul>\n<li><p>主程序</p>\n<ul>\n<li><a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveT3</a></li>\n</ul>\n</li>\n<li><p>依赖</p>\n<ul>\n<li>openjdk &gt;&#x3D;6</li>\n</ul>\n</li>\n<li><p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用conda安装时依赖Pyton 2.7，3.5，3.6，需要首先创建相应版本的Python环境（自行创建）</span></span><br><span class=\"line\">conda install effectivet3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数据库（modules）配置</p>\n<p><font color=\"#FF0000\">记录一个深坑</font>：程序默认在module的路径前加了一个”.&#x2F;module”路径，因此，虽然程序安装的过程中自动下载了modules，然而我们并没有办法调用它们，只能重新下载。用户每次运行软件前需要在当前目录下创建了module目录，并下载modules，然后将其存到module目录中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p module</span><br><span class=\"line\"></span><br><span class=\"line\">curl -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar</span><br><span class=\"line\"></span><br><span class=\"line\">curl -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar</span><br><span class=\"line\"></span><br><span class=\"line\">curl -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar</span><br><span class=\"line\"></span><br><span class=\"line\">curl -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"输入数据\"><a href=\"#输入数据\" class=\"headerlink\" title=\"输入数据\"></a>输入数据</h1><p>包含蛋白序列的FASTA格式文件</p>\n<h1 id=\"运行软件\"><a href=\"#运行软件\" class=\"headerlink\" title=\"运行软件\"></a>运行软件</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">effectivet3 -f F02_bin.1.faa -m TTSS_TTSS_STD-2.0.2.jar -t selective -o F02_bin.1.out -q</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>-f: 输入文件</li>\n<li>-m: 模型，可选”TTSS_ANIMAL-1.0.1.jar”，”TTSS_PLANT-1.0.1.jar”，”TTSS_STD-1.0.1.jar”和“TTSS_STD-2.0.2.jar”，建议用“TTSS_STD-2.0.2.jar”</li>\n<li>-t: 模式，”sensitive” and “selective”二选一，建议使用”selective”</li>\n<li>-o: 输出文件</li>\n<li>-q: 启动命令行模式</li>\n</ul>\n<h1 id=\"输出文件解读\"><a href=\"#输出文件解读\" class=\"headerlink\" title=\"输出文件解读\"></a>输出文件解读</h1><ul>\n<li><p>English: The table of results displays all query proteins sorted by prediction score. Effector classification (true&#x2F;false) according to the applied threshold is shown in the last column.</p>\n</li>\n<li><p>简体中文: 结果包含了输入文件中所有的查询序列IDs，根据得分进行排序。一共包含4列，第一列为序列ID，第二列为序列描述，第三列为预测得分，第四列描述该序列是否为效应因子。各列间以英文的分号（;）分隔。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"F01_bin.1.out\"></p>\n</li>\n</ul>\n<h1 id=\"批处理与结果整合\"><a href=\"#批处理与结果整合\" class=\"headerlink\" title=\"批处理与结果整合\"></a>批处理与结果整合</h1><p><strong>脚本名</strong>：run_effectiveT3.pl</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 13, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Download modules</span></span><br><span class=\"line\"><span class=\"comment\"># 记录一个深坑，程序默认在module的路径前加了一个&quot;./module&quot;路径，因此，虽然程序安装的过程中自动下载了modules，然而我们并没有办法调用它们，只能重新下载。</span></span><br><span class=\"line\"><span class=\"comment\"># 以下代码在当前目录下创建了module目录，并下载modules，然后将其存到module目录中。</span></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;mkdir -p module&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;curl -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;curl -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;curl -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;curl -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Predict one by one</span></span><br><span class=\"line\"><span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.T3&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;effectivet3 -f $_ -m TTSS_STD-2.0.2.jar -t selective -o $out -q&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># information aggregation</span></span><br><span class=\"line\"><span class=\"keyword\">my</span> (%hash, %strain);</span><br><span class=\"line\"><span class=\"keyword\">my</span> $line_num = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> T3, <span class=\"string\">&quot;&gt;T3SS.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> T3 <span class=\"string\">&quot;Strain\\tId\\tDescription\\tScore\\tis secreted\\tProtein sequences\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @t3 = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.T3&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $t3 (@t3) &#123;</span><br><span class=\"line\">\t$t3=~<span class=\"regexp\">/(.+).T3/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $faa = $1 . <span class=\"string\">&quot;.faa&quot;</span>;</span><br><span class=\"line\">\t$strain&#123;$str&#125;++;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %temp;</span><br><span class=\"line\">\t<span class=\"comment\"># Save ID and Sequence to %temp</span></span><br><span class=\"line\">\t<span class=\"keyword\">open</span> FAA, <span class=\"string\">&quot;$faa&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\">\t&lt;FAA&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;FAA&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> ($header, $seq) = <span class=\"keyword\">split</span> (<span class=\"regexp\">/\\n/</span>, $_, <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t$header=~<span class=\"regexp\">/(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $1;</span><br><span class=\"line\">\t\t$seq=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t$temp&#123;$id&#125; = $seq;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> FAA;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$t3&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!<span class=\"regexp\">/^#/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\;/</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">3</span>] eq <span class=\"string\">&quot;true&quot;</span>) &#123;</span><br><span class=\"line\">\t\t\t\t$line_num++;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> T3 <span class=\"string\">&quot;$str\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @lines) . <span class=\"string\">&quot;\\t&quot;</span> . $temp&#123;$lines[<span class=\"number\">0</span>]&#125; . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t\t$hash&#123;$str&#125;<span class=\"string\">&#123;true&#125;</span>++;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t$hash&#123;$str&#125;<span class=\"string\">&#123;false&#125;</span>++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> T3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ($line_num &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> T3NUM, <span class=\"string\">&quot;&gt;T3SS.num&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> T3NUM <span class=\"string\">&quot;Strain\\tTotal sequences\\tT3S effective true\\tT3S effective false\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span>  (<span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %strain) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> &amp;&amp; $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $total = $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> T3NUM $_ . <span class=\"string\">&quot;\\t&quot;</span> . $total . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span> . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">elsif</span> ($hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span>) &#123;</span><br><span class=\"line\">\t\t\t$hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $total = $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> T3NUM $_ . <span class=\"string\">&quot;\\t&quot;</span> . $total . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span> . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t$hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $total = $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> T3NUM $_ . <span class=\"string\">&quot;\\t&quot;</span> . $total . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;true&#125;</span> . <span class=\"string\">&quot;\\t&quot;</span> . $hash&#123;$_&#125;<span class=\"string\">&#123;false&#125;</span> . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> T3NUM;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;mkdir -p T3SS_result&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;mv *.T3 T3SS.num T3SS.txt T3SS_result&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>用法</strong>：将脚本与含有氨基酸序列的FASTA格式文件（后缀名为”.faa”，如果为其他，需要修改脚本第19、21和31行）放在同一目录下，在终端里运行如下命令（不需要事先配置数据库）：</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_effectiveT3.pl</span><br></pre></td></tr></table></figure>\n\n<p><strong>报错</strong>：Use of uninitialized value $seq in substitution (s&#x2F;&#x2F;&#x2F;) at run_effectiveT3.pl line 47, &lt;FAA&gt; chunk .</p>\n<p><strong>原因</strong>：氨基酸序列ID&#x2F;Header那一行的注释信息中含有”&gt;“。该报错不影响结果的准确性，可以忽略。</p>\n<h1 id=\"结果解读\"><a href=\"#结果解读\" class=\"headerlink\" title=\"结果解读\"></a>结果解读</h1><ul>\n<li><p>T3SS_result&#x2F;strain_name.T3：（strain_name代表输入文件的名称）effectiveT3输出的原始结果，共4列，如前文所述。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"CXY008.T3\"></p>\n</li>\n<li><p>T3SS_result&#x2F;T3SS.txt：包含了所有菌株的预测得到的效应因子，共6列，第一列为菌株名，中间的4列同上一个文件，最后一列为对应的氨基酸序列。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"T3SS.txt\"></p>\n</li>\n<li><p>T3SS_result&#x2F;T3SS.sum：记录所有菌株中序列总数、效应因子序列数和非效应因子序列数。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"T3SS.sum\"></p>\n</li>\n</ul>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“fb68”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveDB</a></li>\n<li><a href=\"https://github.com/bioconda/bioconda-recipes/tree/master/recipes/effectivet3\">Bioconda</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"T3SS","path":"api/tags/T3SS.json"}]},{"title":"使用eggNOG-mapper注释基因组","slug":"使用eggNOG-mapper注释基因组","date":"2022-02-26T02:37:14.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/使用eggNOG-mapper注释基因组.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<h1 id=\"EggNOG-mapper简介-本文未完待续…\"><a href=\"#EggNOG-mapper简介-本文未完待续…\" class=\"headerlink\" title=\"EggNOG-mapper简介(本文未完待续…)\"></a>EggNOG-mapper简介(本文未完待续…)</h1><p>EggNOG-mapper (a.k.a. emapper.py or just emapper) is a tool for fast functional annotation of novel sequences. It uses precomputed orthologous groups (OGs) and phylogenies from the eggNOG database (<a href=\"http://eggnogdb.embl.de/\">http://eggnogdb.embl.de/</a>) to transfer functional information from fine-grained orthologs only.</p>\n<p>Common uses of eggNOG-mapper include the annotation of novel genomes, transcriptomes or even metagenomic gene catalogs.</p>\n<p>The use of orthology predictions for functional annotation permits a higher precision than traditional homology searches (i.e. BLAST searches), as it avoids transferring annotations from close paralogs (duplicate genes with a higher chance of being involved in functional divergence).</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h2><ul>\n<li>Python 3.7 (or greater)</li>\n<li>BioPython 1.76 (python package) (BioPython 1.78 should work since emapper version 2.1.7)</li>\n<li>psutil 5.7.0 (python package)</li>\n<li>xlsxwriter 1.4.3 (python package), only if using the –excel option</li>\n<li>wget (linux command, required for downloading the eggNOG-mapper databases with download_eggnog_data.py, and to create new Diamond&#x2F;MMseqs2 databases with create_dbs.py)</li>\n<li>sqlite (&gt;&#x3D;3.8.2)</li>\n</ul>\n<h2 id=\"需要的存储空间\"><a href=\"#需要的存储空间\" class=\"headerlink\" title=\"需要的存储空间\"></a>需要的存储空间</h2><ul>\n<li>~40 GB for the eggNOG annotation databases (eggnog.db and eggnog.taxa.db)</li>\n<li>~9 GB for Diamond database of eggNOG sequences (required if using -m diamond, which is the default search mode).</li>\n<li><del>11 GB for MMseqs2 database of eggNOG sequences (</del>86 GB if MMseqs2 index is created) (required if using -m mmseqs).</li>\n<li>~3 GB for PFAM database (required if using –pfam_realign options for realignment of queries to PFAM domains).<br>The size of eggNOG diamond&#x2F;mmseqs databases created with create_dbs.py is highly variable, depending on the size of the chosen taxonomic groups.</li>\n</ul>\n<p>Databases for specific taxonomic ranges can be downloaded (for HMMER) or created (for Diamond and MMseqs2). The size of these databases is highly variable. For the size of HMMER databases, check <a href=\"http://eggnog5.embl.de/#/app/downloads\">http://eggnog5.embl.de/#/app/downloads</a>. For Diamond and MMseqs2 databases, DB size will depend on the number of proteins which are from those taxonomic ranges. Also, these proteins need to be downloaded to create the databases, and can be removed afterwards.</p>\n<h2 id=\"Other-Requirements\"><a href=\"#Other-Requirements\" class=\"headerlink\" title=\"Other Requirements\"></a>Other Requirements</h2><ul>\n<li>Using –dbmem loads the whole eggnog.db sqlite3 annotation database during the annotation step, and therefore requires ~44 GB of memory.</li>\n<li>Using the –num_servers option when running HMMER in server mode (a.k.a. hmmgpmd, which is used for -m hmmer –usemem, –pfam_realign denovo or hmm_server.py) loads the HMM database as many times as specified in the argument (e.g. –pfam_realign denovo –num_servers 2 loads the PFAM database into memory twice, with up to roughly 2 GB per instance).</li>\n</ul>\n<h2 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>安装主程序</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install -c bioconda eggnog-mapper</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装数据库</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#创建数据库存储目录</span><br><span class=\"line\">mkdir /home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br><span class=\"line\">#将数据库位置加入环境变量</span><br><span class=\"line\">export EGGNOG_DATA_DIR=/home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br><span class=\"line\">#下载数据库</span><br><span class=\"line\">download_eggnog_data.py -P -M -y -f --data_dir /home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Similarly, use create_dbs.py. For example, to create a diamond database for Bacteria only:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create_dbs.py -m diamond --dbname bacteria --taxa Bacteria</span><br></pre></td></tr></table></figure>\n<p>This will create a bacteria.dmnd diamond database in the default data directory or the one specified in EGGNOG_DATA_DIR environment variable. Such database can be used with emapper.py –dmnd_db bacteria.dmnd. Note that the first time create_dbs.py is used it will take time to download the eggNOG proteins and create the Diamond or MMseqs2 database. Next calls to create_dbs.py (to the same data directory pointed by EGGNOG_DATA_DIR, or –data_dir, or data&#x2F; by default) will not need to download the eggnog5 proteins again. If no more databases are going to be created, the proteins can be removed. For further info, check create_dbs.py –help.</p>\n<h1 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h1><h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"利用GTDB-TK对细菌和古菌基因组进行物种分类","slug":"利用GTDB-TK对细菌和古菌基因组进行物种分类","date":"2021-12-10T03:14:45.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/利用GTDB-TK对细菌和古菌基因组进行物种分类.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>GTDB-Tk 是一个软件工具包，用于根据<ruby>基因组数据库分类 GTDB<rt>Genome Database Taxonomy GTDB</rt></ruby> 为细菌和古菌基因组<ruby>分配客观分类学分类<rt>assigning objective taxonomic classifications</rt></ruby>。可以用于宏基因组组装基因组 (MAG)、单菌基因组和单细胞基因组。</p>\n<h1 id=\"安装GTDB-Tk\"><a href=\"#安装GTDB-Tk\" class=\"headerlink\" title=\"安装GTDB-Tk\"></a>安装GTDB-Tk</h1><ul>\n<li><p>通过conda安装主程序</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># latest version</span></span><br><span class=\"line\">conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># specific version (replace 2.3.0 with the version you wish to install, recommended)</span></span><br><span class=\"line\">conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk=2.3.0</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载GTDB-Tk数据库 (~47 G)</p>\n<p>最新版本的数据库为R214，需要 &gt;&#x3D;2.1.0 版本的GTDB-Tk。</p>\n<ul>\n<li><p>自动 (非常慢)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">download-db.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>手动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> \t<span class=\"comment\"># 找到下载脚本的路径并打开，从中找到数据库的链接</span></span><br><span class=\"line\"><span class=\"built_in\">which</span> download-db.sh</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 进入数据库默认路径</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~/miniconda3/envs/gtdbtk/share/gtdbtk-2.3.0/db/</span><br><span class=\"line\">\t  </span><br><span class=\"line\">   <span class=\"comment\"># 用wget下载 (非常慢)，推荐在Windows下用其他软件下载，再上传服务器</span></span><br><span class=\"line\"><span class=\"built_in\">nohup</span> wget -c https://data.gtdb.ecogenomic.org/releases/release214/214.0/auxillary_files/gtdbtk_r214_data.tar.gz --no-check-certificate &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf gtdbtk_r214_data.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> release214/* ./</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也可自定义数据库的存放位置</span></span><br><span class=\"line\">编辑`~/miniconda3/envs/gtdbtk/etc/conda/activate.d/gtdbtk.sh`，将`<span class=\"built_in\">export</span> GTDBTK_DATA_PATH=`后面的内容改成数据库所在的路径。</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"运行软件\"><a href=\"#运行软件\" class=\"headerlink\" title=\"运行软件\"></a>运行软件</h1><p>:::info<br>注意：pplacer requires ~215 GB of RAM to fully load the bacterial tree into memory. 因此要么在服务器上运行，要么设置足够大的swap分区方可在PC中运行。<br>:::</p>\n<h2 id=\"classify-wf\"><a href=\"#classify-wf\" class=\"headerlink\" title=\"classify_wf\"></a>classify_wf</h2><p>:::default<br>可以通过<code>classify_wf</code>命令完成整个工作流程。<br>:::</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># v2.3.0增加了两个参数（二选一）：--skip_ani_screen，--mash_db，前者无参数值，后者指定MASH参考数据库 (.msh)的输出或读取路径</span></span><br><span class=\"line\">gtdbtk classify_wf --genome_dir &lt;my_genomes&gt; --out_dir &lt;output_dir&gt; --extension fna --cpus 20 --force --skip_ani_screen</span><br></pre></td></tr></table></figure>\n\n<p>+++primary 参数解析</p>\n<ul>\n<li><p>--genome_dir<br>directory containing genome files in FASTA format</p>\n</li>\n<li><p>--batchfile<br>path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p>\n</li>\n<li><p>--out_dir<br>directory to output files</p>\n</li>\n<li><p>--skip_ani_screen     Skip the ani_screening step to classify genomes using mash and FastANI (default: False)</p>\n</li>\n<li><p>--mash_db MASH_DB     path to save&#x2F;read (if exists) the Mash reference sketch database (.msh)</p>\n</li>\n<li><p>-x, --extension<br>extension of files to process, gz &#x3D; gzipped (Default: fna)</p>\n</li>\n<li><p>--min_perc_aa<br>exclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (Default: 10)</p>\n</li>\n<li><p>--prefix<br>prefix for all output files (Default: gtdbtk)</p>\n</li>\n<li><p>--cpus<br>number of CPUs to use (Default: 1)</p>\n</li>\n<li><p>--pplacer_cpus<br>use pplacer_cpus during placement (default: cpus)</p>\n</li>\n<li><p>--force<br>continue processing if an error occurs on a single genome</p>\n</li>\n<li><p>--scratch_dir<br>Reduce pplacer memory usage by writing to disk (slower).</p>\n</li>\n<li><p>--min_af<br>minimum alignment fraction to consider closest genome (Default: 0.65)</p>\n</li>\n<li><p>--tmpdir<br>specify alternative directory for temporary files （Default: &#x2F;tmp</p>\n</li>\n<li><p>--debug<br>create intermediate files for debugging purposes<br>+++</p>\n</li>\n</ul>\n<p>:::default<br>但下面我们演示分步运行。在处理大型管道时，单独运行这些步骤有时会很有用。<br>:::</p>\n<h2 id=\"Step-1-准备输入文件\"><a href=\"#Step-1-准备输入文件\" class=\"headerlink\" title=\"Step 1 准备输入文件\"></a>Step 1 准备输入文件</h2><p>以下两个基因组作为示例文件：* Genome A: <code>GCF_003947435.1</code> [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> &#x2F; <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCF_003947435.1/\">NCBI</a>] * Genome B: <code>GCA_002011125.1</code> [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> &#x2F; <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCA_002011125.1/\">NCBI</a>]。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Create the directory.</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /tmp/gtdbtk &amp;&amp; <span class=\"built_in\">cd</span> /tmp/gtdbtk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Obtain the genomes.</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /tmp/gtdbtk/genomes</span><br><span class=\"line\">wget -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/003/947/435/GCF_003947435.1_ASM394743v1/GCF_003947435.1_ASM394743v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_a.fna.gz</span><br><span class=\"line\"></span><br><span class=\"line\">wget -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/002/011/125/GCA_002011125.1_ASM201112v1/GCA_002011125.1_ASM201112v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_b.fna.gz</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Step-2-Gene-calling-identify\"><a href=\"#Step-2-Gene-calling-identify\" class=\"headerlink\" title=\"Step 2 Gene calling (identify)\"></a>Step 2 Gene calling (identify)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gtdbtk identify --genome_dir /tmp/gtdbtk/genomes --out_dir /tmp/gtdbtk/identify --extension gz --cpus 20</span><br></pre></td></tr></table></figure>\n\n<p>+++success Results</p>\n<p>获得的基因和<ruby>标记<rt>marker</rt></ruby>信息可以在每个<ruby>基因组反应中间文件目录<rt>genomes respeective intermediate files directory</rt></ruby>下找到，如下所示。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> /tmp/gtdbtk/identify/identify/intermediate_results/marker_genes/genome_a.fna/</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>pfam<span class=\"built_in\">_</span>tophit.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.gff.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>pfam<span class=\"built_in\">_</span>tophit.tsv.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam.out</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>pfam.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam.out.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>pfam.tsv.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam<span class=\"built_in\">_</span>tophit.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.faa</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam<span class=\"built_in\">_</span>tophit.tsv.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.faa.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.fna</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>tigrfam.tsv.sha256</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.fna.sha256</span><br><span class=\"line\">prodigal<span class=\"built_in\">_</span>translation<span class=\"built_in\">_</span>table.tsv</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna<span class=\"built_in\">_</span>protein.gff</span><br><span class=\"line\">prodigal<span class=\"built_in\">_</span>translation<span class=\"built_in\">_</span>table.tsv.sha256</span><br></pre></td></tr></table></figure>\n<p>:::default<br>大部分情况下只需要读取摘要文件，其中详细说明了从archaeal 122或bacterial 120<ruby>标记集<rt>marker set</rt></ruby>识别的标记。<br>:::</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /tmp/gtdbtk/identify/gtdbtk.ar122.markers_summary.tsv</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name    number<span class=\"built_in\">_</span>unique<span class=\"built_in\">_</span>genes     number<span class=\"built_in\">_</span>multiple<span class=\"built_in\">_</span>genes   number<span class=\"built_in\">_</span>multiple<span class=\"built_in\">_</span>unique<span class=\"built_in\">_</span>genes    number<span class=\"built_in\">_</span>missing<span class=\"built_in\">_</span>genes    list<span class=\"built_in\">_</span>unique<span class=\"built_in\">_</span>genes       list<span class=\"built_in\">_</span>multiple<span class=\"built_in\">_</span>genes     list<span class=\"built_in\">_</span>multiple<span class=\"built_in\">_</span>unique<span class=\"built_in\">_</span>genes      list<span class=\"built_in\">_</span>missing<span class=\"built_in\">_</span>genes</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>a.fna    109     3       0       10      PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,PF13685.1,TIGR00021,TIGR00037,TIGR00042,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00549,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01213,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02390,TIGR02651,TIGR03626,TIGR03627,TIGR03628,TIGR03636,TIGR03653,TIGR03665,TIGR03671,TIGR03672,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684    PF01496.14,TIGR00458,TIGR00658          PF01866.12,TIGR00064,TIGR00373,TIGR00522,TIGR02338,TIGR02389,TIGR03629,TIGR03670,TIGR03673,TIGR03722</span><br><span class=\"line\">genome<span class=\"built_in\">_</span>b.fna    118     2       0       2       PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01866.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,TIGR00021,TIGR00037,TIGR00042,TIGR00064,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00373,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00458,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00522,TIGR00549,TIGR00658,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02338,TIGR02389,TIGR02390,TIGR02651,TIGR03626,TIGR03628,TIGR03629,TIGR03636,TIGR03653,TIGR03665,TIGR03670,TIGR03671,TIGR03672,TIGR03673,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684,TIGR03722 PF01496.14,PF13685.1            TIGR01213,TIGR03627</span><br></pre></td></tr></table></figure>\n<p>+++</p>\n<h2 id=\"Step-3-Aligning-genomes-align\"><a href=\"#Step-3-Aligning-genomes-align\" class=\"headerlink\" title=\"Step 3 Aligning genomes (align)\"></a>Step 3 Aligning genomes (align)</h2><p>该步骤将对齐所有已识别的标记，确定最可能的<ruby>域<rt>domain </rt></ruby>并输出串联的MSA。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gtdbtk align --identify_dir /tmp/gtdbtk/identify --out_dir /tmp/gtdbtk/align --cpus 20</span><br></pre></td></tr></table></figure>\n\n<p>+++success Results</p>\n<p>:::warning<br>要注意输出，如果一个基因组识别出的标记数量较少，那么在这一步，它将被排除在分析之外。如果出现这种情况，将出现警告。<br>:::</p>\n<p>根据domain的不同，<code>ar122</code>或<code>bac120</code>的前缀文件将出现，其中包含用户基因组和GTDB基因组的MSA，或仅包含用户基因组（<code>gtdbtk.ar122.MSA.fasta</code>和<code>gtdbtk.ar122.user_MSA.fasta</code>）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> /tmp/gtdbtk/align</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">align/</span><br><span class=\"line\">gtdbtk.ar122.user<span class=\"built_in\">_</span>msa.fasta</span><br><span class=\"line\">identify/</span><br><span class=\"line\">gtdbtk.ar122.filtered.tsv</span><br><span class=\"line\">gtdbtk.log</span><br><span class=\"line\">gtdbtk.ar122.msa.fasta</span><br><span class=\"line\">gtdbtk.warnings.log</span><br></pre></td></tr></table></figure>\n<p>+++</p>\n<h2 id=\"Step-4-基因组分类-classify\"><a href=\"#Step-4-基因组分类-classify\" class=\"headerlink\" title=\"Step 4 基因组分类 (classify)\"></a>Step 4 基因组分类 (classify)</h2><p>将用户的基因组放置于参考树上，然后决定其最为可能的分类。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gtdbtk classify --genome_dir /tmp/gtdbtk/genomes --align_dir /tmp/gtdbtk/align --out_dir /tmp/gtdbtk/classify -x gz --cpus 20</span><br></pre></td></tr></table></figure>\n\n<p>+++success Results</p>\n<p>两个主要的输出文件包括<ruby>总结文件<rt>summary file</rt></ruby>和包含基因组的参考树 (<code>gtdbtk.ar122.summary.tsv</code>和<code>gtdbtk.ar122.classify.tree</code>)。基因组的分类信息呈现于总结文件中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> /tmp/gtdbtk/classify</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classify/</span><br><span class=\"line\">gtdbtk.ar122.summary.tsv</span><br><span class=\"line\">gtdbtk.warnings.log</span><br><span class=\"line\">gtdbtk.ar122.classify.tree</span><br><span class=\"line\">gtdbtk.log</span><br></pre></td></tr></table></figure>\n<p>+++</p>\n<h2 id=\"错误信息处理\"><a href=\"#错误信息处理\" class=\"headerlink\" title=\"错误信息处理\"></a>错误信息处理</h2><ul>\n<li><p>OpenBLAS blas_thread_init: pthread_create failed for thread 109 of 128: Resource temporarily unavailable</p>\n<ul>\n<li>解决方案：少调用一些线程就ok了。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://ecogenomics.github.io/GTDBTk\">GTBD-Tk Documentation</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"}]},{"title":"原核生物基因岛预测","slug":"原核生物基因岛预测","date":"2021-10-08T11:27:05.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/原核生物基因岛预测.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg","content":"<h1 id=\"软件-Software-needed\"><a href=\"#软件-Software-needed\" class=\"headerlink\" title=\"软件 (Software needed)\"></a>软件 (Software needed)</h1><ul>\n<li><a href=\"https://github.com/brinkmanlab/islandpath\">IslandPath-DIMOB</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"安装-Installation\"><a href=\"#安装-Installation\" class=\"headerlink\" title=\"安装 (Installation)\"></a>安装 (Installation)</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install islandpath</span><br><span class=\"line\">conda install perl-bioperl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"输入文件-Input-Files\"><a href=\"#输入文件-Input-Files\" class=\"headerlink\" title=\"输入文件 (Input Files)\"></a>输入文件 (Input Files)</h1><ul>\n<li>GenBank (.gbk) or an embl (.embl) file</li>\n<li><font color='#ff0000'><strong>注意:</strong> 输入文件中只允许包含一条序列，否则会报错！(Please make sure you are running islandpath on a genbank file with only one contig)。</font>如果一个文件中含有多个序列，那么就要将其分割成为多个文件，然后逐个作为输入文件进行预测。切割方法见我的另一篇文章<a href=\"https://liaochenlanruo.github.io/post/d9f9.html\">按照Contig切割GenBank文件</a>。</li>\n</ul>\n<h1 id=\"运行软件-Run\"><a href=\"#运行软件-Run\" class=\"headerlink\" title=\"运行软件 (Run)\"></a>运行软件 (Run)</h1><h2 id=\"常规运行\"><a href=\"#常规运行\" class=\"headerlink\" title=\"常规运行\"></a>常规运行</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gbk file</span></span><br><span class=\"line\">islandpath example/NC_003210.gbk NC_003210_GIs.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># embl file</span></span><br><span class=\"line\">islandpath example/NC_000913.embl NC_000913_GIs.txt</span><br></pre></td></tr></table></figure>\n\n<p>输出结果如下图所示：</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"示例输出结果展示\"></p>\n<h2 id=\"批处理\"><a href=\"#批处理\" class=\"headerlink\" title=\"批处理\"></a>批处理</h2><p>在得到大量基因组的时候，手动提交并不像打游戏那样让人渴望敲击键盘和鼠标，为了避免烦躁，我们来写脚本“run_islandpath.pl”，然后让机器做剩下的事情。该脚本可以实现GenBank文件的切割，基因岛预测，以及结果的整合，实现了IslandPath-DIMOB所无法完成的分析。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> Bio::SeqIO;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Oct 8, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Split GenBank files</span></span><br><span class=\"line\"><span class=\"keyword\">my</span> @gbk = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.gbk&quot;</span>);<span class=\"comment\"># 批处理所有后缀为.gbk的文件</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@gbk) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).gbk/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">local</span> $/ = <span class=\"string\">&quot;LOCUS&quot;</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">/\\s+(\\S+)/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $scaf = $1;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $out = $str . <span class=\"string\">&quot;_&quot;</span> . $scaf . <span class=\"string\">&quot;.gb&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $assession = $str . <span class=\"string\">&quot;_&quot;</span> . $scaf;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/ACCESSION.+/ACCESSION   $assession/g</span>;<span class=\"comment\"># 添加ACCESSION number</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;LOCUS$_&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># predict Gene Islands</span></span><br><span class=\"line\">$/ = <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @gb = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.gb&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@gb) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).gb/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.island&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;islandpath $_ $out&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get features from GenBank files</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $gb (@gb) &#123;</span><br><span class=\"line\">\t$gb=~<span class=\"regexp\">/(.+).gb/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $str = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $str . <span class=\"string\">&quot;.list&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $seqin = Bio::SeqIO-&gt;new( <span class=\"string\">-format =&gt;</span> <span class=\"string\">&#x27;genbank&#x27;</span>, <span class=\"string\">-file =&gt;</span> <span class=\"string\">&quot;$gb&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>( (<span class=\"keyword\">my</span> $seq = $seqin-&gt;next_seq) ) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $sf ( $seq-&gt;get_SeqFeatures ) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>( $sf-&gt;primary_tag eq <span class=\"string\">&#x27;CDS&#x27;</span> ) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">my</span> @tags = $sf -&gt;get_all_tags();</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">#print join(&quot;\\t&quot;, @tags) . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> OUT $sf-&gt;get_tag_values(<span class=\"string\">&#x27;locus_tag&#x27;</span>), <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;start, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;end, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;strand, <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;product&#x27;</span>), <span class=\"string\">&quot;\\t&quot;</span>, $sf-&gt;get_tag_values(<span class=\"string\">&#x27;translation&#x27;</span>),<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Parser the results</span></span><br><span class=\"line\"><span class=\"keyword\">my</span> (%hash, %gi, %list, %gif);</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;All_island.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Sequence IDs\tPredictor\tCategory\tGI Start\tGI End\t.\tStrand\t.\tIsland IDs\tGene IDs\tGene Start\tGene End\tStrand\tProducts\tProtein Sequences\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> LIST, <span class=\"string\">&quot;&gt;All_island.list&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> LIST <span class=\"string\">&quot;Island IDs\\tGI Start\\tGI End\\tGI Length\\tGene Number\\tGene IDs\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @GI = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.island&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@GI) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).island/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $list = $1 . <span class=\"string\">&quot;.list&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $start = $lines[<span class=\"number\">3</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $end = $lines[<span class=\"number\">4</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $id = $lines[-<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $gilen = $end - $start + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t$hash&#123;$id&#125; = $start . <span class=\"string\">&quot;-&quot;</span> . $end . <span class=\"string\">&quot;-&quot;</span> . $id;</span><br><span class=\"line\">\t\t$gi&#123;$id&#125; = $_;</span><br><span class=\"line\">\t\t$gif&#123;$id&#125; = $start . <span class=\"string\">&quot;\\t&quot;</span> . $end . <span class=\"string\">&quot;\\t&quot;</span> . $gilen;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> GB, <span class=\"string\">&quot;$list&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;GB&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @line = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">foreach</span> <span class=\"keyword\">my</span> $ids (<span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %hash) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> ($start2, $end2, $gi) = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\-/</span>, $hash&#123;$ids&#125;;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (($line[<span class=\"number\">1</span>] &gt;= $start2) &amp;&amp; ($line[<span class=\"number\">2</span>] &lt;= $end2)) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">print</span> OUT $gi&#123;$gi&#125; . <span class=\"string\">&quot;\\t&quot;</span> . $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">push</span> @&#123;$list&#123;$gi&#125;&#125;, $line[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> GB;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (<span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %list) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> LIST $_ . <span class=\"string\">&quot;\\t&quot;</span> . $gif&#123;$_&#125; . <span class=\"string\">&quot;\\t&quot;</span> . @&#123;$list&#123;$_&#125;&#125; . <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span> (<span class=\"string\">&quot; &quot;</span>, @&#123;$list&#123;$_&#125;&#125;) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> LIST;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>将“run_islandpath.pl”与GenBank文件放在同一目录下，在终端里运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_islandpath.pl</span><br></pre></td></tr></table></figure>\n\n<p>结果汇总于<strong>All_island.txt</strong>和<strong>All_island.list</strong>中，内容如下面二图所示。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"All_island.txt\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"All_island.list\"></p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“5324”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"基因岛","path":"api/tags/基因岛.json"}]},{"title":"计算蛋白质等电点并绘制全局pI图","slug":"计算蛋白质等电点","date":"2022-01-03T02:49:17.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/计算蛋白质等电点.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png","content":"<h1 id=\"蛋白质组的全局-pIs\"><a href=\"#蛋白质组的全局-pIs\" class=\"headerlink\" title=\"蛋白质组的全局 pIs\"></a>蛋白质组的全局 pIs</h1><p>细胞全局蛋白质组 pI 图的变化取决于氨基酸的总电荷，并对蛋白质的结构和特性具有重要意义。</p>\n<p>普遍认为原核基因组具有两个最大的双峰形状，一个在酸性pH值下主要对应于溶解的蛋白质（细胞质蛋白或分泌蛋白），另一种在膜蛋白的碱性pH值下，具有细胞内碱性（带正电荷）结构域以促进质子动力的产生。在这两个峰之间，有一个最小的中性值，对应于细胞内的pH值（如下图）。</p>\n<p>蛋白质氨基酸组成和 pI 水平的显着变化提供了一种工具来预测培养物或宏基因组组装基因组(MAG)的首选栖息地。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"蛋白质组的全局 pIs\"><br><a href=\"https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-019-0731-5#Abs1\">Pedro J. et al., 2019, Microbiome</a></p>\n<h1 id=\"安装EMBOSS\"><a href=\"#安装EMBOSS\" class=\"headerlink\" title=\"安装EMBOSS\"></a>安装EMBOSS</h1><ul>\n<li>下载</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget  ftp://emboss.open-bio.org/pub/EMBOSS/emboss-latest.tar.gz</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>安装</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar zxvf emboss-latest.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 防止报错 (error while loading shared libraries: libnucleus.so.6)</span></span><br><span class=\"line\">sudo /sbin/ldconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置、编译与安装</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> emboss-latest</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"输入文件\"><a href=\"#输入文件\" class=\"headerlink\" title=\"输入文件\"></a>输入文件</h1><p>输入文件为含有一条或多条氨基酸序列的FASTA格式文件。</p>\n<h1 id=\"计算氨基酸序列的各特征数据Calculate-statistics-of-protein-properties\"><a href=\"#计算氨基酸序列的各特征数据Calculate-statistics-of-protein-properties\" class=\"headerlink\" title=\"计算氨基酸序列的各特征数据Calculate statistics of protein properties\"></a><ruby>计算氨基酸序列的各特征数据<rt>Calculate statistics of protein properties</rt></ruby></h1><h2 id=\"逐个文件计算\"><a href=\"#逐个文件计算\" class=\"headerlink\" title=\"逐个文件计算\"></a>逐个文件计算</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pepstats -sequence F01_bin.1.faa -outfile F01_bin.1.out</span><br></pre></td></tr></table></figure>\n<p>:::primary 参数解析</p>\n<ul>\n<li><p>Standard (Mandatory) qualifiers:</p>\n<ul>\n<li>[-sequence]          seqall     Protein sequence(s) filename and optional<br>                        format, or reference (input USA)</li>\n<li>[-outfile]           outfile    [*.pepstats] Pepstats program output file</li>\n</ul>\n</li>\n<li><p>Advanced (Unprompted) qualifiers:</p>\n<ul>\n<li>-aadata             datafile   [Eamino.dat] Amino acid properties</li>\n<li>-mwdata             datafile   [Emolwt.dat] Molecular weight data for amino<br>                        acids</li>\n<li>-pkdata             datafile   [Epk.dat] Values of pKa for amino acids</li>\n<li>-[no]termini        boolean    [Y] Include charge at N and C terminus</li>\n<li>-mono               boolean    [N] Use monoisotopic weights</li>\n</ul>\n</li>\n</ul>\n<p>:::</p>\n<h2 id=\"批量计算与pI提取并输出为相对丰度\"><a href=\"#批量计算与pI提取并输出为相对丰度\" class=\"headerlink\" title=\"批量计算与pI提取并输出为相对丰度\"></a>批量计算与pI提取并输出为相对丰度</h2><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># name: print_pI.pl</span></span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: 2022.01.03</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @genome = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@genome) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.pepstats&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $pi = $1 . <span class=\"string\">&quot;.pI&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;pepstats -sequence $_ -outfile $out&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $seqnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"regexp\">/^(Isoelectric Point = )(\\S+)/</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $pi = <span class=\"keyword\">sprintf</span> <span class=\"string\">&quot;%.1f&quot;</span>, $2;</span><br><span class=\"line\">\t\t\t$hash&#123;$pi&#125;++;</span><br><span class=\"line\">\t\t\t$seqnum++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">#my @records = values %hash;</span></span><br><span class=\"line\">\t<span class=\"comment\">#my $seqnum = @records;</span></span><br><span class=\"line\">\t<span class=\"comment\">#print $seqnum . &quot;\\n&quot;;</span></span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$pi&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;Isoelectric point\\tRelative frequency\\n&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span>  (<span class=\"keyword\">keys</span> %hash) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $frequency = <span class=\"keyword\">sprintf</span> <span class=\"string\">&quot;%.2f&quot;</span>, $hash&#123;$_&#125;/$seqnum;<span class=\"comment\">#@records;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$_\\t$frequency\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"选择性忽略-（这是我自己用的）\"><a href=\"#选择性忽略-（这是我自己用的）\" class=\"headerlink\" title=\"选择性忽略 （这是我自己用的）\"></a>选择性忽略 （这是我自己用的）</h2><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># name: co_sample_pI.pl</span></span><br><span class=\"line\"><span class=\"comment\"># Author: Liu Hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: 2022.01.03</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;F06.pi&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;MAGs\\tIsoelectric point\\tRelative frequency\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @pI = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;F06*.pI&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@pI) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(\\S+).pI/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $mag = $1;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t&lt;IN&gt;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;$mag\\t$_\\n&quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"可视化\"><a href=\"#可视化\" class=\"headerlink\" title=\"可视化\"></a>可视化</h1><h2 id=\"绘制蛋白质组的全局-pIs图\"><a href=\"#绘制蛋白质组的全局-pIs图\" class=\"headerlink\" title=\"绘制蛋白质组的全局 pIs图\"></a>绘制蛋白质组的全局 pIs图</h2><figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Step 1 读入数据</span></span><br><span class=\"line\">setwd<span class=\"punctuation\">(</span><span class=\"string\">&quot;E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/Results/Annotations/AAs&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">F1 <span class=\"operator\">&lt;-</span>read.table<span class=\"punctuation\">(</span><span class=\"string\">&quot;F01_bin.1.pI&quot;</span><span class=\"punctuation\">,</span> sep <span class=\"operator\">=</span> <span class=\"string\">&quot;\\t&quot;</span><span class=\"punctuation\">,</span> header <span class=\"operator\">=</span> <span class=\"built_in\">T</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 2 绘图，以下5选1</span></span><br><span class=\"line\"><span class=\"comment\">## 单组加点，运行完后跳到Step 3</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_point<span class=\"punctuation\">(</span>size<span class=\"operator\">=</span><span class=\"number\">2</span><span class=\"punctuation\">,</span>shape<span class=\"operator\">=</span><span class=\"number\">21</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 单组无点，运行完后跳到Step 3</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 多组加点</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">,</span> color<span class=\"operator\">=</span>MAGs<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_point<span class=\"punctuation\">(</span>size<span class=\"operator\">=</span><span class=\"number\">3</span><span class=\"punctuation\">,</span>shape<span class=\"operator\">=</span><span class=\"number\">21</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 多组无点显示置信区间</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">,</span> color<span class=\"operator\">=</span>MAGs<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 多组无点去除置信区间</span></span><br><span class=\"line\">p1 <span class=\"operator\">&lt;-</span> ggplot<span class=\"punctuation\">(</span>F1<span class=\"punctuation\">,</span> aes<span class=\"punctuation\">(</span>Isoelectric.point<span class=\"punctuation\">,</span> Relative.frequency<span class=\"punctuation\">,</span> color<span class=\"operator\">=</span>MAGs<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>geom_smooth<span class=\"punctuation\">(</span>method<span class=\"operator\">=</span> <span class=\"string\">&quot;gam&quot;</span><span class=\"punctuation\">,</span>se <span class=\"operator\">=</span> <span class=\"literal\">FALSE</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span>theme_classic<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Step 3 美化，看下图</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> scale_x_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_y_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span> <span class=\"string\">&quot;Isoelectric point&quot;</span><span class=\"punctuation\">,</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Relative frequency&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## ==============以下代码为自用========================</span></span><br><span class=\"line\"><span class=\"comment\">## F04自定义颜色</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> scale_x_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_y_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span> <span class=\"string\">&quot;Isoelectric point&quot;</span><span class=\"punctuation\">,</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Relative frequency&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_color_manual<span class=\"punctuation\">(</span>name<span class=\"operator\">=</span><span class=\"string\">&quot;MAGs&quot;</span><span class=\"punctuation\">,</span> values<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#1f77b4&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#ff7f0e&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#2ca02c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#d62728&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#9467bd&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#8c564b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#e377c2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#bcbd22&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## F05自定义颜色</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> scale_x_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_y_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span> <span class=\"string\">&quot;Isoelectric point&quot;</span><span class=\"punctuation\">,</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Relative frequency&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_color_manual<span class=\"punctuation\">(</span>name<span class=\"operator\">=</span><span class=\"string\">&quot;MAGs&quot;</span><span class=\"punctuation\">,</span> values<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#1f77b4&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#ff7f0e&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#2ca02c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#d62728&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#9467bd&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#8c564b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#e377c2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#bcbd22&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#17becf&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## F06自定义颜色</span></span><br><span class=\"line\">p1 <span class=\"operator\">+</span> scale_x_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">2</span><span class=\"punctuation\">,</span> <span class=\"number\">14</span><span class=\"punctuation\">,</span> <span class=\"number\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_y_continuous<span class=\"punctuation\">(</span>limits<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"operator\">-</span><span class=\"number\">0.01</span><span class=\"punctuation\">,</span> <span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> breaks <span class=\"operator\">=</span> seq<span class=\"punctuation\">(</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"built_in\">max</span><span class=\"punctuation\">(</span>F1<span class=\"operator\">$</span>Relative.frequency<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> <span class=\"number\">0.01</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> labs<span class=\"punctuation\">(</span>x<span class=\"operator\">=</span> <span class=\"string\">&quot;Isoelectric point&quot;</span><span class=\"punctuation\">,</span>y <span class=\"operator\">=</span> <span class=\"string\">&quot;Relative frequency&quot;</span><span class=\"punctuation\">)</span><span class=\"operator\">+</span> scale_color_manual<span class=\"punctuation\">(</span>name<span class=\"operator\">=</span><span class=\"string\">&quot;MAGs&quot;</span><span class=\"punctuation\">,</span> values<span class=\"operator\">=</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;#1f77b4&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#ff7f0e&quot;</span><span class=\"punctuation\">,</span><span class=\"string\">&quot;#2ca02c&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#d62728&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#9467bd&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#8c564b&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#e377c2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#bcbd22&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#17becf&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#f7b6d2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#5254a3&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;#000000&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"蛋白质组的全局 pIs\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><p><a href=\"https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-019-0731-5#Abs1\">Pedro J. et al., 2019, Microbiome</a></p>\n</li>\n<li><p><a href=\"http://emboss.sourceforge.net/\">EMBOSS</a></p>\n</li>\n</ul>\n<h1 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“85d7”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"WGS","path":"api/tags/WGS.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"蛋白质组","path":"api/tags/蛋白质组.json"}]}]}