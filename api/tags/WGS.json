{"name":"WGS","postlist":[{"title":"使用EffectiveT3预测微生物中的III型分泌系统效应蛋白","slug":"使用EffectiveT3预测微生物中的III型分泌系统效应蛋白","date":"2021-10-13T02:01:56.000Z","updated":"2022-01-08T02:16:28.430Z","comments":true,"path":"api/articles/使用EffectiveT3预测微生物中的III型分泌系统效应蛋白.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg","content":"<p>III 型分泌系统 (Type III secretion system，T3SS) 主要是革兰氏阴性菌的分泌蛋白分泌到细胞外的运输途径，T3SS 效应蛋白 (Type III secretion system Effector protein) 与革兰氏阴性致病菌致病机理有关。</p>\n<p>通常用软件<a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\"> EffectiveT3</a> 预测 T3SS，通过其内部特定的计算模型对每条氨基酸序列进行评分，分值越高，可信度越高，选出评分高于阈值的序列，认为这些序列为 III 型分泌系统效应蛋白。</p>\n<p>EffectiveT3 的更新版本加强了 Effective 中 N 端信号肽的识别。对于更新，开发者收集了新的训练数据集，将来自 T3SEdb 的 504 个经过验证的分泌蛋白与其原始的训练数据结合在一起。新模型同样基于朴素贝叶斯分类器（Naive Bayesian Classifier），只是用了更多数据进行训练。在执行遗漏交叉验证测试（leave-one-taxon-out test ）时，其精度为 0.87，与其之前的报告相当。</p>\n<p>新模型现已嵌入到 Effective 中，也可供下载。在新模型中，朴素贝叶斯分类器对 “secreted” 类的默认最小分数为 0.9999。该默认值在网页上称为 “selective”，而 0.95 称为 “sensitive”。阈值也可以自由选择。</p>\n<h1 id=\"软件\"><a class=\"markdownIt-Anchor\" href=\"#软件\"></a> 软件</h1>\n<ul>\n<li>\n<p>主程序</p>\n<ul>\n<li><a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveT3</a></li>\n</ul>\n</li>\n<li>\n<p>依赖</p>\n<ul>\n<li>openjdk &gt;=6</li>\n</ul>\n</li>\n<li>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 使用conda安装时依赖Pyton 2.7，3.5，3.6，需要首先创建相应版本的Python环境（自行创建）</span>\nconda <span class=\"token function\">install</span> effectivet3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>数据库（modules）配置</p>\n<p><font color=\"#FF0000\">记录一个深坑</font>：程序默认在 module 的路径前加了一个 &quot;./module&quot; 路径，因此，虽然程序安装的过程中自动下载了 modules，然而我们并没有办法调用它们，只能重新下载。用户每次运行软件前需要在当前目录下创建了 module 目录，并下载 modules，然后将其存到 module 目录中。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p module\n\n<span class=\"token function\">curl</span> -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar\n\n<span class=\"token function\">curl</span> -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar\n\n<span class=\"token function\">curl</span> -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar\n\n<span class=\"token function\">curl</span> -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar\n\n<span class=\"token function\">mv</span> -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"输入数据\"><a class=\"markdownIt-Anchor\" href=\"#输入数据\"></a> 输入数据</h1>\n<p>包含蛋白序列的 FASTA 格式文件</p>\n<h1 id=\"运行软件\"><a class=\"markdownIt-Anchor\" href=\"#运行软件\"></a> 运行软件</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">effectivet3 -f F02_bin.1.faa -m TTSS_TTSS_STD-2.0.2.jar -t selective -o F02_bin.1.out -q<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>-f: 输入文件</li>\n<li>-m: 模型，可选 &quot;TTSS_ANIMAL-1.0.1.jar&quot;，&quot;TTSS_PLANT-1.0.1.jar&quot;，&quot;TTSS_STD-1.0.1.jar&quot; 和 “TTSS_STD-2.0.2.jar”，建议用 “TTSS_STD-2.0.2.jar”</li>\n<li>-t: 模式，&quot;sensitive&quot; and &quot;selective&quot; 二选一，建议使用 &quot;selective&quot;</li>\n<li>-o: 输出文件</li>\n<li>-q: 启动命令行模式</li>\n</ul>\n<h1 id=\"输出文件解读\"><a class=\"markdownIt-Anchor\" href=\"#输出文件解读\"></a> 输出文件解读</h1>\n<ul>\n<li>\n<p>English: The table of results displays all query proteins sorted by prediction score. Effector classification (true/false) according to the applied threshold is shown in the last column.</p>\n</li>\n<li>\n<p>简体中文：结果包含了输入文件中所有的查询序列 IDs，根据得分进行排序。一共包含 4 列，第一列为序列 ID，第二列为序列描述，第三列为预测得分，第四列描述该序列是否为效应因子。各列间以英文的分号（;）分隔。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"F01_bin.1.out\" /></p>\n</li>\n</ul>\n<h1 id=\"批处理与结果整合\"><a class=\"markdownIt-Anchor\" href=\"#批处理与结果整合\"></a> 批处理与结果整合</h1>\n<p><strong>脚本名</strong>：run_effectiveT3.pl</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 13, 2021</span>\n\n<span class=\"token comment\"># Download modules</span>\n<span class=\"token comment\"># 记录一个深坑，程序默认在module的路径前加了一个\"./module\"路径，因此，虽然程序安装的过程中自动下载了modules，然而我们并没有办法调用它们，只能重新下载。</span>\n<span class=\"token comment\"># 以下代码在当前目录下创建了module目录，并下载modules，然后将其存到module目录中。</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mkdir -p module\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"curl -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"curl -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"curl -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"curl -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># Predict one by one</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@faa</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@faa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).faa/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".T3\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"effectivet3 -f $_ -m TTSS_STD-2.0.2.jar -t selective -o $out -q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># information aggregation</span>\n<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%strain</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">$line_num</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nopen T3<span class=\"token punctuation\">,</span> <span class=\"token string\">\">T3SS.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> T3 <span class=\"token string\">\"Strain\\tId\\tDescription\\tScore\\tis secreted\\tProtein sequences\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@t3</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.T3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$t3</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@t3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$t3</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).T3/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$faa</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".faa\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$strain</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%temp</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\"># Save ID and Sequence to %temp</span>\n\topen FAA<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$faa\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;FAA></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;FAA></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$seq</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$temp</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose FAA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$t3\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token regex\">/^#/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\;/</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">eq</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token variable\">$line_num</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> T3 <span class=\"token string\">\"$str\\t\"</span> <span class=\"token operator\">.</span> join<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@lines</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$temp</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose T3<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$line_num</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\topen T3NUM<span class=\"token punctuation\">,</span> <span class=\"token string\">\">T3SS.num\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> T3NUM <span class=\"token string\">\"Strain\\tTotal sequences\\tT3S effective true\\tT3S effective false\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%strain</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> T3NUM <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">elsif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> T3NUM <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> T3NUM <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>true<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#123;</span>false<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose T3NUM<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mkdir -p T3SS_result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv *.T3 T3SS.num T3SS.txt T3SS_result\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>用法</strong>：将脚本与含有氨基酸序列的 FASTA 格式文件（后缀名为 &quot;.faa&quot;，如果为其他，需要修改脚本第 19、21 和 31 行）放在同一目录下，在终端里运行如下命令（不需要事先配置数据库）：</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\">perl run_effectiveT3<span class=\"token operator\">.</span>pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>报错</strong>：Use of uninitialized value $seq in substitution (s///) at run_effectiveT3.pl line 47, &lt;FAA&gt; chunk .</p>\n<p><strong>原因</strong>：氨基酸序列 ID/Header 那一行的注释信息中含有”&gt;“。该报错不影响结果的准确性，可以忽略。</p>\n<h1 id=\"结果解读\"><a class=\"markdownIt-Anchor\" href=\"#结果解读\"></a> 结果解读</h1>\n<ul>\n<li>\n<p>T3SS_result/strain_name.T3：（strain_name 代表输入文件的名称）effectiveT3 输出的原始结果，共 4 列，如前文所述。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"CXY008.T3\" /></p>\n</li>\n<li>\n<p>T3SS_result/T3SS.txt：包含了所有菌株的预测得到的效应因子，共 6 列，第一列为菌株名，中间的 4 列同上一个文件，最后一列为对应的氨基酸序列。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"T3SS.txt\" /></p>\n</li>\n<li>\n<p>T3SS_result/T3SS.sum：记录所有菌株中序列总数、效应因子序列数和非效应因子序列数。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"T3SS.sum\" /></p>\n</li>\n</ul>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “fb68” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://effectors.csb.univie.ac.at/method/effectivet3\">EffectiveDB</a></li>\n<li><a href=\"https://github.com/bioconda/bioconda-recipes/tree/master/recipes/effectivet3\">Bioconda</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"T3SS","path":"api/tags/T3SS.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"利用GTDB-TK对细菌和古菌基因组进行物种分类","slug":"利用GTDB-TK对细菌和古菌基因组进行物种分类","date":"2021-12-10T03:14:45.000Z","updated":"2022-01-08T02:16:28.432Z","comments":true,"path":"api/articles/利用GTDB-TK对细菌和古菌基因组进行物种分类.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>GTDB-Tk 是一个软件工具包，用于根据<ruby>基因组数据库分类 GTDB<rt>Genome Database Taxonomy GTDB</rt></ruby> 为细菌和古菌基因组<ruby>分配客观分类学分类<rt>assigning objective taxonomic classifications</rt></ruby>。可以用于宏基因组组装基因组 (MAG)、单菌基因组和单细胞基因组。</p>\n<h1 id=\"安装gtdb-tk\"><a class=\"markdownIt-Anchor\" href=\"#安装gtdb-tk\"></a> 安装 GTDB-Tk</h1>\n<ul>\n<li>\n<p>通过 conda 安装主程序</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># latest version</span>\nconda create -n gtdbtk -c conda-forge -c bioconda gtdbtk\n\n<span class=\"token comment\"># specific version (replace 1.7.0 with the version you wish to install, recommended)</span>\nconda create -n gtdbtk -c conda-forge -c bioconda <span class=\"token assign-left variable\">gtdbtk</span><span class=\"token operator\">=</span><span class=\"token number\">1.7</span>.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>下载 GTDB-Tk 数据库 (~47 G)</p>\n<p>最新版本的数据库为 R202，需要 &gt;=1.5.0 版本的 GTDB-Tk。</p>\n<ul>\n<li>\n<p>自动 (非常慢)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">download-db.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>手动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"> \t<span class=\"token comment\"># 找到下载脚本的路径并打开，从中找到数据库的链接</span>\n<span class=\"token function\">which</span> download-db.sh\n  \n<span class=\"token comment\"># 进入数据库默认路径</span>\n<span class=\"token builtin class-name\">cd</span> ~/miniconda3/envs/gtdbtk/share/gtdbtk-1.7.0/db/\n\t  \n   <span class=\"token comment\"># 用wget下载 (非常慢)，推荐在Windows下用其他软件下载，再上传服务器</span>\n<span class=\"token function\">nohup</span> <span class=\"token function\">wget</span> -c https://data.gtdb.ecogenomic.org/releases/release202/202.0/auxillary_files/gtdbtk_r202_data.tar.gz --no-check-certificate <span class=\"token operator\">&amp;</span>\n\n<span class=\"token function\">tar</span> zxvf gtdbtk_r202_data.tar.gz\n\n<span class=\"token function\">mv</span> release202/* ./<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"运行软件\"><a class=\"markdownIt-Anchor\" href=\"#运行软件\"></a> 运行软件</h1>\n<h2 id=\"classify_wf\"><a class=\"markdownIt-Anchor\" href=\"#classify_wf\"></a> classify_wf</h2>\n<div class=\"note default\">\n<p>可以通过 <code>classify_wf</code>  命令完成整个工作流程。</p>\n</div>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk classify_wf --genome_dir <span class=\"token operator\">&lt;</span>my_genomes<span class=\"token operator\">></span> --out_dir <span class=\"token operator\">&lt;</span>output_dir<span class=\"token operator\">></span> --extension fna --cpus <span class=\"token number\">20</span> --force<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"primary\"><summary>参数解析</summary><div>\n<ul>\n<li>\n<p>--genome_dir<br />\ndirectory containing genome files in FASTA format</p>\n</li>\n<li>\n<p>--batchfile<br />\npath to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p>\n</li>\n<li>\n<p>--out_dir<br />\ndirectory to output files</p>\n</li>\n<li>\n<p>-x, --extension<br />\nextension of files to process, gz = gzipped (Default: fna)</p>\n</li>\n<li>\n<p>--min_perc_aa<br />\nexclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (Default: 10)</p>\n</li>\n<li>\n<p>--prefix<br />\nprefix for all output files (Default: gtdbtk)</p>\n</li>\n<li>\n<p>--cpus<br />\nnumber of CPUs to use (Default: 1)</p>\n</li>\n<li>\n<p>--pplacer_cpus<br />\nuse pplacer_cpus during placement (default: cpus)</p>\n</li>\n<li>\n<p>--force<br />\ncontinue processing if an error occurs on a single genome</p>\n</li>\n<li>\n<p>--scratch_dir<br />\nReduce pplacer memory usage by writing to disk (slower).</p>\n</li>\n<li>\n<p>--min_af<br />\nminimum alignment fraction to consider closest genome (Default: 0.65)</p>\n</li>\n<li>\n<p>--tmpdir<br />\nspecify alternative directory for temporary files （Default: /tmp</p>\n</li>\n<li>\n<p>--debug<br />\ncreate intermediate files for debugging purposes</p>\n</li>\n</ul>\n</div></details>\n<div class=\"note default\">\n<p>但下面我们演示分步运行。在处理大型管道时，单独运行这些步骤有时会很有用。</p>\n</div>\n<h2 id=\"step-1-准备输入文件\"><a class=\"markdownIt-Anchor\" href=\"#step-1-准备输入文件\"></a> Step 1 准备输入文件</h2>\n<p>以下两个基因组作为示例文件：* Genome A:  <code>GCF_003947435.1</code>  [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> / <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCF_003947435.1/\">NCBI</a>] * Genome B:  <code>GCA_002011125.1</code>  [<a href=\"https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1\">GTDB</a> / <a href=\"https://www.ncbi.nlm.nih.gov/assembly/GCA_002011125.1/\">NCBI</a>]。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># Create the directory.</span>\n<span class=\"token function\">mkdir</span> -p /tmp/gtdbtk <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> /tmp/gtdbtk\n\n<span class=\"token comment\"># Obtain the genomes.</span>\n<span class=\"token function\">mkdir</span> -p /tmp/gtdbtk/genomes\n<span class=\"token function\">wget</span> -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/003/947/435/GCF_003947435.1_ASM394743v1/GCF_003947435.1_ASM394743v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_a.fna.gz\n\n<span class=\"token function\">wget</span> -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/002/011/125/GCA_002011125.1_ASM201112v1/GCA_002011125.1_ASM201112v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_b.fna.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"step-2-gene-calling-identify\"><a class=\"markdownIt-Anchor\" href=\"#step-2-gene-calling-identify\"></a> Step 2 Gene calling (identify)</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk identify --genome_dir /tmp/gtdbtk/genomes --out_dir /tmp/gtdbtk/identify --extension gz --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<p>获得的基因和<ruby>标记<rt>marker</rt></ruby>信息可以在每个<ruby>基因组反应中间文件目录<rt>genomes respeective intermediate files directory</rt></ruby>下找到，如下所示。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/identify/identify/intermediate_results/marker_genes/genome_a.fna/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">genome_a.fna_pfam_tophit.tsv\ngenome_a.fna_protein.gff.sha256\ngenome_a.fna_pfam_tophit.tsv.sha256\ngenome_a.fna_tigrfam.out\ngenome_a.fna_pfam.tsv\ngenome_a.fna_tigrfam.out.sha256\ngenome_a.fna_pfam.tsv.sha256\ngenome_a.fna_tigrfam_tophit.tsv\ngenome_a.fna_protein.faa\ngenome_a.fna_tigrfam_tophit.tsv.sha256\ngenome_a.fna_protein.faa.sha256\ngenome_a.fna_tigrfam.tsv\ngenome_a.fna_protein.fna\ngenome_a.fna_tigrfam.tsv.sha256\ngenome_a.fna_protein.fna.sha256\nprodigal_translation_table.tsv\ngenome_a.fna_protein.gff\nprodigal_translation_table.tsv.sha256<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"note default\">\n<p>大部分情况下只需要读取摘要文件，其中详细说明了从 archaeal 122 或 bacterial 120<ruby>标记集<rt>marker set</rt></ruby>识别的标记。</p>\n</div>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /tmp/gtdbtk/identify/gtdbtk.ar122.markers_summary.tsv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">name    number_unique_genes     number_multiple_genes   number_multiple_unique_genes    number_missing_genes    list_unique_genes       list_multiple_genes     list_multiple_unique_genes      list_missing_genes\ngenome_a.fna    109     3       0       10      PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,PF13685.1,TIGR00021,TIGR00037,TIGR00042,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00549,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01213,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02390,TIGR02651,TIGR03626,TIGR03627,TIGR03628,TIGR03636,TIGR03653,TIGR03665,TIGR03671,TIGR03672,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684    PF01496.14,TIGR00458,TIGR00658          PF01866.12,TIGR00064,TIGR00373,TIGR00522,TIGR02338,TIGR02389,TIGR03629,TIGR03670,TIGR03673,TIGR03722\ngenome_b.fna    118     2       0       2       PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01866.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,TIGR00021,TIGR00037,TIGR00042,TIGR00064,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00373,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00458,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00522,TIGR00549,TIGR00658,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02338,TIGR02389,TIGR02390,TIGR02651,TIGR03626,TIGR03628,TIGR03629,TIGR03636,TIGR03653,TIGR03665,TIGR03670,TIGR03671,TIGR03672,TIGR03673,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684,TIGR03722 PF01496.14,PF13685.1            TIGR01213,TIGR03627<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"step-3-aligning-genomes-align\"><a class=\"markdownIt-Anchor\" href=\"#step-3-aligning-genomes-align\"></a> Step 3 Aligning genomes (align)</h2>\n<p>该步骤将对齐所有已识别的标记，确定最可能的<ruby>域<rt>domain </rt></ruby>并输出串联的 MSA。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk align --identify_dir /tmp/gtdbtk/identify --out_dir /tmp/gtdbtk/align --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<div class=\"note warning\">\n<p>要注意输出，如果一个基因组识别出的标记数量较少，那么在这一步，它将被排除在分析之外。如果出现这种情况，将出现警告。</p>\n</div>\n<p>根据 domain 的不同， <code>ar122</code>  或 <code>bac120</code>  的前缀文件将出现，其中包含用户基因组和 GTDB 基因组的 MSA，或仅包含用户基因组（ <code>gtdbtk.ar122.MSA.fasta</code>  和 <code>gtdbtk.ar122.user_MSA.fasta</code> ）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/align<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">align&#x2F;\ngtdbtk.ar122.user_msa.fasta\nidentify&#x2F;\ngtdbtk.ar122.filtered.tsv\ngtdbtk.log\ngtdbtk.ar122.msa.fasta\ngtdbtk.warnings.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"step-4-基因组分类-classify\"><a class=\"markdownIt-Anchor\" href=\"#step-4-基因组分类-classify\"></a> Step 4 基因组分类 (classify)</h2>\n<p>将用户的基因组放置于参考树上，然后决定其最为可能的分类。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">gtdbtk classify --genome_dir /tmp/gtdbtk/genomes --align_dir /tmp/gtdbtk/align --out_dir /tmp/gtdbtk/classify -x gz --cpus <span class=\"token number\">20</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<details class=\"success\"><summary>Results</summary><div>\n<p>两个主要的输出文件包括<ruby>总结文件<rt>summary file</rt></ruby>和包含基因组的参考树 ( <code>gtdbtk.ar122.summary.tsv</code>  和 <code>gtdbtk.ar122.classify.tree</code> )。基因组的分类信息呈现于总结文件中。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> /tmp/gtdbtk/classify<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-tex\" data-language=\"tex\"><code class=\"language-tex\">classify&#x2F;\ngtdbtk.ar122.summary.tsv\ngtdbtk.warnings.log\ngtdbtk.ar122.classify.tree\ngtdbtk.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</div></details>\n<h2 id=\"错误信息处理\"><a class=\"markdownIt-Anchor\" href=\"#错误信息处理\"></a> 错误信息处理</h2>\n<ul>\n<li>\n<p>OpenBLAS blas_thread_init: pthread_create failed for thread 109 of 128: Resource temporarily unavailable</p>\n<ul>\n<li>解决方案：少调用一些线程就 ok 了。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://ecogenomics.github.io/GTDBTk\">GTBD-Tk Documentation</a></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"原核生物基因岛预测","slug":"原核生物基因岛预测","date":"2021-10-08T11:27:05.000Z","updated":"2022-01-08T02:16:28.434Z","comments":true,"path":"api/articles/原核生物基因岛预测.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg","content":"<h1 id=\"软件-software-needed\"><a class=\"markdownIt-Anchor\" href=\"#软件-software-needed\"></a> 软件 (Software needed)</h1>\n<ul>\n<li><a href=\"https://github.com/brinkmanlab/islandpath\">IslandPath-DIMOB</a></li>\n<li><a href=\"https://bioperl.org/\">BioPerl</a></li>\n</ul>\n<h1 id=\"安装-installation\"><a class=\"markdownIt-Anchor\" href=\"#安装-installation\"></a> 安装 (Installation)</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda <span class=\"token function\">install</span> islandpath\nconda <span class=\"token function\">install</span> perl-bioperl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"输入文件-input-files\"><a class=\"markdownIt-Anchor\" href=\"#输入文件-input-files\"></a> 输入文件 (Input Files)</h1>\n<ul>\n<li>GenBank (.gbk) or an embl (.embl) file</li>\n<li><font color='#ff0000'><strong>注意:</strong> 输入文件中只允许包含一条序列，否则会报错！(Please make sure you are running islandpath on a genbank file with only one contig)。</font>如果一个文件中含有多个序列，那么就要将其分割成为多个文件，然后逐个作为输入文件进行预测。切割方法见我的另一篇文章<a href=\"https://liaochenlanruo.github.io/post/d9f9.html\">按照 Contig 切割 GenBank 文件</a>。</li>\n</ul>\n<h1 id=\"运行软件-run\"><a class=\"markdownIt-Anchor\" href=\"#运行软件-run\"></a> 运行软件 (Run)</h1>\n<h2 id=\"常规运行\"><a class=\"markdownIt-Anchor\" href=\"#常规运行\"></a> 常规运行</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># gbk file</span>\nislandpath example/NC_003210.gbk NC_003210_GIs.txt\n\n<span class=\"token comment\"># embl file</span>\nislandpath example/NC_000913.embl NC_000913_GIs.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>输出结果如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"示例输出结果展示\" /></p>\n<h2 id=\"批处理\"><a class=\"markdownIt-Anchor\" href=\"#批处理\"></a> 批处理</h2>\n<p>在得到大量基因组的时候，手动提交并不像打游戏那样让人渴望敲击键盘和鼠标，为了避免烦躁，我们来写脚本 “run_islandpath.pl”，然后让机器做剩下的事情。该脚本可以实现 GenBank 文件的切割，基因岛预测，以及结果的整合，实现了 IslandPath-DIMOB 所无法完成的分析。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu hualin</span>\n<span class=\"token comment\"># Date: Oct 8, 2021</span>\n\n<span class=\"token comment\"># Split GenBank files</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gbk</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 批处理所有后缀为.gbk的文件</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gbk</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gbk/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"LOCUS\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/\\s+(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".gb\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$assession</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$scaf</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/ACCESSION.+/ACCESSION   $assession/g</span><span class=\"token punctuation\">;</span><span class=\"token comment\"># 添加ACCESSION number</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"LOCUS$_\"</span><span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token comment\"># predict Gene Islands</span>\n<span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@gb</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.gb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@gb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gb/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".island\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"islandpath $_ $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Get features from GenBank files</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$gb</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@gb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$gb</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).gb/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".list\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$seqin</span> <span class=\"token operator\">=</span> Bio<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>SeqIO<span class=\"token operator\">-></span>new<span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span>format <span class=\"token operator\">=></span> <span class=\"token string\">'genbank'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>file <span class=\"token operator\">=></span> <span class=\"token string\">\"$gb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">my</span> <span class=\"token variable\">$seq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seqin</span><span class=\"token operator\">-></span>next_seq<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sf</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$seq</span><span class=\"token operator\">-></span>get_SeqFeatures <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>primary_tag <span class=\"token operator\">eq</span> <span class=\"token string\">'CDS'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@tags</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sf</span> <span class=\"token operator\">-></span>get_all_tags<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">#print join(\"\\t\", @tags) . \"\\n\";</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'locus_tag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>start<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>strand<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sf</span><span class=\"token operator\">-></span>get_tag_values<span class=\"token punctuation\">(</span><span class=\"token string\">'translation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># Parser the results</span>\n<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%gi</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%list</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">%gif</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All_island.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Sequence IDs\tPredictor\tCategory\tGI Start\tGI End\t.\tStrand\t.\tIsland IDs\tGene IDs\tGene Start\tGene End\tStrand\tProducts\tProtein Sequences\\n\"</span><span class=\"token punctuation\">;</span>\nopen LIST<span class=\"token punctuation\">,</span> <span class=\"token string\">\">All_island.list\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> LIST <span class=\"token string\">\"Island IDs\\tGI Start\\tGI End\\tGI Length\\tGene Number\\tGene IDs\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@GI</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.island\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@GI</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+).island/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$list</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".list\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gilen</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$gif</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$end</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$gilen</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\topen GB<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$list\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;GB></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@line</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$ids</span> <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$start2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$end2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$gi</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\-/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$ids</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">$start2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token variable\">$end2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\tpush <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$gi</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$line</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose GB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span>sort keys <span class=\"token variable\">%list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">print</span> LIST <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$gif</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> join <span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose LIST<span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 “run_islandpath.pl” 与 GenBank 文件放在同一目录下，在终端里运行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_islandpath.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果汇总于<strong> All_island.txt</strong> 和<strong> All_island.list</strong> 中，内容如下面二图所示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"All_island.txt\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"All_island.list\" /></p>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “5324” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"基因岛","path":"api/tags/基因岛.json"}]},{"title":"计算蛋白质等电点并绘制全局pI图","slug":"计算蛋白质等电点","date":"2022-01-03T02:49:17.000Z","updated":"2022-01-08T02:16:28.468Z","comments":true,"path":"api/articles/计算蛋白质等电点.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png","content":"<h1 id=\"蛋白质组的全局-pis\"><a class=\"markdownIt-Anchor\" href=\"#蛋白质组的全局-pis\"></a> 蛋白质组的全局 pIs</h1>\n<p>细胞全局蛋白质组 pI 图的变化取决于氨基酸的总电荷，并对蛋白质的结构和特性具有重要意义。</p>\n<p>普遍认为原核基因组具有两个最大的双峰形状，一个在酸性 pH 值下主要对应于溶解的蛋白质（细胞质蛋白或分泌蛋白），另一种在膜蛋白的碱性 pH 值下，具有细胞内碱性（带正电荷）结构域以促进质子动力的产生。在这两个峰之间，有一个最小的中性值，对应于细胞内的 pH 值（如下图）。</p>\n<p>蛋白质氨基酸组成和 pI 水平的显着变化提供了一种工具来预测培养物或宏基因组组装基因组 (MAG) 的首选栖息地。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"蛋白质组的全局 pIs\" /><br />\n<a href=\"https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-019-0731-5#Abs1\">Pedro J. et al., 2019, Microbiome</a></p>\n<h1 id=\"安装emboss\"><a class=\"markdownIt-Anchor\" href=\"#安装emboss\"></a> 安装 EMBOSS</h1>\n<ul>\n<li>下载</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span>  ftp://emboss.open-bio.org/pub/EMBOSS/emboss-latest.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压</span>\n<span class=\"token function\">tar</span> zxvf emboss-latest.tar.gz\n\n<span class=\"token comment\"># 防止报错 (error while loading shared libraries: libnucleus.so.6)</span>\n<span class=\"token function\">sudo</span> /sbin/ldconfig\n\n<span class=\"token comment\"># 配置、编译与安装</span>\n<span class=\"token builtin class-name\">cd</span> emboss-latest\n./configure\n<span class=\"token function\">make</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"输入文件\"><a class=\"markdownIt-Anchor\" href=\"#输入文件\"></a> 输入文件</h1>\n<p>输入文件为含有一条或多条氨基酸序列的 FASTA 格式文件。</p>\n<h1 id=\"ruby计算氨基酸序列的各特征数据rtcalculate-statistics-of-protein-propertiesrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby计算氨基酸序列的各特征数据rtcalculate-statistics-of-protein-propertiesrtruby\"></a> <ruby>计算氨基酸序列的各特征数据<rt>Calculate statistics of protein properties</rt></ruby></h1>\n<h2 id=\"逐个文件计算\"><a class=\"markdownIt-Anchor\" href=\"#逐个文件计算\"></a> 逐个文件计算</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pepstats -sequence F01_bin.1.faa -outfile F01_bin.1.out<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<div class=\"note primary 参数解析\">\n<ul>\n<li>\n<p>Standard (Mandatory) qualifiers:</p>\n<ul>\n<li>[-sequence]          seqall     Protein sequence(s) filename and optional<br />\nformat, or reference (input USA)</li>\n<li>[-outfile]           outfile    [*.pepstats] Pepstats program output file</li>\n</ul>\n</li>\n<li>\n<p>Advanced (Unprompted) qualifiers:</p>\n<ul>\n<li>-aadata             datafile   [Eamino.dat] Amino acid properties</li>\n<li>-mwdata             datafile   [Emolwt.dat] Molecular weight data for amino<br />\nacids</li>\n<li>-pkdata             datafile   [Epk.dat] Values of pKa for amino acids</li>\n<li>-[no]termini        boolean    [Y] Include charge at N and C terminus</li>\n<li>-mono               boolean    [N] Use monoisotopic weights</li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"批量计算与pi提取并输出为相对丰度\"><a class=\"markdownIt-Anchor\" href=\"#批量计算与pi提取并输出为相对丰度\"></a> 批量计算与 pI 提取并输出为相对丰度</h2>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># name: print_pI.pl</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: 2022.01.03</span>\n\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@genome</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@genome</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(\\S+).faa/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".pepstats\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$pi</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".pI\"</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"pepstats -sequence $_ -outfile $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$seqnum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\">/^(Isoelectric Point = )(\\S+)/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$pi</span> <span class=\"token operator\">=</span> sprintf <span class=\"token string\">\"%.1f\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$2</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$pi</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token variable\">$seqnum</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">#my @records = values %hash;</span>\n\t<span class=\"token comment\">#my $seqnum = @records;</span>\n\t<span class=\"token comment\">#print $seqnum . \"\\n\";</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$pi\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Isoelectric point\\tRelative frequency\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span>keys <span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$frequency</span> <span class=\"token operator\">=</span> sprintf <span class=\"token string\">\"%.2f\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">/</span><span class=\"token variable\">$seqnum</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#@records;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$_\\t$frequency\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose OUT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"选择性忽略-这是我自己用的\"><a class=\"markdownIt-Anchor\" href=\"#选择性忽略-这是我自己用的\"></a> 选择性忽略 （这是我自己用的）</h2>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># name: co_sample_pI.pl</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: 2022.01.03</span>\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">F06.pi\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"MAGs\\tIsoelectric point\\tRelative frequency\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@pI</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"F06*.pI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@pI</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(\\S+).pI/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$mag</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$_\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$mag\\t$_\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose OUT<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"可视化\"><a class=\"markdownIt-Anchor\" href=\"#可视化\"></a> 可视化</h1>\n<h2 id=\"绘制蛋白质组的全局-pis图\"><a class=\"markdownIt-Anchor\" href=\"#绘制蛋白质组的全局-pis图\"></a> 绘制蛋白质组的全局 pIs 图</h2>\n<pre class=\"line-numbers language-r\" data-language=\"r\"><code class=\"language-r\"><span class=\"token comment\"># Step 1 读入数据</span>\nsetwd<span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/Results/Annotations/AAs\"</span><span class=\"token punctuation\">)</span>\n\nF1 <span class=\"token operator\">&lt;-</span>read.table<span class=\"token punctuation\">(</span><span class=\"token string\">\"F01_bin.1.pI\"</span><span class=\"token punctuation\">,</span> sep <span class=\"token operator\">=</span> <span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span> header <span class=\"token operator\">=</span> T<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Step 2 绘图，以下5选1</span>\n<span class=\"token comment\">## 单组加点，运行完后跳到Step 3</span>\np1 <span class=\"token operator\">&lt;-</span> ggplot<span class=\"token punctuation\">(</span>F1<span class=\"token punctuation\">,</span> aes<span class=\"token punctuation\">(</span>Isoelectric.point<span class=\"token punctuation\">,</span> Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>geom_point<span class=\"token punctuation\">(</span>size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>shape<span class=\"token operator\">=</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>geom_smooth<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span> <span class=\"token string\">\"gam\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>theme_classic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">## 单组无点，运行完后跳到Step 3</span>\np1 <span class=\"token operator\">&lt;-</span> ggplot<span class=\"token punctuation\">(</span>F1<span class=\"token punctuation\">,</span> aes<span class=\"token punctuation\">(</span>Isoelectric.point<span class=\"token punctuation\">,</span> Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>geom_smooth<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span> <span class=\"token string\">\"gam\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>theme_classic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">## 多组加点</span>\np1 <span class=\"token operator\">&lt;-</span> ggplot<span class=\"token punctuation\">(</span>F1<span class=\"token punctuation\">,</span> aes<span class=\"token punctuation\">(</span>Isoelectric.point<span class=\"token punctuation\">,</span> Relative.frequency<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>MAGs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>geom_point<span class=\"token punctuation\">(</span>size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>shape<span class=\"token operator\">=</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>geom_smooth<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span> <span class=\"token string\">\"gam\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>theme_classic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">## 多组无点显示置信区间</span>\np1 <span class=\"token operator\">&lt;-</span> ggplot<span class=\"token punctuation\">(</span>F1<span class=\"token punctuation\">,</span> aes<span class=\"token punctuation\">(</span>Isoelectric.point<span class=\"token punctuation\">,</span> Relative.frequency<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>MAGs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>geom_smooth<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span> <span class=\"token string\">\"gam\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>theme_classic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">## 多组无点去除置信区间</span>\np1 <span class=\"token operator\">&lt;-</span> ggplot<span class=\"token punctuation\">(</span>F1<span class=\"token punctuation\">,</span> aes<span class=\"token punctuation\">(</span>Isoelectric.point<span class=\"token punctuation\">,</span> Relative.frequency<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>MAGs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>geom_smooth<span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span> <span class=\"token string\">\"gam\"</span><span class=\"token punctuation\">,</span>se <span class=\"token operator\">=</span> <span class=\"token boolean\">FALSE</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>theme_classic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># Step 3 美化，看下图</span>\np1 <span class=\"token operator\">+</span> scale_x_continuous<span class=\"token punctuation\">(</span>limits<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> scale_y_continuous<span class=\"token punctuation\">(</span>limits<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">(</span>F1<span class=\"token operator\">$</span>Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">(</span>F1<span class=\"token operator\">$</span>Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> labs<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span> <span class=\"token string\">\"Isoelectric point\"</span><span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token string\">\"Relative frequency\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">## ==============以下代码为自用========================</span>\n<span class=\"token comment\">## F04自定义颜色</span>\np1 <span class=\"token operator\">+</span> scale_x_continuous<span class=\"token punctuation\">(</span>limits<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> scale_y_continuous<span class=\"token punctuation\">(</span>limits<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">(</span>F1<span class=\"token operator\">$</span>Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">(</span>F1<span class=\"token operator\">$</span>Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> labs<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span> <span class=\"token string\">\"Isoelectric point\"</span><span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token string\">\"Relative frequency\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> scale_color_manual<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"MAGs\"</span><span class=\"token punctuation\">,</span> values<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token string\">\"#1f77b4\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#ff7f0e\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#2ca02c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d62728\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#9467bd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#8c564b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#e377c2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#bcbd22\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">## F05自定义颜色</span>\np1 <span class=\"token operator\">+</span> scale_x_continuous<span class=\"token punctuation\">(</span>limits<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> scale_y_continuous<span class=\"token punctuation\">(</span>limits<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">(</span>F1<span class=\"token operator\">$</span>Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">(</span>F1<span class=\"token operator\">$</span>Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> labs<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span> <span class=\"token string\">\"Isoelectric point\"</span><span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token string\">\"Relative frequency\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> scale_color_manual<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"MAGs\"</span><span class=\"token punctuation\">,</span> values<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token string\">\"#1f77b4\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#ff7f0e\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#2ca02c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d62728\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#9467bd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#8c564b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#e377c2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#bcbd22\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#17becf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">## F06自定义颜色</span>\np1 <span class=\"token operator\">+</span> scale_x_continuous<span class=\"token punctuation\">(</span>limits<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> scale_y_continuous<span class=\"token punctuation\">(</span>limits<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">(</span>F1<span class=\"token operator\">$</span>Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> breaks <span class=\"token operator\">=</span> seq<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">(</span>F1<span class=\"token operator\">$</span>Relative.frequency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> labs<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span> <span class=\"token string\">\"Isoelectric point\"</span><span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token string\">\"Relative frequency\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> scale_color_manual<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"MAGs\"</span><span class=\"token punctuation\">,</span> values<span class=\"token operator\">=</span>c<span class=\"token punctuation\">(</span><span class=\"token string\">\"#1f77b4\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#ff7f0e\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#2ca02c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#d62728\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#9467bd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#8c564b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#e377c2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#bcbd22\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#17becf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#f7b6d2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#5254a3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#000000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"蛋白质组的全局 pIs\" /></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li>\n<p><a href=\"https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-019-0731-5#Abs1\">Pedro J. et al., 2019, Microbiome</a></p>\n</li>\n<li>\n<p><a href=\"http://emboss.sourceforge.net/\">EMBOSS</a></p>\n</li>\n</ul>\n<h1 id=\"代码获取\"><a class=\"markdownIt-Anchor\" href=\"#代码获取\"></a> 代码获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “85d7” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"},{"name":"蛋白质组","path":"api/tags/蛋白质组.json"}]},{"title":"Linux和基因组测序技术初识","slug":"Linux和基因组测序技术初识","date":"2019-10-31T14:05:49.000Z","updated":"2022-01-08T02:16:28.404Z","comments":true,"path":"api/articles/Linux和基因组测序技术初识.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png","content":"<p>该文档可以帮助读者入门 Linux 系统，掌握常用命令和多种软件安装方式。此外还简述了全基因组测序技术，希望读者可以通过此文档初步了解生物信息学。</p>\n<span id=\"more\"></span>\n<h1 id=\"linux初识\"><a class=\"markdownIt-Anchor\" href=\"#linux初识\"></a> Linux 初识</h1>\n<h2 id=\"目录结构与路径\"><a class=\"markdownIt-Anchor\" href=\"#目录结构与路径\"></a> 目录结构与路径</h2>\n<h3 id=\"根目录\"><a class=\"markdownIt-Anchor\" href=\"#根目录\"></a> 根目录</h3>\n<p>根目录（root）是系统最顶级目录，以 “/” 表示，其他目录均为根目录的下级目录。</p>\n<h3 id=\"家目录\"><a class=\"markdownIt-Anchor\" href=\"#家目录\"></a> 家目录</h3>\n<p>家目录（home）是用户的最顶级目录，以 “~/” 表示，用户所有的目录均为家目录的下级目录。</p>\n<h3 id=\"绝对路径\"><a class=\"markdownIt-Anchor\" href=\"#绝对路径\"></a> 绝对路径</h3>\n<p>绝对路径指的是目录或文件的绝对位置，是从根目录开始的完整路径，如 “/home/bio/”。可通过 “pwd” 命令获取当前目录的绝对路径。</p>\n<h3 id=\"相对路径\"><a class=\"markdownIt-Anchor\" href=\"#相对路径\"></a> 相对路径</h3>\n<p>相对路径不需要从根目录开始，只要指定与当前目录的相对位置即可。</p>\n<h3 id=\"当前目录\"><a class=\"markdownIt-Anchor\" href=\"#当前目录\"></a> 当前目录</h3>\n<p>当前所在的路径，以 “./“表示。</p>\n<h3 id=\"上级目录\"><a class=\"markdownIt-Anchor\" href=\"#上级目录\"></a> 上级目录</h3>\n<p>也称为父目录，以 “../“表示向上一级的目录，以 “../../” 表示向上两级的目录，以此类推。</p>\n<h2 id=\"命名法则\"><a class=\"markdownIt-Anchor\" href=\"#命名法则\"></a> 命名法则</h2>\n<ul>\n<li>文档与目录均以英文命名，可使用字母、数字和下划线；</li>\n<li>文档与目录的名称不允许存在空格；</li>\n<li>名称区分大小写。</li>\n</ul>\n<h2 id=\"终端工具\"><a class=\"markdownIt-Anchor\" href=\"#终端工具\"></a> 终端工具</h2>\n<p>终端（terminal）是运行 Linux 命令的工具，类似于 Windows 的命令行工具。Linux 各发行版均自带终端。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Linux自带终端\" /></p>\n<p>远程操控 Linux 服务器时，可以使用第三方的终端工具，如 PuTTy 软件。输入 IP 地址即可远程登录服务器运行命令。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Putty\" /></p>\n<p>本地计算机与服务器之间的文件传输可以通过 FTP 软件实现，如 FileZilla。输入服务器的 IP 地址、用户名、密码以及端口即可链接服务器。如果服务器采用的时 FTP 协议，则端口填写 21，若采用的是 SFTP 协议，则端口设置为 22。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"FileZilla\" /></p>\n<h2 id=\"常用的命令\"><a class=\"markdownIt-Anchor\" href=\"#常用的命令\"></a> 常用的命令</h2>\n<p><strong>pwd：</strong> 获取当前位置的绝对路径</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">pwd</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"获取当前位置的绝对路径\" /></p>\n<p><strong>mkdir：</strong> 创建目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"创建tools目录\" /></p>\n<p><strong>ls：</strong> 查看当前目录包含的内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看当前目录包含的内容\" /></p>\n<p>查看所有的目录和文件（包含隐藏的内容）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> -a<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看当前目录包含的所有内容\" /></p>\n<p>查看根目录所含内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> /<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看根目录所含内容\" /></p>\n<p>查看家目录所含内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> ~/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看家目录所含内容\" /></p>\n<p><strong>cd：</strong> 切换路径</p>\n<p>进入 “tools” 目录</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> tools<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"进入“tools”目录\" /></p>\n<p><strong>vim：</strong> 创建 / 编辑文档</p>\n<p>以下所有操作均需在英文输入法状态下进行。首先创建一个新文档 “example.txt”，并输入内容。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">vim</span> example.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"创建“example.txt”文档\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"此时无法输入内容\" /></p>\n<p>此时无法输入内容，需要按一下字母 “i” 键切换到输入模式。当左下角出现 “--NSERT --” 字样时，可以输入文字。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"vim插入模式\" /></p>\n<p>输入相关的内容。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"vim输入内容\" /></p>\n<p>输入完毕时需要先按一下 “ESC” 键退出编辑模式，此时 “--NSERT --” 字样消失。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"退出vim编辑模式\" /></p>\n<p>按住组合键 “shift + :” 切换到 vim 操作模式，此时左下角出现一个 “:”。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"shift + :\" /></p>\n<p>输入 “wq!” 保存修改并退出。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"保存并退出vim\" /></p>\n<p>查看创建的文件是否在于目录下。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看当前目录下的文件及目录\" /></p>\n<p><strong>cp：</strong> 复制目录或文件</p>\n<p>将创建的 “example.txt” 文档复制到上一级目录下。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">cp</span> example.txt <span class=\"token punctuation\">..</span>/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"向上级目录复制文件\" /></p>\n<p>查看上一级目录下是否存在刚刚复制的文档。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> <span class=\"token punctuation\">..</span>/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看父目录下的文件及目录\" /></p>\n<p><strong>rm：</strong> 删除目录或文件</p>\n<p>删除 tools 目录下的 “example.txt” 文档。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">rm</span> example.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"删除tools目录下的“example.txt”文档\" /></p>\n<p>查看文档是否被删除。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看是否成功删除文件\" /></p>\n<p><strong>mv：</strong> 移动 / 重命名</p>\n<p>将上一级目录下的 “example.txt” 文档移动到当前目录下。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">mv</span> <span class=\"token punctuation\">..</span>/example.txt ./<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"移动文件\" /></p>\n<p>查看文档是否移动成功。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> <span class=\"token punctuation\">..</span>/\n$ <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看是否成功移动文件\" /></p>\n<p>将 “example.txt” 文档重命名为 “examp2.txt”。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">mv</span> example.txt examp2.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"文档重命名\" /></p>\n<p>查看重命名结果。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看重命名结果\" /></p>\n<p><strong>wget：</strong> 下载</p>\n<p>使用 wget 工具下载基因组拼接软件 “AbySS” 到 tools 目录下。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">wget</span> http://www.bcgsc.ca/platform/bioinfo/software/abyss/releases/2.1.5/abyss-2.1.5.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"下载AbySS软件\" /></p>\n<p><strong>tar：</strong> 压缩 / 解压缩</p>\n<p>tar.gz 格式的文件可用 “tar zxvf” 进行解压，将刚才下载的 “abyss-2.1.5.tar.gz” 解压缩。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">tar</span> zxvf abyss-2.1.5.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"解压缩AbySS软件\" /></p>\n<p><strong>top：</strong> 查看系统进程</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">top</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"通过top查看系统进程\" /></p>\n<p>按字母键 “q” 退出。Ubuntu 还带有另一个更加直观的查看系统进程的工具 “htop”。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">htop</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"通过htop查看系统进程\" /></p>\n<h2 id=\"环境变量\"><a class=\"markdownIt-Anchor\" href=\"#环境变量\"></a> 环境变量</h2>\n<p>在软件安装的时候经常需要设置环境变量，所谓的环境变量就是告诉计算机软件的安装位置。存放环境变量的文件在用户的家目录下，为隐藏文件，可通过 “ls -a” 命令查看。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">ls</span> -a ~/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看家目录中的所有文档和目录\" /></p>\n<p>“.bashrc” 和 “.profile” 均为环境变量配置文件，通常我们只需要编辑 “.bashrc”。</p>\n<h2 id=\"软件安装\"><a class=\"markdownIt-Anchor\" href=\"#软件安装\"></a> 软件安装</h2>\n<h3 id=\"源码编译安装\"><a class=\"markdownIt-Anchor\" href=\"#源码编译安装\"></a> 源码编译安装</h3>\n<p>源码安装适合于所有的 Linux 发行版以及 macOS。以刚下载的 “AbySS” 基因组拼接软件为例演示源码编译安装，一共分三步：配置（./configure）、编译（make）和安装（sudo make install）。首先进入 “AbySS” 软件目录下，并查看目录中的文件，找到配置文件 “configure”，根据 “<a href=\"http://README.md\">README.md</a>” 中的指示对软件进行配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> abyss-2.1.5/\n$ <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"进入AbySS目录并查看其所含内容\" /></p>\n<p>“./configure” 表示运行 configure 进行安装前配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ./configure<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>进行编译</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">make</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>进行安装，需要 “sudo” 命令提供对系统目录的写入权限。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>注意：</strong> 以上只演示了一般的安装方法，但是 “AbySS” 软件依赖其他的一些软件，需要先安装依赖包，最后安装 “AbySS”，否则会安装失败。</p>\n<h2 id=\"通过包管理工具安装\"><a class=\"markdownIt-Anchor\" href=\"#通过包管理工具安装\"></a> 通过包管理工具安装</h2>\n<p>不同的 Linux 发行版具有各自的软件包管理器。目前常用的 Linux 发行版主要是基于 “RedHat” 和 “Debian” 而制作的。<br />\nRedHat 系列的包管理器为 “yum”，使用方法为在终端输入 “sudo yum install -y 软件名称”。</p>\n<p>Debian 系列的包管理器为 “apt-get”，使用方法为在终端输入 “sudo apt-get install 软件名称”。</p>\n<p>示例：通过 apt-get 在 Ubuntu 中安装 AbySS 软件，输入命令和密码后，根据提示输入 “Y” 并按回车键进行自动安装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> abyss<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"通过apt-get安装AbySS\" /></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"通过apt-get安装AbySS\" /></p>\n<h2 id=\"添加环境变量\"><a class=\"markdownIt-Anchor\" href=\"#添加环境变量\"></a> 添加环境变量</h2>\n<p>以原核生物基因预测软件 “Prodigal” 为例演示。首先在 Github 上找到 prodigal 的源码，点击 “Clone or download”，并按照图示点击链接右侧的图标以复制 git 地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"复制prodigal链接\" /></p>\n<p>在终端中进入 tools 目录，并输入克隆命令将项目克隆到本地计算机。命令公式为 “git clone link”。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> clone https://github.com/hyattpd/Prodigal.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"克隆prodigal\" /></p>\n<p>克隆完成后进入 “Prodigal” 目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> Prodigal<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"进入Prodigal目录\" /></p>\n<p>编译软件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">make</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"编译prodigal\" /></p>\n<p>报错信息提示找不到 gcc 命令，因此需要首先安装 gcc，输入命令后根据提示输入密码，直至安装完成。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gcc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"安装gcc\" /></p>\n<p>重新编译 prodigal</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">make</span>\n$ <span class=\"token function\">ls</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看prodigal编译结果\" /></p>\n<p>编译完成后得到了可执行程序，但是系统无法找到 prodigal 的路径，因此需要我们将其所在的路径加入到环境变量中。通过 vim 打开环境变量配置文件 “.bashrc”，进入编辑模式。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">vim</span> ~/.bashrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"打开环境变量文件\" /></p>\n<p>在文档末尾添加配置语句 <strong>“export PATH=<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>:</mo></mrow><annotation encoding=\"application/x-tex\">PATH:</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span></span></span>HOME/tools/Prodigal”</strong> 。$HOME 代表家目录，“$HOME/tools/Prodigal” 代表 prodigal 可执行程序所在的目录。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"在环境变量中添加prodigal路径\" /></p>\n<p>编辑完成后保存并退出。然后执行 “source ~/.bashrc” 命令刷新，通知系统 “.bashrc” 文档已经更改。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">source</span> ~/.bashrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"刷新环境变量\" /></p>\n<p>测试配置是否成功。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ prodigal -h<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看prodigal帮助信息\" /></p>\n<p>若要将其他软件加入到环境变量，只需在后面加入其他软件所在路径即可，各软件的路径间以英文 “:“分割，不得有空格。下图为将多个软件加入到环境变量的示例。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"添加多个软件路径\" /></p>\n<h2 id=\"创建软链接\"><a class=\"markdownIt-Anchor\" href=\"#创建软链接\"></a> 创建软链接</h2>\n<p>软链接（Soft Link）相当于 Windows 系统中的快捷方式，可以将可执行程序的软链接存放至系统默认的环境变量之中，如 “/usr/bin/” 或 “/usr/local/bin” 之中。仍旧以刚编译好的 prodigal 软件为例，创建软链接的公式为 <strong>“sudo ln -s /home/bio/tools/Prodigal/prodigal /usr/local/bin/prodigal”</strong> ，根据提示输入密码完成创建。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -s /home/bio/tools/Prodigal/prodigal /usr/local/bin/prodigal<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>通过 “whereis” 命令查看软链接是否创建成功。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">whereis</span> prodigal<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看prodigal安装路径\" /></p>\n<p><strong>注意：</strong> 创建软链接时要输入绝对路径，否则会报错 “Too many levels of symbolic links”。</p>\n<h2 id=\"通过anaconda包管理器进行安装\"><a class=\"markdownIt-Anchor\" href=\"#通过anaconda包管理器进行安装\"></a> 通过 Anaconda 包管理器进行安装</h2>\n<p><a href=\"https://www.anaconda.com/\">Anaconda</a> 是一款比较易用的跨平台软件包管理器，<a href=\"http://bioconda.github.io/\">Bioconda</a> 是 conda 的一个通道，专门管理生物信息学软件。通过 conda 安装软件时可以一键安装所有的依赖包，大大节约了时间并降低了安装难度。Bioconda 目前有超过 600 个贡献者和 500 个成员，大部分生物信息学软件都被包含其中。用户可以到其官网搜索需要的软件是否被囊括其中。</p>\n<p><strong>（1）安装 conda</strong></p>\n<p>此处，我们安装 Miniconda，进入<a href=\"https://docs.conda.io/en/latest/miniconda.html\">官网</a>，选择适应自身系统及 python 版本的安装文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看Miniconda安装包\" /></p>\n<p>查看系统 python 版本</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ python -v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"查看python版本\" /></p>\n<p>可以看出该系统已经安装了 python3，因此下载 Linux Python 3.7 64-bit (bash installer)。右键单击相应安装包获取链接，使用 wget 下载至 tools 目录下。建议用户安装 Python 3，因为 Python 软件基金会将于 2020 年元旦停止对 Python 2 的维护（<a href=\"https://pythonclock.org/%EF%BC%89%E3%80%82\">https://pythonclock.org/）。</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">wget</span> https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"下载Miniconda\" /></p>\n<p>开始安装 Miniconda</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">bash</span> Miniconda3-latest-Linux-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>根据提示按 “Enter” 键查看 license，并输入 “yes” 按 “Enter” 继续，按 “Enter” 确认安装位置，miniconda 被安装到家目录下的 miniconda3 目录中。最后输入 “yes”，按 “Enter” 进行初始化。最后，通过 “source ~/.bashrc” 命令刷新。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"初始化Miniconda\" /></p>\n<p><strong>（2）设置 bioconda channel</strong></p>\n<p>在终端中输入以下三条命令添加 channels：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ conda config --add channels defaults\n$ conda config --add channels bioconda\n$ conda config --add channels conda-forge<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>至此，bioconda 配置完毕，可以通过 conda 安装生物信息学软件。下面通过 conda 安装 mapping 软件 “bwa”。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ conda <span class=\"token function\">install</span> bwa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"安装bwa\" /></p>\n<p>根据提示输入 “y” 完成安装。</p>\n<h2 id=\"macos相关操作\"><a class=\"markdownIt-Anchor\" href=\"#macos相关操作\"></a> MacOS 相关操作</h2>\n<p>MacOS 与 Linux 系统相似，基本命令相同，但是软件安装存在一些差异。</p>\n<h3 id=\"macos安装生物信息学软件\"><a class=\"markdownIt-Anchor\" href=\"#macos安装生物信息学软件\"></a> MacOS 安装生物信息学软件</h3>\n<h3 id=\"源码安装\"><a class=\"markdownIt-Anchor\" href=\"#源码安装\"></a> 源码安装</h3>\n<p>源码安装方式与 Linux 安装方式一致。</p>\n<h3 id=\"创建软链接-2\"><a class=\"markdownIt-Anchor\" href=\"#创建软链接-2\"></a> 创建软链接</h3>\n<p>配置方法与 Linux 一致。</p>\n<h3 id=\"环境变量-2\"><a class=\"markdownIt-Anchor\" href=\"#环境变量-2\"></a> 环境变量</h3>\n<p>MacOS 环境变量配置方法与 Linux 配置方法一致，但配置文件为家目录下的 “.bash_profile”，即运行如下命令进行编辑。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">vim</span> ~/.bash_profile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>编辑完成并保存后需要运行 source 命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">source</span> ~/.bash_profile<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"包管理器\"><a class=\"markdownIt-Anchor\" href=\"#包管理器\"></a> 包管理器</h3>\n<p>MacOS 的软件包管理器为 Homebrew，可以在终端中通过以下命令安装 Homebrew。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ ruby -e <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\"token variable\">)</span></span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>通过 Homebrew 安装 mapping 软件 “bwa”。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> bwa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"macos配置anaconda\"><a class=\"markdownIt-Anchor\" href=\"#macos配置anaconda\"></a> MacOS 配置 Anaconda</h3>\n<p>安装 Miniconda</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">wget</span> https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\n$ <span class=\"token function\">sh</span> Miniconda3-latest-MacOSX-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>添加 Bioconda 通道</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ conda config --add channels defaults\n$ conda config --add channels bioconda\n$ conda config --add channels conda-forge<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>安装软件 bwa</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ conda <span class=\"token function\">install</span> bwa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"现代测序技术\"><a class=\"markdownIt-Anchor\" href=\"#现代测序技术\"></a> 现代测序技术</h1>\n<h2 id=\"二代测序next-generation-sequencing-technology\"><a class=\"markdownIt-Anchor\" href=\"#二代测序next-generation-sequencing-technology\"></a> 二代测序 (&quot;Next-generation&quot; sequencing technology)</h2>\n<p>第二代测序技术的核心思想是边合成边测序（Sequencing by Synthesis），即通过捕捉新合成的末端的标记来确定 DNA 的序列。应用最广的技术平台主要为 Illumina 公司的产品。其优点为高通量、错误率低、成本低等。</p>\n<ul>\n<li>Illumina 测序中的几个名词</li>\n<li><strong>Read length：</strong> 测序的 DNA 片段的碱基长度。</li>\n<li><strong>Insert size：</strong> 双端测序时接头（adapter）中间序列的长度。</li>\n<li><strong>Junction：</strong> insert 序列中间未被测序的部分。</li>\n<li><strong>Flowcell：</strong> 是指 Illumina 测序时，测序反应发生的位置，1 个 flowcell 含有 8 条 lane。</li>\n<li><strong>Lane：</strong> 每一个 flowcell 上都有 8 条泳道，用于测序反应，可以添加试剂，洗脱等等。</li>\n<li><strong>Raw data：</strong> 测序完成后未去接头、引物以及去除低质量序列的数据。</li>\n<li><strong>Clean data：</strong> 去除 Raw data 中的接头序列、linker、低质量 reads、长度较短的 reads 及核糖体 RNA 和 ncRNA 产生的 reads。</li>\n<li><strong>数据量：</strong> read 长度乘以 reads 数目。</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"二代测序名词示意图\" /></p>\n<h2 id=\"三代测序\"><a class=\"markdownIt-Anchor\" href=\"#三代测序\"></a> 三代测序</h2>\n<p>三代测序又称为单分子测序，测序过程无需进行 PCR 扩增，可以产生超长的 reads，因此能够跨越高 GC 含量区域和高度重复区域。目前常用的测序平台包括 Pacific Biosciences（PacBio）和 Oxford Nanopore。</p>\n<p>PacBio 以 SMRT Cell 为载体进行测序反应，SMRT Cell 是一张带有纳米孔的超薄金属片。PacBio 采用边合成便测序的方式，测序反应在纳米孔中进行，一个纳米孔中固定一个 DNA 聚合酶和一条 DNA 模板。延伸反应的过程中检测 dNTP 荧光信号以确定碱基顺序。</p>\n<p>Oxford 开发的纳米单分子测序技术属于真正的实时测序，它基于电信号来判读碱基。</p>\n<caption>Table 1. Characteristics, strengths and weaknesses of commonly used sequencing platforms (Besser et al. 2018)</caption>\n<table border=\"1\">\n<tr>\n<th>Platform\\Instrument</th>\n<th>Throughput (Gb)</th>\n<th>Read length (bp)</th>\n<th>Strength</th>\n<th>Weakness</th>\n</tr>\n<tr>\n<td><B>Sanger sequencing</B></td>\n</tr>\n<tr>\n<td>ABI 3500/3730</td>\n<td>0.0003</td>\n<td>Up to 1 kb</td>\n<td>Read accuracy and length</td>\n<td>Cost and throughput</td>\n</tr>\n<tr>\n<td><B>Illumina</B></td>\n</tr>\n<tr>\n<td>MiniSeq</td>\n<td>1.7–7.5</td>\n<td>1×75 to ×150</td>\n<td>Low initial investment</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>MiSeq</td>\n<td>0.3–15</td>\n<td>1×36 to 2×300</td>\n<td>Read length, scalability</td>\n<td>Run length</td>\n</tr>\n<tr>\n<td>NextSeq</td>\n<td>10–120</td>\n<td>1×75 to 2×150</td>\n<td>Throughput</td>\n<td>Run and read length</td>\n</tr>\n<tr>\n<td>HiSeq (2500)</td>\n<td>10–1000</td>\n<td>×50 to ×250</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td>NovaSeq 5000/6000</td>\n<td>2000–6000</td>\n<td>2×50 to ×150</td>\n<td>Read accuracy, throughput</td>\n<td>High initial investment, run</td>\n</tr>\n<tr>\n<td><B>IonTorrent</B></td>\n</tr>\n<tr>\n<td>PGM</td>\n<td>0.08–2</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Throughput, homopolymers</td>\n</tr>\n<tr>\n<td>S5</td>\n<td>0.6–15</td>\n<td>Up to 400</td>\n<td>Read length, speed</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td>Proton</td>\n<td>10–15</td>\n<td>Up to 200</td>\n<td>Speed, throughput</td>\n<td>Homopolymers</td>\n</tr>\n<tr>\n<td><B>Pacific BioSciences</B></td>\n</tr>\n<tr>\n<td>PacBio RSII</td>\n<td>0.5–1</td>\n<td>Up to 60 kb</td>\n<td>ead length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate and initial</td>\n</tr>\n<tr>\n<td>Sequel</td>\n<td>5–10</td>\n<td>Up to 60 kb</td>\n<td>Read length, speed (Average 10 kb, N50 20 kb)</td>\n<td>High error rate</td>\n</tr>\n<tr>\n<td><B>Oxford Nanopore</B></td>\n</tr>\n<tr>\n<td>MInION</td>\n<td>0.1–1</td>\n<td>Up to 100 kb</td>\n<td>Read length, portability</td>\n<td>High error rate, run length</td>\n</tr>\n</table>\n<h2 id=\"常见序列格式\"><a class=\"markdownIt-Anchor\" href=\"#常见序列格式\"></a> 常见序列格式</h2>\n<h3 id=\"fastq\"><a class=\"markdownIt-Anchor\" href=\"#fastq\"></a> Fastq</h3>\n<p>我们得到的下机序列一般为 fastq 格式，每一条 read 包含 4 行，第一行为测序仪器信息以及测序信息，第二行为碱基序列，第三行一般无信息，第四行为对应第二行中每个碱基的测序质量信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"fastq文件内容\" /></p>\n<caption>Table 2. Descriptions of the first line of the fastq file</caption>\n<table border=\"1\">\n<tr>\n<th>Strings</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>@ST-E00310</td>\n<td>The unique instrument name</td>\n</tr>\n<tr>\n<td>147</td>\n<td>The run id</td>\n</tr>\n<tr>\n<td>HVT25CCXX</td>\n<td>The flowcell id</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Flowcell lane</td>\n</tr>\n<tr>\n<td>1011</td>\n<td>The number within the flowcell lane</td>\n</tr>\n<tr>\n<td>13382</td>\n<td>‘x’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1819</td>\n<td>‘y’-coordinate of the cluster within the title</td>\n</tr>\n<tr>\n<td>1</td>\n<td>The number of a pair, 1 or 2 (paired-end or mate-pair reads only)</td>\n</tr>\n<tr>\n<td>N</td>\n<td>Y if the read fails filter (read is bad), N otherwise</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0 when none of the control bits are on, otherwise it is an even number</td>\n</tr>\n<tr>\n<td>TGAAGACA</td>\n<td>Index sequence</td>\n</tr>\n</table>\n<h3 id=\"fasta\"><a class=\"markdownIt-Anchor\" href=\"#fasta\"></a> Fasta</h3>\n<p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.fasta.html?highlight=fasta#module-skbio.io.format.fasta\">FASTA</a> 格式为文本文档，内含核苷酸或氨基酸序列以及其 IDs。每条序列包含两部分，第一部分为 ID 及注释信息，以 <strong>&quot;&gt;&quot;</strong> 开头，at the start, 第二部分为核苷酸序列或氨基酸序列。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"fasta文件内容\" /></p>\n<h3 id=\"genbank\"><a class=\"markdownIt-Anchor\" href=\"#genbank\"></a> Genbank</h3>\n<p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.genbank.html\">GenBank</a> 格式包含了基因组序列和注释信息。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Genbank文件内容\" /></p>\n<h3 id=\"gff3\"><a class=\"markdownIt-Anchor\" href=\"#gff3\"></a> GFF3</h3>\n<p><a href=\"http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.gff3.html?highlight=gff#module-skbio.io.format.gff3\">GFF3</a> (Generic Feature Format version 3) 格式描述了序列的特征，每一行含有 9 列数据，列与列之间以制表符分割。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"GFF3文件内容\" /></p>\n<h2 id=\"基因组拼接基本概念\"><a class=\"markdownIt-Anchor\" href=\"#基因组拼接基本概念\"></a> 基因组拼接基本概念</h2>\n<h3 id=\"测序深度\"><a class=\"markdownIt-Anchor\" href=\"#测序深度\"></a> 测序深度</h3>\n<p>测序深度（Sequencing depth）指测序得到的总碱基数（read 长度 x reads 数目）与待测基因组大小的比值。假设一个基因组大小为 2M，测序深度为 10X，那么获得的总数据量为 20M。</p>\n<h3 id=\"测序覆盖度\"><a class=\"markdownIt-Anchor\" href=\"#测序覆盖度\"></a> 测序覆盖度</h3>\n<p>指测序获得的序列占整个基因组的比例。由于基因组中的高 GC、重复序列等复杂区域的存在，测序获得的序列经常无法覆盖基因组上所有的区域。例如覆盖度是 96%，表明还有 4% 的序列区域未测到。</p>\n<h3 id=\"read-contig-scaffold\"><a class=\"markdownIt-Anchor\" href=\"#read-contig-scaffold\"></a> Read、Contig、Scaffold</h3>\n<p>测序得到的序列被称作 reads，在一个 read 中连续的 N 个碱基所组成的序列称作 k-mer，把 k-mer 集合拼接起来形成的长 DNA 序列称为 contig。通过 pair ends 信息将 contigs 按顺序进行排列得到 scaffold。</p>\n<h3 id=\"n50\"><a class=\"markdownIt-Anchor\" href=\"#n50\"></a> N50</h3>\n<p>将 contigs 或 scaffolds 根据长度从大到小排列并累加，当其累计长度达到全部组装序列总长度的 50% 时，加上去的最后一个 contig 或 scaffold 的大小即为 N50 的大小，N50 是评价基因组拼接质量的重要参数。</p>\n<h1 id=\"参考文献\"><a class=\"markdownIt-Anchor\" href=\"#参考文献\"></a> 参考文献</h1>\n<p>Besser J, Carleton HA, Gerner-Smidt P, Lindsey RL, Trees E. Next-generation sequencing technologies and their application to the study and control of bacterial infections. <em>Clinical Microbiology and Infection</em>, 2018, 24: 335-341</p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"WGS","path":"api/tags/WGS.json"}]},{"title":"SignalP+TMHMM预测微生物分泌蛋白","slug":"SignalP-TMHMM预测微生物分泌蛋白","date":"2021-10-14T01:09:45.000Z","updated":"2022-01-08T02:16:28.415Z","comments":true,"path":"api/articles/SignalP-TMHMM预测微生物分泌蛋白.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg","content":"<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p>\n<p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的 N 端有一般由 15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度 5-30 个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的 N - 末端的氨基酸序列（有时不一定在 N 端）。<u>使用<strong> SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong> TMHMM</strong> 注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p>\n<h1 id=\"ruby软件-rtsoftwarertruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件-rtsoftwarertruby\"></a> <ruby>软件 <rt>Software</rt></ruby></h1>\n<ul>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li>\n<p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p>\n<ul>\n<li>\n<p>Sec/SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的 “标准” 分泌信号肽；<rt>&quot;Standard&quot; secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li>\n<p>Sec/SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li>\n<p>Tat/SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p>\n</li>\n<li>\n<p>Tat/SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p>\n</li>\n<li>\n<p>Sec/SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD/PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD/PibD).</rt></ruby></p>\n</li>\n<li>\n<p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\">TMHMM V2.0c</a></p>\n<ul>\n<li>用于预测蛋白质中的跨膜螺旋。</li>\n</ul>\n</li>\n<li>\n<p>Python</p>\n</li>\n</ul>\n<p>SignalP 和 TMHMM 对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h 有效时间）。</p>\n<h1 id=\"ruby软件安装-rtinstallation-of-softwaresrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件安装-rtinstallation-of-softwaresrtruby\"></a> <ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1>\n<h2 id=\"安装signalp-60\"><a class=\"markdownIt-Anchor\" href=\"#安装signalp-60\"></a> 安装 SignalP 6.0</h2>\n<ul>\n<li>\n<p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\"> SignalP V6.0</a> 网站，找到 “Download”，填写相关信息，获取下载链接，下载得到 “signalp-6.0.fast.tar.gz”。有两个模式可以选择 ——“slow_sequential” 和 “fast&quot;。前者 runs the full model sequentially, taking the same amount of RAM as  <code>fast</code>  but being 6 times slower；后者 uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是 fast 模式。</p>\n</li>\n<li>\n<p><ruby>安装 <rt>Installation</rt></ruby></p>\n<ul>\n<li>\n<p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p>\n<ul>\n<li>\n<p>Python</p>\n</li>\n<li>\n<p>matplotlib&gt;3.3.2</p>\n</li>\n<li>\n<p>numpy&gt;1.19.2</p>\n</li>\n<li>\n<p>torch&gt;1.7.0</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> torch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>tqdm&gt;4.46.1</p>\n</li>\n</ul>\n</li>\n<li>\n<p>安装 SignalP 6.0</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压缩安装文件</span>\n<span class=\"token function\">tar</span> zxvf signalp-6.0.fast.tar.gz\n\n<span class=\"token comment\"># 进入解压后的软件目录，在终端运行</span>\npython setup.py <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># 测试安装</span>\nsignalp6 --help<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装tmhmm-v20c\"><a class=\"markdownIt-Anchor\" href=\"#安装tmhmm-v20c\"></a> 安装 TMHMM V2.0c</h2>\n<ul>\n<li>\n<p>下载</p>\n<p>访问<a href=\"https://services.healthtech.dtu.dk/service.php?TMHMM-2.0\"> TMHMM V2.0c</a> 网站，找到 “Download”，填写相关信息，获取下载链接，下载得到 “tmhmm-2.0c.Linux.tar.gz”。</p>\n</li>\n<li>\n<p>安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 解压缩</span>\n<span class=\"token function\">tar</span> zxvf tmhmm-2.0c.Linux.tar.gz\n\n<span class=\"token comment\"># 进入解压后的目录</span>\n<span class=\"token builtin class-name\">cd</span> tmhmm-2.0c\n\n<span class=\"token comment\"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span>\n<span class=\"token builtin class-name\">pwd</span>\n\n<span class=\"token comment\"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span>\n\n<span class=\"token comment\"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p><font color=\"#FF0000\">运行错误</font></p>\n<p>运行软件时总报 <code>Segmentation fault (core dumped)</code>  错误，暂时无解。各位可以使用其<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">在线版</a>。</p>\n</li>\n</ul>\n<h1 id=\"ruby软件用法-rtusagertruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby软件用法-rtusagertruby\"></a> <ruby>软件用法 <rt>Usage</rt></ruby></h1>\n<h2 id=\"signalp-60\"><a class=\"markdownIt-Anchor\" href=\"#signalp-60\"></a> SignalP 6.0</h2>\n<h3 id=\"ruby预测-rtpredictionrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby预测-rtpredictionrtruby\"></a> <ruby>预测 <rt>Prediction</rt></ruby></h3>\n<p>A command takes the following form</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>\n<p><code>fastafile</code>  <ruby>输入文件为 FASTA 格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p>\n</li>\n<li>\n<p><code>organism</code>  is either  <code>other</code>  or  <code>Eukarya</code> . Specifying  <code>Eukarya</code>  triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec/SPI).</p>\n</li>\n<li>\n<p><code>format</code>  can take the values  <code>txt</code> ,  <code>png</code> ,  <code>eps</code> ,  <code>all</code> . It defines what output files are created for individual sequences.  <code>txt</code>  produces a tabular  <code>.gff</code>  file with the per-position predictions for each sequence.  <code>png</code> ,  <code>eps</code> ,  <code>all</code>  additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p>\n</li>\n<li>\n<p><code>mode</code>  is either  <code>fast</code> ,  <code>slow</code>  or  <code>slow-sequential</code> . Default is  <code>fast</code> , which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster.  <code>slow</code>  runs the full model in parallel, which requires more than 14GB of RAM to be available.  <code>slow-sequential</code>  runs the full model sequentially, taking the same amount of RAM as  <code>fast</code>  but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p>\n</li>\n</ul>\n<h3 id=\"ruby输出rt-outputsrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby输出rt-outputsrtruby\"></a> <ruby>输出<rt> Outputs</rt></ruby></h3>\n<ul>\n<li>\n<p>output_dir/output.gff3：仅包含含有信号肽的序列信息；</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"output.gff3\" /></p>\n</li>\n<li>\n<p>output_dir/prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li>\n<p>output_dir/region_output.gff3：包含所有的信号肽区域信息。</p>\n<ul>\n<li>\n<p>n-region: The n-terminal region of the signal peptide. Reported for Sec/SPI, Sec/SPII, Tat/SPI and Tat/SPII. Labeled as N</p>\n</li>\n<li>\n<p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec/SPI, Sec/SPII, Tat/SPI and Tat/SPII. Labeled as H</p>\n</li>\n<li>\n<p>c-region: The c-terminal region of the signal peptide, reported for Sec/SPI and Tat/SPI.</p>\n</li>\n<li>\n<p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p>\n</li>\n<li>\n<p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p>\n</li>\n<li>\n<p>Sec/SPIII: These signal peptides have no known region structure.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"region_output.gff3\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"批处理与结果优化\"><a class=\"markdownIt-Anchor\" href=\"#批处理与结果优化\"></a> 批处理与结果优化</h3>\n<p>脚本名：run_SignalP.pl</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 14, 2021</span>\n\n\nopen IDNOSEQ<span class=\"token punctuation\">,</span> <span class=\"token string\">\">IDNOSEQ.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@faa</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*.faa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span>  <span class=\"token punctuation\">(</span><span class=\"token variable\">@faa</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(.+).faa/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".nodesc\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$sigseq</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".sigseq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$outdir</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_signalp\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$out\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\">/^(>\\S+)/</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$1</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token variable\">$_</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span> <span class=\"token operator\">=</span> idseq<span class=\"token punctuation\">(</span><span class=\"token variable\">$out</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$gff</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$outdir</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/output.gff3\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token operator\">-z</span> <span class=\"token variable\">$gff</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\topen IN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$gff\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t\topen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$sigseq\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>exists <span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">print</span> IDNOSEQ <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"$lines[0]\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tclose IN<span class=\"token punctuation\">;</span>\n\t\tclose OUT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"rm $out\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv $sigseq $outdir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\nclose IDNOSEQ<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token function\"><span class=\"token keyword\">sub</span> idseq</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>将 run_SignalP.pl 与后缀名为 “.faa” 的 FASTA 格式文件放在同一目录下，在终端中运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl run_SignalP.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"ruby结果解读rtoutput-interpretationrtruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby结果解读rtoutput-interpretationrtruby\"></a> <ruby>结果解读<rt>Output interpretation</rt></ruby></h3>\n<p>* 代表输入文件的名字。</p>\n<ul>\n<li>\n<p>*_signalp/output.gff3：仅包含含有信号肽的序列信息；</p>\n</li>\n<li>\n<p>*_signalp/prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p>\n</li>\n<li>\n<p>*_signalp/region_output.gff3：包含所有的信号肽区域信息；</p>\n</li>\n<li>\n<p><strong>*_signalp/*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作 TMHMM 的输入文件。</p>\n</li>\n</ul>\n<h2 id=\"tmhmm\"><a class=\"markdownIt-Anchor\" href=\"#tmhmm\"></a> TMHMM</h2>\n<h3 id=\"预测\"><a class=\"markdownIt-Anchor\" href=\"#预测\"></a> 预测</h3>\n<p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的 “*_signalp/*.sigseq”，将其上传至网页版<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\"> TMHMM</a>，提交任务，等待结果即可。</p>\n<h3 id=\"结果展示\"><a class=\"markdownIt-Anchor\" href=\"#结果展示\"></a> 结果展示</h3>\n<p>TMHMM 可以输出多种格式的结果文件，具体请参考其<a href=\"http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output\">官方说明</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"在TMHMM网站提交任务\" /></p>\n<ul>\n<li>\n<p><strong>Long output format</strong></p>\n<ul>\n<li>\n<p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li>\n<p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p>\n</li>\n<li>\n<p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li>\n<p>Exp number, first 60 AAs：<ruby>在蛋白的前 60 个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li>\n<p>Total prob of N-in：<ruby>N 端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p>\n</li>\n<li>\n<p>POSSIBLE N-term signal sequence：<ruby>当 “Exp number, first 60 AAs” 大于 10 时产生的警告。 <rt> A warning that is produced when &quot;Exp number, first 60 AAs&quot; is larger than 10.</rt></ruby></p>\n</li>\n</ul>\n</li>\n<li>\n<p>蛋白 F01_bin.1_00110 共计 436 个氨基酸，有 5 个跨膜螺旋结构。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"含有跨膜结构的蛋白\" /></p>\n</li>\n<li>\n<p>蛋白 F01_bin.1_00142 共计 557 个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"不含跨膜结构的蛋白\" /></p>\n</li>\n<li>\n<p><strong>Short output format</strong></p>\n<ul>\n<li>\n<p>&quot;len=&quot;： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;ExpAA=&quot;：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p>\n</li>\n<li>\n<p>&quot;First60=&quot;：<ruby>在蛋白的前 60 个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;PredHel=&quot;：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p>\n</li>\n<li>\n<p>&quot;Topology=&quot;：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由 “i” 分隔，如果螺旋在外部，则由 “o” 分隔。'i7-29o44-66i87-109o' 意味着它从膜内开始，在位置 7 到 29 有一个预测的 TMH，30-43 在膜外，然后是位置 44-66 的 TMH。</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"Short output format\" /></p>\n</li>\n</ul>\n<h3 id=\"结果汇总\"><a class=\"markdownIt-Anchor\" href=\"#结果汇总\"></a> 结果汇总</h3>\n<p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong> run_SignalP.pl</strong> 生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong> Statistics.txt</strong> 中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp/*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp/*.membrane.faa</b>文件中。该过程将通过<strong> tmhmm_parser.pl</strong> 完成。</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\"><span class=\"token comment\">#!/usr/bin/perl</span>\n<span class=\"token keyword\">use</span> strict<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> warnings<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># Author: Liu Hualin</span>\n<span class=\"token comment\"># Date: Oct 15, 2021</span>\n\nopen OUT<span class=\"token punctuation\">,</span> <span class=\"token string\">\">Statistics.txt\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"Strain name\\tSignal peptide numbers\\tSecretory protein numbers\\tMembrane protein numbers\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">my</span> <span class=\"token variable\">@sig</span> <span class=\"token operator\">=</span> glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*_signalp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token keyword\">my</span> <span class=\"token variable\">$sig</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@sig</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$sig</span><span class=\"token operator\">=~</span><span class=\"token regex\">/(.+)_signalp/</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$tmhmm</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sig</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/$str\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"_TMHMM_SHORT.txt\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sig</span> <span class=\"token operator\">.</span> <span class=\"token string\">\"/$str\"</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".sigseq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$secretory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".secretory.faa\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$membrane</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$str</span> <span class=\"token operator\">.</span> <span class=\"token string\">\".membrane.faa\"</span><span class=\"token punctuation\">;</span>\n\topen SEC<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$secretory\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\topen MEM<span class=\"token punctuation\">,</span> <span class=\"token string\">\">$membrane\"</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$on</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span> <span class=\"token operator\">=</span> idseq<span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$tmhmm</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$_</span><span class=\"token operator\">=~</span><span class=\"token regex\">s/[\\r\\n]+//g</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#\t\tprint $_ . \"\\n\";</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">@lines</span> <span class=\"token operator\">=</span> split <span class=\"token regex\">/\\t/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lines</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">eq</span> <span class=\"token string\">\"Topology=o\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$out</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> SEC <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token variable\">$on</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">print</span> MEM <span class=\"token string\">\">$lines[0]\\n$hash&#123;$lines[0]&#125;\\n\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\tclose SEC<span class=\"token punctuation\">;</span>\n\tclose MEM<span class=\"token punctuation\">;</span>\n\tsystem<span class=\"token punctuation\">(</span><span class=\"token string\">\"mv $secretory $membrane $sig\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$total</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$out</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$on</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">print</span> OUT <span class=\"token string\">\"$str\\t$total\\t$out\\t$on\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nclose OUT<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\"><span class=\"token keyword\">sub</span> idseq</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fasta</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@_</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">my</span> <span class=\"token variable\">%hash</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">local</span> <span class=\"token variable\">$/</span> <span class=\"token operator\">=</span> <span class=\"token string\">\">\"</span><span class=\"token punctuation\">;</span>\n\topen IN<span class=\"token punctuation\">,</span> <span class=\"token variable\">$fasta</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token filehandle symbol\">&lt;IN></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tchomp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> split <span class=\"token punctuation\">(</span><span class=\"token regex\">/\\n/</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$header</span> <span class=\"token operator\">=~</span> <span class=\"token regex\">/(\\S+)/</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">my</span> <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$hash</span><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$seq</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tclose IN<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">%hash</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">perl tmhmm_parser.pl<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"脚本获取\"><a class=\"markdownIt-Anchor\" href=\"#脚本获取\"></a> 脚本获取</h1>\n<p>关注公众号 “生信之巅”，聊天窗口回复 “c886” 获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li>\n<p><a href=\"https://services.healthtech.dtu.dk/service.php?SignalP-6.0\">SignalP V6.0</a></p>\n</li>\n<li>\n<p><a href=\"http://www.cbs.dtu.dk/services/TMHMM/\">TMHMM</a></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"SY179","path":"api/tags/SY179.json"},{"name":"生信软件","path":"api/tags/生信软件.json"},{"name":"WGS","path":"api/tags/WGS.json"}]}]}