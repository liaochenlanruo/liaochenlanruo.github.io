{"name":"软件","postlist":[{"title":"R语言安装依赖包错误集锦","slug":"R语言安装依赖包错误集锦","date":"2021-11-02T04:56:45.000Z","updated":"2024-03-11T13:07:17.325Z","comments":true,"path":"api/articles/R语言安装依赖包错误集锦.json","excerpt":null,"keywords":null,"cover":null,"content":"<h1 id=\"devtools安装错误\"><a href=\"#devtools安装错误\" class=\"headerlink\" title=\"devtools安装错误\"></a>devtools安装错误</h1><h2 id=\"XML包-安装之-ERROR-configuration-failed-for-package-‘XML’\"><a href=\"#XML包-安装之-ERROR-configuration-failed-for-package-‘XML’\" class=\"headerlink\" title=\"XML包 安装之 ERROR: configuration failed for package ‘XML’\"></a>XML包 安装之 ERROR: configuration failed for package ‘XML’</h2><ul>\n<li><p>CentOS解决方案</p>\n<p>在Linux终端中运行如下命令即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y libxml2-devel</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"qiime2R安装错误\"><a href=\"#qiime2R安装错误\" class=\"headerlink\" title=\"qiime2R安装错误\"></a>qiime2R安装错误</h1><h2 id=\"rjcommon-h-11-21-fatal-error-jpeglib-h-No-such-file-or-directory\"><a href=\"#rjcommon-h-11-21-fatal-error-jpeglib-h-No-such-file-or-directory\" class=\"headerlink\" title=\"rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory\"></a>rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory</h2><p>该错误是安装依赖包“jpeg”时发生的。</p>\n<ul>\n<li><p>CentOS解决方案</p>\n<p>在Linux终端中运行如下命令即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install sudo yum install -y libjpeg-turbo-devel.x86_64</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"WGCNA安装错误\"><a href=\"#WGCNA安装错误\" class=\"headerlink\" title=\"WGCNA安装错误\"></a>WGCNA安装错误</h1><p>Warning in install.packages :<br>  没有’‘impute’, ‘preprocessCore’, ‘GO.db’, ‘AnnotationDbi’’这种相依关系</p>\n<ul>\n<li>解决方案：在R环境下通过<code>BiocManager</code>安装<code>GO.db</code>。<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"operator\">!</span>requireNamespace<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">,</span> quietly <span class=\"operator\">=</span> <span class=\"literal\">TRUE</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">  install.packages<span class=\"punctuation\">(</span><span class=\"string\">&quot;BiocManager&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">BiocManager<span class=\"operator\">::</span>install<span class=\"punctuation\">(</span><span class=\"built_in\">c</span><span class=\"punctuation\">(</span><span class=\"string\">&quot;GO.db&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;impute&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;preprocessCore&quot;</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"在Linux服务器中安装网页版Rstudio","slug":"在Linux服务器中安装网页版Rstudio","date":"2021-11-02T01:37:03.000Z","updated":"2024-03-11T13:07:17.353Z","comments":true,"path":"api/articles/在Linux服务器中安装网页版Rstudio.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg","content":"<p>本文演示如何在CentOS7服务器上安装Rstudio server。</p>\n<h1 id=\"安装Rstudio\"><a href=\"#安装Rstudio\" class=\"headerlink\" title=\"安装Rstudio\"></a>安装Rstudio</h1><p>访问<a href=\"https://www.rstudio.com/products/rstudio/download-server\">Rstudio官网</a>，选择对应的Linux发行版，下载Rstudio安装包。本文以最常见的CentOS7为例演示，<strong>前提是系统中已经安装了R</strong>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://download2.rstudio.org/server/centos7/x86_64/rstudio-server-rhel-2021.09.0-351-x86_64.rpm</span><br><span class=\"line\">sudo yum install rstudio-server-rhel-2021.09.0-351-x86_64.rpm</span><br></pre></td></tr></table></figure>\n<h1 id=\"开启Rstudio服务\"><a href=\"#开启Rstudio服务\" class=\"headerlink\" title=\"开启Rstudio服务\"></a>开启Rstudio服务</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> rstudio-server.service</span><br><span class=\"line\">sudo systemctl start rstudio-server.service</span><br><span class=\"line\">sudo systemctl status rstudio-server</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"开启8787端口\"><a href=\"#开启8787端口\" class=\"headerlink\" title=\"开启8787端口\"></a>开启8787端口</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo firewalld</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-port=8787/tcp</span><br><span class=\"line\">sudo firewall-cmd --permanent --add-port=8787/udp</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"远程登录Rstudio\"><a href=\"#远程登录Rstudio\" class=\"headerlink\" title=\"远程登录Rstudio\"></a>远程登录Rstudio</h1><p>在浏览器地址栏输入<code>http://ip:8787/</code>打开网页，输入自己的用户名和密码登录即可。</p>\n<h1 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h1><h2 id=\"Rstudio服务启动失败\"><a href=\"#Rstudio服务启动失败\" class=\"headerlink\" title=\"Rstudio服务启动失败\"></a>Rstudio服务启动失败</h2><h3 id=\"症状\"><a href=\"#症状\" class=\"headerlink\" title=\"症状\"></a>症状</h3><p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server status\"></p>\n<h3 id=\"排雷\"><a href=\"#排雷\" class=\"headerlink\" title=\"排雷\"></a>排雷</h3><ul>\n<li><p>检查安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rstudio-server verify-installation</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server verify-installation\"></p>\n<p>提示“&#x2F;usr&#x2F;lib&#x2F;rstudio-server&#x2F;bin&#x2F;rsession: error while loading shared libraries: libR.so: cannot open shared object file: No such file or directory”，表明缺少libR.so库。</p>\n</li>\n<li><p>安装R</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y R.x86_64</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>再次检查安装情况</p>\n<p>提示找不到R。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"sudo rstudio-server verify-installation\"></p>\n<p>可以看到这里进入了conda的base环境，它影响了程序的判断，退出conda环境后再试一下就不再报错了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure>\n\n<p><strong>注</strong>：conda环境一定要退彻底。</p>\n</li>\n<li><p>再次启动Rstudio服务，并查看状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rstudio-server start</span><br><span class=\"line\">sudo rstudio-server status</span><br></pre></td></tr></table></figure>\n\n<p>  <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"rstudio-server正常运行\"></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"生物信息学3：微生物基因组学常用软件安装","slug":"生物信息学3：微生物基因组学常用软件安装","date":"2018-12-04T13:42:18.000Z","updated":"2024-03-11T13:07:17.374Z","comments":true,"path":"api/articles/生物信息学3：微生物基因组学常用软件安装.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文详细介绍了Linux各发行版通用的几种软件安装方案，并有实例，主要是微生物基因组学常用软件的安装。</p>\n<span id=\"more\"></span>\n\n<p><strong>一、Linux 安装软件的常用方法：</strong><br>（1）将可执行程序加入环境变量</p>\n<p>一些软件包内包含的是可执行程序，不需要进行编译，这类程序可以在软件目录中通过终端“.&#x2F;主程序名”命令运行。所以可以将主程序所在的目录加入到环境变量中即可。常见的环境变量配置文件包括家目录下的“zshrc”、“bashrc”以及&#x2F;etc目录下的“profile”。</p>\n<p>（2）创建可执行程序的软连接到已在环境变量的目录下</p>\n<p>可以视为方法一的另一种实现策略，通过“ln -s A B”进行创建，软连接可以理解为Windows下的快捷方式。A为主程序的绝对路径（包含主程序名称），B为目标路径，即放置软件快捷方式的地方（包含主程序名），一般可存于“&#x2F;usr&#x2F;loacl&#x2F;bin”下。</p>\n<p>（3）源码配置编译及安装</p>\n<p>特点为解压源码包之后，存在“configure”文件，一般分三步安装，即在软件目录下打开终端，依次运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<p>（4）通过源进行安装</p>\n<p>不同的Linux发行版含有不同的源和软件安装工具，只要联网，一条命令即可安装源中含有的软件。</p>\n<p>Ubuntu可以通过“sudo apt-get install 程序名”进行安装</p>\n<p>Centos可以通过“sudo yum install 程序名”进行安装</p>\n<blockquote>注：前三种方法适合任意Linux发行版，安装软件前可以先通过方法4进行，若源中不包含此软件再用前三种方法。</blockquote>\n\n\n<p><strong>二、软件下载及存储</strong><br>首先在Home目录下创建Tools目录，所有下载的软件均存放于tools目录之下，此处我的家目录为“manager”，即我软件存放目录为“&#x2F;home&#x2F;manager&#x2F;Tools”。</p>\n<p><strong>三、软件安装</strong><br><strong>1. ABySS</strong></p>\n<p>首先安装依赖包：</p>\n<p>Open MPI</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf openmpi-4.0.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> openmpi-4.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make all install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n<p>Git（可以不安装）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev git</span><br></pre></td></tr></table></figure>\n<p>sparsehash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/sparsehash/sparsehash.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> sparsehash</span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br></pre></td></tr></table></figure>\n<p>ABySS</p>\n<p>首先删除旧版本（Bio-Linux自带的）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove abyss</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf abyss-2.1.4.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> abyss-2.1.4</span><br><span class=\"line\"></span><br><span class=\"line\">wget http://downloads.sourceforge.net/project/boost/boost/1.56.0/boost_1_56_0.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">tar jxf boost_1_56_0.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">./configure --enable-maxk=160 --with-mpi=/usr/local/lib/openmpi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#（注：openmpi的路径用“whereis openmpi”寻找）</span></span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<p>不能多线程运行时（np&#x3D;2），错误提示为“&#x2F;usr&#x2F;local&#x2F;bin&#x2F;mpirun: error while loading shared libraries: libopen-rte.so.40: cannot open shared object file: No such file or directory”，则需运行如下命令解决。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ldconfig</span><br></pre></td></tr></table></figure>\n<p><strong>2. SPAdes</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf SPAdes-3.13.0-Linux.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/SPAdes-3.13.0-Linux/bin<span class=\"comment\">#(加入环境变量)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p><strong>3. prokka</strong></p>\n<p>先安装依赖</p>\n<p>aragorn</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">i<span class=\"comment\">#(进入插入模式），在文末建立新的一行</span></span><br><span class=\"line\"></span><br><span class=\"line\">输入：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/Tools/prokka/aragorn.1.2.38</span><br><span class=\"line\"></span><br><span class=\"line\">esc <span class=\"comment\">#(退出插入模式）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">shift</span> + :</span><br><span class=\"line\"></span><br><span class=\"line\">wq! <span class=\"comment\">#(w,write; q,quit, !强制）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc </span><br></pre></td></tr></table></figure>\n\n<p>barrnap</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/prokka/barrnap-0.6/bin</span><br><span class=\"line\"></span><br><span class=\"line\">esc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">shift</span> + :</span><br><span class=\"line\"></span><br><span class=\"line\">wq!</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>tbl2asn</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#删除旧版本：</span></span><br><span class=\"line\">sudo <span class=\"built_in\">rm</span> -f /usr/bin/tbl2asn</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装新版本。解压，把主程序的名称改为 tbl2asn</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /home/manager/Tools/prokka/tbl2asn /usr/local/bin/tbl2asn</span><br></pre></td></tr></table></figure>\n\n<p>minced</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压，进入程序所在的目录中</span></span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /home/manager/Tools/prokka/minced-master/minced /usr/local/bin/minced</span><br></pre></td></tr></table></figure>\n<p>parallel</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压缩，进入目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">./configure</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p>prodigal</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压缩，进入目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p>signalp</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压缩，用文本编辑器打开signalp主程序，改路径（第13行），并保存：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$ENV</span>&#123;SIGNALP&#125; = <span class=\"string\">&#x27;/home/manager/Tools/prokka/signalp-4.1&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/prokka/signalp-4.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>rnammer</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压后进入文件夹，用文本编辑器打开rnammer主程序，修改第35行路径如下：</span></span><br><span class=\"line\"></span><br><span class=\"line\">my <span class=\"variable\">$INSTALL_PATH</span> = <span class=\"string\">&quot;/home/manager/Tools/prokka/rnammer-1.2.src&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#通过whereis hammsearch命令查看其所在路径，修改第50行和53行，如下：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HMMSEARCH_BINARY</span> = <span class=\"string\">&quot;/usr/bin/hmmsearch&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/prokka/rnammer-1.2.src</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n<p>prokka</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/prokka/prokka-1.12/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\">prokka --setupdb</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>Parsnp</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/marbl/parsnp/releases/download/v1.2/parsnp-Linux64-v1.2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xvf parsnp-Linux64-v1.2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">vim ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$HOME</span>/Tools/Parsnp-Linux64-v1.2<span class=\"comment\">#(加入环境变量)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc </span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>roary（blast+, fasttree）</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install bedtools cd-hit ncbi-blast+ mcl parallel cpanminus prank mafft fasttree</span><br><span class=\"line\"></span><br><span class=\"line\">sudo cpanm -f Bio::Roary</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#出错的话运行：</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo cpan -f Bio::Roary</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>RAxML</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> standard-RAxML-master </span><br><span class=\"line\"></span><br><span class=\"line\">make -f Makefile.gcc</span><br><span class=\"line\"></span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /home/manager/Tools/standard-RAxML-master/raxmlHPC /usr/local/bin/raxmlHPC</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>Prottest</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install prottest</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>jModelTest</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install jmodeltest</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"软件","path":"api/tags/软件.json"}]}]}