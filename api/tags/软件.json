{"name":"软件","postlist":[{"title":"R语言安装依赖包错误集锦","slug":"R语言安装依赖包错误集锦","date":"2021-11-02T04:56:45.000Z","updated":"2022-01-08T02:16:28.412Z","comments":true,"path":"api/articles/R语言安装依赖包错误集锦.json","excerpt":null,"keywords":null,"cover":null,"content":"<h1 id=\"devtools安装错误\"><a class=\"markdownIt-Anchor\" href=\"#devtools安装错误\"></a> devtools 安装错误</h1>\n<h2 id=\"xml包-安装之-error-configuration-failed-for-package-xml\"><a class=\"markdownIt-Anchor\" href=\"#xml包-安装之-error-configuration-failed-for-package-xml\"></a> XML 包 安装之 ERROR: configuration failed for package ‘XML’</h2>\n<ul>\n<li>\n<p>CentOS 解决方案</p>\n<p>在 Linux 终端中运行如下命令即可：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y libxml2-devel<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"qiime2r安装错误\"><a class=\"markdownIt-Anchor\" href=\"#qiime2r安装错误\"></a> qiime2R 安装错误</h1>\n<h2 id=\"rjcommonh1121-fatal-error-jpeglibh-no-such-file-or-directory\"><a class=\"markdownIt-Anchor\" href=\"#rjcommonh1121-fatal-error-jpeglibh-no-such-file-or-directory\"></a> rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory</h2>\n<p>该错误是安装依赖包 “jpeg” 时发生的。</p>\n<ul>\n<li>\n<p>CentOS 解决方案</p>\n<p>在 Linux 终端中运行如下命令即可：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y libjpeg-turbo-devel.x86_64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"在Linux服务器中安装网页版Rstudio","slug":"在Linux服务器中安装网页版Rstudio","date":"2021-11-02T01:37:03.000Z","updated":"2022-01-08T02:16:28.439Z","comments":true,"path":"api/articles/在Linux服务器中安装网页版Rstudio.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg","content":"<p>本文演示如何在 CentOS7 服务器上安装 Rstudio server。</p>\n<h1 id=\"安装rstudio\"><a class=\"markdownIt-Anchor\" href=\"#安装rstudio\"></a> 安装 Rstudio</h1>\n<p>访问<a href=\"https://www.rstudio.com/products/rstudio/download-server\"> Rstudio 官网</a>，选择对应的 Linux 发行版，下载 Rstudio 安装包。本文以最常见的 CentOS7 为例演示，<strong>前提是系统中已经安装了 R</strong>。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://download2.rstudio.org/server/centos7/x86_64/rstudio-server-rhel-2021.09.0-351-x86_64.rpm\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> rstudio-server-rhel-2021.09.0-351-x86_64.rpm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"开启rstudio服务\"><a class=\"markdownIt-Anchor\" href=\"#开启rstudio服务\"></a> 开启 Rstudio 服务</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> rstudio-server.service\n<span class=\"token function\">sudo</span> systemctl start rstudio-server.service\n<span class=\"token function\">sudo</span> systemctl status rstudio-server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"开启8787端口\"><a class=\"markdownIt-Anchor\" href=\"#开启8787端口\"></a> 开启 8787 端口</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> firewalld\n<span class=\"token function\">sudo</span> firewall-cmd --permanent --add-port<span class=\"token operator\">=</span><span class=\"token number\">8787</span>/tcp\n<span class=\"token function\">sudo</span> firewall-cmd --permanent --add-port<span class=\"token operator\">=</span><span class=\"token number\">8787</span>/udp\n<span class=\"token function\">sudo</span> firewall-cmd --reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"远程登录rstudio\"><a class=\"markdownIt-Anchor\" href=\"#远程登录rstudio\"></a> 远程登录 Rstudio</h1>\n<p>在浏览器地址栏输入 <code>http://ip:8787/</code>  打开网页，输入自己的用户名和密码登录即可。</p>\n<h1 id=\"错误处理\"><a class=\"markdownIt-Anchor\" href=\"#错误处理\"></a> 错误处理</h1>\n<h2 id=\"rstudio服务启动失败\"><a class=\"markdownIt-Anchor\" href=\"#rstudio服务启动失败\"></a> Rstudio 服务启动失败</h2>\n<h3 id=\"症状\"><a class=\"markdownIt-Anchor\" href=\"#症状\"></a> 症状</h3>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"sudo rstudio-server status\" /></p>\n<h3 id=\"排雷\"><a class=\"markdownIt-Anchor\" href=\"#排雷\"></a> 排雷</h3>\n<ul>\n<li>\n<p>检查安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> rstudio-server verify-installation<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"sudo rstudio-server verify-installation\" /></p>\n<p>提示 “/usr/lib/rstudio-server/bin/rsession: error while loading shared libraries: <a href=\"http://libR.so\">libR.so</a>: cannot open shared object file: No such file or directory”，表明缺少 libR.so 库。</p>\n</li>\n<li>\n<p>安装 R</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y R.x86_64<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>再次检查安装情况</p>\n<p>提示找不到 R。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"sudo rstudio-server verify-installation\" /></p>\n<p>可以看到这里进入了 conda 的 base 环境，它影响了程序的判断，退出 conda 环境后再试一下就不再报错了。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda deactivate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>注</strong>：conda 环境一定要退彻底。</p>\n</li>\n<li>\n<p>再次启动 Rstudio 服务，并查看状态</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> rstudio-server start\n<span class=\"token function\">sudo</span> rstudio-server status<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"rstudio-server正常运行\" /></p>\n</li>\n</ul>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"R语言","path":"api/tags/R语言.json"},{"name":"软件","path":"api/tags/软件.json"}]},{"title":"生物信息学3：微生物基因组学常用软件安装","slug":"生物信息学3：微生物基因组学常用软件安装","date":"2018-12-04T13:42:18.000Z","updated":"2022-01-08T02:16:28.461Z","comments":true,"path":"api/articles/生物信息学3：微生物基因组学常用软件安装.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文详细介绍了 Linux 各发行版通用的几种软件安装方案，并有实例，主要是微生物基因组学常用软件的安装。</p>\n<span id=\"more\"></span>\n<p><strong>一、Linux 安装软件的常用方法：</strong><br />\n（1）将可执行程序加入环境变量</p>\n<p>一些软件包内包含的是可执行程序，不需要进行编译，这类程序可以在软件目录中通过终端 “./ 主程序名” 命令运行。所以可以将主程序所在的目录加入到环境变量中即可。常见的环境变量配置文件包括家目录下的 “zshrc”、“bashrc” 以及 /etc 目录下的 “profile”。</p>\n<p>（2）创建可执行程序的软连接到已在环境变量的目录下</p>\n<p>可以视为方法一的另一种实现策略，通过 “ln -s A B” 进行创建，软连接可以理解为 Windows 下的快捷方式。A 为主程序的绝对路径（包含主程序名称），B 为目标路径，即放置软件快捷方式的地方（包含主程序名），一般可存于 “/usr/loacl/bin” 下。</p>\n<p>（3）源码配置编译及安装</p>\n<p>特点为解压源码包之后，存在 “configure” 文件，一般分三步安装，即在软件目录下打开终端，依次运行：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">./configure\n\n<span class=\"token function\">make</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>（4）通过源进行安装</p>\n<p>不同的 Linux 发行版含有不同的源和软件安装工具，只要联网，一条命令即可安装源中含有的软件。</p>\n<p>Ubuntu 可以通过 “sudo apt-get install 程序名” 进行安装</p>\n<p>Centos 可以通过 “sudo yum install 程序名” 进行安装</p>\n<blockquote>注：前三种方法适合任意Linux发行版，安装软件前可以先通过方法4进行，若源中不包含此软件再用前三种方法。</blockquote>\n<p><strong>二、软件下载及存储</strong><br />\n首先在 Home 目录下创建 Tools 目录，所有下载的软件均存放于 tools 目录之下，此处我的家目录为 “manager”，即我软件存放目录为 “/home/manager/Tools”。</p>\n<p><strong>三、软件安装</strong><br />\n<strong> 1. ABySS</strong></p>\n<p>首先安装依赖包：</p>\n<p>Open MPI</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> zxvf openmpi-4.0.0.tar.gz\n\n<span class=\"token builtin class-name\">cd</span> openmpi-4.0.0\n\n./configure\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> all <span class=\"token function\">install</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Git（可以不安装）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev <span class=\"token function\">git</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>sparsehash</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/sparsehash/sparsehash.git\n\n<span class=\"token builtin class-name\">cd</span> sparsehash\n\n./configure\n\n<span class=\"token function\">make</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>ABySS</p>\n<p>首先删除旧版本（Bio-Linux 自带的）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove abyss\n\n<span class=\"token function\">tar</span> zxvf abyss-2.1.4.tar.gz\n\n<span class=\"token builtin class-name\">cd</span> abyss-2.1.4\n\n<span class=\"token function\">wget</span> http://downloads.sourceforge.net/project/boost/boost/1.56.0/boost_1_56_0.tar.bz2\n\n<span class=\"token function\">tar</span> jxf boost_1_56_0.tar.bz2\n\n./configure --enable-maxk<span class=\"token operator\">=</span><span class=\"token number\">160</span> --with-mpi<span class=\"token operator\">=</span>/usr/local/lib/openmpi\n\n<span class=\"token comment\">#（注：openmpi的路径用“whereis openmpi”寻找）</span>\n\n<span class=\"token function\">make</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>不能多线程运行时（np=2），错误提示为 “/usr/local/bin/mpirun: error while loading shared libraries: libopen-rte.so.40: cannot open shared object file: No such file or directory”，则需运行如下命令解决。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> ldconfig<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>2. SPAdes</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> -zxvf SPAdes-3.13.0-Linux.tar.gz\n\n<span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token environment constant\">$HOME</span>/Tools/SPAdes-3.13.0-Linux/bin<span class=\"token comment\">#(加入环境变量)</span>\n\n<span class=\"token builtin class-name\">source</span> ~/.zshrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>3. prokka</strong></p>\n<p>先安装依赖</p>\n<p>aragorn</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.zshrc\n\ni<span class=\"token comment\">#(进入插入模式），在文末建立新的一行</span>\n\n输入：\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span><span class=\"token environment constant\">$HOME</span>/Tools/prokka/aragorn.1.2.38\n\nesc <span class=\"token comment\">#(退出插入模式）</span>\n\n<span class=\"token builtin class-name\">shift</span> + <span class=\"token builtin class-name\">:</span>\n\nwq<span class=\"token operator\">!</span> <span class=\"token comment\">#(w,write; q,quit, !强制）</span>\n\n<span class=\"token builtin class-name\">source</span> ~/.zshrc <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>barrnap</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.zshrc\n\ni\n\n<span class=\"token environment constant\">$HOME</span>/Tools/prokka/barrnap-0.6/bin\n\nesc\n\n<span class=\"token builtin class-name\">shift</span> + <span class=\"token builtin class-name\">:</span>\n\nwq<span class=\"token operator\">!</span>\n\n<span class=\"token builtin class-name\">source</span> ~/.zshrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>tbl2asn</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#删除旧版本：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -f /usr/bin/tbl2asn\n\n<span class=\"token comment\">#安装新版本。解压，把主程序的名称改为 tbl2asn</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -s /home/manager/Tools/prokka/tbl2asn /usr/local/bin/tbl2asn<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>minced</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#解压，进入程序所在的目录中</span>\n\n<span class=\"token function\">make</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -s /home/manager/Tools/prokka/minced-master/minced /usr/local/bin/minced<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>parallel</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#解压缩，进入目录</span>\n\n./configure\n\n<span class=\"token function\">make</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>prodigal</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#解压缩，进入目录</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>signalp</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#解压缩，用文本编辑器打开signalp主程序，改路径（第13行），并保存：</span>\n\n<span class=\"token variable\">$ENV</span><span class=\"token punctuation\">&#123;</span>SIGNALP<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/home/manager/Tools/prokka/signalp-4.1'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token environment constant\">$HOME</span>/Tools/prokka/signalp-4.1\n\n<span class=\"token builtin class-name\">source</span> ~/.zshrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>rnammer</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#解压后进入文件夹，用文本编辑器打开rnammer主程序，修改第35行路径如下：</span>\n\nmy <span class=\"token variable\">$INSTALL_PATH</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"/home/manager/Tools/prokka/rnammer-1.2.src\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">#通过whereis hammsearch命令查看其所在路径，修改第50行和53行，如下：</span>\n\n<span class=\"token variable\">$HMMSEARCH_BINARY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"/usr/bin/hmmsearch\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token environment constant\">$HOME</span>/Tools/prokka/rnammer-1.2.src\n\n<span class=\"token builtin class-name\">source</span> ~/.zshrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>prokka</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token environment constant\">$HOME</span>/Tools/prokka/prokka-1.12/bin\n\n<span class=\"token builtin class-name\">source</span> ~/.zshrc\n\nprokka --setupdb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li>Parsnp</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://github.com/marbl/parsnp/releases/download/v1.2/parsnp-Linux64-v1.2.tar.gz\n\n<span class=\"token function\">tar</span> -xvf parsnp-Linux64-v1.2.tar.gz\n\n<span class=\"token function\">vim</span> ~/.zshrc\n\n<span class=\"token environment constant\">$HOME</span>/Tools/Parsnp-Linux64-v1.2<span class=\"token comment\">#(加入环境变量)</span>\n\n<span class=\"token builtin class-name\">source</span> ~/.zshrc <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"5\">\n<li>roary（blast+, fasttree）</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> bedtools cd-hit ncbi-blast+ mcl parallel cpanminus prank mafft fasttree\n\n<span class=\"token function\">sudo</span> cpanm -f Bio::Roary\n\n<span class=\"token comment\">#出错的话运行：</span>\n\n<span class=\"token function\">sudo</span> cpan -f Bio::Roary<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"6\">\n<li>RAxML</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#解压</span>\n\n<span class=\"token builtin class-name\">cd</span> standard-RAxML-master \n\n<span class=\"token function\">make</span> -f Makefile.gcc\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -s /home/manager/Tools/standard-RAxML-master/raxmlHPC /usr/local/bin/raxmlHPC<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"7\">\n<li>Prottest</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> prottest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"8\">\n<li>jModelTest</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> jmodeltest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"软件","path":"api/tags/软件.json"}]}]}