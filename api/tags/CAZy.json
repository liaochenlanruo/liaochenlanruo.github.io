{"name":"CAZy","postlist":[{"title":"CAZy碳水化合物活性酶预测","slug":"CAZy碳水化合物活性酶预测","date":"2021-09-30T01:18:19.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/CAZy碳水化合物活性酶预测.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg","content":"<h1 id=\"CAZy数据库简介\"><a href=\"#CAZy数据库简介\" class=\"headerlink\" title=\"CAZy数据库简介\"></a>CAZy数据库简介</h1><p><a href=\"http://www.cazy.org/Home.html\">CAZy</a> 全称为Carbohydrate-Active enZYmes Database，碳水化合物酶相关的专业数据库，内容包括能催化碳水化合物降解、修饰、以及生物合成的相关酶系家族。其包含五个主要分类：糖苷水解酶（Glycoside Hydrolases, GHs）、糖基转移酶（GlycosylTransferases, GTs）、多糖裂解酶（Polysaccharide Lyases, PLs）、糖酯酶（Carbohydrate Esterases, CEs）和氧化还原酶（Auxiliary Activities, AAs）。此外，还包含与碳水化合物结合结构域（Carbohydrate-Binding Modules， CBMs）。五大分类和一个结构域下，都分别建立了多个Family。</p>\n<ul>\n<li><p><a href=\"http://www.cazy.org/Glycoside-Hydrolases.html\">GHs</a>：糖苷键的水解和&#x2F;或重排</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/GlycosylTransferases.html\">GTs</a>：糖苷键的形成</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/Polysaccharide-Lyases.html\">PLs</a>：糖苷键的非水解裂解</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/Carbohydrate-Esterases.html\">CEs</a>：水解碳水化合物的酯类</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/Auxiliary-Activities.html\">AAs</a>：与 CAZymes 协同作用的氧化还原酶</p>\n</li>\n<li><p><a href=\"http://www.cazy.org/Carbohydrate-Binding-Modules.html\">CBMs</a>：与碳水化合物结合</p>\n</li>\n</ul>\n<h1 id=\"CAZy数据库的准备\"><a href=\"#CAZy数据库的准备\" class=\"headerlink\" title=\"CAZy数据库的准备\"></a>CAZy数据库的准备</h1><p>在进行预测之前需要准备数据库，CAZy貌似没有提供FASTA格式的序列数据库，而仅提供了序列的Assenssion number，需要我们自己从NCBI数据库中下载序列。下载方法参照我之前的文章《<a href=\"https://liaochenlanruo.github.io/post/e7e9.html\">根据assession number批量从NCB下载数据</a>》，在文章中提供了下载CAZy序列的方法和脚本，此处不再赘述。</p>\n<p>在上一篇文章结尾获得的“All.sequences.fas”文件包含了所有的CAZy数据库序列，在正式预测之前需要完成数据库的格式化。后面我们将通过Diamond软件从基因组中预测CAZy蛋白，因此采用Diamond格式化数据库。</p>\n<ul>\n<li><p>序列预处理</p>\n<p>  不知道什么原因，下载的序列存在两个问题，其一，下一条序列的ID连接着上一条序列的末尾，没有断行；其二，序列中存在着一段网页代码。因此，需要分两步进行修正。</p>\n<ul>\n<li><p>解决断行问题</p>\n<p>  撰写脚本“add_linebreak.pl”，内容如下：</p>\n  <figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> $/=<span class=\"string\">&quot;&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;All.sequences.fas&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;CAZy.fas&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">&lt;IN&gt;;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;&gt;$_\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n<p>  将脚本与”All.sequences.fas”放在同一目录下，在终端或者命令行中运行如下命令，得到“CAZy.fas”。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl add_linebreak.pl</span><br></pre></td></tr></table></figure></li>\n<li><p>删除无关内容</p>\n<p>  用EmEditor软件打开CAZy.fas，Ctrl+F调出查找功能，搜索“www.” 可以看到如下内容，手动将其删除，并保存文件。</p>\n<p>  <img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"数据库中需要手动删除的网页信息\"></p>\n</li>\n</ul>\n</li>\n<li><p>构建Diamond数据库</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diamond makedb --<span class=\"keyword\">in</span> CAZy.fas -d CAZy</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"开始序列比对\"><a href=\"#开始序列比对\" class=\"headerlink\" title=\"开始序列比对\"></a>开始序列比对</h1><p>当然，我们选择用Perl进行批量比对</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @faa = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.faa&quot;</span>);<span class=\"comment\"># 读取所有后缀为“.faa”的文件，可以自己更改</span></span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@faa) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).faa/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.CAZy.diamond&quot;</span>;</span><br><span class=\"line\">\t<span class=\"comment\"># -p表示线程数，在笔记本上用6个即可</span></span><br><span class=\"line\">\t<span class=\"keyword\">system</span>(<span class=\"string\">&quot;diamond blastp -d CAZy -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将上述代码复制到文件中，命名为“run_diamond_CAZy.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析，得到“*.CAZy.diamond”：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl run_diamond_CAZy.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"比对结果过滤\"><a href=\"#比对结果过滤\" class=\"headerlink\" title=\"比对结果过滤\"></a>比对结果过滤</h1><p>在比对过程中我们控制了evalue和query coverage，但是没有控制identity。但是很多时候，需要设定一个identity的阈值，低于阈值的比对将会被删除，该步骤可以将比对结果拷贝到Excel中根据identity排序，手动删除阈值以下的行，然而我选择用Perl批处理。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @cazy = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.CAZy.diamond&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@cazy) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).CAZy.diamond/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = $1 . <span class=\"string\">&quot;.CAZy.diamond.filtered&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;$out&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($lines[<span class=\"number\">2</span>] &gt;= <span class=\"number\">40</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT $_ . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> OUT;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>将上述代码复制到文件中，命名为“filter_cazy_diamond.pl”，将其和上一步产生的文件放在同一目录下，并在终端中输入如下命令，完成过滤，保留identity &gt;&#x3D; 40% 的行，得到“*.CAZy.diamond.filtered”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl filter_cazy_diamond.pl</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"你以为完了？还得mapping！\"><a href=\"#你以为完了？还得mapping！\" class=\"headerlink\" title=\"你以为完了？还得mapping！\"></a>你以为完了？还得mapping！</h1><p>得到的结果如下图所示，第二列的Hits是NCBI的Assession number，我们根本只知道这是什么CAZy家族，因此需要mapping！</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Diamond比对结果\"></p>\n<p>回头找到我们下载的<a href=\"http://www.cazy.org/IMG/cazy_data/cazy_data.zip\">cazy_data.txt</a>，里面保存的是CAZy家族与Assession number的对应关系。比较闲的兄弟可以用查找-复制-粘贴的方法将“*.CAZy.diamond.filtered”中的Assession number替换为CAZy家族。我为比较忙的兄弟准备了下面的代码，批处理。不过我输出的是一个矩阵。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %cazy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;cazy_data.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t$cazy&#123;$lines[<span class=\"number\">2</span>]&#125; = $lines[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %samples;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %ids;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @filtered = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;*.CAZy.diamond.filtered&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@filtered) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/(.+).CAZy.diamond.filtered/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $sample = $1;</span><br><span class=\"line\">\t$samples&#123;$1&#125;++;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;$_&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @line = <span class=\"keyword\">split</span> <span class=\"regexp\">/\\t/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $cazy&#123;$line[<span class=\"number\">1</span>]&#125;) &#123;</span><br><span class=\"line\">\t\t\t$ids&#123;$cazy&#123;$line[<span class=\"number\">1</span>]&#125;&#125;++;</span><br><span class=\"line\">\t\t\t$hash&#123;$sample&#125;&#123;$cazy&#123;$line[<span class=\"number\">1</span>]&#125;&#125;++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;CAZy.Matrix.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @samples = <span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %samples;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @ids = <span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %ids;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @samples) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $i=<span class=\"number\">0</span>; $i&lt;@ids ;$i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT $ids[$i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $j=<span class=\"number\">0</span>; $j&lt;@samples ;$j++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t$hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t0&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n\n<p>将上述代码复制到文件中，命名为“assession2cazy.pl“，将其和”cazy_data.txt“，及上一步产生的文件“*.CAZy.diamond.filtered”放在同一目录下，并在终端中输入如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl assession2cazy.pl</span><br></pre></td></tr></table></figure>\n\n<p>得到一个矩阵“CAZy.Matrix.txt”，内容如下，行为CAZy家族，列为基因组&#x2F;样本名。拿到本文件后，可以做热图看CAZy家族在各样本中的分布情况，然而这个热图将会比鞋帮子脸还要长，可读性不高，因此我选择将这些family合并为大类，生成一个新的矩阵。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_3.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_3.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"Mapping后的矩阵\"></p>\n<p>二话不说，上代码。</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 30, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> %category;</span><br><span class=\"line\"><span class=\"keyword\">my</span> %hash;</span><br><span class=\"line\"><span class=\"keyword\">my</span> @samples;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $count = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">open</span> IN, <span class=\"string\">&quot;CAZy.Matrix.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t$count++;</span><br><span class=\"line\">\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> ($count == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t@samples = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> @lines = <span class=\"keyword\">split</span>;</span><br><span class=\"line\">\t\t$lines[<span class=\"number\">0</span>]=~<span class=\"regexp\">/(.+?)\\d+/</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">my</span> $cate = $1;</span><br><span class=\"line\">\t\t$category&#123;$cate&#125;++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $i=<span class=\"number\">0</span>; $i&lt;@samples; $i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">my</span> $j = $i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t$hash&#123;$samples[$i]&#125;&#123;$cate&#125; += $lines[$j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> IN;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> OUT, <span class=\"string\">&quot;&gt;CAZy.Category.Matrix.txt&quot;</span> || <span class=\"keyword\">die</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @category = <span class=\"keyword\">sort</span> <span class=\"keyword\">keys</span> %category;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t&quot;</span> . <span class=\"keyword\">join</span>(<span class=\"string\">&quot;\\t&quot;</span>, @samples) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $i=<span class=\"number\">0</span>; $i&lt;@category ;$i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT $category[$i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">my</span> $j=<span class=\"number\">0</span>; $j&lt;@samples ;$j++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">exists</span> $hash&#123;$samples[$j]&#125;&#123;$category[$i]&#125;) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t$hash&#123;$samples[$j]&#125;&#123;$category[$i]&#125;&quot;</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\t0&quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">print</span> OUT <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">close</span> OUT;</span><br></pre></td></tr></table></figure>\n\n<p>将上述代码复制到文件中，命名为“cazyfamily2categories.pl”，将其和上一步产生的文件“CAZy.Matrix.txt”放在同一目录下，并在终端中输入如下命令，得到文件“CAZy.Category.Matrix.txt”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl cazyfamily2categories.pl</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_4.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_4.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"CAZy.Category.Matrix.txt内容概览\"></p>\n<p>接下来是要做柱状图还是heatmap，就随便了。</p>\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“9052”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Functional genomics","path":"api/tags/Functional genomics.json"},{"name":"CAZy","path":"api/tags/CAZy.json"},{"name":"SY179","path":"api/tags/SY179.json"}]},{"title":"根据assession number批量从NCB下载数据","slug":"根据assession-number批量从NCB下载数据","date":"2021-09-28T03:26:24.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/根据assession-number批量从NCB下载数据.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg","content":"<p>有时候我们手里会得到一些NCBI的assession number，且数量比较多，而我们真正需要的是序列，这时候手动挨个搜索和下载是不太现实的，除非是你闲得无事可做。其实有一个网页是可以批量下载序列的，即<a href=\"https://www.ncbi.nlm.nih.gov/sites/batchentrez\">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> ，下面演示一下其用法。<strong>请就着文末视频食用。</strong></p>\n<ul>\n<li><p>首先，<u>准备一份列表文件，其中包含需要下载序列的IDs，每行一个ID</u>。这里有一个从网上下载的CaZY数据库，本以为是序列文件，下载后才发现里面没有序列。这个文件包含三列，以制表符分隔各列，最后一列是Assession number，因此前两列可以删掉。可以将文件内容复制到Excel中，删除前两列，将最后一列复制到一个新的文本文档中。也可以在支持正则表达式的文本编辑器中直接查找替换。<strong>刚刚的示例文件可以从<a href=\"http://www.cazy.org/IMG/cazy_data/cazy_data.zip\">这里</a>下载</strong>。正则表达式查找的公式为“.+\\t(.+)”，其中“.+”代表的是任意多个字符，“\\t”匹配的是制表符，+是贪婪的，一直遇到最后一个“\\t”才终止匹配。即“.+\\t”匹配的是前两列以及第二列后面的制表符，最后的“(.+)”匹配的是第三列。小括号的作用是捕获匹配的内容。替换的公式为“$1”，表示第一个小括号内的内容，即第三列。</p>\n</li>\n<li><p>接下来将得到的列表文件提交至网站上以下载序列，需要选择对应的数据库，这里选择protein，点击“Retrieve”开始下载。由于序列较多，因此反应比较慢，需要耐心等待。估计是崩了，再试一遍，文件包含2650471个ID，估计服务器吃不消，实在不行就拆分成几个文件，分批次下载。我这里用的是EmEditor软件，按照10000行每个文件对整个文件进行了拆分，得到了266个文件，现在拿其中的一个做演示，看看服务器是否吃得消。看来一万个也太多，二十几个试了一下，莫得问题。方法就是酱紫的，至于可以一次性下载多少，各位自己去试吧。搞定！</p>\n</li>\n<li><p><strong>兄弟们不用试了，我已经试过了，一次只能搞几百个</strong>，对于几十万行的列表来说，手动逐个提交也是要命的，因此我写了一个Perl脚本(download_NCBI.pl)来完成该任务，<u>不过只能在Linux下运行</u>，代码如下：</p>\n</li>\n</ul>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> strict;</span><br><span class=\"line\"><span class=\"keyword\">use</span> warnings;</span><br><span class=\"line\"><span class=\"keyword\">use</span> LWP::Simple;</span><br><span class=\"line\"><span class=\"comment\"># Author: Liu hualin</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Sep 28, 2021</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Usage: perl download_NCBI.pl 列表文件 序列类型（参照https://www.ncbi.nlm.nih.gov/sites/batchentrez数据库填写，常用的包括nucleotide, protein）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @ids;</span><br><span class=\"line\"><span class=\"keyword\">my</span> $dbtype = $ARGV[<span class=\"number\">1</span>];<span class=\"comment\"># nucleotide, protein</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;split -l 300 $ARGV[0] splited_&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">my</span> @splited = <span class=\"keyword\">glob</span>(<span class=\"string\">&quot;splited_*&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>  (@splited) &#123;</span><br><span class=\"line\">\t$_=~<span class=\"regexp\">/splited_(.+)/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">my</span> $out = <span class=\"string\">&quot;seqs.$1.fasta&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">open</span> IN, $_ || <span class=\"keyword\">die</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (&lt;IN&gt;) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">chomp</span>;</span><br><span class=\"line\">\t\t$_=~<span class=\"regexp\">s/[\\r\\n]+//g</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">push</span> @ids, $_;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tgetstore(<span class=\"string\">&quot;http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=$dbtype&amp;rettype=fasta&amp;retmode=text&amp;id=&quot;</span>.join(<span class=\"string\">&quot;,&quot;</span>, @ids),<span class=\"string\">&quot;$out&quot;</span>);</span><br><span class=\"line\">\t@ids = ();</span><br><span class=\"line\">\t<span class=\"keyword\">close</span> IN;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;cat seqs.* &gt; All.sequences.fas&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">system</span>(<span class=\"string\">&quot;rm splited_* seqs.*&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>运行方法也贼简单，将脚本和列表文件放在同一目录下，然后在Linux终端里输入如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl download_NCBI.pl cazy_ids.txt protein</span><br></pre></td></tr></table></figure>\n\n<p>其中cazy_ids.txt为包含assession number的列表文件，protein表示列表里的ID是蛋白。最后面的这个参数可以在<a href=\"https://www.ncbi.nlm.nih.gov/sites/batchentrez\">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> 左上角的Database查询，<strong>但是要全部小写</strong>。</p>\n<p>运行一下，看看效果！</p>\n<p><font color=\"#FF0000\">2000 years later…</font></p>\n<p>2650471&#x2F;300&#x3D;8835个文件，最终生成的序列文件名称为“All.sequences.fas”，中间过程文件会被自动删除。千年以后拿结果，不管怎么说，总算解放了双手，让电脑慢慢去跑吧！</p>\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=378319348&page=\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"></iframe></div>\n\n\n<h1 id=\"脚本获取\"><a href=\"#脚本获取\" class=\"headerlink\" title=\"脚本获取\"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e7e9”获取下载链接。</p>\n<table align=\"center\"><tr>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅微信公众号\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;\"></td>\n  <td align=\"center\"><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"生信之巅小程序码\" style=\"width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center\"></td>\n</tr></table>\n\n<p><font color=\"#FF0000\"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"CAZy","path":"api/tags/CAZy.json"},{"name":"NCBI","path":"api/tags/NCBI.json"},{"name":"下载","path":"api/tags/下载.json"}]}]}