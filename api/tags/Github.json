{"name":"Github","postlist":[{"title":"Linux中使用tar将大文件压缩为多个小的压缩包","slug":"Linux中使用tar将大文件压缩为多个小的压缩包","date":"2021-11-26T14:35:35.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Linux中使用tar将大文件压缩为多个小的压缩包.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>在GitHub上传文件时，单个文件不允许超过100m，超过的话需要使用Git Large File Storage，操作起来稍有些复杂，而且我记得也有限制。在这里我们可以将大文件压缩并切片，使之被分割为多个小文件，再上传GitHub，下载之后再合并即可。</p>\n<ul>\n<li><p>压缩</p>\n<p>假设有个大文件<code>CAZy.faa</code>，原始大小为725m，压缩后为135m，因此我们可以将其压缩为2~3个文件 即可避免100m的限制。建议上传至GitHub的单个文件大小不要超过50m，因此我们以50m为阈值对文件进行切割（参数-b）。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar czf - CAZy.faa | <span class=\"built_in\">split</span> -b 50m - CAZy.faa.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>运行命令后，得到了3个文件：CAZy.faa.tar.gzaa，CAZy.faa.tar.gzab，CAZy.faa.tar.gzac。</p>\n</li>\n<li><p>解压</p>\n<p>通过如下命令解压后可以得到完整的<code>CAZy.faa</code>文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> CAZy.faa.tar.gz* | tar -xzv</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在Windows下解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 先合并，再用压缩软件解压</span></span><br><span class=\"line\"><span class=\"comment\">## 按“win+r”键，在弹出的输入框中输入“cmd”进入windows下的命令提示符界面。切换路径，如进入F盘，直接输入“F:”，再进入F盘的xin文件夹输入“cd xin”，输入以下命令进行合并（注意，用的是cmd而不是powershell）：</span></span><br><span class=\"line\">copy /b CAZy.faa.tar.gza* CAZy.faa.tar.gz</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://my.oschina.net/yysue/blog/1815340\">Linux下将一个文件压缩分包成多个小文件</a></li>\n</ul>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"},{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"Bioconda贡献指南","slug":"Bioconda贡献指南","date":"2019-05-19T09:39:00.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/Bioconda贡献指南.json","excerpt":null,"keywords":null,"cover":"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg","content":"<p>本文介绍了如何为软件添加Bioconda recipe，以便可以通过conda安装自己的软件。</p>\n<span id=\"more\"></span>\n\n<p><strong>注：本文适用于非 Bioconda 成员</strong></p>\n<p><B>Step0：软件开发与GitHub操作</B></p>\n<br/>\n(1) 将开发完成的软件上传到GitHub\n\n<br/>\n(2) 在本地软件目录下创建tag\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> tag v1.0.0 -m <span class=\"string\">&#x27;first version&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<br/>\n(3) 上传到GitHub\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> push origin v1.0.0</span><br></pre></td></tr></table></figure>\n\n<p><strong>注</strong>：如果需要删除有bug的tag：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> tag -d tagname</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$git</span> push origin :refs/tags/tagname</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<br/>\n(4) 存档tag(非必需)\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> archive -v --format=tar v1.0.0 &gt; v1.0.0.tar.gz</span><br></pre></td></tr></table></figure>\n\n<br/>\n(5) 计算压缩包的\"sha256\"以供bioconda校验\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sha256sum</span> v1.0.0.tar.gz</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step1：fork bioconda-recipes</B>\n\n<br/>\n\n\n<p>(1)进入 bio-conda <a href=\"https://github.com/bioconda/bioconda-recipes\">GitHub页</a>；</p>\n<br/>\n(2)点击右上角的 “Fork”；\n\n<br/>\n(3)操作完成后在用户自己的 GitHub 内得到了一份 “<USERNAME>/bioconda-recipes”，我的用户名为 “liaochenlanruo”，因此我得到的是 “liaochenlanruo/bioconda-recipes”。\n\n<br/>\n<B>Step2：将项目克隆到本地</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> <span class=\"built_in\">clone</span> https://github.com/liaochenlanruo/bioconda-recipes.git</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step3: Then add the main bioconda-recipes repo as an upstream remote to more easily update your branch with the upstream master branch:</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cd</span> bioconda-recipes</span><br><span class=\"line\"><span class=\"variable\">$git</span> remote add upstream https://github.com/bioconda/bioconda-recipes.git</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step4：更新 repo</B>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> checkout master</span><br><span class=\"line\"><span class=\"variable\">$git</span> pull upstream master</span><br><span class=\"line\"><span class=\"variable\">$git</span> push origin master</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step5：写自己的 recipe</B>\n\n<br/>\n例如，创建并切换到一个名字为 “pgcgap” 的 新分支\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> checkout -b pgcgap</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<p>在”bioconda-recipes&#x2F;recipes&#x2F;“目录下新建”pgcgap”目录，并将撰写好的<a href=\"https://docs.conda.io/projects/conda-build/en/latest/resources/build-scripts.html\">build.sh</a>和<a href=\"https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#architecture-independent-packages\">meta.yaml</a>存入其中。</p>\n<br/>\n注：Step6和Step7可以跳过\n\n<br/>\n<B>Step6：本地测试 recipe</B> （可选，即可以直接在线测试）\n\n<br/>\n在\"bioconda-recipes/\"目录下依次运行如下命令：\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$./bootstrap.py /tmp/miniconda</span><br><span class=\"line\"><span class=\"variable\">$source</span> ~/.config/bioconda/activate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># optional linting</span></span><br><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils lint recipes config.yml --git-range master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># build and test</span></span><br><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils build recipes config.yml --docker --mulled-test --git-range master</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step7：更新 recipes</B> (可选）\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$bioconda</span>-utils update-pinning recipes/ config.yml --packages pgcgap --create-pr</span><br></pre></td></tr></table></figure>\n\n<br/>\n<B>Step8：推送修改，等待测试通过，提交 pull 请求</B>\n\n<br/>\n(1) 将本地更改同步到自己的pgcgap分枝\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$git</span> push -u origin pgcgap</span><br></pre></td></tr></table></figure>\n\n<br/>\n\n<p>(2) 在“liaochenlanruo&#x2F;bioconda-recipes”的“pgcgap”分支下点击“New pull request”。base repository选择“liaochenlanruo&#x2F;bioconda-recipes”，base选择“pgcgap”；head repository选择“bioconda&#x2F;bioconda-recipes”，compare 选择”master”。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"new_pull_request\"></p>\n<center>Create a new pull request</center>\n\n<br/>\n\n<p>比较完成后提交，标题自定义，内容根据提示酌情填写。若存在问题可以 @其<a href=\"https://bioconda.github.io/#core\">核心团队成员</a>中的任何一位，如输入“@epruesse”，将会 @ Elmar Pruesse。若想成为bioconda成员，以及要merge自己的分支，同样需要@核心成员中的任何一位。</p>\n<p>实例：</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"create_pull_request_info\"></p>\n<center>Request 信息填写</center>\n\n<br/>\n上述步骤完成后，可以在GitHub项目下的“Pull requests”选项卡下查看处理状态。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"view_pull_request\"></p>\n<center>查看pull request</center>\n\n<br/>\n根据提示修改自己的recipe，再次pull，循环往复，直至修复所有错误（下图表示需要修改）。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"pull_error\"></p>\n<center>pull出错了</center>\n\n<br/>\n点击“details”可以查看进程和详细信息。下图所示，正在测试recipe。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"bioconder_checking2\"></p>\n<center>正在测试recipe</center>\n\n<br/>\n如下图所示，表明测试成功，等待管理员合并自己的分支。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"test_success\"></p>\n<center>所有测试均成功</center>\n\n<br/>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"bioconda_check\"></p>\n<center>非Bioconda成员测试成功后的“Pull requests”界面</center>\n\n<br/>\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"squash_and_merge\"></p>\n<center>Bioconda成员测试成功后的“Pull requests”界面</center>\n\n<br/>\n如上两图分别为非bioconda成员以及bioconda成员测试通过的界面，非成员需要新建一条评论并 @一位核心成员，请求其merge自己的pull requests，bioconda成员则可以点击“Squash and merge”来合并自己的pull requests。\n\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"merge_successfully\"></p>\n<center>Bioconda成员“Pull requests”合并成功</center>\n\n<br/>\n## 附：\n1. 加入bioconda\n\n<p>1）在第一个recipe推送成功后可以在评论中 @ 一位核心成员，要求加入组织<br>2）收到邀请链接，点击加入</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg\" srcset=\"https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp\" alt=\"invited2bioconda\"></p>\n<center>被邀请加入Bioconda</center>\n\n<br/>\n## 常见错误\n1. If linting fails：\n\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git pull upstream master</span><br><span class=\"line\">git checkout pgcgap</span><br><span class=\"line\">git merge master</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"},{"name":"Bioconda","path":"api/tags/Bioconda.json"}]},{"title":"Github操作","slug":"github操作","date":"2019-04-01T00:46:44.000Z","updated":"2024-03-11T13:07:17.000Z","comments":true,"path":"api/articles/github操作.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文讲述了Github一些操作技巧……</p>\n<span id=\"more\"></span>\n\n<h1 id=\"TAG相关操作\"><a href=\"#TAG相关操作\" class=\"headerlink\" title=\"TAG相关操作\"></a>TAG相关操作</h1><p></br>通过Tag可以将项目生成不同的版本，并进行存档，供用户下载。这在软件中是很常见的。</p>\n<ul>\n<li><p><strong>创建tag</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag v1.0.0 -m <span class=\"string\">&#x27;first version&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>上传到github</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin v1.0.0</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>存档某个tag</strong></p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git archive -v --format=tar v1.0.0 &gt; v1.0.0.tar.gz</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>删除tag</strong></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d v1.0.0</span><br><span class=\"line\">git push origin :refs/tags/v1.0.0</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"Branch\"><a href=\"#Branch\" class=\"headerlink\" title=\"Branch\"></a>Branch</h1><h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><ul>\n<li><p>创建并切换到名为<code>pgcgap</code>的分支</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b pgcgap</span><br></pre></td></tr></table></figure></li>\n<li><p>将<code>pgcgap</code>分支推送到远程端</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin pgcgap</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h2><p>假设要删除当前所处的<code>pgcgap</code>分支。</p>\n<ul>\n<li><p>切换到别的分支，如master</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br></pre></td></tr></table></figure></li>\n<li><p>删除本地分支</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d pgcgap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 有时候需要强制删除</span></span><br><span class=\"line\">git branch -D pgcgap</span><br></pre></td></tr></table></figure></li>\n<li><p>删除远程分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --delete pgcgap</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"Git-加速\"><a href=\"#Git-加速\" class=\"headerlink\" title=\"Git 加速\"></a>Git 加速</h1><p>进行git操作时以<code>github.com.cnpmjs.org</code>替换<code>github.com</code>可以提速10倍左右。</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"}]}]}