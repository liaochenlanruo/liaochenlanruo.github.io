{"name":"Github","postlist":[{"title":"Bioconda贡献指南","slug":"Bioconda贡献指南","date":"2019-05-19T09:39:00.000Z","updated":"2022-01-08T02:16:28.392Z","comments":true,"path":"api/articles/Bioconda贡献指南.json","excerpt":null,"keywords":null,"cover":"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg","content":"<p>本文介绍了如何为软件添加 Bioconda recipe，以便可以通过 conda 安装自己的软件。</p>\n<span id=\"more\"></span>\n<p><strong>注：本文适用于非 Bioconda 成员</strong></p>\n<p><B>Step0：软件开发与 GitHub 操作</B></p>\n<br/>\n(1) 将开发完成的软件上传到GitHub\n<br/>\n(2) 在本地软件目录下创建tag\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> tag v1.0.0 -m <span class=\"token string\">'first version'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<br/>\n(3) 上传到GitHub\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> push origin v1.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>注</strong>：如果需要删除有 bug 的 tag：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> tag -d tagname\n\n<span class=\"token variable\">$git</span> push origin :refs/tags/tagname\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<br/>\n(4) 存档tag(非必需)\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> archive -v --format<span class=\"token operator\">=</span>tar v1.0.0 <span class=\"token operator\">></span> v1.0.0.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<br/>\n(5) 计算压缩包的\"sha256\"以供bioconda校验\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$sha256sum</span> v1.0.0.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<br/>\n<B>Step1：fork bioconda-recipes</B>\n<br/>\n<p>(1) 进入 bio-conda <a href=\"https://github.com/bioconda/bioconda-recipes\">GitHub 页</a>；</p>\n<br/>\n(2)点击右上角的 “Fork”；\n<br/>\n(3)操作完成后在用户自己的 GitHub 内得到了一份 “<USERNAME>/bioconda-recipes”，我的用户名为 “liaochenlanruo”，因此我得到的是 “liaochenlanruo/bioconda-recipes”。\n<br/>\n<B>Step2：将项目克隆到本地</B>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> clone https://github.com/liaochenlanruo/bioconda-recipes.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<br/>\n<B>Step3: Then add the main bioconda-recipes repo as an upstream remote to more easily update your branch with the upstream master branch:</B>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$cd</span> bioconda-recipes\n<span class=\"token variable\">$git</span> remote <span class=\"token function\">add</span> upstream https://github.com/bioconda/bioconda-recipes.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<br/>\n<B>Step4：更新 repo</B>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> checkout master\n<span class=\"token variable\">$git</span> pull upstream master\n<span class=\"token variable\">$git</span> push origin master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<br/>\n<B>Step5：写自己的 recipe</B>\n<br/>\n例如，创建并切换到一个名字为 “pgcgap” 的 新分支\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> checkout -b pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<br/>\n<p>在 &quot;bioconda-recipes/recipes/&quot; 目录下新建 &quot;pgcgap&quot; 目录，并将撰写好的<a href=\"https://docs.conda.io/projects/conda-build/en/latest/resources/build-scripts.html\"> build.sh</a> 和<a href=\"https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#architecture-independent-packages\"> meta.yaml</a> 存入其中。</p>\n<br/>\n注：Step6和Step7可以跳过\n<br/>\n<B>Step6：本地测试 recipe</B> （可选，即可以直接在线测试）\n<br/>\n在\"bioconda-recipes/\"目录下依次运行如下命令：\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$./bootstrap.py /tmp/miniconda\n<span class=\"token variable\">$source</span> ~/.config/bioconda/activate\n\n<span class=\"token comment\"># optional linting</span>\n<span class=\"token variable\">$bioconda</span>-utils lint recipes config.yml --git-range master\n\n<span class=\"token comment\"># build and test</span>\n<span class=\"token variable\">$bioconda</span>-utils build recipes config.yml --docker --mulled-test --git-range master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<br/>\n<B>Step7：更新 recipes</B> (可选）\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$bioconda</span>-utils update-pinning recipes/ config.yml --packages pgcgap --create-pr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<br/>\n<B>Step8：推送修改，等待测试通过，提交 pull 请求</B>\n<br/>\n(1) 将本地更改同步到自己的pgcgap分枝\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token variable\">$git</span> push -u origin pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<br/>\n<p>(2) 在 “liaochenlanruo/bioconda-recipes” 的 “pgcgap” 分支下点击 “New pull request”。base repository 选择 “liaochenlanruo/bioconda-recipes”，base 选择 “pgcgap”；head repository 选择 “bioconda/bioconda-recipes”，compare 选择 &quot;master&quot;。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"new_pull_request\" /></p>\n<center>Create a new pull request</center>\n<br/>\n<p>比较完成后提交，标题自定义，内容根据提示酌情填写。若存在问题可以 @其<a href=\"https://bioconda.github.io/#core\">核心团队成员</a>中的任何一位，如输入 “@epruesse”，将会 @ Elmar Pruesse。若想成为 bioconda 成员，以及要 merge 自己的分支，同样需要 @核心成员中的任何一位。</p>\n<p>实例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"create_pull_request_info\" /></p>\n<center>Request 信息填写</center>\n<br/>\n上述步骤完成后，可以在GitHub项目下的“Pull requests”选项卡下查看处理状态。\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"view_pull_request\" /></p>\n<center>查看pull request</center>\n<br/>\n根据提示修改自己的recipe，再次pull，循环往复，直至修复所有错误（下图表示需要修改）。\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"pull_error\" /></p>\n<center>pull出错了</center>\n<br/>\n点击“details”可以查看进程和详细信息。下图所示，正在测试recipe。\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"bioconder_checking2\" /></p>\n<center>正在测试recipe</center>\n<br/>\n如下图所示，表明测试成功，等待管理员合并自己的分支。\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"test_success\" /></p>\n<center>所有测试均成功</center>\n<br/>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"bioconda_check\" /></p>\n<center>非Bioconda成员测试成功后的“Pull requests”界面</center>\n<br/>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"squash_and_merge\" /></p>\n<center>Bioconda成员测试成功后的“Pull requests”界面</center>\n<br/>\n如上两图分别为非bioconda成员以及bioconda成员测试通过的界面，非成员需要新建一条评论并 @一位核心成员，请求其merge自己的pull requests，bioconda成员则可以点击“Squash and merge”来合并自己的pull requests。\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"merge_successfully\" /></p>\n<center>Bioconda成员“Pull requests”合并成功</center>\n<br/>\n## 附：\n1. 加入bioconda\n<p>1）在第一个 recipe 推送成功后可以在评论中 @ 一位核心成员，要求加入组织<br />\n 2）收到邀请链接，点击加入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg\" class=\"lazyload placeholder\" data-srcset=\"https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"invited2bioconda\" /></p>\n<center>被邀请加入Bioconda</center>\n<br/>\n## 常见错误\n1. If linting fails：\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout master\n<span class=\"token function\">git</span> pull upstream master\n<span class=\"token function\">git</span> checkout pgcgap\n<span class=\"token function\">git</span> merge master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n","raw":null,"categories":[{"name":"生物信息","path":"api/categories/生物信息.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"},{"name":"Bioconda","path":"api/tags/Bioconda.json"}]},{"title":"Linux中使用tar将大文件压缩为多个小的压缩包","slug":"Linux中使用tar将大文件压缩为多个小的压缩包","date":"2021-11-26T14:35:35.000Z","updated":"2022-01-08T02:16:28.404Z","comments":true,"path":"api/articles/Linux中使用tar将大文件压缩为多个小的压缩包.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>在 GitHub 上传文件时，单个文件不允许超过 100m，超过的话需要使用 Git Large File Storage，操作起来稍有些复杂，而且我记得也有限制。在这里我们可以将大文件压缩并切片，使之被分割为多个小文件，再上传 GitHub，下载之后再合并即可。</p>\n<ul>\n<li>\n<p>压缩</p>\n<p>假设有个大文件 <code>CAZy.faa</code> ，原始大小为 725m，压缩后为 135m，因此我们可以将其压缩为 2~3 个文件 即可避免 100m 的限制。建议上传至 GitHub 的单个文件大小不要超过 50m，因此我们以 50m 为阈值对文件进行切割（参数 - b）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> czf - CAZy.faa <span class=\"token operator\">|</span> <span class=\"token function\">split</span> -b 50m - CAZy.faa.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>运行命令后，得到了 3 个文件：CAZy.faa.tar.gzaa，CAZy.faa.tar.gzab，CAZy.faa.tar.gzac。</p>\n</li>\n<li>\n<p>解压</p>\n<p>通过如下命令解压后可以得到完整的 <code>CAZy.faa</code>  文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> CAZy.faa.tar.gz* <span class=\"token operator\">|</span> <span class=\"token function\">tar</span> -xzv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h1>\n<ul>\n<li><a href=\"https://my.oschina.net/yysue/blog/1815340\">Linux 下将一个文件压缩分包成多个小文件</a></li>\n</ul>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"},{"name":"Linux","path":"api/tags/Linux.json"}]},{"title":"Github操作","slug":"github操作","date":"2019-04-01T00:46:44.000Z","updated":"2022-03-03T02:49:35.183Z","comments":true,"path":"api/articles/github操作.json","excerpt":null,"keywords":null,"cover":null,"content":"<p>本文讲述了 Github 一些操作技巧……</p>\n<span id=\"more\"></span>\n<h1 id=\"tag相关操作\"><a class=\"markdownIt-Anchor\" href=\"#tag相关操作\"></a> TAG 相关操作</h1>\n<p></br>通过 Tag 可以将项目生成不同的版本，并进行存档，供用户下载。这在软件中是很常见的。</p>\n<ul>\n<li>\n<p><strong>创建 tag</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag v1.0.0 -m <span class=\"token string\">'first version'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>上传到 github</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin v1.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>存档某个 tag</strong></p>\n  <pre class=\"line-numbers language-bassh\" data-language=\"bassh\"><code class=\"language-bassh\">git archive -v --format&#x3D;tar v1.0.0 &gt; v1.0.0.tar.gz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p><strong>删除 tag</strong></p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> tag -d v1.0.0\n<span class=\"token function\">git</span> push origin :refs/tags/v1.0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"branch\"><a class=\"markdownIt-Anchor\" href=\"#branch\"></a> Branch</h1>\n<h2 id=\"创建分支\"><a class=\"markdownIt-Anchor\" href=\"#创建分支\"></a> 创建分支</h2>\n<ul>\n<li>\n<p>创建并切换到名为 <code>pgcgap</code>  的分支</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout -b pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>将 <code>pgcgap</code>  分支推送到远程端</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push -u origin pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h2 id=\"删除分支\"><a class=\"markdownIt-Anchor\" href=\"#删除分支\"></a> 删除分支</h2>\n<p>假设要删除当前所处的 <code>pgcgap</code>  分支。</p>\n<ul>\n<li>\n<p>切换到别的分支，如 master</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>删除本地分支</p>\n  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch -d pgcgap\n\n<span class=\"token comment\"># 有时候需要强制删除</span>\n<span class=\"token function\">git</span> branch -D pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>删除远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin --delete pgcgap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"git-加速\"><a class=\"markdownIt-Anchor\" href=\"#git-加速\"></a> Git 加速</h1>\n<p>进行 git 操作时以 <code>github.com.cnpmjs.org</code>  替换 <code>github.com</code>  可以提速 10 倍左右。</p>\n","raw":null,"categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"Github","path":"api/tags/Github.json"}]}]}