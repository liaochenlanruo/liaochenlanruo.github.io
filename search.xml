<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Shiny从入门到入定——13-Why reactivity?</title>
      <link href="/post/5e3d.html"/>
      <url>/post/5e3d.html</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>现在你已经掌握了一系列有用的技巧，这些技巧赋予了你创建各种有用应用程序的能力。接下来，我们将把注意力转向Shiny魔力背后的反应性理论：</p><ul><li><p>在第<code>13</code>章中，你将了解为什么需要反应性编程模型，以及关于R之外的反应性编程历史的一些知识。</p></li><li><p>在第<code>14</code>章中，你将学习反应图的全部细节，它将决定反应组件何时更新。</p></li><li><p>在第<code>15</code>章中，你将了解底层的构建块，尤其是观察者和定时失效。</p></li><li><p>在第<code>16</code>章中，你将学习如何使用<a href="https://rdrr.io/pkg/shiny/man/reactiveVal.html">reactiveVal()</a>和<a href="https://rdrr.io/pkg/shiny/man/observe.html">observe()</a>来突破反应图的限制。</p></li></ul><p>当然，对于日常开发Shiny应用程序，你并不需要理解所有这些细节。但是，提高你的理解将有助于你从一开始就编写正确的应用程序，当某些行为不符合预期时，你可以更快地缩小问题的范围。</p><h1 id="13-为什么需要反应性？"><a href="#13-为什么需要反应性？" class="headerlink" title="13 为什么需要反应性？"></a>13 为什么需要反应性？</h1><h2 id="13-1-引言"><a href="#13-1-引言" class="headerlink" title="13.1 引言"></a>13.1 引言</h2><p>Shiny给人的初步印象通常是“神奇”。当你刚开始使用时，这种神奇感非常棒，因为它能让你迅速构建出简单的应用程序。但是，软件中的神奇通常会导致幻灭：如果没有一个稳固的思维模型，当你尝试超出其演示和示例的边界时，要预测软件将如何表现就极其困难。而当事情不按你预期的方式发展时，调试几乎是不可能的。</p><p>幸运的是，Shiny的“神奇”是有益的。正如汤姆·戴尔（Tom Dale）谈到他的Ember.js JavaScript框架时所说：“我们做了很多神奇的事情，但这是有益的神奇，这意味着它可以分解为合理的原始元素。”这是Shiny团队希望Shiny所具备的品质，尤其是在反应性编程方面。当你剥去反应性编程的层层外衣时，你不会发现一堆启发式方法、特殊情况和黑客攻击；相反，你会发现一个巧妙但最终相当直接的机制。一旦你形成了对反应性的准确思维模型，你就会明白Shiny并没有耍花招：神奇来自于以一致的方式组合简单概念。</p><p>在本章中，我们将尝试在没有反应性编程的情况下进行开发，以此说明反应性编程的必要性，然后简要介绍与Shiny相关的反应性编程的历史。</p><h2 id="13-2-为什么我们需要反应性编程？"><a href="#13-2-为什么我们需要反应性编程？" class="headerlink" title="13.2 为什么我们需要反应性编程？"></a>13.2 为什么我们需要反应性编程？</h2><p>反应性编程是一种编程风格，它关注随时间变化的值，以及依赖于这些值的计算和操作。反应性对于Shiny应用程序至关重要，因为它们具有交互性：用户改变输入控件（拖动滑块、在文本框中输入内容、勾选复选框等），这会触发服务器上的逻辑运行（读取CSV文件、筛选数据、拟合模型等），最终导致输出更新（图表重绘、表格更新等）。这与大多数R代码有很大的不同，后者通常处理相对静态的数据。</p><p>为了让Shiny应用程序发挥最大效用，我们需要确保反应式表达式和输出仅在它们的输入发生变化时更新。我们希望输出与输入保持同步，同时确保不会进行比必要更多的工作。为了了解反应性为何如此有用，我们将尝试解决一个不使用反应性的简单问题。</p><h3 id="13-2-1-为什么不能使用变量？"><a href="#13-2-1-为什么不能使用变量？" class="headerlink" title="13.2.1 为什么不能使用变量？"></a>13.2.1 为什么不能使用变量？</h3><p>从某种意义上说，你已经知道如何处理“随时间变化的值”：它们被称为“变量”。在R中，变量代表值，它们可以随时间变化，但它们并不是为帮助你处理变化而设计的。以下是一个简单的将温度从摄氏度转换为华氏度的例子：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">temp_c <span class="operator">&lt;-</span> 10</span><br><span class="line">temp_f <span class="operator">&lt;-</span> <span class="punctuation">(</span>temp_c <span class="operator">*</span> <span class="number">9</span> <span class="operator">/</span> <span class="number">5</span><span class="punctuation">)</span> <span class="operator">+</span> <span class="number">32</span></span><br><span class="line">temp_f</span><br><span class="line"><span class="comment">#&gt; [1] 50</span></span><br></pre></td></tr></table></figure><p>到目前为止还不错：<code>temp_c</code>变量有值10，<code>temp_f</code>变量有值50，我们可以改变<code>temp_c</code>的值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">temp_c <span class="operator">&lt;-</span> 30</span><br></pre></td></tr></table></figure><p>但是改变<code>temp_c</code>的值并不会影响<code>temp_f</code>的值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">temp_f</span><br><span class="line"><span class="comment">#&gt; [1] 50</span></span><br></pre></td></tr></table></figure><p>变量可以随时间变化，但它们不会自动变化。</p><h3 id="13-2-2-使用函数怎么样？"><a href="#13-2-2-使用函数怎么样？" class="headerlink" title="13.2.2 使用函数怎么样？"></a>13.2.2 使用函数怎么样？</h3><p>你也可以通过函数来解决这个问题：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">temp_c <span class="operator">&lt;-</span> 10</span><br><span class="line">temp_f <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  message<span class="punctuation">(</span><span class="string">&quot;Converting&quot;</span><span class="punctuation">)</span> </span><br><span class="line">  <span class="punctuation">(</span>temp_c <span class="operator">*</span> <span class="number">9</span> <span class="operator">/</span> <span class="number">5</span><span class="punctuation">)</span> <span class="operator">+</span> <span class="number">32</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">temp_f<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Converting</span></span><br><span class="line"><span class="comment">#&gt; [1] 50</span></span><br></pre></td></tr></table></figure><p>（这是一个有点奇怪的函数，因为它没有参数，而是从其封闭环境40中访问<code>temp_c</code>，但它是一个完全有效的R代码。）</p><p>这解决了反应性试图解决的第一个问题：每当你访问<code>temp_f()</code>时，你都会得到最新的计算结果：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">temp_c <span class="operator">&lt;-</span> <span class="operator">-</span><span class="number">3</span></span><br><span class="line">temp_f<span class="punctuation">(</span><span class="punctuation">)</span> </span><br><span class="line"><span class="comment">#&gt; Converting</span></span><br><span class="line"><span class="comment">#&gt; [1] 26.6</span></span><br></pre></td></tr></table></figure><p>然而，它并没有减少计算量。每次你调用<code>temp_f()</code>时，它都会重新计算，即使<code>temp_c</code>没有改变：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp_f<span class="punctuation">(</span><span class="punctuation">)</span> </span><br><span class="line"><span class="comment">#&gt; Converting</span></span><br><span class="line"><span class="comment">#&gt; [1] 26.6</span></span><br></pre></td></tr></table></figure><p>在这个简单的例子中，计算成本不高，所以重复计算没什么大不了的，但这仍然是多余的：如果输入没有改变，我们为什么要重新计算输出呢？</p><h3 id="13-2-3-事件驱动编程"><a href="#13-2-3-事件驱动编程" class="headerlink" title="13.2.3 事件驱动编程"></a>13.2.3 事件驱动编程</h3><p>由于变量和函数都不适用，我们需要创建一些新的东西。在过去的几十年里，我们可能会直接跳到事件驱动编程。事件驱动编程是一个吸引人的简单范式：你注册回调函数，这些函数会在事件发生时执行。</p><p>我们可以使用R6实现一个非常简单的事件驱动工具包，如下例所示。在这里，我们定义了一个<code>DynamicValue</code>，它有三个重要的方法：<a href="https://rdrr.io/r/base/get.html">get()</a>和<code>set()</code>用于访问和更改基础值，<code>onUpdate()</code>用于注册在值被修改时要运行的代码。如果你不熟悉R6，不用担心细节，而是关注下面的例子。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">DynamicValue <span class="operator">&lt;-</span> R6<span class="operator">::</span>R6Class<span class="punctuation">(</span><span class="string">&quot;DynamicValue&quot;</span><span class="punctuation">,</span> <span class="built_in">list</span><span class="punctuation">(</span></span><br><span class="line">  value <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  on_update <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">  get <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span><span class="punctuation">)</span> self<span class="operator">$</span>value<span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">  set <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>value<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    self<span class="operator">$</span>value <span class="operator">&lt;-</span> value</span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span><span class="built_in">is.null</span><span class="punctuation">(</span>self<span class="operator">$</span>on_update<span class="punctuation">)</span><span class="punctuation">)</span> </span><br><span class="line">      self<span class="operator">$</span>on_update<span class="punctuation">(</span>value<span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">invisible</span><span class="punctuation">(</span>self<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  </span><br><span class="line">  onUpdate <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>on_update<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    self<span class="operator">$</span>on_update <span class="operator">&lt;-</span> on_update</span><br><span class="line">    <span class="built_in">invisible</span><span class="punctuation">(</span>self<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>因此，如果Shiny在五年前就被发明出来，它可能看起来会更像这样，其中<code>temp_c</code>使用<code>&lt;&lt;-</code>来在需要时更新<code>temp_f</code>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">temp_c <span class="operator">&lt;-</span> DynamicValue<span class="operator">$</span>new<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">temp_c<span class="operator">$</span>onUpdate<span class="punctuation">(</span><span class="keyword">function</span><span class="punctuation">(</span>value<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  message<span class="punctuation">(</span><span class="string">&quot;Converting&quot;</span><span class="punctuation">)</span> </span><br><span class="line">  temp_f <span class="operator">&lt;&lt;-</span> <span class="punctuation">(</span>value <span class="operator">*</span> <span class="number">9</span> <span class="operator">/</span> <span class="number">5</span><span class="punctuation">)</span> <span class="operator">+</span> <span class="number">32</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">temp_c<span class="operator">$</span>set<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Converting</span></span><br><span class="line">temp_f</span><br><span class="line"><span class="comment">#&gt; [1] 50</span></span><br><span class="line"></span><br><span class="line">temp_c<span class="operator">$</span>set<span class="punctuation">(</span><span class="operator">-</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Converting</span></span><br><span class="line">temp_f</span><br><span class="line"><span class="comment">#&gt; [1] 26.6</span></span><br></pre></td></tr></table></figure><p>事件驱动编程解决了不必要的计算问题，但它又产生了一个新问题：你必须仔细跟踪哪些输入会影响哪些计算。不久之后，你就会在正确性（即在任何内容发生更改时都更新所有内容）和性能（即尝试仅更新必要的部分，并希望你没有遗漏任何边缘情况）之间权衡取舍，因为同时做到这两点非常困难。</p><h3 id="13-2-4-反应性编程"><a href="#13-2-4-反应性编程" class="headerlink" title="13.2.4 反应性编程"></a>13.2.4 反应性编程</h3><p>反应性编程通过将上述解决方案的特性结合起来，优雅地解决了这两个问题。现在，我们可以向您展示一些真正的Shiny代码，它使用了一个特殊的Shiny模式，即<code>reactiveConsole(TRUE)</code>，这使得我们可以直接在控制台中实验反应性。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line">reactiveConsole<span class="punctuation">(</span><span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>与事件驱动编程一样，我们需要某种方式来指示我们有一个特殊类型的变量。在Shiny中，我们使用<a href="https://rdrr.io/pkg/shiny/man/reactiveVal.html">reactiveVal()</a>创建一个反<strong>reactive value</strong>。反应式值有特殊的语法来获取其值（像调用无参数函数一样调用它）和设置其值（像调用单参数函数一样调用它来设置其值）。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">temp_c <span class="operator">&lt;-</span> reactiveVal<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span> <span class="comment"># create</span></span><br><span class="line">temp_c<span class="punctuation">(</span><span class="punctuation">)</span>                  <span class="comment"># get</span></span><br><span class="line"><span class="comment">#&gt; [1] 10</span></span><br><span class="line">temp_c<span class="punctuation">(</span><span class="number">20</span><span class="punctuation">)</span>                <span class="comment"># set</span></span><br><span class="line">temp_c<span class="punctuation">(</span><span class="punctuation">)</span>                  <span class="comment"># get</span></span><br><span class="line"><span class="comment">#&gt; [1] 20</span></span><br></pre></td></tr></table></figure><p>现在我们可以创建一个依赖于这个值的反应式表达式：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">temp_f <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">  message<span class="punctuation">(</span><span class="string">&quot;Converting&quot;</span><span class="punctuation">)</span> </span><br><span class="line">  <span class="punctuation">(</span>temp_c<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">*</span> <span class="number">9</span> <span class="operator">/</span> <span class="number">5</span><span class="punctuation">)</span> <span class="operator">+</span> <span class="number">32</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">temp_f<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Converting</span></span><br><span class="line"><span class="comment">#&gt; [1] 68</span></span><br></pre></td></tr></table></figure><p>在创建应用程序时，你已经了解到反应式表达式会自动跟踪其所有依赖项。因此，如果之后<code>temp_c</code>发生变化，<code>temp_f</code>会自动更新：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">temp_c<span class="punctuation">(</span><span class="operator">-</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line">temp_c<span class="punctuation">(</span><span class="operator">-</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line">temp_f<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Converting</span></span><br><span class="line"><span class="comment">#&gt; [1] 14</span></span><br></pre></td></tr></table></figure><p>但如果<code>temp_c()</code>没有变化，那么<code>temp_f()</code>就不需要重新计算，可以直接从缓存中获取：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">temp_f<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] 14</span></span><br></pre></td></tr></table></figure><p>反应式表达式有两个重要特性：</p><ul><li><p>它是<strong>惰性</strong>的：在被调用之前，它不会进行任何工作。</p></li><li><p>它是<strong>缓存</strong>的：在第二次及后续调用时，它不会进行任何工作，因为它缓存了之前的结果。</p></li></ul><p>我们将在第<code>14</code>章中再次讨论这些重要特性。</p><h2 id="13-3-反应式编程简史"><a href="#13-3-反应式编程简史" class="headerlink" title="13.3 反应式编程简史"></a>13.3 反应式编程简史</h2><p>如果你想了解更多其他语言的反应式编程知识，那么了解其发展历史可能会有所帮助。你可以在<a href="https://en.wikipedia.org/wiki/VisiCalc">VisiCalc</a>（第一个电子表格软件）中看到反应式编程的萌芽，它起源于40多年前：</p><p>  我想象了一个神奇的黑板，当你擦去一个数字并写入新的东西时，其他所有的数字都会自动改变，就像用数字进行的文字处理一样。</p><p>  ——<a href="https://youtu.be/YDvbDiJZpy0">Dan Bricklin</a></p><p>电子表格与反应式编程密切相关：你使用公式声明单元格之间的关系，当一个单元格发生变化时，其所有依赖项都会自动更新。因此，你可能已经在不知不觉中进行了大量反应式编程！</p><p>虽然反应性的概念已经存在很长时间了，但直到20世纪90年代末，学术界才开始对其进行认真研究。反应式编程的研究始于FRAN（<strong>f</strong>unctional <strong>r</strong>eactive <strong>a</strong>nimation，功能性反应式动画），这是一种将随时间变化和用户输入融入功能编程语言中的新颖系统。这催生了一系列丰富的文献，但对编程实践的影响却很小。</p><p>直到2010年代，反应式编程才通过JavaScript UI框架的快节奏世界进入主流编程领域。像<a href="https://knockoutjs.com/">Knockout</a>、<a href="https://emberjs.com/">Ember</a>和<a href="https://www.meteor.com/">Meteor</a>（Joe Cheng’s personal inspiration for Shiny）这样的开创性框架表明，反应式编程可以极大地简化UI编程。短短几年内，反应式编程通过<a href="https://reactjs.org/">React</a>、<a href="https://vuejs.org/">Vue.js</a>和<a href="https://angularjs.org/">Angular</a>等广受欢迎的框架主导了网络编程，这些框架要么本质上具有反应性，要么设计为与反应式后端协同工作。</p><p>值得一提的是，“反应式编程”是一个相当泛泛的术语。虽然所有反应式编程的库、框架和语言大体上都是关注编写响应值变化的程序，但是它们在术语、设计和实现方面却存在巨大的差异。在本书中，每当提到“反应式编程”时，我们特指在Shiny中实现的反应式编程。因此，如果你阅读了关于反应式编程的资料，而这些资料并不是专门针对Shiny的，那么这些概念甚至术语都不太可能与编写Shiny应用相关。对于那些对其他反应式编程框架有一定经验的读者来说，Shiny的方法与<a href="https://www.meteor.com/">Meteor</a>和<a href="https://mobx.js.org/">MobX</a>类似，与<a href="http://reactivex.io/">ReactiveX</a>系列或任何将自己标记为功能反应式编程的内容有很大不同。</p><h2 id="13-4-小结"><a href="#13-4-小结" class="headerlink" title="13.4 小结"></a>13.4 小结</h2><p>现在你已经理解了为什么需要反应式编程，并且对它的发展历史有了一些了解，接下来的一章将讨论其底层理论的更多细节。最重要的是，你将巩固对反应图的理解，反应图将反应值、反应表达式和观察者连接起来，并精确控制何时运行。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”，聊天窗口回复“85d7”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——12-Tidy evaluation</title>
      <link href="/post/3709.html"/>
      <url>/post/3709.html</url>
      
        <content type="html"><![CDATA[<h1 id="整洁评估"><a href="#整洁评估" class="headerlink" title="整洁评估"></a>整洁评估</h1><p>如果你在使用Shiny与tidyverse，那么你几乎肯定会遇到整洁评估编程的挑战。整洁评估在tidyverse中被广泛使用，使交互式数据探索更加流畅，但它也有代价：很难间接引用变量，因此编程起来也更加困难。</p><p>在本章中，你将学习如何在Shiny应用程序中包装ggplot2和dplyr函数。（如果你不使用tidyverse，那么可以跳过这一章😄。）将ggplot2和dplyr函数包装在函数和包中的技术略有不同，并且在其他资源如<a href="http://ggplot2.tidyverse.org/dev/articles/ggplot2-in-packages.html">“在包中使用ggplot2”</a>或<a href="http://dplyr.tidyverse.org/articles/programming.html">“使用dplyr编程”</a>中有所涵盖。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>dplyr<span class="punctuation">,</span> warn.conflicts <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="12-1-动机"><a href="#12-1-动机" class="headerlink" title="12.1 动机"></a>12.1 动机</h2><p>假设我想创建一个应用程序，允许你过滤一个数值变量，以选择大于某个阈值的行。你可能会写出类似这样的代码：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">num_vars <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;carat&quot;</span><span class="punctuation">,</span> <span class="string">&quot;depth&quot;</span><span class="punctuation">,</span> <span class="string">&quot;table&quot;</span><span class="punctuation">,</span> <span class="string">&quot;price&quot;</span><span class="punctuation">,</span> <span class="string">&quot;x&quot;</span><span class="punctuation">,</span> <span class="string">&quot;y&quot;</span><span class="punctuation">,</span> <span class="string">&quot;z&quot;</span><span class="punctuation">)</span></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;var&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Variable&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> num_vars<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;min&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Minimum&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;output&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span>diamonds <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>input<span class="operator">$</span>var <span class="operator">&gt;</span> input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>output <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>head<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/2c131334332cadef7ec2b3e3bdf32689f3f1ebc6/f6143/demos/action-tidy/messed-up.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/2c131334332cadef7ec2b3e3bdf32689f3f1ebc6/f6143/demos/action-tidy/messed-up.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图12.1 一个应用程序试图选择用户选定变量中大于阈值的行"></p><p>从<code>图12.1</code>中你可以看到，该应用程序可以无错误地运行，但它并没有返回正确的结果——所有的行中，钻石的净重（<code>carat</code>）值都小于1。本章的目标是帮助你理解为什么这不起作用，以及为什么dplyr认为你请求的是<code>filter(diamonds, &quot;carat&quot; &gt; 1)</code>。</p><p>这是一个<code>间接引用</code>的问题：通常在使用tidyverse函数时，你会直接在函数调用中输入变量的名称。但现在你想要间接引用它：变量（<code>carat</code>）存储在另一个变量（<code>input$var</code>）中。</p><p>这句话可能对你来说很直观，但有点令人困惑，因为我在这里用“变量”来指代两种略有不同的事物。如果我们引入两个新术语来消除这两种用法之间的歧义，那么理解正在发生的事情会更容易：</p><ul><li><p>环境变量（<strong>env-variable</strong>）是一个“编程”变量，你用<code>&lt;-</code>来创建。<code>input$var</code>是一个环境变量。</p></li><li><p>数据变量（<strong>data-variable</strong>）是存储在数据框中的“统计”变量。<code>carat</code>是一个数据变量。</p></li></ul><p>有了这些新术语，我们可以更清楚地阐述间接引用的问题：我们有一个数据变量（<code>carat</code>）存储在一个环境变量（<code>input$var</code>）中，我们需要一种方法来告诉dplyr这一点。根据你所使用的函数是“数据掩蔽”函数还是“整洁选择”函数，实现这一点的方法略有不同。</p><h2 id="12-2-数据掩蔽"><a href="#12-2-数据掩蔽" class="headerlink" title="12.2 数据掩蔽"></a>12.2 数据掩蔽</h2><p>数据掩蔽函数允许你在“当前”数据框中使用变量，而无需任何额外的语法。它在许多dplyr函数（如<a href="https://dplyr.tidyverse.org/reference/arrange.html">arrange()</a>、<a href="https://dplyr.tidyverse.org/reference/filter.html">filter()</a>、<a href="https://dplyr.tidyverse.org/reference/group_by.html">group_by()</a>、<a href="https://dplyr.tidyverse.org/reference/mutate.html">mutate()</a>和<a href="https://dplyr.tidyverse.org/reference/summarise.html">summarise()</a>）以及ggplot2的<a href="https://ggplot2.tidyverse.org/reference/aes.html">aes()</a>中使用。数据掩蔽很有用，因为它允许你使用数据变量，而无需任何额外的语法。</p><h3 id="12-2-1-开始"><a href="#12-2-1-开始" class="headerlink" title="12.2.1 开始"></a>12.2.1 开始</h3><p>让我们从调用<code>filter()</code>函数开始，它使用了一个数据变量（<code>carat</code>）和一个环境变量（<code>min</code>）：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">min</span> <span class="operator">&lt;-</span> 1</span><br><span class="line">diamonds <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>carat <span class="operator">&gt;</span> <span class="built_in">min</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 17,502 × 10</span></span><br><span class="line"><span class="comment">#&gt;   carat cut       color clarity depth table price     x     y     z</span></span><br><span class="line"><span class="comment">#&gt;   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1  1.17 Very Good J     I1       60.2    61  2774  6.83  6.9   4.13</span></span><br><span class="line"><span class="comment">#&gt; 2  1.01 Premium   F     I1       61.8    60  2781  6.39  6.36  3.94</span></span><br><span class="line"><span class="comment">#&gt; 3  1.01 Fair      E     I1       64.5    58  2788  6.29  6.21  4.03</span></span><br><span class="line"><span class="comment">#&gt; 4  1.01 Premium   H     SI2      62.7    59  2788  6.31  6.22  3.93</span></span><br><span class="line"><span class="comment">#&gt; 5  1.05 Very Good J     SI2      63.2    56  2789  6.49  6.45  4.09</span></span><br><span class="line"><span class="comment">#&gt; 6  1.05 Fair      J     SI2      65.8    59  2789  6.41  6.27  4.18</span></span><br><span class="line"><span class="comment">#&gt; # … with 17,496 more rows</span></span><br></pre></td></tr></table></figure><p>与基础R的等效代码进行比较：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diamonds<span class="punctuation">[</span>diamonds<span class="operator">$</span>carat <span class="operator">&gt;</span> <span class="built_in">min</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>在大多数（但不是全部）基础R函数中，你需要使用<code>$</code>来引用数据变量。这意味着你经常需要多次重复数据框的名称，但这确实清楚地表明了什么是数据变量，什么是环境变量。这也使得间接引用变得直接明了，因为你可以将数据变量的名称存储在一个环境变量中，然后从<code>$</code>切换到<code>[[</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var <span class="operator">&lt;-</span> <span class="string">&quot;carat&quot;</span></span><br><span class="line">diamonds<span class="punctuation">[</span>diamonds<span class="punctuation">[[</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> <span class="built_in">min</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>我们如何使用整洁评估来达到相同的效果呢？我们需要一种方法将<code>$</code>重新加入进来。幸运的是，在数据掩蔽函数中，如果你想明确表示你是在谈论数据变量还是环境变量，你可以使用<code>.data</code>或<code>.env</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diamonds <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>.data<span class="operator">$</span>carat <span class="operator">&gt;</span> .env<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>现在我们可以从$切换到[[：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diamonds <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>.data<span class="punctuation">[[</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> .env<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>让我们通过更新本章开始时使用的服务器函数来检查它是否有效：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">num_vars <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;carat&quot;</span><span class="punctuation">,</span> <span class="string">&quot;depth&quot;</span><span class="punctuation">,</span> <span class="string">&quot;table&quot;</span><span class="punctuation">,</span> <span class="string">&quot;price&quot;</span><span class="punctuation">,</span> <span class="string">&quot;x&quot;</span><span class="punctuation">,</span> <span class="string">&quot;y&quot;</span><span class="punctuation">,</span> <span class="string">&quot;z&quot;</span><span class="punctuation">)</span></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;var&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Variable&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> num_vars<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;min&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Minimum&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;output&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span>diamonds <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> .env<span class="operator">$</span>input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>output <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>head<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/878d4b65fc1671d180c91732193924ce2f3b3ea8/ca76b/demos/action-tidy/tidied-up.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/878d4b65fc1671d180c91732193924ce2f3b3ea8/ca76b/demos/action-tidy/tidied-up.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图12.2 我们的应用现在运行良好，因为我们明确了.data和.env以及[[与$的区别。请访问https://hadley.shinyapps.io/ms-tidied-up查看实时效果"></p><p><code>图12.2</code>显示我们已经成功了——我们只看到克拉值大于1的钻石。现在你已经了解了基础知识，我们将开发几个更现实但仍然简单的Shiny应用。</p><h3 id="12-2-2-示例：ggplot2"><a href="#12-2-2-示例：ggplot2" class="headerlink" title="12.2.2 示例：ggplot2"></a>12.2.2 示例：ggplot2</h3><p>让我们将这个想法应用于动态绘图，允许用户通过选择要在<code>x</code>轴和<code>y</code>轴上显示的变量来创建散点图。结果如<code>图12.3</code>所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;x&quot;</span><span class="punctuation">,</span> <span class="string">&quot;X variable&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>iris<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;y&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Y variable&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>iris<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    ggplot<span class="punctuation">(</span>iris<span class="punctuation">,</span> aes<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> .data<span class="punctuation">[[</span>input<span class="operator">$</span>y<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">      geom_point<span class="punctuation">(</span>position <span class="operator">=</span> ggforce<span class="operator">::</span>position_auto<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/9defdeb8a9d4c779898f02f540feb95283b62c65/23a54/demos/action-tidy/ggplot2-scatter.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/9defdeb8a9d4c779898f02f540feb95283b62c65/23a54/demos/action-tidy/ggplot2-scatter.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/74cf9f3e211b5f2430a03a5c960da0ab63a1e29e/41abe/demos/action-tidy/ggplot2-swarm.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/74cf9f3e211b5f2430a03a5c960da0ab63a1e29e/41abe/demos/action-tidy/ggplot2-swarm.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="2">图12.3 一个简单的应用程序，允许您选择要在x轴和y轴上绘制的变量。请访问<a href="https://hadley.shinyapps.io/ms-ggplot2">https://hadley.shinyapps.io/ms-ggplot2</a>查看实时效果</td></tr></table><p>这里我使用了<a href="https://ggforce.data-imaginist.com/reference/position_auto.html">ggforce::position_auto()</a>，这样无论x和y变量是连续的还是离散的，<a href="https://ggplot2.tidyverse.org/reference/geom_point.html">geom_point()</a>都能很好地工作。或者，我们也可以让用户选择geom。下面的应用程序使用<a href="https://rdrr.io/r/base/switch.html">switch()</a>语句生成一个反应性的geom，稍后会将其添加到图中。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;x&quot;</span><span class="punctuation">,</span> <span class="string">&quot;X variable&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>iris<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;y&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Y variable&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>iris<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;geom&quot;</span><span class="punctuation">,</span> <span class="string">&quot;geom&quot;</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;point&quot;</span><span class="punctuation">,</span> <span class="string">&quot;smooth&quot;</span><span class="punctuation">,</span> <span class="string">&quot;jitter&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  plot_geom <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="built_in">switch</span><span class="punctuation">(</span>input<span class="operator">$</span>geom<span class="punctuation">,</span></span><br><span class="line">      point <span class="operator">=</span> geom_point<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      smooth <span class="operator">=</span> geom_smooth<span class="punctuation">(</span>se <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      jitter <span class="operator">=</span> geom_jitter<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    ggplot<span class="punctuation">(</span>iris<span class="punctuation">,</span> aes<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> .data<span class="punctuation">[[</span>input<span class="operator">$</span>y<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">      plot_geom<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这是使用用户选择的变量进行编程时面临的挑战之一：你的代码必须变得更加复杂，以处理用户可能生成的所有情况。</p><h3 id="12-2-3-示例：dplyr"><a href="#12-2-3-示例：dplyr" class="headerlink" title="12.2.3 示例：dplyr"></a>12.2.3 示例：dplyr</h3><p>同样的技术也适用于dplyr。下面的应用程序扩展了前面简单的示例，允许您选择一个变量进行过滤，选择一个最小值进行选择，以及选择一个变量进行排序。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;var&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Select variable&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;min&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Minimum value&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;sort&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Sort by&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>var<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    rng <span class="operator">&lt;-</span> <span class="built_in">range</span><span class="punctuation">(</span>mtcars<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">    updateSliderInput<span class="punctuation">(</span></span><br><span class="line">      session<span class="punctuation">,</span> <span class="string">&quot;min&quot;</span><span class="punctuation">,</span> </span><br><span class="line">      value <span class="operator">=</span> rng<span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> </span><br><span class="line">      <span class="built_in">min</span> <span class="operator">=</span> rng<span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> </span><br><span class="line">      <span class="built_in">max</span> <span class="operator">=</span> rng<span class="punctuation">[[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    mtcars <span class="operator">%&gt;%</span> </span><br><span class="line">      filter<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">      arrange<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>sort<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/4b67467c8ad6e40cb3fffad24222564bf4858788/ae5b1/demos/action-tidy/dplyr.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/4b67467c8ad6e40cb3fffad24222564bf4858788/ae5b1/demos/action-tidy/dplyr.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图12.4 一个简单的应用程序，允许您选择一个变量作为阈值，并选择如何对结果进行排序。请访问https://hadley.shinyapps.io/ms-dplyr/查看实时效果"></p><p>大多数其他问题都可以通过结合<code>.data</code>和您的现有编程技能来解决。例如，如果您想要条件性地以升序或降序进行排序，应该怎么做呢？</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;var&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Sort by&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  checkboxInput<span class="punctuation">(</span><span class="string">&quot;desc&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Descending order?&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  sorted <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>desc<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      arrange<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> desc<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">      arrange<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> .data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>sorted<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>随着你提供更多控制选项，你会发现代码变得越来越复杂，同时创建一个既全面又友好的用户界面也变得越来越难。这就是为什么我一直专注于数据分析的代码工具：创建好的用户界面真的非常难！</p><h3 id="12-2-4-用户提供的数据"><a href="#12-2-4-用户提供的数据" class="headerlink" title="12.2.4 用户提供的数据"></a>12.2.4 用户提供的数据</h3><p>在继续讨论整洁选择之前，我们还需要讨论最后一个话题：用户提供的数据。以<code>图12.5</code>中显示的这个应用程序为例：它允许用户上传一个tsv文件，然后选择一个变量并根据该变量进行筛选。它适用于绝大多数你可能会尝试的输入。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  fileInput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">,</span> <span class="string">&quot;dataset&quot;</span><span class="punctuation">,</span> accept <span class="operator">=</span> <span class="string">&quot;.tsv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;var&quot;</span><span class="punctuation">,</span> <span class="string">&quot;var&quot;</span><span class="punctuation">,</span> character<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;min&quot;</span><span class="punctuation">,</span> <span class="string">&quot;min&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;output&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>data<span class="punctuation">)</span></span><br><span class="line">    vroom<span class="operator">::</span>vroom<span class="punctuation">(</span>input<span class="operator">$</span>data<span class="operator">$</span>datapath<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    updateSelectInput<span class="punctuation">(</span>session<span class="punctuation">,</span> <span class="string">&quot;var&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>var<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    val <span class="operator">&lt;-</span> data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">    updateNumericInput<span class="punctuation">(</span>session<span class="punctuation">,</span> <span class="string">&quot;min&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="built_in">min</span><span class="punctuation">(</span>val<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>output <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>var<span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    data<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">      filter<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">      arrange<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">      head<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/a2b57fbb1d8a118a0410942708a051e92355b7a6/a504d/demos/action-tidy/user-supplied.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/a2b57fbb1d8a118a0410942708a051e92355b7a6/a504d/demos/action-tidy/user-supplied.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图12.5 一个过滤用户提供的数据的应用程序，具有令人惊讶的故障模式。请访问https://hadley.shinyapps.io/ms-user-supplied/查看实时效果"></p><p>这里使用<a href="https://dplyr.tidyverse.org/reference/filter.html">filter()</a>有一个微妙的问题。让我们把对<code>filter()</code>的调用提取出来，这样我们就可以在应用程序之外直接操作它：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>x <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> y <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line">input <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span>var <span class="operator">=</span> <span class="string">&quot;x&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">df <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;   x y</span></span><br><span class="line"><span class="comment">#&gt; 1 1 2</span></span><br></pre></td></tr></table></figure><p>如果你试验这段代码，你会发现它对于绝大多数数据框都能很好地工作。然而，有一个微妙的问题：如果数据框中包含一个名为<code>input</code>的变量，会发生什么？</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>x <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> y <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> input <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span></span><br><span class="line">df <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Error in `filter()`:</span></span><br><span class="line"><span class="comment">#&gt; ! Problem while computing `..1 = .data[[&quot;x&quot;]] &gt; input$min`.</span></span><br><span class="line"><span class="comment">#&gt; Caused by error in `input$min`:</span></span><br><span class="line"><span class="comment">#&gt; ! $ operator is invalid for atomic vectors</span></span><br></pre></td></tr></table></figure><p>我们收到一条错误信息，因为<code>filter()</code>正在尝试计算<code>df$input$min</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df<span class="operator">$</span>input<span class="operator">$</span><span class="built_in">min</span></span><br><span class="line"><span class="comment">#&gt; Error in df$input$min: $ operator is invalid for atomic vectors</span></span><br></pre></td></tr></table></figure><p>这个问题是由于数据变量和环境变量的歧义造成的，并且在两者都可用时，数据掩蔽更倾向于使用数据变量。我们可以通过使用<code>.env</code>来告诉<code>filter()</code>只在环境变量中查找<code>min</code>来解决这个问题：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>.data<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> .env<span class="operator">$</span>input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;   x y input</span></span><br><span class="line"><span class="comment">#&gt; 1 1 2     3</span></span><br></pre></td></tr></table></figure><p>请注意，这个问题只有在处理用户提供的数据时才需要考虑；在处理自己的数据时，你可以确保数据变量的名称不会与环境变量的名称冲突（如果不小心冲突了，你会立刻发现）。</p><h3 id="12-2-5-为什么不使用基础R？"><a href="#12-2-5-为什么不使用基础R？" class="headerlink" title="12.2.5 为什么不使用基础R？"></a>12.2.5 为什么不使用基础R？</h3><p>到这时，你可能会想，如果没有<code>filter()</code>函数，使用等效的基础R代码会不会更好？</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df<span class="punctuation">[</span>df<span class="punctuation">[[</span>input<span class="operator">$</span>var<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&gt;</span> input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line"><span class="comment">#&gt;   x y input</span></span><br><span class="line"><span class="comment">#&gt; 1 1 2     3</span></span><br></pre></td></tr></table></figure><p>这是一个完全合理的立场，只要你意识到<code>filter()</code>为你做的工作，以便你能生成等效的基础R代码。在这种情况下：</p><ul><li><p>如果df只包含一列，你需要使用<code>drop = FALSE</code>（否则你会得到一个向量而不是数据框）。</p></li><li><p>你需要使用<a href="https://rdrr.io/r/base/which.html">which()</a>或类似函数来删除任何缺失值。</p></li><li><p>你不能进行分组过滤（例如，<code>df %&gt;% group_by(g) %&gt;% filter(n() == 1)</code>）。</p></li></ul><p>一般来说，如果你只是使用dplyr来处理非常简单的案例，你可能会发现使用不使用数据掩蔽的基础R函数更容易。然而，在我看来，tidyverse的一个优势在于它仔细考虑了边缘情况，以便函数能更一致地工作。我不想夸大这一点，但同时，很容易忘记特定基础R函数的怪癖，并编写出95%以上时间都能工作，但在另外5%的时间里会以不寻常的方式失败的代码。</p><h2 id="12-3-整洁选择-Tidy-selection"><a href="#12-3-整洁选择-Tidy-selection" class="headerlink" title="12.3 整洁选择 Tidy-selection"></a>12.3 整洁选择 Tidy-selection</h2><p>除了数据掩蔽之外，整洁评估还有一个重要的部分：整洁选择。整洁选择提供了一种简洁的方式来通过位置、名称或类型选择列。它在<a href="https://dplyr.tidyverse.org/reference/select.html">dplyr::select()</a>和<a href="https://dplyr.tidyverse.org/reference/across.html">dplyr::across()</a>以及tidyr中的许多函数（如<a href="https://tidyr.tidyverse.org/reference/pivot_longer.html">pivot_longer()</a>、<a href="https://tidyr.tidyverse.org/reference/pivot_wider.html">pivot_wider()</a>、<a href="https://tidyr.tidyverse.org/reference/separate.html">separate()</a>、<a href="https://tidyr.tidyverse.org/reference/extract.html">extract()</a>和<a href="https://tidyr.tidyverse.org/reference/unite.html">unite()</a>）中使用。</p><h3 id="12-3-1-间接引用"><a href="#12-3-1-间接引用" class="headerlink" title="12.3.1 间接引用"></a>12.3.1 间接引用</h3><p>要间接引用变量，可以使用<a href="https://tidyselect.r-lib.org/reference/all_of.html">any_of()</a>或<a href="https://tidyselect.r-lib.org/reference/all_of.html">all_of()</a>：两者都期望一个包含数据变量名称的字符向量作为环境变量。唯一的区别是，如果你提供了一个在输入中不存在的变量名，<code>all_of()</code>会引发错误，而<code>any_of()</code>则会静默地忽略它。</p><p>例如，以下应用程序允许用户使用多选输入选择任意数量的变量，同时使用<code>all_of()</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;vars&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Variables&quot;</span><span class="punctuation">,</span> <span class="built_in">names</span><span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">,</span> multiple <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>vars<span class="punctuation">)</span></span><br><span class="line">    mtcars <span class="operator">%&gt;%</span> select<span class="punctuation">(</span>all_of<span class="punctuation">(</span>input<span class="operator">$</span>vars<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="12-3-2-整洁选择与数据掩蔽"><a href="#12-3-2-整洁选择与数据掩蔽" class="headerlink" title="12.3.2 整洁选择与数据掩蔽"></a>12.3.2 整洁选择与数据掩蔽</h3><p>当使用采用整洁选择的函数时，处理多个变量变得轻而易举：您只需将包含变量名的字符向量传递给<code>any_of()</code>或<code>all_of()</code>。如果我们也能在数据掩蔽函数中使用这种方法，那该有多好？这正是dplyr 1.0.0版本中添加的<a href="https://dplyr.tidyverse.org/reference/across.html">across()</a>函数的设计理念。它允许您在数据掩蔽函数中使用整洁选择。</p><p><code>across()</code>函数通常使用一个或两个参数。第一个参数用于选择变量，在<a href="https://dplyr.tidyverse.org/reference/group_by.html">group_by()</a>或<a href="https://dplyr.tidyverse.org/reference/distinct.html">distinct()</a>等函数中非常有用。例如，以下应用程序允许您选择任意数量的变量并计算它们的唯一值数量。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;vars&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Variables&quot;</span><span class="punctuation">,</span> <span class="built_in">names</span><span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">,</span> multiple <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;count&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>count <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>vars<span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    mtcars <span class="operator">%&gt;%</span> </span><br><span class="line">      group_by<span class="punctuation">(</span>across<span class="punctuation">(</span>all_of<span class="punctuation">(</span>input<span class="operator">$</span>vars<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">      summarise<span class="punctuation">(</span>n <span class="operator">=</span> n<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> .groups <span class="operator">=</span> <span class="string">&quot;drop&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/20b7acd57783cbc15cf0d64d8964bba1e093ba06/1c155/demos/action-tidy/across.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/20b7acd57783cbc15cf0d64d8964bba1e093ba06/1c155/demos/action-tidy/across.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图12.6 此应用程序允许您选择任意数量的变量，并计算它们的唯一组合数量。请访问https://hadley.shinyapps.io/ms-across实时查看"></p><p>第二个参数是一个函数（或函数列表），应用于每个选定的列。这使得它非常适合<a href="https://dplyr.tidyverse.org/reference/mutate.html">mutate()</a>和<a href="https://dplyr.tidyverse.org/reference/summarise.html">summarise()</a>等函数，因为您通常想要以某种方式转换每个变量。例如，以下代码允许用户选择任意数量的分组变量，以及任意数量的变量，以计算它们的平均值进行汇总。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;vars_g&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Group by&quot;</span><span class="punctuation">,</span> <span class="built_in">names</span><span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">,</span> multiple <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;vars_s&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Summarise&quot;</span><span class="punctuation">,</span> <span class="built_in">names</span><span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">,</span> multiple <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    mtcars <span class="operator">%&gt;%</span> </span><br><span class="line">      group_by<span class="punctuation">(</span>across<span class="punctuation">(</span>all_of<span class="punctuation">(</span>input<span class="operator">$</span>vars_g<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">      summarise<span class="punctuation">(</span>across<span class="punctuation">(</span>all_of<span class="punctuation">(</span>input<span class="operator">$</span>vars_s<span class="punctuation">)</span><span class="punctuation">,</span> mean<span class="punctuation">)</span><span class="punctuation">,</span> n <span class="operator">=</span> n<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="12-4-parse-eval"><a href="#12-4-parse-eval" class="headerlink" title="12.4 parse() + eval()"></a>12.4 parse() + eval()</h2><p>在我们继续之前，有必要对<a href="https://rdrr.io/r/base/paste.html">paste()</a> + <a href="https://rdrr.io/r/base/parse.html">parse()</a> + <a href="https://rdrr.io/r/base/eval.html">eval()</a>组合进行简短的评论。如果你完全不了解这个组合，可以跳过这一节，但如果你已经使用过它，我想给你一个小小的警告。</p><p>这是一个诱人的方法，因为它只需要学习很少的新概念。但它也有一些主要的缺点：由于你正在将字符串拼接在一起，很容易意外地创建出无效的代码，或者可能被滥用以执行你不希望的操作的代码。如果这只是你自己使用的Shiny应用程序，这可能不是非常重要，但这并不是一个值得养成的好习惯——否则，很容易在你广泛分享的应用程序中意外地创建一个安全漏洞。我们将在第<code>22章</code>中再次提及这个观点。</p><p>（如果你发现这是解决问题的唯一方法，不必感到沮丧。但当你有了更多的思考空间时，我建议花些时间弄清楚如何在不进行字符串操作的情况下实现。这将有助于你成为一名更好的R程序员。）</p><h2 id="12-5-总结"><a href="#12-5-总结" class="headerlink" title="12.5 总结"></a>12.5 总结</h2><p>在本章中，你学习了如何创建Shiny应用程序，让用户选择将哪些变量输入到如<a href="https://dplyr.tidyverse.org/reference/filter.html">dplyr::filter()</a>和<a href="https://ggplot2.tidyverse.org/reference/aes.html">ggplot2::aes()</a>这样的tidyverse函数中。这需要你理解一个你之前可能从未考虑过的关键区别：数据变量和环境变量的不同。这可能需要一些练习才能变得自然，但一旦你掌握了这些概念，你就能够解锁tidyverse的数据分析功能，并将其暴露给非R用户。</p><p>这是本书<code>“Shiny实战”</code>部分的最后一章。既然你已经拥有了制作一系列有用应用程序所需的工具，我将重点提高你对Shiny底层理论的理解。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——11-书签</title>
      <link href="/post/8eca.html"/>
      <url>/post/8eca.html</url>
      
        <content type="html"><![CDATA[<h1 id="11-书签"><a href="#11-书签" class="headerlink" title="11 书签"></a>11 书签</h1><p>与大多数网站相比，Shiny应用程序有一个主要的缺点：您无法为应用程序添加书签以便将来返回同一位置，也无法通过电子邮件中的链接与他人分享您的工作。这是因为，默认情况下，Shiny不会在URL中公开应用程序的当前状态。然而，幸运的是，通过一些额外的工作，您可以更改此行为，本章将向您展示如何操作。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="11-1-基本思路"><a href="#11-1-基本思路" class="headerlink" title="11.1 基本思路"></a>11.1 基本思路</h2><p>让我们用一个简单的应用程序来演示如何使其具有书签功能。这个应用程序绘制了利萨茹曲线，这些曲线复制了摆锤的运动。这个应用程序可以生成各种有趣的图案，您可能想要与他人分享。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      sliderInput<span class="punctuation">(</span><span class="string">&quot;omega&quot;</span><span class="punctuation">,</span> <span class="string">&quot;omega&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="operator">-</span><span class="number">2</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      sliderInput<span class="punctuation">(</span><span class="string">&quot;delta&quot;</span><span class="punctuation">,</span> <span class="string">&quot;delta&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      sliderInput<span class="punctuation">(</span><span class="string">&quot;damping&quot;</span><span class="punctuation">,</span> <span class="string">&quot;damping&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0.9</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">0.001</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;length&quot;</span><span class="punctuation">,</span> <span class="string">&quot;length&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      plotOutput<span class="punctuation">(</span><span class="string">&quot;fig&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  t <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span>seq<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span> input<span class="operator">$</span><span class="built_in">length</span><span class="punctuation">,</span> length.out <span class="operator">=</span> input<span class="operator">$</span><span class="built_in">length</span> <span class="operator">*</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  x <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="built_in">sin</span><span class="punctuation">(</span>input<span class="operator">$</span>omega <span class="operator">*</span> t<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> input<span class="operator">$</span>delta<span class="punctuation">)</span> <span class="operator">*</span> input<span class="operator">$</span>damping <span class="operator">^</span> t<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  y <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="built_in">sin</span><span class="punctuation">(</span>t<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">*</span> input<span class="operator">$</span>damping <span class="operator">^</span> t<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>fig <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    plot<span class="punctuation">(</span>x<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> y<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> axes <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> xlab <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> ylab <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> type <span class="operator">=</span> <span class="string">&quot;l&quot;</span><span class="punctuation">,</span> lwd <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/6ad93d80475f1ebc6d632c1293f210174da9b9d6/f576b/demos/action-bookmark/pendulum.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/6ad93d80475f1ebc6d632c1293f210174da9b9d6/f576b/demos/action-bookmark/pendulum.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图11.1 这个应用程序允许您使用摆锤模型生成有趣的图案。如果能和朋友分享一个链接，岂不是很酷？"></p><p>为了使这个应用程序具有书签功能，我们需要做三件事情：</p><ol><li><p>在用户界面中添加一个<a href="https://rdrr.io/pkg/shiny/man/bookmarkButton.html">bookmarkButton()</a>。这将生成一个按钮，用户点击后生成可书签的URL。</p></li><li><p>将ui变为一个函数。您需要这样做是因为书签化的应用程序必须重新播放书签化的值：实际上，Shiny会修改每个输入控件的默认<code>value</code>。这意味着不再有一个单一的静态用户界面，而是可能有多个依赖于URL中参数的用户界面，因此它必须是一个函数。</p></li><li><p>在<a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp()</a>调用中添加<code>enableBookmarking = &quot;url&quot;</code>。</p></li></ol><p>进行这些更改后，我们得到：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>request<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  fluidPage<span class="punctuation">(</span></span><br><span class="line">    sidebarLayout<span class="punctuation">(</span></span><br><span class="line">      sidebarPanel<span class="punctuation">(</span></span><br><span class="line">        sliderInput<span class="punctuation">(</span><span class="string">&quot;omega&quot;</span><span class="punctuation">,</span> <span class="string">&quot;omega&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="operator">-</span><span class="number">2</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        sliderInput<span class="punctuation">(</span><span class="string">&quot;delta&quot;</span><span class="punctuation">,</span> <span class="string">&quot;delta&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        sliderInput<span class="punctuation">(</span><span class="string">&quot;damping&quot;</span><span class="punctuation">,</span> <span class="string">&quot;damping&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0.9</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">0.001</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        numericInput<span class="punctuation">(</span><span class="string">&quot;length&quot;</span><span class="punctuation">,</span> <span class="string">&quot;length&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        bookmarkButton<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">      <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      mainPanel<span class="punctuation">(</span></span><br><span class="line">        plotOutput<span class="punctuation">(</span><span class="string">&quot;fig&quot;</span><span class="punctuation">)</span></span><br><span class="line">      <span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shinyApp<span class="punctuation">(</span>ui<span class="punctuation">,</span> server<span class="punctuation">,</span> enableBookmarking <span class="operator">=</span> <span class="string">&quot;url&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>您可以在<a href="https://hadley.shinyapps.io/ms-bookmark-url">https://hadley.shinyapps.io/ms-bookmark-url</a>尝试一下。如果您在应用程序中操作并书签了一些有趣的状态，您会发现生成的URL看起来像这样：</p><ul><li><p><a href="https://hadley.shinyapps.io/ms-bookmark-url/?_inputs_&damping=1&delta=1&length=100&omega=1">https://hadley.shinyapps.io/ms-bookmark-url/?_inputs_&amp;damping=1&amp;delta=1&amp;length=100&amp;omega=1</a></p></li><li><p><a href="https://hadley.shinyapps.io/ms-bookmark-url/?_inputs_&damping=0.966&delta=1.25&length=100&omega=-0.54">https://hadley.shinyapps.io/ms-bookmark-url/?_inputs_&amp;damping=0.966&amp;delta=1.25&amp;length=100&amp;omega=-0.54</a></p></li><li><p><a href="https://hadley.shinyapps.io/ms-bookmark-url/?_inputs_&damping=0.997&delta=1.37&length=500&omega=-0.9">https://hadley.shinyapps.io/ms-bookmark-url/?_inputs_&amp;damping=0.997&amp;delta=1.37&amp;length=500&amp;omega=-0.9</a></p></li></ul><p>为了理解发生了什么，让我们以第一个URL为例，将其分解成几个部分：</p><ul><li><p><code>http://</code> 是与应用程序通信时使用的“协议”。这始终是<code>http</code>或<code>https</code>。</p></li><li><p><code>hadley.shinyapps.io/ms-bookmark-url</code> 是应用程序的位置。</p></li></ul><p>问号<code>?</code>之后的所有内容都是“参数”。每个参数之间用<code>&amp;</code>分隔，如果将其分解，您可以看到应用程序中每个输入的值：</p><ul><li><p>damping&#x3D;1</p></li><li><p>delta&#x3D;1</p></li><li><p>length&#x3D;100</p></li><li><p>omega&#x3D;1</p></li></ul><p>因此，“生成书签”意味着在URL的参数中记录输入的当前值。如果您在本地进行操作，URL看起来会略有不同：</p><ul><li><p><a href="http://127.0.0.1:4087/?_inputs_&damping=1&delta=1&length=100&omega=1">http://127.0.0.1:4087/?_inputs_&amp;damping=1&amp;delta=1&amp;length=100&amp;omega=1</a></p></li><li><p><a href="http://127.0.0.1:4087/?_inputs_&damping=0.966&delta=1.25&length=100&omega=-0.54">http://127.0.0.1:4087/?_inputs_&amp;damping=0.966&amp;delta=1.25&amp;length=100&amp;omega=-0.54</a></p></li><li><p><a href="http://127.0.0.1:4087/?_inputs_&damping=0.997&delta=1.37&length=500&omega=-0.9">http://127.0.0.1:4087/?_inputs_&amp;damping=0.997&amp;delta=1.37&amp;length=500&amp;omega=-0.9</a></p></li></ul><p>除了将<code>hadley.shinyapps.io/ms-bookmark-url</code>替换为类似<code>127.0.0.1:4087</code>的内容外，大多数部分都是相同的。<code>127.0.0.1</code>是一个特殊地址，始终指向您自己的计算机，而<code>4087</code>是一个随机分配的端口。通常，不同的应用程序会获得不同的路径或IP地址，但如果您在自己的计算机上托管多个应用程序，则无法做到这一点。</p><h3 id="11-1-1-更新URL"><a href="#11-1-1-更新URL" class="headerlink" title="11.1.1 更新URL"></a>11.1.1 更新URL</h3><p>除了提供一个明确的按钮外，另一种选择是自动更新浏览器中的URL。这允许用户在其浏览器中使用用户书签命令，或者从地址栏复制和粘贴URL。</p><p>自动更新URL需要在服务器函数中编写一些模板代码：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically bookmark every time an input changes</span></span><br><span class="line">observe<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">  reactiveValuesToList<span class="punctuation">(</span>input<span class="punctuation">)</span></span><br><span class="line">  session<span class="operator">$</span>doBookmark<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># Update the query string</span></span><br><span class="line">onBookmarked<span class="punctuation">(</span>updateQueryString<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这给我们提供了一个更新后的服务器函数，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  t <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span>seq<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span> input<span class="operator">$</span><span class="built_in">length</span><span class="punctuation">,</span> <span class="built_in">length</span> <span class="operator">=</span> input<span class="operator">$</span><span class="built_in">length</span> <span class="operator">*</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  x <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="built_in">sin</span><span class="punctuation">(</span>input<span class="operator">$</span>omega <span class="operator">*</span> t<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> input<span class="operator">$</span>delta<span class="punctuation">)</span> <span class="operator">*</span> input<span class="operator">$</span>damping <span class="operator">^</span> t<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  y <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="built_in">sin</span><span class="punctuation">(</span>t<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">*</span> input<span class="operator">$</span>damping <span class="operator">^</span> t<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  output<span class="operator">$</span>fig <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    plot<span class="punctuation">(</span>x<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> y<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> axes <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> xlab <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> ylab <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> type <span class="operator">=</span> <span class="string">&quot;l&quot;</span><span class="punctuation">,</span> lwd <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  observe<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    reactiveValuesToList<span class="punctuation">(</span>input<span class="punctuation">)</span></span><br><span class="line">    session<span class="operator">$</span>doBookmark<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  onBookmarked<span class="punctuation">(</span>updateQueryString<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shinyApp<span class="punctuation">(</span>ui<span class="punctuation">,</span> server<span class="punctuation">,</span> enableBookmarking <span class="operator">=</span> <span class="string">&quot;url&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这会产生<a href="https://hadley.shinyapps.io/ms-bookmark-auto">https://hadley.shinyapps.io/ms-bookmark-auto</a>——由于URL现在会自动更新，您可以从用户界面中删除书签按钮。</p><h3 id="11-1-2-存储更丰富的状态"><a href="#11-1-2-存储更丰富的状态" class="headerlink" title="11.1.2 存储更丰富的状态"></a>11.1.2 存储更丰富的状态</h3><p>到目前为止，我们使用了<code>enableBookmarking = &quot;url&quot;</code>，它直接在URL中存储状态。这是一个很好的起点，因为它非常简单，可以在您可能部署Shiny应用的任何地方工作。然而，可以想象，如果您有大量的输入，URL会变得非常长，而且显然无法捕获上传的文件。</p><p>对于这些情况，您可能想要使用<code>enableBookmarking = &quot;server&quot;</code>，它将状态保存到服务器上的<code>.rds</code>文件。这总是生成一个简短的、不透明的URL，但需要在服务器上额外存储。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shinyApp<span class="punctuation">(</span>ui<span class="punctuation">,</span> server<span class="punctuation">,</span> enableBookmarking <span class="operator">=</span> <span class="string">&quot;server&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>目前，shinyapps.io尚不支持服务器端书签，因此您需要在本地尝试。如果您这样做，您会看到书签按钮生成类似以下的URL：</p><ul><li><p><a href="http://127.0.0.1:4087/?_state_id_=0d645f1b28f05c97">http://127.0.0.1:4087/?_state_id_=0d645f1b28f05c97</a></p></li><li><p><a href="http://127.0.0.1:4087/?_state_id_=87b56383d8a1062c">http://127.0.0.1:4087/?_state_id_=87b56383d8a1062c</a></p></li><li><p><a href="http://127.0.0.1:4087/?_state_id_=c8b0291ba622b69c">http://127.0.0.1:4087/?_state_id_=c8b0291ba622b69c</a></p></li></ul><p>这些URL与您工作目录中匹配的目录配对：</p><ul><li><p>shiny_bookmarks&#x2F;0d645f1b28f05c97</p></li><li><p>shiny_bookmarks&#x2F;87b56383d8a1062c</p></li><li><p>shiny_bookmarks&#x2F;c8b0291ba622b69c</p></li></ul><p>服务器端书签的主要缺点是它需要在服务器上保存文件，而且不清楚这些文件需要保留多长时间。如果您正在书签化复杂的状态并且从未删除这些文件，那么随着时间的推移，您的应用将占用越来越多的磁盘空间。如果您删除文件，一些旧书签将停止工作。</p><h2 id="11-2-书签挑战"><a href="#11-2-书签挑战" class="headerlink" title="11.2 书签挑战"></a>11.2 书签挑战</h2><p>自动书签功能依赖于响应式图表。它使用保存的值初始化输入，然后重新播放所有的响应式表达式和输出，只要您的应用的响应式图表简单明了，就会产生与您看到的相同的应用。本节简要介绍了一些需要特别注意的情况：</p><ul><li><p>如果您的应用使用了随机数，即使所有输入都相同，结果也可能不同。如果确保每次生成相同的数字非常重要，您需要思考如何使随机过程可重复。最简单的方法是使用<a href="https://rdrr.io/pkg/shiny/man/repeatable.html">repeatable()</a>函数；有关更多详细信息，请参阅相关文档。</p></li><li><p>如果您有选项卡，并希望书签和恢复活动选项卡，请确保在调用<a href="https://rdrr.io/pkg/shiny/man/tabsetPanel.html">tabsetPanel()</a>时提供一个id。</p></li><li><p>如果有不应被书签记录的输入，例如它们包含不应共享的个人信息，请在服务器函数的某个位置调用<a href="https://rdrr.io/pkg/shiny/man/setBookmarkExclude.html">setBookmarkExclude()</a>。例如，<code>setBookmarkExclude(c(&quot;secret1&quot;, &quot;secret2&quot;))</code>将确保<code>secret1</code>和<code>secret2</code>输入不会被书签记录。</p></li><li><p>如果您在自己的<a href="https://rdrr.io/pkg/shiny/man/reactiveValues.html">reactiveValues()</a>对象中手动管理响应式状态（我们将在第<code>16</code>章中讨论），则需要使用<a href="https://rdrr.io/pkg/shiny/man/onBookmark.html">onBookmark()</a>和<a href="https://rdrr.io/pkg/shiny/man/onBookmark.html">onRestore()</a>回调来手动保存和加载额外的状态。有关更多详细信息，请参阅<a href="https://shiny.rstudio.com/articles/advanced-bookmarking.html">高级书签</a>。</p></li></ul><h2 id="11-3-练习"><a href="#11-3-练习" class="headerlink" title="11.3 练习"></a>11.3 练习</h2><ol><li><p>为<a href="https://ambient.data-imaginist.com/reference/noise_simplex.html">ambient::noise_simplex()</a>的结果生成可视化应用。您的应用应允许用户控制频率、分形、间隙和增益，并且应支持书签功能。如何确保从书签重新加载时图像看起来完全相同？（考虑seed参数的含义）。</p></li><li><p>创建一个简单的应用，允许您上传CSV文件，并为其添加书签。上传几个文件，然后查看<code>shiny_bookmarks</code>。这些文件是如何与书签对应的？（提示：您可以使用<a href="https://rdrr.io/r/base/readRDS.html">readRDS()</a>来查看Shiny生成的缓存文件的内容）。</p></li></ol><h2 id="11-4-总结"><a href="#11-4-总结" class="headerlink" title="11.4 总结"></a>11.4 总结</h2><p>本章介绍了如何为您的应用程序启用书签功能。书签功能对您的用户来说是一个很好的特性，因为它允许他们轻松地将自己的工作与他人分享。接下来，我们将讨论如何在Shiny应用程序中使用整洁评估。整洁评估是许多tidyverse函数的一个特性，如果您希望允许用户在（例如）dplyr管道或ggplot2图形中更改变量，那么您需要了解这个特性。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——10-动态UI</title>
      <link href="/post/e6be.html"/>
      <url>/post/e6be.html</url>
      
        <content type="html"><![CDATA[<h1 id="10-动态UI"><a href="#10-动态UI" class="headerlink" title="10 动态UI"></a>10 动态UI</h1><p>到目前为止，我们已经看到了UI和server函数之间的清晰分离：用户界面在应用程序启动时静态定义，因此它无法对应用程序中发生的任何事情做出响应。在本章中，您将学习如何创建动态用户界面，通过server函数中运行的代码来更改UI。</p><p>创建动态用户界面有三个关键技术：</p><ul><li>使用<code>update</code>系列的函数来修改输入控件的参数。</li><li>使用<a href="https://rdrr.io/pkg/shiny/man/tabsetPanel.html">tabsetPanel()</a>来有条件地显示和隐藏用户界面的部分。</li><li>使用<a href="https://rdrr.io/pkg/shiny/man/htmlOutput.html">uiOutput()</a>和<a href="https://rdrr.io/pkg/shiny/man/renderUI.html">renderUI()</a>通过代码生成用户界面的选定部分。</li></ul><p>这三个工具为您提供了相当强大的功能，通过修改输入和输出来响应用户。我将演示一些您可以应用它们的更有用的方式，但最终您的创造力是唯一的限制。同时，这些工具可能会使您的应用程序变得更难理解，因此请谨慎使用，并始终努力使用解决您问题的最简单技术。</p><p>接下来是R代码库的加载部分：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>dplyr<span class="punctuation">,</span> warn.conflicts <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="10-1-更新输入"><a href="#10-1-更新输入" class="headerlink" title="10.1 更新输入"></a>10.1 更新输入</h2><p>我们将从一个简单的技术开始，该技术允许您在创建后修改输入：<code>update</code>系列的函数。每个输入控件，例如<code>textInput()</code>，都配有一个更新函数，例如<code>updateTextInput()</code>，允许您在创建后修改该控件。</p><p>请考虑以下代码示例，结果如<code>图10.1</code>所示。该应用程序有两个输入控件，它们控制另一个输入控件（滑块）的范围（最小值和最大值）。关键的想法是使用<a href="https://rdrr.io/pkg/shiny/man/observeEvent.html">observeEvent()</a>来触发<a href="https://rdrr.io/pkg/shiny/man/updateSliderInput.html">updateSliderInput()</a>，每当最小或最大输入发生变化时。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;min&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Minimum&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;max&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Maximum&quot;</span><span class="punctuation">,</span> <span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    updateSliderInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span>  </span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span><span class="built_in">max</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    updateSliderInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> input<span class="operator">$</span><span class="built_in">max</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，<code>observeEvent()</code>监视<code>min</code>和<code>max</code>输入的变化，并在它们变化时调用<code>updateSliderInput()</code>来更新滑块的最小和最大值。<code>renderText()</code>用于在<code>textOutput()</code>控件中显示当前范围。</p><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/45d9b7c2dabd64a4597e370d2b84c0dc01cf8a2f/2dc99/demos/action-dynamic/update-basics-onload.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/45d9b7c2dabd64a4597e370d2b84c0dc01cf8a2f/2dc99/demos/action-dynamic/update-basics-onload.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/e5a1387f21bee28260731f6fb84991e188af5ec2/8cfbf/demos/action-dynamic/update-basics-max-increase.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/e5a1387f21bee28260731f6fb84991e188af5ec2/8cfbf/demos/action-dynamic/update-basics-max-increase.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/fcca996a780ec2cbaf306e764a577649e6fdca4b/5ecfc/demos/action-dynamic/update-basics-min-decrease.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/fcca996a780ec2cbaf306e764a577649e6fdca4b/5ecfc/demos/action-dynamic/update-basics-min-decrease.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图10.1 应用程序加载时的界面（左），增加最大值后的界面（中），然后减少最小值后的界面（右）。请访问 <a href="https://hadley.shinyapps.io/ms-update-basics">https://hadley.shinyapps.io/ms-update-basics</a> 查看实时效果</td></tr></table><p>更新函数与其他Shiny函数有些不同：它们都接受输入的名称（作为字符串）作为<code>inputId</code>参数。其余的参数对应于输入构造函数中可以在创建后修改的参数。</p><p>为了帮助您掌握更新函数的使用，我将展示几个简单的示例，然后我们将深入探讨使用分层选择框的复杂案例研究，最后讨论循环引用的问题。</p><h3 id="10-1-1-简单应用"><a href="#10-1-1-简单应用" class="headerlink" title="10.1.1 简单应用"></a>10.1.1 简单应用</h3><p>更新函数最简单的用法是为用户提供一些小的便利。例如，您可能希望轻松地将参数重置为其初始值。以下代码片段展示了如何结合使用<a href="https://rdrr.io/pkg/shiny/man/actionButton.html">actionButton()</a>、<a href="https://rdrr.io/pkg/shiny/man/observeEvent.html">observeEvent()</a>和<a href="https://rdrr.io/pkg/shiny/man/updateSliderInput.html">updateSliderInput()</a>，结果如<code>图10.2</code>所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;x1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;x1&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="operator">-</span><span class="number">10</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;x2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;x2&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="operator">-</span><span class="number">10</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;x3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;x3&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="operator">-</span><span class="number">10</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;reset&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Reset&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>reset<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    updateSliderInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;x1&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span></span><br><span class="line">    updateSliderInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;x2&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span></span><br><span class="line">    updateSliderInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;x3&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/cc473/demos/action-dynamic/update-reset-onload.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/cc473/demos/action-dynamic/update-reset-onload.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/b5061a18295fbec4f08dd399e32ce252d2ad6eb9/230d4/demos/action-dynamic/update-reset-set.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/b5061a18295fbec4f08dd399e32ce252d2ad6eb9/230d4/demos/action-dynamic/update-reset-set.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/8c5f7/demos/action-dynamic/update-reset-reset.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/b319bdb38cce5a357ba4131d17fec8b3a8bd34fd/8c5f7/demos/action-dynamic/update-reset-reset.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图10.2 应用加载时（左图），拖动一些滑块后（中图），然后点击重置（右图）。在线查看地址：<a href="https://hadley.shinyapps.io/ms-update-reset">https://hadley.shinyapps.io/ms-update-reset</a></td></tr></table><p>一个类似的应用是调整动作按钮的文本，以便你确切知道它将执行什么操作。图<code>10.3</code>展示了下面代码的结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Simulations&quot;</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;simulate&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Simulate&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>n<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    label <span class="operator">&lt;-</span> paste0<span class="punctuation">(</span><span class="string">&quot;Simulate &quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>n<span class="punctuation">,</span> <span class="string">&quot; times&quot;</span><span class="punctuation">)</span></span><br><span class="line">    updateActionButton<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;simulate&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> label<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/f6604343f39fe08be631b06ddac37b2c00d73ea5/f636b/demos/action-dynamic/update-button-onload.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/f6604343f39fe08be631b06ddac37b2c00d73ea5/f636b/demos/action-dynamic/update-button-onload.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/d65b9991e6b08e57700bf2cc8f5fafafe59ebc4e/03e2a/demos/action-dynamic/update-button-set1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/d65b9991e6b08e57700bf2cc8f5fafafe59ebc4e/03e2a/demos/action-dynamic/update-button-set1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/a2a75084db3d975c48dc56ef70eebd2906eae356/a924e/demos/action-dynamic/update-button-set100.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/a2a75084db3d975c48dc56ef70eebd2906eae356/a924e/demos/action-dynamic/update-button-set100.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图 10.3 应用加载时（左），将模拟次数设置为 1（中），再将模拟次数设置为 100（右）。在线查看地址：<a href="https://hadley.shinyapps.io/ms-update-button">https://hadley.shinyapps.io/ms-update-button</a></td></tr></table><p>有很多方法可以用这种方式使用更新函数；在开发复杂应用时，要注意找出向用户提供更多信息的方法。一个特别重要的应用是通过逐步筛选来简化从一长串可能选项中进行选择的过程。这通常是“分层选择框”的问题。</p><h3 id="10-1-2-分层选择框"><a href="#10-1-2-分层选择框" class="headerlink" title="10.1.2 分层选择框"></a>10.1.2 分层选择框</h3><p>更新函数的一个更复杂但特别有用的应用是允许在多个类别之间进行交互式深入探索。我将用一个来自 <a href="https://www.kaggle.com/kyanyoga/sample-sales-data">https://www.kaggle.com/kyanyoga/sample-sales-data</a> 的销售仪表板的虚拟数据来说明它们的使用方法。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">sales <span class="operator">&lt;-</span> vroom<span class="operator">::</span>vroom<span class="punctuation">(</span><span class="string">&quot;sales-dashboard/sales_data_sample.csv&quot;</span><span class="punctuation">,</span> col_types <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> na <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line">sales <span class="operator">%&gt;%</span> </span><br><span class="line">  select<span class="punctuation">(</span>TERRITORY<span class="punctuation">,</span> CUSTOMERNAME<span class="punctuation">,</span> ORDERNUMBER<span class="punctuation">,</span> everything<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">  arrange<span class="punctuation">(</span>ORDERNUMBER<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 2,823 × 25</span></span><br><span class="line"><span class="comment">#&gt;    TERRITORY CUSTOM…¹ ORDER…² QUANT…³ PRICE…⁴ ORDER…⁵ SALES ORDER…⁶ STATUS QTR_ID</span></span><br><span class="line"><span class="comment">#&gt;    &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt;  1 NA        Online …   10100      30   100         3 5151  1/6/20… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt;  2 NA        Online …   10100      50    67.8       2 3390  1/6/20… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt;  3 NA        Online …   10100      22    86.5       4 1903. 1/6/20… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt;  4 NA        Online …   10100      49    34.5       1 1689. 1/6/20… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt;  5 EMEA      Blauer …   10101      25   100         4 3782  1/9/20… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt;  6 EMEA      Blauer …   10101      26   100         1 3773. 1/9/20… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt;  7 EMEA      Blauer …   10101      45    31.2       3 1404  1/9/20… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt;  8 EMEA      Blauer …   10101      46    53.8       2 2473. 1/9/20… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt;  9 NA        Vitachr…   10102      39   100         2 4808. 1/10/2… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt; 10 NA        Vitachr…   10102      41    50.1       1 2056. 1/10/2… Shipp…      1</span></span><br><span class="line"><span class="comment">#&gt; # … with 2,813 more rows, 15 more variables: MONTH_ID &lt;dbl&gt;, YEAR_ID &lt;dbl&gt;,</span></span><br><span class="line"><span class="comment">#&gt; #   PRODUCTLINE &lt;chr&gt;, MSRP &lt;dbl&gt;, PRODUCTCODE &lt;chr&gt;, PHONE &lt;chr&gt;,</span></span><br><span class="line"><span class="comment">#&gt; #   ADDRESSLINE1 &lt;chr&gt;, ADDRESSLINE2 &lt;chr&gt;, CITY &lt;chr&gt;, STATE &lt;chr&gt;,</span></span><br><span class="line"><span class="comment">#&gt; #   POSTALCODE &lt;chr&gt;, COUNTRY &lt;chr&gt;, CONTACTLASTNAME &lt;chr&gt;,</span></span><br><span class="line"><span class="comment">#&gt; #   CONTACTFIRSTNAME &lt;chr&gt;, DEALSIZE &lt;chr&gt;, and abbreviated variable names</span></span><br><span class="line"><span class="comment">#&gt; #   ¹​CUSTOMERNAME, ²​ORDERNUMBER, ³​QUANTITYORDERED, ⁴​PRICEEACH, ⁵​ORDERLINENUMBER,</span></span><br><span class="line"><span class="comment">#&gt; #   ⁶​ORDERDATE</span></span><br></pre></td></tr></table></figure><p>在这个演示中，我将重点关注数据中的自然层次结构：</p><ul><li><p>每个区域包含客户。</p></li><li><p>每个客户有多个订单。</p></li><li><p>每个订单包含行。</p></li></ul><p>我想创建一个用户界面，你可以：</p><ul><li><p>选择一个区域来查看所有客户。</p></li><li><p>选择一个客户来查看所有订单。</p></li><li><p>选择一个订单来查看底层行。</p></li></ul><p>用户界面的核心是简单的：我将创建三个选择框和一个输出表格。<code>customername</code>和<code>ordernumber</code>选择框的选项将动态生成，因此我将设置<code>choices = NULL</code>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;territory&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Territory&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> unique<span class="punctuation">(</span>sales<span class="operator">$</span>TERRITORY<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;customername&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Customer&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;ordernumber&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Order number&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>在服务器函数中，我自上而下地工作：</p><ol><li><p>我创建了一个响应式对象 <code>territory()</code>，它包含与所选区域匹配的 <code>sales</code> 中的行。</p></li><li><p>每当 <code>territory()</code> 发生变化时，我都会更新 <code>input$customername</code> 选择框中的选项列表。</p></li><li><p>我创建了另一个响应式对象 <code>customer()</code>，它包含与所选客户匹配的 <code>territory()</code> 中的行。</p></li><li><p>每当 <code>customer()</code> 发生变化时，我都会更新 <code>input$ordernumber</code> 选择框中的选项列表。</p></li><li><p>我在 <code>output$data</code> 中显示所选订单。</p></li></ol><p>你可以看到下面的组织结构：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  territory <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    filter<span class="punctuation">(</span>sales<span class="punctuation">,</span> TERRITORY <span class="operator">==</span> input<span class="operator">$</span>territory<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>territory<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    choices <span class="operator">&lt;-</span> unique<span class="punctuation">(</span>territory<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">$</span>CUSTOMERNAME<span class="punctuation">)</span></span><br><span class="line">    updateSelectInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;customername&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> choices<span class="punctuation">)</span> </span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  customer <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>customername<span class="punctuation">)</span></span><br><span class="line">    filter<span class="punctuation">(</span>territory<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> CUSTOMERNAME <span class="operator">==</span> input<span class="operator">$</span>customername<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>customer<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    choices <span class="operator">&lt;-</span> unique<span class="punctuation">(</span>customer<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">$</span>ORDERNUMBER<span class="punctuation">)</span></span><br><span class="line">    updateSelectInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;ordernumber&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> choices<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>ordernumber<span class="punctuation">)</span></span><br><span class="line">    customer<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">      filter<span class="punctuation">(</span>ORDERNUMBER <span class="operator">==</span> input<span class="operator">$</span>ordernumber<span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">      select<span class="punctuation">(</span>QUANTITYORDERED<span class="punctuation">,</span> PRICEEACH<span class="punctuation">,</span> PRODUCTCODE<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/fe6c81ed4946e87b044fc7cc91b3bb05e4954043/7d64e/demos/action-dynamic/update-nested-territory.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/fe6c81ed4946e87b044fc7cc91b3bb05e4954043/7d64e/demos/action-dynamic/update-nested-territory.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/d3a0d284501015f737373cc8e6f14b27a49de373/0e06a/demos/action-dynamic/update-nested-customername.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/d3a0d284501015f737373cc8e6f14b27a49de373/0e06a/demos/action-dynamic/update-nested-customername.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/b0ae629ca1909719117abfce2d890db7bf379412/37026/demos/action-dynamic/update-nested-orders.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/b0ae629ca1909719117abfce2d890db7bf379412/37026/demos/action-dynamic/update-nested-orders.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图 10.4 我选择“EMEA”（左），然后选择“Lyon Souveniers”（中），然后（右）查看订单。在线查看地址：<a href="https://hadley.shinyapps.io/ms-update-nested">https://hadley.shinyapps.io/ms-update-nested</a></td></tr></table><p>你可以在 <a href="https://hadley.shinyapps.io/ms-update-nested">https://hadley.shinyapps.io/ms-update-nested</a> 尝试这个简单的示例，或者在 <a href="https://github.com/hadley/mastering-shiny/tree/master/sales-dashboard">https://github.com/hadley/mastering-shiny/tree/master/sales-dashboard</a> 查看一个更加完善的应用示例。</p><h3 id="10-1-3-冻结响应式输入"><a href="#10-1-3-冻结响应式输入" class="headerlink" title="10.1.3 冻结响应式输入"></a>10.1.3 冻结响应式输入</h3><p>有时，这种分层选择会短暂地创建一个无效的输入集，导致出现不想要的输出闪烁。例如，考虑这个简单的应用，你首先选择一个数据集，然后选择要汇总的变量：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;dataset&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Choose a dataset&quot;</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;pressure&quot;</span><span class="punctuation">,</span> <span class="string">&quot;cars&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;column&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Choose column&quot;</span><span class="punctuation">,</span> character<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  verbatimTextOutput<span class="punctuation">(</span><span class="string">&quot;summary&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  dataset <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span>get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    updateSelectInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;column&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>dataset<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>summary <span class="operator">&lt;-</span> renderPrint<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    summary<span class="punctuation">(</span>dataset<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">[[</span>input<span class="operator">$</span>column<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>如果你在 <a href="https://hadley.shinyapps.io/ms-freeze">https://hadley.shinyapps.io/ms-freeze</a> 上尝试这个实时应用，你会注意到当你切换数据集时，摘要输出会短暂地闪烁。这是因为 <a href="https://rdrr.io/pkg/shiny/man/updateSelectInput.html">updateSelectInput()</a> 只有在所有输出和观察者都运行之后才会生效，因此会暂时出现一个状态，即你拥有数据集 B 和来自数据集 A 的变量，因此输出会包含 <code>summary(NULL)</code>。</p><p>你可以通过“freezing”输入值来解决这个问题，使用 <a href="https://rdrr.io/pkg/shiny/man/freezeReactiveValue.html">freezeReactiveValue()</a>。这确保了任何使用输入的响应式对象或输出都不会更新，直到下一次完整的失效周期。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  dataset <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span>get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    freezeReactiveValue<span class="punctuation">(</span>input<span class="punctuation">,</span> <span class="string">&quot;column&quot;</span><span class="punctuation">)</span></span><br><span class="line">    updateSelectInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;column&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">names</span><span class="punctuation">(</span>dataset<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>summary <span class="operator">&lt;-</span> renderPrint<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    summary<span class="punctuation">(</span>dataset<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">[[</span>input<span class="operator">$</span>column<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>请注意，你不需要“thaw”输入值；当 Shiny 检测到会话和服务器再次同步时，这会自动发生。</p><p>你可能会好奇什么时候应该使用 <a href="https://rdrr.io/pkg/shiny/man/freezeReactiveValue.html">freezeReactiveValue()</a>：实际上，当你动态更改输入值时，使用它总是一个好习惯。实际的修改需要一些时间才能流向浏览器，然后再返回给 Shiny，而在此期间，任何对该值的读取都可能是浪费的，在最坏的情况下可能导致错误。使用 <code>freezeReactiveValue()</code> 告诉所有下游计算，输入值是陈旧的，它们应该保存它们的努力，直到它变得有用。</p><h3 id="10-1-4-循环引用"><a href="#10-1-4-循环引用" class="headerlink" title="10.1.4 循环引用"></a>10.1.4 循环引用</h3><p>如果你想使用 update 函数来改变输入的当前<code>value</code>，那么我们需要讨论一个重要的问题。从 Shiny 的角度来看，使用 update 函数来修改值与用户通过点击或输入来修改值没有区别。这意味着 update 函数可以像人类一样触发响应式更新。这意味着你现在已经超出了纯响应式编程的范围，你需要开始担心循环引用和无限循环的问题。</p><p>例如，看看下面这个简单的应用。它包含一个输入控件和一个观察者，后者将其值加一并更新。每次运行 <a href="https://rdrr.io/pkg/shiny/man/updateNumericInput.html">updateNumericInput()</a> 时，它都会更改 <code>input$n</code>，导致 <code>updateNumericInput()</code> 再次运行，因此应用陷入无限循环，持续增加 <code>input$n</code> 的值。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>n<span class="punctuation">,</span></span><br><span class="line">    updateNumericInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> input<span class="operator">$</span>n <span class="operator">+</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>虽然你不太可能在自己的应用中创建这种显而易见的问题，但如果你在更新相互依赖的多个控件时，可能会遇到类似的问题，如下一个例子所示。</p><h3 id="10-1-5-相互关联的输入"><a href="#10-1-5-相互关联的输入" class="headerlink" title="10.1.5 相互关联的输入"></a>10.1.5 相互关联的输入</h3><p>在应用中出现循环引用很容易发生在有多个“事实来源”时。例如，假设你想创建一个温度转换应用，用户既可以输入摄氏温度也可以输入华氏温度：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;temp_c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Celsius&quot;</span><span class="punctuation">,</span> <span class="literal">NA</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;temp_f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Fahrenheit&quot;</span><span class="punctuation">,</span> <span class="literal">NA</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>temp_f<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="built_in">c</span> <span class="operator">&lt;-</span> <span class="built_in">round</span><span class="punctuation">(</span><span class="punctuation">(</span>input<span class="operator">$</span>temp_f <span class="operator">-</span> <span class="number">32</span><span class="punctuation">)</span> <span class="operator">*</span> <span class="number">5</span> <span class="operator">/</span> <span class="number">9</span><span class="punctuation">)</span></span><br><span class="line">    updateNumericInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;temp_c&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>temp_c<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    f <span class="operator">&lt;-</span> <span class="built_in">round</span><span class="punctuation">(</span><span class="punctuation">(</span>input<span class="operator">$</span>temp_c <span class="operator">*</span> <span class="number">9</span> <span class="operator">/</span> <span class="number">5</span><span class="punctuation">)</span> <span class="operator">+</span> <span class="number">32</span><span class="punctuation">)</span></span><br><span class="line">    updateNumericInput<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;temp_f&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> f<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>如果你尝试这个应用，<a href="https://hadley.shinyapps.io/ms-temperature">https://hadley.shinyapps.io/ms-temperature</a>，你会发现它大部分时候可以正常工作，但你可能也会注意到它有时会触发多次更改。例如：</p><ul><li><p>将温度设为120华氏度，然后点击向下的箭头。</p></li><li><p>华氏度变为119，摄氏度更新为48。</p></li><li><p>48摄氏度转换为118华氏度，因此华氏度再次变为118。</p></li><li><p>幸运的是，118华氏度仍然是48摄氏度，所以更新在那里停止了。</p></li></ul><p>这个问题没有解决办法，因为你在应用中有一个概念（温度），但有两个表达式（摄氏度和华氏度）。在这里我们很幸运，因为循环迅速收敛到一个同时满足两个约束的值。一般来说，除非你愿意非常仔细地分析你创建的底层动态系统的收敛性质，否则最好避免这种情况。</p><h3 id="10-1-6-练习"><a href="#10-1-6-练习" class="headerlink" title="10.1.6 练习"></a>10.1.6 练习</h3><ol><li><p>请在下面的用户界面中添加一个服务器函数，以更新<code>input$date</code>，这样你只能选择<code>input$year</code>中的日期。</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;year&quot;</span><span class="punctuation">,</span> <span class="string">&quot;year&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">2020</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  dateInput<span class="punctuation">(</span><span class="string">&quot;date&quot;</span><span class="punctuation">,</span> <span class="string">&quot;date&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>请在下面的用户界面中添加一个服务器函数，根据<code>input$state</code>更新<code>input$county</code>的选择。作为一个额外的挑战，请也将路易斯安那州的标签从“County”改为“Parish”，阿拉斯加州的标签改为“Borough”。</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>openintro<span class="punctuation">,</span> warn.conflicts <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Loading required package: airports</span></span><br><span class="line"><span class="comment">#&gt; Loading required package: cherryblossom</span></span><br><span class="line"><span class="comment">#&gt; Loading required package: usdata</span></span><br><span class="line"><span class="comment">#&gt; Registered S3 methods overwritten by &#x27;readr&#x27;:</span></span><br><span class="line"><span class="comment">#&gt;   method                    from </span></span><br><span class="line"><span class="comment">#&gt;   as.data.frame.spec_tbl_df vroom</span></span><br><span class="line"><span class="comment">#&gt;   as_tibble.spec_tbl_df     vroom</span></span><br><span class="line"><span class="comment">#&gt;   format.col_spec           vroom</span></span><br><span class="line"><span class="comment">#&gt;   print.col_spec            vroom</span></span><br><span class="line"><span class="comment">#&gt;   print.collector           vroom</span></span><br><span class="line"><span class="comment">#&gt;   print.date_names          vroom</span></span><br><span class="line"><span class="comment">#&gt;   print.locale              vroom</span></span><br><span class="line"><span class="comment">#&gt;   str.col_spec              vroom</span></span><br><span class="line">states <span class="operator">&lt;-</span> unique<span class="punctuation">(</span>county<span class="operator">$</span>state<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;state&quot;</span><span class="punctuation">,</span> <span class="string">&quot;State&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> states<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;county&quot;</span><span class="punctuation">,</span> <span class="string">&quot;County&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>使用服务器函数完善下面的用户界面，根据<code>input$continent</code>更新<code>input$country</code>的选择。使用<code>output$data</code>显示所有匹配的行。</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>gapminder<span class="punctuation">)</span></span><br><span class="line">continents <span class="operator">&lt;-</span> unique<span class="punctuation">(</span>gapminder<span class="operator">$</span>continent<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;continent&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Continent&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> continents<span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;country&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Country&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>扩展之前的应用，以便您还可以选择选择所有大洲，从而查看所有国家。您需要将<code>“(All)”</code>添加到选择列表中，然后在过滤时特殊处理它。</p></li><li><p>在<a href="https://community.rstudio.com/t/29307">https://community.rstudio.com/t/29307</a>?上描述的问题的核心是什么？</p></li></ol><h2 id="10-2-动态可见性"><a href="#10-2-动态可见性" class="headerlink" title="10.2 动态可见性"></a>10.2 动态可见性</h2><p>复杂性的下一步是有选择地显示和隐藏用户界面中的部分。如果您了解一些JavaScript和CSS，那么可以使用更复杂的方法，但有一种有用的技术不需要任何额外的知识：使用选项卡集（如在6.3.1节中介绍的）隐藏可选的用户界面。这是一种巧妙的技巧，允许您根据需要显示和隐藏用户界面，而无需从头开始重新生成它（您将在下一节中学到）。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      selectInput<span class="punctuation">(</span><span class="string">&quot;controller&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Show&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> paste0<span class="punctuation">(</span><span class="string">&quot;panel&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="operator">:</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      tabsetPanel<span class="punctuation">(</span></span><br><span class="line">        id <span class="operator">=</span> <span class="string">&quot;switcher&quot;</span><span class="punctuation">,</span></span><br><span class="line">        type <span class="operator">=</span> <span class="string">&quot;hidden&quot;</span><span class="punctuation">,</span></span><br><span class="line">        tabPanelBody<span class="punctuation">(</span><span class="string">&quot;panel1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Panel 1 content&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        tabPanelBody<span class="punctuation">(</span><span class="string">&quot;panel2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Panel 2 content&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        tabPanelBody<span class="punctuation">(</span><span class="string">&quot;panel3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Panel 3 content&quot;</span><span class="punctuation">)</span></span><br><span class="line">      <span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>controller<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    updateTabsetPanel<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;switcher&quot;</span><span class="punctuation">,</span> selected <span class="operator">=</span> input<span class="operator">$</span>controller<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/177d392d2358ae933be3c5ae9a78b2f076d8cce0/f34ae/demos/action-dynamic/dynamic-panels.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/177d392d2358ae933be3c5ae9a78b2f076d8cce0/f34ae/demos/action-dynamic/dynamic-panels.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/a4ab38457f2b2194dfd2a5e1792f1d38fff0b6dc/90b0c/demos/action-dynamic/dynamic-panels-panel2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/a4ab38457f2b2194dfd2a5e1792f1d38fff0b6dc/90b0c/demos/action-dynamic/dynamic-panels-panel2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/7dc90302d452a421cc68547265384f212c58db8f/0dc9c/demos/action-dynamic/dynamic-panels-panel3.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/7dc90302d452a421cc68547265384f212c58db8f/0dc9c/demos/action-dynamic/dynamic-panels-panel3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图10.5 选择panel1（左），然后选择panel2（中），最后选择panel3（右）。查看实时效果请访问 <a href="https://hadley.shinyapps.io/ms-dynamic-panels">https://hadley.shinyapps.io/ms-dynamic-panels</a></td></tr></table><p>这里主要有两个想法：</p><ul><li><p>使用带有隐藏选项卡的选项卡集面板。</p></li><li><p>使用<a href="https://rdrr.io/pkg/shiny/man/updateTabsetPanel.html">updateTabsetPanel()</a>从服务器切换选项卡。</p></li></ul><p>这是一个简单的想法，但结合一点创意，它将赋予你相当大的能力。接下来的两节将举例说明如何在实践中使用它的两个小例子。</p><h3 id="10-2-1-条件用户界面"><a href="#10-2-1-条件用户界面" class="headerlink" title="10.2.1 条件用户界面"></a>10.2.1 条件用户界面</h3><p>想象一下，你想要一个应用，允许用户模拟正态分布、均匀分布和指数分布。每种分布都有不同的参数，因此我们需要某种方法来显示不同分布的不同控件。在这里，我将为每个分布的唯一用户界面放在它自己的<a href="https://rdrr.io/pkg/shiny/man/tabPanel.html">tabPanel()</a>中，然后将三个选项卡组织成一个<a href="https://rdrr.io/pkg/shiny/man/tabsetPanel.html">tabsetPanel()</a>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">parameter_tabs <span class="operator">&lt;-</span> tabsetPanel<span class="punctuation">(</span></span><br><span class="line">  id <span class="operator">=</span> <span class="string">&quot;params&quot;</span><span class="punctuation">,</span></span><br><span class="line">  type <span class="operator">=</span> <span class="string">&quot;hidden&quot;</span><span class="punctuation">,</span></span><br><span class="line">  tabPanel<span class="punctuation">(</span><span class="string">&quot;normal&quot;</span><span class="punctuation">,</span></span><br><span class="line">    numericInput<span class="punctuation">(</span><span class="string">&quot;mean&quot;</span><span class="punctuation">,</span> <span class="string">&quot;mean&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    numericInput<span class="punctuation">(</span><span class="string">&quot;sd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;standard deviation&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tabPanel<span class="punctuation">(</span><span class="string">&quot;uniform&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    numericInput<span class="punctuation">(</span><span class="string">&quot;min&quot;</span><span class="punctuation">,</span> <span class="string">&quot;min&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    numericInput<span class="punctuation">(</span><span class="string">&quot;max&quot;</span><span class="punctuation">,</span> <span class="string">&quot;max&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tabPanel<span class="punctuation">(</span><span class="string">&quot;exponential&quot;</span><span class="punctuation">,</span></span><br><span class="line">    numericInput<span class="punctuation">(</span><span class="string">&quot;rate&quot;</span><span class="punctuation">,</span> <span class="string">&quot;rate&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>然后，我将把这部分嵌入到一个更完整的用户界面中，允许用户选择样本数量，并显示结果的直方图：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      selectInput<span class="punctuation">(</span><span class="string">&quot;dist&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Distribution&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        choices <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;normal&quot;</span><span class="punctuation">,</span> <span class="string">&quot;uniform&quot;</span><span class="punctuation">,</span> <span class="string">&quot;exponential&quot;</span><span class="punctuation">)</span></span><br><span class="line">      <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Number of samples&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      parameter_tabs<span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      plotOutput<span class="punctuation">(</span><span class="string">&quot;hist&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>请注意，我已经仔细地将<code>input$dist</code>中的<code>choices</code>与选项卡面板的名称相匹配。这使得编写下面的<a href="https://rdrr.io/pkg/shiny/man/observeEvent.html">observeEvent()</a>代码变得很容易，该代码会在分布变化时自动切换控件。该应用的其他部分使用了你已经熟悉的技术。最终结果如图10.6所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>dist<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    updateTabsetPanel<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;params&quot;</span><span class="punctuation">,</span> selected <span class="operator">=</span> input<span class="operator">$</span>dist<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span> </span><br><span class="line">  </span><br><span class="line">  sample <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="built_in">switch</span><span class="punctuation">(</span>input<span class="operator">$</span>dist<span class="punctuation">,</span></span><br><span class="line">      normal <span class="operator">=</span> rnorm<span class="punctuation">(</span>input<span class="operator">$</span>n<span class="punctuation">,</span> input<span class="operator">$</span>mean<span class="punctuation">,</span> input<span class="operator">$</span>sd<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      uniform <span class="operator">=</span> runif<span class="punctuation">(</span>input<span class="operator">$</span>n<span class="punctuation">,</span> input<span class="operator">$</span><span class="built_in">min</span><span class="punctuation">,</span> input<span class="operator">$</span><span class="built_in">max</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      exponential <span class="operator">=</span> rexp<span class="punctuation">(</span>input<span class="operator">$</span>n<span class="punctuation">,</span> input<span class="operator">$</span>rate<span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>hist <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span>hist<span class="punctuation">(</span>sample<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/cce8beeaa545088bdba647ce61f6cb67f1eee04e/48a70/demos/action-dynamic/dynamic-conditional-normal.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/cce8beeaa545088bdba647ce61f6cb67f1eee04e/48a70/demos/action-dynamic/dynamic-conditional-normal.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/d4e7bf3c6b1d72e2733aeaf06741ab542607e288/882f0/demos/action-dynamic/dynamic-conditional-uniform.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/d4e7bf3c6b1d72e2733aeaf06741ab542607e288/882f0/demos/action-dynamic/dynamic-conditional-uniform.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/a5699032e1e6b89fcd6d2c87bcf2d8b616b82e8c/c0cb8/demos/action-dynamic/dynamic-conditional-exponential.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/a5699032e1e6b89fcd6d2c87bcf2d8b616b82e8c/c0cb8/demos/action-dynamic/dynamic-conditional-exponential.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图10.6 正态分布（左）、均匀分布（中）和指数分布（右）的结果。查看实时效果请访问 <a href="https://hadley.shinyapps.io/ms-dynamic-conditional">https://hadley.shinyapps.io/ms-dynamic-conditional</a></td></tr></table><p>请注意，（例如）<code>input$mean</code>的值是否对用户可见是独立的。底层的HTML控件仍然存在；只是你看不到它。</p><h3 id="10-2-2-向导界面"><a href="#10-2-2-向导界面" class="headerlink" title="10.2.2 向导界面"></a>10.2.2 向导界面</h3><p>你还可以使用这个想法来创建一个“wizard”，这是一种界面类型，通过将其分散到多个页面上，更容易收集大量信息。在这里，我们在每个“page”中嵌入动作按钮，使其易于向前和向后移动。结果如图10.7所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  tabsetPanel<span class="punctuation">(</span></span><br><span class="line">    id <span class="operator">=</span> <span class="string">&quot;wizard&quot;</span><span class="punctuation">,</span></span><br><span class="line">    type <span class="operator">=</span> <span class="string">&quot;hidden&quot;</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;page_1&quot;</span><span class="punctuation">,</span> </span><br><span class="line">      <span class="string">&quot;Welcome!&quot;</span><span class="punctuation">,</span></span><br><span class="line">      actionButton<span class="punctuation">(</span><span class="string">&quot;page_12&quot;</span><span class="punctuation">,</span> <span class="string">&quot;next&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;page_2&quot;</span><span class="punctuation">,</span> </span><br><span class="line">      <span class="string">&quot;Only one page to go&quot;</span><span class="punctuation">,</span></span><br><span class="line">      actionButton<span class="punctuation">(</span><span class="string">&quot;page_21&quot;</span><span class="punctuation">,</span> <span class="string">&quot;prev&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      actionButton<span class="punctuation">(</span><span class="string">&quot;page_23&quot;</span><span class="punctuation">,</span> <span class="string">&quot;next&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;page_3&quot;</span><span class="punctuation">,</span> </span><br><span class="line">      <span class="string">&quot;You&#x27;re done!&quot;</span><span class="punctuation">,</span></span><br><span class="line">      actionButton<span class="punctuation">(</span><span class="string">&quot;page_32&quot;</span><span class="punctuation">,</span> <span class="string">&quot;prev&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  switch_page <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>i<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    updateTabsetPanel<span class="punctuation">(</span>inputId <span class="operator">=</span> <span class="string">&quot;wizard&quot;</span><span class="punctuation">,</span> selected <span class="operator">=</span> paste0<span class="punctuation">(</span><span class="string">&quot;page_&quot;</span><span class="punctuation">,</span> i<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  </span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>page_12<span class="punctuation">,</span> switch_page<span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>page_21<span class="punctuation">,</span> switch_page<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>page_23<span class="punctuation">,</span> switch_page<span class="punctuation">(</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>page_32<span class="punctuation">,</span> switch_page<span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/701f300df256124c9aa4cb5d9a6cb6245c7f70ce/e783b/demos/action-dynamic/wizard-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/701f300df256124c9aa4cb5d9a6cb6245c7f70ce/e783b/demos/action-dynamic/wizard-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/8b0644dfec78873a45545620af591b31323fa11c/c61f6/demos/action-dynamic/wizard-2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/8b0644dfec78873a45545620af591b31323fa11c/c61f6/demos/action-dynamic/wizard-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/9089ca7b0a519d51ae51c4991b26234561a41e67/18197/demos/action-dynamic/wizard-3.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/9089ca7b0a519d51ae51c4991b26234561a41e67/18197/demos/action-dynamic/wizard-3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图10.7 向导界面将复杂的用户界面分割成多个页面。在这里，我们通过一个非常简单的示例来演示这个想法，点击“下一步”以进入下一页。查看实时效果请访问 <a href="https://hadley.shinyapps.io/ms-wizard">https://hadley.shinyapps.io/ms-wizard</a></td></tr></table><p>请注意，使用<code>switch_page()</code>函数可以减少服务器代码中的重复量。我们将在第18章再次回到这个想法，然后在第<code>19.4.2</code>节中创建一个模块来自动化向导界面。</p><h3 id="10-2-3-练习"><a href="#10-2-3-练习" class="headerlink" title="10.2.3 练习"></a>10.2.3 练习</h3><ol><li><p>使用隐藏的选项卡集，仅当用户选中“advanced”复选框时才显示额外的控件。</p></li><li><p>创建一个应用，该应用绘制<code>ggplot(diamonds, aes(carat))</code>，但允许用户选择使用的geom：<a href="https://ggplot2.tidyverse.org/reference/geom_histogram.html">geom_histogram()</a>、<a href="https://ggplot2.tidyverse.org/reference/geom_histogram.html">geom_freqpoly()</a>或<a href="https://ggplot2.tidyverse.org/reference/geom_density.html">geom_density()</a>。使用隐藏的选项卡集，允许用户根据geom选择不同的参数：<code>geom_histogram()</code>和<code>geom_freqpoly()</code>具有binwidth参数；<code>geom_density()</code>具有bw参数。</p></li><li><p>修改你在前一个练习中创建的应用，允许用户选择是否显示每个geom（即，而不是始终使用一个geom，他们可以选择0、1、2或3个）。确保你可以独立控制直方图和频率多边形的binwidth。</p></li></ol><h2 id="10-3-使用代码创建用户界面"><a href="#10-3-使用代码创建用户界面" class="headerlink" title="10.3 使用代码创建用户界面"></a>10.3 使用代码创建用户界面</h2><p>有时，上面描述的技术无法提供您所需的动态性水平：更新函数只允许您更改现有的输入，而选项卡集仅在您具有固定且已知的可能组合集时才有效。有时，您需要根据其他输入创建不同类型的输入（或输出）或不同数量的输入（或输出）。这种最终技术使您能够这样做。</p><p>值得注意的是，您一直使用代码创建用户界面，但到目前为止，您总是在应用启动之前这样做。这种技术使您能够在应用运行时创建和修改用户界面。这个解决方案有两个部分：</p><ul><li><p><a href="https://rdrr.io/pkg/shiny/man/htmlOutput.html">uiOutput()</a> 在用户界面 (ui) 中插入一个占位符。这留下了一个“洞”，您的服务器代码稍后可以填充它。</p></li><li><p><a href="https://rdrr.io/pkg/shiny/man/renderUI.html">renderUI()</a> 在 <code>server()</code> 中被调用，用于将占位符填充为动态生成的用户界面。</p></li></ul><p>我们将通过一个简单的示例来了解这是如何工作的，然后深入探讨一些实际的应用。</p><h3 id="10-3-1-入门"><a href="#10-3-1-入门" class="headerlink" title="10.3.1 入门"></a>10.3.1 入门</h3><p>让我们从一个简单的应用开始，该应用动态地创建输入控件，其类型和标签由另外两个输入控件控制。最终的应用如图<code>10.8</code>所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  textInput<span class="punctuation">(</span><span class="string">&quot;label&quot;</span><span class="punctuation">,</span> <span class="string">&quot;label&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;type&quot;</span><span class="punctuation">,</span> <span class="string">&quot;type&quot;</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;slider&quot;</span><span class="punctuation">,</span> <span class="string">&quot;numeric&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  uiOutput<span class="punctuation">(</span><span class="string">&quot;numeric&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>numeric <span class="operator">&lt;-</span> renderUI<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>type <span class="operator">==</span> <span class="string">&quot;slider&quot;</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      sliderInput<span class="punctuation">(</span><span class="string">&quot;dynamic&quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>label<span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;dynamic&quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>label<span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span> </span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/c7a0fbee966861954422cd6a1d7fd4a39185ec9c/28819/demos/action-dynamic/render-simple-onload.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/c7a0fbee966861954422cd6a1d7fd4a39185ec9c/28819/demos/action-dynamic/render-simple-onload.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/35b772f26ba5a178d1f693ce7de4b12c17a454f3/9cb14/demos/action-dynamic/render-simple-numeric.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/35b772f26ba5a178d1f693ce7de4b12c17a454f3/9cb14/demos/action-dynamic/render-simple-numeric.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/d8a85a47b59618a13f336b7d9d0d7c705d2ef05e/9c957/demos/action-dynamic/render-simple-label.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/d8a85a47b59618a13f336b7d9d0d7c705d2ef05e/9c957/demos/action-dynamic/render-simple-label.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图10.8 应用加载时（左），然后将类型更改为数值（中），再将标签更改为“我的标签”。查看实时效果请访问 <a href="https://hadley.shinyapps.io/ms-render-simple">https://hadley.shinyapps.io/ms-render-simple</a></td></tr></table><p>如果你自己运行这段代码，你会发现应用在加载后需要一段时间才能显示。这是因为它是响应式的：应用必须先加载，触发一个响应事件，然后调用服务器函数，生成要插入页面的HTML。这是<a href="https://rdrr.io/pkg/shiny/man/renderUI.html">renderUI()</a>的一个缺点；过多地依赖它可能会导致用户界面出现延迟。为了获得良好的性能，请尽量使用本章前面描述的技术，保持用户界面的固定部分。</p><p>这种方法还有一个问题：当你更改控件时，会丢失当前选定的值。在使用代码创建用户界面时，保留现有状态是一大挑战。这就是为什么如果适用，选择性显示和隐藏用户界面是更好的方法——因为你没有销毁和重新创建控件，所以不需要做任何事情来保留值。然而，在许多情况下，我们可以通过将新输入的值设置为现有控件的当前值来解决这个问题：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>numeric <span class="operator">&lt;-</span> renderUI<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    value <span class="operator">&lt;-</span> isolate<span class="punctuation">(</span>input<span class="operator">$</span>dynamic<span class="punctuation">)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>type <span class="operator">==</span> <span class="string">&quot;slider&quot;</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      sliderInput<span class="punctuation">(</span><span class="string">&quot;dynamic&quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>label<span class="punctuation">,</span> value <span class="operator">=</span> value<span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;dynamic&quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>label<span class="punctuation">,</span> value <span class="operator">=</span> value<span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>使用 <a href="https://rdrr.io/pkg/shiny/man/isolate.html">isolate()</a> 非常重要。我们将在 <code>15.4.1</code> 节中详细讨论它的作用，但在这里，它确保我们不会创建一个响应式依赖，导致每次 <code>input$dynamic</code> 发生变化时（每当用户修改值时都会发生）都重新运行此代码。我们只希望在 <code>input$type</code> 或 <code>input$label</code> 发生变化时更改它。</p><h3 id="10-3-2-多个控件"><a href="#10-3-2-多个控件" class="headerlink" title="10.3.2 多个控件"></a>10.3.2 多个控件</h3><p>当你需要生成任意数量或类型的控件时，动态用户界面（UI）最有用。这意味着你将使用代码生成用户界面，我建议使用函数式编程来完成此类任务。在这里，我将使用 <a href="https://purrr.tidyverse.org/reference/map.html">purrr::map()</a> 和 <a href="https://purrr.tidyverse.org/reference/reduce.html">purrr::reduce()</a>，但你也可以使用基础的 <a href="https://rdrr.io/r/base/lapply.html">lapply()</a> 和 <a href="https://rdrr.io/r/base/funprog.html">Reduce()</a> 函数来实现同样的效果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>purrr<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果你不熟悉函数式编程中的 <a href="https://purrr.tidyverse.org/reference/map.html">map()</a> 和 <code>reduce()</code>，你可能希望在继续之前先阅读有关<a href="https://adv-r.hadley.nz/functionals.html">Functional programming</a>的内容。我们也将在第 <code>18</code> 章中再次讨论这个想法。这些想法相当复杂，所以如果你在第一次阅读时没有理解，请不要担心。</p><p>为了具体说明，想象一下你想要用户能够提供自己的颜色调色板。他们首先会指定他们想要的颜色的数量，然后为每个颜色提供一个值。用户界面相当简单：我们有一个 <a href="https://rdrr.io/pkg/shiny/man/numericInput.html">numericInput()</a> 来控制输入的数量，一个 <a href="https://rdrr.io/pkg/shiny/man/htmlOutput.html">uiOutput()</a> 用于放置生成的文本框，以及一个 <a href="https://rdrr.io/pkg/shiny/man/textOutput.html">textOutput()</a> 来证明我们已经正确地将所有内容连接在一起。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Number of colours&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  uiOutput<span class="punctuation">(</span><span class="string">&quot;col&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;palette&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>服务器函数很短，但包含了一些重要的想法：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  col_names <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;col&quot;</span><span class="punctuation">,</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>input<span class="operator">$</span>n<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>col <span class="operator">&lt;-</span> renderUI<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    map<span class="punctuation">(</span>col_names<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> textInput<span class="punctuation">(</span>.x<span class="punctuation">,</span> <span class="literal">NULL</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>palette <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    map_chr<span class="punctuation">(</span>col_names<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> input<span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">%||%</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><p>我使用了一个响应式对象 <code>col_names()</code> 来存储即将生成的每个颜色输入的名称。</p></li><li><p>然后，我使用 <code>map()</code> 创建一个 <code>textInput()</code> 列表，每个列表项对应 <code>col_names()</code> 中的一个名称。<code>renderUI()</code> 随后将这个 HTML 组件列表添加到用户界面。</p></li><li><p>我需要使用一个新技巧来访问输入值。到目前为止，我们总是使用 <code>$</code> 来访问输入的组件，例如 <code>input$col1</code>。但在这里，我们的输入名称存储在一个字符向量中，比如 <code>var &lt;- &quot;col1&quot;</code>。在这种情况下，<code>$</code> 不再适用，因此我们需要切换到 <code>[[</code>，即 <code>input[[var]]</code>。</p></li><li><p>我使用 <a href="https://purrr.tidyverse.org/reference/map.html">map_chr()</a> 将所有值收集到一个字符向量中，并在 <code>output$palette</code> 中显示。不幸的是，在浏览器渲染新输入之前，有一个短暂的时间段，其值会是 <code>NULL</code>。这会导致 <code>map_chr()</code> 报错，我们使用方便的 <code>%||%</code> 函数来解决这个问题：当左侧为 <code>NULL</code> 时，它返回右侧的值。</p></li></ul><p>你可以在图 <code>10.9</code> 中看到结果。</p><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/5301c856f06d8eba2b98b4a7c4d3fedb574d7f11/76c4e/demos/action-dynamic/render-palette-onload.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/5301c856f06d8eba2b98b4a7c4d3fedb574d7f11/76c4e/demos/action-dynamic/render-palette-onload.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/6a2df96ad06c05e809774c0db7d7e3611ec9eb53/d31b7/demos/action-dynamic/render-palette-change-n.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/6a2df96ad06c05e809774c0db7d7e3611ec9eb53/d31b7/demos/action-dynamic/render-palette-change-n.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/cad6373c73a55bf6e79fc166e72dadf394b528e1/b0691/demos/action-dynamic/render-palette-set-cols.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/cad6373c73a55bf6e79fc166e72dadf394b528e1/b0691/demos/action-dynamic/render-palette-set-cols.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="3">图10.9 应用程序加载时（左），将n设置为3后（中），然后输入一些颜色（右）。请在<a href="https://hadley.shinyapps.io/ms-render-palette">https://hadley.shinyapps.io/ms-render-palette</a>查看实时效果</td></tr></table><p>如果你运行这个应用程序，你会发现一个非常恼人的行为：每当你改变颜色的数量时，所有输入的数据都会消失。我们可以使用与之前相同的技术来解决这个问题：将<code>value</code>设置为（孤立的）当前值。我还会稍微调整外观，使其看起来更漂亮一些，包括在图中显示所选颜色。示例截图如图<code>10.10</code>所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Number of colours&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      uiOutput<span class="punctuation">(</span><span class="string">&quot;col&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">)</span>  </span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  col_names <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;col&quot;</span><span class="punctuation">,</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>input<span class="operator">$</span>n<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>col <span class="operator">&lt;-</span> renderUI<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    map<span class="punctuation">(</span>col_names<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> textInput<span class="punctuation">(</span>.x<span class="punctuation">,</span> <span class="literal">NULL</span><span class="punctuation">,</span> value <span class="operator">=</span> isolate<span class="punctuation">(</span>input<span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    cols <span class="operator">&lt;-</span> map_chr<span class="punctuation">(</span>col_names<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> input<span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">%||%</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="comment"># convert empty inputs to transparent</span></span><br><span class="line">    cols<span class="punctuation">[</span>cols <span class="operator">==</span> <span class="string">&quot;&quot;</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="literal">NA</span></span><br><span class="line">    </span><br><span class="line">    barplot<span class="punctuation">(</span></span><br><span class="line">      <span class="built_in">rep</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="built_in">length</span><span class="punctuation">(</span>cols<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">      col <span class="operator">=</span> cols<span class="punctuation">,</span></span><br><span class="line">      space <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> </span><br><span class="line">      axes <span class="operator">=</span> <span class="literal">FALSE</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/cc1d6ffde1b8ac88f72e2b897ed187f55cecedf1/89026/demos/action-dynamic/render-palette-full-rainbow.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/cc1d6ffde1b8ac88f72e2b897ed187f55cecedf1/89026/demos/action-dynamic/render-palette-full-rainbow.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/b1560598089d41fb8a7c71323c44efd7595ce615/b8927/demos/action-dynamic/render-palette-full-change-n.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/b1560598089d41fb8a7c71323c44efd7595ce615/b8927/demos/action-dynamic/render-palette-full-change-n.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td></tr><tr><td colspan="2">图10.10 填写彩虹的颜色（左），然后将颜色数量减少到3（右）；请注意，现有颜色被保留。实时效果请访问<a href="https://hadley.shinyapps.io/ms-render-palette-full">https://hadley.shinyapps.io/ms-render-palette-full</a>查看实时效果</td></tr></table><h3 id="10-3-3-动态过滤"><a href="#10-3-3-动态过滤" class="headerlink" title="10.3.3 动态过滤"></a>10.3.3 动态过滤</h3><p>为了结束本章，我将创建一个应用程序，允许你动态过滤任何数据框。每个数值变量都会得到一个范围滑块，每个因子变量都会得到一个多选控件，所以（例如）如果一个数据框有三个数值变量和两个因子，应用程序将有三个滑块和两个选择框。</p><p>我将从一个为单个变量创建用户界面的函数开始。对于数值输入，它将返回一个范围滑块；对于因子输入，它将返回一个多选控件；对于其他所有类型，它将返回NULL（无）。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">make_ui <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">,</span> var<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="keyword">if</span> <span class="punctuation">(</span><span class="built_in">is.numeric</span><span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    rng <span class="operator">&lt;-</span> <span class="built_in">range</span><span class="punctuation">(</span>x<span class="punctuation">,</span> na.rm <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">    sliderInput<span class="punctuation">(</span>var<span class="punctuation">,</span> var<span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> rng<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> rng<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> value <span class="operator">=</span> rng<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="keyword">if</span> <span class="punctuation">(</span>is.factor<span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    levs <span class="operator">&lt;-</span> levels<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">    selectInput<span class="punctuation">(</span>var<span class="punctuation">,</span> var<span class="punctuation">,</span> choices <span class="operator">=</span> levs<span class="punctuation">,</span> selected <span class="operator">=</span> levs<span class="punctuation">,</span> multiple <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment"># Not supported</span></span><br><span class="line">    <span class="literal">NULL</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>接着，我将编写此函数的服务器端等效项：它接收输入控件的变量和值，并返回一个逻辑向量，说明是否包含每个观测值。使用逻辑向量可以轻松组合来自多个列的结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">filter_var <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">,</span> val<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="keyword">if</span> <span class="punctuation">(</span><span class="built_in">is.numeric</span><span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="operator">!</span><span class="built_in">is.na</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="operator">&amp;</span> x <span class="operator">&gt;=</span> val<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="operator">&amp;</span> x <span class="operator">&lt;=</span> val<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="keyword">if</span> <span class="punctuation">(</span>is.factor<span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    x <span class="operator">%in%</span> val</span><br><span class="line">  <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment"># No control, so don&#x27;t filter</span></span><br><span class="line">    <span class="literal">TRUE</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然后，我可以手动使用这些函数为 <code>iris</code> 数据集生成一个简单的过滤用户界面：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      make_ui<span class="punctuation">(</span>iris<span class="operator">$</span>Sepal.Length<span class="punctuation">,</span> <span class="string">&quot;Sepal.Length&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      make_ui<span class="punctuation">(</span>iris<span class="operator">$</span>Sepal.Width<span class="punctuation">,</span> <span class="string">&quot;Sepal.Width&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      make_ui<span class="punctuation">(</span>iris<span class="operator">$</span>Species<span class="punctuation">,</span> <span class="string">&quot;Species&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  selected <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    filter_var<span class="punctuation">(</span>iris<span class="operator">$</span>Sepal.Length<span class="punctuation">,</span> input<span class="operator">$</span>Sepal.Length<span class="punctuation">)</span> <span class="operator">&amp;</span></span><br><span class="line">      filter_var<span class="punctuation">(</span>iris<span class="operator">$</span>Sepal.Width<span class="punctuation">,</span> input<span class="operator">$</span>Sepal.Width<span class="punctuation">)</span> <span class="operator">&amp;</span></span><br><span class="line">      filter_var<span class="punctuation">(</span>iris<span class="operator">$</span>Species<span class="punctuation">,</span> input<span class="operator">$</span>Species<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>head<span class="punctuation">(</span>iris<span class="punctuation">[</span>selected<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/c346538e80dd7b34a8142bdb05a537b44d581663/edd79/demos/action-dynamic/render-filter-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/c346538e80dd7b34a8142bdb05a537b44d581663/edd79/demos/action-dynamic/render-filter-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图10.11 iris数据集的简单过滤界面"></p><p>你可能注意到了，我已经厌倦了复制粘贴，所以这个应用程序只适用于三列。通过使用一些函数式编程，我可以让它适用于所有列：</p><ul><li><p>在<code>ui</code>中，使用<a href="https://purrr.tidyverse.org/reference/map.html">map()</a>为每个变量生成一个控件。</p></li><li><p>在<code>server()</code>，我使用<code>map()</code>为每个变量生成选择向量。然后，我使用<code>reduce()</code>将每个变量的逻辑向量组合成一个单一的逻辑向量，通过<code>&amp;</code>将每个向量连接在一起。</p></li></ul><p>再次强调，如果你不完全理解这里发生了什么，请不要太过担心。主要的收获是，一旦你掌握了函数式编程，你就可以编写非常简洁的代码，从而生成复杂且动态的应用程序。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      map<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">(</span>iris<span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> make_ui<span class="punctuation">(</span>iris<span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> .x<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  selected <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    each_var <span class="operator">&lt;-</span> map<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">(</span>iris<span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> filter_var<span class="punctuation">(</span>iris<span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> input<span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    reduce<span class="punctuation">(</span>each_var<span class="punctuation">,</span> <span class="operator">~</span> .x <span class="operator">&amp;</span> .y<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>head<span class="punctuation">(</span>iris<span class="punctuation">[</span>selected<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/b5f7aa079010dea111f8cb50ff9ce875cef92b4a/4b175/demos/action-dynamic/render-filter-2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/b5f7aa079010dea111f8cb50ff9ce875cef92b4a/4b175/demos/action-dynamic/render-filter-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图10.12 使用函数式编程为iris数据集构建过滤应用程序"></p><p>从此处开始，对其进行简单泛化，使其可以与任何数据框配合使用。在此，我将使用datasets包中的数据框进行说明，但你可以很容易地想象如何将其扩展到用户上传的数据。结果如图<code>10.13</code>所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">dfs <span class="operator">&lt;-</span> keep<span class="punctuation">(</span>ls<span class="punctuation">(</span><span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> is.data.frame<span class="punctuation">(</span>get<span class="punctuation">(</span>.x<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      selectInput<span class="punctuation">(</span><span class="string">&quot;dataset&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="string">&quot;Dataset&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> dfs<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      uiOutput<span class="punctuation">(</span><span class="string">&quot;filter&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  vars <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>filter <span class="operator">&lt;-</span> renderUI<span class="punctuation">(</span></span><br><span class="line">    map<span class="punctuation">(</span>vars<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> make_ui<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> .x<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  selected <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    each_var <span class="operator">&lt;-</span> map<span class="punctuation">(</span>vars<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="operator">~</span> filter_var<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> input<span class="punctuation">[[</span>.x<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    reduce<span class="punctuation">(</span>each_var<span class="punctuation">,</span> `&amp;`<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>head<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">[</span>selected<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="punctuation">]</span><span class="punctuation">,</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/539c4bcb59b7d52133c346ec6ca4a217e122e4df/9214d/demos/action-dynamic/filtering-final.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/539c4bcb59b7d52133c346ec6ca4a217e122e4df/9214d/demos/action-dynamic/filtering-final.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图10.13 根据所选数据集的字段自动生成的动态用户界面。请访问https://hadley.shinyapps.io/ms-filtering-final查看实时效果"></p><h3 id="10-3-4-对话框"><a href="#10-3-4-对话框" class="headerlink" title="10.3.4 对话框"></a>10.3.4 对话框</h3><p>在结束本章之前，我想提一下一个相关的技术：对话框。在<code>8.4.1</code>节中，你已经看到了对话框，其内容是固定的文本字符串。但由于<a href="https://rdrr.io/pkg/shiny/man/modalDialog.html">modalDialog()</a>是在服务器函数中调用的，因此你可以像<a href="https://rdrr.io/pkg/shiny/man/renderUI.html">renderUI()</a>一样动态地生成内容。如果你想在继续常规应用程序流程之前强制用户做出某些决定，这是一个很有用的技术。</p><h3 id="10-3-5-练习"><a href="#10-3-5-练习" class="headerlink" title="10.3.5 练习"></a>10.3.5 练习</h3><ol><li><p>根据本节中的初始示例，创建一个非常简单的应用程序：</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;type&quot;</span><span class="punctuation">,</span> <span class="string">&quot;type&quot;</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;slider&quot;</span><span class="punctuation">,</span> <span class="string">&quot;numeric&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  uiOutput<span class="punctuation">(</span><span class="string">&quot;numeric&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>numeric <span class="operator">&lt;-</span> renderUI<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>type <span class="operator">==</span> <span class="string">&quot;slider&quot;</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      sliderInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span>  </span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p> 你如何使用动态可见性来实现它？如果你实现了动态可见性，当你更改控件时，如何保持值的同步？</p></li><li><p>解释这个应用程序是如何工作的。为什么当你第二次点击“输入密码”按钮时，密码会消失？</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;go&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Enter password&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;text&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>go<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    showModal<span class="punctuation">(</span>modalDialog<span class="punctuation">(</span></span><br><span class="line">      passwordInput<span class="punctuation">(</span><span class="string">&quot;password&quot;</span><span class="punctuation">,</span> <span class="literal">NULL</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      title <span class="operator">=</span> <span class="string">&quot;Please enter your password&quot;</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  output<span class="operator">$</span>text <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>isTruthy<span class="punctuation">(</span>input<span class="operator">$</span>password<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="string">&quot;No password&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="string">&quot;Password entered&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>在·10.3.1·节的应用程序中，如果你从<code>value &lt;- isolate(input$dynamic)</code>中去掉<a href="https://rdrr.io/pkg/shiny/man/isolate.html">isolate()</a>会发生什么？</p></li><li><p>为<code>make_ui()</code>和<code>filter_var()</code>添加对日期和日期时间列的支持。</p></li><li><p>（高级）如果你了解S3面向对象编程（<a href="http://adv-r.hadley.nz/S3.html">S3 OOP</a>）系统，请考虑如何使用通用函数替换<code>make_ui()</code>和<code>filter_var()</code>中的if块。</p></li></ol><h2 id="10-4-总结"><a href="#10-4-总结" class="headerlink" title="10.4 总结"></a>10.4 总结</h2><p>在阅读本章之前，你只能在服务器函数运行之前静态地创建用户界面。现在你已经学会了如何根据用户操作修改用户界面并完全重新创建它。动态用户界面将极大地增加你的应用程序的复杂性，所以如果你发现自己很难调试正在发生的事情，不要感到惊讶。始终记住使用最简单的技术来解决你的问题，并回到<code>5.2</code>节中的调试建议。</p><p>下一章将转向讨论书签功能，使应用程序能够与他人共享当前状态。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——9-上传和下载</title>
      <link href="/post/72d6.html"/>
      <url>/post/72d6.html</url>
      
        <content type="html"><![CDATA[<h1 id="9-上传和下载"><a href="#9-上传和下载" class="headerlink" title="9 上传和下载"></a>9 上传和下载</h1><p>在应用中，用户处上传和下载文件是一项常用功能。你可以用它来上传数据进行分析，或者将结果作为数据集或报告下载。本章将介绍在应用中进行文件上传和下载所需的用户界面和服务器组件。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="9-1-上传"><a href="#9-1-上传" class="headerlink" title="9.1 上传"></a>9.1 上传</h2><p>我们先从文件上传开始讨论，向你展示基本的UI和server组件，然后展示它们如何在简单应用中协同工作。</p><h3 id="9-1-1-用户界面-UI"><a href="#9-1-1-用户界面-UI" class="headerlink" title="9.1.1 用户界面 UI"></a>9.1.1 用户界面 UI</h3><p>支持文件上传的用户界面很简单：只需在用户界面中添加<a href="https://rdrr.io/pkg/shiny/man/fileInput.html">fileInput()</a>即可。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  fileInput<span class="punctuation">(</span><span class="string">&quot;upload&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Upload a file&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>与其他大多数UI组件一样，这里只需要两个必需参数：<code>id</code>和<code>label</code>。<code>width</code>、<code>buttonLabel</code>和<code>placeholder</code>参数允许你以其他方式调整外观。我不会在这里讨论它们，但你可以在<a href="https://rdrr.io/pkg/shiny/man/fileInput.html">?fileInput</a>中了解更多。</p><h3 id="9-1-2-服务器-server"><a href="#9-1-2-服务器-server" class="headerlink" title="9.1.2 服务器 server"></a>9.1.2 服务器 server</h3><p>在server上处理<code>fileInput()</code>比处理其他输入稍微复杂一些。大多数输入返回简单的向量，但<code>fileInput()</code>返回一个包含四列的数据框：</p><ul><li><p><code>name</code>：用户计算机上的原始文件名。</p></li><li><p><code>size</code>：文件大小（以字节为单位）。默认情况下，用户只能上传最多5MB的文件。你可以在启动Shiny之前设置<code>shiny.maxRequestSize</code>选项来增加文件大小限制。例如，要允许最多10MB，可以运行<code>options(shiny.maxRequestSize = 10 * 1024^2)</code>。</p></li><li><p><code>type</code>：文件的<code>“MIME type”</code>。这是文件类型的正式规范，通常根据文件扩展名得出，在Shiny应用中很少需要。</p></li><li><p><code>datapath</code>：数据在server上上传到的路径。请将此路径视为临时路径：如果用户上传更多文件，此文件可能会被删除。数据始终保存到临时目录，并赋予临时名称。</p></li></ul><p>作者认为理解这种数据结构最简单的方法是制作一个简单的应用。运行以下代码并上传几个文件，以了解Shiny提供的数据。在<code>图9.1</code>中，你可以看到我上传了几张小狗照片（来自第7.3节）后的结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  fileInput<span class="punctuation">(</span><span class="string">&quot;upload&quot;</span><span class="punctuation">,</span> <span class="literal">NULL</span><span class="punctuation">,</span> buttonLabel <span class="operator">=</span> <span class="string">&quot;Upload...&quot;</span><span class="punctuation">,</span> multiple <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;files&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>files <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>input<span class="operator">$</span>upload<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/31fddd4b87d0e36141c7b8cbb2dd240f8c2d26d1/026fa/demos/action-transfer/upload.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/31fddd4b87d0e36141c7b8cbb2dd240f8c2d26d1/026fa/demos/action-transfer/upload.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图9.1 这个简单的应用可以让你看到Shiny为上传的文件提供了哪些数据。可以在 https://hadley.shinyapps.io/ms-upload 查看实时效果。"></p><p>请注意，我使用了<code>label</code>和<code>buttonLabel</code>参数来微调外观，以及<code>multiple = TRUE</code>来允许用户上传多个文件。</p><h3 id="9-1-3-上传数据"><a href="#9-1-3-上传数据" class="headerlink" title="9.1.3 上传数据"></a>9.1.3 上传数据</h3><p>如果用户正在上传数据集，你需要注意以下两个细节：</p><ul><li><p><code>input$upload</code>在页面加载时被初始化为<code>NULL</code>，因此你需要使用<code>req(input$upload)</code>来确保你的代码等待第一个文件上传。</p></li><li><p><code>accept</code>参数允许你限制可能的输入。最简单的方法是提供一个文件扩展名的字符向量，如<code>accept = &quot;.csv&quot;</code>。但是，accept参数只是对浏览器的建议，并不总是强制执行，因此自行验证是个好习惯（例如第8.1节）。在R中获取文件扩展名最简单的方法是使用<a href="https://rdrr.io/r/tools/fileutils.html">tools::file_ext()</a>，但要注意它会删除扩展名前面的<code>.</code>。</p></li></ul><p>将这些想法结合起来，我们得到以下应用，你可以上传一个<code>.csv</code>或<code>.tsv</code>文件，并查看前<code>n</code>行。你可以在 <a href="https://hadley.shinyapps.io/ms-upload-validate">https://hadley.shinyapps.io/ms-upload-validate</a> 查看它的运行情况。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  fileInput<span class="punctuation">(</span><span class="string">&quot;upload&quot;</span><span class="punctuation">,</span> <span class="literal">NULL</span><span class="punctuation">,</span> accept <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;.csv&quot;</span><span class="punctuation">,</span> <span class="string">&quot;.tsv&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Rows&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> step <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;head&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>upload<span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    ext <span class="operator">&lt;-</span> tools<span class="operator">::</span>file_ext<span class="punctuation">(</span>input<span class="operator">$</span>upload<span class="operator">$</span>name<span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">switch</span><span class="punctuation">(</span>ext<span class="punctuation">,</span></span><br><span class="line">      csv <span class="operator">=</span> vroom<span class="operator">::</span>vroom<span class="punctuation">(</span>input<span class="operator">$</span>upload<span class="operator">$</span>datapath<span class="punctuation">,</span> delim <span class="operator">=</span> <span class="string">&quot;,&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      tsv <span class="operator">=</span> vroom<span class="operator">::</span>vroom<span class="punctuation">(</span>input<span class="operator">$</span>upload<span class="operator">$</span>datapath<span class="punctuation">,</span> delim <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      validate<span class="punctuation">(</span><span class="string">&quot;Invalid file; Please upload a .csv or .tsv file&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>head <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    head<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> input<span class="operator">$</span>n<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>请注意，由于<code>multiple = FALSE</code>（默认值），<code>input$file</code>将是一个单行数据框，而<code>input$file$name</code>和<code>input$file$datapath</code>将是一个长度为1的字符向量。</p><h2 id="9-2-下载"><a href="#9-2-下载" class="headerlink" title="9.2 下载"></a>9.2 下载</h2><p>接下来，我们将讨论文件下载，向你展示基本的用户界面和服务器组件，然后演示如何使用它们来允许用户下载数据或报告。</p><h3 id="9-2-1-基本操作"><a href="#9-2-1-基本操作" class="headerlink" title="9.2.1 基本操作"></a>9.2.1 基本操作</h3><p>同样，用户界面非常简单：使用<code>downloadButton(id)</code>或<code>downloadLink(id)</code>为用户提供一个可点击的下载文件选项。结果如<code>图9.2</code>所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  downloadButton<span class="punctuation">(</span><span class="string">&quot;download1&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  downloadLink<span class="punctuation">(</span><span class="string">&quot;download2&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/24e3c954a6c32523d02cd22597227ffb7b77313e/b15ad/demos/action-transfer/download.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/24e3c954a6c32523d02cd22597227ffb7b77313e/b15ad/demos/action-transfer/download.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图9.2 一个下载按钮和一个下载链接"></p><p>你可以使用与<code>actionButtons()</code>相同的<code>class</code>和<code>icon</code>参数来自定义它们的外观，如第2.2.7节所述。</p><p>与其他输出不同，<a href="https://rdrr.io/pkg/shiny/man/downloadButton.html">downloadButton()</a>不与渲染函数配对。相反，你使用<a href="https://rdrr.io/pkg/shiny/man/downloadHandler.html">downloadHandler()</a>，它看起来像这样：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">output<span class="operator">$</span>download <span class="operator">&lt;-</span> downloadHandler<span class="punctuation">(</span></span><br><span class="line">  filename <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    paste0<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  content <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>file<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    write.csv<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> file<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>downloadHandler()</code>有两个参数，都是函数：</p><ul><li><p><code>filename</code>应该是一个没有参数的函数，返回一个文件名（字符串）。这个函数的工作是创建将在下载对话框中显示给用户的文件名。</p></li><li><p><code>content</code>应该是一个带有一个参数<code>file</code>的函数，file是保存文件的路径。这个函数的工作是将文件保存在Shiny知道的位置，以便可以将其发送给用户。</p></li></ul><p>这是一个不寻常的接口，但它允许Shiny控制文件应该保存的位置（以便可以将其放置在安全位置），同时你仍然可以控制文件的内容。</p><p>接下来，我们将把这些部分组合在一起，展示如何将数据文件或报告传输给用户。</p><h3 id="9-2-2-下载数据"><a href="#9-2-2-下载数据" class="headerlink" title="9.2.2 下载数据"></a>9.2.2 下载数据</h3><p>以下应用通过允许你下载<code>datasets包</code>中的任何数据集作为制表符分隔的文件，展示了数据下载的基础知识，如<code>图9.3</code>所示。我建议使用<code>.tsv</code>（制表符分隔值）而不是<code>.csv</code>（逗号分隔值），因为许多欧洲国家使用逗号来分隔数字的整数部分和小数部分（例如<code>1,23</code>与<code>1.23</code>）。这意味着它们不能使用逗号来分隔字段，而是在所谓的<code>“c”sv</code>文件中使用分号！通过使用制表符分隔的文件，你可以避免这种复杂性，因为它们在任何地方的工作方式都是相同的。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;dataset&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Pick a dataset&quot;</span><span class="punctuation">,</span> ls<span class="punctuation">(</span><span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;preview&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  downloadButton<span class="punctuation">(</span><span class="string">&quot;download&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Download .tsv&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    out <span class="operator">&lt;-</span> get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>is.data.frame<span class="punctuation">(</span>out<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      validate<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;&#x27;&quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;&#x27; is not a data frame&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    out</span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>preview <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    head<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">  output<span class="operator">$</span>download <span class="operator">&lt;-</span> downloadHandler<span class="punctuation">(</span></span><br><span class="line">    filename <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      paste0<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;.tsv&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    content <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>file<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      vroom<span class="operator">::</span>vroom_write<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> file<span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/eaecc41d850e5ddb2e0258dc33b939b249add5f3/800ce/demos/action-transfer/download-data.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/eaecc41d850e5ddb2e0258dc33b939b249add5f3/800ce/demos/action-transfer/download-data.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图9.3 一个更丰富的应用，允许你选择内置的数据集并在下载前预览。可以在https://hadley.shinyapps.io/ms-download-data查看实时效果。"></p><p>注意，这里使用了<a href="https://rdrr.io/pkg/shiny/man/validate.html">validate()</a>来仅允许用户下载是数据框的数据集。更好的做法是对列表进行预过滤，但这样可以让您看到<code>validate()</code>的另一个应用。</p><h3 id="9-2-3-下载报告"><a href="#9-2-3-下载报告" class="headerlink" title="9.2.3 下载报告"></a>9.2.3 下载报告</h3><p>除了下载数据外，您可能还希望允许您的应用下载报告，该报告总结了Shiny应用中交互式探索的结果。这是一项需要大量工作的事情，因为您还需要以不同的格式显示相同的信息，但对于高风险的应用来说，这是非常有用的。</p><p>生成此类报告的一种强大方法是使用<a href="https://bookdown.org/yihui/rmarkdown/parameterized-reports.html">参数化的RMarkdown文档</a>。参数化的RMarkdown文件在YAML元数据中有一个<code>params</code>字段：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title<span class="operator">:</span> My Document</span><br><span class="line">output<span class="operator">:</span> html_document</span><br><span class="line">params<span class="operator">:</span></span><br><span class="line">  year<span class="operator">:</span> <span class="number">2018</span></span><br><span class="line">  region<span class="operator">:</span> Europe</span><br><span class="line">  printcode<span class="operator">:</span> <span class="literal">TRUE</span></span><br><span class="line">  data<span class="operator">:</span> file.csv</span><br></pre></td></tr></table></figure><p>在文档中，您可以使用<code>params$year</code>、<code>params$region</code>等来引用这些值。YAML元数据中的值是默认值；您通常通过在调用<a href="https://pkgs.rstudio.com/rmarkdown/reference/render.html">rmarkdown::render()</a>时提供<code>params</code>参数来覆盖它们。这使得从相同的<code>.Rmd</code>生成许多不同的报告变得容易。</p><p>以下是一个简单的示例，改编自<a href="https://shiny.rstudio.com/articles/generating-reports.html">https://shiny.rstudio.com/articles/generating-reports.html</a>，该文章更详细地描述了这种技术。关键思想是从<code>downloadHander()</code>的<code>content</code>参数中调用<code>rmarkdown::render()</code>。如果您想生成其他输出格式，只需在<code>.Rmd</code>中更改输出格式，并确保更新扩展名（例如，更改为.pdf）。请在<a href="https://hadley.shinyapps.io/ms-download-rmd">https://hadley.shinyapps.io/ms-download-rmd</a>查看实时效果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Number of points&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">50</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  downloadButton<span class="punctuation">(</span><span class="string">&quot;report&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Generate report&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>report <span class="operator">&lt;-</span> downloadHandler<span class="punctuation">(</span></span><br><span class="line">    filename <span class="operator">=</span> <span class="string">&quot;report.html&quot;</span><span class="punctuation">,</span></span><br><span class="line">    content <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>file<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      params <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span>n <span class="operator">=</span> input<span class="operator">$</span>n<span class="punctuation">)</span></span><br><span class="line">      </span><br><span class="line">      id <span class="operator">&lt;-</span> showNotification<span class="punctuation">(</span></span><br><span class="line">        <span class="string">&quot;Rendering report...&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        duration <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> </span><br><span class="line">        closeButton <span class="operator">=</span> <span class="literal">FALSE</span></span><br><span class="line">      <span class="punctuation">)</span></span><br><span class="line">      <span class="built_in">on.exit</span><span class="punctuation">(</span>removeNotification<span class="punctuation">(</span>id<span class="punctuation">)</span><span class="punctuation">,</span> add <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">      rmarkdown<span class="operator">::</span>render<span class="punctuation">(</span><span class="string">&quot;report.Rmd&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        output_file <span class="operator">=</span> file<span class="punctuation">,</span></span><br><span class="line">        params <span class="operator">=</span> params<span class="punctuation">,</span></span><br><span class="line">        envir <span class="operator">=</span> new.env<span class="punctuation">(</span>parent <span class="operator">=</span> <span class="built_in">globalenv</span><span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">      <span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>渲染一个<code>.Rmd</code>文件通常需要几秒钟的时间，因此这是使用第8.2节中提到的通知的好地方。</p><p>还有一些其他值得了解的技巧：</p><ul><li><p>RMarkdown在当前工作目录中运行，这在许多部署场景中可能会失败（例如，在shinyapps.io上）。您可以通过在应用启动时将报告复制到临时目录来解决此问题（即在server函数外部）：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">report_path <span class="operator">&lt;-</span> tempfile<span class="punctuation">(</span>fileext <span class="operator">=</span> <span class="string">&quot;.Rmd&quot;</span><span class="punctuation">)</span></span><br><span class="line">file.copy<span class="punctuation">(</span><span class="string">&quot;report.Rmd&quot;</span><span class="punctuation">,</span> report_path<span class="punctuation">,</span> overwrite <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>然后，在调用<code>rmarkdown::render()</code>时，将<code>&quot;report.Rmd&quot;</code>替换为<code>report_path</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rmarkdown<span class="operator">::</span>render<span class="punctuation">(</span>report_path<span class="punctuation">,</span> </span><br><span class="line">  output_file <span class="operator">=</span> file<span class="punctuation">,</span></span><br><span class="line">  params <span class="operator">=</span> params<span class="punctuation">,</span></span><br><span class="line">  envir <span class="operator">=</span> new.env<span class="punctuation">(</span>parent <span class="operator">=</span> <span class="built_in">globalenv</span><span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>默认情况下，RMarkdown会在当前进程中渲染报告，这意味着它将继承Shiny应用的许多设置（如加载的包、选项等）。为了获得更大的健壮性，我建议使用<code>callr包</code>在单独的R会话中运行<code>render()</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">render_report <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> params<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  rmarkdown<span class="operator">::</span>render<span class="punctuation">(</span>input<span class="punctuation">,</span></span><br><span class="line">    output_file <span class="operator">=</span> output<span class="punctuation">,</span></span><br><span class="line">    params <span class="operator">=</span> params<span class="punctuation">,</span></span><br><span class="line">    envir <span class="operator">=</span> new.env<span class="punctuation">(</span>parent <span class="operator">=</span> <span class="built_in">globalenv</span><span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>report <span class="operator">&lt;-</span> downloadHandler<span class="punctuation">(</span></span><br><span class="line">    filename <span class="operator">=</span> <span class="string">&quot;report.html&quot;</span><span class="punctuation">,</span></span><br><span class="line">    content <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>file<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      params <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span>n <span class="operator">=</span> input<span class="operator">$</span>slider<span class="punctuation">)</span></span><br><span class="line">      callr<span class="operator">::</span>r<span class="punctuation">(</span></span><br><span class="line">        render_report<span class="punctuation">,</span></span><br><span class="line">        <span class="built_in">list</span><span class="punctuation">(</span>input <span class="operator">=</span> report_path<span class="punctuation">,</span> output <span class="operator">=</span> file<span class="punctuation">,</span> params <span class="operator">=</span> params<span class="punctuation">)</span></span><br><span class="line">      <span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><p>您可以在Mastering Shiny GitHub仓库中的<a href="https://github.com/hadley/mastering-shiny/tree/master/rmarkdown-report">rmarkdown-report&#x2F;</a>文件夹中看到所有这些组件组合在一起。</p><p><a href="https://github.com/rstudio/shinymeta">shinymeta</a>包解决了一个相关的问题：有时您需要将Shiny应用的当前状态转换为可在未来重新运行的可重复报告。要了解更多信息，请查阅Joe Cheng在useR! 2019年主题演讲中介绍的“<a href="https://www.youtube.com/watch?v=5KByRC6eqC8">Shiny的神圣目标：交互性与可重复性</a>”。</p><h2 id="9-3-案例研究"><a href="#9-3-案例研究" class="headerlink" title="9.3 案例研究"></a>9.3 案例研究</h2><p>最后，我们将通过一个简单的案例研究来结束本章。在这个案例中，我们将上传一个文件（用户可以指定分隔符），预览它，使用Sam Firke的<a href="http://sfirke.github.io/janitor">janitor</a>包进行一些可选的转换，然后让用户将其下载为<code>.tsv</code>文件。</p><p>为了更容易地理解如何使用这个应用，我使用了<a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">sidebarLayout()</a>来将应用分为三个主要步骤：</p><ul><li><p>上传和解析文件</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ui_upload <span class="operator">&lt;-</span> sidebarLayout<span class="punctuation">(</span></span><br><span class="line">  sidebarPanel<span class="punctuation">(</span></span><br><span class="line">    fileInput<span class="punctuation">(</span><span class="string">&quot;file&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Data&quot;</span><span class="punctuation">,</span> buttonLabel <span class="operator">=</span> <span class="string">&quot;Upload...&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    textInput<span class="punctuation">(</span><span class="string">&quot;delim&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Delimiter (leave blank to guess)&quot;</span><span class="punctuation">,</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    numericInput<span class="punctuation">(</span><span class="string">&quot;skip&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Rows to skip&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    numericInput<span class="punctuation">(</span><span class="string">&quot;rows&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Rows to preview&quot;</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  mainPanel<span class="punctuation">(</span></span><br><span class="line">    h3<span class="punctuation">(</span><span class="string">&quot;Raw data&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tableOutput<span class="punctuation">(</span><span class="string">&quot;preview1&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>清理文件</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ui_clean <span class="operator">&lt;-</span> sidebarLayout<span class="punctuation">(</span></span><br><span class="line">  sidebarPanel<span class="punctuation">(</span></span><br><span class="line">    checkboxInput<span class="punctuation">(</span><span class="string">&quot;snake&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Rename columns to snake case?&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    checkboxInput<span class="punctuation">(</span><span class="string">&quot;constant&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Remove constant columns?&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    checkboxInput<span class="punctuation">(</span><span class="string">&quot;empty&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Remove empty cols?&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  mainPanel<span class="punctuation">(</span></span><br><span class="line">    h3<span class="punctuation">(</span><span class="string">&quot;Cleaner data&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tableOutput<span class="punctuation">(</span><span class="string">&quot;preview2&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>下载文件</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ui_download <span class="operator">&lt;-</span> fluidRow<span class="punctuation">(</span></span><br><span class="line">  column<span class="punctuation">(</span>width <span class="operator">=</span> <span class="number">12</span><span class="punctuation">,</span> downloadButton<span class="punctuation">(</span><span class="string">&quot;download&quot;</span><span class="punctuation">,</span> <span class="built_in">class</span> <span class="operator">=</span> <span class="string">&quot;btn-block&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>然后，这些文件被组合成一个单独的<a href="https://rdrr.io/pkg/shiny/man/fluidPage.html">fluidPage()</a>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  ui_upload<span class="punctuation">,</span></span><br><span class="line">  ui_clean<span class="punctuation">,</span></span><br><span class="line">  ui_download</span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这种相同的组织方式使得理解应用程序变得更加容易。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment"># Upload ---------------------------------------------------------</span></span><br><span class="line">  raw <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>file<span class="punctuation">)</span></span><br><span class="line">    delim <span class="operator">&lt;-</span> <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>delim <span class="operator">==</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span> <span class="literal">NULL</span> <span class="keyword">else</span> input<span class="operator">$</span>delim</span><br><span class="line">    vroom<span class="operator">::</span>vroom<span class="punctuation">(</span>input<span class="operator">$</span>file<span class="operator">$</span>datapath<span class="punctuation">,</span> delim <span class="operator">=</span> delim<span class="punctuation">,</span> skip <span class="operator">=</span> input<span class="operator">$</span>skip<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>preview1 <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>head<span class="punctuation">(</span>raw<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> input<span class="operator">$</span>rows<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># Clean ----------------------------------------------------------</span></span><br><span class="line">  tidied <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    out <span class="operator">&lt;-</span> raw<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>snake<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="built_in">names</span><span class="punctuation">(</span>out<span class="punctuation">)</span> <span class="operator">&lt;-</span> janitor<span class="operator">::</span>make_clean_names<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">(</span>out<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>empty<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      out <span class="operator">&lt;-</span> janitor<span class="operator">::</span>remove_empty<span class="punctuation">(</span>out<span class="punctuation">,</span> <span class="string">&quot;cols&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>constant<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      out <span class="operator">&lt;-</span> janitor<span class="operator">::</span>remove_constant<span class="punctuation">(</span>out<span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    </span><br><span class="line">    out</span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>preview2 <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>head<span class="punctuation">(</span>tidied<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> input<span class="operator">$</span>rows<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># Download -------------------------------------------------------</span></span><br><span class="line">  output<span class="operator">$</span>download <span class="operator">&lt;-</span> downloadHandler<span class="punctuation">(</span></span><br><span class="line">    filename <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      paste0<span class="punctuation">(</span>tools<span class="operator">::</span>file_path_sans_ext<span class="punctuation">(</span>input<span class="operator">$</span>file<span class="operator">$</span>name<span class="punctuation">)</span><span class="punctuation">,</span> <span class="string">&quot;.tsv&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    content <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>file<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      vroom<span class="operator">::</span>vroom_write<span class="punctuation">(</span>tidied<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> file<span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/25874d076587129b1d92ceff28de69b7e5aec561/31f22/demos/action-transfer/case-study.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/25874d076587129b1d92ceff28de69b7e5aec561/31f22/demos/action-transfer/case-study.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图9.4 一个允许用户上传文件、执行一些简单的清理操作，然后下载结果的应用程序。可访问 https://hadley.shinyapps.io/ms-case-study 查看实时效果。"></p></li></ul><h2 id="9-4-练习"><a href="#9-4-练习" class="headerlink" title="9.4 练习"></a>9.4 练习</h2><ol><li><p>使用Thomas Lin Pedersen的<a href="https://ambient.data-imaginist.com/">ambient</a>包生成<a href="https://ambient.data-imaginist.com/reference/noise_worley.html">Worley噪声</a>，并下载其PNG图像。</p></li><li><p>创建一个应用程序，允许用户上传CSV文件，选择一个变量，然后对该变量执行<a href="https://rdrr.io/r/stats/t.test.html">t.test()</a>。在用户上传CSV文件后，您需要使用<a href="https://rdrr.io/pkg/shiny/man/updateSelectInput.html">updateSelectInput()</a>来填充可用的变量。详情请参阅第10.1节。</p></li><li><p>创建一个应用程序，允许用户上传CSV文件，选择一个变量，绘制直方图，然后下载直方图。作为额外的挑战，允许用户从<code>.png</code>、<code>.pdf</code>和<code>.svg</code>输出格式中进行选择。</p></li><li><p>编写一个应用程序，允许用户使用Ryan Timpe的<a href="https://github.com/ryantimpe/brickr">brickr</a>包从任何<code>.png</code>文件创建乐高马赛克。完成基本功能后，添加控件以允许用户选择马赛克的大小（以砖块为单位），并选择使用<code>“universal”</code>或<code>“generic”</code>颜色调色板。</p></li><li><p>第9.3节中的最后一个应用程序包含了一个大型的响应式表达式：</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">tidied <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">  out <span class="operator">&lt;-</span> raw<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>snake<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="built_in">names</span><span class="punctuation">(</span>out<span class="punctuation">)</span> <span class="operator">&lt;-</span> janitor<span class="operator">::</span>make_clean_names<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">(</span>out<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>empty<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    out <span class="operator">&lt;-</span> janitor<span class="operator">::</span>remove_empty<span class="punctuation">(</span>out<span class="punctuation">,</span> <span class="string">&quot;cols&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>constant<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    out <span class="operator">&lt;-</span> janitor<span class="operator">::</span>remove_constant<span class="punctuation">(</span>out<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">  out</span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p> 将其分解为多个部分，以便当<code>input$empty</code>发生变化时，不会重新运行<code>janitor::make_clean_names()</code>。</p></li></ol><h2 id="9-5-总结"><a href="#9-5-总结" class="headerlink" title="9.5 总结"></a>9.5 总结</h2><p>在本章中，您学习了如何使用<code>fileInput()</code>和<code>downloadButton()</code>来在用户之间传输文件。大多数挑战要么来自处理上传的文件，要么来自生成要下载的文件，因此我向您展示了如何处理一些常见的情况。如果我没有涵盖您在此处的特定挑战，那么您需要将您独特的创造力应用于问题中。</p><p>下一章将帮助您处理在处理用户提供的数据时遇到的一个常见挑战：您需要动态地调整用户界面以更好地适应数据。我将从一些易于理解且可以在许多情况下应用的简单技术开始，逐渐过渡到完全动态的用户界面。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——8-用户反馈</title>
      <link href="/post/6561.html"/>
      <url>/post/6561.html</url>
      
        <content type="html"><![CDATA[<h1 id="8-用户反馈"><a href="#8-用户反馈" class="headerlink" title="8 用户反馈"></a>8 用户反馈</h1><p>你通常可以通过向用户展示更多关于正在发生的事情的信息来提高应用程序的可用性。这可能表现为当输入不合理时显示更好的消息，或者对需要很长时间的操作使用进度条。一些反馈是通过输出自然发生的，你已经知道如何使用它们，但你经常还需要其他的东西。本章的目标是向你展示一些其他的选择。</p><p>我们将从<code>验证</code>技术开始，在输入（或输入组合）处于无效状态时通知用户。然后我们将继续讨论<code>通知</code>，向用户发送一般消息，以及<code>进度条</code>，这些为包含许多小步骤的耗时操作提供了详细信息。最后，我们将讨论危险操作，以及如何使用<code>确认</code>对话框或<code>撤销</code>操作的能力来让你的用户安心。</p><p>在本章中，我们将使用Andy Merlino的<a href="https://github.com/merlinoa/shinyFeedback">shinyFeedback</a>和John Coene的<a href="http://waiter.john-coene.com/">waiter</a>。你还应该关注Joe Cheng正在开发的<a href="https://rstudio.github.io/shinyvalidate/">shinyvalidate</a>包。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="8-1-验证"><a href="#8-1-验证" class="headerlink" title="8.1 验证"></a>8.1 验证</h2><p>你可以给用户提供的第一个也是最重要的反馈是，他们的输入有误。这与在R中编写好函数类似：用户友好的函数会给出清晰的错误消息，描述期望的输入是什么，以及你是如何违背这些期望的。思考用户可能会如何误用你的应用程序，可以让你在用户界面（UI）中提供有用的消息，而不是让错误渗透到R代码中并产生无用的错误信息。</p><h3 id="8-1-1-验证输入"><a href="#8-1-1-验证输入" class="headerlink" title="8.1.1 验证输入"></a>8.1.1 验证输入</h3><p>通过shinyFeedback包向用户提供额外的反馈是一个很好的方法。使用它分为两步。首先，你需要在用户界面（ui）中添加useShinyFeedback()。这将为显示美观的错误消息设置所需的HTML和JavaScript：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  shinyFeedback<span class="operator">::</span>useShinyFeedback<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="string">&quot;n&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;half&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>然后在您的server()函数中，您调用反馈函数之一：feedback()、feedbackWarning()、feedbackDanger()和feedbackSuccess()。他们都有三个关键参数：</p><ul><li><code>inputId</code>，放置反馈的输入的id。</li><li><code>show</code>，一个逻辑值，确定是否显示反馈。</li><li><code>text</code>，要显示的文本。</li></ul><p>它们还有颜色和图标参数，你可以使用它们进一步自定义外观。更多详细信息请查阅文档。</p><p>让我们看看这在一个真实例子中是如何实现的，假设我们只允许输入偶数。图8.1显示了结果。</p><figure class="highlight plaintext"><figcaption><span><- function(input, output, session) &#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  half &lt;- reactive(&#123;</span><br><span class="line">    even &lt;- input$n %% 2 == 0</span><br><span class="line">    shinyFeedback::feedbackWarning(&quot;n&quot;, !even, &quot;Please select an even number&quot;)</span><br><span class="line">    input$n / 2    </span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  output$half &lt;- renderText(half())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/4ce6e5665e89d296ce5ee685d1b44ac44f648c1c/42897/demos/action-feedback/feedback-odd.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/4ce6e5665e89d296ce5ee685d1b44ac44f648c1c/42897/demos/action-feedback/feedback-odd.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.1：使用feedbackWarning()显示无效输入的警告。左侧的应用程序显示了一个有效的输入，右侧的应用程序显示了一个无效的（奇数）输入并带有警告消息。请访问https://hadley.shinyapps.io/ms-feedback查看实时效果。"></p><p>请注意，错误消息已经显示，但输出仍然更新了。通常，你不想这样做，因为无效的输入可能会引发你不希望显示给用户的无用的R错误。要阻止输入触发响应式更改，你需要一个新工具：req()，即“required”的缩写。它的用法如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  half <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    even <span class="operator">&lt;-</span> input<span class="operator">$</span>n <span class="operator">%%</span> <span class="number">2</span> <span class="operator">==</span> <span class="number">0</span></span><br><span class="line">    shinyFeedback<span class="operator">::</span>feedbackWarning<span class="punctuation">(</span><span class="string">&quot;n&quot;</span><span class="punctuation">,</span> <span class="operator">!</span>even<span class="punctuation">,</span> <span class="string">&quot;Please select an even number&quot;</span><span class="punctuation">)</span></span><br><span class="line">    req<span class="punctuation">(</span>even<span class="punctuation">)</span></span><br><span class="line">    input<span class="operator">$</span>n <span class="operator">/</span> <span class="number">2</span>    </span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>half <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span>half<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>当<code>req()</code>的输入不为真时，它会发送一个特殊信号，告诉Shiny这个响应式组件没有它所需的所有输入，因此应该“暂停”。在将其与<code>validate()</code>结合使用之前，我们先简要讨论一下这个问题。</p><h3 id="8-1-2-使用req-取消执行"><a href="#8-1-2-使用req-取消执行" class="headerlink" title="8.1.2 使用req()取消执行"></a>8.1.2 使用<code>req()</code>取消执行</h3><p>通过跳出验证的范畴，可以更容易地理解<a href="https://rdrr.io/pkg/shiny/man/req.html">req()</a>。你可能已经注意到，当你启动一个应用程序时，即使用户还没有进行任何操作，完整的响应式图也会被计算出来。当你能够为输入选择有意义的默认<code>值</code>时，这可以很好地工作。但这并不总是可能的，有时你可能希望等到用户实际执行了某些操作再进行计算。这种情况通常出现在以下三种控件中：</p><ul><li><p>在<a href="https://rdrr.io/pkg/shiny/man/textInput.html">textInput()</a>中，你使用了<code>value = &quot;&quot;</code>，并且不希望用户输入任何内容之前执行任何操作。</p></li><li><p>在<a href="https://rdrr.io/pkg/shiny/man/selectInput.html">selectInput()</a>中，你提供了一个空选项<code>&quot;&quot;</code>，并且不希望用户进行选择之前执行任何操作。</p></li><li><p>在<a href="https://rdrr.io/pkg/shiny/man/fileInput.html">fileInput()</a>中，用户在上传任何内容之前，其结果都是空的。我们将在<code>9.1</code>节中再次讨论这个问题。</p></li></ul><p>我们需要一种方法来“暂停”响应式组件，以便在满足某个条件之前不会发生任何事情。这就是<code>req()</code>的工作，它会在允许响应式生产者继续之前检查所需的值。</p><p>例如，考虑以下应用程序，它将生成英语或毛利语的问候语。如果你运行这个应用程序，你会看到一个错误，如图<code>8.2</code>所示，因为在<code>greetings</code>向量中没有与默认选项<code>&quot;&quot;</code>相对应的条目。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;language&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Language&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="string">&quot;English&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Maori&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textInput<span class="punctuation">(</span><span class="string">&quot;name&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Name&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;greeting&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  greetings <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span></span><br><span class="line">    English <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    Maori <span class="operator">=</span> <span class="string">&quot;Kia ora&quot;</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>greeting <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    paste0<span class="punctuation">(</span>greetings<span class="punctuation">[[</span>input<span class="operator">$</span>language<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="string">&quot; &quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>name<span class="punctuation">,</span> <span class="string">&quot;!&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/8983f6fd77bdc3b97d45f06a7fdd0c67aaf52b3d/b3d13/demos/action-feedback/require-simple.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/8983f6fd77bdc3b97d45f06a7fdd0c67aaf52b3d/b3d13/demos/action-feedback/require-simple.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.2：当应用程序加载时，由于尚未选择语言，因此会显示一条无信息量的错误消息。"></p><p>我们可以使用<code>req()</code>来解决这个问题，如下所示。现在，在用户为语言和姓名都提供了值之前，将不会显示任何内容，如图<code>8.3</code>所示</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  greetings <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span></span><br><span class="line">    English <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    Maori <span class="operator">=</span> <span class="string">&quot;Kia ora&quot;</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>greeting <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>language<span class="punctuation">,</span> input<span class="operator">$</span>name<span class="punctuation">)</span></span><br><span class="line">    paste0<span class="punctuation">(</span>greetings<span class="punctuation">[[</span>input<span class="operator">$</span>language<span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="string">&quot; &quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>name<span class="punctuation">,</span> <span class="string">&quot;!&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/e8048494af9066952f69e4c7e9ec06c826202c34/4933a/demos/action-feedback/require-simple2-langauge.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/e8048494af9066952f69e4c7e9ec06c826202c34/4933a/demos/action-feedback/require-simple2-langauge.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.3：通过使用req()，只有在提供了语言和姓名之后，输出才会显示。请访问https://hadley.shinyapps.io/ms-require-simple2查看实时效果。"><br><code>req()</code>通过发出一个特殊<code>条件</code>来工作。这个特殊条件导致所有下游的响应式组件和输出停止执行。从技术上讲，它使任何下游的响应式消费者处于无效状态。我们将在第<code>16</code>章中再次回到这个术语。</p><p><code>req()</code>的设计是使得<code>req(inputx)</code>只有在用户提供了值的情况下才会继续执行，而不考虑输入控件的类型。如果需要，你也可以使用<code>req()</code>与自己的逻辑语句结合使用。例如，<code>req(inputa &gt; 0)</code>会在<code>a</code>大于0时允许计算继续进行；这通常是我们执行验证时使用的形式，我们将在下面看到。</p><h3 id="8-1-3-req-和验证"><a href="#8-1-3-req-和验证" class="headerlink" title="8.1.3 req()和验证"></a>8.1.3 <code>req()</code>和验证</h3><p>让我们将<code>req()</code>和shinyFeedback结合起来，解决一个更具挑战性的问题。我将回到我们在第1章中制作的简单应用程序，该应用程序允许你选择内置数据集并查看其内容。我将通过使用<code>textInput()</code>而不是<code>selectInput()</code>来使其更加通用和复杂。用户界面几乎没有变化：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  shinyFeedback<span class="operator">::</span>useShinyFeedback<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textInput<span class="punctuation">(</span><span class="string">&quot;dataset&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Dataset name&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>但是服务器函数需要变得稍微复杂一些。我们将以两种方式使用<code>req()</code>：</p><ul><li><p>我们只想在用户输入了值之后才进行计算，所以我们使用<code>req(input$dataset)</code>。</p></li><li><p>然后，我们检查提供的名称是否确实存在。如果不存在，我们将显示一条错误消息，然后使用<code>req()</code>取消计算。请注意<code>cancelOutput = TRUE</code>的使用：通常取消响应式组件会重置所有下游输出；使用<code>cancelOutput = TRUE</code>会使它们保持显示上一次的有效值。这对于<code>textInput()</code>来说很重要，因为您可能在输入名称的过程中触发更新。</p></li></ul><p>结果如图<code>8.4</code>所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    exists <span class="operator">&lt;-</span> exists<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span></span><br><span class="line">    shinyFeedback<span class="operator">::</span>feedbackDanger<span class="punctuation">(</span><span class="string">&quot;dataset&quot;</span><span class="punctuation">,</span> <span class="operator">!</span>exists<span class="punctuation">,</span> <span class="string">&quot;Unknown dataset&quot;</span><span class="punctuation">)</span></span><br><span class="line">    req<span class="punctuation">(</span>exists<span class="punctuation">,</span> cancelOutput <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">    get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    head<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/12970a9665fbc639f4428c014c524b62f9e72373/5af05/demos/action-feedback/require-cancel-ok.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/12970a9665fbc639f4428c014c524b62f9e72373/5af05/demos/action-feedback/require-cancel-ok.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.4：加载时，表格为空，因为数据集名称为空。在我们输入一个有效数据集名称（iris）后，数据会显示出来，即使按下退格键以输入新的数据集名称时，数据仍会继续显示。请访问https://hadley.shinyapps.io/ms-require-cancel查看实时效果。"></p><h3 id="8-1-4-验证输出"><a href="#8-1-4-验证输出" class="headerlink" title="8.1.4 验证输出"></a>8.1.4 验证输出</h3><p>当问题与单个输入相关时，shinyFeedback非常有用。但有时无效状态是多个输入组合的结果。在这种情况下，将错误放在输入旁边并没有太大意义（应该放在哪个输入旁边呢？），相反，将其放在输出中更有意义。</p><p>您可以使用shiny内置的一个工具来实现：<a href="https://rdrr.io/pkg/shiny/man/validate.html">validate()</a>。当在响应式组件或输出中调用时，<code>validate(message)</code>会停止其余代码的执行，并在任何下游输出中显示<code>message</code>。以下代码显示了一个简单示例，其中我们不想记录或取负值的平方根。您可以在图<code>8.5</code>中查看结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;x&quot;</span><span class="punctuation">,</span> <span class="string">&quot;x&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;trans&quot;</span><span class="punctuation">,</span> <span class="string">&quot;transformation&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    choices <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;square&quot;</span><span class="punctuation">,</span> <span class="string">&quot;log&quot;</span><span class="punctuation">,</span> <span class="string">&quot;square-root&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;out&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>out <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>x <span class="operator">&lt;</span> <span class="number">0</span> <span class="operator">&amp;&amp;</span> input<span class="operator">$</span>trans <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;log&quot;</span><span class="punctuation">,</span> <span class="string">&quot;square-root&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      validate<span class="punctuation">(</span><span class="string">&quot;x can not be negative for this transformation&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">switch</span><span class="punctuation">(</span>input<span class="operator">$</span>trans<span class="punctuation">,</span></span><br><span class="line">      square <span class="operator">=</span> input<span class="operator">$</span>x <span class="operator">^</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;square-root&quot;</span> <span class="operator">=</span> <span class="built_in">sqrt</span><span class="punctuation">(</span>input<span class="operator">$</span>x<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      <span class="built_in">log</span> <span class="operator">=</span> <span class="built_in">log</span><span class="punctuation">(</span>input<span class="operator">$</span>x<span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/c1c59bed1d77fa2aea32024bbaa907e5dbba6244/b5824/demos/action-feedback/validate-init.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/c1c59bed1d77fa2aea32024bbaa907e5dbba6244/b5824/demos/action-feedback/validate-init.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.5：如果输入有效，输出会显示转换结果。如果输入的组合无效，则输出会被替换为一条信息性消息。"></p><h2 id="8-2-通知"><a href="#8-2-通知" class="headerlink" title="8.2 通知"></a>8.2 通知</h2><p>如果没有问题，您只是想让用户知道发生了什么，那么您需要一个<code>通知</code>。在Shiny中，通知是通过<a href="https://rdrr.io/pkg/shiny/man/showNotification.html">showNotification()</a>创建的，并堆叠在页面的右下角。使用<code>showNotification()</code>有三种基本方式：</p><ul><li><p>显示一个临时通知，该通知在固定时间后自动消失。</p></li><li><p>在进程开始时显示通知，并在进程结束时将其移除。</p></li><li><p>使用渐进更新来更新单个通知。</p></li></ul><p>下面将讨论这三种技术。</p><h3 id="8-2-1-临时通知"><a href="#8-2-1-临时通知" class="headerlink" title="8.2.1 临时通知"></a>8.2.1 临时通知</h3><p>使用<code>showNotification()</code>的最简单方法是只传入一个参数：您想要显示的消息。由于很难通过截图捕捉这种行为，所以如果您想看到它的实际效果，请访问<a href="https://hadley.shinyapps.io/ms-notification-transient">https://hadley.shinyapps.io/ms-notification-transient</a>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;goodnight&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Good night&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>goodnight<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;So long&quot;</span><span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;Farewell&quot;</span><span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;Auf Wiedersehen&quot;</span><span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;Adieu&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>默认情况下，消息将在5秒后消失，你可以通过设置<code>duration</code>来覆盖这个时间，或者用户可以点击关闭按钮提前关闭它。如果你想让通知更加醒目，你可以将<code>type</code>参数设置为“message”、“warning”或“error”其中之一。图<code>8.6</code>展示了这些通知的外观。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>goodnight<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;So long&quot;</span><span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;Farewell&quot;</span><span class="punctuation">,</span> type <span class="operator">=</span> <span class="string">&quot;message&quot;</span><span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;Auf Wiedersehen&quot;</span><span class="punctuation">,</span> type <span class="operator">=</span> <span class="string">&quot;warning&quot;</span><span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;Adieu&quot;</span><span class="punctuation">,</span> type <span class="operator">=</span> <span class="string">&quot;error&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/87c1065fb140b5924f0a32297421656e48ef7e11/4fe18/images/action-feedback/notify-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/87c1065fb140b5924f0a32297421656e48ef7e11/4fe18/images/action-feedback/notify-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><img src="https://d33wubrfki0l68.cloudfront.net/d2d0c53e19a116f900ef892da0dd4580b47cf71e/993ed/images/action-feedback/notify-2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/d2d0c53e19a116f900ef892da0dd4580b47cf71e/993ed/images/action-feedback/notify-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><img src="https://d33wubrfki0l68.cloudfront.net/9fea3bd7890e9ec4ba7ab1fa1f84d0881cea23ee/d4571/images/action-feedback/notify-3.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/9fea3bd7890e9ec4ba7ab1fa1f84d0881cea23ee/d4571/images/action-feedback/notify-3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.6：点击“晚安”后通知的显示过程：第一个通知出现，再过三秒，所有通知都将显示出来，随后通知开始消失。实时查看效果，请访问https://hadley.shinyapps.io/ms-notify-persistent。"></p><h3 id="8-2-2-完成时移除"><a href="#8-2-2-完成时移除" class="headerlink" title="8.2.2 完成时移除"></a>8.2.2 完成时移除</h3><p>将通知的存在与一个长时间运行的任务关联起来通常很有用。在这种情况下，你希望在任务开始时显示通知，并在任务完成时移除通知。为此，你需要：</p><ul><li><p>设置<code>duration = NULL</code>和<code>closeButton = FALSE</code>，以确保通知在任务完成之前一直保持可见状态。</p></li><li><p>保存<a href="https://rdrr.io/pkg/shiny/man/showNotification.html">showNotification()</a>返回的id，然后将其传递给<a href="https://rdrr.io/pkg/shiny/man/showNotification.html">removeNotification()</a>。最可靠的方法是使用<a href="https://rdrr.io/r/base/on.exit.html">on.exit()</a>，这可以确保无论任务如何完成（成功或出错），通知都会被移除。你可以在“<a href="v">更改和恢复状态</a>”一章中了解更多关于<code>on.exit()</code>的信息。</p></li></ul><p>以下示例将各个部分组合在一起，展示了如何在读取大型csv文件时向用户更新状态：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    id <span class="operator">&lt;-</span> showNotification<span class="punctuation">(</span><span class="string">&quot;Reading data...&quot;</span><span class="punctuation">,</span> duration <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> closeButton <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">on.exit</span><span class="punctuation">(</span>removeNotification<span class="punctuation">(</span>id<span class="punctuation">)</span><span class="punctuation">,</span> add <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    read.csv<span class="punctuation">(</span>input<span class="operator">$</span>file<span class="operator">$</span>datapath<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>一般来说，这类通知会存在于一个响应式环境中，因为这可以确保只有当需要时，长时间运行的计算才会重新执行。</p><h3 id="8-2-3-渐进式更新"><a href="#8-2-3-渐进式更新" class="headerlink" title="8.2.3 渐进式更新"></a>8.2.3 渐进式更新</h3><p>正如你在第一个示例中所看到的，多次调用showNotification()通常会创建多个通知。相反，你可以通过捕获第一次调用的id并在后续调用中使用它来更新单个通知。如果你的长时间运行的任务包含多个子组件，这将非常有用。你可以在<a href="https://hadley.shinyapps.io/ms-notification-updates">https://hadley.shinyapps.io/ms-notification-updates</a>查看结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  notify <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>msg<span class="punctuation">,</span> id <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    showNotification<span class="punctuation">(</span>msg<span class="punctuation">,</span> id <span class="operator">=</span> id<span class="punctuation">,</span> duration <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> closeButton <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">  data <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span> </span><br><span class="line">    id <span class="operator">&lt;-</span> notify<span class="punctuation">(</span><span class="string">&quot;Reading data...&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">on.exit</span><span class="punctuation">(</span>removeNotification<span class="punctuation">(</span>id<span class="punctuation">)</span><span class="punctuation">,</span> add <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">      </span><br><span class="line">    notify<span class="punctuation">(</span><span class="string">&quot;Reticulating splines...&quot;</span><span class="punctuation">,</span> id <span class="operator">=</span> id<span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    notify<span class="punctuation">(</span><span class="string">&quot;Herding llamas...&quot;</span><span class="punctuation">,</span> id <span class="operator">=</span> id<span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">    notify<span class="punctuation">(</span><span class="string">&quot;Orthogonalizing matrices...&quot;</span><span class="punctuation">,</span> id <span class="operator">=</span> id<span class="punctuation">)</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">        </span><br><span class="line">    mtcars</span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span>head<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="8-3-进度条"><a href="#8-3-进度条" class="headerlink" title="8.3 进度条"></a>8.3 进度条</h2><p>对于长时间运行的任务，最好的反馈形式就是进度条。它不仅可以告诉你任务进行到了哪一步，还可以帮助你估计还需要多长时间：你是应该深吸一口气，去喝杯咖啡，还是明天再来？在本节中，我将展示两种显示进度条的技术，一种是Shiny内置的，另一种是John Coene开发的<a href="https://waiter.john-coene.com/">waiter</a>包提供的。</p><p>不幸的是，这两种技术都存在同样的主要缺点：要使用进度条，你需要能够将大任务分成已知数量的、每个都大致需要相同时间来完成的小任务。这通常很难做到，特别是当底层代码是用C语言编写的，且没有办法向你传达进度更新时。我们正在努力开发<a href="https://github.com/r-lib/progress">progress包</a>中的工具，以便有一天像dplyr、readr和vroom这样的包能够生成进度条，你可以轻松地将它们转发给Shiny。</p><h3 id="8-3-1-Shiny"><a href="#8-3-1-Shiny" class="headerlink" title="8.3.1 Shiny"></a>8.3.1 Shiny</h3><p>要使用Shiny创建进度条，你需要使用<a href="https://rdrr.io/pkg/shiny/man/withProgress.html">withProgress()</a>和<a href="https://rdrr.io/pkg/shiny/man/withProgress.html">incProgress()</a>。假设你有一段运行缓慢的代码，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>step<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  x <span class="operator">&lt;-</span> function_that_takes_a_long_time<span class="punctuation">(</span>x<span class="punctuation">)</span>     </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>你首先需要用<code>withProgress()</code>将其包裹起来。当代码开始运行时，这会显示进度条，并在完成时自动移除它：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">withProgress<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>step<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    x <span class="operator">&lt;-</span> function_that_takes_a_long_time<span class="punctuation">(</span>x<span class="punctuation">)</span>     </span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>然后在每个步骤之后调用<code>incProgress()</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">withProgress<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>step<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    x <span class="operator">&lt;-</span> function_that_takes_a_long_time<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">    incProgress<span class="punctuation">(</span><span class="number">1</span> <span class="operator">/</span> <span class="built_in">length</span><span class="punctuation">(</span>step<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>incProgress()</code>的第一个参数是进度条要增加的量。默认情况下，进度条从0开始，到1结束，因此通过步骤数除以来增加进度条，可以确保循环结束时进度条完成。</p><p>图<code>8.7</code>展示了在一个完整的Shiny应用程序中，这可能看起来是什么样子。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;steps&quot;</span><span class="punctuation">,</span> <span class="string">&quot;How many steps?&quot;</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;go&quot;</span><span class="punctuation">,</span> <span class="string">&quot;go&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;result&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> eventReactive<span class="punctuation">(</span>input<span class="operator">$</span>go<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    withProgress<span class="punctuation">(</span>message <span class="operator">=</span> <span class="string">&quot;Computing random number&quot;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>input<span class="operator">$</span>steps<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">        Sys.sleep<span class="punctuation">(</span><span class="number">0.5</span><span class="punctuation">)</span></span><br><span class="line">        incProgress<span class="punctuation">(</span><span class="number">1</span> <span class="operator">/</span> input<span class="operator">$</span>steps<span class="punctuation">)</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">      runif<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>result <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="built_in">round</span><span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/f8653f6a9d2e8c56ebf035d48a3ec299f67fa99e/19ffd/images/action-feedback/progress-2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/f8653f6a9d2e8c56ebf035d48a3ec299f67fa99e/19ffd/images/action-feedback/progress-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.7：进度条有助于指示计算还需运行多长时间。请在线查看https://hadley.shinyapps.io/ms-progress。"></p><p>需要注意的几个事项：</p><ul><li><p>我使用了可选的<code>message</code>参数，在进度条中添加了一些解释性文本。</p></li><li><p>我使用了<a href="https://rdrr.io/r/base/Sys.sleep.html">Sys.sleep()</a>来模拟一个长时间运行的操作；在你的代码中，这将是一个耗时函数。</p></li><li><p>我通过将一个按钮与<a href="https://rdrr.io/pkg/shiny/man/observeEvent.html">eventReactive()</a>结合，允许用户控制事件何时开始。这是任何需要进度条的任务的良好做法。</p></li></ul><h3 id="8-3-2-Waiter"><a href="#8-3-2-Waiter" class="headerlink" title="8.3.2 Waiter"></a>8.3.2 Waiter</h3><p>内置的进度条对于基础操作来说非常好，但如果你想要提供更多视觉选项的进度条，你可以尝试使用<a href="https://waiter.john-coene.com/">waiter</a>包。将上面的代码适配为与Waiter一起工作很简单。在UI中，我们添加use_waitress()：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  waiter<span class="operator">::</span>use_waitress<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;steps&quot;</span><span class="punctuation">,</span> <span class="string">&quot;How many steps?&quot;</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;go&quot;</span><span class="punctuation">,</span> <span class="string">&quot;go&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;result&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>Waiter的进度条接口略有不同。Waiter包使用R6对象将所有与进度相关的函数捆绑到一个单独的对象中。如果你以前从未使用过R6对象，不必太担心细节；你可以直接复制和粘贴这个模板。基本的生命周期看起来像这样：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a new progress bar</span></span><br><span class="line">waitress <span class="operator">&lt;-</span> waiter<span class="operator">::</span>Waitress<span class="operator">$</span>new<span class="punctuation">(</span><span class="built_in">max</span> <span class="operator">=</span> input<span class="operator">$</span>steps<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># Automatically close it when done</span></span><br><span class="line"><span class="built_in">on.exit</span><span class="punctuation">(</span>waitress<span class="operator">$</span>close<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>input<span class="operator">$</span>steps<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  Sys.sleep<span class="punctuation">(</span><span class="number">0.5</span><span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># increment one step</span></span><br><span class="line">  waitress<span class="operator">$</span>inc<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>我们可以在 Shiny 应用程序中使用它，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> eventReactive<span class="punctuation">(</span>input<span class="operator">$</span>go<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    waitress <span class="operator">&lt;-</span> waiter<span class="operator">::</span>Waitress<span class="operator">$</span>new<span class="punctuation">(</span><span class="built_in">max</span> <span class="operator">=</span> input<span class="operator">$</span>steps<span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">on.exit</span><span class="punctuation">(</span>waitress<span class="operator">$</span>close<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>input<span class="operator">$</span>steps<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      Sys.sleep<span class="punctuation">(</span><span class="number">0.5</span><span class="punctuation">)</span></span><br><span class="line">      waitress<span class="operator">$</span>inc<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    </span><br><span class="line">    runif<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>result <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="built_in">round</span><span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>默认显示是在页面顶部的细长进度条（你可以查看<a href="https://hadley.shinyapps.io/ms-waiter">https://hadley.shinyapps.io/ms-waiter</a>），但有许多方法可以自定义输出：</p><p>你可以覆盖默认<code>主题</code>，选择使用以下主题之一：</p><ul><li><code>overlay</code>：一个不透明的进度条，会隐藏整个页面</li><li><code>overlay-opacity</code>：一个透明的进度条，会覆盖整个页面</li><li><code>overlay-percent</code>：一个不透明的进度条，同时还会显示一个数字百分比。</li><li>除了为整个页面显示进度条之外，你还可以通过设置<code>selector</code>参数将其覆盖在现有的输入或输出上，例如：</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">waitress <span class="operator">&lt;-</span> Waitress<span class="operator">$</span>new<span class="punctuation">(</span>selector <span class="operator">=</span> <span class="string">&quot;#steps&quot;</span><span class="punctuation">,</span> theme <span class="operator">=</span> <span class="string">&quot;overlay&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="8-3-3-Spinners"><a href="#8-3-3-Spinners" class="headerlink" title="8.3.3 Spinners"></a>8.3.3 Spinners</h3><p>有时，你不知道一个操作需要多长时间才能完成，你只想显示一个动画旋转器，让用户知道有事情正在发生。对于这个任务，你也可以使用waiter包；只需从使用<code>Waitress</code>切换到使用<code>Waiter</code>即可：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  waiter<span class="operator">::</span>use_waiter<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;go&quot;</span><span class="punctuation">,</span> <span class="string">&quot;go&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;result&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> eventReactive<span class="punctuation">(</span>input<span class="operator">$</span>go<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    waiter <span class="operator">&lt;-</span> waiter<span class="operator">::</span>Waiter<span class="operator">$</span>new<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    waiter<span class="operator">$</span>show<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">on.exit</span><span class="punctuation">(</span>waiter<span class="operator">$</span>hide<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    Sys.sleep<span class="punctuation">(</span>sample<span class="punctuation">(</span><span class="number">5</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    runif<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>result <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="built_in">round</span><span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/876e7420c98f7344ee1eac35650c26d6257eb839/7c919/images/action-feedback/spinner-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/876e7420c98f7344ee1eac35650c26d6257eb839/7c919/images/action-feedback/spinner-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.8：“Waiter”会在某个操作发生时显示整个应用程序的旋转器。请在线查看https://hadley.shinyapps.io/ms-spinner-1。"></p><p>与Waitress一样，你也可以针对特定的输出使用Waiters。这些waiter可以在输出更新时自动移除旋转器，因此代码甚至更简单：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  waiter<span class="operator">::</span>use_waiter<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;go&quot;</span><span class="punctuation">,</span> <span class="string">&quot;go&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> eventReactive<span class="punctuation">(</span>input<span class="operator">$</span>go<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    waiter<span class="operator">::</span>Waiter<span class="operator">$</span>new<span class="punctuation">(</span>id <span class="operator">=</span> <span class="string">&quot;plot&quot;</span><span class="punctuation">)</span><span class="operator">$</span>show<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    </span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line">    data.frame<span class="punctuation">(</span>x <span class="operator">=</span> runif<span class="punctuation">(</span><span class="number">50</span><span class="punctuation">)</span><span class="punctuation">,</span> y <span class="operator">=</span> runif<span class="punctuation">(</span><span class="number">50</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span>plot<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/0fa7426c91728627f36b69d91036aef0876f278c/84714/images/action-feedback/spinner-2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/0fa7426c91728627f36b69d91036aef0876f278c/84714/images/action-feedback/spinner-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图8.9：你也可以为单个输出显示旋转器。请在线查看https://hadley.shinyapps.io/ms-spinner-2。"></p><p>waiter包提供了多种旋转器供你选择；你可以在<a href="https://rdrr.io/pkg/waiter/man/spinners.html">?waiter::spinners</a>中查看你的选项，然后选择其中一个（例如）使用<code>Waiter$new(html = spin_ripple())</code>。</p><p>一个更简单的选择是使用Dean Attali的<a href="https://github.com/daattali/shinycssloaders">shinycssloaders</a>包。它使用JavaScript监听Shiny事件，因此甚至不需要服务器端代码。相反，你只需使用<a href="https://rdrr.io/pkg/shinycssloaders/man/withSpinner.html">shinycssloaders::withSpinner()</a>来包装你希望在其失效时自动获得旋转器的输出。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shinycssloaders<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;go&quot;</span><span class="punctuation">,</span> <span class="string">&quot;go&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  withSpinner<span class="punctuation">(</span>plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  data <span class="operator">&lt;-</span> eventReactive<span class="punctuation">(</span>input<span class="operator">$</span>go<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    Sys.sleep<span class="punctuation">(</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line">    data.frame<span class="punctuation">(</span>x <span class="operator">=</span> runif<span class="punctuation">(</span><span class="number">50</span><span class="punctuation">)</span><span class="punctuation">,</span> y <span class="operator">=</span> runif<span class="punctuation">(</span><span class="number">50</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span>plot<span class="punctuation">(</span>data<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="8-4-确认和撤销"><a href="#8-4-确认和撤销" class="headerlink" title="8.4 确认和撤销"></a>8.4 确认和撤销</h2><p>有时某个操作可能具有潜在的危险性，你可能想要确保用户确实想要执行该操作，或者你想要在一切都太晚之前给他们一个撤销的机会。本节中的三个技巧列出了你的基本选项，并给出了一些如何在你的应用程序中实现它们的建议。</p><h3 id="8-4-1-明确确认"><a href="#8-4-1-明确确认" class="headerlink" title="8.4.1 明确确认"></a>8.4.1 明确确认</h3><p>保护用户避免因误操作执行危险动作的最简单方法是要求用户进行明确的确认。最简单的方法是使用对话框，该对话框会强制用户从一组小动作中选择。在Shiny中，你可以使用<a href="https://rdrr.io/pkg/shiny/man/modalDialog.html">modalDialog()</a>创建一个对话框。这被称为“模态”对话框，因为它创建了一种新的交互“模式”；在处理对话框之前，你无法与主应用程序进行交互。</p><p>假设你有一个Shiny应用程序，用于从目录中删除一些文件（或从数据库中删除一些行等）。这个操作很难撤销，因此你需要确保用户确实想要这么做。你可以创建一个对话框，如图<code>8.10</code>所示，要求用户进行明确的确认，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">modal_confirm <span class="operator">&lt;-</span> modalDialog<span class="punctuation">(</span></span><br><span class="line">  <span class="string">&quot;Are you sure you want to continue?&quot;</span><span class="punctuation">,</span></span><br><span class="line">  title <span class="operator">=</span> <span class="string">&quot;Deleting files&quot;</span><span class="punctuation">,</span></span><br><span class="line">  footer <span class="operator">=</span> tagList<span class="punctuation">(</span></span><br><span class="line">    actionButton<span class="punctuation">(</span><span class="string">&quot;cancel&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Cancel&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    actionButton<span class="punctuation">(</span><span class="string">&quot;ok&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Delete&quot;</span><span class="punctuation">,</span> <span class="built_in">class</span> <span class="operator">=</span> <span class="string">&quot;btn btn-danger&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/1fd6b657c2fd4df4ef9de687459e433e0b6144f4/93f7d/demos/action-feedback/dialog.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/1fd6b657c2fd4df4ef9de687459e433e0b6144f4/93f7d/demos/action-feedback/dialog.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图 8.10：检查是否要删除某些文件的对话框。"></p><p>在创建对话框时，需要注意一些虽小但重要的细节：</p><ul><li><p>按钮应该怎么命名？最好描述得具体一些，因此要避免使用“是&#x2F;否”或“继续&#x2F;取消”，而应该复述关键的动词。</p></li><li><p>按钮应该如何排序？你是把“取消”放在前面（像Mac那样），还是把“继续”放在前面（像Windows那样）？你最好的选择是模仿大多数人将使用的平台。</p></li><li><p>你能让危险选项更明显吗？这里我使用了<code>class = &quot;btn btn-danger&quot;</code>来突出显示按钮。</p></li></ul><p>Jakob Nielsen在<a href="http://www.useit.com/alertbox/ok-cancel.html">http://www.useit.com/alertbox/ok-cancel.html</a>上给出了更多好建议。</p><p>让我们在一个真实（尽管很简单）的应用程序中使用这个对话框。我们的用户界面暴露了一个“删除所有文件”的按钮：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;delete&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Delete all files?&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>在<code>server()</code>中有两个新的想法：</p><ul><li><p>我们使用<a href="https://rdrr.io/pkg/shiny/man/showModal.html">showModal()</a>和<a href="https://rdrr.io/pkg/shiny/man/showModal.html">removeModal()</a>来显示和隐藏对话框。</p></li><li><p>我们观察由UI从<code>modal_confirm</code>生成的事件。这些对象不是静态地在ui中创建的，而是由<code>server()</code>中的<code>showModal()</code>动态添加的。在第<code>10</code>章中，你将更详细地看到这个想法。</p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>delete<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    showModal<span class="punctuation">(</span>modal_confirm<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>ok<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;Files deleted&quot;</span><span class="punctuation">)</span></span><br><span class="line">    removeModal<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>cancel<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    removeModal<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="8-4-2-撤消操作"><a href="#8-4-2-撤消操作" class="headerlink" title="8.4.2 撤消操作"></a>8.4.2 撤消操作</h3><p>明确的确认对于很少执行且具有破坏性的操作最有用。如果你想要减少因频繁操作而产生的错误，那么应该避免使用它。例如，这种技术不适用于Twitter——如果有一个对话框说“你确定要发这条推文吗？”你会很快学会自动点击“是”，并且在发送推文10秒后注意到拼写错误时，仍然会感到同样的后悔。</p><p>在这种情况下，更好的方法是在实际执行操作前等待几秒钟，给用户一个发现并撤销任何问题的机会。这并不是真正的撤销（因为你实际上没有做任何事情），但这是一个让用户能够理解的词汇。</p><p>我将用一个我个人希望拥有撤销按钮的网站——Twitter来举例说明这项技术。Twitter用户界面的本质非常简单：有一个文本区域用来编辑推文，还有一个发送按钮：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  textAreaInput<span class="punctuation">(</span><span class="string">&quot;message&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    label <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> </span><br><span class="line">    placeholder <span class="operator">=</span> <span class="string">&quot;What&#x27;s happening?&quot;</span><span class="punctuation">,</span></span><br><span class="line">    rows <span class="operator">=</span> <span class="number">3</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  actionButton<span class="punctuation">(</span><span class="string">&quot;tweet&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Tweet&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>服务器函数相当复杂，需要一些我们尚未讨论过的技术。不要太担心理解代码，要专注于基本思路：我们使用一些<a href="https://rdrr.io/pkg/shiny/man/observeEvent.html">observeEvent()</a>特殊的参数，以便在几秒钟后运行一些代码。主要的新想法是，我们捕获<code>observeEvent()</code>的结果并将其保存到一个变量中；这样我们就可以销毁观察者，从而确保实际发送推文的代码永远不会被执行。你可以尝试访问实时应用程序<a href="https://hadley.shinyapps.io/ms-undo">https://hadley.shinyapps.io/ms-undo</a>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">runLater <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>action<span class="punctuation">,</span> seconds <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span></span><br><span class="line">    invalidateLater<span class="punctuation">(</span>seconds <span class="operator">*</span> <span class="number">1000</span><span class="punctuation">)</span><span class="punctuation">,</span> action<span class="punctuation">,</span> </span><br><span class="line">    ignoreInit <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> </span><br><span class="line">    once <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> </span><br><span class="line">    ignoreNULL <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">    autoDestroy <span class="operator">=</span> <span class="literal">FALSE</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  waiting <span class="operator">&lt;-</span> <span class="literal">NULL</span></span><br><span class="line">  last_message <span class="operator">&lt;-</span> <span class="literal">NULL</span></span><br><span class="line">  </span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>tweet<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    notification <span class="operator">&lt;-</span> glue<span class="operator">::</span>glue<span class="punctuation">(</span><span class="string">&quot;Tweeted &#x27;&#123;input$message&#125;&#x27;&quot;</span><span class="punctuation">)</span></span><br><span class="line">    last_message <span class="operator">&lt;&lt;-</span> input<span class="operator">$</span>message</span><br><span class="line">    updateTextAreaInput<span class="punctuation">(</span>session<span class="punctuation">,</span> <span class="string">&quot;message&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">    showNotification<span class="punctuation">(</span></span><br><span class="line">      notification<span class="punctuation">,</span></span><br><span class="line">      action <span class="operator">=</span> actionButton<span class="punctuation">(</span><span class="string">&quot;undo&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Undo?&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      duration <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">      closeButton <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">      id <span class="operator">=</span> <span class="string">&quot;tweeted&quot;</span><span class="punctuation">,</span></span><br><span class="line">      type <span class="operator">=</span> <span class="string">&quot;warning&quot;</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">    waiting <span class="operator">&lt;&lt;-</span> runLater<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">      cat<span class="punctuation">(</span><span class="string">&quot;Actually sending tweet...\n&quot;</span><span class="punctuation">)</span></span><br><span class="line">      removeNotification<span class="punctuation">(</span><span class="string">&quot;tweeted&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>undo<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    waiting<span class="operator">$</span>destroy<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    showNotification<span class="punctuation">(</span><span class="string">&quot;Tweet retracted&quot;</span><span class="punctuation">,</span> id <span class="operator">=</span> <span class="string">&quot;tweeted&quot;</span><span class="punctuation">)</span></span><br><span class="line">    updateTextAreaInput<span class="punctuation">(</span>session<span class="punctuation">,</span> <span class="string">&quot;message&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> last_message<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="8-4-3-回收站"><a href="#8-4-3-回收站" class="headerlink" title="8.4.3 回收站"></a>8.4.3 回收站</h3><p>对于几天后可能会后悔的操作，一种更高级的模式是在计算机上实现类似回收站或垃圾箱的功能。当你删除一个文件时，它并不会被永久删除，而是被移动到一个暂存区，需要执行另一个操作才能清空。这就像是一个强化版的“撤销”选项，你有很长的时间来后悔你的操作。这也有点像确认操作，你需要执行两个分开的操作才能使删除操作永久生效。</p><p>这种技术的主要缺点是实现起来相当复杂（你需要有一个单独的“暂存区”来存储撤销操作所需的信息），并且需要用户定期干预以避免信息积累。因此，我认为除了最复杂的Shiny应用程序之外，这种技术都超出了其他应用程序的范围，所以这里我不会展示它的实现方法。</p><h2 id="8-5-总结"><a href="#8-5-总结" class="headerlink" title="8.5 总结"></a>8.5 总结</h2><p>本章为你提供了一些工具，帮助你向用户传达应用程序正在发生的事情。从某种意义上说，这些技术大多是可选的。虽然你的应用程序没有它们也能工作，但它们的精心应用会对用户体验的质量产生巨大影响。当你是应用程序的唯一用户时，通常可以省略反馈，但使用它的人越多，精心设计的通知就越能发挥作用。</p><p>在下一章中，你将学习如何向用户传输文件。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——7-图形</title>
      <link href="/post/6685.html"/>
      <url>/post/6685.html</url>
      
        <content type="html"><![CDATA[<h1 id="7-图形"><a href="#7-图形" class="headerlink" title="7 图形"></a>7 图形</h1><ul><li>第7章向您展示了如何向绘图添加直接交互以及如何显示以其他方式生成的图像。</li></ul><p>我们在第 2 章中简要讨论了 <a href="">renderPlot()</a> ;它是在应用程序中显示图形的强大工具。本章将向您展示如何充分利用它来创建交互式绘图，即响应鼠标事件的绘图。您还将学习一些其他有用的技术，包括制作具有动态宽度和高度的绘图以及使用 <a href="https://rdrr.io/pkg/shiny/man/renderImage.html">renderImage()</a> 显示图像。</p><p>在本章中，我们将需要 ggplot2 和 Shiny，因为我们将其用于大多数图形的绘制。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="7-1-交互性"><a href="#7-1-交互性" class="headerlink" title="7.1 交互性"></a>7.1 交互性</h2><p><a href="https://rdrr.io/pkg/shiny/man/plotOutput.html">plotOutput()</a> 最酷的一点是，它不仅可以作为显示绘图的输出，还可以作为响应指针事件的输入。这允许您创建交互式图形，用户直接与绘图上的数据进行交互。交互式图形是一种强大的工具，具有广泛的应用范围。我没有空间向你展示所有的可能性，所以在这里我将重点介绍基础知识，然后向你指出资源以了解更多信息。</p><h3 id="7-1-1-基础知识"><a href="#7-1-1-基础知识" class="headerlink" title="7.1.1 基础知识"></a>7.1.1 基础知识</h3><p>绘图可以响应四种不同的鼠标事件： <code>click</code> 、 <code>dblclick</code> （双击）、 <code>hover</code> （当鼠标在同一位置停留一段时间时）和 <code>brush</code> （矩形选择工具）。要将这些事件转换为Shiny的输入，您需要为相应的 <code>plotOutput()</code> 参数提供一个字符串，例如 <code>plotOutput(&quot;plot&quot;, click = &quot;plot_click&quot;)</code>。这将创建一个 <code>input$plot_click</code> ，您可以使用它来处理鼠标在绘图上的单击。</p><p>下面是一个非常简单的处理鼠标单击的示例。我们注册 <code>plot_click</code> 输入，然后使用鼠标单击的坐标更新输出。图 7.1 显示了结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">,</span> click <span class="operator">=</span> <span class="string">&quot;plot_click&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  verbatimTextOutput<span class="punctuation">(</span><span class="string">&quot;info&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    plot<span class="punctuation">(</span>mtcars<span class="operator">$</span>wt<span class="punctuation">,</span> mtcars<span class="operator">$</span>mpg<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  output<span class="operator">$</span>info <span class="operator">&lt;-</span> renderPrint<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>plot_click<span class="punctuation">)</span></span><br><span class="line">    x <span class="operator">&lt;-</span> <span class="built_in">round</span><span class="punctuation">(</span>input<span class="operator">$</span>plot_click<span class="operator">$</span>x<span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line">    y <span class="operator">&lt;-</span> <span class="built_in">round</span><span class="punctuation">(</span>input<span class="operator">$</span>plot_click<span class="operator">$</span>y<span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line">    cat<span class="punctuation">(</span><span class="string">&quot;[&quot;</span><span class="punctuation">,</span> x<span class="punctuation">,</span> <span class="string">&quot;, &quot;</span><span class="punctuation">,</span> y<span class="punctuation">,</span> <span class="string">&quot;]&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/8e3506131c2af7ac0ddd07569f277dd03e05ff0e/f836c/images/action-graphics/click.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/8e3506131c2af7ac0ddd07569f277dd03e05ff0e/f836c/images/action-graphics/click.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图 7.1 单击左上角的点可更新打印的坐标 查看演示实例 https://hadley.shinyapps.io/ms-click 。"></p><p>（请注意使用 <a href="https://rdrr.io/pkg/shiny/man/req.html">req()</a> ，以确保应用在第一次单击之前不会执行任何操作，且坐标以<code>wt</code>和<code>mpg</code>变量表示。</p><p>以下各节更详细地介绍了这些事件。我们将从点击事件开始，然后简要讨论密切相关的 <code>dblclick</code> 和 <code>hover</code> 。然后，您将了解 <code>brush</code> 事件，该事件提供了一个矩形<code>brush</code>，由其四个边（ <code>xmin</code> ， <code>xmax </code>， <code>ymin </code>和 <code>ymax </code>定义。然后，我将举几个示例，使用动作结果更新绘图，然后讨论 Shiny 中交互式图形的一些局限性。</p><h3 id="7-1-2-点击"><a href="#7-1-2-点击" class="headerlink" title="7.1.2 点击"></a>7.1.2 点击</h3><p>点事件返回一个相对丰富的列表，其中包含大量信息。最重要的组件是 <code>x</code> 和 <code>y</code> ，它们在数据坐标中给出事件的位置。但我不打算谈论这种数据结构，因为你只在相对罕见的情况下需要（如果你确实想要细节，请在 Shiny 图库中使用这个应用程序）。相反，您将使用 <a href="https://rdrr.io/pkg/shiny/man/brushedPoints.html">nearPoints()</a> 帮助程序，该帮助程序返回一个数据框，其中包含单击附近的行，并处理一堆繁琐的细节。</p><p>下面是 <code>nearPoints()</code> 运行的简单示例，其中显示了有关事件附近点的数据表。图 7.2 显示了该应用的屏幕截图。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">,</span> click <span class="operator">=</span> <span class="string">&quot;plot_click&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    plot<span class="punctuation">(</span>mtcars<span class="operator">$</span>wt<span class="punctuation">,</span> mtcars<span class="operator">$</span>mpg<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    nearPoints<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> input<span class="operator">$</span>plot_click<span class="punctuation">,</span> xvar <span class="operator">=</span> <span class="string">&quot;wt&quot;</span><span class="punctuation">,</span> yvar <span class="operator">=</span> <span class="string">&quot;mpg&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">````</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">!</span><span class="punctuation">[</span>图 <span class="number">7.2</span> nearPoints<span class="punctuation">(</span><span class="punctuation">)</span> 将绘图坐标转换为数据行，从而可以轻松显示您单击的点的基础数据 查看实例 https<span class="operator">:</span><span class="operator">/</span><span class="operator">/</span>hadley.shinyapps.io<span class="operator">/</span>ms<span class="operator">-</span>nearPoints 。<span class="punctuation">]</span><span class="punctuation">(</span>https<span class="operator">:</span><span class="operator">/</span><span class="operator">/</span>d33wubrfki0l68.cloudfront.net<span class="operator">/</span><span class="number">7</span>c89122f2822dac1dbe5640e4aab942bebb46ef9<span class="operator">/</span><span class="number">8</span>d5d6<span class="operator">/</span>images<span class="operator">/</span>action<span class="operator">-</span>graphics<span class="operator">/</span>nearpoints.png<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">在这里，我们给出 `nearPoints()` 四个参数：作为绘图基础的数据框、输入事件和轴上变量的名称。如果使用 `ggplot2`，则只需提供前两个参数，因为 `xvar` 和 `yvar` 可以从绘图数据结构中自动插补。出于这个原因，我将在本章的其余部分使用 `ggplot2`。下面是使用 `ggplot2` 重新实现的上一个示例：</span><br><span class="line"></span><br><span class="line">```r</span><br><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  plotOutput(&quot;plot&quot;, click = &quot;plot_click&quot;),</span><br><span class="line">  tableOutput(&quot;data&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$plot &lt;- renderPlot(&#123;</span><br><span class="line">    ggplot(mtcars, aes(wt, mpg)) + geom_point()</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line">  </span><br><span class="line">  output$data &lt;- renderTable(&#123;</span><br><span class="line">    req(input$plot_click)</span><br><span class="line">    nearPoints(mtcars, input$plot_click)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您可能想知道 <code>nearPoints()</code> 究竟返回了什么。这是使用 <a href="https://rdrr.io/r/base/browser.html">browser()</a> 的好地方，我们在 Section 5.2.3 中讨论过：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    req<span class="punctuation">(</span>input<span class="operator">$</span>plot_click<span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">browser</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    nearPoints<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> input<span class="operator">$</span>plot_click<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>现在，在我启动应用程序并单击一个点后，我被放入交互式调试器，在那里我可以运行 <code>nearPoints()</code> 并查看它返回的内容：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nearPoints<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> input<span class="operator">$</span>plot_click<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;             mpg cyl disp hp drat   wt  qsec vs am gear carb</span></span><br><span class="line"><span class="comment">#&gt; Datsun 710 22.8   4  108 93 3.85 2.32 18.61  1  1    4    1</span></span><br></pre></td></tr></table></figure><p>使用 <code>nearPoints()</code> 的另一种方法是使用 <code>allRows = TRUE</code> 和 <code>addDist = TRUE</code> 。这将返回包含两个新列的原始数据框：</p><ul><li><code>dist_</code> 给出行和事件之间的距离（以像素为单位）。</li><li><code>selected_</code> 表示它是否靠近 click 事件（即它是否是 <code>allRows = FALSE</code>) 时返回的行。</li></ul><p>我们稍后会看到一个例子。</p><h3 id="7-1-3-其他点事件"><a href="#7-1-3-其他点事件" class="headerlink" title="7.1.3 其他点事件"></a>7.1.3 其他点事件</h3><p>同样的方法对 <code>click</code>、<code>dblclick</code> 和 <code>hover</code> 同样有效：只需更改参数的名称。如果需要，可以通过提供 <a href="https://rdrr.io/pkg/shiny/man/clickOpts.html">clickOps()</a>、<a href="https://rdrr.io/pkg/shiny/man/clickOpts.html">dblclickOps()</a> 或 <a href="https://rdrr.io/pkg/shiny/man/clickOpts.html">hoverOps()</a> 而不是给出输入 id 的字符串来获得对事件的额外控制。这些很少需要，所以我这里不讨论它们；请参阅文档以获取详细信息。</p><p>您可以在一个图上使用多种交互类型。只需确保向用户解释他们可以做什么：使用鼠标事件与应用程序交互的一个缺点是它们不能立即被发现。</p><h3 id="7-1-4-刷涂（Brushing）"><a href="#7-1-4-刷涂（Brushing）" class="headerlink" title="7.1.4 刷涂（Brushing）"></a>7.1.4 刷涂（Brushing）</h3><p>在绘图上选择点的另一种方法是使用画笔，画笔是由四个边定义的矩形选择。在 Shiny 中，一旦掌握了 <code>click</code> 和 <code>nearPoints()</code>，使用画笔就非常简单：只需切换到 <code>brush</code> 参数和 <a href="https://rdrr.io/pkg/shiny/man/brushedPoints.html">brushedPoints()</a> 辅助函数。</p><p>这是另一个简单的例子，显示了画笔选择了哪些点。图7.3显示了结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">,</span> brush <span class="operator">=</span> <span class="string">&quot;plot_brush&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;data&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    ggplot<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> aes<span class="punctuation">(</span>wt<span class="punctuation">,</span> mpg<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> geom_point<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>data <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    brushedPoints<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> input<span class="operator">$</span>plot_brush<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/72c746e68848220485ba12c028382dd0de8a3a00/fc713/images/action-graphics/brushedpoints.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/72c746e68848220485ba12c028382dd0de8a3a00/fc713/images/action-graphics/brushedpoints.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图 7.3 设置 brush 参数为用户提供了一个可拖动的“画笔”。在此应用程序中，画笔下方的点显示在表格中。在 https://hadley.shinyapps.io/ms-brushedPoints 上查看演示。"></p><p>使用 <a href="https://rdrr.io/pkg/shiny/man/brushOpts.html">brushOptions()</a> 控制颜色（填充和描边），或将刷涂限制为<code>direction = &quot;x&quot;</code> 或 <code>&quot;y&quot;</code> 的单个维度（例如，用于刷涂时间序列）。</p><h3 id="7-1-5-修改绘图"><a href="#7-1-5-修改绘图" class="headerlink" title="7.1.5 修改绘图"></a>7.1.5 修改绘图</h3><p>到目前为止，我们已经展示了交互的结果。但是，交互的真正魅力在于，当你显示你正在交互的同一图中的变化时。不幸的是，这需要你尚未学过的先进反应技术：<a href="https://rdrr.io/pkg/shiny/man/reactiveVal.html">reactiveVal()</a>。我们将在第16章中回到<code>reactiveVal()</code>，但我想在这里展示它，因为它是一种非常有用的技术。你可能需要在阅读了那章之后重新阅读这一节，但即使没有所有的理论，你也会对潜在的应用有所了解。</p><p>正如你可能从名字中猜到的那样，<code>reactiveVal()</code> 非常类似于 <code>reactive()</code>。通过调用带有初始值的 <code>reactiveVal()</code> 来创建反应性值，并以与反应性相同的方式检索该值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">val <span class="operator">&lt;-</span> reactiveVal<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span></span><br><span class="line">val<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">### #&gt; [1] 10</span></span><br></pre></td></tr></table></figure><p>最大的区别是，你也可以更新一个响应式值，并且引用该值的所有反应式使用者都将重新计算。响应式值使用特殊的语法进行更新——你像调用函数一样调用它，第一个参数是新的值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">val<span class="punctuation">(</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line">val<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] 20</span></span><br></pre></td></tr></table></figure><p>这意味着使用当前值更新反应值看起来像这样：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">val<span class="punctuation">(</span>val<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">val<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] 21</span></span><br></pre></td></tr></table></figure><p>不幸的是，如果你真的想在控制台中运行这段代码，你会得到一个错误，因为它必须在响应式环境中运行。这使得实验和调试更具挑战性，因为你需要 <a href="https://rdrr.io/r/base/browser.html">browser()</a> 或类似方法来暂停 <a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp()</a> 调用中的执行。这是我们将在第 16 章后面讨论的挑战之一。</p><p>现在，让我们把学习 <code>reactiveVal()</code> 的挑战放在一边，告诉你为什么你可能会烦恼。想象一下，您想要可视化单击与图上的点之间的距离。在下面的应用程序中，我们首先创建一个反应值来存储这些距离，并使用一个常量对其进行初始化，该常量将在我们单击任何内容之前使用。然后，我们使用 <a href="https://rdrr.io/pkg/shiny/man/observeEvent.html">observeEvent()</a> 来更新单击鼠标时的反应值，并使用 <code>ggplot</code> 可视化具有点大小的距离。总而言之，这看起来像下面的代码，结果如图 7.4 所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">set.seed<span class="punctuation">(</span><span class="number">1014</span><span class="punctuation">)</span></span><br><span class="line">df <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>x <span class="operator">=</span> rnorm<span class="punctuation">(</span><span class="number">100</span><span class="punctuation">)</span><span class="punctuation">,</span> y <span class="operator">=</span> rnorm<span class="punctuation">(</span><span class="number">100</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">,</span> click <span class="operator">=</span> <span class="string">&quot;plot_click&quot;</span><span class="punctuation">,</span> <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  dist <span class="operator">&lt;-</span> reactiveVal<span class="punctuation">(</span><span class="built_in">rep</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> nrow<span class="punctuation">(</span>df<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>plot_click<span class="punctuation">,</span></span><br><span class="line">    dist<span class="punctuation">(</span>nearPoints<span class="punctuation">(</span>df<span class="punctuation">,</span> input<span class="operator">$</span>plot_click<span class="punctuation">,</span> allRows <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> addDist <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="operator">$</span>dist_<span class="punctuation">)</span>  </span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    df<span class="operator">$</span>dist <span class="operator">&lt;-</span> dist<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    ggplot<span class="punctuation">(</span>df<span class="punctuation">,</span> aes<span class="punctuation">(</span>x<span class="punctuation">,</span> y<span class="punctuation">,</span> size <span class="operator">=</span> dist<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">      geom_point<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">      scale_size_area<span class="punctuation">(</span>limits <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span> <span class="number">1000</span><span class="punctuation">)</span><span class="punctuation">,</span> max_size <span class="operator">=</span> <span class="number">10</span><span class="punctuation">,</span> guide <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/28b14f04bca5f6a00be49c50bdc09220ff421283/059c4/images/action-graphics/modifying-size-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/28b14f04bca5f6a00be49c50bdc09220ff421283/059c4/images/action-graphics/modifying-size-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图 7.4 此应用使用 reactiveVal() 来存储到上次单击的点的距离，然后将其映射到点大小。在这里，我显示了单击最左侧的点的结果 See live at https://hadley.shinyapps.io/ms-modifying-size 。"></p><p>这里有两个重要的ggplot2技术需要注意：</p><ul><li>在绘制之前，我将距离添加到数据框中。我认为在可视化之前，将相关变量放在数据框中是一种很好的做法。</li><li>我为 <a href="https://ggplot2.tidyverse.org/reference/scale_size.html">scale_size_area()</a> 设置了限制，以确保点击之间的尺寸具有可比性。为了找到正确的范围，我做了一些交互式实验，但如有需要，您可以计算出确切的细节（参见本章末尾的练习）。</li></ul><p>有一个更复杂的想法。我想用画笔逐步添加点到一个选择。在这里，我使用不同的颜色显示选择，但你可以想象许多其他的应用程序。为了使这个工作，我将<code>reactiveVal()</code>初始化为一个<code>FALSE</code>的向量，然后使用<a href="https://rdrr.io/pkg/shiny/man/brushedPoints.html">brushedPoints()</a>和|将画笔下的任何点添加到选择。为了给用户一种重新开始的方式，我双击重置选择。图7.5显示了运行应用程序的几个截图。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">,</span> brush <span class="operator">=</span> <span class="string">&quot;plot_brush&quot;</span><span class="punctuation">,</span> dblclick <span class="operator">=</span> <span class="string">&quot;plot_reset&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  selected <span class="operator">&lt;-</span> reactiveVal<span class="punctuation">(</span><span class="built_in">rep</span><span class="punctuation">(</span><span class="literal">FALSE</span><span class="punctuation">,</span> nrow<span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>plot_brush<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    brushed <span class="operator">&lt;-</span> brushedPoints<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> input<span class="operator">$</span>plot_brush<span class="punctuation">,</span> allRows <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="operator">$</span>selected_</span><br><span class="line">    selected<span class="punctuation">(</span>brushed <span class="operator">|</span> selected<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  observeEvent<span class="punctuation">(</span>input<span class="operator">$</span>plot_reset<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">    selected<span class="punctuation">(</span><span class="built_in">rep</span><span class="punctuation">(</span><span class="literal">FALSE</span><span class="punctuation">,</span> nrow<span class="punctuation">(</span>mtcars<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    mtcars<span class="operator">$</span>sel <span class="operator">&lt;-</span> selected<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">    ggplot<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> aes<span class="punctuation">(</span>wt<span class="punctuation">,</span> mpg<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">      geom_point<span class="punctuation">(</span>aes<span class="punctuation">(</span>colour <span class="operator">=</span> sel<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">      scale_colour_discrete<span class="punctuation">(</span>limits <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;TRUE&quot;</span><span class="punctuation">,</span> <span class="string">&quot;FALSE&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/da63b234ad81bc5e1e592a904a1eaed0f4ee092d/794de/images/action-graphics/persistent-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/da63b234ad81bc5e1e592a904a1eaed0f4ee092d/794de/images/action-graphics/persistent-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><img src="https://d33wubrfki0l68.cloudfront.net/8c5a7aead6640c2720f28c4d05925d3a29e92730/e8f2e/images/action-graphics/persistent-3.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/8c5a7aead6640c2720f28c4d05925d3a29e92730/e8f2e/images/action-graphics/persistent-3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图 7.5 此应用程序使画笔“持续”，因此拖动它会增加当前选择。"></p><p>再次，我设定了比例的限制，以确保图例（和颜色）在第一次点击后不会改变。</p><h3 id="7-1-6-互动限制"><a href="#7-1-6-互动限制" class="headerlink" title="7.1.6 互动限制"></a>7.1.6 互动限制</h3><p>在我们继续之前，了解交互式图中的基本数据流以了解其局限性非常重要。基本流程是这样的：</p><ul><li>JavaScript捕获鼠标事件。</li><li>Shiny将鼠标事件数据发送回R，告诉应用程序输入已过时。</li><li>重新计算所有下游反应式使用者。</li><li><code>plotOutput()</code>生成一个新的PNG并将其发送到浏览器。</li></ul><p>对于本地应用程序，瓶颈往往是绘制图表所花费的时间。根据图表的复杂程度，这可能需要几分之一秒的时间。但对于托管应用程序，您还必须考虑将事件从浏览器传输到R所需的时间，然后将渲染的图表从R传输回浏览器。</p><p>一般来说，这意味着不可能创建动作和响应被视为即时的Shiny应用程序（即绘图似乎与您的操作同时更新）。如果您需要这种速度，您必须在JavaScript中执行更多的计算。一种方法是使用一个封装了JavaScript图形库的R包。现在，在我写这本书的时候，我认为你会得到<code>plotly</code>包的最佳体验，正如Carson Sievert在《<a href="https://plotly-r.com/">使用R、plotly和shiny进行基于Web的交互式数据可视化</a>》一书中所述。</p><h2 id="7-2-动态高度和宽度"><a href="#7-2-动态高度和宽度" class="headerlink" title="7.2 动态高度和宽度"></a>7.2 动态高度和宽度</h2><p>本章的其余部分不如交互式图形那么令人兴奋，但包含了一些重要的内容。</p><p>首先，可以使绘图大小具有反应性，因此宽度和高度会根据用户操作而变化。为此，向<code>renderPlot()</code>的<code>width</code>和<code>height</code>参数提供零参数函数，这些参数现在必须在server中定义，而不是在UI中定义，因为它们可以更改。这些函数不应有参数，并返回所需的大小（以像素为单位）。它们在反应式环境中进行评估，以便您可以动态地调整绘图的大小。</p><p>以下应用程序演示了基本思想。它提供了两个直接控制绘图大小的滑块。图 7.6 中显示了几个示例屏幕截图。请注意，当您调整绘图大小时，数据保持不变：您不会获得新的随机数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;height&quot;</span><span class="punctuation">,</span> <span class="string">&quot;height&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">500</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">250</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;width&quot;</span><span class="punctuation">,</span> <span class="string">&quot;width&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">500</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">250</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">,</span> width <span class="operator">=</span> <span class="number">250</span><span class="punctuation">,</span> height <span class="operator">=</span> <span class="number">250</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span></span><br><span class="line">    width <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span><span class="punctuation">)</span> input<span class="operator">$</span>width<span class="punctuation">,</span></span><br><span class="line">    height <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span><span class="punctuation">)</span> input<span class="operator">$</span>height<span class="punctuation">,</span></span><br><span class="line">    res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      plot<span class="punctuation">(</span>rnorm<span class="punctuation">(</span><span class="number">20</span><span class="punctuation">)</span><span class="punctuation">,</span> rnorm<span class="punctuation">(</span><span class="number">20</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><img src="https://d33wubrfki0l68.cloudfront.net/187b93086b15e4f5f6afe04cb609019d1a37b424/537a6/demos/action-graphics/resize-narrow.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/187b93086b15e4f5f6afe04cb609019d1a37b424/537a6/demos/action-graphics/resize-narrow.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></td><td><img src="https://d33wubrfki0l68.cloudfront.net/46c07091eaf6a8cd82a342e6fc55692e54740b7c/d0566/demos/action-graphics/resize-wide.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/46c07091eaf6a8cd82a342e6fc55692e54740b7c/d0566/demos/action-graphics/resize-wide.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图 7.6 您可以使绘图大小动态化，以便它响应用户操作。该图显示了更改宽度的效果。在 https://hadley.shinyapps.io/ms-resize 上查看演示。"></td></tr><tr><td>图 7.6 您可以使绘图大小动态化，以便它响应用户操作。该图显示了更改宽度的效果。</td><td>在 <a href="https://hadley.shinyapps.io/ms-resize">https://hadley.shinyapps.io/ms-resize</a> 上查看演示。</td></tr><tr><td>在实际应用中，您将在 <code>width</code> 和 <code>height</code> 函数中使用更复杂的表达式。例如，如果您在 ggplot2 中使用分面图，则可以使用它来增加图的大小，以保持各个分面大小大致相同。</td><td></td></tr></tbody></table><h2 id="7-3-图片"><a href="#7-3-图片" class="headerlink" title="7.3 图片"></a>7.3 图片</h2><p>如果要显示现有图像（而不是绘图），则可以使用 <a href="https://rdrr.io/pkg/shiny/man/renderImage.html">renderImage()</a> 。例如，您可能有一个要向用户显示的照片目录。以下应用通过展示可爱的小狗照片来说明 <code>renderImage()</code> 的基础知识。这些照片来自 <a href="https://unsplash.com/">https://unsplash.com</a> ，我最喜欢的免版税库存照片来源。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">puppies <span class="operator">&lt;-</span> tibble<span class="operator">::</span>tribble<span class="punctuation">(</span></span><br><span class="line">  <span class="operator">~</span>breed<span class="punctuation">,</span> <span class="operator">~</span> id<span class="punctuation">,</span> <span class="operator">~</span>author<span class="punctuation">,</span> </span><br><span class="line">  <span class="string">&quot;corgi&quot;</span><span class="punctuation">,</span> <span class="string">&quot;eoqnr8ikwFE&quot;</span><span class="punctuation">,</span><span class="string">&quot;alvannee&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;labrador&quot;</span><span class="punctuation">,</span> <span class="string">&quot;KCdYn0xu2fU&quot;</span><span class="punctuation">,</span> <span class="string">&quot;shaneguymon&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;spaniel&quot;</span><span class="punctuation">,</span> <span class="string">&quot;TzjMd7i5WQI&quot;</span><span class="punctuation">,</span> <span class="string">&quot;_redo_&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;id&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Pick a breed&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> setNames<span class="punctuation">(</span>puppies<span class="operator">$</span>id<span class="punctuation">,</span> puppies<span class="operator">$</span>breed<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  htmlOutput<span class="punctuation">(</span><span class="string">&quot;source&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  imageOutput<span class="punctuation">(</span><span class="string">&quot;photo&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>photo <span class="operator">&lt;-</span> renderImage<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="built_in">list</span><span class="punctuation">(</span></span><br><span class="line">      src <span class="operator">=</span> file.path<span class="punctuation">(</span><span class="string">&quot;puppy-photos&quot;</span><span class="punctuation">,</span> paste0<span class="punctuation">(</span>input<span class="operator">$</span>id<span class="punctuation">,</span> <span class="string">&quot;.jpg&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      contentType <span class="operator">=</span> <span class="string">&quot;image/jpeg&quot;</span><span class="punctuation">,</span></span><br><span class="line">      width <span class="operator">=</span> <span class="number">500</span><span class="punctuation">,</span></span><br><span class="line">      height <span class="operator">=</span> <span class="number">650</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> deleteFile <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>source <span class="operator">&lt;-</span> renderUI<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    info <span class="operator">&lt;-</span> puppies<span class="punctuation">[</span>puppies<span class="operator">$</span>id <span class="operator">==</span> input<span class="operator">$</span>id<span class="punctuation">,</span> <span class="punctuation">,</span> drop <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">]</span></span><br><span class="line">    HTML<span class="punctuation">(</span>glue<span class="operator">::</span>glue<span class="punctuation">(</span><span class="string">&quot;&lt;p&gt;</span></span><br><span class="line"><span class="string">      &lt;a href=&#x27;https://unsplash.com/photos/&#123;info$id&#125;&#x27;&gt;original&lt;/a&gt; by</span></span><br><span class="line"><span class="string">      &lt;a href=&#x27;https://unsplash.com/@&#123;info$author&#125;&#x27;&gt;&#123;info$author&#125;&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/p&gt;&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/70de2ab74b8c9f3984ea503ef40af3930324c62a/43790/demos/action-graphics/puppies-corgi.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/70de2ab74b8c9f3984ea503ef40af3930324c62a/43790/demos/action-graphics/puppies-corgi.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图 7.7 使用 renderImage() 显示小狗可爱图片的应用。在 https://hadley.shinyapps.io/ms-puppies 上查看演示。"><br><code>renderImage()</code> 需要返回一个列表。唯一关键的参数是 <code>src</code>，一个指向图像文件的本地路径。此外，您还可以提供：</p><ul><li><p><code>content-type</code>，它定义了图像的 MIME 类型。如果没有提供，Shiny 将从文件扩展名中猜测，因此只有在图像没有扩展名时才需要提供此内容。</p></li><li><p>图像的<code>width</code> 和 <code>height</code>（如果已知）。</p></li><li><p>任何其他参数，如 <code>class</code> 或 <code>alt</code>，都将作为属性添加到 HTML 中的<code>&lt;img&gt;</code>标记中。</p></li></ul><p>您还必须提供<code>deleteFile</code>参数。不幸的是，<code>renderImage()</code>最初是设计用于处理临时文件的，因此在渲染后会自动删除图像。这显然是非常危险的，因此在Shiny 1.5.0中改变了行为。现在Shiny不再删除图像，而是强制您明确选择想要的行为。</p><p>你可以在<br><a href="https://shiny.rstudio.com/articles/images.html">https://shiny.rstudio.com/articles/images.html</a><br>了解更多关于 <code>renderImage()</code> 的信息，并查看你可能使用它的其他方式。</p><h2 id="7-4-总结"><a href="#7-4-总结" class="headerlink" title="7.4 总结"></a>7.4 总结</h2><p>可视化是数据交流的强大方式，本章为您提供了几种高级技术来增强您的Shiny应用程序。接下来，您将学习向用户提供有关应用程序中正在发生的事情的反馈的技术，这对于需要花费大量时间的操作尤为重要。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——6-布局、主题、HTML</title>
      <link href="/post/6718.html"/>
      <url>/post/6718.html</url>
      
        <content type="html"><![CDATA[<h1 id="6-布局，主题，HTML"><a href="#6-布局，主题，HTML" class="headerlink" title="6 布局，主题，HTML"></a>6 布局，主题，HTML</h1><ul><li>第6章详细介绍了在页面上布局输入和输出组件的各种方法，以及如何使用主题定制它们的外观。</li></ul><h2 id="6-1-前言"><a href="#6-1-前言" class="headerlink" title="6.1 前言"></a>6.1 前言</h2><p>在本章中，你将解锁一些控制应用程序整体外观的新工具。我们将首先讨论页面布局（包括单页和“多页”），让你组织你的输入和输出。然后你将学习Bootstrap，Shiny使用的CSS工具包，以及如何用主题定制它的整体视觉外观。最后，我们将简要讨论一下幕后发生了什么，这样如果你知道HTML和CSS，你就可以进一步定制Shiny应用程序。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="6-2-单页布局"><a href="#6-2-单页布局" class="headerlink" title="6.2 单页布局"></a>6.2 单页布局</h2><p>在第2章中，你学习了构成应用程序交互组件的输入和输出。但是我没有谈到如何在页面上布局它们，而是使用 <a href="https://rdrr.io/pkg/shiny/man/fluidPage.html">fluidPage()</a> 尽可能快地将它们拼凑在一起。虽然这对于学习 Shiny 来说是很好的，但它并不能创建可用或视觉上吸引人的应用程序，所以现在是时候学习一些更多的布局函数了。</p><p>布局功能提供了应用程序的高级视觉结构。布局由函数调用的层次结构创建，其中R中的层次结构与生成的HTML中的层次结构相匹配。这有助于您理解布局代码。例如，当您查看这样的布局代码时：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fluidPage<span class="punctuation">(</span></span><br><span class="line">  titlePanel<span class="punctuation">(</span><span class="string">&quot;Hello Shiny!&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      sliderInput<span class="punctuation">(</span><span class="string">&quot;obs&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Observations:&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">1000</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">500</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      plotOutput<span class="punctuation">(</span><span class="string">&quot;distPlot&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>关注函数调用的层次结构：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fluidPage<span class="punctuation">(</span></span><br><span class="line">  titlePanel<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>即使你还没有学习这些函数，通过阅读它们的名字，你也可以猜到发生了什么。你可能会想象这段代码会生成一个经典的应用程序设计：顶部有一个标题栏，后面是一个侧边栏（包含一个滑块）和主面板（包含一个绘图）。通过缩进轻松查看层次结构的能力是使用一致风格的一个好主意的原因之一。</p><p>在本节的剩余部分中，我将讨论帮助您设计单页应用程序的功能，然后在下一节中讨论多页应用程序。我还建议您查看Shiny Application布局指南；它有点过时，但包含一些有用的精华。</p><h3 id="6-2-1-页面功能"><a href="#6-2-1-页面功能" class="headerlink" title="6.2.1 页面功能"></a>6.2.1 页面功能</h3><p>最重要的，但最无趣的布局函数是 <a href="https://rdrr.io/pkg/shiny/man/fluidPage.html">fluidPage()</a>，到目前为止，您在几乎每个示例中都看到了它。但是它做了什么，如果单独使用它会怎么样？图6.1显示了结果：它看起来像一个非常无聊的应用程序，但幕后有很多事情，因为 <code>fluidPage()</code> 设置了 Shiny 所需的所有 HTML、CSS 和 JavaScript。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/ad1d199cecafc2c2be10425930b1dcfb5e8dd5d7/1f5c9/images/action-layout/fluid-page.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/ad1d199cecafc2c2be10425930b1dcfb5e8dd5d7/1f5c9/images/action-layout/fluid-page.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.1 仅由 fluidPage() 构成的UI"></p><p>除了<code>fluidPage()</code>，Shiny还提供了其他几个页面函数，在更特殊的情况下可以派上用场：<a href="https://rdrr.io/pkg/shiny/man/fixedPage.html">fixedPage()</a>和<a href="https://rdrr.io/pkg/shiny/man/fillPage.html">fillPage()</a>。<code>fixedPage()</code>的工作原理类似于<code>fluidPage()</code>，但有一个固定的最大宽度，可以防止你的应用程序在更大的屏幕上变得不合理地宽。<code>fillPage()</code>填充浏览器的整个高度，如果你想制作一个占据整个屏幕的图表，它很有用。你可以在他们的文档中找到详细信息。</p><h3 id="6-2-2-带侧边栏的页面"><a href="#6-2-2-带侧边栏的页面" class="headerlink" title="6.2.2 带侧边栏的页面"></a>6.2.2 带侧边栏的页面</h3><p>要制作更复杂的布局，您需要在 <code>fluidPage()</code> 中调用布局函数。例如，要制作左侧有输入、右侧有输出的两列布局，可以使用 <a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">sidebarLayout()</a>（以及它的朋友 <a href="https://rdrr.io/pkg/shiny/man/titlePanel.html">titlePanel()</a>、 <a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">sidebarPanel()</a> 和 <a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">mainPanel()</a>）。以下代码显示了生成图 6.2 的基本结构：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fluidPage<span class="punctuation">(</span></span><br><span class="line">  titlePanel<span class="punctuation">(</span></span><br><span class="line">    <span class="comment"># app title/description</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      <span class="comment"># inputs</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      <span class="comment"># outputs</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/37aa2b1c61a6141cc95188bffd0cfc782fdb27d5/b6aa6/diagrams/action-layout/sidebar.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/37aa2b1c61a6141cc95188bffd0cfc782fdb27d5/b6aa6/diagrams/action-layout/sidebar.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.2 基础app的侧边栏结构"></p><p>为了让其更加真实，让我们增加一个输入和输出以创建一个演示中心极限定理的非常简单的应用程序，如图6.3所示。如果你自己运行这个应用程序，你可以增加样本数量以看到分布变得更加正常。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  titlePanel<span class="punctuation">(</span><span class="string">&quot;Central limit theorem&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;m&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Number of samples:&quot;</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      plotOutput<span class="punctuation">(</span><span class="string">&quot;hist&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>hist <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    means <span class="operator">&lt;-</span> replicate<span class="punctuation">(</span><span class="number">1e4</span><span class="punctuation">,</span> mean<span class="punctuation">(</span>runif<span class="punctuation">(</span>input<span class="operator">$</span>m<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    hist<span class="punctuation">(</span>means<span class="punctuation">,</span> breaks <span class="operator">=</span> <span class="number">20</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/4558a562a7be6b3c8bca4a25f3122d7322b536cc/6e6a0/demos/action-layout/sidebar.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/4558a562a7be6b3c8bca4a25f3122d7322b536cc/6e6a0/demos/action-layout/sidebar.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.3 常见的应用程序设计是将控件放在侧边栏中，并将结果显示在主面板中"></p><h3 id="6-2-3-多行"><a href="#6-2-3-多行" class="headerlink" title="6.2.3 多行"></a>6.2.3 多行</h3><p>在幕后，<a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">sidebarLayout()</a>建立在灵活的多行布局之上，您可以直接使用它来创建更具视觉复杂性的应用程序。像往常一样，您从<code>fluidPage()</code>开始。然后，您使用<a href="https://rdrr.io/pkg/shiny/man/fluidPage.html">fluidRow()</a>创建行，使用<a href="https://rdrr.io/pkg/shiny/man/column.html">column()</a>创建列。以下模板生成图6.4所示的结构：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">fluidPage<span class="punctuation">(</span></span><br><span class="line">  fluidRow<span class="punctuation">(</span></span><br><span class="line">    column<span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span> </span><br><span class="line">      ...</span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    column<span class="punctuation">(</span><span class="number">8</span><span class="punctuation">,</span> </span><br><span class="line">      ...</span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  fluidRow<span class="punctuation">(</span></span><br><span class="line">    column<span class="punctuation">(</span><span class="number">6</span><span class="punctuation">,</span> </span><br><span class="line">      ...</span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    column<span class="punctuation">(</span><span class="number">6</span><span class="punctuation">,</span> </span><br><span class="line">      ...</span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/15ea13e6dd0ba26014225718b5541abb983e0a45/7b30e/diagrams/action-layout/multirow.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/15ea13e6dd0ba26014225718b5541abb983e0a45/7b30e/diagrams/action-layout/multirow.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.4 简单多行应用程序的基础结构"></p><p>每一行由12列组成，<code>column()</code> 的第一个参数给出了要占用的列数。12列布局为您提供极大的灵活性，因为您可以轻松创建2、3或4列布局，或使用窄列创建间隔。您可以在第4.4节中看到这种布局的示例。</p><p>如果你想了解更多关于使用网格系统进行设计的知识，我强烈推荐由约瑟夫·穆勒-布罗克曼撰写的关于这个主题的经典文本：<a href="https://www.amazon.com/dp/3721201450">《平面设计中的网格系统》</a>。</p><h3 id="6-2-4-练习"><a href="#6-2-4-练习" class="headerlink" title="6.2.4 练习"></a>6.2.4 练习</h3><p><strong>6.2.4.1</strong> 阅读 <a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">sidebarLayout()</a> 的文档，确定侧边栏和主面板的宽度（以列为单位）。你能使用 fluidRow() 和 column() 重新创建它的外观吗？你缺少什么？</p><p><strong>6.2.4.2</strong> 修改中心极限定理应用程序，将侧边栏放在右侧而不是左侧。</p><p><strong>6.2.4.3</strong> 创建一个包含两个图的应用程序，每个图占一半宽度。将控件放在图下方的全宽容器中。</p><h2 id="6-3-多页布局"><a href="#6-3-多页布局" class="headerlink" title="6.3 多页布局"></a>6.3 多页布局</h2><p>随着应用程序复杂性的增加，可能无法将所有内容都放在一个页面上。在本节中，您将学习 <a href="https://rdrr.io/pkg/shiny/man/tabPanel.html">tabPanel()</a> 的各种用途，以创建多个页面的假象。这是一种假象，因为您仍然只有一个应用程序和一个基础 HTML 文件，但现在它被分解成多个部分，一次只能看到一个部分。</p><p>多页应用程序与模块搭配得特别好，你将在第19章了解模块。模块允许你以与划分用户界面相同的方式划分server函数，创建仅通过定义良好的连接进行交互的独立组件。</p><h3 id="6-3-1-选项卡集"><a href="#6-3-1-选项卡集" class="headerlink" title="6.3.1 选项卡集"></a>6.3.1 选项卡集</h3><p>将页面分解成块的简单方法是使用 <a href="https://rdrr.io/pkg/shiny/man/tabsetPanel.html">tabsetPanel()</a> 及其亲密朋友 <code>tabPanel()</code>。正如您在下面的代码中看到的，<code>tabsetPanel()</code> 为任意数量的 <code>tabPanels()</code> 创建一个容器，而 <code>tabPanels()</code> 反过来又包含任何其他 HTML 组件。图 6.5 显示了一个简单的例子。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  tabsetPanel<span class="punctuation">(</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;Import data&quot;</span><span class="punctuation">,</span> </span><br><span class="line">      fileInput<span class="punctuation">(</span><span class="string">&quot;file&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Data&quot;</span><span class="punctuation">,</span> buttonLabel <span class="operator">=</span> <span class="string">&quot;Upload...&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      textInput<span class="punctuation">(</span><span class="string">&quot;delim&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Delimiter (leave blank to guess)&quot;</span><span class="punctuation">,</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;skip&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Rows to skip&quot;</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      numericInput<span class="punctuation">(</span><span class="string">&quot;rows&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Rows to preview&quot;</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;Set parameters&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;Visualise results&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/9c03ba6941047ea3face093a70f248673f4c824a/98580/demos/action-layout/tabset.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/9c03ba6941047ea3face093a70f248673f4c824a/98580/demos/action-layout/tabset.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.5 tabsetPanel()允许用户选择单个tabPanel()进行查看"></p><p>如果您想知道用户选择了哪个选项卡，您可以将 <code>id</code> 参数提供给 <code>tabsetPanel()</code> 并将它设为输入。图6.6显示了这一点。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      textOutput<span class="punctuation">(</span><span class="string">&quot;panel&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      tabsetPanel<span class="punctuation">(</span></span><br><span class="line">        id <span class="operator">=</span> <span class="string">&quot;tabset&quot;</span><span class="punctuation">,</span></span><br><span class="line">        tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;one&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;two&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;three&quot;</span><span class="punctuation">)</span></span><br><span class="line">      <span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>panel <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    paste<span class="punctuation">(</span><span class="string">&quot;Current panel: &quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>tabset<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/a856fa6a960d4e7e7b1cd2755c91934853e0e500/f7fbe/demos/action-layout/tabset-input-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/a856fa6a960d4e7e7b1cd2755c91934853e0e500/f7fbe/demos/action-layout/tabset-input-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.6 当您使用id参数时，tabset成为输入。这允许您根据当前可见的选项卡使您的应用程序表现不同。"></p><p>注意，<code>tabsetPanel()</code>可以在应用程序中的任何地方使用；如果需要，将选项卡集嵌套在其他组件（包括选项卡集！）中是完全可以的。</p><h3 id="6-3-2-导航列表和导航栏"><a href="#6-3-2-导航列表和导航栏" class="headerlink" title="6.3.2 导航列表和导航栏"></a>6.3.2 导航列表和导航栏</h3><p>因为标签是水平显示的，所以你可以使用的标签数量有一个基本的限制，特别是如果它们的标题很长。<a href="https://rdrr.io/pkg/shiny/man/navbarPage.html">navbarPage()</a>和<a href="https://rdrr.io/pkg/shiny/man/navbarPage.html">navbarMenu()</a>提供了两种替代布局，让你使用更多标签和更长的标题。</p><p><a href="https://rdrr.io/pkg/shiny/man/navlistPanel.html">navlistPanel()</a>类似于<a href="https://rdrr.io/pkg/shiny/man/tabsetPanel.html">tabsetPanel()</a>，但不会水平显示标签标题，而是在侧边栏中垂直显示。它还允许您使用纯字符串添加标题，如下面的代码所示，生成图6.7。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  navlistPanel<span class="punctuation">(</span></span><br><span class="line">    id <span class="operator">=</span> <span class="string">&quot;tabset&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;Heading 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Panel one contents&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;Heading 2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Panel two contents&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Panel three contents&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/56785160c5b2c58ecebd5c89454f41ca8ba01132/3504e/demos/action-layout/navlistpanel.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/56785160c5b2c58ecebd5c89454f41ca8ba01132/3504e/demos/action-layout/navlistpanel.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.7 navlistPanel()垂直显示选项卡标题，而不是水平显示"></p><p>另一种方法是使用<code>navbarPage()</code>：它仍然产生水平选项卡标题，但您可以使用<code>navbarMenu()</code>添加下拉菜单以实现额外的层次结构。图6.8显示了一个简单的示例。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> navbarPage<span class="punctuation">(</span></span><br><span class="line">  <span class="string">&quot;Page title&quot;</span><span class="punctuation">,</span>   </span><br><span class="line">  tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;one&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;two&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;three&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  navbarMenu<span class="punctuation">(</span><span class="string">&quot;subpanels&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 4a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;four-a&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 4b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;four-b&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    tabPanel<span class="punctuation">(</span><span class="string">&quot;panel 4c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;four-c&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/a2d6dc2e78a21f32db77925f1d28122e6288a44d/3c1ec/demos/action-layout/navbarpage.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/a2d6dc2e78a21f32db77925f1d28122e6288a44d/3c1ec/demos/action-layout/navbarpage.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.8 navbarPage()在页面顶部生成一个水平导航栏"></p><p>这些布局为你提供了相当大的能力来创建丰富而令人满意的应用程序。要更进一步，你需要更多地了解底层设计系统。</p><h2 id="6-4-引导程序（Bootstrap）"><a href="#6-4-引导程序（Bootstrap）" class="headerlink" title="6.4 引导程序（Bootstrap）"></a>6.4 引导程序（Bootstrap）</h2><p>要继续你的应用程序定制之旅，你需要更多地了解 Shiny 所使用的 <a href="https://getbootstrap.com/">Bootstrap</a> 框架。Bootstrap 是一系列 HTML 约定、CSS 样式和 JS 代码片段的集合，打包成一种方便的形式。Bootstrap 最初是 Twitter 开发的一个框架，在过去的 10 年里，它已经发展成为网络上最流行的 CSS 框架之一。Bootstrap 在 R 中也很受欢迎——你无疑已经看到过许多由 <a href="https://pkgs.rstudio.com/rmarkdown/reference/html_document.html">rmarkdown::html_document()</a> 生成的文档，并使用了许多由 <a href="http://pkgdown.r-lib.org/">pkgdown</a> 制作的包网站，这两个网站也都使用了 Bootstrap。</p><p>作为 Shiny 开发人员，您不需要过多考虑 Bootstrap，因为 Shiny 会自动为您生成与 Bootstrap 兼容的 HTML。但是知道 Bootstrap 存在是件好事，因为这样：</p><ul><li><p>你可以使用<a href="https://rstudio.github.io/bslib/reference/bs_theme.html">bslib::bs_theme()</a>来定制代码的视觉外观，第6.5节。</p></li><li><p>你可以使用<code>class</code>参数来使用Bootstrap class名定制一些布局、输入和输出，正如你在第2.2.7节中所看到的。</p></li><li><p>你可以自己编写函数来生成 Shiny 不提供的 Bootstrap 组件，如<a href="https://rstudio.github.io/bslib/articles/theming.html#utility-classes">Utility classes</a>中所述。</p></li></ul><p>也可以使用完全不同的CSS框架。许多现有的R包通过包装流行的Bootstrap替代品来简化这一过程：</p><ul><li><p><a href="https://appsilon.com/">Appsilon</a> 构建在 <a href="https://fomantic-ui.com/">formantic UI</a> 之上的<a href="https://appsilon.github.io/shiny.semantic/">shiny.semantic</a>。</p></li><li><p><a href="https://rinterface.com/">RInterface</a> 基于 <a href="https://framework7.io/">framework 7</a>  构建的  <a href="https://github.com/RinteRface/shinyMobile">shinyMobile</a> ，专为移动应用程序而设计。</p></li><li><p>由 <a href="https://github.com/ericrayanderson">Eric Anderson</a> 开发的 <a href="https://ericrayanderson.github.io/shinymaterial/">shinymaterial</a>，建立在谷歌的 <a href="https://material.io/design">Material</a> 设计框架之上。</p></li><li><p><a href="https://rstudio.github.io/shinydashboard/">shinydashboard</a> 也是由RStudio开发的，它提供了一个用于创建仪表板的布局系统。</p></li></ul><p>你可以在 <a href="https://github.com/nanxstats/awesome-shiny-extensions">https://github.com/nanxstats/awesome-shiny-extensions</a> 上找到一个更完整、维护更活跃的列表。</p><h2 id="6-5-主题"><a href="#6-5-主题" class="headerlink" title="6.5 主题"></a>6.5 主题</h2><p>Bootstrap在R社区中无处不在，很容易让人产生审美疲劳：过了一段时间，每个Shiny应用程序和Rmd看起来都差不多。解决方案是使用<a href="https://rstudio.github.io/bslib">bslib</a>包进行主题化。bslib是一个相对较新的包，允许您覆盖许多Bootstrap默认值，以创建独特的外观。在我写这篇文章的时候，bslib主要适用于Shiny，但正在努力将其增强的主题化功能引入RMarkdown、pkgdown等。</p><p>如果你正在为公司开发应用程序，我强烈建议你花点时间在主题化上——将你的应用程序主题化，以匹配你的企业风格指南，这是一种让你看起来很好的简单方法。</p><h3 id="6-5-1-开始"><a href="#6-5-1-开始" class="headerlink" title="6.5.1 开始"></a>6.5.1 开始</h3><p>使用 <a href="https://rstudio.github.io/bslib/reference/bs_theme.html">bslib::bs_theme()</a> 创建一个主题，然后使用页面布局函数的<code>theme</code>参数将其应用于应用程序：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fluidPage<span class="punctuation">(</span></span><br><span class="line">  theme <span class="operator">=</span> bslib<span class="operator">::</span>bs_theme<span class="punctuation">(</span>...<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果不特别指定，Shiny将使用其自创建以来基本上使用的经典Bootstrap v3主题。默认情况下，<code>bslib::bs_theme()</code>将使用 Bootstrap v4。如果您只使用内置组件，使用Bootstrap v4替代v3不会造成问题。如果您使用了自定义HTML，它可能会造成问题，因此您可以通过设置<code>version = 3</code>来强制它保持v3。</p><h3 id="6-5-2-Shiny主题"><a href="#6-5-2-Shiny主题" class="headerlink" title="6.5.2 Shiny主题"></a>6.5.2 Shiny主题</h3><p>更改应用程序整体外观的最简单方法是使用<code>bootswatch</code>参数对<code>bslib::bs_theme()</code>选择一个预先制作的<code>bootswatch</code>主题。图6.9显示了以下代码的结果，切换其他主题为“darkly”。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  theme <span class="operator">=</span> bslib<span class="operator">::</span>bs_theme<span class="punctuation">(</span>bootswatch <span class="operator">=</span> <span class="string">&quot;darkly&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sidebarLayout<span class="punctuation">(</span></span><br><span class="line">    sidebarPanel<span class="punctuation">(</span></span><br><span class="line">      textInput<span class="punctuation">(</span><span class="string">&quot;txt&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Text input:&quot;</span><span class="punctuation">,</span> <span class="string">&quot;text here&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      sliderInput<span class="punctuation">(</span><span class="string">&quot;slider&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Slider input:&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">,</span> <span class="number">30</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    mainPanel<span class="punctuation">(</span></span><br><span class="line">      h1<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;Theme: darkly&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      h2<span class="punctuation">(</span><span class="string">&quot;Header 2&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      p<span class="punctuation">(</span><span class="string">&quot;Some text&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/6850c18bfcfd5671f12f1f638c2c76b4ccb5b11d/07f6a/demos/action-layout/theme-flatly.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/6850c18bfcfd5671f12f1f638c2c76b4ccb5b11d/07f6a/demos/action-layout/theme-flatly.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.9 相同的app采用了用四个bootswatch主题风格：darkly、flatly、sandstone和united"></p><p>此外，你可以利用<code>bs_theme()</code>的其他参数创建自己的主题，如 <code>bg</code> （背景颜色），<code>fg</code>（前景色）和 <code>base_font</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">theme <span class="operator">&lt;-</span> bslib<span class="operator">::</span>bs_theme<span class="punctuation">(</span></span><br><span class="line">  bg <span class="operator">=</span> <span class="string">&quot;#0b3d91&quot;</span><span class="punctuation">,</span> </span><br><span class="line">  fg <span class="operator">=</span> <span class="string">&quot;white&quot;</span><span class="punctuation">,</span> </span><br><span class="line">  base_font <span class="operator">=</span> <span class="string">&quot;Source Sans Pro&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>一种预览和自定义主题的简单方法是使用<code>bslib::bs_theme_preview(theme)</code>。这将打开一个Shiny应用程序，展示该主题在应用于许多标准控件时的外观，同时还为你提供交互式控件，用于自定义最重要的参数。</p><h3 id="6-5-3-图表主题"><a href="#6-5-3-图表主题" class="headerlink" title="6.5.3 图表主题"></a>6.5.3 图表主题</h3><p>如果你已经对你的应用程序样式进行了大量自定义，你可能还想自定义图表以匹配整体风格。幸运的是，这非常简单，多亏了<a href="https://rstudio.github.io/thematic/">thematic</a>包，它可以自动对ggplot2、lattice和基础图表进行主题化。只需在server函数中调用<code>thematic_shiny()</code>。这将自动确定你的应用程序主题的所有设置，如图6.10所示。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  theme <span class="operator">=</span> bslib<span class="operator">::</span>bs_theme<span class="punctuation">(</span>bootswatch <span class="operator">=</span> <span class="string">&quot;darkly&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  titlePanel<span class="punctuation">(</span><span class="string">&quot;A themed plot&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  plotOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  thematic<span class="operator">::</span>thematic_shiny<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    ggplot<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> aes<span class="punctuation">(</span>wt<span class="punctuation">,</span> mpg<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">      geom_point<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">      geom_smooth<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/0e7243ec6ca6821445c04bff6488fcf612c3fe88/e378c/demos/action-layout/thematic.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/0e7243ec6ca6821445c04bff6488fcf612c3fe88/e378c/demos/action-layout/thematic.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图6.10 使用thematic::thematic_shiny()确保ggplot2自动匹配应用程序主题"></p><h3 id="6-5-4-练习"><a href="#6-5-4-练习" class="headerlink" title="6.5.4 练习"></a>6.5.4 练习</h3><p><strong>6.4.5.1</strong> 使用<code>bslib::bs_theme_preview()</code>制作你能想到的最丑的主题。</p><h2 id="6-6-面罩之下"><a href="#6-6-面罩之下" class="headerlink" title="6.6 面罩之下"></a>6.6 面罩之下</h2><p>Shiny的设计是为了让R用户不需要了解HTML的细节。但是，如果你知道一些HTML和CSS，你仍然可以进一步定制Shiny。不幸的是，教授HTML和CSS不在本书的范围内，但MDN的<a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics">HTML</a>和<a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics">CSS</a>基础教程是一个很好的起点。</p><p>最重要的是要知道，所有输入、输出和布局函数背后都没有魔法：它们只是生成HTML。您可以通过在控制台中直接执行UI函数来查看HTML：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fluidPage<span class="punctuation">(</span></span><br><span class="line">  textInput<span class="punctuation">(</span><span class="string">&quot;name&quot;</span><span class="punctuation">,</span> <span class="string">&quot;What&#x27;s your name?&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group shiny-input-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>What&#x27;s your name?<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>请注意，这是 <code>&lt;body&gt;</code> 标签的内容；Shiny 的其他部分负责生成 <code>&lt;head&gt;</code>。如果你想包含额外的 CSS 或 JS 依赖项，你需要学习 <a href="https://rdrr.io/pkg/htmltools/man/htmlDependency.html">htmltools::htmlDependency()</a>。两个好的起点是 <a href="https://blog.r-hub.io/2020/08/25/js-r/#web-dependency-management">https://blog.r-hub.io/2020/08/25/js-r/#web-dependency-management</a> 和 <a href="https://unleash-shiny.rinterface.com/htmltools-dependencies.html">https://unleash-shiny.rinterface.com/htmltools-dependencies.html</a>。</p><p>可以将自己的 HTML 添加到 <code>ui</code>。一种方法是通过 <a href="https://rdrr.io/pkg/htmltools/man/HTML.html">HTML()</a> 函数包含文本 HTML。在下面的例子中，我使用“原始字符常量”，<code>r&quot;()&quot;</code>，以便更容易在字符串中包含引号：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  HTML<span class="punctuation">(</span><span class="string">r&quot;(</span></span><br><span class="line"><span class="string">    &lt;h1&gt;This is a heading&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;p class=&quot;my-class&quot;&gt;This is some text!&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">      &lt;li&gt;First bullet&lt;/li&gt;</span></span><br><span class="line"><span class="string">      &lt;li&gt;Second bullet&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">  )&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果您是 HTML&#x2F;CSS 专家，您可能想知道是否可以完全跳过 <code>fluidPage()</code> 并提供原始 HTML。有关更多详细信息，请参阅“<a href="https://shiny.rstudio.com/articles/html-ui.html">使用 HTML 构建整个 UI</a>”。</p><p>或者，您可以使用Shiny提供的HTML辅助函数。对于最重要的元素，如<code>h1()</code>和<code>p()</code>，有常规函数，所有其他元素都可以通过其他标签辅助函数访问。命名参数成为属性，未命名参数成为子元素，因此我们可以将上面的HTML重新创建为：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  h1<span class="punctuation">(</span><span class="string">&quot;This is a heading&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  p<span class="punctuation">(</span><span class="string">&quot;This is some text&quot;</span><span class="punctuation">,</span> <span class="built_in">class</span> <span class="operator">=</span> <span class="string">&quot;my-class&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tags<span class="operator">$</span>ul<span class="punctuation">(</span></span><br><span class="line">    tags<span class="operator">$</span>li<span class="punctuation">(</span><span class="string">&quot;First bullet&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">    tags<span class="operator">$</span>li<span class="punctuation">(</span><span class="string">&quot;Second bullet&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>使用代码生成 HTML 的一个优点是，你可以将现有的 Shiny 组件交织到自定义结构中。例如，以下代码生成了一段包含两个输出的文本段落，其中一个为粗体：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tags<span class="operator">$</span>p<span class="punctuation">(</span></span><br><span class="line">  <span class="string">&quot;You made &quot;</span><span class="punctuation">,</span> </span><br><span class="line">  tags<span class="operator">$</span>b<span class="punctuation">(</span><span class="string">&quot;$&quot;</span><span class="punctuation">,</span> textOutput<span class="punctuation">(</span><span class="string">&quot;amount&quot;</span><span class="punctuation">,</span> inline <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot; in the last &quot;</span><span class="punctuation">,</span> </span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;days&quot;</span><span class="punctuation">,</span> inline <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot; days &quot;</span> </span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>请注意使用<code>inline = TRUE</code>；<code>textOutput()</code>默认是生成一个完整的段落。</p><p>要了解更多关于使用HTML、CSS和JavaScript制作引人注目的用户界面的知识，我强烈推荐David Granjon的<a href="https://unleash-shiny.rinterface.com/index.html">《Shiny的杰出用户界面》</a>。</p><h2 id="6-7-总结"><a href="#6-7-总结" class="headerlink" title="6.7 总结"></a>6.7 总结</h2><p>本章为你提供了制作复杂而吸引人的Shiny应用程序所需的工具。你已经学习了Shiny函数，这些函数允许你布局单页和多页应用程序（如<code>fluidPage()</code>和<code>tabsetPanel()</code>），以及如何使用主题定制整体视觉外观。你还学到了一些关于底层的东西：你知道Shiny使用Bootstrap，并且输入和输出函数只返回HTML，你也可以自己创建自己的HTML。</p><p>在下一章中，您将了解有关应用程序中另一个重要视觉组件的更多信息：图形。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——5-工作流</title>
      <link href="/post/83c3.html"/>
      <url>/post/83c3.html</url>
      
        <content type="html"><![CDATA[<h1 id="第二部分概览"><a href="#第二部分概览" class="headerlink" title="第二部分概览"></a>第二部分概览</h1><p>以下章节为您提供了一篮子有用的技巧。我认为每个人都应该从第20.2.1章开始，因为它为您开发和调试应用程序提供了重要的工具，并在您遇到困难时为您提供帮助。</p><p>之后，章节之间的联系不大，因而没有规定的学习顺序：我建议快速浏览以了解情况（这样如果将来出现相关问题，你可能会记住这些工具），否则只深入阅读你目前需要的内容。以下是主要主题的快速总结：</p><ul><li><p>第6章详细介绍了在页面上布局输入和输出组件的各种方法，以及如何使用主题定制它们的外观。</p></li><li><p>第7章向您展示了如何向绘图添加直接交互以及如何显示以其他方式生成的图像。</p></li><li><p>第8章介绍了一系列技术（包括内联错误、通知、进度条和对话框），用于在应用程序运行时向用户提供反馈。</p></li><li><p>第9章讨论了如何将文件传输到您的应用程序以及如何从应用程序传输文件。</p></li><li><p>第10章向您展示了如何在应用程序运行时动态修改其用户界面。</p></li><li><p>第11章展示了如何以一种用户可以标记的方式记录应用程序状态。</p></li><li><p>第12章向您展示了如何在使用tidyverse包时允许用户选择变量。</p></li></ul><h1 id="5-工作流"><a href="#5-工作流" class="headerlink" title="5. 工作流"></a>5. 工作流</h1><p>如果你打算编写大量的Shiny应用程序，那么在你的基本工作流上投入一些时间是值得的。改进工作流是投入时间的好地方，因为它往往会在长期内带来巨大的回报。这不仅会增加你花在编写R代码上的时间比例，而且因为你能更快地看到结果，所以编写Shiny应用程序的过程会更加愉快，你的技能也会更快地提高。</p><p>本章的目标是帮助你改进三个重要的Shiny工作流：</p><ul><li><p>创建应用程序、做出更改和实验结果的基本开发周期。</p></li><li><p>调试，找出代码中出现的错误并集思广益寻找解决方案的工作流。</p></li><li><p>编写reprexes，说明一个问题的自我包含的代码块。Reprex是一种强大的调试技术，如果你想从别人那里得到帮助，它们是必不可少的。</p></li></ul><h2 id="5-1-开发工作流"><a href="#5-1-开发工作流" class="headerlink" title="5.1 开发工作流"></a>5.1 开发工作流</h2><p>优化你的开发工作流的目的是减少做出更改和看到结果之间的时间。你越快进行迭代，就越快进行实验，你就越快成为一个更好的Shiny开发人员。这里有两个主要的工作流需要优化：首次创建应用程序，以及加快调整代码和尝试输出结果的迭代周期。</p><h3 id="5-1-1-创建应用程序"><a href="#5-1-1-创建应用程序" class="headerlink" title="5.1.1 创建应用程序"></a>5.1.1 创建应用程序</h3><p>每个应用程序都将以相同的六行R代码开始：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">library(shiny)</span><br><span class="line">ui &lt;- fluidPage(</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">&#125;</span><br><span class="line">shinyApp(ui, server)</span><br></pre></td></tr></table></figure><p>你可能很快就会厌倦输入这些代码，所以RStudio提供了一些快捷键：</p><ul><li><p>如果你已经打开了你的未来<code>app.R</code>，输入<code>shinyapp</code>然后按<code>Shift + Tab</code>插入Shiny应用程序片段。<sup>15</sup></p></li><li><p>如果你想开始一个新项目<sup>16</sup>，请转到文件菜单，选择“New Project”，然后选择“Shiny Web Application”，如图5.1所示。</p></li></ul><p><img src="https://d33wubrfki0l68.cloudfront.net/6f3bccc61698dce386b5650c4204d59ebcd66836/571c3/images/action-workflow/new-project.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/6f3bccc61698dce386b5650c4204d59ebcd66836/571c3/images/action-workflow/new-project.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图5.1 在RStudio中创建一个新的Shiny应用程序，选择“Shiny Web Application”作为项目类型"></p><p>你可能认为学习这些快捷键不值得，因为你一天只创建一两个应用程序，但创建简单的应用程序是检查你在开始一个更大的项目之前是否掌握了基本概念的好方法，并且它们是调试的强大工具。</p><h3 id="5-1-2-查看更改"><a href="#5-1-2-查看更改" class="headerlink" title="5.1.2 查看更改"></a>5.1.2 查看更改</h3><p>你最多一天会创建几个应用程序，但你会运行应用程序数百次，因此掌握开发工作流尤为重要。减少迭代时间的第一个方法是避免单击“Run App”按钮，而是学习键盘快捷键<code>Cmd / Ctrl + Shift + Enter</code>。这使你获得了以下开发工作流：</p><ul><li>写一些代码。</li><li>使用Cmd &#x2F; Ctrl + Shift + Enter启动应用程序。</li><li>与应用程序交互式实验。</li><li>关闭应用程序。</li><li>写一些代码。</li></ul><p>另一种进一步提高迭代速度的方法是打开自动重新加载，并在后台作业中运行应用程序，如<a href="https://github.com/sol-eng/background-jobs/tree/master/shiny-job">https://github.com/sol-eng/background-jobs/tree/master/shiny-job</a>所述。使用此工作流，一旦保存文件，您的应用程序将重新启动：无需关闭和重新启动。这导致了更快速的工作流程：</p><ul><li>编写代码并按Cmd &#x2F; Ctrl + S保存文件。</li><li>交互式实验。</li><li>编写代码并按Cmd &#x2F; Ctrl + S保存文件。</li></ul><p>这种技术的最大缺点是调试起来要困难得多，因为应用程序在单独的进程中运行。</p><p>随着应用程序变得越来越庞大，你可能会发现“交互式实验”步骤变得相当繁琐。你很难记住重新检查你可能受更改影响的每个组件。稍后，在第21章中，你将学习自动化测试的工具，这允许你将你正在运行的交互式实验转化为自动化的代码。这使您可以更快地运行测试（因为它们是自动化的），并且意味着您不会忘记运行重要的测试。开发测试需要一些初始投资，但对于大型应用程序来说，投资会得到丰厚的回报。</p><h3 id="5-1-3-控制视图"><a href="#5-1-3-控制视图" class="headerlink" title="5.1.3 控制视图"></a>5.1.3 控制视图</h3><p>默认情况下，当您运行应用程序时，它将在弹出窗口中显示。您可以从“Run App”下拉菜单中选择另外两个选项，如图1.1所示：</p><ul><li><p>在查看器窗格中运行：打开应用程序的查看器窗格（通常位于IDE的右侧）。这对于小型应用程序很有用，因为您可以同时查看您的应用程序代码。</p></li><li><p>在外部运行：在您常用的网页浏览器中打开应用程序。这对于较大的应用程序以及当您想查看应用程序在大多数用户将体验的上下文中看起来如何时非常有用。</p></li></ul><p><img src="https://d33wubrfki0l68.cloudfront.net/2b4ca2b946e0302c87d2c16c096a55e2ef1ec64f/5f450/images/action-workflow/run-app.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/2b4ca2b946e0302c87d2c16c096a55e2ef1ec64f/5f450/images/action-workflow/run-app.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图1.1 运行应用程序按钮允许您选择如何显示正在运行的应用程序。"></p><h2 id="5-2-调试"><a href="#5-2-调试" class="headerlink" title="5.2 调试"></a>5.2 调试</h2><p>当你开始编写应用程序时，几乎可以肯定会出现问题。大多数错误的起因是您的Shiny心理模型与Shiny实际执行的操作不匹配。随着您阅读本书，您的心理模型将得到改善，以便您犯更少的错误，当您犯错误时，更容易发现问题。但是，在您能够可靠地首次编写有效代码之前，需要多年的经验，这意味着您需要开发一个可靠的工作流程来识别和修复错误。在这里，我们将重点关注Shiny应用程序特有的挑战；如果您是R中调试的新手，请从Jenny Bryan的rstudio::conf(2020)主题演讲“<a href="https://resources.rstudio.com/rstudio-conf-2020/object-of-type-closure-is-not-subsettable-jenny-bryan">Object of type ‘closure’ is not subsettable</a>”开始。</p><p>下面我们将讨论三种主要问题：</p><ul><li><p>出现意外的错误。这是最简单的情况，因为您会收到一个跟踪回溯，它允许您找出错误发生的具体位置。一旦确定了问题，您需要系统地测试您的假设，直到找到期望与现实之间的差异。交互式调试器是此过程的强大助手。</p></li><li><p>没有错误，但某些值不正确。在这里，您需要使用交互式调试器以及您的调查技能来追踪问题的根源。</p></li><li><p>所有值都正确，但它们没有按预期更新。这是最具有挑战性的问题，因为它是Shiny特有的，因此您无法利用现有的R调试技能。</p></li></ul><p>当出现这种情况时，会令人感到沮丧，但您可以将其转化为练习调试技能的机会。</p><p>我们将回到另一种重要的技术，制作可重复的最小示例，下一部分中。如果你卡住，需要从别人那里得到帮助，创建一个最小示例是至关重要的。但创建最小示例也是调试自己代码时极其重要的技能。通常，你有很多工作正常的代码，和一小部分引起问题的代码。如果你可以通过删除有效代码来缩小有问题的代码，你将能够更快地迭代解决方案。这是我每天使用的技术。</p><h3 id="5-2-1-阅读tracebacks"><a href="#5-2-1-阅读tracebacks" class="headerlink" title="5.2.1 阅读tracebacks"></a>5.2.1 阅读tracebacks</h3><p>在R中，每个错误都伴随着一个traceback，或调用堆栈，它会跟踪导致错误的调用序列。例如，考虑以下简单的调用序列：<code>f()</code>调用<code>g()</code>调用<code>h()</code>调用乘法运算符：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span> g<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">g <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span> h<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">h <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span> x <span class="operator">*</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>如果以上程序报如下错误：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f<span class="punctuation">(</span><span class="string">&quot;a&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Error in x * 2: non-numeric argument to binary operator</span></span><br></pre></td></tr></table></figure><p>你可以调用traceback()找到导致问题的调用序列：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">traceback<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; 3: h(x)</span></span><br><span class="line"><span class="comment">#&gt; 2: g(x)</span></span><br><span class="line"><span class="comment">#&gt; 1: f(&quot;a&quot;)</span></span><br></pre></td></tr></table></figure><p>我认为通过颠倒traceback可以最容易地理解它：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1: f(&quot;a&quot;)</span><br><span class="line">2: g(x)</span><br><span class="line">3: h(x)</span><br></pre></td></tr></table></figure><p>现在可以告诉你导致错误的调用序列——f()调用g()调用h()（出现错误）。</p><h3 id="5-2-2-Shiny中的traceback"><a href="#5-2-2-Shiny中的traceback" class="headerlink" title="5.2.2 Shiny中的traceback()"></a>5.2.2 Shiny中的traceback()</h3><p>遗憾的是，在Shiny中不能使用traceback()，因为在应用程序运行时不能运行代码。相反，Shiny将自动为您打印traceback。例如，考虑使用上面定义的那个f()函数编写的这个简单应用程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">library(shiny)</span><br><span class="line"></span><br><span class="line">f &lt;- function(x) g(x)</span><br><span class="line">g &lt;- function(x) h(x)</span><br><span class="line">h &lt;- function(x) x * 2</span><br><span class="line"></span><br><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  selectInput(&quot;n&quot;, &quot;N&quot;, 1:10),</span><br><span class="line">  plotOutput(&quot;plot&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$plot &lt;- renderPlot(&#123;</span><br><span class="line">    n &lt;- f(input$n)</span><br><span class="line">    plot(head(cars, n))</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line">&#125;</span><br><span class="line">shinyApp(ui, server)</span><br></pre></td></tr></table></figure><p>如果您运行此应用程序，您将在应用程序中看到错误消息，并在控制台中看到traceback：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Error in *: non-numeric argument to binary operator</span><br><span class="line">  169: g [app.R<span class="params">#4</span>]</span><br><span class="line">  168: f [app.R<span class="params">#3</span>]</span><br><span class="line">  167: renderPlot [app.R<span class="params">#1</span>3]</span><br><span class="line">  165: func</span><br><span class="line">  125: drawPlot</span><br><span class="line">  111: &lt;reactive:plotObj&gt;</span><br><span class="line">   95: drawReactive</span><br><span class="line">   82: renderFunc</span><br><span class="line">   81: output<span class="built_in">$</span>plot</span><br><span class="line">    1: runApp</span><br></pre></td></tr></table></figure><p>为了理解发生了什么，我们再次颠倒过来以便按照它们出现的顺序看到调用序列：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Error in *: non-numeric argument to binary operator</span><br><span class="line">   1: runApp</span><br><span class="line">  81: output<span class="built_in">$</span>plot</span><br><span class="line">  82: renderFunc</span><br><span class="line">  95: drawReactive</span><br><span class="line"> 111: &lt;reactive:plotObj&gt;</span><br><span class="line"> 125: drawPlot</span><br><span class="line"> 165: func</span><br><span class="line"> 167: renderPlot [app.R<span class="params">#1</span>3]</span><br><span class="line"> 168: f [app.R<span class="params">#3</span>]</span><br><span class="line"> 169: g [app.R<span class="params">#4</span>]</span><br></pre></td></tr></table></figure><p>调用堆栈有三个基本部分：</p><ul><li><p>最初几个调用启动应用程序。在这种情况下，你只看到runApp()，但根据你启动应用程序的方式，你可能会看到更复杂的东西。例如，如果你调用source()来运行应用程序，你可能会看到这个：</p>  <figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1: source</span><br><span class="line">3: print.shiny.appobj</span><br><span class="line">5: runApp</span><br></pre></td></tr></table></figure><p>  一般来说，你可以忽略第一行runApp()之前的任何内容；这只是启动应用程序的设置代码。</p></li><li><p>接下来，你会看到一些负责调用反应式表达式的Shiny内部代码：</p>  <figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> 81: output<span class="built_in">$</span>plot</span><br><span class="line"> 82: renderFunc</span><br><span class="line"> 95: drawReactive</span><br><span class="line">111: &lt;reactive:plotObj&gt;</span><br><span class="line">125: drawPlot</span><br><span class="line">165: func</span><br></pre></td></tr></table></figure><p>  在这里，注意到output$plot非常重要-这会告诉你的哪个反应体(plot)引起了错误。接下来的几个函数是内部的，你可以忽略它们。</p></li><li><p>最后，在底部，你会看到你编写的代码：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">167: renderPlot [app.R<span class="params">#1</span>3]</span><br><span class="line">168: f [app.R<span class="params">#3</span>]</span><br><span class="line">169: g [app.R<span class="params">#4</span>]</span><br></pre></td></tr></table></figure><p>这是在renderPlot()中调用的代码。这里需要特别注意，因为文件路径和行号；这告诉你这是你的代码。</p></li></ul><p>如果您在应用程序中遇到错误，但没有看到traceback，请确保您使用<code>Cmd/Ctrl + Shift + Enter</code>（如果在RStudio中没有，请调用<code>runApp()</code>）运行应用程序，并且您已经保存了运行它的文件。其他运行应用程序的方式并不总是捕获生成traceback所需的信息。</p><h3 id="5-2-3-交互式调试器"><a href="#5-2-3-交互式调试器" class="headerlink" title="5.2.3 交互式调试器"></a>5.2.3 交互式调试器</h3><p>一旦您已经找到了错误的来源并想弄清楚是什么导致了错误，您可以使用最强大的工具是交互式调试器。调试器暂停执行，并为您提供一个交互式R控制台，您可以在其中运行任何代码以找出问题所在。有两种方法可以启动调试器：</p><ul><li><p>在您的源代码中添加一个对<code>browser()</code>的调用。这是标准R启动交互式调试器的方法，并且无论您如何运行Shiny都会有效。</p><p>browser()的另一个优点是，由于它是R代码，您可以通过将其与if语句结合使用来使其具有条件性。这允许您仅对有问题的输入启动调试器。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span>input<span class="operator">$</span>value <span class="operator">==</span> <span class="string">&quot;a&quot;</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="built_in">browser</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment"># Or maybe</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span>my_reactive<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">&lt;</span> <span class="number">0</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="built_in">browser</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>通过单击行号左侧来添加RStudio断点。您可以单击红色圆圈来移除断点。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/4b822ac61e876f90880b9b93313df56f4528dbcf/33702/images/action-workflow/breakpoint.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/4b822ac61e876f90880b9b93313df56f4528dbcf/33702/images/action-workflow/breakpoint.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>断点的优点是它们不是代码，因此您永远不必担心意外地将它们提交到版本控制系统。</p></li></ul><p>如果您正在使用RStudio，当您处于调试器时，控制台顶部会出现图5.2中的工具栏。工具栏是一种方便您记住现在可用的调试命令的方法。它们也可以在RStudio之外使用；您只需记住激活它们的单个字母命令。三个最有用的命令是：</p><ul><li><p>Next（按n）：执行函数的下一步。请注意，如果您有一个名为n的变量，您需要使用print(n)来显示其值。</p></li><li><p>Continue（按c）：退出交互式调试并继续函数的常规执行。如果您已经修复了不良状态并且想要检查函数是否正确进行，这是非常有用的。</p></li><li><p>Stop（按Q）：停止调试，终止函数并返回到全局工作区。一旦您已经找出问题所在，并且您已经准备好修复它并重新加载代码，就可以使用此功能。</p></li></ul><p><img src="https://d33wubrfki0l68.cloudfront.net/08e163d4340339f15a7f124f52269a5797180adc/11f05/images/action-workflow/debug-toolbar.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/08e163d4340339f15a7f124f52269a5797180adc/11f05/images/action-workflow/debug-toolbar.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图 5.2 RStudio中的调试工具栏"></p><p>除了使用这些工具逐行调试代码外，您还将编写并运行一些交互式代码来追踪出了什么问题。调试是一个系统地将您的期望与现实进行比较的过程，直到找到不匹配的地方。如果您是R中的新手，可能需要阅读“Advanced R”的调试章节以学习一些一般的技术。</p><h3 id="5-2-4-案例研究"><a href="#5-2-4-案例研究" class="headerlink" title="5.2.4 案例研究"></a>5.2.4 案例研究</h3><p>一旦你排除了不可能，剩下的，无论多么不可思议，一定是真相——夏洛克·福尔摩斯</p><p>为了演示基本的调试方法，我将向你展示我在编写第10.1.2节时遇到的一个小问题。我将首先向你展示基本的上下文，然后你会看到一个我没有使用交互式调试工具解决的问题，一个需要交互式调试的问题，并发现一个最后的惊喜。</p><p>最初的目标很简单：我有一个销售数据集，我想按地区对其进行筛选。数据看起来是这样的：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sales <span class="operator">&lt;-</span> readr<span class="operator">::</span>read_csv<span class="punctuation">(</span><span class="string">&quot;sales-dashboard/sales_data_sample.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">sales <span class="operator">&lt;-</span> sales<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span></span><br><span class="line">  <span class="string">&quot;TERRITORY&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ORDERDATE&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ORDERNUMBER&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PRODUCTCODE&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;QUANTITYORDERED&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PRICEEACH&quot;</span></span><br><span class="line"><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">sales</span><br><span class="line"><span class="comment">#&gt; # A tibble: 2,823 × 6</span></span><br><span class="line"><span class="comment">#&gt;   TERRITORY ORDERDATE      ORDERNUMBER PRODUCTCODE QUANTITYORDERED PRICEEACH</span></span><br><span class="line"><span class="comment">#&gt;   &lt;chr&gt;     &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1 &lt;NA&gt;      2/24/2003 0:00       10107 S10_1678                 30      95.7</span></span><br><span class="line"><span class="comment">#&gt; 2 EMEA      5/7/2003 0:00        10121 S10_1678                 34      81.4</span></span><br><span class="line"><span class="comment">#&gt; 3 EMEA      7/1/2003 0:00        10134 S10_1678                 41      94.7</span></span><br><span class="line"><span class="comment">#&gt; 4 &lt;NA&gt;      8/25/2003 0:00       10145 S10_1678                 45      83.3</span></span><br><span class="line"><span class="comment">#&gt; # … with 2,819 more rows</span></span><br></pre></td></tr></table></figure><p>领土信息如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unique<span class="punctuation">(</span>sales<span class="operator">$</span>TERRITORY<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] NA      &quot;EMEA&quot;  &quot;APAC&quot;  &quot;Japan&quot;</span></span><br></pre></td></tr></table></figure><p>当我刚开始研究这个问题时，我认为它很简单，我可以直接编写应用程序，而不需要做任何其他研究：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  selectInput(&quot;territory&quot;, &quot;territory&quot;, choices = unique(sales$TERRITORY)),</span><br><span class="line">  tableOutput(&quot;selected&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  selected &lt;- reactive(sales[sales$TERRITORY == input$territory, ])</span><br><span class="line">  output$selected &lt;- renderTable(head(selected(), 10))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我想，这是一个八行应用程序，怎么可能会出什么问题？好吧，当我打开应用程序时，无论我选择哪个区域，我都看到了很多缺失的值。最有可能导致问题的代码是选择要显示的数据的 reactive：<code>sales[sales$TERRITORY == input$territory, ]</code>。所以我停止了应用程序，并迅速验证：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sales<span class="punctuation">[</span>sales<span class="operator">$</span>TERRITORY <span class="operator">==</span> <span class="string">&quot;EMEA&quot;</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 2,481 × 6</span></span><br><span class="line"><span class="comment">#&gt;   TERRITORY ORDERDATE     ORDERNUMBER PRODUCTCODE QUANTITYORDERED PRICEEACH</span></span><br><span class="line"><span class="comment">#&gt;   &lt;chr&gt;     &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1 &lt;NA&gt;      &lt;NA&gt;                   NA &lt;NA&gt;                     NA      NA  </span></span><br><span class="line"><span class="comment">#&gt; 2 EMEA      5/7/2003 0:00       10121 S10_1678                 34      81.4</span></span><br><span class="line"><span class="comment">#&gt; 3 EMEA      7/1/2003 0:00       10134 S10_1678                 41      94.7</span></span><br><span class="line"><span class="comment">#&gt; 4 &lt;NA&gt;      &lt;NA&gt;                   NA &lt;NA&gt;                     NA      NA  </span></span><br><span class="line"><span class="comment">#&gt; # … with 2,477 more rows</span></span><br></pre></td></tr></table></figure><p>哎呀！我忘了 <code>TERRITORY</code> 包含一堆缺失值，这意味着 <code>sales$TERRITORY == &quot;EMEA&quot;</code> 将包含一堆缺失值：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>sales<span class="operator">$</span>TERRITORY <span class="operator">==</span> <span class="string">&quot;EMEA&quot;</span><span class="punctuation">,</span> <span class="number">25</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;  [1]    NA  TRUE  TRUE    NA    NA    NA  TRUE  TRUE    NA  TRUE FALSE    NA</span></span><br><span class="line"><span class="comment">#&gt; [13]    NA    NA  TRUE    NA  TRUE  TRUE    NA    NA  TRUE FALSE  TRUE    NA</span></span><br><span class="line"><span class="comment">#&gt; [25]  TRUE</span></span><br></pre></td></tr></table></figure><p>当我通过<code>[</code>使用这些缺失值对<code>sales</code>数据框进行取子集时，这些缺失值就变成了缺失行。输入中的任何缺失值都会保留在输出中。有很多方法可以解决这个问题，但我决定使用 <code>subset()</code>，因为它可以自动删除缺失值并减少我需要键入 <code>sales</code> 的次数。然后我再次检查了它是否真的有效：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">subset<span class="punctuation">(</span>sales<span class="punctuation">,</span> TERRITORY <span class="operator">==</span> <span class="string">&quot;EMEA&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 1,407 × 6</span></span><br><span class="line"><span class="comment">#&gt;   TERRITORY ORDERDATE       ORDERNUMBER PRODUCTCODE QUANTITYORDERED PRICEEACH</span></span><br><span class="line"><span class="comment">#&gt;   &lt;chr&gt;     &lt;chr&gt;                 &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1 EMEA      5/7/2003 0:00         10121 S10_1678                 34      81.4</span></span><br><span class="line"><span class="comment">#&gt; 2 EMEA      7/1/2003 0:00         10134 S10_1678                 41      94.7</span></span><br><span class="line"><span class="comment">#&gt; 3 EMEA      11/11/2003 0:00       10180 S10_1678                 29      86.1</span></span><br><span class="line"><span class="comment">#&gt; 4 EMEA      11/18/2003 0:00       10188 S10_1678                 48     100  </span></span><br><span class="line"><span class="comment">#&gt; # … with 1,403 more rows</span></span><br></pre></td></tr></table></figure><p>这解决了我遇到的大部分问题，但当我在领土下拉菜单中选择 NA 时，仍然没有出现任何行。因此，我再次检查了控制台：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subset<span class="punctuation">(</span>sales<span class="punctuation">,</span> TERRITORY <span class="operator">==</span> <span class="literal">NA</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 0 × 6</span></span><br><span class="line"><span class="comment">#&gt; # … with 6 variables: TERRITORY &lt;chr&gt;, ORDERDATE &lt;chr&gt;, ORDERNUMBER &lt;dbl&gt;,</span></span><br><span class="line"><span class="comment">#&gt; #   PRODUCTCODE &lt;chr&gt;, QUANTITYORDERED &lt;dbl&gt;, PRICEEACH &lt;dbl&gt;</span></span><br></pre></td></tr></table></figure><p>然后我意识到，当然这行不通，因为缺失值具有传染性：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>sales<span class="operator">$</span>TERRITORY <span class="operator">==</span> <span class="literal">NA</span><span class="punctuation">,</span> <span class="number">25</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;  [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA</span></span><br></pre></td></tr></table></figure><p>此处有另一种方法可以解决该问题：将<code>==</code>替换为<code>%in%</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>sales<span class="operator">$</span>TERRITORY <span class="operator">%in%</span> <span class="literal">NA</span><span class="punctuation">,</span> <span class="number">25</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;  [1]  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE</span></span><br><span class="line"><span class="comment">#&gt; [13]  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE</span></span><br><span class="line"><span class="comment">#&gt; [25] FALSE</span></span><br><span class="line">subset<span class="punctuation">(</span>sales<span class="punctuation">,</span> TERRITORY <span class="operator">%in%</span> <span class="literal">NA</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 1,074 × 6</span></span><br><span class="line"><span class="comment">#&gt;   TERRITORY ORDERDATE       ORDERNUMBER PRODUCTCODE QUANTITYORDERED PRICEEACH</span></span><br><span class="line"><span class="comment">#&gt;   &lt;chr&gt;     &lt;chr&gt;                 &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1 &lt;NA&gt;      2/24/2003 0:00        10107 S10_1678                 30      95.7</span></span><br><span class="line"><span class="comment">#&gt; 2 &lt;NA&gt;      8/25/2003 0:00        10145 S10_1678                 45      83.3</span></span><br><span class="line"><span class="comment">#&gt; 3 &lt;NA&gt;      10/10/2003 0:00       10159 S10_1678                 49     100  </span></span><br><span class="line"><span class="comment">#&gt; 4 &lt;NA&gt;      10/28/2003 0:00       10168 S10_1678                 36      96.7</span></span><br><span class="line"><span class="comment">#&gt; # … with 1,070 more rows</span></span><br></pre></td></tr></table></figure><p>于是我更新了应用程序并再次尝试。但它仍然没有起作用！当我在下拉菜单中选择“NA”时，我没有看到任何行。</p><p>此时，我想我已经在控制台上做了所有可以做的事情，我需要进行实验，找出Shiny内部代码没有按我预期的方式工作的原因。我猜最可能的问题来源是在<code>selected</code>反应式中，所以我添加了一个 <a href="https://rdrr.io/r/base/browser.html">browser()</a> 语句。（这使它成为了一个两行的反应式，所以我需要用 <code>&#123;&#125;</code> 将其包裹起来。）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  selected &lt;- reactive(&#123;</span><br><span class="line">    browser()</span><br><span class="line">    subset(sales, TERRITORY %in% input$territory)</span><br><span class="line">  &#125;)</span><br><span class="line">  output$selected &lt;- renderTable(head(selected(), 10))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在，当我的应用程序运行时，我立即被投入了一个交互式控制台。我的第一步是验证我是否处于有问题的情况，所以我运行了 <code>subset(sales, TERRITORY %in% input$territory)</code>。它返回了一个空数据框。如果我没有看到问题，我会键入 <code>c</code> 让应用程序继续运行，然后进行一些交互以进入失败状态。</p><p>然后我检查 <code>subset()</code>的输入是否符合我的预期。我首先仔细检查 <code>sales</code> 数据集。我并没有真正预期它会损坏，因为应用程序中没有任何东西可以触及到它，但仔细检查你所做的每一个假设是最安全的。<code>sales</code> 看起来还不错，所以问题一定在于 <code>TERRITORY %in% input$territory</code>。由于 <code>TERRITORY</code> 是 <code>sales</code> 的一部分，我从检查 <code>input$territory</code> 开始：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">input<span class="operator">$</span>territory</span><br><span class="line"><span class="comment">#&gt; [1] &quot;NA&quot;</span></span><br></pre></td></tr></table></figure><p>我盯着这个看了一会儿，因为它看起来也还可以。然后我突然想到！我原以为它是<code>NA</code>，但实际上它是<code>“NA”</code>！现在我可以在Shiny应用程序之外重新创建这个问题：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">subset<span class="punctuation">(</span>sales<span class="punctuation">,</span> TERRITORY <span class="operator">%in%</span> <span class="string">&quot;NA&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 0 × 6</span></span><br><span class="line"><span class="comment">#&gt; # … with 6 variables: TERRITORY &lt;chr&gt;, ORDERDATE &lt;chr&gt;, ORDERNUMBER &lt;dbl&gt;,</span></span><br><span class="line"><span class="comment">#&gt; #   PRODUCTCODE &lt;chr&gt;, QUANTITYORDERED &lt;dbl&gt;, PRICEEACH &lt;dbl&gt;</span></span><br></pre></td></tr></table></figure><p>然后我想到了一个简单的解决方法，将其应用到服务器上，然后重新运行应用程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  selected &lt;- reactive(&#123;</span><br><span class="line">    if (input$territory == &quot;NA&quot;) &#123;</span><br><span class="line">      subset(sales, is.na(TERRITORY))</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      subset(sales, TERRITORY == input$territory)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  output$selected &lt;- renderTable(head(selected(), 10))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好极了！问题解决了！但这对我来说感到非常惊讶-Shiny默默地将<code>NA</code>转换为<code>“NA”</code>，因此我也提交了一个错误报告：<a href="https://github.com/rstudio/shiny/issues/2884">https://github.com/rstudio/shiny/issues/2884</a>。</p><p>几周后，我再次看了这个例子，并开始思考不同的地区。我们有欧洲、中东和非洲（EMEA）以及亚洲太平洋地区（APAC）。北美在哪里？然后我突然想到：源数据可能使用了缩写NA，而R将其读作缺失值。因此，真正的修复应该在数据加载期间完成：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sales <span class="operator">&lt;-</span> readr<span class="operator">::</span>read_csv<span class="punctuation">(</span><span class="string">&quot;sales-dashboard/sales_data_sample.csv&quot;</span><span class="punctuation">,</span> na <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line">unique<span class="punctuation">(</span>sales<span class="operator">$</span>TERRITORY<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;NA&quot;    &quot;EMEA&quot;  &quot;APAC&quot;  &quot;Japan&quot;</span></span><br></pre></td></tr></table></figure><p>这让生活变得简单多了！</p><p>在调试时，这是一种常见的模式：在完全理解问题的根源之前，你通常需要剥掉洋葱的多个层。</p><h3 id="5-2-5-调试反应性"><a href="#5-2-5-调试反应性" class="headerlink" title="5.2.5 调试反应性"></a>5.2.5 调试反应性</h3><p>最难调试的问题是当你的反应器以意想不到的顺序启动时。在本书的这一部分，我们推荐相对较少的工具来帮助你调试这个问题。在下一节中，你将学习如何创建一个最小的reprex，这对这类问题至关重要，在本书的后面，你将学习更多关于基础理论的知识，以及关于像反应日志这样的工具的知识， <a href="https://github.com/rstudio/reactlog">https://github.com/rstudio/reactlog</a>。但是现在，我们将重点介绍一种在这里很有用的经典技术：“打印”调试。</p><p>打印调试的基本思想是，每当需要了解代码的一部分何时被求值时，就调用 <code>print()</code>，并显示重要变量的值。我们称之为“打印”调试（因为在大多数语言中，你会使用 print 函数），但在 R 中，使用 <code>message()</code> 更合理：</p><ul><li><code>print()</code>旨在显示数据向量，因此它在字符串周围加上引号，并以<code>[1]</code>开头。</li><li><code>message()</code>将其结果发送到“标准错误”，而不是“标准输出”。这些是描述输出流的技术术语，您通常不会注意到它们，因为它们在交互式运行时以相同的方式显示。但是，如果您的应用程序托管在其他地方，则发送到“标准错误”的输出将被记录在日志中。</li></ul><p>我还建议将 <code>message()</code> 与 <code>glue::glue()</code>结合使用，这使得在消息中交替文本和值变得容易。如果你以前没有见过 <a href="http://glue.tidyverse.org/">glue</a>，它的基本思想是，任何包含在 <code>&#123;&#125;</code> 中的内容都将被计算并插入到输出中：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>glue<span class="punctuation">)</span></span><br><span class="line">name <span class="operator">&lt;-</span> <span class="string">&quot;Hadley&quot;</span></span><br><span class="line">message<span class="punctuation">(</span>glue<span class="punctuation">(</span><span class="string">&quot;Hello &#123;name&#125;&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Hello Hadley</span></span><br></pre></td></tr></table></figure><p>在函数中使用 <a href="https://rdrr.io/r/utils/str.html">str()</a> 可以打印出任何对象的详细结构，这对于检查我们期望的对象类型是否正确非常有用。</p><p>下面是一个简单的应用程序，演示了一些基本的理念。注意，在 <code>reactive()</code> 函数内部，我使用了 <code>message()</code> 函数。我必须先进行计算，然后发送消息，最后返回之前计算的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  sliderInput(&quot;x&quot;, &quot;x&quot;, value = 1, min = 0, max = 10),</span><br><span class="line">  sliderInput(&quot;y&quot;, &quot;y&quot;, value = 2, min = 0, max = 10),</span><br><span class="line">  sliderInput(&quot;z&quot;, &quot;z&quot;, value = 3, min = 0, max = 10),</span><br><span class="line">  textOutput(&quot;total&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  observeEvent(input$x, &#123;</span><br><span class="line">    message(glue(&quot;Updating y from &#123;input$y&#125; to &#123;input$x * 2&#125;&quot;))</span><br><span class="line">    updateSliderInput(session, &quot;y&quot;, value = input$x * 2)</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  total &lt;- reactive(&#123;</span><br><span class="line">    total &lt;- input$x + input$y + input$z</span><br><span class="line">    message(glue(&quot;New total is &#123;total&#125;&quot;))</span><br><span class="line">    total</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  output$total &lt;- renderText(&#123;</span><br><span class="line">    total()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我启动应用程序时，控制台显示：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Updating y from 2 to 2</span><br><span class="line">New total is 6</span><br></pre></td></tr></table></figure><p>当将x的值滑动到3时看到的结果：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Updating y from 2 to 6</span><br><span class="line">New total is 8</span><br><span class="line">New total is 12</span><br></pre></td></tr></table></figure><p>如果你发现结果有点令人惊讶，不要担心。你将在第8章和第3.3.3章中了解更多有关情况。</p><h2 id="5-3-获取帮助"><a href="#5-3-获取帮助" class="headerlink" title="5.3 获取帮助"></a>5.3 获取帮助</h2><p>如果你尝试了这些技巧之后仍然感到困惑，那么现在可能是时候向他人寻求帮助了。<a href="https://community.rstudio.com/c/shiny">Shiny社区网站</a>是一个寻求帮助的好地方。这个网站由许多Shiny用户以及Shiny包的开发者共同维护。如果你想通过帮助他人来提高你的Shiny技能，这也是一个不错的地方。</p><p>为了尽快获得最有益的帮助，你需要创建一个reprex，也就是可重复的示例。Reprex的目标是提供最小可能的R代码片段，以说明问题，并可以轻松地在另一台计算机上运行。创建reprex是一种常识（也是为了你自己的利益）：如果你想让别人帮助你，你应该尽可能地简化问题！</p><p>创建reprex是一种礼貌，因为它将问题的基本要素捕捉到一种形式中，任何人都可以运行它，这样任何试图帮助你的人都可以快速地看到问题的确切性质，并可以容易地尝试可能的解决方案。</p><h3 id="5-3-1-Reprex基本要素"><a href="#5-3-1-Reprex基本要素" class="headerlink" title="5.3.1 Reprex基本要素"></a>5.3.1 Reprex基本要素</h3><p>一个reprex只是一段R代码，当你将其复制并粘贴到另一台计算机上的R会话中时，它能够正常工作。以下是一个简单的Shiny app reprex：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">library(shiny)</span><br><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  selectInput(&quot;n&quot;, &quot;N&quot;, 1:10),</span><br><span class="line">  plotOutput(&quot;plot&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$plot &lt;- renderPlot(&#123;</span><br><span class="line">    n &lt;- input$n * 2</span><br><span class="line">    plot(head(cars, n))</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">shinyApp(ui, server)</span><br></pre></td></tr></table></figure><p>这段代码不针对运行它的计算机做任何假设（除了安装Shiny之外！），因此任何人都可以运行此代码并看到问题：应用程序抛出一个错误，说“non-numeric argument to binary operator”。</p><p>清楚地说明问题是获得帮助的第一步，因为任何人都可以通过复制和粘贴代码来重现问题，他们可以很容易地探索您的代码并测试可能的解决方案。（在这种情况下，您需要<code>as.numeric(input$n)</code>，因为<code>selectInput()</code>在<code>input$n</code>中创建了一个字符串。）</p><h3 id="5-3-2-创建reprex"><a href="#5-3-2-创建reprex" class="headerlink" title="5.3.2 创建reprex"></a>5.3.2 创建reprex</h3><p>创建reprex的第一步是创建一个独立的文件，其中包含运行代码所需的一切。您应该通过在一个新的R会话中运行代码来检查它是否工作。确保您没有遗漏任何使应用程序工作正常的包。</p><p>通常，让应用程序在别人的计算机上运行最困难的部分是消除只存储在您计算机上的数据的使用。以下是三种有用的模式：</p><ul><li><p>你经常使用的数据与问题没有直接关系，你可以使用内置的数据集，如mtcars或iris。</p></li><li><p>其他时候，你可能能够编写一段R代码来创建一个说明问题的数据集：</p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mydata <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>x <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span> y <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;e&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果这两种方法都失败了，你可以用<a href="https://rdrr.io/r/base/dput.html">dput()</a>将你的数据变成代码。例如，<code>dput(mydata)</code>会生成重新创建<code>mydata</code>的代码：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dput<span class="punctuation">(</span>mydata<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; structure(list(x = 1:5, y = c(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;)), class = &quot;data.frame&quot;, row.names = c(NA, </span></span><br><span class="line"><span class="comment">#&gt; -5L))</span></span><br></pre></td></tr></table></figure><p>一旦你有了这段代码，你可以把它放在你的reprex中来生成mydata：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mydata <span class="operator">&lt;-</span> structure<span class="punctuation">(</span><span class="built_in">list</span><span class="punctuation">(</span>x <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span> y <span class="operator">=</span> structure<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span> .Label <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;b&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="string">&quot;c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;e&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">class</span> <span class="operator">=</span> <span class="string">&quot;factor&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">class</span> <span class="operator">=</span> <span class="string">&quot;data.frame&quot;</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="literal">NA</span><span class="punctuation">,</span> </span><br><span class="line"><span class="operator">-</span><span class="number">5L</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>经常在你的原始数据上运行<code>dput()</code>会产生大量的代码，所以需要找到一个说明问题的子集数据。你提供的数据集越小，其他人就越容易帮助你解决问题。</p><p>如果从磁盘中读取数据似乎是问题的不可简化的部分，最后的策略是提供一个完整的项目，包含一个<code>app.R</code>和所需的数据文件。最好的方式是作为RStudio项目托管在GitHub上，但如果没有，你可以仔细地制作一个可以在本地运行的zip文件。确保你使用相对路径（即<code>read.csv(&quot;my-data.csv&quot;)</code>而不是<code>read.csv(&quot;c:\\my-user-name\\files\\my-data.csv&quot;)</code>），这样你的代码在另一台计算机上运行时仍然有效。</p><p>你还应该考虑读者，花些时间格式化你的代码，以便于阅读。如果你采用<a href="http://style.tidyverse.org/">tidyverse风格指南</a>，你可以使用<a href="http://styler.r-lib.org/">styler</a>包自动重新格式化你的代码；这很快就能让你的代码更容易阅读。</p><h3 id="5-3-3-创建最小reprex"><a href="#5-3-3-创建最小reprex" class="headerlink" title="5.3.3 创建最小reprex"></a>5.3.3 创建最小reprex</h3><p>创建可重复的示例是很好的第一步，因为它允许其他人精确地重现你的问题。然而，通常有问题的代码通常会被埋在正常工作的代码中，所以你可以修剪掉没问题的代码来帮助那些想帮忙的人更容易上手。</p><p>创建尽可能小的reprex对于Shiny应用程序尤其重要，因为它们通常很复杂。如果你能提取出你正在挣扎的应用程序的精确部分，而不是强迫潜在的助手理解你的整个应用程序，你将获得更快、更高质量帮助。作为一个额外的好处，这个过程往往会引导你发现问题的所在，所以你不必等待别人的帮助！</p><p>将大量代码简化为基本问题是一种技能，你可能一开始并不擅长。没关系！即使代码复杂度的小小降低也会对帮助你的人有所帮助，随着时间的推移，你的reprex收缩技能将会提高。</p><p>如果你不知道你的代码哪部分触发了问题，一个好的方法是逐步从你的应用程序中删除代码段，直到问题消失。如果删除一段特定的代码使问题停止，很可能该代码与问题有关。或者，有时从一个空的应用程序开始，并逐步构建直到你再次找到问题，这可能更简单。</p><p>一旦你已经简化了你的应用程序来演示问题，值得进行最后的检查：</p><ul><li><p><code>UI</code>中的每个输入和输出是否都与问题相关？</p></li><li><p>你的应用程序是否有复杂的布局，你可以简化它来帮助关注眼前的问题吗？你删除了所有使你的应用程序看起来不错但与问题无关的UI自定义吗？</p></li><li><p><code>server()</code>中可以删除的reactives有哪些？</p></li><li><p>如果你已经尝试了多种方法来解决这个问题，你删除了所有没有奏效的尝试的痕迹吗？</p></li><li><p>您加载的每个包对于说明问题都是必要的吗？您可以通过用伪代码替换函数来消除包吗？</p></li></ul><p>这可能需要大量的工作，但是回报是巨大的：在制作reprex的过程中，您经常会发现问题的解决方案，即使没有，您也会更容易地获得帮助。</p><h3 id="5-3-4案例研究"><a href="#5-3-4案例研究" class="headerlink" title="5.3.4案例研究"></a>5.3.4案例研究</h3><p>为了说明制作顶级reprex的过程，我将使用<a href="https://community.rstudio.com/u/sanovogo">Scott Novogoratz</a>在<a href="https://community.rstudio.com/t/37982">RStudio社区</a>上发布的一个例子。初始代码非常接近reprex，但因为忘记加载一对包而无法完全重现。作为起点，我：</p><ul><li>添加了缺失的<code>library(lubridate)</code>和<code>library(xts)</code>。</li><li>将<code>ui</code>和<code>server</code>拆分为单独的对象。</li><li>使用<code>styler::style_selection()</code>重新格式化代码。</li></ul><p>这样得到了以下reprex：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">library(xts)</span><br><span class="line">library(lubridate)</span><br><span class="line">library(shiny)</span><br><span class="line"></span><br><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  uiOutput(&quot;interaction_slider&quot;),</span><br><span class="line">  verbatimTextOutput(&quot;breaks&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  df &lt;- data.frame(</span><br><span class="line">    dateTime = c(</span><br><span class="line">      &quot;2019-08-20 16:00:00&quot;,</span><br><span class="line">      &quot;2019-08-20 16:00:01&quot;,</span><br><span class="line">      &quot;2019-08-20 16:00:02&quot;,</span><br><span class="line">      &quot;2019-08-20 16:00:03&quot;,</span><br><span class="line">      &quot;2019-08-20 16:00:04&quot;,</span><br><span class="line">      &quot;2019-08-20 16:00:05&quot;</span><br><span class="line">    ),</span><br><span class="line">    var1 = c(9, 8, 11, 14, 16, 1),</span><br><span class="line">    var2 = c(3, 4, 15, 12, 11, 19),</span><br><span class="line">    var3 = c(2, 11, 9, 7, 14, 1)</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  timeSeries &lt;- as.xts(df[, 2:4], </span><br><span class="line">    order.by = strptime(df[, 1], format = &quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line">  )</span><br><span class="line">  print(paste(min(time(timeSeries)), is.POSIXt(min(time(timeSeries))), sep = &quot; &quot;))</span><br><span class="line">  print(paste(max(time(timeSeries)), is.POSIXt(max(time(timeSeries))), sep = &quot; &quot;))</span><br><span class="line"></span><br><span class="line">  output$interaction_slider &lt;- renderUI(&#123;</span><br><span class="line">    sliderInput(</span><br><span class="line">      &quot;slider&quot;,</span><br><span class="line">      &quot;Select Range:&quot;,</span><br><span class="line">      min = min(time(timeSeries)),</span><br><span class="line">      max = max(time(timeSeries)),</span><br><span class="line">      value = c(min, max)</span><br><span class="line">    )</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  brks &lt;- reactive(&#123;</span><br><span class="line">    req(input$slider)</span><br><span class="line">    seq(input$slider[1], input$slider[2], length.out = 10)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  output$breaks &lt;- brks</span><br><span class="line">&#125;</span><br><span class="line">shinyApp(ui, server)</span><br></pre></td></tr></table></figure><p>如果你运行这个 reprex，你会在最初的帖子中看到同样的问题：一个错误声明“Type mismatch for min, max, and value. Each must be Date, POSIXt, or number”。这是一个可靠的 reprex：我可以在我的电脑上轻松运行它，它立即说明了问题。然而，它有点长，所以不清楚是什么导致了问题。</p><p>为了使这个代码更简单，我们可以仔细检查每一行代码，看看它是否重要。 在做这个的时候，我发现：</p><ul><li><p>删除以 <code>print()</code> 开头的两行代码并没有影响错误。这两行代码使用了 <a href="https://lubridate.tidyverse.org/reference/posix_utils.html">lubridate::is.POSIXt()</a>，这是lubridate的唯一用途，所以一旦我删除了它们，我就不再需要加载lubridate。</p></li><li><p><code>df</code>是一个数据框，被转换为xts数据框，称为<code>timeSeries</code>。但是使用<code>timeSeries</code>的唯一方法是使用<code>time(timeSeries)</code>，它返回一个日期时间。所以我创建了一个新的变量<code>datetime</code>，其中包含一些虚拟日期时间数据。这仍然产生了相同的错误，所以我删除了<code>timeSeries</code>和<code>df</code>，因为这是唯一使用xts的地方，我还删除了<code>library(xts)</code>。</p></li></ul><p>这些更改共同产生了一个新的 <code>server()</code>，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">datetime &lt;- Sys.time() + (86400 * 0:10)</span><br><span class="line"></span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$interaction_slider &lt;- renderUI(&#123;</span><br><span class="line">    sliderInput(</span><br><span class="line">      &quot;slider&quot;,</span><br><span class="line">      &quot;Select Range:&quot;,</span><br><span class="line">      min   = min(datetime),</span><br><span class="line">      max   = max(datetime),</span><br><span class="line">      value = c(min, max)</span><br><span class="line">    )</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  brks &lt;- reactive(&#123;</span><br><span class="line">    req(input$slider)</span><br><span class="line">    seq(input$slider[1], input$slider[2], length.out = 10)</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  output$breaks &lt;- brks</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，我注意到这个例子使用了相对复杂的 Shiny 技术，其中 UI 在server函数中生成。但这里的 <a href="https://rdrr.io/pkg/shiny/man/renderUI.html">renderUI()</a> 没有使用任何反应式输入，因此如果将其从server函数中移出并放入 UI 中，它应该以相同的方式工作。</p><p>这产生了特别好的结果，因为现在错误发生得更早，甚至在我们启动应用程序之前：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  sliderInput(&quot;slider&quot;,</span><br><span class="line">    &quot;Select Range:&quot;,</span><br><span class="line">    min   = min(datetime),</span><br><span class="line">    max   = max(datetime),</span><br><span class="line">    value = c(min, max)</span><br><span class="line">  ),</span><br><span class="line">  verbatimTextOutput(&quot;breaks&quot;)</span><br><span class="line">)</span><br><span class="line">#&gt; Error: Type mismatch for `min`, `max`, and `value`.</span><br><span class="line">#&gt; i All values must have same type: either numeric, Date, or POSIXt.</span><br></pre></td></tr></table></figure><p>现在我们可以从错误消息中得到提示，并查看我们为 <code>min</code>、<code>max</code>和 <code>value</code> 提供的每个输入，以找出问题所在：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">min</span><span class="punctuation">(</span>datetime<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;2022-08-23 23:09:34 UTC&quot;</span></span><br><span class="line"><span class="built_in">max</span><span class="punctuation">(</span>datetime<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] &quot;2022-09-02 23:09:34 UTC&quot;</span></span><br><span class="line"><span class="built_in">c</span><span class="punctuation">(</span><span class="built_in">min</span><span class="punctuation">,</span> <span class="built_in">max</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [[1]]</span></span><br><span class="line"><span class="comment">#&gt; function (..., na.rm = FALSE)  .Primitive(&quot;min&quot;)</span></span><br><span class="line"><span class="comment">#&gt; </span></span><br><span class="line"><span class="comment">#&gt; [[2]]</span></span><br><span class="line"><span class="comment">#&gt; function (..., na.rm = FALSE)  .Primitive(&quot;max&quot;)</span></span><br></pre></td></tr></table></figure><p>现在问题很明显：我们没有指定 <code>min</code> 和 <code>max</code> 变量，所以我们意外地将 <code>min()</code> 和 <code>max()</code> 函数传递给了 <code>sliderInput()</code>。解决这个问题的一种方法是使用 <code>range()</code> 代替：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  sliderInput(&quot;slider&quot;,</span><br><span class="line">    &quot;Select Range:&quot;,</span><br><span class="line">    min   = min(datetime),</span><br><span class="line">    max   = max(datetime),</span><br><span class="line">    value = range(datetime)</span><br><span class="line">  ),</span><br><span class="line">  verbatimTextOutput(&quot;breaks&quot;)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这是创建reprex的典型结果：一旦将问题简化为其关键组成部分，解决方案就会变得显而易见。创建好的reprex是一种非常强大的调试技术。</p><p>为了简化这个过程，我不得不做大量的实验，并阅读一些我不熟悉的函数。如果这是你的代码，通常会容易得多，因为你已经理解了代码的意图。不过，你通常需要做一些实验，以找出问题到底来自哪里。这可能会令人沮丧，而且感觉很耗时，但它有很多好处：</p><ul><li><p>它使您能够创建问题的描述，任何知道Shiny的人都可以访问该描述，而不是任何知道Shiny和您正在使用的特定领域的人。</p></li><li><p>你将建立一个更好的关于你的代码如何工作的心理模型，这意味着你将来不太可能犯同样或类似的错误。</p></li><li><p>随着时间的推移，你会越来越快地创建reprex，这将成为你在调试时常用的技术之一。</p></li><li><p>即使你没有创建一个完美的 reprex，你也可以做任何工作来改进你的 reprex，这样别人要做的工作就会减少。如果你想从软件包开发人员那里得到帮助，这一点尤其重要，因为他们通常对时间有很多要求。</p></li></ul><p>当我在 RStudio 社区上尝试帮助别人使用他们的应用程序时，创建 reprex 总是我做的第一件事。这不是我用来打发不想帮助的人的简单工作练习：这正是我开始的地方！</p><h2 id="5-4-总结"><a href="#5-4-总结" class="headerlink" title="5.4 总结"></a>5.4 总结</h2><p>本章为您提供了开发应用程序、调试问题和获取帮助的一些有用工作流。这些工作流程可能看起来有点抽象，容易被忽略，因为它们并没有具体地改善单个应用程序。但我认为工作流是我的“秘密”力量之一：我之所以能够取得如此大的成就，原因之一是我花时间分析和改进我的工作流程。我强烈建议您也这样做！</p><p>下一章是关于布局和主题的有用技术精选，您可以随意跳到当前应用程序所需章节。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shiny入门系列,编程 - Shiny入门系列 - 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——4-挖坑完毕之案例研究</title>
      <link href="/post/377b.html"/>
      <url>/post/377b.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-案例研究：ER损伤"><a href="#4-案例研究：ER损伤" class="headerlink" title="4 案例研究：ER损伤"></a>4 案例研究：ER损伤</h1><h2 id="4-1-简介"><a href="#4-1-简介" class="headerlink" title="4.1 简介"></a>4.1 简介</h2><p>在过去的三个章节中，我向您介绍了一系列新概念。为了帮助理解他们，我们现在将浏览一个更丰富的Shiny应用程序，该应用程序探索了一个有趣的数据集，并将您迄今为止看到的许多想法整合在一起。我们将从Shiny之外进行一些数据分析开始，然后将其转化为应用程序，从简单开始，然后逐步添加更多细节。</p><p>在本章中，我们将使用vroom（用于快速读取文件）和tidyverse（用于一般数据分析）来补充Shiny。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>vroom<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>tidyverse<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="4-2-数据"><a href="#4-2-数据" class="headerlink" title="4.2 数据"></a>4.2 数据</h2><p>我们将探索消费者产品安全委员会收集的美国国家电子伤害监测系统 (NEISS) 的数据。这是一项长期研究，记录了美国代表性医院中发生的所有事故。这是一个有趣的数据集，因为每个人都熟悉这个领域，每个观察都附有简短的叙述，解释事故是如何发生的。您可以在 <a href="https://github.com/hadley/neiss">https://github.com/hadley/neiss</a> 了解有关此数据集的更多信息。</p><p>在本章中，我将只关注2017年的数据。这使得数据足够小（约10 MB），易于存储在git中（以及本书的其余部分），这意味着我们不需要考虑快速导入数据的复杂策略（我们将在本书稍后回到这些策略）。您可以在<a href="https://github.com/hadley/mastering-shiny/blob/master/neiss/data.R">https://github.com/hadley/mastering-shiny/blob/master/neiss/data.R</a>上看到我用于创建本章提取的代码。</p><p>如果你想把数据传到自己的电脑上，运行这段代码：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dir.create<span class="punctuation">(</span><span class="string">&quot;neiss&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; Warning in dir.create(&quot;neiss&quot;): &#x27;neiss&#x27; already exists</span></span><br><span class="line">download <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>name<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  url <span class="operator">&lt;-</span> <span class="string">&quot;https://github.com/hadley/mastering-shiny/raw/master/neiss/&quot;</span></span><br><span class="line">  download.file<span class="punctuation">(</span>paste0<span class="punctuation">(</span>url<span class="punctuation">,</span> name<span class="punctuation">)</span><span class="punctuation">,</span> paste0<span class="punctuation">(</span><span class="string">&quot;neiss/&quot;</span><span class="punctuation">,</span> name<span class="punctuation">)</span><span class="punctuation">,</span> quiet <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">download<span class="punctuation">(</span><span class="string">&quot;injuries.tsv.gz&quot;</span><span class="punctuation">)</span></span><br><span class="line">download<span class="punctuation">(</span><span class="string">&quot;population.tsv&quot;</span><span class="punctuation">)</span></span><br><span class="line">download<span class="punctuation">(</span><span class="string">&quot;products.tsv&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>我们将使用的主要数据集是伤害数据集，其中包含约25万条观察记录：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">injuries <span class="operator">&lt;-</span> vroom<span class="operator">::</span>vroom<span class="punctuation">(</span><span class="string">&quot;neiss/injuries.tsv.gz&quot;</span><span class="punctuation">)</span></span><br><span class="line">injuries</span><br><span class="line"><span class="comment">#&gt; # A tibble: 255,064 × 10</span></span><br><span class="line"><span class="comment">#&gt;   trmt_date    age sex   race  body_part   diag    locat…¹ prod_…² weight narra…³</span></span><br><span class="line"><span class="comment">#&gt;   &lt;date&gt;     &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;  </span></span><br><span class="line"><span class="comment">#&gt; 1 2017-01-01    71 male  white Upper Trunk Contus… Other …    1807   77.7 71YOM …</span></span><br><span class="line"><span class="comment">#&gt; 2 2017-01-01    16 male  white Lower Arm   Burns,… Home        676   77.7 16YOM …</span></span><br><span class="line"><span class="comment">#&gt; 3 2017-01-01    58 male  white Upper Trunk Contus… Home        649   77.7 58 YOM…</span></span><br><span class="line"><span class="comment">#&gt; 4 2017-01-01    21 male  white Lower Trunk Strain… Home       4076   77.7 21 YOM…</span></span><br><span class="line"><span class="comment">#&gt; 5 2017-01-01    54 male  white Head        Inter … Other …    1807   77.7 54 YOM…</span></span><br><span class="line"><span class="comment">#&gt; 6 2017-01-01    21 male  white Hand        Fractu… Home       1884   77.7 21 YOM…</span></span><br><span class="line"><span class="comment">#&gt; # … with 255,058 more rows, and abbreviated variable names ¹​location,</span></span><br><span class="line"><span class="comment">#&gt; #   ²​prod_code, ³​narrative</span></span><br></pre></td></tr></table></figure><p>每行代表一起单次事故，有10个变量：</p><ul><li><p><code>trmt_date</code>是该人被送往医院的日期（不是事故发生的日期）。</p></li><li><p><code>age</code>、<code>sex</code>和<code>race</code>给出了发生事故的人的人口统计信息。</p></li><li><p><code>body_part</code>是身体受伤部位的位置（如脚踝或耳朵）；<code>location</code>是事故发生的地方（如家庭或学校）。</p></li><li><p><code>diag</code>给出了伤害的基本诊断（如骨折或撕裂）。</p></li><li><p><code>prod_code</code>是与伤害相关的主要产品。</p></li><li><p><code>weight</code>是统计权重，给出了如果将此数据集按比例缩放到整个美国人口，遭受这种伤害的人数估计。</p></li><li><p><code>narrative</code>是关于事故如何发生的简短故事。</p></li></ul><p>我们将将其与其他两个数据帧配对以获取更多上下文：<code>products</code>让我们可以从产品代码中查找产品名称，<code>population</code>让我们知道2017年美国每一种年龄和性别组合的总人口数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">products <span class="operator">&lt;-</span> vroom<span class="operator">::</span>vroom<span class="punctuation">(</span><span class="string">&quot;neiss/products.tsv&quot;</span><span class="punctuation">)</span></span><br><span class="line">products</span><br><span class="line"><span class="comment">#&gt; # A tibble: 38 × 2</span></span><br><span class="line"><span class="comment">#&gt;   prod_code title                            </span></span><br><span class="line"><span class="comment">#&gt;       &lt;dbl&gt; &lt;chr&gt;                            </span></span><br><span class="line"><span class="comment">#&gt; 1       464 knives, not elsewhere classified </span></span><br><span class="line"><span class="comment">#&gt; 2       474 tableware and accessories        </span></span><br><span class="line"><span class="comment">#&gt; 3       604 desks, chests, bureaus or buffets</span></span><br><span class="line"><span class="comment">#&gt; 4       611 bathtubs or showers              </span></span><br><span class="line"><span class="comment">#&gt; 5       649 toilets                          </span></span><br><span class="line"><span class="comment">#&gt; 6       676 rugs or carpets, not specified   </span></span><br><span class="line"><span class="comment">#&gt; # … with 32 more rows</span></span><br><span class="line"></span><br><span class="line">population <span class="operator">&lt;-</span> vroom<span class="operator">::</span>vroom<span class="punctuation">(</span><span class="string">&quot;neiss/population.tsv&quot;</span><span class="punctuation">)</span></span><br><span class="line">population</span><br><span class="line"><span class="comment">#&gt; # A tibble: 170 × 3</span></span><br><span class="line"><span class="comment">#&gt;     age sex    population</span></span><br><span class="line"><span class="comment">#&gt;   &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1     0 female    1924145</span></span><br><span class="line"><span class="comment">#&gt; 2     0 male      2015150</span></span><br><span class="line"><span class="comment">#&gt; 3     1 female    1943534</span></span><br><span class="line"><span class="comment">#&gt; 4     1 male      2031718</span></span><br><span class="line"><span class="comment">#&gt; 5     2 female    1965150</span></span><br><span class="line"><span class="comment">#&gt; 6     2 male      2056625</span></span><br><span class="line"><span class="comment">#&gt; # … with 164 more rows</span></span><br></pre></td></tr></table></figure><h2 id="4-3-探索"><a href="#4-3-探索" class="headerlink" title="4.3 探索"></a>4.3 探索</h2><p>在我们创建应用程序之前，让我们先来探索一下数据。我们将从一款具有有趣故事的产品开始：649，“厕所”。首先，我们将提取与此产品相关的伤害：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">selected <span class="operator">&lt;-</span> injuries <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>prod_code <span class="operator">==</span> <span class="number">649</span><span class="punctuation">)</span></span><br><span class="line">nrow<span class="punctuation">(</span>selected<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] 2993</span></span><br></pre></td></tr></table></figure><p>接下来，我们将进行一些基本的汇总，查看与厕所相关的伤害的位置、身体部位和诊断。请注意，我用<code>weight</code>变量加权，这样计数可以解释为整个美国估计的总伤害数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">selected <span class="operator">%&gt;%</span> count<span class="punctuation">(</span>location<span class="punctuation">,</span> wt <span class="operator">=</span> weight<span class="punctuation">,</span> sort <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 6 × 2</span></span><br><span class="line"><span class="comment">#&gt;   location                         n</span></span><br><span class="line"><span class="comment">#&gt;   &lt;chr&gt;                        &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1 Home                       99603. </span></span><br><span class="line"><span class="comment">#&gt; 2 Other Public Property      18663. </span></span><br><span class="line"><span class="comment">#&gt; 3 Unknown                    16267. </span></span><br><span class="line"><span class="comment">#&gt; 4 School                       659. </span></span><br><span class="line"><span class="comment">#&gt; 5 Street Or Highway             16.2</span></span><br><span class="line"><span class="comment">#&gt; 6 Sports Or Recreation Place    14.8</span></span><br><span class="line"></span><br><span class="line">selected <span class="operator">%&gt;%</span> count<span class="punctuation">(</span>body_part<span class="punctuation">,</span> wt <span class="operator">=</span> weight<span class="punctuation">,</span> sort <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 24 × 2</span></span><br><span class="line"><span class="comment">#&gt;   body_part        n</span></span><br><span class="line"><span class="comment">#&gt;   &lt;chr&gt;        &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1 Head        31370.</span></span><br><span class="line"><span class="comment">#&gt; 2 Lower Trunk 26855.</span></span><br><span class="line"><span class="comment">#&gt; 3 Face        13016.</span></span><br><span class="line"><span class="comment">#&gt; 4 Upper Trunk 12508.</span></span><br><span class="line"><span class="comment">#&gt; 5 Knee         6968.</span></span><br><span class="line"><span class="comment">#&gt; 6 N.S./Unk     6741.</span></span><br><span class="line"><span class="comment">#&gt; # … with 18 more rows</span></span><br><span class="line"></span><br><span class="line">selected <span class="operator">%&gt;%</span> count<span class="punctuation">(</span>diag<span class="punctuation">,</span> wt <span class="operator">=</span> weight<span class="punctuation">,</span> sort <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 20 × 2</span></span><br><span class="line"><span class="comment">#&gt;   diag                       n</span></span><br><span class="line"><span class="comment">#&gt;   &lt;chr&gt;                  &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1 Other Or Not Stated   32897.</span></span><br><span class="line"><span class="comment">#&gt; 2 Contusion Or Abrasion 22493.</span></span><br><span class="line"><span class="comment">#&gt; 3 Inter Organ Injury    21525.</span></span><br><span class="line"><span class="comment">#&gt; 4 Fracture              21497.</span></span><br><span class="line"><span class="comment">#&gt; 5 Laceration            18734.</span></span><br><span class="line"><span class="comment">#&gt; 6 Strain, Sprain         7609.</span></span><br><span class="line"><span class="comment">#&gt; # … with 14 more rows</span></span><br></pre></td></tr></table></figure><p>正如你可能预期的那样，涉及厕所的伤害最常发生在家里。最常涉及的身体部位可能表明这些伤害是跌倒造成的（因为头部和脸部通常不涉及日常厕所使用），而且诊断似乎相当多样化。</p><p>我们还可以探索年龄和性别之间的模式。这里我们有足够的数据，表格不是很有用，所以我做了一个图，图4.1，这使得图案更加明显。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">summary <span class="operator">&lt;-</span> selected <span class="operator">%&gt;%</span> </span><br><span class="line">  count<span class="punctuation">(</span>age<span class="punctuation">,</span> sex<span class="punctuation">,</span> wt <span class="operator">=</span> weight<span class="punctuation">)</span></span><br><span class="line">summary</span><br><span class="line"><span class="comment">#&gt; # A tibble: 208 × 3</span></span><br><span class="line"><span class="comment">#&gt;     age sex         n</span></span><br><span class="line"><span class="comment">#&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1     0 female   4.76</span></span><br><span class="line"><span class="comment">#&gt; 2     0 male    14.3 </span></span><br><span class="line"><span class="comment">#&gt; 3     1 female 253.  </span></span><br><span class="line"><span class="comment">#&gt; 4     1 male   231.  </span></span><br><span class="line"><span class="comment">#&gt; 5     2 female 438.  </span></span><br><span class="line"><span class="comment">#&gt; 6     2 male   632.  </span></span><br><span class="line"><span class="comment">#&gt; # … with 202 more rows</span></span><br><span class="line"></span><br><span class="line">summary <span class="operator">%&gt;%</span> </span><br><span class="line">  ggplot<span class="punctuation">(</span>aes<span class="punctuation">(</span>age<span class="punctuation">,</span> n<span class="punctuation">,</span> colour <span class="operator">=</span> sex<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  geom_line<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  labs<span class="punctuation">(</span>y <span class="operator">=</span> <span class="string">&quot;Estimated number of injuries&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>  <img src="https://d33wubrfki0l68.cloudfront.net/ca164e63cd77225daf58fc6351cf6453e04e0af6/76632/basic-case-study_files/figure-html/toilets-raw-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/ca164e63cd77225daf58fc6351cf6453e04e0af6/76632/basic-case-study_files/figure-html/toilets-raw-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图4.1 按年龄和性别分列的厕所造成的伤害估计数"></p><p>我们可以看到，小男孩在3岁时达到峰值，然后从中年开始有所增加（特别是对女性而言），在80岁以后逐渐下降。我认为峰值是因为男孩通常站着上厕所，而女性的增加是因为骨质疏松症（即，我怀疑男性和女性的受伤率相同，但更多的女性最终进入急诊室是因为她们骨折的风险更高）。</p><p>解释这种模式的难点在于，我们知道老年人比年轻人少，因此受伤的人口更少。我们可以通过将受伤人数与总人口进行比较并计算伤害率来控制这一点。这里我使用的是每10,000人的比率。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">summary <span class="operator">&lt;-</span> selected <span class="operator">%&gt;%</span> </span><br><span class="line">  count<span class="punctuation">(</span>age<span class="punctuation">,</span> sex<span class="punctuation">,</span> wt <span class="operator">=</span> weight<span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  left_join<span class="punctuation">(</span>population<span class="punctuation">,</span> by <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;age&quot;</span><span class="punctuation">,</span> <span class="string">&quot;sex&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  mutate<span class="punctuation">(</span>rate <span class="operator">=</span> n <span class="operator">/</span> population <span class="operator">*</span> <span class="number">1e4</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">summary</span><br><span class="line"><span class="comment">#&gt; # A tibble: 208 × 5</span></span><br><span class="line"><span class="comment">#&gt;     age sex         n population   rate</span></span><br><span class="line"><span class="comment">#&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1     0 female   4.76    1924145 0.0247</span></span><br><span class="line"><span class="comment">#&gt; 2     0 male    14.3     2015150 0.0708</span></span><br><span class="line"><span class="comment">#&gt; 3     1 female 253.      1943534 1.30  </span></span><br><span class="line"><span class="comment">#&gt; 4     1 male   231.      2031718 1.14  </span></span><br><span class="line"><span class="comment">#&gt; 5     2 female 438.      1965150 2.23  </span></span><br><span class="line"><span class="comment">#&gt; 6     2 male   632.      2056625 3.07  </span></span><br><span class="line"><span class="comment">#&gt; # … with 202 more rows</span></span><br></pre></td></tr></table></figure><p>绘制比率图（图4.2），50岁以后的趋势明显不同：男女之间的差异要小得多，我们不再看到下降。这是因为女性往往比男性寿命更长，所以在老年时，更多的女性仍然活着并可能因厕所受伤。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">summary <span class="operator">%&gt;%</span> </span><br><span class="line">  ggplot<span class="punctuation">(</span>aes<span class="punctuation">(</span>age<span class="punctuation">,</span> rate<span class="punctuation">,</span> colour <span class="operator">=</span> sex<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  geom_line<span class="punctuation">(</span>na.rm <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  labs<span class="punctuation">(</span>y <span class="operator">=</span> <span class="string">&quot;Injuries per 10,000 people&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/35c1766902243f1fc9fa1aa92c6a57bd9eb31ccd/382fd/basic-case-study_files/figure-html/toilets-rate-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/35c1766902243f1fc9fa1aa92c6a57bd9eb31ccd/382fd/basic-case-study_files/figure-html/toilets-rate-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图4.2 按年龄和性别分列的每10,000人受伤估计率"></p><p>（注意，比率只到80岁，因为我找不到80岁以上年龄的人口数据。）</p><p>最后，我们可以浏览一些叙述。通过浏览这些叙述是一种非正式的方法，可以检查我们的假设，并产生新的想法以进一步探索。这里我随机抽取了10个样本：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">selected <span class="operator">%&gt;%</span> </span><br><span class="line">  sample_n<span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  pull<span class="punctuation">(</span>narrative<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;  [1] &quot;79 YOM LOW BACK PAIN AFTER SLIPPING OFF TOILET AT HOME 1 WEEK AGO.DX DEGENERATIVE DISC DISEASE, BLUMBAR, MECHANICAL FALL, SEPSIS&quot;</span></span><br><span class="line"><span class="comment">#&gt;  [2] &quot;88YOF PRESENTS AFTER FALLING OFF THE TOILET AT HOME AND HITTING CHEST WALL. DX: RIGHT CHEST WALL PAIN S/P FALL.*&quot;                </span></span><br><span class="line"><span class="comment">#&gt;  [3] &quot;73YOF WAS SITTING ON A PUBLIC TOILET AND PASSED OUT FELL OF FONTO HEADCLOSED HEAD INJURY ADMITTED FOR SYNCOPE&quot;                   </span></span><br><span class="line"><span class="comment">#&gt;  [4] &quot;97 YOM FELL HITTING HEAD ON TOILET SEAT.DX:  NECK PX, BACK PX, FREQUENT FALLS.&quot;                                                  </span></span><br><span class="line"><span class="comment">#&gt;  [5] &quot;32YOM FROM RENEWAL CENTER WAS SNORTING *** AND FELL OFF THE TOILET STRIKING HIS HEAD DX MINOR CHI&quot;                               </span></span><br><span class="line"><span class="comment">#&gt;  [6] &quot;71YOF LOST BALANCE SITTING ON TOILET AT HOME AND INJURIED SHOULDER.  DX:  LT SHOULDER INJURY.&quot;                                   </span></span><br><span class="line"><span class="comment">#&gt;  [7] &quot;99YOF FALL OFF TOILET AND C/O SHOULDER PAIN/ CONTUSION R SHOULDER&quot;                                                               </span></span><br><span class="line"><span class="comment">#&gt;  [8] &quot;26 YOM TRIPPED AND FELL STRIKING KAND ON TOILET SEAT.DX:  R HAND LAC 5 CM.&quot;                                                      </span></span><br><span class="line"><span class="comment">#&gt;  [9] &quot;86YOF TURNED HEAD &amp; BECAME DIZZY, FELL AGAINST TOILET INJURING SHOULDER/CT SHOULDER&quot;                                             </span></span><br><span class="line"><span class="comment">#&gt; [10] &quot;70 YOF - SYNCOPE - PT WAS SITTING ON TOILET AND FELL @ HOME.&quot;</span></span><br></pre></td></tr></table></figure><p>对于一个产品进行了这种探索之后，如果我们能够轻松地对其他产品进行这种探索，而无需重新输入代码，那将是非常好的。所以让我们制作一个Shiny应用程序！</p><h2 id="4-4-原型"><a href="#4-4-原型" class="headerlink" title="4.4 原型"></a>4.4 原型</h2><p>在构建一个复杂的应用程序时，我强烈建议您尽可能从简单开始，这样您可以在开始进行更复杂的操作之前确认基本机制可以运行。在这里，我将从一个输入（产品代码）、三个表和一个图形开始。</p><p>在设计第一个原型时，挑战在于使其“尽可能简单”。在快速实现基本功能和为应用程序的未来做计划之间存在紧张关系。任何极端都可能很糟糕：如果你设计得太狭窄，你将在稍后花费大量时间重新设计你的应用程序；如果你设计得太严格，你将花费大量时间编写最终将被删除的代码。为了帮助找到平衡，我经常在代码之前用铅笔画一些草图来快速探索用户界面和反应图。</p><p>在这里，我决定将一行用于输入（考虑到在应用程序完成之前我可能会添加更多输入），一行用于所有三个表格（给每个表格4列，占12列宽度的1&#x2F;3），然后一行用于图形：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">prod_codes &lt;- setNames(products$prod_code, products$title)</span><br><span class="line"></span><br><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  fluidRow(</span><br><span class="line">    column(6,</span><br><span class="line">      selectInput(&quot;code&quot;, &quot;Product&quot;, choices = prod_codes)</span><br><span class="line">    )</span><br><span class="line">  ),</span><br><span class="line">  fluidRow(</span><br><span class="line">    column(4, tableOutput(&quot;diag&quot;)),</span><br><span class="line">    column(4, tableOutput(&quot;body_part&quot;)),</span><br><span class="line">    column(4, tableOutput(&quot;location&quot;))</span><br><span class="line">  ),</span><br><span class="line">  fluidRow(</span><br><span class="line">    column(12, plotOutput(&quot;age_sex&quot;))</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>我们还没有谈论<code>fluidRow()</code>和<code>column()</code>，但你应该能够从上下文中猜测它们的作用，我们将在第6.2.3节回来讨论它们。另外请注意在<code>selectInput()</code> <code>choices</code>中使用<code>setNames()</code>：它在用户界面中显示产品名称并返回产品代码到server。</p><p>server函数相对简单。我先将上一节中创建的<code>selected</code>和<code>summary</code>变量转换为反应式表达式。这是一个合理的通用模式：您在数据分析中创建变量以分解分析步骤，并避免多次重新计算，而Shiny应用程序中的反应式表达式起到相同的作用。</p><p>通常，在开始Shiny应用程序之前，花一些时间清理你的分析代码是一个好主意，这样你就可以在添加反应性的额外复杂性之前用常规R代码来考虑这些问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  selected &lt;- reactive(injuries %&gt;% filter(prod_code == input$code))</span><br><span class="line"></span><br><span class="line">  output$diag &lt;- renderTable(</span><br><span class="line">    selected() %&gt;% count(diag, wt = weight, sort = TRUE)</span><br><span class="line">  )</span><br><span class="line">  output$body_part &lt;- renderTable(</span><br><span class="line">    selected() %&gt;% count(body_part, wt = weight, sort = TRUE)</span><br><span class="line">  )</span><br><span class="line">  output$location &lt;- renderTable(</span><br><span class="line">    selected() %&gt;% count(location, wt = weight, sort = TRUE)</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  summary &lt;- reactive(&#123;</span><br><span class="line">    selected() %&gt;%</span><br><span class="line">      count(age, sex, wt = weight) %&gt;%</span><br><span class="line">      left_join(population, by = c(&quot;age&quot;, &quot;sex&quot;)) %&gt;%</span><br><span class="line">      mutate(rate = n / population * 1e4)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  output$age_sex &lt;- renderPlot(&#123;</span><br><span class="line">    summary() %&gt;%</span><br><span class="line">      ggplot(aes(age, n, colour = sex)) +</span><br><span class="line">      geom_line() +</span><br><span class="line">      labs(y = &quot;Estimated number of injuries&quot;)</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，在这里创建summary反应式并不是严格必要的，因为它仅被一个反应式消费者使用。但是，将计算和绘图分开是很好的做法，因为这样可以使应用程序的流程更易于理解，并且将来更易于推广。</p><p>最终应用程序的屏幕截图如图4.3所示。您可以在此处找到源代码：<a href="https://github.com/hadley/mastering-shiny/tree/master/neiss/prototype.R">https://github.com/hadley/mastering-shiny/tree/master/neiss/prototype.R</a>，并尝试运行该应用程序的实时版本：<a href="https://hadley.shinyapps.io/ms-prototype/">https://hadley.shinyapps.io/ms-prototype/</a>。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/0671024307798129536ceb17723b862ec709f14f/cd879/demos/basic-case-study/prototype.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/0671024307798129536ceb17723b862ec709f14f/cd879/demos/basic-case-study/prototype.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图4.3 NEISS探索应用程序的第一个原型"></p><h2 id="4-5-完善表格"><a href="#4-5-完善表格" class="headerlink" title="4.5 完善表格"></a>4.5 完善表格</h2><p>既然我们已经将基本组件放置并运行，我们可以逐步改进我们的应用程序。这个应用程序的第一个问题是，它在表格中显示了很多信息，我们可能只想知道重点。为了解决这个问题，我们需要首先找出如何截断表格。我选择通过组合forcats函数来实现：我将变量转换为因子，按级别的频率排序，然后将前五个级别之后的所有级别都放在一起。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">injuries <span class="operator">%&gt;%</span></span><br><span class="line">  mutate<span class="punctuation">(</span>diag <span class="operator">=</span> fct_lump<span class="punctuation">(</span>fct_infreq<span class="punctuation">(</span>diag<span class="punctuation">)</span><span class="punctuation">,</span> n <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">  group_by<span class="punctuation">(</span>diag<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">  summarise<span class="punctuation">(</span>n <span class="operator">=</span> <span class="built_in">as.integer</span><span class="punctuation">(</span><span class="built_in">sum</span><span class="punctuation">(</span>weight<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; # A tibble: 6 × 2</span></span><br><span class="line"><span class="comment">#&gt;   diag                        n</span></span><br><span class="line"><span class="comment">#&gt;   &lt;fct&gt;                   &lt;int&gt;</span></span><br><span class="line"><span class="comment">#&gt; 1 Other Or Not Stated   1806436</span></span><br><span class="line"><span class="comment">#&gt; 2 Fracture              1558961</span></span><br><span class="line"><span class="comment">#&gt; 3 Laceration            1432407</span></span><br><span class="line"><span class="comment">#&gt; 4 Strain, Sprain        1432556</span></span><br><span class="line"><span class="comment">#&gt; 5 Contusion Or Abrasion 1451987</span></span><br><span class="line"><span class="comment">#&gt; 6 Other                 1929147</span></span><br></pre></td></tr></table></figure><p>因为我知道如何做到这一点，所以我编写了一个小函数来自动执行此操作，对任何变量。这里的细节并不是那么重要，但我们将在第12章中回到它们。您也可以通过复制和粘贴解决问题，因此如果代码看起来完全陌生，请不要担心。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">count_top <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>df<span class="punctuation">,</span> var<span class="punctuation">,</span> n <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  df <span class="operator">%&gt;%</span></span><br><span class="line">    mutate<span class="punctuation">(</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span> var <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span> <span class="operator">:=</span> fct_lump<span class="punctuation">(</span>fct_infreq<span class="punctuation">(</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span> var <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">)</span><span class="punctuation">,</span> n <span class="operator">=</span> n<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    group_by<span class="punctuation">(</span><span class="punctuation">&#123;</span><span class="punctuation">&#123;</span> var <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    summarise<span class="punctuation">(</span>n <span class="operator">=</span> <span class="built_in">as.integer</span><span class="punctuation">(</span><span class="built_in">sum</span><span class="punctuation">(</span>weight<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>接下来采用server函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">output$diag &lt;- renderTable(count_top(selected(), diag), width = &quot;100%&quot;)</span><br><span class="line">  output$body_part &lt;- renderTable(count_top(selected(), body_part), width = &quot;100%&quot;)</span><br><span class="line">  output$location &lt;- renderTable(count_top(selected(), location), width = &quot;100%&quot;)</span><br></pre></td></tr></table></figure><p>我做了另一个更改来改善应用程序的美观性：我强制所有表占据最大宽度（即填充它们出现的列）。这使得输出在美学上更加美观，因为它减少了偶然变化的数量。</p><p>应用程序运行结果的屏幕截图如图4.4所示。您可以在<a href="https://github.com/hadley/mastering-shiny/tree/master/neiss/polish-tables.R">https://github.com/hadley/mastering-shiny/tree/master/neiss/polish-tables.R</a>中找到源代码，并在<a href="https://hadley.shinyapps.io/ms-polish-tables">https://hadley.shinyapps.io/ms-polish-tables</a>上试用该应用程序的实时版本。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/9ab24257bb441350c7e2d57bd09fe9452cae592e/779c3/demos/basic-case-study/polish-tables.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/9ab24257bb441350c7e2d57bd09fe9452cae592e/779c3/demos/basic-case-study/polish-tables.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图4.4 应用程序的第二次迭代通过仅显示总结表中最常见行来改进显示效果"></p><h2 id="4-6-发生率与计数"><a href="#4-6-发生率与计数" class="headerlink" title="4.6 发生率与计数"></a>4.6 发生率与计数</h2><p>目前为止，我们只显示了一个图表，但我们希望用户可以选择显示受伤人数或标准化发生率。首先，我在用户界面中添加了一个控件。在这里，我选择使用<code>selectInput()</code>，因为它使两种状态都变得明确，并且将来很容易添加新的状态：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fluidRow(</span><br><span class="line">    column(8,</span><br><span class="line">      selectInput(&quot;code&quot;, &quot;Product&quot;,</span><br><span class="line">        choices = setNames(products$prod_code, products$title),</span><br><span class="line">        width = &quot;100%&quot;</span><br><span class="line">      )</span><br><span class="line">    ),</span><br><span class="line">    column(2, selectInput(&quot;y&quot;, &quot;Y axis&quot;, c(&quot;rate&quot;, &quot;count&quot;)))</span><br><span class="line">  ),</span><br></pre></td></tr></table></figure><p>（我默认选择发生率，因为我认为这样更安全；您不需要了解人口分布就可以正确解释图表。）</p><p>然后，我在生成图表时根据输入进行条件设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">output$age_sex &lt;- renderPlot(&#123;</span><br><span class="line">    if (input$y == &quot;count&quot;) &#123;</span><br><span class="line">      summary() %&gt;%</span><br><span class="line">        ggplot(aes(age, n, colour = sex)) +</span><br><span class="line">        geom_line() +</span><br><span class="line">        labs(y = &quot;Estimated number of injuries&quot;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      summary() %&gt;%</span><br><span class="line">        ggplot(aes(age, rate, colour = sex)) +</span><br><span class="line">        geom_line(na.rm = TRUE) +</span><br><span class="line">        labs(y = &quot;Injuries per 10,000 people&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, res = 96)</span><br></pre></td></tr></table></figure><p>结果应用程序的屏幕截图如图4.5所示。您可以在<a href="https://github.com/hadley/mastering-shiny/tree/master/neiss/rate-vs-count.R">https://github.com/hadley/mastering-shiny/tree/master/neiss/rate-vs-count.R</a>中找到源代码，并在<a href="https://hadley.shinyapps.io/ms-rate-vs-count">https://hadley.shinyapps.io/ms-rate-vs-count</a>上试用该应用程序的实时版本。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/57dcd9e1cf0724f9c4af5d20972e410a5203b5e6/d119e/demos/basic-case-study/rate-vs-count.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/57dcd9e1cf0724f9c4af5d20972e410a5203b5e6/d119e/demos/basic-case-study/rate-vs-count.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图4.5 在此迭代中，我们允许用户在显示y轴上的计数或人口标准化率之间进行切换。"></p><h2 id="4-7-叙述"><a href="#4-7-叙述" class="headerlink" title="4.7 叙述"></a>4.7 叙述</h2><p>最后，我想提供一种方式来访问这些叙述，因为它们很有趣，而且它们提供了一种非正式的方式，可以在查看图表时检查你提出的假设。在R代码中，我同时采样多个叙述，但在你可以交互探索的应用程序中没有理由这样做。</p><p>解决方案分为两个部分。首先，我们在用户界面底部添加一行。我使用一个动作按钮来触发一个新的故事，并将叙述放在一个<code>textOutput()</code>中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fluidRow(</span><br><span class="line">    column(2, actionButton(&quot;story&quot;, &quot;Tell me a story&quot;)),</span><br><span class="line">    column(10, textOutput(&quot;narrative&quot;))</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>然后，我使用<code>eventReactive()</code>创建一个反应，只有在按钮被点击或底层数据改变时才会更新。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">narrative_sample &lt;- eventReactive(</span><br><span class="line">    list(input$story, selected()),</span><br><span class="line">    selected() %&gt;% pull(narrative) %&gt;% sample(1)</span><br><span class="line">  )</span><br><span class="line">  output$narrative &lt;- renderText(narrative_sample())</span><br></pre></td></tr></table></figure><p>结果应用程序的屏幕截图如图4.6所示。您可以在<a href="https://github.com/hadley/mastering-shiny/tree/master/neiss/narrative.R">https://github.com/hadley/mastering-shiny/tree/master/neiss/narrative.R</a>中找到源代码，并在<a href="https://hadley.shinyapps.io/ms-narrative">https://hadley.shinyapps.io/ms-narrative</a>上试用该应用程序的实时版本。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/d62551b4bee05d3bd17b852b30b2fd55066e58dc/0d9bf/demos/basic-case-study/narrative.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/d62551b4bee05d3bd17b852b30b2fd55066e58dc/0d9bf/demos/basic-case-study/narrative.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图4.6 最终迭代增加了从选定行中随机抽取叙述的功能"></p><h2 id="4-8-练习"><a href="#4-8-练习" class="headerlink" title="4.8 练习"></a>4.8 练习</h2><ul><li><p>为每个应用程序绘制反应图。</p></li><li><p>在减少摘要表的代码中，如果将<code>fct_infreq()</code>和<code>fct_lump()</code>翻转，会发生什么？</p></li><li><p>添加一个输入控件，让用户决定在摘要表中显示的行数。</p></li><li><p>提供一种系统地使用前后按钮逐步浏览每个叙述的方法。</p></li></ul><p><strong>高级</strong>：使叙述列表“循环”，以便从最后一个叙述前进到第一个叙述。</p><h2 id="4-9-总结"><a href="#4-9-总结" class="headerlink" title="4.9 总结"></a>4.9 总结</h2><p>现在，您已经掌握了Shiny应用程序的基本知识，接下来的七章将为您提供一系列重要的技术。一旦您阅读了下一章关于工作流的章节，我建议您浏览其余章节以了解它们的涵盖内容，然后在需要应用程序技术时再回来阅读。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shiny入门系列,编程 - Shiny入门系列 - 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——3-在特别大的花园里面挖呀挖呀挖</title>
      <link href="/post/41c3.html"/>
      <url>/post/41c3.html</url>
      
        <content type="html"><![CDATA[<h1 id="3-基础反应性"><a href="#3-基础反应性" class="headerlink" title="3 基础反应性"></a>3 基础反应性</h1><h2 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h2><p>在Shiny中，您使用反应式编程来表达服务器逻辑。反应式编程是一种优雅而强大的编程范式，但起初可能会让人感到迷失，因为它与编写脚本的范式非常不同。反应式编程的关键思想是定义一个依赖图，这样当输入变化时，所有相关的输出都会自动更新。这使得应用程序的流程大大简化，但需要一段时间才能理解如何将所有内容整合在一起。</p><p>本章将为您提供对反应式编程的简单介绍，教授您Shiny应用中最常见的反应式结构的基本知识。我们将从服务器函数概览开始，更详细地讨论输入和输出参数的工作方式。接下来，我们将回顾最简单的反应形式（将输入直接连接到输出），然后讨论反应式表达式如何帮助您消除重复的工作。最后，我们将回顾一些新用户常见的障碍。</p><h2 id="3-2-server函数"><a href="#3-2-server函数" class="headerlink" title="3.2 server函数"></a>3.2 server函数</h2><p>正如您所见，每个Shiny应用程序的内部如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">library(shiny)</span><br><span class="line"></span><br><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  # front end interface</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  # back end logic</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">shinyApp(ui, server)</span><br></pre></td></tr></table></figure><p>上一章介绍了前端的基础知识，ui对象包含向应用程序的每个用户呈现的HTML。ui很简单，因为每个用户都获得相同的HTML。server更复杂，因为每个用户都需要获得应用程序的独立版本；当用户A移动滑块时，用户B不应该看到他们的输出变化。</p><p>为了实现这种独立性，Shiny 在每次启动新会话时都会调用你的 server() 函数。就像其他任何 R 函数一样，当server函数被调用时，它会创建一个新的本地环境，该环境独立于该函数的每次其他调用。这使得每个会话都有一个唯一的状态，并隔离函数内创建的变量。这就是为什么你在 Shiny 中进行的几乎所有反应式编程都将在server函数内进行的原因。</p><p>server函数有三个参数：<code>input</code>、<code>output</code>和<code>session</code>。因为你永远不会自己调用服务器函数，所以你永远不会自己创建这些对象。相反，它们是由Shiny在会话开始时创建的，会话会返回到特定的会话。目前，我们将重点放在input和output参数上，而将session留到后面的章节。</p><h3 id="3-2-1-输入"><a href="#3-2-1-输入" class="headerlink" title="3.2.1 输入"></a>3.2.1 输入</h3><p>输入参数是一个类似列表的对象，其中包含从浏览器发送的所有输入数据，并根据输入ID命名。例如，如果您的UI包含一个输入ID为count的数字输入控件，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  numericInput(&quot;count&quot;, label = &quot;Number of values&quot;, value = 100)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>然后，您可以使用<code>input$count</code>访问该输入的值。它最初将包含值100，并随着用户在浏览器中更改值而自动更新。</p><p>与典型的列表不同，输入对象是只读的。如果您尝试在server函数内修改输入，将会出现错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  input$count &lt;- 10  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">shinyApp(ui, server)</span><br><span class="line">#&gt; Error: Can&#x27;t modify read-only reactive value &#x27;count&#x27;</span><br></pre></td></tr></table></figure><p>发生此错误是因为输入反映了浏览器中正在发生的事情，而浏览器是 Shiny 的“单一事实来源”。如果你能修改 R 中的值，你可能会引入不一致，其中输入滑块在浏览器中说了一件事，而 <code>input$count</code> 在 R 中说了不同的事情。这将使编程变得具有挑战性！稍后，在第 8 章中，您将学习如何使用 <code>updateNumericInput()</code> 之类的函数来修改浏览器中的值，然后 input$count 将相应地更新。</p><p>关于输入还有一件更重要的事情：它可以选择允许谁来读取它。要从输入中读取，你必须处于由 <code>renderText()</code> 或 <code>reactive()</code> 等函数创建的响应式环境中。我们很快就会回到这个想法，但这是一个重要的约束，它允许输出在输入更改时自动更新。这段代码说明了如果你犯了这个错误，你会看到的错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  message(&quot;The value of input$count is &quot;, input$count)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">shinyApp(ui, server)</span><br><span class="line">#&gt; Error: Can&#x27;t access reactive value &#x27;count&#x27; outside of reactive consumer.</span><br><span class="line">#&gt; ℹ Do you need to wrap inside reactive() or observer()?</span><br></pre></td></tr></table></figure><h3 id="3-2-2-输出"><a href="#3-2-2-输出" class="headerlink" title="3.2.2 输出"></a>3.2.2 输出</h3><p>输出与输入非常相似：它也是一个根据输出ID命名的类似列表的对象。主要区别在于，您使用它来发送输出而不是接收输入。您总是将输出对象与渲染函数一起使用，如下面的简单示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  textOutput(&quot;greeting&quot;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$greeting &lt;- renderText(&quot;Hello human!&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（请注意，ID在用户界面中被引用，但在服务器中没有引用——不加引号。）</p><p>渲染函数做了两件事：</p><ul><li><p>它建立了一个特殊的反应式上下文，该上下文会自动跟踪输出所使用的输入。</p></li><li><p>它将您的R代码的输出转换为适合在网页上显示的HTML。</p></li></ul><p>与输入一样，输出在使用上也是非常挑剔的。将会出现错误如果：</p><ul><li><p>您忘记使用渲染函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">    output$greeting &lt;- &quot;Hello human&quot;</span><br><span class="line">&#125;</span><br><span class="line">shinyApp(ui, server)</span><br><span class="line">#&gt; Error: Unexpected character object for output$greeting</span><br><span class="line">#&gt; ℹ Did you forget to use a render function?</span><br></pre></td></tr></table></figure></li><li><p>试图从输出中读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">    message(&quot;The greeting is &quot;, output$greeting)</span><br><span class="line">&#125;</span><br><span class="line">shinyApp(ui, server)</span><br><span class="line">#&gt; Error: Reading from shinyoutput object is not allowed.</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-3-响应式编程"><a href="#3-3-响应式编程" class="headerlink" title="3.3 响应式编程"></a>3.3 响应式编程</h2><p>如果应用程序只有输入或只有输出，那么它将非常无聊。Shiny的真正魔力在于当您拥有同时具有两者的应用程序时。让我们看一个简单的例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  textInput(&quot;name&quot;, &quot;What&#x27;s your name?&quot;),</span><br><span class="line">  textOutput(&quot;greeting&quot;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$greeting &lt;- renderText(&#123;</span><br><span class="line">    paste0(&quot;Hello &quot;, input$name, &quot;!&quot;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很难在书中展示这是如何工作的，但我在图3.1中尽力了。如果您运行应用程序并输入名称框，您会看到问候语会自动更新，就像您输入一样<sup>7</sup>。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/25d7fea6d0b5dc9d5eabb7805b9fa9ffeb44f924/c426a/demos/basic-reactivity/connection-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/25d7fea6d0b5dc9d5eabb7805b9fa9ffeb44f924/c426a/demos/basic-reactivity/connection-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.1：响应性意味着输出会随着输入的变化而自动更新，就像我在这个应用程序中输入“J”，“o”，“e”一样。请访问https://hadley.shinyapps.io/ms-connection查看实时更新。"></p><p>这是Shiny的一个核心概念：您不需要告诉输出何时更新，因为Shiny会自动为您解决。它是如何工作的呢？函数体中到底发生了什么？让我们更准确地思考服务器函数内部的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">output$greeting &lt;- renderText(&#123;</span><br><span class="line">  paste0(&quot;Hello &quot;, input$name, &quot;!&quot;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>很容易将此理解为“将<code>hello</code>和用户名拼接在一起，然后将其发送到<code>output$greeting</code>”。但是这种思维模式在细微但重要的方面是错误的。仔细考虑一下：根据这种模型，您只发布一次指令。但是Shiny会在我们每次更新input$name时执行该操作，因此一定有更多的事情发生。</p><p>应用程序之所以能够工作，是因为代码并没有告诉Shiny创建字符串并将其发送到浏览器，而是告诉Shiny如果需要的话如何创建字符串。至于代码何时（甚至是否！）运行，这取决于Shiny。它可能早在应用程序启动时就开始运行，也可能稍后运行；可能多次运行，也可能永远不运行！这并不是说Shiny反复无常，只是说决定何时执行代码是Shiny的责任，而不是您的责任。将您的应用程序视为提供食谱给Shiny，而不是给它下命令。</p><h3 id="3-3-1-命令式编程与声明式编程的区别"><a href="#3-3-1-命令式编程与声明式编程的区别" class="headerlink" title="3.3.1 命令式编程与声明式编程的区别"></a>3.3.1 命令式编程与声明式编程的区别</h3><p>命令式编程和声明式编程是两种重要的编程风格，它们之间的区别在于：</p><ul><li><p>在命令式编程中，您发出特定的命令并立即执行。这是您在分析脚本中习惯的编程方式：您命令R加载数据、转换数据、可视化数据并将结果保存到磁盘。</p></li><li><p>在声明式编程中，您表达了较高的目标或描述了重要的约束，并依靠其他人来决定如何以及&#x2F;或何时将其转化为行动。这是您在Shiny中使用的编程风格。</p></li></ul><p>使用命令式代码，您可以说“给我做个三明治”<sup>8</sup>。使用声明式代码，您可以表达“无论何时我打开冰箱，都要确保里面有一个三明治”。命令式代码是断言的；声明式代码是被动的。</p><p>大部分时间，声明式编程是非常自由的：您只需要描述您的整体目标，软件就会想出如何实现它们而无需进一步的干预。不利的一面是，偶尔您会确切地知道您想要什么，但您无法弄清楚如何以声明式系统理解的方式对其进行构架<sup>9</sup>。本书的目标是帮助您发展对底层理论的理解，以尽可能减少这种情况的发生。</p><h3 id="3-3-2-懒惰"><a href="#3-3-2-懒惰" class="headerlink" title="3.3.2 懒惰"></a>3.3.2 懒惰</h3><p>Shiny中声明式编程的优势之一是应用程序可以非常懒惰。Shiny应用程序只会做最少量工作来更新您当前可见的输出控件<sup>10</sup>。然而，这种懒惰有一个重要的缺点，您应该注意。你能找出下面server函数的问题吗？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$greting &lt;- renderText(&#123;</span><br><span class="line">    paste0(&quot;Hello &quot;, input$name, &quot;!&quot;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果您仔细观察，您可能会注意到我写的是<code>greting</code>而不是<code>greeting</code>。在Shiny中，这不会产生错误，但不会实现您的期望。greting输出不存在，因此renderText()内部的代码永远不会被执行。</p><p>如果您正在开发Shiny应用程序，并且您就是无法理解为什么您的代码从未运行过，请仔细检查您的UI和服务器函数是否使用相同的标识符。</p><h3 id="3-3-3-响应式图"><a href="#3-3-3-响应式图" class="headerlink" title="3.3.3 响应式图"></a>3.3.3 响应式图</h3><p>Shiny的懒惰性具有另一个重要属性。在大多数R代码中，您可以通过从上到下阅读代码来理解执行顺序。这在Shiny中不起作用，因为代码只在需要时才运行。要了解执行顺序，您需要查看响应式图，它描述了输入和输出之间的连接方式。上述应用程序的响应式图非常简单，如图3.2所示。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/056990a803a41501e2dbe05df351f8b8f7b493ab/f773a/diagrams/basic-reactivity/graph-1b.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/056990a803a41501e2dbe05df351f8b8f7b493ab/f773a/diagrams/basic-reactivity/graph-1b.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.2 响应式图显示了输入和输出之间的连接方式"></p><p>响应式图包含每个输入和输出的一个符号，并且我们将输入连接到输出，每当输出访问输入时。这个图告诉您greeting将需要重新计算，每当name被更改时。我们通常将这种关系描述为greeting对name具有反应依赖性。</p><p>注意我们为输入和输出使用的图形约定：name输入自然适合greeting输出。我们可以将它们紧密地排列在一起，如图3.3所示，以强调它们如何组合在一起；通常我们不会这样做，因为这只适用于最简单的应用程序。</p><p>响应式图中组件的形状表达了它们连接的方式。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/3140d17a6b8df9e07c37b368124b56aaa34ab348/99398/diagrams/basic-reactivity/graph-1a.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/3140d17a6b8df9e07c37b368124b56aaa34ab348/99398/diagrams/basic-reactivity/graph-1a.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.3 响应式图中组件的形状表达了它们连接的方式">。</p><p>响应式图是一个强大的工具，用于理解您的应用程序如何工作。随着应用程序变得越来越复杂，快速高层次概述响应式图通常很有用，以提醒您所有组件如何组合在一起。在本书中，我们将通过显示响应式图来帮助您理解示例的工作原理，稍后在第14章中，您将学习如何使用reactlog，它将为您绘制图形。</p><h3 id="3-3-4-反应式表达式"><a href="#3-3-4-反应式表达式" class="headerlink" title="3.3.4 反应式表达式"></a>3.3.4 反应式表达式</h3><p>您将在响应式图中看到的另一个重要组件是反应式表达式。现在，您可以将其视为减少响应式代码重复的工具，通过在响应式图中引入额外的节点。</p><p>在我们的简单应用程序中，我们不需要反应式表达式，但我还是会添加一个，以便您可以了解它如何影响响应式图，如图3.4所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  string &lt;- reactive(paste0(&quot;Hello &quot;, input$name, &quot;!&quot;))</span><br><span class="line">  output$greeting &lt;- renderText(string())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/6966978d8dc9ac65a0dfc6ec46ff05cfeef541e2/fdc7f/diagrams/basic-reactivity/graph-2b.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/6966978d8dc9ac65a0dfc6ec46ff05cfeef541e2/fdc7f/diagrams/basic-reactivity/graph-2b.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.4：由于反应式表达式连接输入和输出，因此在其两侧绘制角度。"></p><p>反应式表达式接受输入并产生输出，因此它们具有结合输入和输出特征的形状。希望这些形状可以帮助您记住组件如何组合在一起。</p><h3 id="3-3-5-执行顺序"><a href="#3-3-5-执行顺序" class="headerlink" title="3.3.5 执行顺序"></a>3.3.5 执行顺序</h3><p>了解代码的执行顺序是很重要的，因为执行顺序完全由响应式图决定。这与大多数R代码不同，在大多数R代码中，执行顺序由代码行的顺序决定。例如，我们可以翻转简单server函数中的两行代码的顺序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$greeting &lt;- renderText(string())</span><br><span class="line">  string &lt;- reactive(paste0(&quot;Hello &quot;, input$name, &quot;!&quot;))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您可能会认为这会产生错误，因为output$greeting引用了尚未创建的响应式表达式string。但是请记住，Shiny是惰性的，因此只有在会话开始后，在string被创建后，才会运行该代码。</p><p>相反，此代码产生与上述相同的响应式图，因此代码运行的顺序完全相同。像这样组织代码对于人类来说很混乱，最好避免。相反，请确保响应式表达式和输出仅引用上面定义的内容，而不是下面。这将使您的代码更易于理解。</p><p>这个概念非常重要，与大多数其他R代码不同，因此我要再说一遍：响应式代码运行的顺序仅由响应图确定，而不是由其在服务器函数中的布局决定。</p><h3 id="3-3-6-练习题"><a href="#3-3-6-练习题" class="headerlink" title="3.3.6 练习题"></a>3.3.6 练习题</h3><p><strong>3.3.6.1 给定如下UI：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  textInput(&quot;name&quot;, &quot;What&#x27;s your name?&quot;),</span><br><span class="line">  textOutput(&quot;greeting&quot;)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>修复下面三个服务器函数中的简单错误。首先尝试通过阅读代码发现问题；然后运行代码以确保你已修复它。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server1 &lt;- function(input, output, server) &#123;</span><br><span class="line">  input$greeting &lt;- renderText(paste0(&quot;Hello &quot;, name))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server2 &lt;- function(input, output, server) &#123;</span><br><span class="line">  greeting &lt;- paste0(&quot;Hello &quot;, input$name)</span><br><span class="line">  output$greeting &lt;- renderText(greeting)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server3 &lt;- function(input, output, server) &#123;</span><br><span class="line">  output$greting &lt;- paste0(&quot;Hello&quot;, input$name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.3.6.2 绘制以下server函数的反应图：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server1 &lt;- function(input, output, session) &#123;</span><br><span class="line">  c &lt;- reactive(input$a + input$b)</span><br><span class="line">  e &lt;- reactive(c() + input$d)</span><br><span class="line">  output$f &lt;- renderText(e())</span><br><span class="line">&#125;</span><br><span class="line">server2 &lt;- function(input, output, session) &#123;</span><br><span class="line">  x &lt;- reactive(input$x1 + input$x2 + input$x3)</span><br><span class="line">  y &lt;- reactive(input$y1 + input$y2)</span><br><span class="line">  output$z &lt;- renderText(x() / y())</span><br><span class="line">&#125;</span><br><span class="line">server3 &lt;- function(input, output, session) &#123;</span><br><span class="line">  d &lt;- reactive(c() ^ input$d)</span><br><span class="line">  a &lt;- reactive(input$a * 10)</span><br><span class="line">  c &lt;- reactive(b() / input$c) </span><br><span class="line">  b &lt;- reactive(a() + input$b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.3.6.3 为何下述代码会失败？</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var &lt;- reactive(df[[input$var]])</span><br><span class="line">range &lt;- reactive(range(var(), na.rm = TRUE))</span><br></pre></td></tr></table></figure><p>为什么 range() 和 var() 不是好的反应式命名？</p><h2 id="3-4-反应表达式"><a href="#3-4-反应表达式" class="headerlink" title="3.4 反应表达式"></a>3.4 反应表达式</h2><p>我们已经在几个地方快速浏览了反应表达式，所以希望您已经了解了它们的作用。现在，我们将深入了解更多的细节，并说明为什么在构建真实应用程序时它们如此重要。</p><p>反应表达式之所以重要，是因为它们为Shiny提供了更多信息，以便在输入发生变化时减少重新计算，使应用程序更高效，并通过简化反应图来让人类更容易理解应用程序。反应表达式具有输入和输出的味道：</p><p>与输入类似，您可以在输出中使用反应表达式的计算结果。</p><p>与输出类似，反应表达式依赖于输入，并自动知道何时需要更新。</p><p>这种双重性意味着我们需要一些新的词汇：我将使用<code>生产者</code>来指代反应输入和表达式，而<code>消费者</code>则指代反应表达式和输出。图3.5用维恩图展示了这种关系。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/8dcc3f2cbc55486a76b33a5acd30e379cd05d8ab/27c40/diagrams/basic-reactivity/producers-consumers.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/8dcc3f2cbc55486a76b33a5acd30e379cd05d8ab/27c40/diagrams/basic-reactivity/producers-consumers.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.5 输入和表达式是反应性的生产者；表达式和输出是反应性的消费者"></p><p>我们需要一个更复杂的应用程序来查看使用响应式表达式的优点。首先，我们将通过定义一些常规的R函数来为我们的应用程序提供支持，从而为我们的应用程序搭建舞台。</p><h3 id="3-4-1-动机"><a href="#3-4-1-动机" class="headerlink" title="3.4.1 动机"></a>3.4.1 动机</h3><p>假设我想用绘图和假设检验来比较两个模拟数据集。我做了一些实验，并提出了以下函数：<code>freqpoly()</code>用频率多边形<sup>12</sup>可视化两个分布，<code>t_test()</code>使用t检验来比较均值，并用字符串总结结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">library(ggplot2)</span><br><span class="line"></span><br><span class="line">freqpoly &lt;- function(x1, x2, binwidth = 0.1, xlim = c(-3, 3)) &#123;</span><br><span class="line">  df &lt;- data.frame(</span><br><span class="line">    x = c(x1, x2),</span><br><span class="line">    g = c(rep(&quot;x1&quot;, length(x1)), rep(&quot;x2&quot;, length(x2)))</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  ggplot(df, aes(x, colour = g)) +</span><br><span class="line">    geom_freqpoly(binwidth = binwidth, size = 1) +</span><br><span class="line">    coord_cartesian(xlim = xlim)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">t_test &lt;- function(x1, x2) &#123;</span><br><span class="line">  test &lt;- t.test(x1, x2)</span><br><span class="line">  </span><br><span class="line">  # use sprintf() to format t.test() results compactly</span><br><span class="line">  sprintf(</span><br><span class="line">    &quot;p value: %0.3f\n[%0.2f, %0.2f]&quot;,</span><br><span class="line">    test$p.value, test$conf.int[1], test$conf.int[2]</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:::primary 译者注<br><strong>译者注：</strong></p><p>这段代码中定义了两个函数，freqpoly和t_test。以下是它们的简单解释：</p><ol><li><p><code>freqpoly</code>函数：<br>这个函数是为了对比两个数据集x1和x2的分布。它首先将这两个数据集合并到一个数据框中，并为每个数据集分配一个组别”x1”和”x2”。然后，它使用ggplot2包的<code>geom_freqpoly</code>函数绘制频数多边形图，这个图能够展示数据的分布情况。<code>binwidth</code>参数决定了分箱的宽度，而<code>xlim</code>参数则设定了x轴的显示范围。</p></li><li><p><code>t_test</code>函数：<br>这个函数执行t检验，这是一种用于比较两组平均值是否有显著差异的统计检验方法。函数接受两个向量x1和x2作为输入，然后使用R的内置<code>t.test</code>函数执行t检验。然后，它使用<code>sprintf</code>函数以一种格式化的方式返回结果，包括p值以及95%置信区间。</p><p> <strong>注意</strong>：在这段代码中，<code>sprintf</code>函数用于格式化输出字符串。”%0.3f”表示浮点数，保留3位小数；”[%0.2f, %0.2f]”表示浮点数，保留2位小数，用于显示置信区间。</p></li></ol><p>:::</p><p>如果我有一些模拟数据，我可以使用这些函数来比较两个变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x1 &lt;- rnorm(100, mean = 0, sd = 0.5)</span><br><span class="line">x2 &lt;- rnorm(200, mean = 0.15, sd = 0.9)</span><br><span class="line"></span><br><span class="line">freqpoly(x1, x2)</span><br><span class="line">cat(t_test(x1, x2))</span><br><span class="line">#&gt; p value: 0.005</span><br><span class="line">#&gt; [-0.39, -0.07]</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/28bdfb538762e0db56567d98e6b847723161da73/a520e/basic-reactivity_files/figure-html/unnamed-chunk-19-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/28bdfb538762e0db56567d98e6b847723161da73/a520e/basic-reactivity_files/figure-html/unnamed-chunk-19-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>在真正的分析中，你可能在完成这些函数之前已经做了一堆探索。我在这里跳过了这个探索，这样我们就可以尽快地进入应用程序。但是将命令式代码提取到常规函数中是所有Shiny应用程序的一项重要技术：你从应用程序中提取的代码越多，就越容易理解。这是很好的软件工程，因为它有助于隔离问题：应用程序外的函数专注于计算，这样应用程序内的代码就可以专注于响应用户操作。我们将在第18章再次回到这个想法。</p><h3 id="3-4-2-应用程序"><a href="#3-4-2-应用程序" class="headerlink" title="3.4.2 应用程序"></a>3.4.2 应用程序</h3><p>我想使用这两个工具快速探索一系列模拟。Shiny应用程序是一种很好的方法，因为它可以让你避免繁琐地修改和重新运行R代码。下面我将这些部分打包成一个Shiny应用程序，在这里我可以交互式地调整输入。</p><p>让我们从UI开始。我们将在第6.2.3节中详细介绍<code>fluidRow()</code>和<code>column()</code>的作用；但是你可以从它们的名字中猜出它们的目的。第一行有三个用于输入控件的列（distribution 1、distribution 2和绘图控件）。第二行有一个宽列用于绘图，一个窄列用于假设检验。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  fluidRow(</span><br><span class="line">    column(4, </span><br><span class="line">      &quot;Distribution 1&quot;,</span><br><span class="line">      numericInput(&quot;n1&quot;, label = &quot;n&quot;, value = 1000, min = 1),</span><br><span class="line">      numericInput(&quot;mean1&quot;, label = &quot;µ&quot;, value = 0, step = 0.1),</span><br><span class="line">      numericInput(&quot;sd1&quot;, label = &quot;σ&quot;, value = 0.5, min = 0.1, step = 0.1)</span><br><span class="line">    ),</span><br><span class="line">    column(4, </span><br><span class="line">      &quot;Distribution 2&quot;,</span><br><span class="line">      numericInput(&quot;n2&quot;, label = &quot;n&quot;, value = 1000, min = 1),</span><br><span class="line">      numericInput(&quot;mean2&quot;, label = &quot;µ&quot;, value = 0, step = 0.1),</span><br><span class="line">      numericInput(&quot;sd2&quot;, label = &quot;σ&quot;, value = 0.5, min = 0.1, step = 0.1)</span><br><span class="line">    ),</span><br><span class="line">    column(4,</span><br><span class="line">      &quot;Frequency polygon&quot;,</span><br><span class="line">      numericInput(&quot;binwidth&quot;, label = &quot;Bin width&quot;, value = 0.1, step = 0.1),</span><br><span class="line">      sliderInput(&quot;range&quot;, label = &quot;range&quot;, value = c(-3, 3), min = -5, max = 5)</span><br><span class="line">    )</span><br><span class="line">  ),</span><br><span class="line">  fluidRow(</span><br><span class="line">    column(9, plotOutput(&quot;hist&quot;)),</span><br><span class="line">    column(3, verbatimTextOutput(&quot;ttest&quot;))</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>server函数从指定的分布中抽取后，结合了freqpoly()和t_test()函数的调用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$hist &lt;- renderPlot(&#123;</span><br><span class="line">    x1 &lt;- rnorm(input$n1, input$mean1, input$sd1)</span><br><span class="line">    x2 &lt;- rnorm(input$n2, input$mean2, input$sd2)</span><br><span class="line">    </span><br><span class="line">    freqpoly(x1, x2, binwidth = input$binwidth, xlim = input$range)</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line"></span><br><span class="line">  output$ttest &lt;- renderText(&#123;</span><br><span class="line">    x1 &lt;- rnorm(input$n1, input$mean1, input$sd1)</span><br><span class="line">    x2 &lt;- rnorm(input$n2, input$mean2, input$sd2)</span><br><span class="line">    </span><br><span class="line">    t_test(x1, x2)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/c4b42aa78ca4fa1794c7f29a3b43e42610502212/32dcf/demos/basic-reactivity/case-study-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/c4b42aa78ca4fa1794c7f29a3b43e42610502212/32dcf/demos/basic-reactivity/case-study-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.6：一个Shiny应用程序，可让您使用t检验和频数多边形比较两个模拟分布。请访问https://hadley.shinyapps.io/ms-case-study-1以查看实时效果。"></p><p>这段定义服务器和用户界面的内容产生了图3.6。你可以在<a href="https://hadley.shinyapps.io/ms-case-study-1">https://hadley.shinyapps.io/ms-case-study-1</a>找到它的活跃版。我推荐你打开应用程序并进行快速操作，以确保在继续阅读之前理解其基本操作。</p><h3 id="3-4-3-反应式图表"><a href="#3-4-3-反应式图表" class="headerlink" title="3.4.3 反应式图表"></a>3.4.3 反应式图表</h3><p>让我们开始绘制这个应用程序的反应式图表。Shiny足够智能，仅在引用的输入发生更改时更新输出；它不够智能，不能仅选择性地运行输出内部的代码片段。换句话说，输出是原子的：它们要么整体执行，要么不执行。</p><p>例如，以下是从server中获取的代码片段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x1 &lt;- rnorm(input$n1, input$mean1, input$sd1)</span><br><span class="line">x2 &lt;- rnorm(input$n2, input$mean2, input$sd2)</span><br><span class="line">t_test(x1, x2)</span><br></pre></td></tr></table></figure><p>作为阅读此代码的人，你可以看出我们只需要在n1、mean1或sd1发生变化时更新x1，在n2、mean2或sd2发生变化时更新x2。然而，Shiny只将输出视为一个整体，因此每当n1、mean1、sd1、n2、mean2或sd2中的一个发生变化时，它都会更新x1和x2。这导致了图3.7所示的反应图。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/840574f96b31b47295cc1ec44d359c0493a6e1bb/4d300/diagrams/basic-reactivity/case-study-1.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/840574f96b31b47295cc1ec44d359c0493a6e1bb/4d300/diagrams/basic-reactivity/case-study-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.7 反应图显示，每一个输出都取决于每一个输入"></p><p>你会注意到，图中非常密集：几乎每个输入都直接连接到每个输出。这造成了两个问题：</p><ul><li><p>应用程序难以理解，因为有太多的连接。您无法将应用程序的任何部分单独拉出来进行分析。</p></li><li><p>应用程序效率低下，因为它做了很多不必要的工作。例如，如果您更改了图的断点，将重新计算数据；如果您更改了n1的值，将更新x2（在两个地方！）。</p></li></ul><p>应用程序还有一个其他主要缺陷：频率多边形和t检验使用单独的随机抽样。这可能会误导，因为您期望它们在同一基础数据上工作。</p><p>幸运的是，我们可以通过使用反应式表达式来提取重复的计算，从而解决所有这些问题。</p><h3 id="3-4-4-简化图表"><a href="#3-4-4-简化图表" class="headerlink" title="3.4.4 简化图表"></a>3.4.4 简化图表</h3><p>在server函数中，我们将现有代码重构为两个新的反应式表达式x1和x2，它们模拟来自两个分布的数据。要创建反应式表达式，我们调用<code>reactive()</code>并将结果分配给一个变量。要稍后使用该表达式，我们将变量称为函数进行调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  x1 &lt;- reactive(rnorm(input$n1, input$mean1, input$sd1))</span><br><span class="line">  x2 &lt;- reactive(rnorm(input$n2, input$mean2, input$sd2))</span><br><span class="line"></span><br><span class="line">  output$hist &lt;- renderPlot(&#123;</span><br><span class="line">    freqpoly(x1(), x2(), binwidth = input$binwidth, xlim = input$range)</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line"></span><br><span class="line">  output$ttest &lt;- renderText(&#123;</span><br><span class="line">    t_test(x1(), x2())</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种转换产生了图3.8所示的实质上更简单的图表。这个更简单的图表使得应用程序更容易理解，因为您可以将连接组件分开理解；分布参数的值只会通过x1和x2影响输出。这种重写还使应用程序更高效，因为它减少了大量的计算。现在，当您更改binwidth或range时，只有图表发生变化，而不是基础数据。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/7037f40071103105203cef484ca816fa0f72555f/97d14/diagrams/basic-reactivity/case-study-2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/7037f40071103105203cef484ca816fa0f72555f/97d14/diagrams/basic-reactivity/case-study-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.8 使用反应式表达式大大简化了图表，使其更容易理解"></p><p>为了强调这种模块化，图3.9在独立组件周围画了框。我们将在第19章讨论模块时回到这个想法。模块允许您提取重复的代码以进行重用，同时保证其与应用程序中的其他所有内容隔离。对于更复杂的app，模块是一种非常有用且强大的技术。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/9eda867da502862eae05b9b574ebcc5828858bd8/b75dd/diagrams/basic-reactivity/case-study-3.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/9eda867da502862eae05b9b574ebcc5828858bd8/b75dd/diagrams/basic-reactivity/case-study-3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.9 模块强制隔离应用程序的各个部分"></p><p>您可能熟悉编程中的“三次规则”：无论何时您复制和粘贴某些内容三次，您应该想办法减少重复（通常通过编写函数）。这是很重要的，因为它减少了代码中的重复量，使代码更容易理解，并且随着您的需求变化而更容易更新。</p><p>然而，我认为在Shiny中，您应该考虑“一次规则”：无论何时您复制和粘贴某些内容一次，您应该考虑将重复的代码提取到反应式表达式中。对于Shiny来说，这个规则更加严格，因为反应式表达式不仅使人类更容易理解代码，而且也提高了Shiny有效地重新运行代码的能力。</p><h3 id="3-4-5-我们为什么需要反应式表达式？"><a href="#3-4-5-我们为什么需要反应式表达式？" class="headerlink" title="3.4.5 我们为什么需要反应式表达式？"></a>3.4.5 我们为什么需要反应式表达式？</h3><p>当您刚开始使用反应式代码时，您可能会想知道为什么我们需要反应式表达式。您为什么不使用现有的工具来减少代码中的重复：创建新变量和编写函数？不幸的是，这两种技术在反应式环境中都不起作用。</p><p>如果您尝试使用变量来减少重复，您可能会编写类似这样的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  x1 &lt;- rnorm(input$n1, input$mean1, input$sd1)</span><br><span class="line">  x2 &lt;- rnorm(input$n2, input$mean2, input$sd2)</span><br><span class="line"></span><br><span class="line">  output$hist &lt;- renderPlot(&#123;</span><br><span class="line">    freqpoly(x1, x2, binwidth = input$binwidth, xlim = input$range)</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line"></span><br><span class="line">  output$ttest &lt;- renderText(&#123;</span><br><span class="line">    t_test(x1, x2)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果您运行此代码，则会收到错误，因为您尝试在反应式上下文之外访问输入值。即使您没有收到该错误，您仍然会遇到问题：x1和x2只会在会话开始时计算一次，而不是每次输入之一更新时都会计算。</p><p>如果您尝试使用函数，则应用程序将工作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123; </span><br><span class="line">  x1 &lt;- function() rnorm(input$n1, input$mean1, input$sd1)</span><br><span class="line">  x2 &lt;- function() rnorm(input$n2, input$mean2, input$sd2)</span><br><span class="line"></span><br><span class="line">  output$hist &lt;- renderPlot(&#123;</span><br><span class="line">    freqpoly(x1(), x2(), binwidth = input$binwidth, xlim = input$range)</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line"></span><br><span class="line">  output$ttest &lt;- renderText(&#123;</span><br><span class="line">    t_test(x1(), x2())</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但它与原始代码有同样的问题：任何输入都会导致所有输出被重新计算，并且t检验和频率多边形将在单独的样本上运行。响应式表达式会自动缓存其结果，并且仅在输入更改时才进行更新<sup>13</sup>。</p><p>变量只计算一次值（粥太凉了），函数在每次调用时计算值（粥太烫了），而响应式表达式只在值可能发生变化时计算值（粥刚刚好！）。</p><h2 id="3-5-控制评估时间"><a href="#3-5-控制评估时间" class="headerlink" title="3.5 控制评估时间"></a>3.5 控制评估时间</h2><p>现在你已经熟悉了反应性的基本概念，我们将讨论两种更高级的技术，它们可以让你增加或减少反应性表达式的执行频率。在这里，我将展示如何使用基本技术；在第15章中，我们将回到它们的底层实现。</p><p>为了探索基本思想，我将简化我的模拟应用程序。我将使用只有一个参数的分布，并强制两个样本共享相同的n。我还将删除绘图控件。这将产生更小的UI对象和server功能：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  fluidRow(</span><br><span class="line">    column(3, </span><br><span class="line">      numericInput(&quot;lambda1&quot;, label = &quot;lambda1&quot;, value = 3),</span><br><span class="line">      numericInput(&quot;lambda2&quot;, label = &quot;lambda2&quot;, value = 5),</span><br><span class="line">      numericInput(&quot;n&quot;, label = &quot;n&quot;, value = 1e4, min = 0)</span><br><span class="line">    ),</span><br><span class="line">    column(9, plotOutput(&quot;hist&quot;))</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  x1 &lt;- reactive(rpois(input$n, input$lambda1))</span><br><span class="line">  x2 &lt;- reactive(rpois(input$n, input$lambda2))</span><br><span class="line">  output$hist &lt;- renderPlot(&#123;</span><br><span class="line">    freqpoly(x1(), x2(), binwidth = 1, xlim = c(0, 40))</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这生成了如图3.10所示的应用程序和如图3.11所示的反应图。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/ceed7209822edad11d811e6ad501f2e1cea7fb0d/b35bb/demos/basic-reactivity/simulation-2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/ceed7209822edad11d811e6ad501f2e1cea7fb0d/b35bb/demos/basic-reactivity/simulation-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.10 一个更简单的应用程序，显示从两个泊松分布中抽取的随机数的频率多边形。参见 live 在线在https://hadley.shinyapps.io/ms-simulation-2。"></p><p><img src="https://d33wubrfki0l68.cloudfront.net/233a16963b00b9e879f225bc17a918afbad91e15/32c89/diagrams/basic-reactivity/timing.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/233a16963b00b9e879f225bc17a918afbad91e15/32c89/diagrams/basic-reactivity/timing.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.11 反应图"></p><h3 id="3-5-1-定时失效"><a href="#3-5-1-定时失效" class="headerlink" title="3.5.1 定时失效"></a>3.5.1 定时失效</h3><p>想象一下，如果你想通过不断重新模拟数据来强调这是模拟数据的事实，以便你看到动画而不是静态图<sup>14</sup>。我们可以使用新的函数：<code>reactiveTimer()</code>来增加更新的频率。</p><p><code>reactiveTimer()</code>是一个反应式表达式，它依赖于一个隐藏的输入：当前时间。当您想要一个反应式表达式比其他方式更频繁地使自己无效时，您可以使用<code>reactiveTimer()</code>。例如，以下代码使用500毫秒的间隔，这样图将每两秒钟更新一次。这足够快，以提醒你正在查看模拟，而不会因快速变化而使你眼花缭乱。这一变化产生了如图3.12所示的反应图。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  timer &lt;- reactiveTimer(500)</span><br><span class="line">  </span><br><span class="line">  x1 &lt;- reactive(&#123;</span><br><span class="line">    timer()</span><br><span class="line">    rpois(input$n, input$lambda1)</span><br><span class="line">  &#125;)</span><br><span class="line">  x2 &lt;- reactive(&#123;</span><br><span class="line">    timer()</span><br><span class="line">    rpois(input$n, input$lambda2)</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line">  output$hist &lt;- renderPlot(&#123;</span><br><span class="line">    freqpoly(x1(), x2(), binwidth = 1, xlim = c(0, 40))</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/82776537eeb3726235dd27f53df0f38880965a60/dfd59/diagrams/basic-reactivity/timing-timer.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/82776537eeb3726235dd27f53df0f38880965a60/dfd59/diagrams/basic-reactivity/timing-timer.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.12 reactiveTimer(500)引入了一个新的反应式输入，该输入每半秒自动使自己无效一次"></p><p>注意我们在计算x1()和x2()的反应式表达式中使用timer()的情况：我们调用它，但不使用它的值。这使得x1和x2可以对timer产生反应式依赖，而不必担心它返回的确切值。</p><h3 id="3-5-2-点击事件"><a href="#3-5-2-点击事件" class="headerlink" title="3.5.2 点击事件"></a>3.5.2 点击事件</h3><p>在上述场景中，想象一下如果模拟代码需要1秒钟才能运行完会发生什么情况。我们每0.5秒执行一次模拟，所以Shiny会有越来越多的工作要做，而且永远无法追赶上来。同样的问题也可能发生在如果有人在您的应用程序中快速点击按钮，而您正在进行的计算相对昂贵的情况下。这可能会给Shiny创建大量的后台工作，当Shiny忙于处理这些后台工作时，它无法响应任何新的事件，从而导致用户体验不佳。</p><p>如果这种情况发生在您的应用程序中，您可能希望要求用户选择执行昂贵的计算，要求他们点击一个按钮。这是<code>actionButton()</code>的一个很好的用例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  fluidRow(</span><br><span class="line">    column(3, </span><br><span class="line">      numericInput(&quot;lambda1&quot;, label = &quot;lambda1&quot;, value = 3),</span><br><span class="line">      numericInput(&quot;lambda2&quot;, label = &quot;lambda2&quot;, value = 5),</span><br><span class="line">      numericInput(&quot;n&quot;, label = &quot;n&quot;, value = 1e4, min = 0),</span><br><span class="line">      actionButton(&quot;simulate&quot;, &quot;Simulate!&quot;)</span><br><span class="line">    ),</span><br><span class="line">    column(9, plotOutput(&quot;hist&quot;))</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>要使用操作按钮，我们需要学习一种新工具。为了理解原因，让我们首先使用与上述相同的方法来解决这个问题。与上面一样，我们提到simulate但不使用它的值来对其产生反应式依赖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  x1 &lt;- reactive(&#123;</span><br><span class="line">    input$simulate</span><br><span class="line">    rpois(input$n, input$lambda1)</span><br><span class="line">  &#125;)</span><br><span class="line">  x2 &lt;- reactive(&#123;</span><br><span class="line">    input$simulate</span><br><span class="line">    rpois(input$n, input$lambda2)</span><br><span class="line">  &#125;)</span><br><span class="line">  output$hist &lt;- renderPlot(&#123;</span><br><span class="line">    freqpoly(x1(), x2(), binwidth = 1, xlim = c(0, 40))</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/d65eff11607572a166ddc400a771e5e72fb32b99/362e4/demos/basic-reactivity/action-button.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/d65eff11607572a166ddc400a771e5e72fb32b99/362e4/demos/basic-reactivity/action-button.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.13 具有操作按钮的应用程序。参见 live 在线在https://hadley.shinyapps.io/ms-action-button。"></p><p><img src="https://d33wubrfki0l68.cloudfront.net/ffefc8f9300348bb4c29492c4ebfa04235c78eec/94ace/diagrams/basic-reactivity/timing-button.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/ffefc8f9300348bb4c29492c4ebfa04235c78eec/94ace/diagrams/basic-reactivity/timing-button.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.14 这个反应图没有实现我们的目标；我们添加了一个依赖项，而不是取代了现有的依赖项。"></p><p>这产生了图3.13的应用程序和图3.14的反应图。这没有达到我们的目标，因为它只是引入了一个新的依赖项：当我们点击simulate按钮时，<code>x1()</code>和<code>x2()</code>将更新，但它们将继续在<code>lambda1</code>、<code>lambda2</code>或<code>n</code>改变时更新。我们希望取代现有的依赖项，而不是增加新的依赖项。</p><p>为了解决这个问题，我们需要一个新的工具：一种使用输入值而不产生反应式依赖的方法。我们需要<code>eventReactive()</code>，它有两个参数：第一个参数指定要对其产生依赖的参数，第二个参数指定要计算的内容。这让应用程序只有在<code>simulate</code>被点击时才计算<code>x1()</code>和<code>x2()</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  x1 &lt;- eventReactive(input$simulate, &#123;</span><br><span class="line">    rpois(input$n, input$lambda1)</span><br><span class="line">  &#125;)</span><br><span class="line">  x2 &lt;- eventReactive(input$simulate, &#123;</span><br><span class="line">    rpois(input$n, input$lambda2)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  output$hist &lt;- renderPlot(&#123;</span><br><span class="line">    freqpoly(x1(), x2(), binwidth = 1, xlim = c(0, 40))</span><br><span class="line">  &#125;, res = 96)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图3.15显示了新的反应图。请注意，如所期望的那样，<code>x1</code>和<code>x2</code>不再对<code>lambda1</code>、<code>lambda2</code>和<code>n</code>产生反应式依赖：改变它们的值不会触发计算。我保留了浅灰色的箭头，只是为了提醒您x1和x2继续使用这些值，但不再对其产生反应式依赖。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/85daccd0739423ca7b9463531a23e66d280c5724/eb459/diagrams/basic-reactivity/timing-button-2.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/85daccd0739423ca7b9463531a23e66d280c5724/eb459/diagrams/basic-reactivity/timing-button-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.15 eventReactive()使分离依赖项（黑色箭头）和使用来计算结果的值（浅灰色箭头）成为可能。"></p><h2 id="3-6-观察者"><a href="#3-6-观察者" class="headerlink" title="3.6 观察者"></a>3.6 观察者</h2><p>到目前为止，我们一直关注应用程序内部发生的事情。但有时，您需要将应用程序外部的某些操作与应用程序内部的操作关联起来，以在其他地方产生副作用。这可能是将文件保存到共享网络驱动器、向Web API发送数据、更新数据库，或者（最常见）是在控制台上打印调试消息。这些操作不会影响应用程序的外观，因此您不应该使用输出和渲染函数。相反，您需要使用观察者（observer）。</p><p>有多种创建观察者的方法，我们将在第15.3节中讨论它们。现在，我想向您展示如何使用<code>observeEvent()</code>，因为它在您学习Shiny时为您提供了一个重要的调试工具。</p><p><code>observeEvent()</code>与<code>eventReactive()</code>非常相似。它有两个重要的参数：<code>eventExpr</code>和<code>handlerExpr</code>。第一个参数是输入或表达式，对其产生依赖；第二个参数是执行的代码。例如，对<code>server()</code>进行以下修改意味着每当<code>name</code>被更新时，都会向控制台发送一条消息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  textInput(&quot;name&quot;, &quot;What&#x27;s your name?&quot;),</span><br><span class="line">  textOutput(&quot;greeting&quot;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  string &lt;- reactive(paste0(&quot;Hello &quot;, input$name, &quot;!&quot;))</span><br><span class="line">  </span><br><span class="line">  output$greeting &lt;- renderText(string())</span><br><span class="line">  observeEvent(input$name, &#123;</span><br><span class="line">    message(&quot;Greeting performed&quot;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>observeEvent()</code>和<code>eventReactive()</code>之间有两个重要的区别：</p><ul><li><p>您不需要将<code>observeEvent()</code>的结果分配给一个变量，因此</p></li><li><p>您不能从其他反应式消费者中引用它。</p></li></ul><p> 观察者和输出密切相关。您可以将输出视为具有特殊副作用：更新用户浏览器中的HTML。为了强调这种紧密关系，我们将在反应图上以相同的方式绘制它们。这产生了如图3.16所示的反应图。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/c34c3dfb6205be6ff2c2d3e8fca18f16d34d9f3a/9d229/diagrams/basic-reactivity/graph-3.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/c34c3dfb6205be6ff2c2d3e8fca18f16d34d9f3a/9d229/diagrams/basic-reactivity/graph-3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3.16 在反应图中，观察者看起来与输出相同"></p><h2 id="3-7-总结"><a href="#3-7-总结" class="headerlink" title="3.7 总结"></a>3.7 总结</h2><p>本章应有助于您更好地了解Shiny应用程序的后端，即响应用户操作的<code>server()</code>代码。您还初步掌握了支撑Shiny的响应式编程范式。在这里您所学到的东西将会对您大有帮助；我们将在第13章中回到底层理论。响应式编程非常强大，但它与您最习惯的R编程命令式风格截然不同。如果需要一段时间才能理解所有后果，请不要感到惊讶。</p><p>本章结束了我们对Shiny基础的概述。下一章将通过创建一个更大的Shiny应用程序来帮助您练习迄今为止所学的材料，该应用程序旨在支持数据分析。</p><h1 id="关注"><a href="#关注" class="headerlink" title="关注"></a>关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——2-在大大的花园里面挖呀挖呀挖</title>
      <link href="/post/5369.html"/>
      <url>/post/5369.html</url>
      
        <content type="html"><![CDATA[<h1 id="基础UI"><a href="#基础UI" class="headerlink" title="基础UI"></a>基础UI</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>现在，您已经具备了基本的Shiny应用程序，我们可以开始详细探索使Shiny起作用的内容。正如您在上一章所看到的，Shiny鼓励将生成用户界面（前端）的代码与驱动应用程序行为的代码（后端）分开。</p><p>在本章中，我们将重点关注前端，并向您展示由Shiny提供的HTML输入和输出的大致情况。这使您能够捕获许多类型的表单数据，并显示许多类型的R输出。到目前为止，您可能还没有很多将输入和输出拼接在一起的方法，我们将在第6章中回顾这一点。</p><p>在这里，我将主要关注Shiny自身内置的输入和输出。但是，还有一个丰富而充满活力的社区扩展包，例如<a href="https://github.com/dreamRs/shinyWidgets">shinyWidgets</a>、<a href="https://github.com/daattali/colourpicker">colorpicker</a>和<a href="https://rstudio.github.io/sortable/">sorttable</a>。您可以在<a href="https://github.com/nanxstats/awesome-shiny-extensions">https://github.com/nanxstats/awesome-shiny-extensions</a>找到其他全面且维护良好的包列表，该列表由<a href="https://nanx.me/">Nan Xiao</a>维护。</p><p>与往常一样，我们将从加载shiny包开始：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>正如我们在上一章所看到的，您使用诸如<code>sliderInput()</code>、<code>selectInput()</code>、<code>textInput()</code>和<code>numericInput()</code>之类的函数将输入控件插入到您的UI规范中。现在我们将讨论所有输入函数所共有的常见结构，并为内置在Shiny中的输入提供快速概述。</p><h3 id="常见结构"><a href="#常见结构" class="headerlink" title="常见结构"></a>常见结构</h3><p>所有输入函数都具有相同的第一个参数：<code>inputId</code>。这是用于将前端与后端连接的标识符：如果您的用户界面具有ID为<code>name</code>的输入，则server函数将使用<code>input$name</code>来访问它。</p><p><code>inputId</code>有两个约束：</p><ul><li><p>它必须是一个简单的字符串，只包含字母、数字和下划线（不允许空格、破折号、句点或其他特殊字符！）以R命名变量。</p></li><li><p>它必须是唯一的。如果它不是唯一的，那么您将无法在server函数中引用此控件！</p></li></ul><p>大多数输入函数都有一个称为<code>label</code>的第二个参数。这是用于为控件创建一个人类可读的标签。Shiny对此字符串没有任何限制，但您需要仔细考虑，以确保您的应用程序对人类可用！第三个参数通常是<code>value</code>，在可能的情况下，允许您设置默认值。其余参数是控件特有的。</p><p>创建输入时，我建议按位置提供inputId和label参数，并按名称提供所有其他参数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sliderInput<span class="punctuation">(</span><span class="string">&quot;min&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Limit (minimum)&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">50</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>以下部分描述了Shiny内置的输入，根据它们创建的控制类型松散分组。目标是让您快速了解您的选项，而不是详尽地描述所有参数。下面我将展示每个控件最重要的参数，但您需要阅读文档以获得完整详细信息。</p><h3 id="自由文本"><a href="#自由文本" class="headerlink" title="自由文本"></a>自由文本</h3><p>使用<code>textInput()</code>收集少量文本，使用<code>passwordInput()</code><sup>3</sup>收集密码，使用<code>textAreaInput()</code>收集段落文本。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  textInput<span class="punctuation">(</span><span class="string">&quot;name&quot;</span><span class="punctuation">,</span> <span class="string">&quot;What&#x27;s your name?&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  passwordInput<span class="punctuation">(</span><span class="string">&quot;password&quot;</span><span class="punctuation">,</span> <span class="string">&quot;What&#x27;s your password?&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  textAreaInput<span class="punctuation">(</span><span class="string">&quot;story&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Tell me about yourself&quot;</span><span class="punctuation">,</span> rows <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/e7b5aeb0678eac89f60033eb84640779ad510c41/f7ade/demos/basic-ui/free-text.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/e7b5aeb0678eac89f60033eb84640779ad510c41/f7ade/demos/basic-ui/free-text.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="text"></p><p>如果你想确保文本具有某些属性，你可以使用<code>validate()</code>，我们将在第8章中介绍这个函数。</p><h3 id="数值输入"><a href="#数值输入" class="headerlink" title="数值输入"></a>数值输入</h3><p>要收集数值，请使用<code>numericInput()</code>创建一个受约束的文本框，或使用<code>sliderInput()</code>创建一个滑块。如果你为sliderInput()的默认值提供一个长度为2的数值向量，你将获得一个带有两个端点的“范围”滑块。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  numericInput<span class="punctuation">(</span><span class="string">&quot;num&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Number one&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;num2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Number two&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">50</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;rng&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Range&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span> <span class="number">20</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/dcd1cdd3477e7f859c8d5388b435ca75836d74ba/cdd56/demos/basic-ui/numeric.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/dcd1cdd3477e7f859c8d5388b435ca75836d74ba/cdd56/demos/basic-ui/numeric.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="numeric"></p><p>一般来说，我只建议在范围较小或者精确数值不太重要的情况下使用滑块。尝试在小的滑块上精确选择一个数字是一件很令人沮丧的事情！</p><p>滑块非常可定制，有很多方法可以调整它们的外观。更多细节请参见<code>?sliderInput</code>和<a href="https://shiny.rstudio.com/articles/sliders.html">https://shiny.rstudio.com/articles/sliders.html</a>。</p><h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><p>使用<code>dateInput()</code>收集单个日期，或使用<code>dateRangeInput()</code>收集两个日期之间的范围。这些都提供了一个方便的日历选择器，额外的参数如<code>datesdisabled</code>和<code>daysofweekdisabled</code>允许您限制有效的输入集。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  dateInput<span class="punctuation">(</span><span class="string">&quot;dob&quot;</span><span class="punctuation">,</span> <span class="string">&quot;When were you born?&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  dateRangeInput<span class="punctuation">(</span><span class="string">&quot;holiday&quot;</span><span class="punctuation">,</span> <span class="string">&quot;When do you want to go on vacation next?&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/585b8dcaf38038e5c2768e8a4858171baa04e308/02979/demos/basic-ui/date.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/585b8dcaf38038e5c2768e8a4858171baa04e308/02979/demos/basic-ui/date.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="date"></p><p>日期格式、语言和一周开始的日期默认采用美国标准。如果您正在为国际用户创建应用程序，请设置格式、语言和一周开始日期，以便日期对您的用户来说是自然的。</p><h3 id="有限制的选择"><a href="#有限制的选择" class="headerlink" title="有限制的选择"></a>有限制的选择</h3><p>有两种不同的方法允许用户从预设的选项集中进行选择：<code>selectInput()</code>和<code>radioButtons()</code>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">animals <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;dog&quot;</span><span class="punctuation">,</span> <span class="string">&quot;cat&quot;</span><span class="punctuation">,</span> <span class="string">&quot;mouse&quot;</span><span class="punctuation">,</span> <span class="string">&quot;bird&quot;</span><span class="punctuation">,</span> <span class="string">&quot;other&quot;</span><span class="punctuation">,</span> <span class="string">&quot;I hate animals&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;state&quot;</span><span class="punctuation">,</span> <span class="string">&quot;What&#x27;s your favourite state?&quot;</span><span class="punctuation">,</span> state.name<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  radioButtons<span class="punctuation">(</span><span class="string">&quot;animal&quot;</span><span class="punctuation">,</span> <span class="string">&quot;What&#x27;s your favourite animal?&quot;</span><span class="punctuation">,</span> animals<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/2605fed791b02e16d28d2c389df9130d349bf1b3/4dc8e/demos/basic-ui/limited-choices.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/2605fed791b02e16d28d2c389df9130d349bf1b3/4dc8e/demos/basic-ui/limited-choices.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="choice"></p><p>单选按钮有两个很好的特点：它们显示所有可能的选项，适合于短列表，并且通过<code>choiceNames/choiceValues</code>参数，它们可以显示除普通文本之外的其他选项。<code>choiceNames</code>确定向用户显示的内容；<code>choiceValues</code>确定在您的server函数中返回的内容。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  radioButtons<span class="punctuation">(</span><span class="string">&quot;rb&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Choose one:&quot;</span><span class="punctuation">,</span></span><br><span class="line">    choiceNames <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span></span><br><span class="line">      icon<span class="punctuation">(</span><span class="string">&quot;angry&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      icon<span class="punctuation">(</span><span class="string">&quot;smile&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      icon<span class="punctuation">(</span><span class="string">&quot;sad-tear&quot;</span><span class="punctuation">)</span></span><br><span class="line">    <span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    choiceValues <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span><span class="string">&quot;angry&quot;</span><span class="punctuation">,</span> <span class="string">&quot;happy&quot;</span><span class="punctuation">,</span> <span class="string">&quot;sad&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; This Font Awesome icon (&#x27;angry&#x27;) does not exist:</span></span><br><span class="line"><span class="comment">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class="line"><span class="comment">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br><span class="line"><span class="comment">#&gt; This Font Awesome icon (&#x27;smile&#x27;) does not exist:</span></span><br><span class="line"><span class="comment">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class="line"><span class="comment">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br><span class="line"><span class="comment">#&gt; This Font Awesome icon (&#x27;sad-tear&#x27;) does not exist:</span></span><br><span class="line"><span class="comment">#&gt; * if providing a custom `html_dependency` these `name` checks can </span></span><br><span class="line"><span class="comment">#&gt;   be deactivated with `verify_fa = FALSE`</span></span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/eab54ba86e9dda3fd9cd417553de341695d46d34/0eb0f/demos/basic-ui/radio-icon.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/eab54ba86e9dda3fd9cd417553de341695d46d34/0eb0f/demos/basic-ui/radio-icon.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="单选按钮"></p><p>使用<code>selectInput()</code>创建的下拉菜单无论选项数量多少，都占用相同数量的空间，这使得它们更适合于更长的选项。您还可以设置<code>multiple = TRUE</code>以允许用户选择多个元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  selectInput(</span><br><span class="line">    &quot;state&quot;, &quot;What&#x27;s your favourite state?&quot;, state.name,</span><br><span class="line">    multiple = TRUE</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/c53795ad09b7866f0ed7adc1b3adabdd6fc120db/437be/images/basic-ui/multi-select.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/c53795ad09b7866f0ed7adc1b3adabdd6fc120db/437be/images/basic-ui/multi-select.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="下拉菜单"></p><p>如果你有一组非常大的可能选项，你可能想要使用“server-side”<code>selectInput()</code>，这样完整的可能选项集不被嵌入到UI中（这可能会使加载变慢），而是由服务器按需发送。您可以了解有关此高级主题的更多信息，请访问<a href="https://shiny.rstudio.com/articles/selectize.html#server-side-selectize">https://shiny.rstudio.com/articles/selectize.html#server-side-selectize</a>。</p><p>没有方法可以在单选按钮中选择多个值，但有一个概念上类似的替代方案：<code>checkboxGroupInput()</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  checkboxGroupInput(&quot;animal&quot;, &quot;What animals do you like?&quot;, animals)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/d3d61d703bac03a0d2823da98e2dbba03d6619d4/51e34/demos/basic-ui/multi-radio.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/d3d61d703bac03a0d2823da98e2dbba03d6619d4/51e34/demos/basic-ui/multi-radio.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>如果您想要一个单选框来回答一个<code>Yes/No</code>问题，请使用<code>checkboxInput()</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  checkboxInput(&quot;cleanup&quot;, &quot;Clean up?&quot;, value = TRUE),</span><br><span class="line">  checkboxInput(&quot;shutdown&quot;, &quot;Shutdown?&quot;)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><p>允许用户通过 <code>fileInput()</code>上传文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  fileInput(&quot;upload&quot;, NULL)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/92e2422e9b00cec1d6a852cbdb484071ce51ae4e/85324/demos/basic-ui/upload.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/92e2422e9b00cec1d6a852cbdb484071ce51ae4e/85324/demos/basic-ui/upload.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="上传文件"></p><p>fileInput()需要在server端进行特殊处理，并在第9章中详细讨论。</p><h3 id="动作按钮"><a href="#动作按钮" class="headerlink" title="动作按钮"></a>动作按钮</h3><p>使用<code>actionButton()</code>或<code>actionLink()</code>让用户执行动作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  actionButton(&quot;click&quot;, &quot;Click me!&quot;),</span><br><span class="line">  actionButton(&quot;drink&quot;, &quot;Drink me!&quot;, icon = icon(&quot;cocktail&quot;))</span><br><span class="line">)</span><br><span class="line">#&gt; This Font Awesome icon (&#x27;cocktail&#x27;) does not exist:</span><br><span class="line">#&gt; * if providing a custom `html_dependency` these `name` checks can </span><br><span class="line">#&gt;   be deactivated with `verify_fa = FALSE`</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/30a4be90f407bf28ef9a780e78c6d48b8e9e3112/b196c/demos/basic-ui/action.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/30a4be90f407bf28ef9a780e78c6d48b8e9e3112/b196c/demos/basic-ui/action.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="按钮"></p><p>动作链接和按钮最自然地与server函数中的<code>observeEvent()</code>或<code>eventReactive()</code>配对。您还没有学习这些重要的函数，但我们在第3.5节中会回到它们。</p><p>您可以使用<code>class</code>参数来自定义外观，使用<code>&quot;btn-primary&quot;</code>，<code>&quot;btn-success&quot;</code>，<code>&quot;btn-info&quot;</code>，<code>&quot;btn-warning&quot;</code>或<code>&quot;btn-danger&quot;</code>之一。您还可以使用<code>&quot;btn-lg&quot;</code>，<code>&quot;btn-sm&quot;</code>，<code>&quot;btn-xs&quot;</code>更改大小。最后，您可以使用<code>&quot;btn-block&quot;</code>使按钮跨越其嵌入的元素的整个宽度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  fluidRow(</span><br><span class="line">    actionButton(&quot;click&quot;, &quot;Click me!&quot;, class = &quot;btn-danger&quot;),</span><br><span class="line">    actionButton(&quot;drink&quot;, &quot;Drink me!&quot;, class = &quot;btn-lg btn-success&quot;)</span><br><span class="line">  ),</span><br><span class="line">  fluidRow(</span><br><span class="line">    actionButton(&quot;eat&quot;, &quot;Eat me!&quot;, class = &quot;btn-block&quot;)</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><code>class</code>参数通过设置底层HTML的<code>class</code>属性来工作，这会影响元素的样式。要查看其他选项，您可以阅读Shiny使用的CSS设计系统Bootstrap的文档：<a href="http://bootstrapdocs.com/v3.3.6/docs/css/#buttons">http://bootstrapdocs.com/v3.3.6/docs/css/#buttons</a>。</p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>2.2.8.1 当空间不足时，使用一个出现在文本输入区域内的占位符来标记文本框很有用。您如何调用<code>textInput()</code>生成下面的UI？</p><p><img src="https://d33wubrfki0l68.cloudfront.net/0250dd2b285e770d5fd2a66670a6604775bb7f1e/eaa81/demos/basic-ui/placeholder.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/0250dd2b285e770d5fd2a66670a6604775bb7f1e/eaa81/demos/basic-ui/placeholder.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="2.2.8.1"></p><p>2.2.8.2 认真阅读<code>sliderInput()</code>的文档以了解如何创建日期滑块，如下：</p><p><img src="https://d33wubrfki0l68.cloudfront.net/95326f3d91fd5e3c1eba0cfb8aa69a65f1cc0953/ae529/demos/basic-ui/date-slider.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/95326f3d91fd5e3c1eba0cfb8aa69a65f1cc0953/ae529/demos/basic-ui/date-slider.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="日历滑块"></p><p>2.2.8.3 如何创建日期滑块，使得用户可以在0到100之间选择日期，滑块上每个可选值的间隔为5。然后，为输入小部件添加动画，以便当用户按下播放时，输入小部件会自动滚动到该范围。</p><p>2.2.8.4 如果您有一个中等长度的<code>selectInput()</code>列表，创建子标签是有用的，它可以将列表分成几部分。阅读文档以了解如何操作。（提示：底层HTML称为<code>&lt;optgroup&gt;</code>。）</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>用户界面中的输出创建了占位符，稍后将由server函数填充。与输入一样，输出需要一个唯一的ID作为其第一个参数：如果您的用户界面规范创建了一个ID为<code>plot</code>的输出，您可以通过<code>output$plot</code>在服务器函数中访问它。</p><p>前端中的每个输出函数都与后端的渲染函数配对。有三种主要的输出类型，对应于您通常在报告中包含的三件事：<code>文本</code>、<code>表格</code>和<code>图形</code>。以下部分向您展示了前端输出函数的基本知识，以及后端相应的渲染函数。</p><h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><p>使用<code>textOutput()</code>输出普通文本，使用<code>verbatimTextOutput()</code>输出固定代码和控制台输出。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  textOutput(&quot;text&quot;),</span><br><span class="line">  verbatimTextOutput(&quot;code&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$text &lt;- renderText(&#123; </span><br><span class="line">    &quot;Hello friend!&quot; </span><br><span class="line">  &#125;)</span><br><span class="line">  output$code &lt;- renderPrint(&#123; </span><br><span class="line">    summary(1:10) </span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/61f37c119d66f0b25bb834d6773274856b764727/a9ae2/demos/basic-ui/output-text.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/61f37c119d66f0b25bb834d6773274856b764727/a9ae2/demos/basic-ui/output-text.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>请注意，只有在需要运行多行代码时，<code>&#123;&#125;</code>才需要在渲染函数中使用。正如您即将了解的那样，您应该在渲染函数中尽可能少地进行计算，这意味着您通常可以省略它们。以下是上述server函数更简洁的方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$text &lt;- renderText(&quot;Hello friend!&quot;)</span><br><span class="line">  output$code &lt;- renderPrint(summary(1:10))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，有两种渲染函数的行为略有不同：</p><ul><li><p><code>renderText()</code>将结果合并成一个字符串，通常与<code>textOutput()</code>配对</p></li><li><p><code>renderPrint()</code>打印结果，就像在R控制台中一样，通常与<code>verbatimTextOutput()</code>配对。</p></li></ul><p>我们可以通过一个玩具应用程序看到这种差异：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  textOutput(&quot;text&quot;),</span><br><span class="line">  verbatimTextOutput(&quot;print&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$text &lt;- renderText(&quot;hello!&quot;)</span><br><span class="line">  output$print &lt;- renderPrint(&quot;hello!&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/086a9fbcf20ad02bb679141fbe4f263d6cd7646c/dda5c/demos/basic-ui/text-vs-print.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/086a9fbcf20ad02bb679141fbe4f263d6cd7646c/dda5c/demos/basic-ui/text-vs-print.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>二者的区别与R中的 <code>cat()</code> and <code>print()</code>一样。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>有三种方法可以在表格中显示数据框：</p><ul><li><p><code>tableOutput()</code>和<code>renderTable()</code>呈现静态数据表，一次显示所有数据。</p></li><li><p><code>dataTableOutput()</code>和<code>renderDataTable()</code>呈现动态数据表，一次显示固定数量的行，同时显示控件以更改可见行。</p></li></ul><p><code>tableOutput()</code>最适合小型、固定的摘要（例如模型系数）；如果您想向用户展示完整的数据框，<code>dataTableOutput()</code>最为合适。如果您想更精确地控制<code>dataTableOutput()</code>的输出，我强烈推荐Greg Lin的<a href="https://glin.github.io/reactable/index.html">reactable</a>包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  tableOutput(&quot;static&quot;),</span><br><span class="line">  dataTableOutput(&quot;dynamic&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$static &lt;- renderTable(head(mtcars))</span><br><span class="line">  output$dynamic &lt;- renderDataTable(mtcars, options = list(pageLength = 5))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/2fe4c674645896fa18d345ad162f479434746dd2/2e28c/demos/basic-ui/output-table.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/2fe4c674645896fa18d345ad162f479434746dd2/2e28c/demos/basic-ui/output-table.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="表格"></p><h3 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h3><p>您可以使用<code>plotOutput()</code>和<code>renderPlot()</code>显示任何类型的R图形（基础、ggplot2或其他）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  plotOutput(&quot;plot&quot;, width = &quot;400px&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$plot &lt;- renderPlot(plot(1:5), res = 96)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://d33wubrfki0l68.cloudfront.net/c87e58475e7a0c2e0d12f06ac28169c0c670dc91/b2f86/demos/basic-ui/output-plot.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/c87e58475e7a0c2e0d12f06ac28169c0c670dc91/b2f86/demos/basic-ui/output-plot.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="绘图"></p><p>默认情况下，<code>plotOutput()</code>将占据其容器的全部宽度（稍后将详细介绍），高度为400像素。您可以使用<code>height</code>和<code>width</code>参数覆盖这些默认值。我们建议始终将<code>res</code>设置为<strong>96</strong>，这样您的Shiny图形就会尽可能与RStudio中看到的图形相匹配。</p><p>图形是特殊的输出，因为它们也可以作为输入。<code>plotOutput()</code>具有许多参数，如<code>click</code>、<code>dblclick</code>和<code>hover</code>。如果您将这些参数传递给字符串，例如<code>click = &quot;plot_click&quot;</code>，则它们将创建一个可响应的输入（<code>input$plot_click</code>），您可以使用它来处理与图形的用户交互，例如单击图形。我们将在第7章中再次讨论Shiny中的交互式图形。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>您可以使用<code>downloadButton()</code>或<code>downloadLink()</code>让用户下载文件。这些需要在server函数中使用新技术，因此我们将在第9章中详细介绍。</p><h3 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h3><p>2.3.5.1 下列哪个应与<code>textOutput()</code>和<code>verbatimTextOutput()</code>配对？</p><p>a. renderPrint(summary(mtcars))</p><p>b. renderText(“Good morning!”)</p><p>c. renderPrint(t.test(1:5, 2:6))</p><p>d. renderText(str(lm(mpg ~ wt, data &#x3D; mtcars)))</p><p>2.3.5.2 重新创建第2.3.3节的Shiny应用程序，这次将高度设置为300像素，宽度设置为700像素。设置图的“alt”文本，以便视障用户可以判断其是五个随机数的散点图。</p><p>2.3.5.3 更新以下调用<code>renderDataTable()</code>的选项，以便仅显示数据，但其他控件均被抑制（即删除搜索、排序和过滤命令）。您需要阅读<a href="https://rdrr.io/pkg/shiny/man/renderDataTable.html">?renderDataTable</a>并回顾<a href="https://datatables.net/reference/option/">https://datatables.net/reference/option/</a>中的选项。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ui &lt;- fluidPage(</span><br><span class="line">  dataTableOutput(&quot;table&quot;)</span><br><span class="line">)</span><br><span class="line">server &lt;- function(input, output, session) &#123;</span><br><span class="line">  output$table &lt;- renderDataTable(mtcars, options = list(pageLength = 5))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3.5.4 或者，您可以阅读<a href="https://glin.github.io/reactable">reactable</a>的文档，并将上面的应用程序转换为使用它。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本章向您介绍了Shiny应用程序前端的主要输入和输出功能。这是一次大量的信息灌输，因此不要期望在一次阅读后就能记住所有内容。相反，当您需要查找特定组件时，请返回本章：您可以快速浏览图示，然后找到您需要的代码。</p><p>下一章我们将介绍Shiny应用程序的后端：使您的用户界面生动起来的R代码。</p><h1 id="练习题答案获取"><a href="#练习题答案获取" class="headerlink" title="练习题答案获取"></a>练习题答案获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“5369”获取习题答案。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>16S扩增子测序及宏基因组测序</title>
      <link href="/post/c617.html"/>
      <url>/post/c617.html</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>在本文中，我将着重介绍两种高通量测序技术：<code>16S rDNA扩增子测序</code>和<code>Shot-gun宏基因组测序</code>。我们的主要目的是帮助大家深入了解这些技术的原理、应用场景以及如何解读数据分析结果。</p><p>随着高通量测序技术的快速发展，我们能够更全面、更深入地了解微生物群落结构和功能。16S rDNA扩增子测序作为一种常用的方法，可以通过对16S rRNA基因进行扩增和测序，快速揭示微生物群落的组成和多样性。而Shot-gun宏基因组测序则针对整个样本的全部基因组进行测序，提供了更全面的信息，包括微生物种类和功能丰度等。</p><p>通过阅读本文，我们希望您能够掌握以下几个方面的内容：</p><ul><li>理解16S rDNA扩增子测序和Shot-gun宏基因组测序的基本原理和流程；</li><li>了解两种技术在微生物学组学研究中的应用场景；</li><li>学会收集、保存和运输样本时需要注意的细节；</li><li>掌握如何解读和分析16S rDNA扩增子测序和Shot-gun宏基因组测序的数据结果。</li></ul><p>我相信，通过这次学习，您将能够更好地理解和应用这些高通量测序技术，并在自己的研究中获得更准确、全面的数据和结论。现在，让我们开始深入探索16S rDNA扩增子测序和Shot-gun宏基因组测序的世界吧！</p><h1 id="高通量测序概述"><a href="#高通量测序概述" class="headerlink" title="高通量测序概述"></a>高通量测序概述</h1><p>高通量测序，也被称为下一代测序（Next Generation Sequencing, NGS），是一种革命性的DNA或RNA序列分析技术。与传统的Sanger测序方法相比，高通量测序具有更快、更便宜和更高通量的特点。</p><p>高通量测序技术的核心原理是将待测样本中的DNA或RNA分子通过特定的方法进行扩增，并将其分成数百万个片段。然后，这些片段将被同时测序，产生大量的短序列片段，称为reads。这些reads可以根据其碱基序列进行排序和分析，以揭示样本中的遗传信息。</p><h2 id="高通量测序在生物学研究中的重要性"><a href="#高通量测序在生物学研究中的重要性" class="headerlink" title="高通量测序在生物学研究中的重要性"></a>高通量测序在生物学研究中的重要性</h2><p>高通量测序技术在生物学研究中发挥着重要作用，对于我们理解生物系统的复杂性和多样性具有重要意义。以下是高通量测序在生物学研究中的几个重要应用：</p><ul><li><p><strong>基因组学研究</strong>：高通量测序可以帮助我们解析生物体的基因组组成、结构和功能，揭示基因与表型之间的关系。例如，它可以用于全基因组测序，鉴定和研究与疾病相关的基因突变。</p></li><li><p><strong>转录组学研究</strong>：通过高通量测序，我们可以了解到不同细胞或组织中正在表达的所有基因，进而研究基因的表达调控机制、信号通路以及与疾病相关的差异基因表达。</p></li><li><p><strong>蛋白质组学研究</strong>：高通量测序还可以用于蛋白质组学研究，帮助我们理解蛋白质的组成和功能。通过RNA测序和质谱分析相结合的方法，可以更全面地研究细胞内蛋白质的表达水平、亚细胞定位和相互作用网络等。</p></li><li><p><strong>微生物学研究</strong>：高通量测序在微生物学研究中广泛应用。通过对微生物群落DNA测序，我们可以揭示不同环境中微生物的多样性、组成和功能，为环境保护、药物开发和人类健康等领域提供重要依据。</p></li></ul><p>总的来说，高通量测序技术推动了生物学研究的进步，并为我们提供了更全面、更深入的遗传信息。它为解决重要生物学问题和促进医学领域的发展提供了强大工具和资源。</p><h1 id="16S-rDNA扩增子测序介绍"><a href="#16S-rDNA扩增子测序介绍" class="headerlink" title="16S rDNA扩增子测序介绍"></a>16S rDNA扩增子测序介绍</h1><p>16S rDNA是细菌和古细菌中的一个高度保守的基因区域，它编码了小亚基核糖体RNA（Small Subunit Ribosomal RNA），在细菌和古细菌的细胞中普遍存在。由于16S rDNA具有高度保守性和变异性的特点，它成为了研究微生物群落结构和多样性的理想标记。</p><h2 id="16S-rDNA扩增子测序原理和流程："><a href="#16S-rDNA扩增子测序原理和流程：" class="headerlink" title="16S rDNA扩增子测序原理和流程："></a>16S rDNA扩增子测序原理和流程：</h2><ul><li><strong>样品提取与PCR扩增：</strong> 首先，从样品中提取总DNA，包括微生物组成的DNA。然后，利用引物对16S rDNA进行PCR扩增，产生包含16S rDNA片段的扩增子。</li><li><strong>文库构建：</strong> 将扩增子进行文库构建，即将其转化为适合高通量测序平台测序的文库。</li><li><strong>高通量测序：</strong> 使用高通量测序技术（如Illumina MiSeq或Ion Torrent等）对文库进行测序，得到数百万个短序列片段，称为reads。</li><li><strong>数据分析：</strong> 对测序数据进行质量控制、去除噪音和低质量reads，并对reads进行比对和聚类，得到OTU（Operational Taxonomic Unit）或ASV表格，用来表示不同的微生物分类单元。</li><li><strong>分类学注释与功能预测：</strong> 对OTU&#x2F;ASV进行分类学注释，将其与已知的16S rDNA数据库比对，确定微生物群落的组成。此外，还可以使用相应的工具对OTU&#x2F;ASV进行功能预测，以了解微生物群落的功能潜力。</li></ul><h2 id="16S-rDNA扩增子测序在微生物群落分析中的应用："><a href="#16S-rDNA扩增子测序在微生物群落分析中的应用：" class="headerlink" title="16S rDNA扩增子测序在微生物群落分析中的应用："></a>16S rDNA扩增子测序在微生物群落分析中的应用：</h2><ul><li><p><strong>多样性研究：</strong> 通过16S rDNA扩增子测序，我们可以了解到微生物群落的多样性、丰度和组成。这对于研究环境中的微生物生态系统、人体内的菌群结构和变化等具有重要意义。</p></li><li><p><strong>疾病相关研究：</strong> 微生物与宿主之间存在着复杂的相互关系，16S rDNA扩增子测序可帮助我们揭示微生物与疾病之间的关联。例如，可以研究肠道菌群在肠炎、肠癌等疾病中的变化，为疾病的早期诊断和治疗提供依据。</p></li><li><p><strong>环境监测：</strong> 通过16S rDNA扩增子测序，可以对环境中的微生物进行评估和监测。这有助于了解环境中的微生物多样性、菌群结构的变化等，为环境保护和资源管理提供科学依据。</p><p>16S rDNA扩增子测序在微生物群落分析中的应用，有助于我们深入了解微生物的组成和功能特征，揭示微生物在各种生态系统中的作用和影响。</p></li></ul><h1 id="Shot-gun宏基因组测序介绍"><a href="#Shot-gun宏基因组测序介绍" class="headerlink" title="Shot-gun宏基因组测序介绍"></a>Shot-gun宏基因组测序介绍</h1><h2 id="宏基因组测序概述"><a href="#宏基因组测序概述" class="headerlink" title="宏基因组测序概述"></a>宏基因组测序概述</h2><p>宏基因组测序是一种用于研究环境微生物的基因组的技术。与常规基因组测序不同，宏基因组测序可以同时测序一个样品中的所有DNA片段，而不仅仅是特定基因或区域。这使得我们能够获得更全面的宏基因组信息，了解生物群体的遗传多样性和功能潜力。</p><h2 id="Shot-gun宏基因组测序原理和流程："><a href="#Shot-gun宏基因组测序原理和流程：" class="headerlink" title="Shot-gun宏基因组测序原理和流程："></a>Shot-gun宏基因组测序原理和流程：</h2><ul><li><strong>样品提取与DNA纯化：</strong> 首先，从样品中提取总DNA（原核、真核、宿主等）。</li><li><strong>文库构建：</strong> 将提取到的DNA进行碎片化处理，然后将其转化为适合高通量测序平台的文库，其中每个DNA片段都被连接到测序适配器上。</li><li><strong>高通量测序：</strong> 利用高通量测序技术（如Illumina NovaSeq或PacBio等）对文库进行测序，产生海量的短读段或长读段。</li><li><strong>数据处理与组装：</strong> 对测序数据进行质量控制（去宿主序列）、去除低质量reads，并将reads进行拼接组装，以重建原始DNA序列的完整性。</li><li><strong>功能注释与分析：</strong> 对宏基因组进行进一步的数据处理和分析，包括基因预测、基因注释、物种注释、代谢通路分析等，以了解宏基因组的功能潜力。</li></ul><h2 id="Shot-gun宏基因组测序在宏基因组学研究中的应用："><a href="#Shot-gun宏基因组测序在宏基因组学研究中的应用：" class="headerlink" title="Shot-gun宏基因组测序在宏基因组学研究中的应用："></a>Shot-gun宏基因组测序在宏基因组学研究中的应用：</h2><ul><li><strong>功能和代谢潜力分析：</strong> 通过Shot-gun宏基因组测序，我们可以预测宏生物体内存在的基因，并进一步推断其功能和代谢潜力。这有助于理解宏生物体对环境的适应性和功能特征。</li><li><strong>群落结构和相互作用分析：</strong> 宏基因组测序可以揭示宏生物群落的组成和结构，以及不同种群之间的相互作用模式。这对于研究宏生态系统的稳定性、共生共存关系和复杂网络等方面具有重要意义。</li></ul><p>Shot-gun宏基因组测序提供了了解宏生物的遗传多样性、功能潜力和生态作用的强大工具。它在宏基因组学研究中发挥着重要作用，为我们深入了解生物的基因组特征和生态系统功能提供了新的视角。</p><h1 id="16S-rDNA扩增子测序与Shot-gun宏基因组测序的区别"><a href="#16S-rDNA扩增子测序与Shot-gun宏基因组测序的区别" class="headerlink" title="16S rDNA扩增子测序与Shot-gun宏基因组测序的区别"></a>16S rDNA扩增子测序与Shot-gun宏基因组测序的区别</h1><table><thead><tr><th>特点</th><th>宏基因组测序</th><th>16S测序</th></tr></thead><tbody><tr><td>分析范围</td><td>微生物群落中的所有微生物种类和全基因组信息</td><td>微生物群落中的16S rRNA基因信息</td></tr><tr><td>精度和分辨率</td><td>高（种水平）</td><td>相对较低（属水平）</td></tr><tr><td>数据处理和分析复杂性</td><td>复杂</td><td>相对简单</td></tr><tr><td>优势</td><td>提供全面性信息，高分辨率，功能分析，适用于各种生态系统研究</td><td>揭示微生物的多样性、群落结构、系统发育关系，成本低</td></tr><tr><td>宿主影响</td><td>易</td><td>不易</td></tr><tr><td>局限性</td><td>昂贵，需要大量计算资源和专业知识</td><td>仅提供关于16S rRNA基因（细菌和古细菌）的信息，分辨率有限，无法提供详细的功能和代谢潜力信息。</td></tr><tr><td>以上是宏基因组测序和16S测序的主要差别。16S rDNA扩增子测序更加注重微生物群落的结构和多样性分析，尽管宏基因组测序具有更广泛的应用和更高的解析能力，但同时也存在着一些局限性，如成本高昂、数据处理和分析的复杂性以及对专业知识的依赖。因此，在选择使用哪种技术时，研究人员需要根据自身的研究目的、样品类型和预算进行权衡。</td><td></td><td></td></tr></tbody></table><h1 id="样本收集保存和运输注意事项"><a href="#样本收集保存和运输注意事项" class="headerlink" title="样本收集保存和运输注意事项"></a>样本收集保存和运输注意事项</h1><h2 id="扩增子和宏基因组测序前样本的采集方法和注意事项："><a href="#扩增子和宏基因组测序前样本的采集方法和注意事项：" class="headerlink" title="扩增子和宏基因组测序前样本的采集方法和注意事项："></a>扩增子和宏基因组测序前样本的采集方法和注意事项：</h2><h3 id="样本采集方法："><a href="#样本采集方法：" class="headerlink" title="样本采集方法："></a>样本采集方法：</h3><ul><li>对于微生物群落研究，例如16S rDNA扩增子测序，通常采集环境样品（如土壤、水体、肠道内容物）或临床样品（如口腔拭子、粪便样品）。</li><li>采集时要避免污染，使用无菌工具（如消毒的手套、取样器具等）进行采集。</li><li>采集前应了解目标生物的分布情况、适宜的时间和地点，并进行采样地点的描述和记录。</li><li>宏基因组测序涉及更广泛的样品类型，包括细菌、古细菌、真核生物等。采集方法根据样品类型有所不同。</li></ul><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><ul><li>样品采集和处理过程中，必须遵守无菌操作规范，以减少外部污染对样品的影响。</li><li>避免使用可能含有RNase或DNase酶的试剂和工具，以防止核酸降解。</li><li>了解目标生物的生态环境和特性，选择合适的采集时间和地点，确保获得代表性的样品。</li><li>根据不同采样类型，选择合适的容器（如离心管、冰袋、采集棒等）进行样品收集，并在收集后立即进行处理或冷冻保存。</li><li>在采集样品前，将采样工具彻底清洁消毒，尽量避免重复采样和交叉污染。</li><li>通过宏基因组测序研究宿主相关微生物时，需要注意尽可能避免采集到宿主组织，否则会导致测序数据中微生物序列占比过小。</li></ul><h2 id="样本保存和运输以保持完整性和稳定性："><a href="#样本保存和运输以保持完整性和稳定性：" class="headerlink" title="样本保存和运输以保持完整性和稳定性："></a>样本保存和运输以保持完整性和稳定性：</h2><ul><li><p><strong>保存方法：</strong></p><ul><li>样品保存应根据实验需求和样品特性选择适当的方法。常见的保存方法包括低温冷冻、保护液保存等。</li><li>对于微生物样品，通常将其迅速冷冻保存在-80°C的冰箱中，以减缓DNA降解和生物活性的损失。</li></ul></li><li><p><strong>运输方法：</strong></p><ul><li>在样品运输过程中，应确保样品的温度稳定性和完整性。</li><li>使用合适的运输容器，如冷箱、干冰盒等，以保持低温和防止样品破裂或泄漏。</li><li>对于国际运输，遵守相关法规和运输限制，确保样品能够顺利通过海关和检疫。</li></ul></li></ul><p>在采集样本和进行扩增子或宏基因组测序之前，正确的采集方法和样品处理是确保数据质量和可靠性的重要步骤。选择适当的保存和运输方法可以确保样品的完整性和稳定性，并最大程度地保护其中的生物信息。</p><p>请注意，不同类型的样品可能需要采用不同的保存和运输方法。因此，在进行扩增子或宏基因组测序之前，建议咨询专业人士或参考相关文献以获取针对特定样品类型的最佳实践建议。</p><h1 id="数据分析结果解读"><a href="#数据分析结果解读" class="headerlink" title="数据分析结果解读"></a>数据分析结果解读</h1><h2 id="16S-rDNA和宏基因组数据分析的基本流程："><a href="#16S-rDNA和宏基因组数据分析的基本流程：" class="headerlink" title="16S rDNA和宏基因组数据分析的基本流程："></a>16S rDNA和宏基因组数据分析的基本流程：</h2><h3 id="16S-rDNA数据分析流程："><a href="#16S-rDNA数据分析流程：" class="headerlink" title="16S rDNA数据分析流程："></a>16S rDNA数据分析流程：</h3><ul><li>质量控制：对原始测序数据进行质量过滤和去除接头、低质量序列。</li><li>序列拼接：将质量控制后的序列根据重叠区域进行拼接，得到高质量的长序列。</li><li>物种注释：使用参考数据库（如Greengenes、SILVA）进行物种注释，将序列与已知物种进行比对并分类。</li><li>多样性分析：计算物种多样性指数、绘制稀释曲线、构建物种共生网络等。</li><li>群落结构分析：通过聚类分析（如OTU聚类）和Beta多样性分析（如PCoA、NMDS）研究群落结构差异。</li><li>寻找Biomarker：通过LESFE分析寻找差异物种。</li><li>功能预测：通过软件（picrust2，FAPROTAX）预测群落功能。</li></ul><h3 id="宏基因组数据分析流程："><a href="#宏基因组数据分析流程：" class="headerlink" title="宏基因组数据分析流程："></a>宏基因组数据分析流程：</h3><ul><li>质量控制：对原始测序数据进行质量过滤和去除低质量序列。</li><li>去宿主序列：将质量控制后的序列与宿主参考基因组进行比对，剩余的为微生物序列。</li><li>基因预测：对微生物序列进行基因预测。</li><li>功能注释：使用参考数据库（如KEGG、COG、GO、CAZY）对预测的功能基因进行注释。</li><li>Alpha和Beta多样性分析：计算Alpha多样性指数和Beta多样性，比较不同样本之间的功能结构差异。</li></ul><h3 id="常见的分析软件和工具："><a href="#常见的分析软件和工具：" class="headerlink" title="常见的分析软件和工具："></a>常见的分析软件和工具：</h3><ul><li>16S rDNA数据分析：QIIME2，mothur，DADA2，UPARSE, RDPipeline，vegan，PICRUSt……</li><li>宏基因组数据分析：MetaPhlAn, HUMAnN, MG-RAST, MEGAN, kraken2……</li></ul><h1 id="结论和展望"><a href="#结论和展望" class="headerlink" title="结论和展望"></a>结论和展望</h1><h2 id="16S-rDNA扩增子和Shot-gun宏基因组测序的特点和应用："><a href="#16S-rDNA扩增子和Shot-gun宏基因组测序的特点和应用：" class="headerlink" title="16S rDNA扩增子和Shot-gun宏基因组测序的特点和应用："></a>16S rDNA扩增子和Shot-gun宏基因组测序的特点和应用：</h2><h3 id="16S-rDNA扩增子测序特点和应用："><a href="#16S-rDNA扩增子测序特点和应用：" class="headerlink" title="16S rDNA扩增子测序特点和应用："></a>16S rDNA扩增子测序特点和应用：</h3><ul><li>特点：通过放大和测序16S rDNA基因区域，可以研究微生物群落的组成和结构。</li><li>应用：<ul><li>揭示微生物群落的多样性和相对丰度，了解不同环境中的微生物群落变化。</li><li>研究微生物与健康、疾病之间的关联，如肠道菌群与肠道疾病的关系。</li><li>探索环境中未知微生物种类，发现新的微生物资源。</li></ul></li></ul><h3 id="Shot-gun宏基因组测序特点和应用："><a href="#Shot-gun宏基因组测序特点和应用：" class="headerlink" title="Shot-gun宏基因组测序特点和应用："></a>Shot-gun宏基因组测序特点和应用：</h3><ul><li>特点：对整个基因组进行测序，包括微生物和宿主的DNA，提供更全面的信息。</li><li>应用：<ul><li>研究微生物和宿主基因组之间的相互作用，如微生物的代谢功能对宿主健康的影响。</li><li>分析微生物的功能潜力，如预测微生物群落参与的代谢途径和信号通路。</li><li>研究微生物基因组的进化和遗传多样性，理解微生物演化和适应策略。</li></ul></li></ul><h2 id="未来发展方向和潜在的研究前景："><a href="#未来发展方向和潜在的研究前景：" class="headerlink" title="未来发展方向和潜在的研究前景："></a>未来发展方向和潜在的研究前景：</h2><h3 id="方法改进："><a href="#方法改进：" class="headerlink" title="方法改进："></a>方法改进：</h3><ul><li>提高测序技术的精度和通量，降低成本，使得扩增子和宏基因组测序更加高效和经济。</li><li>开发新的分析工具和算法，以提高数据处理和解释的准确性和效率。</li></ul><h3 id="整合多组学数据："><a href="#整合多组学数据：" class="headerlink" title="整合多组学数据："></a>整合多组学数据：</h3><ul><li>结合16S rDNA&#x2F;宏基因组测序数据与转录组、蛋白质组和代谢组等多组学数据，构建全面的系统生物学模型，深入了解微生物与宿主之间的复杂相互关系。</li></ul><h3 id="功能预测和代谢网络建模："><a href="#功能预测和代谢网络建模：" class="headerlink" title="功能预测和代谢网络建模："></a>功能预测和代谢网络建模：</h3><ul><li>进一步发展和完善基于宏基因组数据的功能预测方法，从而揭示微生物群落的代谢功能和关键信号通路。</li><li>基于大规模宏基因组数据，构建微生物群落的代谢网络模型，深入理解微生物共生和协同作用的机制。</li></ul><h3 id="环境和临床应用："><a href="#环境和临床应用：" class="headerlink" title="环境和临床应用："></a>环境和临床应用：</h3><ul><li>运用16S rDNA扩增子和宏基因组测序技术，研究不同环境（如土壤、水体、大气）中的微生物群落动态和功能。</li><li>在临床领域，通过微生物组学的研究，探索微生物与健康、疾病之间的关系，并开发个性化微生物介入策略。</li></ul><p>总的来说，未来的发展方向包括技术改进、多组学数据整合、功能预测和代谢网络建模，以及在环境和临床应用方面的深入研究。这些发展将进一步推动微生物组学的应用和理解，为我们揭示微生物的奥秘提供更深入的视角。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测序 </tag>
            
            <tag> 扩增子 </tag>
            
            <tag> 宏基因组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——1.在小小的花园里面挖呀挖呀挖</title>
      <link href="/post/b376.html"/>
      <url>/post/b376.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本部分为学习Shiny的第一阶段——挖坑。</p><p>在接下来的四章中，目标是让读者尽快学会编写Shiny应用程序。</p><ul><li><p>在第一章中，作者将从小处着手，但内容完整，向读者展示应用程序的所有主要部分以及它们如何组合在一起。</p></li><li><p>在第二章和第三章中，读者将开始详细了解Shiny应用程序的两个主要部分：前端（用户在浏览器中看到的内容）和后端（使应用程序起作用的代码）。</p></li><li><p>第四章将通过案例研究来完成，以帮助巩固读者迄今为止所学的概念。</p></li></ul><h1 id="第一个Shiny-app"><a href="#第一个Shiny-app" class="headerlink" title="第一个Shiny app"></a>第一个Shiny app</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在本章中，我们将创建一个简单的Shiny应用程序。首先，我将向您展示Shiny应用程序所需的最低样板，然后您将学习如何启动和停止它。接下来，您将学习每个Shiny应用程序的两个关键组件：UI（用户界面的缩写），它定义了应用程序的外观，以及服务器功能，它定义了应用程序的工作方式。Shiny使用响应式编程在输入更改时自动更新输出，因此我们将通过学习Shiny应用程序的第三个重要组件：响应式表达式来结束本章。</p><p>如果你还没有安装Shiny，现在用以下命令安装它</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;shiny&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如果您已经安装了Shiny，请使用<code>packageVersion(&quot;shiny&quot;)</code>检查您是否安装了1.5.0或更高版本。然后在当前的R会话中加载：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="创建应用程序目录和文件"><a href="#创建应用程序目录和文件" class="headerlink" title="创建应用程序目录和文件"></a>创建应用程序目录和文件</h2><p>创建Shiny应用程序有多种方法，最简单的是为您的应用程序创建一个新目录，并在其中放置一个名为<code>app.R</code>的单个文件。这个app.R文件将用于告诉Shiny应用程序应该如何展示界面以及应该如何运行。</p><p>通过创建新目录并添加如下所示的app.R文件来尝试一下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  <span class="string">&quot;Hello, world!&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">shinyApp<span class="punctuation">(</span>ui<span class="punctuation">,</span> server<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>以上是完整的、基础的Shiny应用程序！仔细观察上面的代码，app.R做了四件事：</p><ul><li><p>它调用<code>library(shiny)</code>来加载shiny包。</p></li><li><p>它定义了用户界面，即人类与之交互的HTML网页。在这种情况下，它是一个包含<code>“Hello，world！”</code>的页面。</p></li><li><p>它通过定义<code>server</code>函数来指定应用程序的行为。目前为空，因此我们的应用程序不做任何事情，但我们稍后会回过头来重新审视这一点。</p></li><li><p>它使用<code>shinyApp(ui，server)</code>来构建并启动一个从用户界面和服务器构建的Shiny应用程序。</p></li></ul><p><strong>RStudio提示</strong>：在RStudio中有两种方便的方法可以创建新的应用程序：</p><ul><li><p>通过点击<code>File | New Project</code>，然后选择<code>New Directory</code>和<code>Shiny Web Application</code>，可以一次性创建一个新的目录和<code>app.R</code>文件，其中包含基本的应用程序。</p></li><li><p>如果您已经创建了<code>app.R</code>文件，可以通过键入<code>“shinyapp”</code>并按<code>Shift+Tab</code>快速添加应用程序样板。</p></li></ul><h2 id="运行和停止"><a href="#运行和停止" class="headerlink" title="运行和停止"></a>运行和停止</h2><p>您可以通过几种方式运行此应用程序：</p><ul><li><p>单击文档工具栏中的<code>Run App</code>（图1.1）按钮。</p></li><li><p>使用键盘快捷键：<code>Cmd / Ctrl + Shift + Enter</code>。</p></li><li><p>如果您没有使用RStudio，则可以使用<code>(source())</code><sup>1</sup> 整个文档，或使用包含app.R的目录的路径调用<code>shiny::runApp()</code>。</p></li></ul><p><img src="https://d33wubrfki0l68.cloudfront.net/fbf45a58e2a82900449f9eb35deba4e670f54624/530cb/images/basic-app/run-app.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/fbf45a58e2a82900449f9eb35deba4e670f54624/530cb/images/basic-app/run-app.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图1.1 Run App 按钮可以在源码窗格的右上角找到。"></p><p>从这些选项中选择一个，并确认您看到的与图1.2中的相同的应用程序。恭喜！您已经制作了您的第一个Shiny应用程序。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/e9e6b44c85c169aedd2c4e630022e7958aa57696/06ba0/images/basic-app/hello-world.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/e9e6b44c85c169aedd2c4e630022e7958aa57696/06ba0/images/basic-app/hello-world.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图1.2 当你运行上面的代码时，你会看到最简单的shiny应用程序"></p><p>在你关闭应用程序之前，回到RStudio并查看R控制台。你会注意到它说类似于：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&gt; Listening on http://127.0.0.1:3827</span><br></pre></td></tr></table></figure><p>这告诉你应用程序的URL：127.0.0.1是一个标准地址，表示“这台计算机”，而3827是一个随机分配的端口号。你可以将该URL输入到任何兼容的web浏览器中以打开应用程序的另一个副本。</p><p>另外请注意，R正在运行：R提示符不可见，控制台工具栏显示一个停止符号图标。当Shiny应用程序正在运行时，它会“阻止”R控制台。这意味着在Shiny应用程序停止之前，您无法在R控制台运行新的命令。</p><p>您可以使用以下选项之一停止应用程序并返回对控制台的访问权限：</p><ul><li><p>点击R控制台工具栏上的停止符号图标。</p></li><li><p>单击控制台，然后按Esc（或按<code>Ctrl + C</code>如果您没有使用RStudio）。</p></li><li><p>关闭Shiny应用程序窗口。</p></li></ul><p>Shiny应用程序开发的基本工作流程是编写一些代码，启动应用程序，与应用程序交互，编写更多代码，然后重复。如果你使用的是RStudio，你甚至不需要停止和重新启动应用程序来查看你的更改 - 你可以按下工具箱中的<code>Reload app</code>按钮或使用<code>Cmd/Ctrl + Shift + Enter</code>键盘快捷键。我将在第5章中介绍其他工作流程模式。</p><h2 id="添加用户界面控件"><a href="#添加用户界面控件" class="headerlink" title="添加用户界面控件"></a>添加用户界面控件</h2><p>接下来，我们将向用户界面添加一些输入和输出，使其不再如此简约。我们将创建一个非常简单的应用程序，向您展示datasets包中包含的所有内置数据框。</p><p>用以下代码替换您的ui：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;dataset&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="string">&quot;Dataset&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> ls<span class="punctuation">(</span><span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  verbatimTextOutput<span class="punctuation">(</span><span class="string">&quot;summary&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;table&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>这个例子使用了四个新函数：</p><ul><li><p><code>fluidPage()</code>是一个布局函数，用于设置页面的基本视觉结构。您将在第6.2节中了解更多关于它们的信息。</p></li><li><p><code>selectInput()</code>是一种输入控件，使用户可以通过提供值与应用程序进行交互。在这种情况下，它是一个带有标签“Dataset”的下拉菜单，允许您从R自带的内置数据集中选择一个。您将在第2.2节中了解更多关于输入的信息。</p></li><li><p><code>verbatimTextOutput()</code>和<code>tableOutput()</code>是输出控件，它们告诉Shiny将渲染的输出放在哪里（我们稍后再了解）。<code>verbatimTextOutput()</code>显示代码，<code>tableOutput()</code>显示表格。您将在第2.3节中了解更多关于输出的信息。</p></li></ul><p>布局函数、输入和输出有不同的用途，但它们在本质上都是相同的：它们都是生成HTML的巧妙方式，如果您在Shiny应用程序之外调用其中任何一个，您将在控制台上看到HTML输出。不要害怕深入研究这些不同的布局和控件是如何工作的。</p><p>现在运行应用程序。您将看到图1.3，一个包含下拉框的页面。我们只看到了输入，而没有看到两个输出，因为我们还没有告诉Shiny输入和输出之间的关系。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/17eadbf2ccdea8d4648b05d486dfb465f562df69/d077d/demos/basic-app/ui.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/17eadbf2ccdea8d4648b05d486dfb465f562df69/d077d/demos/basic-app/ui.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图1.3 具有用户界面的datasets应用程序"></p><h2 id="添加行为"><a href="#添加行为" class="headerlink" title="添加行为"></a>添加行为</h2><p>接下来，我们将通过在<code>server</code>函数中定义它们来为输出提供生命。</p><p>Shiny使用响应式编程使应用程序具有交互性。您将在第3章中了解更多关于响应式编程的信息，但现在只需知道，它涉及到告诉Shiny如何执行计算，而不是命令Shiny实际去做。这就像给某人食谱与命令他们给您做三明治之间的区别。</p><p>我们将为样本应用程序中的摘要和表格输出提供“食谱”，以告诉Shiny如何填充这些输出。用以下代码替换您的空server函数：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>summary <span class="operator">&lt;-</span> renderPrint<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    dataset <span class="operator">&lt;-</span> get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span></span><br><span class="line">    summary<span class="punctuation">(</span>dataset<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>table <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    dataset <span class="operator">&lt;-</span> get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span></span><br><span class="line">    dataset</span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>赋值运算符（&lt;-）的左侧，<code>output$ID</code>，表示您正在为具有该ID的Shiny输出提供食谱。赋值运算符的右侧使用特定的render函数来包装您提供的代码。每个<code>render&#123;Type&#125;</code>函数旨在生成特定类型的输出（例如文本、表格和图形），并且通常与<code>&#123;type&#125;Output</code>函数配对。例如，在此应用程序中，<code>renderPrint()</code>与<code>verbatimTextOutput()</code>配对以显示具有固定宽度（逐字）文本的统计摘要，而<code>renderTable()</code>与<code>tableOutput()</code>配对以在表格中显示输入数据。</p><p>再次运行应用程序并尝试使用，观察更改输入时输出会发生什么变化。图1.4显示了打开应用程序时应该看到的内容。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/bb766cc235f190fd2c28d8f011edb7f9cbe526a7/5d540/demos/basic-app/server.png" alt="图1.4 现在我们已经提供了一个将输出和输入连接起来的服务器函数，我们已经有了一个功能完整的应用程序"></p><p>请注意，每当您更改输入数据集时，摘要和表格都会自动更新。这种依赖性是通过在输出函数中引用<code>input$dataset</code>而隐式创建的。<code>input$dataset</code>被填充为UI组件中id为dataset的当前值，并且当该值发生变化时，将导致输出自动更新。这就是反应性的本质：输出在输入发生更改时自动（重新计算）。</p><h2 id="使用反应式表达式减少重复"><a href="#使用反应式表达式减少重复" class="headerlink" title="使用反应式表达式减少重复"></a>使用反应式表达式减少重复</h2><p>即使在这个简单的例子中，我们也有一些重复的代码：下面的这行代码在两个输出中都存在。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset <span class="operator">&lt;-</span> get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>在任何一种编程中，重复的代码都是不良的实践；它可能在计算上是浪费的，更重要的是，它增加了维护或调试代码的难度。在这里不是那么重要，但我想在一个非常简单的上下文中说明这个基本概念。</p><p>在传统的R脚本中，我们使用两种技术来处理重复的代码：要么捕获变量的值，要么用函数捕获计算。不幸的是，这两种方法在这里都不适用，原因将在第13.2节中介绍，我们需要一个新的机制：<code>反应式表达式</code>。</p><p>您可以通过将代码块包装在<code>reactive(&#123;...&#125;)</code>中并将其分配给变量来创建反应式表达式，并且可以通过像调用函数一样来使用反应式表达式。然而，尽管看起来像是在调用函数，但反应式表达式有一个重要的区别：它只在其第一次被调用时运行，然后将其结果缓存直到需要更新。</p><p>我们可以更新我们的server()函数来使用反应式表达式，如下所示。这个应用程序的行为完全相同，但运行更有效率，因为它只需要检索数据集一次，而不是两次。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment"># Create a reactive expression</span></span><br><span class="line">  dataset <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:datasets&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  output<span class="operator">$</span>summary <span class="operator">&lt;-</span> renderPrint<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment"># Use a reactive expression by calling it like a function</span></span><br><span class="line">    summary<span class="punctuation">(</span>dataset<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  output<span class="operator">$</span>table <span class="operator">&lt;-</span> renderTable<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    dataset<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>我们会多次回到响应式编程，但即使只有对输入、输出和反应式表达式的粗略了解，也可以构建非常有用的Shiny应用程序！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在本章中，您创建了一个简单的应用程序-这不是很有趣或很有用，但是您已经看到了使用现有的R知识构建Web应用程序的容易程度。在接下来的两章中，您将学习更多关于用户界面和响应式编程的知识，这是Shiny的两个基本构建块。现在是获取Shiny速查表的绝佳时机。这是一个很好的资源，可以帮助您记住Shiny应用程序的主要组件。</p><p><img src="https://d33wubrfki0l68.cloudfront.net/349cbcca50af85a9214e552296f33f14be37f768/52241/images/basic-app/cheatsheet.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/349cbcca50af85a9214e552296f33f14be37f768/52241/images/basic-app/cheatsheet.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图1.5 Shiny速查表，可从[https://www.rstudio.com/resources/cheatsheets/]获取"></p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p><strong>1.8.1</strong> 创建一个应用程序，通过姓名向用户打招呼。您可能不知道需要使用哪些函数来完成此操作，因此我已经在下方包含了一些代码行。请考虑需要使用哪些行，然后将它们复制并粘贴到Shiny应用程序的适当位置。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tableOutput<span class="punctuation">(</span><span class="string">&quot;mortgage&quot;</span><span class="punctuation">)</span></span><br><span class="line">output<span class="operator">$</span>greeting <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">  paste0<span class="punctuation">(</span><span class="string">&quot;Hello &quot;</span><span class="punctuation">,</span> input<span class="operator">$</span>name<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">numericInput<span class="punctuation">(</span><span class="string">&quot;age&quot;</span><span class="punctuation">,</span> <span class="string">&quot;How old are you?&quot;</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">)</span></span><br><span class="line">textInput<span class="punctuation">(</span><span class="string">&quot;name&quot;</span><span class="punctuation">,</span> <span class="string">&quot;What&#x27;s your name?&quot;</span><span class="punctuation">)</span></span><br><span class="line">textOutput<span class="punctuation">(</span><span class="string">&quot;greeting&quot;</span><span class="punctuation">)</span></span><br><span class="line">output<span class="operator">$</span>histogram <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">  hist<span class="punctuation">(</span>rnorm<span class="punctuation">(</span><span class="number">1000</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>1.8.2</strong> 假设你的朋友想设计一个应用程序，允许用户设置一个介于1和50之间的数字（x），并显示这个数字乘以5的结果。以下是他&#x2F;她的第一次尝试：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;x&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="string">&quot;If x is&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">50</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">30</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;then x times 5 is&quot;</span><span class="punctuation">,</span></span><br><span class="line">  textOutput<span class="punctuation">(</span><span class="string">&quot;product&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>product <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span> </span><br><span class="line">    x <span class="operator">*</span> <span class="number">5</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">shinyApp<span class="punctuation">(</span>ui<span class="punctuation">,</span> server<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>其不幸报错如下，请尝试修复错误：</p><p><img src="https://d33wubrfki0l68.cloudfront.net/cc947455e46b88242e9c3460d3c2291f9f9393c2/093b0/demos/basic-app/ex-x-times-5.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/cc947455e46b88242e9c3460d3c2291f9f9393c2/093b0/demos/basic-app/ex-x-times-5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="error"></p><p><strong>1.8.3</strong> 将前一个练习中的应用程序扩展为允许用户设置乘数y的值，以便应用程序产生x * y的值。最终结果应如下所示：</p><p><img src="https://d33wubrfki0l68.cloudfront.net/6a4de45b5dd90ca5c9e9ba6bf90d4be54d5ac8db/dc9e2/demos/basic-app/ex-x-times-y.png" class="lazyload placeholder" data-srcset="https://d33wubrfki0l68.cloudfront.net/6a4de45b5dd90ca5c9e9ba6bf90d4be54d5ac8db/dc9e2/demos/basic-app/ex-x-times-y.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="xy"></p><p><strong>1.8.4</strong> 以下面的应用程序为例，它为上一练习中描述的最后一个应用程序添加了一些附加功能。有什么新功能？如何使用响应式表达式减少应用程序中的重复代码量。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;x&quot;</span><span class="punctuation">,</span> <span class="string">&quot;If x is&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">50</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">30</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  sliderInput<span class="punctuation">(</span><span class="string">&quot;y&quot;</span><span class="punctuation">,</span> <span class="string">&quot;and y is&quot;</span><span class="punctuation">,</span> <span class="built_in">min</span> <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> <span class="built_in">max</span> <span class="operator">=</span> <span class="number">50</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;then, (x * y) is&quot;</span><span class="punctuation">,</span> textOutput<span class="punctuation">(</span><span class="string">&quot;product&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;and, (x * y) + 5 is&quot;</span><span class="punctuation">,</span> textOutput<span class="punctuation">(</span><span class="string">&quot;product_plus5&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;and (x * y) + 10 is&quot;</span><span class="punctuation">,</span> textOutput<span class="punctuation">(</span><span class="string">&quot;product_plus10&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  output<span class="operator">$</span>product <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span> </span><br><span class="line">    product <span class="operator">&lt;-</span> input<span class="operator">$</span>x <span class="operator">*</span> input<span class="operator">$</span>y</span><br><span class="line">    product</span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>product_plus5 <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span> </span><br><span class="line">    product <span class="operator">&lt;-</span> input<span class="operator">$</span>x <span class="operator">*</span> input<span class="operator">$</span>y</span><br><span class="line">    product <span class="operator">+</span> <span class="number">5</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>product_plus10 <span class="operator">&lt;-</span> renderText<span class="punctuation">(</span><span class="punctuation">&#123;</span> </span><br><span class="line">    product <span class="operator">&lt;-</span> input<span class="operator">$</span>x <span class="operator">*</span> input<span class="operator">$</span>y</span><br><span class="line">    product <span class="operator">+</span> <span class="number">10</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">shinyApp<span class="punctuation">(</span>ui<span class="punctuation">,</span> server<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>1.8.5</strong> 以下应用程序与您在本章前面看到的应用程序非常相似：您从包中选择一个数据集（这次我们使用ggplot2包），应用程序会打印出数据的摘要和图表。它还遵循良好的实践，并利用响应式表达式来避免代码冗余。但是，下面提供的代码存在三个错误。您可以找到并修复它们吗？</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>shiny<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">datasets <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;economics&quot;</span><span class="punctuation">,</span> <span class="string">&quot;faithfuld&quot;</span><span class="punctuation">,</span> <span class="string">&quot;seals&quot;</span><span class="punctuation">)</span></span><br><span class="line">ui <span class="operator">&lt;-</span> fluidPage<span class="punctuation">(</span></span><br><span class="line">  selectInput<span class="punctuation">(</span><span class="string">&quot;dataset&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Dataset&quot;</span><span class="punctuation">,</span> choices <span class="operator">=</span> datasets<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  verbatimTextOutput<span class="punctuation">(</span><span class="string">&quot;summary&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  tableOutput<span class="punctuation">(</span><span class="string">&quot;plot&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">server <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>input<span class="punctuation">,</span> output<span class="punctuation">,</span> session<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  dataset <span class="operator">&lt;-</span> reactive<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    get<span class="punctuation">(</span>input<span class="operator">$</span>dataset<span class="punctuation">,</span> <span class="string">&quot;package:ggplot2&quot;</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>summmry <span class="operator">&lt;-</span> renderPrint<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    summary<span class="punctuation">(</span>dataset<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line">  output<span class="operator">$</span>plot <span class="operator">&lt;-</span> renderPlot<span class="punctuation">(</span><span class="punctuation">&#123;</span></span><br><span class="line">    plot<span class="punctuation">(</span>dataset<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span> res <span class="operator">=</span> <span class="number">96</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">shinyApp<span class="punctuation">(</span>ui<span class="punctuation">,</span> server<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h1 id="练习题答案获取"><a href="#练习题答案获取" class="headerlink" title="练习题答案获取"></a>练习题答案获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“b376”获取习题答案。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shiny从入门到入定——0欢迎入坑</title>
      <link href="/post/4b9c.html"/>
      <url>/post/4b9c.html</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎语"><a href="#欢迎语" class="headerlink" title="欢迎语"></a>欢迎语</h1><p>Shiny是使用R代码创建Web应用程序的框架。它主要是为数据科学家设计的，为此，您可以在不了解HTML，CSS或JavaScript的情况下创建相当复杂的Shiny应用程序。另一方面，Shiny并不限制您只能创建琐碎的或预制的程序：其用户界面组件可以轻松地定制或扩展，其服务器使用反应性编程让您创建任何类型的后端逻辑。Shiny容易上手，当你深入了解它如何工作的时候，你就会更加意识到它是由强大的软件工程原理支撑的通用构建块。</p><p>如今，Shiny的应用领域和行业几乎与R本身一样多。学术界将其作为统计概念的教学工具，激发本科生对编写代码的热情，展示新颖统计方法或模型的引人注目的媒介。大型制药公司将其用于加快药物开发过程中科学家和分析师之间的协作。硅谷科技公司将其用于建立整合高级分析的实时指标仪表板。 本书旨在让您从对Shiny一无所知成为能够编写大型复杂应用程序的专业开发人员，这些应用程序易于维护且性能卓越。您将深入了解Shiny背后的反应式编程模型，以及构建有用的技术工具箱，以解决常见的应用程序挑战。</p><h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><h2 id="Shiny是什么？"><a href="#Shiny是什么？" class="headerlink" title="Shiny是什么？"></a>Shiny是什么？</h2><p>如果你之前从未使用过Shiny，欢迎你！Shiny是一个R包，可以让你轻松地创建丰富的交互式Web应用程序。Shiny允许你将R中的工作通过Web浏览器进行展示，以便任何人都可以使用。Shiny让你轻松创建精美的Web应用程序，让你看起来很酷。</p><p>在过去，对于大多数R用户来说创建Web应用程序很困难，因为：</p><ul><li><p>你需要深入了解HTML、CSS和JavaScript等Web技术。</p></li><li><p>要制作复杂的交互式应用程序，需要仔细分析交互流，以确保当输入变化时，只有相关的输出被更新。</p></li></ul><p>Shiny通过以下方式使R程序员创建Web应用程序变得更容易：</p><ul><li><p>提供一组精心策划的用户界面（UI）函数，用于生成常见任务的HTML、CSS和JavaScript。这意味着，在你想超越Shiny为你提供的基本功能之前，你不需要了解HTML&#x2F;CSS&#x2F;JavaScript的细节。</p></li><li><p>引入一种称为反应式编程的新编程风格，这种风格可以自动跟踪代码的依赖关系。这意味着每当输入发生变化时，Shiny可以自动找出如何进行最小的工作量来更新所有相关的输出。</p></li></ul><p>人们使用Shiny来：</p><ul><li><p>创建跟踪重要高级性能指标的仪表板，同时促进对需要更多调查的指标进行深入挖掘。</p></li><li><p>用交互式应用程序取代数百页的PDF文件，使用户能够跳转到他们关心的确切结果片段。</p></li><li><p>使用信息丰富的可视化和交互式敏感性分析，向非技术受众传达复杂模型。</p></li><li><p>为常见工作流程提供自助式数据分析，用Shiny应用程序取代电子邮件请求，允许人们上传自己的数据并执行标准分析。你可以将复杂的R分析提供给没有编程技能的用户。</p></li><li><p>为教授统计学和数据科学概念创建交互式演示，允许学习者调整输入并观察分析中这些更改的下游影响。</p></li></ul><p>简而言之，Shiny使您能够将您的某些R超级能力传递给任何会使用网络的人。</p><h2 id="谁应该阅读本书？"><a href="#谁应该阅读本书？" class="headerlink" title="谁应该阅读本书？"></a>谁应该阅读本书？</h2><p>本书主要面向以下两个受众群体：</p><ul><li><p>对Shiny感兴趣的R用户，以将他们的分析转化为交互式Web应用程序。要想从本书中获得最大收益，您应该能够熟练使用R进行数据分析，并且至少编写过几个函数。</p></li><li><p>现有的Shiny用户，他们希望提高对Shiny理论知识的了解，以更快更容易地编写更高质量的应用程序。如果您发现自己的应用程序变得越来越庞大并且开始出现管理复杂性的问题，那么您将特别需要本书的帮助。</p></li></ul><h2 id="您将学到什么？"><a href="#您将学到什么？" class="headerlink" title="您将学到什么？"></a>您将学到什么？</h2><p>本书分为四个部分：</p><ul><li><p>在“入门”部分中，您将学习Shiny的基础知识，以便尽快上手。您将了解应用程序结构的基础知识、有用的UI组件和反应式编程的基础。</p></li><li><p>“Shiny实战”部分建立在基础知识之上，帮助您解决常见问题，包括向用户提供反馈、上传和下载数据、使用代码生成UI、减少代码重复和使用Shiny来编程tidyverse。</p></li><li><p>在“掌握反应性”部分中，您将深入了解反应式编程的理论和实践，这是Shiny的基础编程范式。如果您是现有的Shiny用户，那么您将从本章中获得最大的价值，因为它将为您提供坚实理论基础，使您能够创建专门针对您问题的新工具。</p></li><li><p>最后，“最佳实践”部分中，我们将对使您的Shiny应用程序在生产环境中运行良好的实用技术进行调查。您将学习如何将复杂的应用程序分解为函数和模块、如何使用包来组织您的代码、如何测试您的代码以确保它是正确的，以及如何衡量和改进性能。</p></li></ul><h2 id="您不会学到什么？"><a href="#您不会学到什么？" class="headerlink" title="您不会学到什么？"></a>您不会学到什么？</h2><p>本书的重点是制作有效的Shiny应用程序并理解反应性的底层理论。我将尽最大努力展示数据科学、R编程和软件工程的最佳实践，但您需要其他参考资料来掌握这些重要的技能。如果您喜欢本书中的写作风格，您可能会喜欢我的其他关于这些主题的书籍：R for Data Science、Advanced R和R Packages。</p><p>还有一些特定于Shiny的重要主题，本书没有涵盖：</p><ul><li><p>本书只涵盖了内置的用户界面工具包。这并不能提供最吸引人的设计，但很容易学习并能让您走很长一段路。如果您有额外的需求（或者只是对默认值感到厌倦），还有许多其他包可以提供替代的前端。</p></li><li><p>Shiny应用程序的部署。将Shiny“投入生产”超出了本书的范围，因为这因公司而异，并且很多与R无关（大部分挑战往往是文化或组织性的，而不是技术性的）。如果您是Shiny的新手，我建议您从Joe Cheng的2019 rstudio::conf主题演讲开始：<a href="https://rstudio.com/resources/rstudioconf-2019/shiny-in-production-principles-practices-and-tools/">https://rstudio.com/resources/rstudioconf-2019/shiny-in-production-principles-practices-and-tools/</a>。这将为您提供大致情况，讨论将Shiny投入生产需要什么以及如何克服您可能面临的一些挑战。完成此操作后，请参阅<a href="https://rstudio.com/products/connect/">RStudio Connect网站</a>以了解RStudio为您公司内部部署应用程序的产品以及<a href="https://shiny.rstudio.com/articles/#deployment">Shiny 官网</a>了解其他常见的部署场景。</p></li></ul><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><p>在继续之前，请确保您具备本书所需的所有软件：</p><p>R：如果您还没有安装R，那么您可能读错了书；本书假定您对R有一定的了解。如果您想学习如何使用R，我建议阅读我的《<a href="https://r4ds.had.co.nz/">R for Data Science</a>》一书，该书旨在让您轻松上手R。</p><p>RStudio：RStudio是一个免费且开源的R集成开发环境（IDE）。虽然您可以使用任何R环境（包括R GUI和<a href="http://ess.r-project.org/">ESS</a>）来编写和使用Shiny应用程序，但RStudio具有一些专门用于编写、调试和部署Shiny应用程序的不错功能。我们建议您尝试一下，但这不是成功使用Shiny或本书所必需的。您可以从<a href="https://www.rstudio.com/products/rstudio/download">https://www.rstudio.com/products/rstudio/download</a>下载RStudio Desktop。</p><p>R软件包：本书使用了很多R软件包。您可以通过运行以下代码一次性安装它们：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span></span><br><span class="line">  <span class="string">&quot;gapminder&quot;</span><span class="punctuation">,</span> <span class="string">&quot;ggforce&quot;</span><span class="punctuation">,</span> <span class="string">&quot;gh&quot;</span><span class="punctuation">,</span> <span class="string">&quot;globals&quot;</span><span class="punctuation">,</span> <span class="string">&quot;openintro&quot;</span><span class="punctuation">,</span> <span class="string">&quot;profvis&quot;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="string">&quot;RSQLite&quot;</span><span class="punctuation">,</span> <span class="string">&quot;shiny&quot;</span><span class="punctuation">,</span> <span class="string">&quot;shinycssloaders&quot;</span><span class="punctuation">,</span> <span class="string">&quot;shinyFeedback&quot;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="string">&quot;shinythemes&quot;</span><span class="punctuation">,</span> <span class="string">&quot;testthat&quot;</span><span class="punctuation">,</span> <span class="string">&quot;thematic&quot;</span><span class="punctuation">,</span> <span class="string">&quot;tidyverse&quot;</span><span class="punctuation">,</span> <span class="string">&quot;vroom&quot;</span><span class="punctuation">,</span> </span><br><span class="line">  <span class="string">&quot;waiter&quot;</span><span class="punctuation">,</span> <span class="string">&quot;xml2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;zeallot&quot;</span> </span><br><span class="line"><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> Shiny入门系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某某动物与人类基因组的相似性高达x%？——是时候改变这种丈二和尚的说法了</title>
      <link href="/post/8cdc.html"/>
      <url>/post/8cdc.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>网络上随处可见“某物种与人类的基因相似度高达x%”的说法。刚来P公司的时候F博曾问起过此事，初闻摸不着头脑，因为根本就不清楚说的是哪方面的相似性，讨论后一致认为这样的说法不合理。前几天需要制作一个宣传视频，F博又找我谈起了斑马鱼和人类基因的关系，为了严谨，我去查了发表斑马鱼基因组的原文，发现文中所用的描述根本就不是<code>相似性</code>。责任心治好了我的懒病，不如写一篇短文来澄清一下这种说法。</p><h2 id="认识同源性和一致性"><a href="#认识同源性和一致性" class="headerlink" title="认识同源性和一致性"></a>认识同源性和一致性</h2><p>要掰扯清楚所谓的这个相似性，需要搞明白两个概念：<code>同源性</code>和<code>一致性</code>。二者均指的是基因之间的比较。</p><p><strong>同源性</strong>：同源性是指在进化过程中源于同一祖先的分支之间的关系，包括直系同源和旁系同源。直系同源基因指的是在不同物种中来自于共同祖先的基因（就是老祖宗传下来的，给到了不同的物种），而旁系同源基因指的是在同一物种内由于基因复制而产生的同源基因（基因复制现象常有）。同源性只能谈有无，不能说高低，它是<code>质</code>而不是<code>量</code>。举个简单的例子，在做blast序列比对的时候，两条序列比对上了，且coverage比较高，我们就认为二者之间有同源性。我们通常会用一些软件对多个基因组进行同源蛋白家族聚类，说的就是这个同源性。</p><p><strong>一致性</strong>：最常被翻译成相似性，blast比对的出来的<code>identity</code>描述的就是一致性，可以评判两个基因之间的序列相似性。</p><h2 id="为何不能直接说“两个基因组的相似性”？"><a href="#为何不能直接说“两个基因组的相似性”？" class="headerlink" title="为何不能直接说“两个基因组的相似性”？"></a>为何不能直接说“两个基因组的相似性”？</h2><p>不论是同物种还是异种比较，实际上我们比较的是基因，而非把整个染色体拿来比（共线性分析不在此讨论）。对于两个物种而言，部分基因仅存在于物种A中，部分基因仅存在于物种B中。这两部分基因是没有办法做比较的。</p><p>如要比较两个基因组的相似性，我们通常会用平均核苷酸一致性（ANI）或平均氨基酸一致性（AAI）来评估，ANI和AAI的计算方法很简单，可以去网上查。注意，这里只计算两个基因组都含有的基因。实际上不适合于物种跨度大的对象之间的比较，因为它们之间本就没有多少同源基因。</p><p>实际上网传的动物与人基因组的相似性指的是<code>同源基因占所有基因数量的比例</code>。即人类基因组中有x%的基因在某某动物中存在同源基因，至于这些同源基因的ANI是多少需要另外计算。</p><h1 id="几个例子"><a href="#几个例子" class="headerlink" title="几个例子"></a>几个例子</h1><h2 id="小鼠-vs-人"><a href="#小鼠-vs-人" class="headerlink" title="小鼠 vs. 人"></a>小鼠 vs. 人</h2><p><strong>文献</strong>：<a href="https://www.nature.com/articles/nature01262">Initial sequencing and comparative analysis of the mouse genome</a></p><p><strong>杂志</strong>：2002年12月5日，《Nature》</p><ul><li><p>Over 90% of the mouse and human genomes can be partitioned into corresponding regions of conserved synteny, reflecting segments in which the gene order in the most recent common ancestor has been conserved in both species.</p></li><li><p>超过90%的小鼠和人类基因组可以划分为保守共生的对应区域，反映了最近共同祖先的基因顺序在两个物种中都保守的片段。</p></li><li><p>At the nucleotide level, approximately 40% of the human genome can be aligned to the mouse genome. These sequences seem to represent most of the orthologous sequences that remain in both lineages from the common ancestor, with the rest likely to have been deleted in one or both genomes.</p></li><li><p>在核苷酸水平上，大约40%的人类基因组可以比对到小鼠的基因组。这些序列似乎代表了来自共同祖先的两个谱系中保留的大部分直系同源序列，其余的可能在一个或两个基因组中被删除。</p></li><li><p>The proportion of mouse genes with a single identifiable orthologue in the human genome seems to be approximately 80%. The proportion of mouse genes without any homologue currently detectable in the human genome (and vice versa) seems to be less than 1%.</p></li><li><p>大约80%的小鼠基因在人类基因组中具有单个可识别直系同源基因。目前小鼠中可检测到的在人类基因组中没有任何同源物的基因似乎不到1%。</p></li></ul><h2 id="黑猩猩-vs-人"><a href="#黑猩猩-vs-人" class="headerlink" title="黑猩猩 vs. 人"></a>黑猩猩 vs. 人</h2><p><strong>文献</strong>：<a href="https://www.nature.com/articles/nature04072">Initial sequence of the chimpanzee genome and comparison with the human genome</a></p><p><strong>杂志</strong>：2005年9月1日，《Nature》</p><p>Orthologous proteins in human and chimpanzee are extremely similar, with ∼29% being identical and the typical orthologue differing by only two amino acids, one per lineage.<br>人类和黑猩猩的直系同源蛋白非常相似，约29%是相同的，典型的直系同源蛋白仅相差两个氨基酸，每个谱系一个。</p><h2 id="斑马鱼-vs-人"><a href="#斑马鱼-vs-人" class="headerlink" title="斑马鱼 vs. 人"></a>斑马鱼 vs. 人</h2><p><strong>文献</strong>：<a href="https://pubmed.ncbi.nlm.nih.gov/23594743/">The zebrafish reference genome sequence and its relationship to the human genome</a></p><p><strong>杂志</strong>：2013年4月25日，《Nature》</p><p>Detailed automatic and manual annotation provides evidence of more than 26,000 protein-coding genes, the largest gene set of any vertebrate so far sequenced. Comparison to the human reference genome shows that approximately 70% of human genes have at least one obvious zebrafish orthologue.<br>在斑马鱼中注释到了超过26,000个蛋白质编码基因，这是迄今为止（2013年）测序的任何脊椎动物中最大的基因集。与人类参考基因组的比较表明，大约70%的人类基因至少有一个明显的斑马鱼直系同源物。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>从上述几个例子可以看出，原文描述的都是<font color="#FF0000">同源基因数量，而不是所谓的相似性</font>。所以，以后再提及基因组之间的比较，一定要擦亮眼睛，看看彼得到底是什么。</p><h1 id="关注我"><a href="#关注我" class="headerlink" title="关注我"></a>关注我</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table>]]></content>
      
      
      <categories>
          
          <category> 探讨 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 同源家族 </tag>
            
            <tag> 比较基因组学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公众号9岁了——送给粉丝的话</title>
      <link href="/post/85ad.html"/>
      <url>/post/85ad.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>从2014年6月10日发表的第一篇推文到现在，已经走过了9个年头，粉丝也过千了，1150个粉丝看起来少之又少，但对于一个由个人维护的公众号来说，足够了，人不在多，只要它能帮助到几位、几十位有需求的人就足够了。</p><p>本号最初是我读博期间创建的。当时为了做实验室一项科研活动志愿者招募的宣传，需要有一个公众号，而实验室无法以组织身份申请公众号（无公章），因此我以个人身份申请后作为实验室相关活动宣传的窗口。当然，从建号开始到2021年7月，该号只用来发过数条通知，可谓长期处于休眠模式。当然也靠着实验室的宣传，本号积攒了小几百号粉丝。</p><p>我自从2012年底就开始接触生物信息学，那时候学生信多靠自学（当然也少不了师兄的指点），经常需要在网络上查资料。各大博主分享的笔记、方法等对于生信菜鸟来说犹如一座灯塔。早年学生信的应该都知道“铁汉1990”的微博博客吧。那个时候我经常在网上找“大佬”解惑，如今，自己也称为了别人口中的“大佬”。</p><p>逐渐成长之后，也想着去帮助更多的人。事实上，我也曾和水哥一起在武汉和南昌办过线下公益培训班，收到的反响不错，有不少人因此入门了生信，并且后续也在从事相关研究。然而，线下培训的受众毕竟是少数，后又遭遇疫情，线下培训更加困难。因此，我开始转战线上做一些原创分享，包括简书、优酷等各大平台都有投稿。但这些平台存在严格的审核机制，明明是绿色无害的内容，却总会被莫名其妙的屏蔽掉。</p><p>2018年，我开始建个人网站，终于可以自由分享了。当然，网站需要被各大搜索引擎收录是一个漫长和复杂（SEO优化）的过程。换言之，如果没有被收录，网站文章在百度里是搜索不到的，自然无法被人看到。当然，网站现在已经被收录了，百度“了尘兰若的小坑”即可。</p><p>2021年底，我发布声明，将微信公众号与原实验室脱钩（每个人只能申请一个公众号），开始正式发布原创文章。起初，只是在公众号中发布文章，并在自建的QQ群和微信群（群名：生信之巅）中分享，其弊端是粉丝只是小范围的人群。后来想到了通过个人网站引流，效果还不错。在此过程中，粉丝群体得到了洗牌，即初代粉丝大多取关，随之而来的是更加关注生信的粉丝的加入，至此，剩余的千余人粉丝基本上是内容导向的。</p><h1 id="粉丝画像"><a href="#粉丝画像" class="headerlink" title="粉丝画像"></a>粉丝画像</h1><p>那么，是时候梳理一下粉丝画像了。</p><h2 id="粉丝地理分布"><a href="#粉丝地理分布" class="headerlink" title="粉丝地理分布"></a>粉丝地理分布</h2><p>粉丝数排名前7的省市分别是：湖北、广东、北京、江苏、山东、上海、浙江。这一定程度上反映出在这些省份从事与我类似生信研究领域的同行比较多。湖北和广东是我待的比较久的城市，粉丝数也最多，不清楚是否是巧合。有意思的是京城的粉丝数竟然排第三。第四到第七可谓都是东部沿海城市。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="粉丝地理分布"></p><h2 id="粉丝年龄分布"><a href="#粉丝年龄分布" class="headerlink" title="粉丝年龄分布"></a>粉丝年龄分布</h2><p>总体来说年轻粉丝（&lt;&#x3D;35岁）比较多，尤其是18-25岁的群体，表明越来越多的年轻人正在或者已经踏入生信领域，是一股不可忽视的新生力量。不可思议的是有2.96%的大龄粉丝，生信在国内起步相对较晚，对于46-60岁这部分的粉丝群体，生信应该是一个新事物。还记得当年在南昌培训的时候，一位老教师（估计60岁左右）对着电脑在很认真的操作，并不断地提出问题，这种精神非常令人钦佩。其实，他大可不必，完全可以让学生来学习就好了。他真的是用实践做到了“活到老，学到老”。向以这位老教师为代表的大龄粉丝致敬。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="粉丝年龄分布"></p><h2 id="粉丝性别分布"><a href="#粉丝性别分布" class="headerlink" title="粉丝性别分布"></a>粉丝性别分布</h2><p>粉丝基本上处于男女平衡，男性略多（高11.21%）。表明推文内容在性别上的无偏性。当然，还存在0.72%的没有站队的粉丝。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_3.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="粉丝性别分布"></p><h2 id="粉丝语言分布"><a href="#粉丝语言分布" class="headerlink" title="粉丝语言分布"></a>粉丝语言分布</h2><p>不出意外，简体中文占比最高。还有使用繁体中文的同胞粉。我很好奇1.79%的英文粉丝是如何看推文内容的，也会用软件translate一下吗？</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_4.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_4.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="粉丝语言分布"></p><h2 id="终端分布"><a href="#终端分布" class="headerlink" title="终端分布"></a>终端分布</h2><p>顾名思义，就是粉丝用的哪种手机系统。安卓系统粉丝数最多，这应该也与安卓的市场份额大有关吧，当然用苹果的也不在少数，就是不知道微信公众平台什么时候能把咱们的鸿蒙系统也统计进来。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_5.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_5.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="终端分布"></p><h2 id="常读用户数变化"><a href="#常读用户数变化" class="headerlink" title="常读用户数变化"></a>常读用户数变化</h2><p>虽然有千余号粉丝，但常读人数却不多，这可能与我少更新有关。好在从近几个月的趋势来看，常读用户数在稳步增多，最近的涨粉速度也还可以。不过，还是那句话，对于一个个人公众号来说，能帮助到那么几个人也就够了，毕竟我不靠这个盈利。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_6.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85ad_6.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="常读用户数变化"></p><h1 id="关于盈利"><a href="#关于盈利" class="headerlink" title="关于盈利"></a>关于盈利</h1><p>穷的时候，也不是没想着通过公众号来盈利。我没有深入研究过。据我所知，大概有几种盈利方式：</p><p><strong>（1）内容付费</strong>，即推文的前部分可以免费阅读，后面的精彩部分需要付费阅读。在知识付费的时代，这是合情合理的，无可厚非。我支持这种方式，但是我没有采用。</p><p><strong>（2）接入广告</strong>，也就是在内容中间插入一些广告，或者带货链接。这种方式不影响读者阅读内容，我目前采用的就是该方式。每个月可以赚到两三毛钱。</p><p><strong>（3）合作卖课</strong>，也有一些人找到我要合作，即通过我来卖他们的生信培训课，提成还是挺可观的。但是我无法掌握其课程质量如何（没有时间去检查），因此，目前也是没有接类似的活。</p><p><strong>（4）粉丝打赏</strong>，这是比较神奇的事情，不是钱的问题，是来自于粉丝的肯定。2021年12月女朋友赞赏了5元；2022年4月同校（HZAU）的张胜利赞赏10元；2023年6月网名“遠空”的粉丝赞赏5元。</p><p><strong>总之</strong>，本号的定位就不是为了盈利，单纯的分享罢了。想挣大钱，还是要认认真真学习，踏踏实实工作。</p><h1 id="给新手的建议"><a href="#给新手的建议" class="headerlink" title="给新手的建议"></a>给新手的建议</h1><p><strong>（0） 自己领域的生物学背景要扎实</strong><br>生信一定离不开生物学，所以做生信要做到博学，最起码将自己领域的生物学学到位，不然，数据摆到面前也看不懂。</p><p><strong>（1）基本功要扎实</strong><br>生信躲不开学习LINUX系统、编程（Perl&#x2F;Python二选一）、R语言，不要迷恋各种云平台，真正想做前沿的东西，还是要靠自己。</p><p><strong>（2）要有耐心</strong></p><p>大多数软件都有官方的说明书，要扎下心去阅读，只有在自己啃不透的情况下再去问大佬，如对某些参数把握不准的时候。当然，有些软件开发者确实很懒，不写文档。</p><p><strong>（3）善用网络教程</strong></p><p>现在网上教程有很多，多去查一下资料，跟着教程进行练习，要认真仔细地跟着教程来，经常是一个空格或者符号的错误就会导致结果重复不出来。这种小错误往往是新手最容易犯的。</p><p><strong>（4）提问的技巧</strong></p><p>我常年混迹于各种生信群里，发现很多人提问题，却很少有人回答。问题的关键在于提问者没有描述好问题，即群友们看不懂你问的是什么。大家都很忙，没有时间和你交流把问题本身搞清楚。所以提问前自己要把问题描述清楚，附上自己的运行代码以及报错信息，最好是附上示例数据集。</p><p><strong>（5）要有信心</strong></p><p>前两天有粉丝在和我交流的过程中一直无法解决遇到的问题，进而说自己愚钝。我是不赞成的，在面对一个新领域的时候，我们都会感到束手无策。我相信都读到研究生阶段了，没有一个不聪明的。问题的关键在于不要怕出错，也不要怕在解决问题的过程中花费了多少时间，每解决一个问题都在促进我们的成长。所以，打起精神，持续钻研，终有一天再回首，哪些坎坎坷坷也会成为人生靓丽的风景。</p><p><strong>（6）保持学习</strong></p><p>在技术爆发的时代，一天不学习，感觉就要被时代抛弃。这一点在生信领域尤其明显。各种组学层出不穷，新技术、新手段、新方法、新算法、新软件让人眼花缭乱。虽然不断学习看起来很辛苦，但这也暗示着生物信息依然火爆，生物信息与大数据及AI的碰撞在未来的数年乃至十年将会迸发出耀眼的火花。</p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注“生信之巅”公众号和小程序。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table>]]></content>
      
      
      <categories>
          
          <category> 闲谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公众号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>走向多标签分类：机器学习在微生物组研究中的下一步</title>
      <link href="/post/801d.html"/>
      <url>/post/801d.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>微生物组</code>分析描述了复杂微生物群落的动态特征，从而为研究微生物图谱与人类疾病[1–3]之间的关系提供了机会。</p><p><code>机器学习</code>（ML）算法揭示了不同状态下微生物组特征的独特模式，从而促进了基于微生物组的疾病检测和治疗[8–10]。作为机器学习的一项重要技术，监督分类已被广泛应用于<code>炎症性肠病（IBD）</code>[11,12]、<code>癌症</code>[13,14]、<code>糖尿病</code>[15]、<code>牙龈炎</code>[16,17]等疾病的预测。</p><p>通过使用来自患者及其健康对照的分类学或功能轮廓作为训练数据来构建分类器和模型，ML分类器可据此推断新样本的状态（健康&#x2F;疾病）。此外，一些ML方法，如<font color=#FF0000>支持向量机（SVM）[20]和随机森林（RF）[21]，可以进一步衡量模型训练过程中每个特征的重要性，这可以识别对分类[2,22,23]有重要贡献的微生物生物标志物。</font></p><p><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_1.PNG" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_1.PNG" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图1 单标签分类与多标签分类的比较。 a.单标签分类要求一个样本有一个标签（状态）。 b.多标签分类可以检测到每个样本的多个状态。"></p><p>为了清楚地了解微生物和健康状态之间的相互作用，以前的研究队列总是设计得很好，其中<u>一个样本只有一个描述其健康状态的精确标签</u>，例如一个样本要么是健康，要么与一种确定的疾病相关（图1a）。然而，这种策略<u>在实际和临床应用中存在其局限性，因为一个患者可能有多个标签（多种疾病，也表示为并发症或共病；图1b）</u>。在这种情况下，常规的分类器不能很好地进行预测，这可能会受到多种疾病的协同作用和相互作用的显著干扰。更重要的是，由于预测结果中只出现单一标签（例如特定疾病），<font color=#FF0000>单标签ML模型[2,22]总是遗漏或忽略共病或并发症</font>。</p><p>这项工作总结了微生物组研究的典型和经典的机器学习方法，并利用美国肠道项目数据集证明了它们在疾病识别方面的局限性。然后，我们希望利用一系列有前途的<code>多标签分类</code>[25–28]策略来进一步解决上述问题。最后，提出并讨论了将多标签分类应用于微生物识别疾病检测的一些关键技术问题。</p><h2 id="微生物组研究中的单标签分类"><a href="#微生物组研究中的单标签分类" class="headerlink" title="微生物组研究中的单标签分类"></a>微生物组研究中的单标签分类</h2><p>在这里，我们回顾了常用的单标签分类方法，包括逻辑回归、支持向量机、k最近邻、随机森林、梯度增强树和神经网络（表1）。</p><p><strong>表 1</strong> 广泛用于基于微生物组疾病检测的机器学习方法特征</p><table><thead><tr><th align="left">ML approach</th><th align="left">Feature importance measurement</th><th align="left">Interpretability</th><th align="left">Package and applicable programming language</th></tr></thead><tbody><tr><td align="left">LR</td><td align="left">Y</td><td align="left">Excellent</td><td align="left">Scikit-learn (Python)[33]</td></tr><tr><td align="left">SVM</td><td align="left">Y</td><td align="left">Good</td><td align="left">Scikit-learn (Python), LibSVM(Python&#x2F;R&#x2F;Java)[34]</td></tr><tr><td align="left">k-NN</td><td align="left">N</td><td align="left">Weak</td><td align="left">Scikit-learn (Python)</td></tr><tr><td align="left">RF</td><td align="left">Y</td><td align="left">Good</td><td align="left">Scikit-learn (Python) randomForest (R) [35]</td></tr><tr><td align="left">GBDT</td><td align="left">Y</td><td align="left">Good</td><td align="left">Xgboost (Python&#x2F;R&#x2F;C++) [36,37] Lightgbm (Python&#x2F;R&#x2F;C++) [38] Catboost Python&#x2F;R&#x2F;C++) [39]</td></tr><tr><td align="left">Neural Networks</td><td align="left">N</td><td align="left">Weak</td><td align="left">Tensorflow (Python&#x2F;Java) [40] PyTorch (Python) [41] Keras (Python) [42]</td></tr></tbody></table><p> <code>逻辑回归</code>（Logistic regression，LR）是一种典型的二元分类线性模型，它利用逻辑函数对二元变量建模[43]。基本上，它计算了一个特定事件发生的概率，例如，一个微生物组样本是健康的或疾病的。由于其在效率和可解释性方面的优势，它通常被用作基于微生物识别的疾病检测的基准[9,44]，尽管其性能不如其他方法。</p><p> 与LR不同，<code>支持向量机</code>（SVM）捕获微生物组谱和宿主状态的<code>非线性关联</code>，以最大限度地提高健康和疾病样本之间的边际[20]，这获得了比LR更好的性能。值得注意的是，LR和SVM作为二值分类器，<strong>也可以通过为每种疾病分配一个各自的分类器扩展为多类别分类器</strong>。</p><p><code>最近邻</code>（k-NN）直接用它的k个最近邻来标记一个新的样本[45]。k-NN的一个关键问题是如何通过基于几何的距离度量，如Bray-Curtis、JSD、JCCARD[47]或基于系统发育的算法，如UniFrac [48]或Meta-Storms[49]，适当地测量微生物组之间的邻域（neighborship）[46]。</p><p>最近，一种基于搜索的策略采用微生物组搜索引擎（MSE）[50]，通过离群新颖性评分将不健康的微生物组与健康的微生物组分离，然后通过基于系统发育距离的k-NN识别其详细的疾病类型，在灵敏度、鲁棒性和速度方面优于传统的ML实现[51]。</p><p>为了进一步提高微生物组疾病检测的性能，通过集成单个ML方法，开发了集成分类方法[52,53]。<code>随机森林</code>（RF）作为一个集成分类器，通过在训练数据中随机选择样本和特征，构建多个决策树，然后通过投票组合新样本的预测状态[2,8,9,21]。与RF不同的是，<code>梯度增强决策树</code>（GBDT）为每个微生物组样本赋权重，以阶段方式构建树状模型，然后迭代更新参数以最小化估计误差[56]。<u>RF和GBDT不仅在精度上优于单个ML方法，而且还可以评价每种微生物特征对分类的贡献[22,23]</u>。</p><p>在传统的ML中，从输入数据中提取特征是准确性和敏感性的基础，例如，选择在疾病发展过程中作为签名的生物标志物物种，而这种过程总是需要人工努力[57]。<code>深度学习</code><u>自动进行特征提取，并以端到端的方式训练深度神经网络[58]，这可以缓解微生物群落的复杂性所带来的高维性</u>。神经网络（如深度神经网络（DNNs）[59]、递归神经网络（RNNs）[60]、卷积神经网络（CNNs）[61]等）已成功地从图像分析过渡到微生物组研究。在计算机视觉中，CNNs对相邻像素进行卷积运算，生成新的变量。然而，微生物之间的邻居关系在一个群落中并没有得到明确的定义。因此，<font color=#FF0000>Sharma等人[62]开发了一种基于CNNs的新方法，通过分层方法将OTUs分组到门簇中（phylum clusters）。Lo等人[63]还以负二项分布对微生物组谱建模，并解决了CNNs中的数据增强技术的过拟合问题。</font></p><h2 id="在真实微生物组数据集上的单标签分类的局限性"><a href="#在真实微生物组数据集上的单标签分类的局限性" class="headerlink" title="在真实微生物组数据集上的单标签分类的局限性"></a>在真实微生物组数据集上的单标签分类的局限性</h2><p>为了衡量单标签分类器在处理具有多个标签的微生物组中的可行性，我们使用美国肠道项目[24]队列的一个子集进行了疾病检测（详见材料和方法）。从3433个健康宿主和10826例患者中收集了16S rRNA扩增子微生物组，记录了5种靶疾病，包括肠易激综合征（IBS）、自身免疫性、肺部疾病、偏头痛和甲状腺（表2）。对于每个目标疾病，微生物组样本被分为两组： i)<code>单一疾病组（SD）</code>，包含对照和仅与该目标疾病有关的样本；ii)<code>多疾病组（MD）</code>，包含对照和与该目标疾病和其他共病的样本。每组从健康样本中随机抽取对照，健康样本数等于疾病样本。我们实现了RF和GBDT的两个集成单标签分类器，分别使用每组的OTU水平谱来检测目标疾病。通过使用5倍交叉验证（详细的配置和参数见材料和方法）的AUC（受试者工作特征曲线下的面积）来评估性能。</p><p><strong>表 2</strong> 目标疾病样本总览</p><table><thead><tr><th align="left">Target disease</th><th align="left">Total number of disease samples</th><th align="left">Number of single-disease samples</th><th align="left">Number of comorbidities samples</th></tr></thead><tbody><tr><td align="left">IBS</td><td align="left">2351</td><td align="left">1064</td><td align="left">1287</td></tr><tr><td align="left">Autoimmune</td><td align="left">2301</td><td align="left">487</td><td align="left">1814</td></tr><tr><td align="left">Lung disease</td><td align="left">2251</td><td align="left">1248</td><td align="left">1003</td></tr><tr><td align="left">Migraine</td><td align="left">2109</td><td align="left">938</td><td align="left">1171</td></tr><tr><td align="left">Thyroid</td><td align="left">1814</td><td align="left">559</td><td align="left">1255</td></tr><tr><td align="left"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_2.PNG" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_2.PNG" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图2 通过无分布独立性试验，从SD和MD中选择自身免疫性疾病的微生物生物标志物"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><p>结果如表3所示，<u>在检测单个疾病组中检测目标疾病时，SD训练的分类器优于MD</u>，这主要是由于消除了共病微生物群模式的额外变化。另一方面，<u>MD训练的分类器在多疾病样本上优于SD训练</u>。然后，我们进一步解剖了SD和MD之间的微生物生物标记物和ML模型，得到了这些结果。对自身免疫样本的无分布检验显示[64,65]，从SD中选择的生物标志物与MD共享（图2；在属水平上进行了分类注释；详见材料与方法）。然而，由GBDT二值分类器构建的决策树与由MD构建的决策树有很大的不同(图3；例如，MD树中节点之间的结构和相互作用更加复杂），暗示了单一疾病与多种疾病之间的微生物相互作用的变化。因此，<font color=#FF0000>在实际情况下，ML模型的设计和构建应考虑共病对微生物群的影响。值得注意的是，虽然目标疾病检测的精度可以得到优化，但这两种单标签ML分类器都不能检测出目标疾病以外的共病或并发症。</font></p><p><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_t3.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_t3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="表3 单标签分类器对目标疾病检测的检测结果"><br><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_3.PNG" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_3.PNG" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图3 由SD （A）构建的GBDT二值分类器的决策树比由MD （B）构建的更为复杂在每个树中，内部节点代表属级上的分类群，叶节点代表标签，分支权重代表决策的标准"></p><h2 id="多标签分类：为微生物组的机器学习向前迈进了一步"><a href="#多标签分类：为微生物组的机器学习向前迈进了一步" class="headerlink" title="多标签分类：为微生物组的机器学习向前迈进了一步"></a>多标签分类：为微生物组的机器学习向前迈进了一步</h2><p>与单标签ML分类器（图1a)不同，多标签分类允许每个样本具有多个状态（标签；图1b)。对于一个样本（患者），将多标签分类引入基于微生物组的疾病检测中，自然会可能有多种标签（共病或并发症）。本文介绍了两种多标签分类方案：<code>算法自适应</code>（algorithm adaption）和<code>问题变换</code>（problem transformation）[27]。</p><p><code>算法自适应</code>通过直接修改单标签分类器来处理多标签数据。例如，ML-kNN（多标签k-最近邻）结合了k-NN和贝叶斯规则来确定一个新的样本的标签集[66]。另一个例子是一个名为C4.5的决策树算法 [67]，它使叶子代表一组标签，并修改类似熵的函数[68]，用于多标签分类。近年来，一种基于多项数据非参数预测推理模型的新的ML-DT（多标签决策树）算法，利用精确概率[69]实现了鲁棒性能。</p><p><code>问题转换</code>通过二进制相关性、校准的标签排序或类链（ calibrated label ranking or class chains），将多标签问题转换为单标签问题。<code>二元相关性</code>基于一种一对一的策略，该策略将m个（m &gt; 1）标签转换为单独的m个二值分类问题，并通过二值分类器确定每个标签。虽然它提供了一个简单而有效的解决方案，<u>但二元相关性忽略了标签之间可能的相关性，从而导致错误的结果[70]</u>。为了解决该问题，<code>校准标签排序</code>通过考虑成对标签的相关性，构造m*(m-1)&#x2F;2二进制分类，将m个标签分类转换为标签排序问题[71]。因此，每个标签都由m-1个二值分类器进行投票表决。此外，还可以利用m-1二分类器的投票概率作为特征，训练新的二分类器，进一步提高性能。此外，一个标签可能依赖于其他一些标签，例如，心血管疾病的诊断和治疗与IBD [72]的标签有关。在这种情况下，将依赖标签作为二值分类器的特征的类链将是一个理想的选择[73]。</p><h2 id="基于微生物组的疾病检测的多标签分类的关键技术问题"><a href="#基于微生物组的疾病检测的多标签分类的关键技术问题" class="headerlink" title="基于微生物组的疾病检测的多标签分类的关键技术问题"></a>基于微生物组的疾病检测的多标签分类的关键技术问题</h2><p><font color=#FF0000>由于其数据复杂性高、数据异质性和微生物-疾病相互作用，完善的多标签分类方法在处理微生物组数据集方面也存在不足</font>。在过去的几年中，已经研究和报道了数百种微生物组-疾病之间的相互作用，例如，<u>Disbiome数据库[74]收集了372种疾病和1622种微生物之间的10,934种经实验验证的微生物-疾病关联</u>。一个普遍的挑战是，如此多的标签可能会导致意想不到的高计算成本（图4a）。例如，为了训练一个100标签分类模型（一个样本含有100种疾病中的多种疾病），二值相关方法（binary relevance approach）需要100个二值分类器，校准标签排名（calibrated label ranking）需要多达4950个分类器。最近，<code>嵌入方法</code>，如SLEEC（Sparse Local Embeddings for Extreme Classification，稀疏局部嵌入的极端分类）算法[75]被提出以应对多标签挑战。它将标签投影到低维空间向量中，为每个标签构建一个回归，并通过压缩技术对预测的标签进行解码。为了拟合大规模的数据集，SLEEC在投影步骤之前使用无监督的k-means算法将训练数据划分为几个更小的子集。但是，由于忽略了标签信息，预分割可能会影响后续投影的质量。因此，通过使用<code>图嵌入算法</code>（graph embedding algorithm）[76]和一种<code>自适应特征聚合技术</code>，如 DEFRAG（Daptive Extreme FeatuRe AGglomeration，适应的极端特征）[77]，结合特征向量和标签信息，进一步改进了嵌入方法。</p><p><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_4.PNG" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/801d_4.PNG" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="图4 多标签分类中的三个关键技术问题。 a.在训练数据中使用太多的标签会导致意想不到的高计算成本。 b.缺少的标签会降低检测的灵敏度。 c.模糊的标签会引入假阳性结果"></p><p><font color=#FF0000>标签缺失是多标签分类化中的另一个常见问题（图4b）</font>。在美国肠道项目队列中，一些多疾病样本可能因临床检查不充分而被错误地归入SD，使元数据中产生某些疾病的“阴性”或“未提供”记录。这种标签缺失也可能发生在多标签分类结果中，因为在同时检测多个状态的结果时灵敏度较低。本文介绍了<u><code>基于图</code>（ graph-based）的方法和<code>低秩</code>（ low-rank）方法两种替代方法来提高灵敏度</u>。基于图的方法估计来自标签特定图（ label-specific graph）[78]或标签向量（label vectors）[79]的综合标签。低秩方法将多标签学习定义为一个包含边信息[80]的矩阵补全问题，可以通过经验风险最小化框架（empirical risk minimization framework）[81]进行估计，以避免标签缺失。</p><p><font color=#FF0000>在现实世界中，疾病元数据可能是基于宿主的个人经验或其他不可靠的结论，而没有得到临床诊断或来自医疗专业人员的确认。训练数据中这种不明确的标签（图4c）可能会引入假阳性结果</font>。部分多标签方法可以消除由模糊或错误的标签造成的错误，主要是通过<u>保持每个候选标签[82]的置信度值</u>。根据置信值的计算方法，部分多标签方法一般分为<code>两阶段</code>（two-stage）方法和<code>端到端学习</code>（end-to-end learning）方法。<code>两阶段方法</code>通过迭代标签传播（propagation）来估计每个样本的候选标签的置信度，然后使用具有高置信度[83]的可信标签来训练多标签分类器。然而，<u>由于消除歧义不足，这个简单的概念很容易出错</u>。与分离置信度估计（ separating confidence estimation）和分类器构建分为两个阶段不同，<code>端到端方法</code><u>将置信度值视为模型训练函数[82,84,85]的权值，并通过将两个阶段合并成一个统一的框架来增强标签的歧义消除</u>。</p><h2 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h2><p><font color=#FF0000>ML分类器还没有有效地考虑到微生物之间的相互作用</font>。尽管来自单一疾病和共病的生物标志物分数相似（图1），但它们在GBDT决策树中的层次是高度多样化的（图2），可能是由微生物之间的不同相互作用指导的。近年来，微生物在各种生态系统中的共现或相关性得到了广泛的研究[86-89]，从生物学的角度调查了微生物与微生物之间的相互作用。然而，<u>如何有效地将这些生物信息整合到ML分类器中仍然是[22,90]进一步工作的一个开放问题</u>。</p><p><font color=#FF0000>少有研究致力于在微生物组研究中关注ML模型的可解释性，但其对解释疾病预测结果有意义</font>。在单标签分类方法中，逻辑回归具有最好的可解释性和最低的性能，而NNs则相反。虽然RF和GBDT也输出特征的重要性，但计算过于粗糙，无法进行进一步的因果解释。先进的统计方法，如<u>单指数模型（single index model），它将建模的灵活性和（线性）系数[91,92]的可解释性相结合，可能为平衡可解释性和性能提供了一个潜在的解决方案</u>。同时，宿主在年龄、性别、饮食、生活方式等因素上的异质性[93]，以及微生物组数据的稀疏性、方差和高维（high-dimensionality）[94]也会混淆疾病的检测和解释，这在实验设计和ML分析中应进行评估和考虑。</p><h2 id="材料与方法"><a href="#材料与方法" class="headerlink" title="材料与方法"></a>材料与方法</h2><h3 id="实验设计和数据集"><a href="#实验设计和数据集" class="headerlink" title="实验设计和数据集"></a>实验设计和数据集</h3><p>美国肠道项目队列包含29,344名受试者，其中包括15,799名健康对照者和13,545名患者。每个受试者的疾病状态均来自基于问卷的原始元数据，该元数据包括饮食、健康状况和卫生等信息。从Qiita [95]下载肠道微生物群的16S rRNA OTU profiles，使用GreenGenes13-8数据库[96]使用Parallel-META 3[31]获取属水平的分类注释。通过序列计数直接计算OTU和属水平上的相对丰度，然后用PICRUSt 2 [97]的16S rRNA基因拷贝数进行归一化。我们还删除了没有微生物组样本的受试者。</p><p>如果受试者在元数据中被记录为“由医疗专业人员（医生、医生助理）诊断”为特定的疾病，则被视为患者；如果将所有疾病标记为“我没有这种情况”，则被视为健康。最后，我们收集了3433份健康样本和10,826例患者的数据。对于每个目标疾病，选择微生物组样本并分为两组：单一疾病组（SD）包含对照和仅与目标疾病有关的样本；多疾病组（MD）包含对照和与目标疾病和其他共病有关的样本。每组从3433个健康样本中随机抽取对照样本，样本数与疾病样本相等。</p><p>对于每个目标疾病，我们进行了两个实验。首先，我们评估了ML分类器在区分疾病样本和健康对照组方面的效果。采用SD组和MD组构建分类器模型。具体来说，通过SD组训练的模型检测SD样本时采用5倍交叉验证（其中随机选择80%的样本作为模型构建的训练集，其余20%作为验证的测试集）。同时，在每5次折叠中，我们还从MD组中随机选择相同数量的样本，在相同的SD测试集中训练另一个模型进行目标疾病检测。记录SD-训练模型和MD-训练模型的AUCs进行比较。其次，我们评估了ML分类器在检测MD组中的作用，并在之前的过程中分别由SD组和MD组构建模型。</p><h3 id="机器学习方法和生物标志物的选择"><a href="#机器学习方法和生物标志物的选择" class="headerlink" title="机器学习方法和生物标志物的选择"></a>机器学习方法和生物标志物的选择</h3><p>采用<code>随机森林</code>和<code>GBDT</code>两种流行的集成单标签分类方法构建单标签分类器。随机森林是由Python中的“scikit-learn”包实现的，“树数”设置为500，而其他参数作为默认配置。GBDT是由Python中的“lightgbm”包实现的，参数为“learning rate”&#x3D; 0.02，“maximum tree depth”&#x3D;6，“number of boosted<br>trees”&#x3D; 1000，“maximum tree leaves”&#x3D; 64，“subsample ratio”&#x3D;0.8和“colsample_bytree”&#x3D;0.8。生物标记物分析采用对疾病和对照样本之间的基因水平丰度进行 distribution-free test（python中的“mvtpy”包），选择p值&lt;0.01的检验统计量Top 10 taxa作为生物标记物。</p><h3 id="代码和数据可用性"><a href="#代码和数据可用性" class="headerlink" title="代码和数据可用性"></a>代码和数据可用性</h3><p>本工作中的所有数据集和代码都可以在<a href="https://github.com/BruceQD/Microbiome-based-disease-detection">https:&#x2F;&#x2F; github.com&#x2F;BruceQD&#x2F;Microbiome-based-disease-detection</a>上找到，所有其他相关资料均可根据要求提供。</p><h1 id="重要参考文献"><a href="#重要参考文献" class="headerlink" title="重要参考文献"></a>重要参考文献</h1><ul><li>[1] Knight R et al. Best practices for analysing microbiomes. Nat Rev Microbiol 2018;16(7):410–22.</li><li>[2] LaPierre N et al. MetaPheno: a critical evaluation of deep learning and machine learning in metagenome-based disease prediction. Methods 2019;166:74–82.</li><li>[3] Su X et al. Method development for cross-study microbiome data mining: challenges and opportunities. Computational and Structural. Biotechnol J 2020</li><li>[8] Namkung J. Machine learning methods for microbiome studies. J Microbiol 2020;58(3):206–16.</li><li>[9] Topçuog˘lu BD et al. A framework for effective application of machine learning to microbiome-based classification problems. Mbio 2020;11(3).</li><li>[10] Cammarota G et al. Gut microbiome, big data and machine learning to promote precision medicine for cancer. Nat Rev Gastroenterol Hepatol 2020.</li><li>[11] Gevers D et al. The treatment-naive microbiome in new-onset Crohn’s disease. Cell Host Microbe 2014;15(3):382–92.</li><li>[12] Halfvarson J et al. Dynamics of the human gut microbiome in inflammatory bowel disease. Nat Microbiol 2017;2:17004.</li><li>[13] Wirbel J et al. Meta-analysis of fecal metagenomes reveals global microbial signatures that are specific for colorectal cancer. Nat Med 2019;25(4):679.</li><li>[14] Poore GD et al. Microbiome analyses of blood and tissues suggest cancer diagnostic approach. Nature 2020;579(7800):567–74.</li><li>[15] Bajaj JS et al. Linkage of gut microbiome with cognition in hepatic encephalopathy. Am J Physiol Gastrointest Liver Physiol 2012;302(1): G168–75.</li><li>[16] Huang S et al. Predictive modeling of gingivitis severity and susceptibility via oral microbiota. ISME J 2014;8(9):1768–80.</li><li>[17] Huang S et al. Longitudinal multi-omics and microbiome meta-analysis identify an asymptomatic gingival state that links gingivitis, periodontitis, and aging. mBio 2021;12(2).</li><li>[25] Liu, W., et al., The Emerging Trends of Multi-Label Learning. arXiv preprint arXiv:2011.11197; 2020.</li><li>[26] Tsoumakas G, Katakis I. Multi-label classification: an overview. Int J Data Warehous Min (IJDWM) 2007;3(3):1–13.</li><li>[27] Zhang M-L, Zhou Z-H. A review on multi-label learning algorithms. IEEE Trans Knowl Data Eng 2013;26(8):1819–37.</li><li>[28] Gibaja E, Ventura S. Multi-label learning: a review of the state of the art and ongoing research. Wiley Interdiscip Rev: Data Min Knowledge Disc 2014;4(6):411–44.</li><li>[33] Pedregosa F et al. Scikit-learn: machine learning in Python. J Mach Learn Res 2011;12:2825–30.</li><li>[34] Chang C-C, Lin C-J. LIBSVM: a library for support vector machines. ACM Trans Intell Syst Technol (TIST) 2011;2(3):1–27.</li><li>[35] RColorBrewer S, Liaw MA. Package ‘randomForest’. Berkeley, CA, USA: University of California, Berkeley; 2018.</li><li>[36] Chen T, Guestrin C. Xgboost: A scalable tree boosting system. Proceedings of the 22nd acm sigkdd international conference on knowledge discovery and data mining, 2016.</li><li>[37] Chen, T., et al., Xgboost: extreme gradient boosting. R package version 0.4-2, 2015: p. 1–4.</li><li>[38] Ke G, et al. Lightgbm: A highly efficient gradient boosting decision tree. in Advances in neural information processing systems; 2017.</li><li>[39] Prokhorenkova L, et al. CatBoost: unbiased boosting with categorical features. in Advances in neural information processing systems. 2018.</li><li>[40] Abadi M, et al. Tensorflow: A system for large-scale machine learning. in 12th {USENIX} symposium on operating systems design and implementation ({OSDI} 16); 2016.</li><li>[41] Paszke A, et al., Pytorch: An imperative style, high-performance deep learning library. arXiv preprint arXiv:1912.01703, 2019.</li><li>[42] Ketkar N. Introduction to keras. In: Deep learning with Python. Springer; 2017. p. 97–111.</li><li>[50] Jing G et al. Microbiome search engine 2: a Platform for taxonomic and functional search of global microbiomes on the whole-microbiome level. mSystems 2021;6(1).</li><li>[51] Su X et al. Multiple-disease detection and classification across cohorts via microbiome search. Msystems 2020;5(2).</li><li>[59] Deng Y et al. A hierarchical fused fuzzy deep neural network for data classification. IEEE Trans Fuzzy Syst 2016;25(4):1006–12.</li><li>[60] Mou L, Ghamisi P, Zhu XX. Deep recurrent neural networks for hyperspectral image classification. IEEE Trans Geosci Remote Sens 2017;55(7):3639–55.</li><li>[61] Gu J et al. Recent advances in convolutional neural networks. Pattern Recogn 2018;77:354–77.</li><li>[62] Sharma D, Paterson AD, Xu W. TaxoNN: ensemble of neural networks on stratified microbiome data for disease prediction. Bioinformatics 2020.</li><li>[66] Zhang M-L, Zhou Z-H. ML-KNN: A lazy learning approach to multi-label learning. Pattern Recogn 2007;40(7):2038–48.</li><li>[67] Quinlan JR. C4. 5: programs for machine learning. 2014: Elsevier.</li><li>[68] Clare A, King RD. Knowledge discovery in multi-label phenotype data. European conference on principles of data mining and knowledge discovery. Springer; 2001.</li><li>[69] Moral-García S et al. Non-parametric predictive inference for solving multi-label classification. Appl Soft Comput 2020;88:106011.</li><li>[70] Zhang M-L et al. Binary relevance for multi-label learning: an overview. Front Comp Sci 2018;12(2):191–202.</li><li>[71] Dery, L., Multi-label Ranking: Mining Multi-label and Label Ranking Data. arXiv preprint arXiv:2101.00583, 2021.</li><li>[72] Argollo M et al. Comorbidities in inflammatory bowel disease: a call for action. Lancet Gastroenterol Hepatol 2019;4(8):643–54.</li><li>[73] Read J et al. Classifier chains for multi-label classification. Machine Learn 2011;85(3):333.</li><li>[74] Janssens Y et al. Disbiome database: linking the microbiome to disease. BMC Microbiol 2018;18(1):1–6.</li><li>[75] Bhatia, K., et al. Sparse Local Embeddings for Extreme Multi-label Classification. in NIPS. 2015.</li><li>[76] Tagami, Annexml Y. Approximate nearest neighbor search for extreme multilabel classification. Proceedings of the 23rd ACM SIGKDD international conference on knowledge discovery and data mining, 2017.</li><li>[77] Jalan A, Kar P. Accelerating extreme classification via adaptive feature agglomeration. arXiv preprint arXiv:1905.11769; 2019.</li><li>[78] Sun Y-Y, Zhang Y, Zhou Z-H. Multi-label learning with weak label. Proceedings of the AAAI Conference on Artificial Intelligence, 2010.</li><li>[79] Wu B et al. Multi-label learning with missing labels. 22nd International Conference on Pattern Recognition. IEEE; 2014.</li><li>[80] Xu M, Jin R, Zhou Z-H. Speedup matrix completion with side information: Application to multi-label learning. In: Advances in neural information processing systems. 2013.</li><li>[81] Yu H-F, et al. Large-scale multi-label learning with missing labels. in International conference on machine learning; 2014. PMLR.</li><li>[82] Xie M-K, Huang S-J. Partial multi-label learning. Proceedings of the AAAI Conference on Artificial Intelligence, 2018.</li><li>[83] Fang J-P, Zhang M-L. Partial multi-label learning via credible label elicitation. Proceedings of the AAAI Conference on Artificial Intelligence, 2019.</li><li>[90] Jackson MA et al. Gut microbiota associations with common diseases and prescription medications in a population-based cohort. Nat Commun 2018;9(1):1–8.</li><li>[91] Liang H et al. Estimation and testing for partially linear single-index models. Ann Stat 2010;38(6):3811.</li><li>[92] Yang Y, Tong T, Li G. SIMEX estimation for single-index model with covariate measurement error. AStA Adv Statist Anal 2019;103(1):137–61.</li></ul><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p>Shunyao Wu et al., Towards multi-label classification: Next step of machine learning for microbiome research. <em>Computational and Structural Biotechnology Journal</em> 19 (2021) 2742–2749. DOI: <a href="https://doi.org/10.1016/j.csbj.2021.04.054">https://doi.org/10.1016/j.csbj.2021.04.054</a></p><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ML与微生物组 </tag>
            
            <tag> ML与疾病诊断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量下载某研究方向重要文献</title>
      <link href="/post/29bf.html"/>
      <url>/post/29bf.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装Python及依赖包"><a href="#安装Python及依赖包" class="headerlink" title="安装Python及依赖包"></a>安装Python及依赖包</h1><h2 id="python下载安装"><a href="#python下载安装" class="headerlink" title="python下载安装"></a>python下载安装</h2><ul><li><p>windows用户请到Python官网<a href="https://www.python.org/downloads/">https://www.python.org/downloads</a>下载相应的版本，本教程在<code>version 3.10.0</code>测试可行，建议安装3.7以上版本。</p></li><li><p>Linux系统自带python，一般不需单独安装，除非版本太低，则需升级。</p></li></ul><h2 id="依赖包安装"><a href="#依赖包安装" class="headerlink" title="依赖包安装"></a>依赖包安装</h2><h3 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h3><p>以下命令可以在Windows中的CMD&#x2F;Powershell或Linux终端中运行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install BeautifulSoup4</span><br></pre></td></tr></table></figure><h3 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><h3 id="xlrd"><a href="#xlrd" class="headerlink" title="xlrd"></a>xlrd</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xlrd</span><br></pre></td></tr></table></figure><h1 id="通过AI搜索关键词获取文献列表"><a href="#通过AI搜索关键词获取文献列表" class="headerlink" title="通过AI搜索关键词获取文献列表"></a>通过AI搜索关键词获取文献列表</h1><p>假设我们需要查找<code>代谢组学</code>和<code>微生物组</code>联合研究的文章，进入AI based文献检索网站<a href="https://www.citexs.com/Paperpicky">https://www.citexs.com/Paperpicky</a>，输入关键词 “metabolomics;metabolome” 和 “microbiome”，并点击批量下载，保存为Excel格式（如下图所示）。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="AI文献检索"></p><p>下载后会得到“文献.csv”，打开文件检查各列是否与下图匹配。从左至右依次为Title、Journal、IF、DOI、PMID、Pub_Date、Url，若不匹配，请先修改，如果第二例为作者信息，那么可将该列删除。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="文献.csv内容"></p><h1 id="爬取文献保存至本地"><a href="#爬取文献保存至本地" class="headerlink" title="爬取文献保存至本地"></a>爬取文献保存至本地</h1><p>本教程脚本基于<code>大阔同学</code>脚本修改而来，添加了参数，避免用户修改源代码；增加了随机user-agent，避免下载次数过多被屏蔽。原理是基于文献DOI，利用爬虫通过SCI-HUB下载文献。因此，必需要在<code>文献.csv</code>中提供DOI。有些文章不在SCI-HUB中，或者网络环境较差，则会下载失败，失败信息写入<code>error.log</code>中。</p><p>将<code>DownloadPaper.py</code>和<code>文献.csv</code>放在同一目录下，并在该目录下<code>shift+右键</code>打开Powershell窗口（俗称cmd），输入下面的命令，回车即可下载。如果电脑安装了WSL Ubuntu，也可以进入Linux终端。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python DownloadPaper.py -f 文献.csv -o Papers -c 20</span><br></pre></td></tr></table></figure><p><strong>参数解析</strong>：</p><ul><li>f：指定包含文献信息的文件</li><li>o：将文献下载至该参数指定的路径中</li><li>c：影响因子阈值，低于该阈值的文献将不会下载</li></ul><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper3.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/downloadPaper3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="下载结果"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><p><a href="https://mp.weixin.qq.com/s/OA8TN453sk7kV95XSiTsug">快速获取某方向研究重要文献并批量下载</a></p></li><li><p><a href="https://github.com/DaKuoXueShengXin/DaKuoXueShengXin_essay_code/tree/main/2023">Github</a></p></li></ul><h1 id="代码获取"><a href="#代码获取" class="headerlink" title="代码获取"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“29bf”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NCBI - 下载 - NCBI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于TidyMass的非靶向代谢组学分析</title>
      <link href="/post/0.html"/>
      <url>/post/0.html</url>
      
        <content type="html"><![CDATA[<h1 id="代谢组学常用仪器特点"><a href="#代谢组学常用仪器特点" class="headerlink" title="代谢组学常用仪器特点"></a>代谢组学常用仪器特点</h1><table border="1"><tr><th>仪器</th><th>特点</th></tr><tr><td>GC-MS</td><td>易挥发，低极性，热稳定的小分子化合物；需衍生化</td></tr><tr><td>LC-MS</td><td>具有一定极性的有机化合物；无需衍生化</td></tr><tr><td>NMR</td><td>无偏性，无损检测；•无需繁琐前处理，便于活体、原位的动态检测</td></tr><tr><td>CE-MS</td><td>高极性化合物，如核酸，蛋白等</td></tr><tr><td>ICP-MS</td><td>无机化合物</td></tr></table><h1 id="LC-QTOF原理"><a href="#LC-QTOF原理" class="headerlink" title="LC-QTOF原理"></a>LC-QTOF原理</h1><p>Q-TOF全称为四极飞行时间质谱仪（Quadrupole Time-of-Flight Mass Spectrometer）。其基本原理是将样品离子通过四极杆进行质量筛选，然后进入飞行时间质谱器（Time-of-Flight Mass Analyzer，ToF），测定其离子的飞行时间，从而得到样品中离子的质量信息。Q-TOF有正离子模式（positive ion mode, POS）和负离子模式（negative ion mode, NEG）两种电离方式，在检测代谢组时结合使用两种方式可以使代谢物覆盖率更高，检测效果也更好。</p><p>Q-TOF的工作过程包含以下步骤：</p><p><strong>离子化</strong>：样品通过电喷雾或者MALDI等方法被电离成为离子。</p><p><strong>生成离子束</strong>：离子经过引出阱、加速器、光栅偏转镜等装置，形成一个带电的离子束。</p><p><strong>四极杆质量筛选</strong>：离子束进入四极杆，通过高频交变电压（RF）和直流电压（DC）的控制，将不同质量的离子分离出来。</p><p><strong>飞行时间质谱分析</strong>：通过激光或者其他方法对分散的离子束施加助推、聚焦和分析，并且测定其到达检测器所需的时间。不同质量的离子抵达检测器所需要的时间不同，从而可以得到离子的质量信息。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/LC-QTOF.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/LC-QTOF.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="LC-QTOF原理"><br><font color="#FF0000"><strong>FAQ</strong>：POS和NEG数据的利用。</font><br>负离子和正离子是数据采集时的时候的两种模式生成两套数据，一级分析（MS）结果中是提供 POS 和 NEG 两个检测结果列表的，但是在二级分析（MSMS）结果中，我们将鉴定正负离子模式下鉴定到的物质进行了合并，所以二级分析是针对代谢物来做的，不区分正负离子模式。</p><p><font color="#FF0000"><strong>FAQ</strong>: 当正负离子模式下都检测到了某种物质，如何对该物质的结果进行呈现？</font><br>会根据匹配参数进行取舍，选用匹配参数更好的模式下的数据在二级结果中进行分析。</p><h1 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h1><h2 id="下机数据格式转换"><a href="#下机数据格式转换" class="headerlink" title="下机数据格式转换"></a>下机数据格式转换</h2><p>以下两个软件二选一，Windows下建议使用ProteoWizard，其用法可参考<a href="https://liaochenlanruo.fun/post/df57.html">用metid构建代谢组数据库</a>。Linux下建议使用massconverter。</p><h3 id="ProteoWizard"><a href="#ProteoWizard" class="headerlink" title="ProteoWizard"></a><a href="https://github.com/ProteoWizard">ProteoWizard</a></h3><p>将raw data转换为<code>mzXML</code>格式。</p><h3 id="massconverter"><a href="#massconverter" class="headerlink" title="massconverter"></a><a href="https://tidymass.github.io/massconverter/">massconverter</a></h3><p>将raw data转换为<code>mzXML</code>格式。</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span><span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span>remotes<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">    install.packages<span class="punctuation">(</span><span class="string">&quot;remotes&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">remotes<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;tidymass/massconverter&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取pwiz</span></span><br><span class="line">library<span class="punctuation">(</span>massconverter<span class="punctuation">)</span></span><br><span class="line">docker_pull_pwiz<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>Debug</strong>：如果报错<code>Error in docker_pull_pwiz() :   Please install docker first (https://www.docker.com/get-started)</code>，则首先确认系统是否已安装docker，如果未安装，请先安装docker；如已经安装，则是因为普通用户无运行docker的权限，将其添加到docker用户组中即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root模式下运行如下shell命令，将用户lhl添加到docker组中</span></span><br><span class="line">gpasswd -a lhl docker</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启docker生效</span></span><br><span class="line">service docker restart</span><br></pre></td></tr></table></figure><h4 id="设置转换参数"><a href="#设置转换参数" class="headerlink" title="设置转换参数"></a>设置转换参数</h4><p>此处调用MSConvert进行格式转换，期间进行了过滤，主要采用了<code>Peak Picking</code>，<code>Subset</code>，和<code>Zero Samples</code>方法。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">parameter <span class="operator">=</span></span><br><span class="line">  massconverter<span class="operator">::</span>create_msconvert_parameter<span class="punctuation">(</span></span><br><span class="line">    output_format <span class="operator">=</span> <span class="string">&quot;mzXML&quot;</span><span class="punctuation">,</span><span class="comment"># &quot;mzXML&quot;, &quot;mzML&quot;, &quot;mz5&quot;, &quot;mgf&quot;, &quot;text&quot;, &quot;ms1&quot;, &quot;cms1&quot;, &quot;ms2&quot;, &quot;cms2&quot;</span></span><br><span class="line">    binary_encoding_precision <span class="operator">=</span> <span class="string">&quot;64&quot;</span><span class="punctuation">,</span></span><br><span class="line">    zlib <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">    write_index <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">    peak_picking_algorithm <span class="operator">=</span> <span class="string">&quot;cwt&quot;</span><span class="punctuation">,</span><span class="comment"># &quot;vendor&quot; or &quot;cwt&quot;</span></span><br><span class="line">    vendor_mslevels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="literal">NA</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="comment"># 当前调用的是cwt，此参数可能无效</span></span><br><span class="line">    cwt_mslevels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="literal">NA</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="comment"># 如此设置即可</span></span><br><span class="line">    cwt_min_snr <span class="operator">=</span> <span class="number">0.1</span><span class="punctuation">,</span><span class="comment"># minimum signal-to-noise ratio，设为0.1即可</span></span><br><span class="line">    cwt_min_peak_spacing <span class="operator">=</span> <span class="number">0.1</span><span class="punctuation">,</span><span class="comment"># minimum peak spacing，设为0.1即可</span></span><br><span class="line">    subset_polarity <span class="operator">=</span> <span class="string">&quot;positive&quot;</span><span class="punctuation">,</span><span class="comment"># &quot;any&quot;, &quot;positive&quot; or &quot;negative&quot;，根据模式选择</span></span><br><span class="line">    subset_scan_number <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="literal">NA</span><span class="punctuation">,</span> <span class="literal">NA</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="comment"># A two numeric vector. Can be c(NA, NA) if don&#x27;t use this</span></span><br><span class="line">    subset_scan_time <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">60</span><span class="punctuation">,</span> <span class="number">300</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="comment"># A two numeric vector. Can be c(NA, NA) if don&#x27;t use this</span></span><br><span class="line">    subset_mslevels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="comment"># A two numeric vector. Second can be set as NA</span></span><br><span class="line">    zero_samples_mode <span class="operator">=</span> <span class="string">&quot;removeExtra&quot;</span><span class="punctuation">,</span><span class="comment"># &quot;no&quot;, &quot;removeExtra&quot;, or &quot;addMissing&quot;</span></span><br><span class="line">    zero_samples_mslevels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="literal">NA</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="comment"># A two numeric vector. Second can be set as NA</span></span><br><span class="line">    zero_samples_add_missing_flanking_zero_count <span class="operator">=</span> <span class="number">5</span><span class="comment"># 默认5即可</span></span><br><span class="line">  <span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h4 id="开始转换"><a href="#开始转换" class="headerlink" title="开始转换"></a>开始转换</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">convert_raw_data<span class="punctuation">(</span>input_path <span class="operator">=</span> <span class="string">&quot;demo_data/raw_data&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                 output_path <span class="operator">=</span> <span class="string">&quot;demo_data/mzxml&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                 msconvert_parameter <span class="operator">=</span> parameter<span class="punctuation">,</span> </span><br><span class="line">                 docker_parameters <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                 process_all <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="安装tidyMass"><a href="#安装tidyMass" class="headerlink" title="安装tidyMass"></a>安装<a href="https://tidymass.tidymass.org/">tidyMass</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mamba install gcc_linux-64 gxx_linux-64 gfortran_linux-64</span><br><span class="line">mamba install bioconductor-msnbase bioconductor-rdisop r-openxlsx bioconductor-mzr bioconductor-xcms r-rvest r-tidyr r-stringi r-tidyversedyve r-hexbin</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span><span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span>remotes<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;remotes&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">remotes<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;tidymass/masstools&quot;</span><span class="punctuation">)</span></span><br><span class="line">remotes<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;tidymass/tidymass&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="原始数据处理"><a href="#原始数据处理" class="headerlink" title="原始数据处理"></a>原始数据处理</h2><p>调用<a href="https://massprocesser.tidymass.org/">massprocesser</a>包进行原始数据处理，进行峰检测与对齐，输出peak table包括：<br>原始数据导入（read spectra from file）、峰检测（detect mass traces &amp; detect  chromatographic peaks）、校正保留时间（Correcting rentention time）、对已鉴定的色谱峰进行保留时间校正、Grouping peaks across samples、输出peak table。</p><p><strong>数据目录结构</strong></p><ul><li>mzxml&#x2F;mzxml_ms1_data&#x2F;<ul><li>POS&#x2F;<ul><li>Case&#x2F;*.mzXML</li><li>Control&#x2F;*.mzXML</li><li>QC&#x2F;*.mzXML</li></ul></li><li>NEG&#x2F;<ul><li>Case&#x2F;*.mzXML</li><li>Control&#x2F;*.mzXML</li><li>QC&#x2F;*.mzXML</li></ul></li></ul></li><li>mzxml&#x2F;mgf_ms2_data&#x2F;mgf_ms2_data&#x2F;<ul><li>POS&#x2F;*.mgf</li><li>NEG&#x2F;*.mgf</li></ul></li><li>mzxml&#x2F;sample_info&#x2F;<ul><li>sample_info_pos.csv</li><li>sample_info_neg.csv</li></ul></li></ul><h3 id="正离子模式"><a href="#正离子模式" class="headerlink" title="正离子模式"></a>正离子模式</h3><p><font color=#FF0000>注意：path指定的路径名不可以数字开头！</font></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>tidymass<span class="punctuation">)</span></span><br><span class="line">process_data<span class="punctuation">(</span></span><br><span class="line">  path <span class="operator">=</span> <span class="string">&quot;mzxml_ms1_data/POS&quot;</span><span class="punctuation">,</span><span class="comment"># 路径根据实际情况定</span></span><br><span class="line">  polarity <span class="operator">=</span> <span class="string">&quot;positive&quot;</span><span class="punctuation">,</span></span><br><span class="line">  ppm <span class="operator">=</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">  peakwidth <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span> <span class="number">60</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  threads <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">  output_tic <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  output_bpc <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  output_rt_correction_plot <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  min_fraction <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span></span><br><span class="line">  group_for_figure <span class="operator">=</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  snthresh <span class="operator">=</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">  prefilter <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">3</span><span class="punctuation">,</span> <span class="number">500</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  fitgauss <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  integrate <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  mzdiff <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">,</span></span><br><span class="line">  noise <span class="operator">=</span> <span class="number">500</span><span class="punctuation">,</span></span><br><span class="line">  binSize <span class="operator">=</span> <span class="number">0.025</span><span class="punctuation">,</span></span><br><span class="line">  bw <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  fill_peaks <span class="operator">=</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ul><li><strong>ppm</strong>：numeric defining the maximal tolerated m&#x2F;z deviation in consecutive scans in parts per million (ppm) for the initial regions-of-interest (ROI)  definition。<font color=#FF0000>此处的ppm来源于xcms包，但在xcms中不同的函数中，含义貌似不一样，需进一步确认。</font></li><li><strong>peakwith</strong>：峰宽，取决于柱子（column）和LC系统。numeric(2) with the expected approximate peak width in chromatographic space. Given as a range (min, max) in seconds.</li><li><strong>min_fraction</strong>：如果一个峰出现在至少一组样本中<code>min_fraction</code>样本以上（按比例），则将保留该峰值。</li><li><strong>snthresh</strong> ：信噪比阈值。</li><li><strong>prefilter</strong>：c(k, I) 在第一次分析步骤（ROI检测）中指定预筛选步骤。仅保留包含至少强度&gt;&#x3D;I的k个峰的的质量轨迹（Mass traces）。</li><li><strong>fitgauss</strong> ：是否应对每个峰拟合高斯分布。主要影响峰的保留时间位置。</li><li><strong>integrate</strong>：积分方法（1或2）。对于 integrate&#x3D;1，Peak limits通过在mexican hat 过滤后的数据上下降（descent）来确定；而对于 integrate&#x3D;2，则在原始数据上进行下降处理。后一种方法更准确但容易受到噪声的影响，而前一种方法更稳健但不太精确。</li><li><strong>mzdiff</strong> ：representing the minimum difference in m&#x2F;z dimension required for peaks with overlapping retention times; can be negative to allow overlap. During peak post-processing, peaks defined to be overlapping are reduced to the one peak with the largest signal.</li><li><strong>noise</strong>：设定第一步分析中需要的质心（centroids ）最小强度（intensity &lt; noise的质心将被省略在感兴趣区域检测之外）。</li><li><strong>binSize</strong> ：将m&#x2F;z轴按照binSize划分为多个区间，再对各区间内的离子信号进行聚合。较小的binSize使得峰检测更加准确，检测到更多features，需要更多计算资源。</li><li><strong>bw</strong>：带宽，通常在5-50间，这是用于峰值检测的核密度估计 （KDE） 算法中使用的参数。bw 控制估计的 KDE 曲线的平滑度，并确定峰的解析程度。较小的bw值将产生更详细的基础峰形表示，在紧密间隔或重叠的峰之间具有更好的分辨率，但也可能产生更高水平的噪声。相反，较大的bw值将导致对峰形的估计更平滑、更广义，这有助于降低噪声和杂散检测，但在某些情况下也可能导致峰分辨率降低。bw 值的选择将取决于所分析数据的具体特征以及分析的目标。通常，有必要试验一系列 bw 值，以找到给定数据集的最佳设置。</li><li><strong>fill_peaks</strong>：Fill peaks NA or not。</li></ul><p><strong>结果</strong>：</p><ul><li><p>POS&#x2F;Result&#x2F;</p><ul><li><p>object：用于下一步分析</p></li><li><p>Peak_table.csv：用于下一步分析的峰表</p></li><li><p>Peak_table_for_cleaning.csv：删除了<code>Peak_table.csv</code>中无用的列，可直接用于后续的数据清洗</p></li><li><p>BPC.pdf：Base peak chromatogram，仅展示<code>group_for_figure</code>参数指定组内的样本<br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="BPC.pdf"></p></li><li><p>TIC.pdf：Total ion peak chromatogram，经色谱分离流出的组分不断进入质谱，质谱连续扫描采集数据，每一次扫描得到一张质谱图，将每一张质谱图中所有离子强度相加得到总离子流强度。然后以总离子强度为纵坐标，时间为横坐标绘图。<br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="TIC.pdf"></p></li><li><p>RT correction plot.pdf<br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_3.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="RT correction plot.pdf"></p></li><li><p>intermediate_data：中间文件目录，如果需要重新运行data processing，则需先删除该目录。</p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载对象</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;mzxml_ms1_data/POS/Result/object&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看metabolic features数量</span></span><br><span class="line">object</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取互动图，在Rstudio中才能显示</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;mzxml_ms1_data/POS/Result/intermediate_data/xdata2&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">plot <span class="operator">=</span> massprocesser<span class="operator">::</span>plot_adjusted_rt<span class="punctuation">(</span>object <span class="operator">=</span> xdata2<span class="punctuation">,</span> group_for_figure <span class="operator">=</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">,</span> <span class="built_in">interactive</span> <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">plot</span><br></pre></td></tr></table></figure></li></ul><h3 id="负离子模式"><a href="#负离子模式" class="headerlink" title="负离子模式"></a>负离子模式</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">massprocesser<span class="operator">::</span>process_data<span class="punctuation">(</span></span><br><span class="line">  path <span class="operator">=</span> <span class="string">&quot;mzxml_ms1_data/NEG&quot;</span><span class="punctuation">,</span></span><br><span class="line">  polarity <span class="operator">=</span> <span class="string">&quot;negative&quot;</span><span class="punctuation">,</span></span><br><span class="line">  ppm <span class="operator">=</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">  peakwidth <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">10</span><span class="punctuation">,</span> <span class="number">60</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  threads <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">  output_tic <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  output_bpc <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  output_rt_correction_plot <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  min_fraction <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span></span><br><span class="line">  group_for_figure <span class="operator">=</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">,</span></span><br><span class="line">   snthresh <span class="operator">=</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">  prefilter <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">3</span><span class="punctuation">,</span> <span class="number">500</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  fitgauss <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  integrate <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  mzdiff <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">,</span></span><br><span class="line">  noise <span class="operator">=</span> <span class="number">500</span><span class="punctuation">,</span></span><br><span class="line">  binSize <span class="operator">=</span> <span class="number">0.025</span><span class="punctuation">,</span></span><br><span class="line">  bw <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  fill_peaks <span class="operator">=</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载对象</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;mzxml_ms1_data/NEG/Result/object&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看metabolic features数量</span></span><br><span class="line">object</span><br></pre></td></tr></table></figure><h2 id="Explore-data"><a href="#Explore-data" class="headerlink" title="Explore data"></a>Explore data</h2><p>将peak table和样本信息（元数据）整合，得到<code>mass_dataset</code> class对象。获取数据的总结信息。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_0.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_0.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="样本信息表示例 sample_info_pos.csv"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>tidyverse<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="正离子模式-1"><a href="#正离子模式-1" class="headerlink" title="正离子模式"></a>正离子模式</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载对象</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;mzxml_ms1_data/POS/Result/object&quot;</span><span class="punctuation">)</span></span><br><span class="line">object_pos <span class="operator">&lt;-</span> object</span><br><span class="line">object_pos</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读入样本信息</span></span><br><span class="line">sample_info_pos <span class="operator">&lt;-</span> readr<span class="operator">::</span>read_csv<span class="punctuation">(</span><span class="string">&quot;sample_info/sample_info_pos.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  查看object_pos中的元数据</span></span><br><span class="line">object_pos <span class="operator">%&gt;%</span>  extract_sample_info<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;    sample_id group   class injection.order</span></span><br><span class="line"><span class="comment">#&gt; 1  sample_06  Case Subject               1</span></span><br><span class="line"><span class="comment">#&gt; 2 sample_103  Case Subject               2</span></span><br><span class="line"><span class="comment">#&gt; 3  sample_11  Case Subject               3</span></span><br><span class="line"><span class="comment">#&gt; 4 sample_112  Case Subject               4</span></span><br><span class="line"><span class="comment">#&gt; 5 sample_117  Case Subject               5</span></span><br><span class="line"><span class="comment">#&gt; 6  sample_12  Case Subject               6</span></span><br><span class="line"><span class="comment">#?? 为何还没整合的情况下object_pos中就存在了部分元数据列？</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除object_pos中的&quot;group&quot;, &quot;class&quot;, &quot;injection.order&quot;</span></span><br><span class="line">object_pos <span class="operator">&lt;-</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> dplyr<span class="operator">::</span>select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;group&quot;</span><span class="punctuation">,</span> <span class="string">&quot;class&quot;</span><span class="punctuation">,</span> <span class="string">&quot;injection.order&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将sample_info_pos 中的所有列整合到object_pos 中</span></span><br><span class="line">object_pos <span class="operator">=</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> left_join<span class="punctuation">(</span>sample_info_pos<span class="punctuation">,</span> by <span class="operator">=</span> <span class="string">&quot;sample_id&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看元数据信息</span></span><br><span class="line">object_pos <span class="operator">%&gt;%</span> extract_sample_info<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;    sample_id injection.order   class batch  subject_id group</span></span><br><span class="line"><span class="comment">#&gt; 1  sample_06               4 Subject     1 subject_414  Case</span></span><br><span class="line"><span class="comment">#&gt; 2 sample_103              71 Subject     1 subject_330  Case</span></span><br><span class="line"><span class="comment">#&gt; 3  sample_11               6 Subject     1 subject_125  Case</span></span><br><span class="line"><span class="comment">#&gt; 4 sample_112              78 Subject     1 subject_295  Case</span></span><br><span class="line"><span class="comment">#&gt; 5 sample_117              80 Subject     1 subject_793  Case</span></span><br><span class="line"><span class="comment">#&gt; 6  sample_12               8 Subject     1 subject_387  Case</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存数据</span></span><br><span class="line">dir.create<span class="punctuation">(</span><span class="string">&quot;data_cleaning/POS&quot;</span><span class="punctuation">,</span> showWarnings <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> recursive <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">save<span class="punctuation">(</span>object_pos<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;data_cleaning/POS/object_pos&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计样本数和variables数</span></span><br><span class="line">object_pos</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据class统计样本数量，可将class换成group或batch等</span></span><br><span class="line">object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> dplyr<span class="operator">::</span>count<span class="punctuation">(</span><span class="built_in">class</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取peak分布图</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/POS/peak_distributation_plot_positive.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">&lt;-</span> object_pos <span class="operator">%&gt;%</span> `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> show_mz_rt_plot<span class="punctuation">(</span>hex <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span> </span><br><span class="line"></span><br><span class="line">p<span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看总缺失值数量</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object <span class="operator">=</span> object_pos<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#[1] 786005</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看各样本内的缺失值</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object <span class="operator">=</span> object_pos<span class="punctuation">,</span> by <span class="operator">=</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># sample_06 sample_103  sample_11 sample_112 sample_117  sample_12</span></span><br><span class="line"><span class="comment">#      4017       2713       4064       2981       2920       3846</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看各variable的缺失值</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object <span class="operator">=</span> object_pos<span class="punctuation">,</span> by <span class="operator">=</span> <span class="string">&quot;variable&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#M70T73_POS  M70T53_POS M70T183_POS M70T527_POS M71T695_POS M71T183_POS</span></span><br><span class="line"><span class="comment">#        129          16         155          54         133         169</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图展示缺失值信息，可在下一节生成</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/POS/total_MVs.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">show_missing_values<span class="punctuation">(</span>object <span class="operator">=</span> object_pos<span class="punctuation">,</span> show_column_names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> show_row_names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图展示各样本缺失值信息，可在下一节生成</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/POS/Samples_MVs.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">show_sample_missing_values<span class="punctuation">(</span>object <span class="operator">=</span> object_pos<span class="punctuation">,</span> percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> color_by <span class="operator">=</span> <span class="string">&quot;class&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图展示各variables缺失值信息，可在下一节生成</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/POS/Variables_MVs.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">&lt;-</span> show_variable_missing_values<span class="punctuation">(</span></span><br><span class="line">  object <span class="operator">=</span> object_pos<span class="punctuation">,</span></span><br><span class="line">  percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  show_x_text <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  show_x_ticks <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  color_by <span class="operator">=</span> <span class="string">&quot;mz&quot;</span></span><br><span class="line"><span class="punctuation">)</span> </span><br><span class="line"></span><br><span class="line">p<span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_4.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="峰分布图"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_5.svg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_5.svg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="各variable的缺失值数量"><br>黑色代表缺失值。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_6.svg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_6.svg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="各样本的缺失值比例"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_7.svg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_7.svg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="各variable的缺失值比例"></p><h3 id="负离子模式-1"><a href="#负离子模式-1" class="headerlink" title="负离子模式"></a>负离子模式</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载对象</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;mzxml_ms1_data/NEG/Result/object&quot;</span><span class="punctuation">)</span></span><br><span class="line">object_neg <span class="operator">&lt;-</span> object</span><br><span class="line">object_neg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读入样本信息</span></span><br><span class="line">sample_info_neg <span class="operator">&lt;-</span> readr<span class="operator">::</span>read_csv<span class="punctuation">(</span><span class="string">&quot;sample_info/sample_info_neg.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_neg <span class="operator">%&gt;%</span>  extract_sample_info<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#   sample_id group   class injection.order</span></span><br><span class="line"><span class="comment">#1  sample_06  Case Subject               1</span></span><br><span class="line"><span class="comment">#2 sample_103  Case Subject               2</span></span><br><span class="line"><span class="comment">#3  sample_11  Case Subject               3</span></span><br><span class="line"><span class="comment">#4 sample_112  Case Subject               4</span></span><br><span class="line"><span class="comment">#5 sample_117  Case Subject               5</span></span><br><span class="line"><span class="comment">#6  sample_12  Case Subject               6</span></span><br><span class="line"></span><br><span class="line">object_neg <span class="operator">&lt;-</span> object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> dplyr<span class="operator">::</span>select<span class="punctuation">(</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;group&quot;</span><span class="punctuation">,</span> <span class="string">&quot;class&quot;</span><span class="punctuation">,</span> <span class="string">&quot;injection.order&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将sample_info_neg添加至object_neg</span></span><br><span class="line">object_neg <span class="operator">=</span> object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> left_join<span class="punctuation">(</span>sample_info_neg<span class="punctuation">,</span> by <span class="operator">=</span> <span class="string">&quot;sample_id&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_neg <span class="operator">%&gt;%</span> extract_sample_info<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#   sample_id injection.order   class batch  subject_id group</span></span><br><span class="line"><span class="comment">#1  sample_06               4 Subject     1 subject_414  Case</span></span><br><span class="line"><span class="comment">#2 sample_103              71 Subject     1 subject_330  Case</span></span><br><span class="line"><span class="comment">#3  sample_11               6 Subject     1 subject_125  Case</span></span><br><span class="line"><span class="comment">#4 sample_112              78 Subject     1 subject_295  Case</span></span><br><span class="line"><span class="comment">#5 sample_117              80 Subject     1 subject_793  Case</span></span><br><span class="line"><span class="comment">#6  sample_12               8 Subject     1 subject_387  Case</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存数据</span></span><br><span class="line">dir.create<span class="punctuation">(</span><span class="string">&quot;data_cleaning/NEG&quot;</span><span class="punctuation">,</span> showWarnings <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> recursive <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">save<span class="punctuation">(</span>object_neg<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;data_cleaning/NEG/object_neg&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计样本数和variables数</span></span><br><span class="line">object_neg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据class统计样本数量，可将class换成group或batch等</span></span><br><span class="line">object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> dplyr<span class="operator">::</span>count<span class="punctuation">(</span><span class="built_in">class</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取peak分布图</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/NEG/peak_distributation_plot_negtive.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_neg <span class="operator">%&gt;%</span> `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">10</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> show_mz_rt_plot<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看总缺失值数量</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object <span class="operator">=</span> object_neg<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#[1] 748237</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看各样本内的缺失值</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object <span class="operator">=</span> object_neg<span class="punctuation">,</span> by <span class="operator">=</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># sample_06 sample_103  sample_11 sample_112 sample_117  sample_12</span></span><br><span class="line"><span class="comment">#      3029       2766       3298       3100       2912       3053</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看各variable的缺失值</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object <span class="operator">=</span> object_neg<span class="punctuation">,</span> by <span class="operator">=</span> <span class="string">&quot;variable&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#M70T712_NEG M70T527_NEG M70T587_NEG  M70T47_NEG M71T587_NEG M71T641_NEG</span></span><br><span class="line"><span class="comment">#         16         137           2         146          41          19</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图展示缺失值信息，可在下一节生成</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/NEG/total_MVs.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">show_missing_values<span class="punctuation">(</span>object <span class="operator">=</span> object_neg<span class="punctuation">,</span> show_column_names <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图展示各样本缺失值信息，可在下一节生成</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/NEG/Samples_MVs.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">show_sample_missing_values<span class="punctuation">(</span>object <span class="operator">=</span> object_neg<span class="punctuation">,</span> percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图展示各variables缺失值信息，可在下一节生成</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/NEG/Variables_MVs.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">&lt;-</span> show_variable_missing_values<span class="punctuation">(</span></span><br><span class="line">  object <span class="operator">=</span> object_neg<span class="punctuation">,</span></span><br><span class="line">  percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  show_x_text <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  show_x_ticks <span class="operator">=</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="punctuation">)</span> </span><br><span class="line"></span><br><span class="line">p<span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="数据清洗（Data-cleaning）"><a href="#数据清洗（Data-cleaning）" class="headerlink" title="数据清洗（Data cleaning）"></a>数据清洗（Data cleaning）</h2><h3 id="查看质量"><a href="#查看质量" class="headerlink" title="查看质量"></a>查看质量</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载数据</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;data_cleaning/POS/object_pos&quot;</span><span class="punctuation">)</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;data_cleaning/NEG/object_neg&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将批次号改为字符串</span></span><br><span class="line">object_pos <span class="operator">&lt;-</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> dplyr<span class="operator">::</span>mutate<span class="punctuation">(</span>batch <span class="operator">=</span> <span class="built_in">as.character</span><span class="punctuation">(</span>batch<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_neg <span class="operator">&lt;-</span> object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> dplyr<span class="operator">::</span>mutate<span class="punctuation">(</span>batch <span class="operator">=</span> <span class="built_in">as.character</span><span class="punctuation">(</span>batch<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先评估数据质量</span></span><br><span class="line">massqc<span class="operator">::</span>massqc_report<span class="punctuation">(</span>object <span class="operator">=</span> object_pos<span class="punctuation">,</span> path <span class="operator">=</span> <span class="string">&quot;data_cleaning/POS/data_quality_before_data_cleaning&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">massqc<span class="operator">::</span>massqc_report<span class="punctuation">(</span>object <span class="operator">=</span> object_neg<span class="punctuation">,</span> path <span class="operator">=</span> <span class="string">&quot;data_cleaning/NEG/data_quality_before_data_cleaning&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_8.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="正离子PCA"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_9.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="负离子PCA"><br><font color="#FF0000">从上两图可看出正离子模式下存在严重的批次效应，负离子模式下不存在明显的批次效应。</font></p><h3 id="开始清洗"><a href="#开始清洗" class="headerlink" title="开始清洗"></a>开始清洗</h3><h4 id="移除噪音代谢features——缺失值过滤。"><a href="#移除噪音代谢features——缺失值过滤。" class="headerlink" title="移除噪音代谢features——缺失值过滤。"></a>移除噪音代谢features——缺失值过滤。</h4><p>移除超过20% QC样本中含有MVs以及至少在50%实验组或对照组样本中含有MVs的variables。</p><ul><li><p>正离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看各分组样本量</span></span><br><span class="line">object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> dplyr<span class="operator">::</span>count<span class="punctuation">(</span>group<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;     group   n</span></span><br><span class="line"><span class="comment">#&gt; 1    Case 110</span></span><br><span class="line"><span class="comment">#&gt; 2 Control 110</span></span><br><span class="line"><span class="comment">#&gt; 3      QC  39</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># QC样本中的MV占比</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/POS/MVpercentQC.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">&lt;-</span> show_variable_missing_values<span class="punctuation">(</span>object <span class="operator">=</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span><span class="built_in">class</span> <span class="operator">==</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span> </span><br><span class="line"></span><br><span class="line">p<span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计QC中的MV占比</span></span><br><span class="line">qc_id <span class="operator">=</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span><span class="built_in">class</span> <span class="operator">==</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计对照组中的MV占比</span></span><br><span class="line">control_id <span class="operator">=</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>group <span class="operator">==</span> <span class="string">&quot;Control&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计实验组中的MV占比</span></span><br><span class="line">case_id <span class="operator">=</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>group <span class="operator">==</span> <span class="string">&quot;Case&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 整合以上统计信息</span></span><br><span class="line">object_pos <span class="operator">=</span> object_pos <span class="operator">%&gt;%</span> mutate_variable_na_freq<span class="punctuation">(</span>according_to_samples <span class="operator">=</span> qc_id<span class="punctuation">)</span> <span class="operator">%&gt;%</span> mutate_variable_na_freq<span class="punctuation">(</span>according_to_samples <span class="operator">=</span> control_id<span class="punctuation">)</span> <span class="operator">%&gt;%</span> mutate_variable_na_freq<span class="punctuation">(</span>according_to_samples <span class="operator">=</span> case_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">head<span class="punctuation">(</span>extract_variable_info<span class="punctuation">(</span>object_pos<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#variable_id       mz        rt    na_freq na_freq.1 na_freq.2</span></span><br><span class="line"><span class="comment">#1  M70T73_POS 70.04074  73.31705 0.28205128 0.6000000 0.4727273</span></span><br><span class="line"><span class="comment">#2  M70T53_POS 70.06596  52.78542 0.00000000 0.1454545 0.0000000</span></span><br><span class="line"><span class="comment">#3 M70T183_POS 70.19977 182.87981 0.00000000 0.6636364 0.7454545</span></span><br><span class="line"><span class="comment">#4 M70T527_POS 70.36113 526.76657 0.02564103 0.1818182 0.3000000</span></span><br><span class="line"><span class="comment">#5 M71T695_POS 70.56911 694.84592 0.02564103 0.6454545 0.5545455</span></span><br><span class="line"><span class="comment">#6 M71T183_POS 70.75034 182.77790 0.05128205 0.7272727 0.7909091</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除variables</span></span><br><span class="line">object_pos <span class="operator">&lt;-</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>na_freq <span class="operator">&lt;</span> <span class="number">0.2</span> <span class="operator">&amp;</span> <span class="punctuation">(</span>na_freq.1 <span class="operator">&lt;</span> <span class="number">0.5</span> <span class="operator">|</span> na_freq.2 <span class="operator">&lt;</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_pos</span><br></pre></td></tr></table></figure><p> <strong>注</strong>：na_freq、na_freq.1和na_freq.2在此处分别代表某variables 在QC样本、对照组样本和实验组样本中缺失值MV所占的百分比。</p><p> <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_19.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_19.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="MVpercentQC"></p></li><li><p>负离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看各分组样本量</span></span><br><span class="line">object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> dplyr<span class="operator">::</span>count<span class="punctuation">(</span>group<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt;     group   n</span></span><br><span class="line"><span class="comment">#&gt; 1    Case 110</span></span><br><span class="line"><span class="comment">#&gt; 2 Control 110</span></span><br><span class="line"><span class="comment">#&gt; 3      QC  39</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># QC样本中的MV占比</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/NEG/MVpercentQC.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">&lt;-</span> show_variable_missing_values<span class="punctuation">(</span>object <span class="operator">=</span> object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span><span class="built_in">class</span> <span class="operator">==</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计QC中的MV占比</span></span><br><span class="line">qc_id <span class="operator">=</span> object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span><span class="built_in">class</span> <span class="operator">==</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计对照组中的MV占比</span></span><br><span class="line">control_id <span class="operator">=</span> object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>group <span class="operator">==</span> <span class="string">&quot;Control&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计实验组中的MV占比</span></span><br><span class="line">case_id <span class="operator">=</span> object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>group <span class="operator">==</span> <span class="string">&quot;Case&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 整合以上统计信息</span></span><br><span class="line">object_neg <span class="operator">=</span> object_neg <span class="operator">%&gt;%</span> mutate_variable_na_freq<span class="punctuation">(</span>according_to_samples <span class="operator">=</span> qc_id<span class="punctuation">)</span> <span class="operator">%&gt;%</span> mutate_variable_na_freq<span class="punctuation">(</span>according_to_samples <span class="operator">=</span> control_id<span class="punctuation">)</span> <span class="operator">%&gt;%</span> mutate_variable_na_freq<span class="punctuation">(</span>according_to_samples <span class="operator">=</span> case_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">head<span class="punctuation">(</span>extract_variable_info<span class="punctuation">(</span>object_neg<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#variable_id       mz        rt    na_freq na_freq.1 na_freq.2</span></span><br><span class="line"><span class="comment">#1 M70T712_NEG 70.05911 711.97894 0.05128205 0.109090909 0.018181818</span></span><br><span class="line"><span class="comment">#2 M70T527_NEG 70.13902 526.85416 0.33333333 0.509090909 0.618181818</span></span><br><span class="line"><span class="comment">#3 M70T587_NEG 70.31217 587.25330 0.00000000 0.009090909 0.009090909</span></span><br><span class="line"><span class="comment">#4  M70T47_NEG 70.33835  46.57537 0.84615385 0.936363636 0.090909091</span></span><br><span class="line"><span class="comment">#5 M71T587_NEG 70.56315 587.02570 0.17948718 0.145454545 0.163636364</span></span><br><span class="line"><span class="comment">#6 M71T641_NEG 70.70657 641.16672 0.10256410 0.063636364 0.072727273</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除variables</span></span><br><span class="line">object_neg <span class="operator">&lt;-</span> object_neg <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>na_freq <span class="operator">&lt;</span> <span class="number">0.2</span> <span class="operator">&amp;</span> <span class="punctuation">(</span>na_freq.1 <span class="operator">&lt;</span> <span class="number">0.5</span> <span class="operator">|</span> na_freq.2 <span class="operator">&lt;</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_neg</span><br></pre></td></tr></table></figure></li></ul><h4 id="过滤离群样本（Filter-outlier-samples）"><a href="#过滤离群样本（Filter-outlier-samples）" class="headerlink" title="过滤离群样本（Filter outlier samples）"></a>过滤离群样本（Filter outlier samples）</h4><ul><li><p>正离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 总览</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/POS/MVpercentALL.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">massdataset<span class="operator">::</span>show_sample_missing_values<span class="punctuation">(</span>object <span class="operator">=</span> object_pos<span class="punctuation">,</span> color_by <span class="operator">=</span> <span class="string">&quot;group&quot;</span><span class="punctuation">,</span> order_by <span class="operator">=</span> <span class="string">&quot;injection.order&quot;</span><span class="punctuation">,</span> percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>size <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> ggsci<span class="operator">::</span>scale_color_aaas<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测离群样本</span></span><br><span class="line">outlier_samples <span class="operator">=</span> object_pos <span class="operator">%&gt;%</span> `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> scale<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> detect_outlier<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">outlier_samples</span><br><span class="line"><span class="comment">#--------------------</span></span><br><span class="line"><span class="comment">#masscleaner</span></span><br><span class="line"><span class="comment">#--------------------</span></span><br><span class="line"><span class="comment">#1 according_to_na : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#2 according_to_pc_sd : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#3 according_to_pc_mad : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#4 accordint_to_distance : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#4 accordint_to_distance : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#extract all outlier table using extract_outlier_table()</span></span><br><span class="line"></span><br><span class="line">outlier_table <span class="operator">&lt;-</span> extract_outlier_table<span class="punctuation">(</span>outlier_samples<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">outlier_table <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#           according_to_na pc_sd pc_mad accordint_to_distance</span></span><br><span class="line"><span class="comment">#sample_06            FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_103           FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_11            FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_112           FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_117           FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_12            FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"></span><br><span class="line">outlier_table <span class="operator">%&gt;%</span> apply<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">&#123;</span> <span class="built_in">sum</span><span class="punctuation">(</span>x<span class="punctuation">)</span>  <span class="punctuation">&#125;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> `&gt;`<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> which<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># #named integer(0)</span></span><br><span class="line"><span class="comment">##无离群样本</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除离群样本，如果有的话</span></span><br><span class="line">need_id_pos <span class="operator">&lt;-</span> <span class="built_in">names</span><span class="punctuation">(</span>outlier_table <span class="operator">%&gt;%</span> apply<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">&#123;</span> <span class="built_in">sum</span><span class="punctuation">(</span>x<span class="punctuation">)</span>  <span class="punctuation">&#125;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> `==`<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> which<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_pos <span class="operator">&lt;-</span> object_pos <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>sample_id <span class="operator">%in%</span> need_id_pos<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_20.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_20.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="MVpercentALL"></p></li><li><p>负离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 总览</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/NEG/MVpercentALL.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">&lt;-</span> massdataset<span class="operator">::</span>show_sample_missing_values<span class="punctuation">(</span>object <span class="operator">=</span> object_neg<span class="punctuation">,</span> color_by <span class="operator">=</span> <span class="string">&quot;group&quot;</span><span class="punctuation">,</span> order_by <span class="operator">=</span> <span class="string">&quot;injection.order&quot;</span><span class="punctuation">,</span> percentage <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>size <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> ggsci<span class="operator">::</span>scale_color_aaas<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测离群样本</span></span><br><span class="line">outlier_samples <span class="operator">=</span> object_neg <span class="operator">%&gt;%</span> `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> scale<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> detect_outlier<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">outlier_samples</span><br><span class="line"><span class="comment">#--------------------</span></span><br><span class="line"><span class="comment">#masscleaner</span></span><br><span class="line"><span class="comment">#--------------------</span></span><br><span class="line"><span class="comment">#1 according_to_na : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#2 according_to_pc_sd : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#3 according_to_pc_mad : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#4 accordint_to_distance : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#4 accordint_to_distance : 0 outlier samples.</span></span><br><span class="line"><span class="comment">#extract all outlier table using extract_outlier_table()</span></span><br><span class="line"></span><br><span class="line">outlier_table <span class="operator">&lt;-</span> extract_outlier_table<span class="punctuation">(</span>outlier_samples<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">outlier_table <span class="operator">%&gt;%</span> head<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#           according_to_na pc_sd pc_mad accordint_to_distance</span></span><br><span class="line"><span class="comment">#sample_06            FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_103           FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_11            FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_112           FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_117           FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"><span class="comment">#sample_12            FALSE FALSE  FALSE                 FALSE</span></span><br><span class="line"></span><br><span class="line">outlier_table <span class="operator">%&gt;%</span> apply<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">&#123;</span> <span class="built_in">sum</span><span class="punctuation">(</span>x<span class="punctuation">)</span>  <span class="punctuation">&#125;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> `&gt;`<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> which<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># #named integer(0)</span></span><br><span class="line"><span class="comment">##无离群样本</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="缺失值填充（Missing-value-imputation）"><a href="#缺失值填充（Missing-value-imputation）" class="headerlink" title="缺失值填充（Missing value imputation）"></a>缺失值填充（Missing value imputation）</h2><p>对原始数据中的缺失值进行模拟（missing value recoding）。方法包括：”knn”, “rf” (missForest), “mean”, “median”, “zero”, “minimum”, “bpca”, “svdImpute”, “ppca”。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取正离子模式下的MV数量</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object_pos<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] 148907</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 填充正离子模式缺失值</span></span><br><span class="line">object_pos <span class="operator">&lt;-</span> impute_mv<span class="punctuation">(</span>object <span class="operator">=</span> object_pos<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;knn&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取正离子模式下填充后的MV数量</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object_pos<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取负离子模式下的MV数量</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object_neg<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] 146409</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 填充正离子模式缺失值</span></span><br><span class="line">object_neg <span class="operator">&lt;-</span> impute_mv<span class="punctuation">(</span>object <span class="operator">=</span> object_neg<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;knn&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取正离子模式下填充后的MV数量</span></span><br><span class="line">get_mv_number<span class="punctuation">(</span>object_neg<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; [1] 0</span></span><br></pre></td></tr></table></figure><h2 id="数据标准化与整合（Data-normalization-and-integration）"><a href="#数据标准化与整合（Data-normalization-and-integration）" class="headerlink" title="数据标准化与整合（Data normalization and integration）"></a>数据标准化与整合（Data normalization and integration）</h2><p>数据标准化处理， 利用内标（internal standard, IS）进行归一化<font color="#FF0000">待确认是否通过IS实现</font>。</p><ul><li><p>正离子模式</p><p>标准化方法包括：”svr”, “total”, “median”, “mean”, “pqn”, “loess”；整合方法包括：”qc_mean”, “qc_median”, “subject_mean”, “subject_median”。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">object_pos <span class="operator">&lt;-</span> normalize_data<span class="punctuation">(</span>object_pos<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;median&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_pos2 <span class="operator">&lt;-</span> integrate_data<span class="punctuation">(</span>object_pos<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;subject_median&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按批次分组绘制PCA图</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/POS/PC_batch_intergrated.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_pos2 <span class="operator">%&gt;%</span> `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> massqc<span class="operator">::</span>massqc_pca<span class="punctuation">(</span>color_by <span class="operator">=</span> <span class="string">&quot;batch&quot;</span><span class="punctuation">,</span> line <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_10.svg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_10.svg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="标准化后正离子PCA"></p><ul><li><p>负离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">object_neg <span class="operator">&lt;-</span> normalize_data<span class="punctuation">(</span>object_neg<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;median&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_neg2 <span class="operator">&lt;-</span> integrate_data<span class="punctuation">(</span>object_neg<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;subject_median&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按批次分组绘制PCA图</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;data_cleaning/NEG/PC_batch_intergrated.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_neg2 <span class="operator">%&gt;%</span> `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> <span class="built_in">log</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> massqc<span class="operator">::</span>massqc_pca<span class="punctuation">(</span>color_by <span class="operator">=</span> <span class="string">&quot;batch&quot;</span><span class="punctuation">,</span> line <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_11.svg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_11.svg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="标准化后负离子PCA"></p><p><strong>保存数据</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">save<span class="punctuation">(</span>object_pos2<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;data_cleaning/POS/object_pos2&quot;</span><span class="punctuation">)</span></span><br><span class="line">save<span class="punctuation">(</span>object_neg2<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;data_cleaning/NEG/object_neg2&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="代谢物注释"><a href="#代谢物注释" class="headerlink" title="代谢物注释"></a>代谢物注释</h2><h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load<span class="punctuation">(</span><span class="string">&quot;data_cleaning/POS/object_pos2&quot;</span><span class="punctuation">)</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;data_cleaning/NEG/object_neg2&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="将MS2数据添加到mass-dataset"><a href="#将MS2数据添加到mass-dataset" class="headerlink" title="将MS2数据添加到mass_dataset"></a>将MS2数据添加到mass_dataset</h3><p><strong>如果没有MS2数据，此步不执行应该也可以！</strong><br><font color="#FF0000">？？只有QC样的MS2数据，MS2数据是怎么来的？</font></p><ul><li><p>正离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">object_pos2 <span class="operator">&lt;-</span> mutate_ms2<span class="punctuation">(</span></span><br><span class="line">  object <span class="operator">=</span> object_pos2<span class="punctuation">,</span></span><br><span class="line">  column <span class="operator">=</span> <span class="string">&quot;rp&quot;</span><span class="punctuation">,</span> <span class="comment"># rp or hilic，对应RPLC（反相色谱）和HILIC（亲水相互作用色谱）</span></span><br><span class="line">  polarity <span class="operator">=</span> <span class="string">&quot;positive&quot;</span><span class="punctuation">,</span></span><br><span class="line">  ms1.ms2.match.mz.tol <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span><span class="comment"># ppm</span></span><br><span class="line">  ms1.ms2.match.rt.tol <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span><span class="comment"># seconds</span></span><br><span class="line">  path <span class="operator">=</span> <span class="string">&quot;mgf_ms2_data/mgf_ms2_data/POS&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#1043 out of 5101 variable have MS2 spectra.</span></span><br><span class="line"><span class="comment">#Selecting the most intense MS2 spectrum for each peak...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># summary</span></span><br><span class="line">extract_ms2_data<span class="punctuation">(</span>object_pos2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>负离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">object_neg2 <span class="operator">&lt;-</span> mutate_ms2<span class="punctuation">(</span></span><br><span class="line">  object <span class="operator">=</span> object_neg2<span class="punctuation">,</span></span><br><span class="line">  column <span class="operator">=</span> <span class="string">&quot;rp&quot;</span><span class="punctuation">,</span></span><br><span class="line">  polarity <span class="operator">=</span> <span class="string">&quot;negative&quot;</span><span class="punctuation">,</span></span><br><span class="line">  ms1.ms2.match.mz.tol <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">  ms1.ms2.match.rt.tol <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">  path <span class="operator">=</span> <span class="string">&quot;mgf_ms2_data/mgf_ms2_data/NEG&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#1092 out of 4104 variable have MS2 spectra.</span></span><br><span class="line"><span class="comment">#Selecting the most intense MS2 spectrum for each peak...</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># summary</span></span><br><span class="line">extract_ms2_data<span class="punctuation">(</span>object_neg2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="代谢物注释-1"><a href="#代谢物注释-1" class="headerlink" title="代谢物注释"></a>代谢物注释</h3><p><font color=#FF0000>需要考虑数据库是RPLC还是HILIC。</font></p><ul><li><p>正离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Annotate features using snyder_database_rplc0.0.3</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;metabolite_annotation/snyder_database_rplc0.0.3.rda&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看数据库信息</span></span><br><span class="line">snyder_database_rplc0.0.3</span><br><span class="line"></span><br><span class="line"><span class="comment">## 注释</span></span><br><span class="line">object_pos2 <span class="operator">&lt;-</span> annotate_metabolites_mass_dataset<span class="punctuation">(</span></span><br><span class="line">    object <span class="operator">=</span> object_pos2<span class="punctuation">,</span> </span><br><span class="line">    ms1.match.ppm <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span> </span><br><span class="line">    rt.match.tol <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span> </span><br><span class="line">    polarity <span class="operator">=</span> <span class="string">&quot;positive&quot;</span><span class="punctuation">,</span></span><br><span class="line">    database <span class="operator">=</span> snyder_database_rplc0.0.3<span class="punctuation">,</span></span><br><span class="line"> threads <span class="operator">=</span><span class="number">30</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Annotate features using orbitrap_database0.0.3</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;metabolite_annotation/orbitrap_database0.0.3.rda&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看数据库信息</span></span><br><span class="line">orbitrap_database0.0.3</span><br><span class="line"></span><br><span class="line"><span class="comment">## 注释</span></span><br><span class="line">object_pos2 <span class="operator">&lt;-</span> annotate_metabolites_mass_dataset<span class="punctuation">(</span></span><br><span class="line">    object <span class="operator">=</span> object_pos2<span class="punctuation">,</span> </span><br><span class="line">    ms1.match.ppm <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span> </span><br><span class="line">    polarity <span class="operator">=</span> <span class="string">&quot;positive&quot;</span><span class="punctuation">,</span></span><br><span class="line">    database <span class="operator">=</span> orbitrap_database0.0.3<span class="punctuation">,</span></span><br><span class="line"> threads <span class="operator">=</span><span class="number">30</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Annotate features using mona_database0.0.3</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;metabolite_annotation/mona_database0.0.3.rda&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看数据库信息</span></span><br><span class="line">mona_database0.0.3</span><br><span class="line"></span><br><span class="line"><span class="comment">## 注释</span></span><br><span class="line">object_pos2 <span class="operator">&lt;-</span> annotate_metabolites_mass_dataset<span class="punctuation">(</span></span><br><span class="line">    object <span class="operator">=</span> object_pos2<span class="punctuation">,</span> </span><br><span class="line">    ms1.match.ppm <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span> </span><br><span class="line">    polarity <span class="operator">=</span> <span class="string">&quot;positive&quot;</span><span class="punctuation">,</span></span><br><span class="line">    database <span class="operator">=</span> mona_database0.0.3<span class="punctuation">,</span></span><br><span class="line"> threads <span class="operator">=</span><span class="number">30</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>annotate_metabolites_mass_dataset 参数解析</strong>：</p><ul><li><strong>ms1.match.ppm</strong>：Precursor match ppm tolerance [25].</li><li><strong>ms2.match.ppm</strong>：Fragment ion match ppm tolerance [30].</li><li><strong>mz.ppm.thr</strong>：Accurate mass tolerance for m&#x2F;z error calculation [400].</li><li><strong>ms2.match.tol</strong>：MS2 match (MS2 similarity) tolerance [0.5].</li><li><strong>fraction.weight</strong>：The weight for matched fragments [0.3].</li><li><strong>dp.forward.weight</strong>：Forward dot product weight [0.6].</li><li><strong>dp.reverse.weight</strong>：Reverse dot product weight [0.1].</li><li><strong>remove_fragment_intensity_cutoff</strong>：remove_fragment_intensity_cutoff [0].</li><li><strong>rt.match.tol</strong>：RT match tolerance [30].</li><li><strong>polarity</strong>：The polarity of data, “positive”or “negative”.</li><li><strong>ce</strong>：Collision energy. Please confirm the CE values in your database. [all].</li><li><strong>column</strong>：”hilic” (HILIC column) or “rp” (reverse phase).</li><li><strong>ms1.match.weight</strong>：The weight of MS1 match for total score calculation [0.25].</li><li><strong>rt.match.weight</strong>：The weight of RT match for total score calculation [0.25].</li><li><strong>ms2.match.weight</strong>：The weight of MS2 match for total score calculation [0.5]</li><li><strong>total.score.tol</strong>：Total score tolerance. The total score are referring to MS-DIAL [0.5]</li><li><strong>candidate.num</strong>：The number of candidate [3]</li></ul></li><li><p>负离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Annotate features using snyder_database_rplc0.0.3</span></span><br><span class="line">object_neg2 <span class="operator">&lt;-</span> annotate_metabolites_mass_dataset<span class="punctuation">(</span></span><br><span class="line">    object <span class="operator">=</span> object_neg2<span class="punctuation">,</span> </span><br><span class="line">    ms1.match.ppm <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span> </span><br><span class="line">    rt.match.tol <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span> </span><br><span class="line">    polarity <span class="operator">=</span> <span class="string">&quot;negative&quot;</span><span class="punctuation">,</span></span><br><span class="line">    database <span class="operator">=</span> snyder_database_rplc0.0.3<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Annotate features using orbitrap_database0.0.3</span></span><br><span class="line">object_neg2 <span class="operator">&lt;-</span> annotate_metabolites_mass_dataset<span class="punctuation">(</span></span><br><span class="line">    object <span class="operator">=</span> object_neg2<span class="punctuation">,</span> </span><br><span class="line">    ms1.match.ppm <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span> </span><br><span class="line">    polarity <span class="operator">=</span> <span class="string">&quot;negative&quot;</span><span class="punctuation">,</span></span><br><span class="line">    database <span class="operator">=</span> orbitrap_database0.0.3<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Annotate features using mona_database0.0.3</span></span><br><span class="line">object_neg2 <span class="operator">&lt;-</span> annotate_metabolites_mass_dataset<span class="punctuation">(</span></span><br><span class="line">    object <span class="operator">=</span> object_neg2<span class="punctuation">,</span> </span><br><span class="line">    ms1.match.ppm <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span> </span><br><span class="line">    polarity <span class="operator">=</span> <span class="string">&quot;negative&quot;</span><span class="punctuation">,</span></span><br><span class="line">    database <span class="operator">=</span> mona_database0.0.3<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="查看注释结果"><a href="#查看注释结果" class="headerlink" title="查看注释结果"></a>查看注释结果</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>extract_annotation_table<span class="punctuation">(</span>object <span class="operator">=</span> object_pos2<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">variable_info_pos <span class="operator">&lt;-</span> extract_variable_info<span class="punctuation">(</span>object <span class="operator">=</span> object_pos2<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">head<span class="punctuation">(</span>variable_info_pos<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">table<span class="punctuation">(</span>variable_info_pos<span class="operator">$</span>Level<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">table<span class="punctuation">(</span>variable_info_pos<span class="operator">$</span>Database<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">save<span class="punctuation">(</span>object_pos2<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;metabolite_annotation/object_pos2&quot;</span><span class="punctuation">)</span></span><br><span class="line">save<span class="punctuation">(</span>object_neg2<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;metabolite_annotation/object_neg2&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="统计分析"><a href="#统计分析" class="headerlink" title="统计分析"></a>统计分析</h2><h3 id="加载数据-1"><a href="#加载数据-1" class="headerlink" title="加载数据"></a>加载数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>tidymass<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>tidyverse<span class="punctuation">)</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;metabolite_annotation/object_pos2&quot;</span><span class="punctuation">)</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;metabolite_annotation/object_neg2&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="移除未被注释的features"><a href="#移除未被注释的features" class="headerlink" title="移除未被注释的features"></a>移除未被注释的features</h3><ul><li><p>正离子模式</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">object_pos2 <span class="operator">&lt;-</span> object_pos2 <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;annotation_table&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span><span class="operator">!</span><span class="built_in">is.na</span><span class="punctuation">(</span>Level<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>Level <span class="operator">==</span> <span class="number">1</span> <span class="operator">|</span> Level <span class="operator">==</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_pos2</span><br></pre></td></tr></table></figure></li><li><p>负离子模式</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">object_neg2 <span class="operator">&lt;-</span> object_neg2 <span class="operator">%&gt;%</span> activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;annotation_table&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span><span class="operator">!</span><span class="built_in">is.na</span><span class="punctuation">(</span>Level<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>Level <span class="operator">==</span> <span class="number">1</span> <span class="operator">|</span> Level <span class="operator">==</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object_neg2</span><br></pre></td></tr></table></figure></li></ul><h3 id="合并POS和NEG数据"><a href="#合并POS和NEG数据" class="headerlink" title="合并POS和NEG数据"></a>合并POS和NEG数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># inner merge for samples and full merge for variables</span></span><br><span class="line">object <span class="operator">&lt;-</span> </span><br><span class="line">merge_mass_dataset<span class="punctuation">(</span></span><br><span class="line">    x <span class="operator">=</span> object_pos2<span class="punctuation">,</span> </span><br><span class="line">    y <span class="operator">=</span> object_neg2<span class="punctuation">,</span> </span><br><span class="line">    sample_direction <span class="operator">=</span> <span class="string">&quot;inner&quot;</span><span class="punctuation">,</span><span class="comment"># left, right, inner or full，此处用inner较合理</span></span><br><span class="line">    variable_direction <span class="operator">=</span> <span class="string">&quot;full&quot;</span><span class="punctuation">,</span><span class="comment"># left, right, inner or full，此处用full合理</span></span><br><span class="line">    sample_by <span class="operator">=</span> <span class="string">&quot;sample_id&quot;</span><span class="punctuation">,</span> <span class="comment"># merge samples by what columns from sample_info</span></span><br><span class="line">    variable_by <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;variable_id&quot;</span><span class="punctuation">,</span> <span class="string">&quot;mz&quot;</span><span class="punctuation">,</span> <span class="string">&quot;rt&quot;</span><span class="punctuation">)</span><span class="comment"># merge variables by what columns from variable_info</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object</span><br></pre></td></tr></table></figure><p><strong>名词解释：</strong></p><ul><li>**左连接 (Left join)**：将左表中的所有记录都保留下来，而右表中与左表中记录没有匹配的部分则丢弃。</li><li>**右连接 (Right join)**：将右表中的所有记录都保留下来，而左表中与右表中记录没有匹配的部分则丢弃。</li><li>**内连接 (Inner join)**：只有两个表中都存在的记录才保留下来，否则丢弃。</li><li>**全连接 (Full join)**：将左表和右表中的所有记录都保留下来，如果某个表中的记录没有匹配到另一个表中的记录，则用NULL填充。</li></ul><h3 id="Trace-processing-information-of-object"><a href="#Trace-processing-information-of-object" class="headerlink" title="Trace processing information of object"></a>Trace processing information of object</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dir.create<span class="punctuation">(</span>path <span class="operator">=</span> <span class="string">&quot;statistical_analysis&quot;</span><span class="punctuation">,</span> showWarnings <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">report_parameters<span class="punctuation">(</span>object <span class="operator">=</span> object<span class="punctuation">,</span> path <span class="operator">=</span> <span class="string">&quot;statistical_analysis/&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="基于level和score移除冗余注释代谢物"><a href="#基于level和score移除冗余注释代谢物" class="headerlink" title="基于level和score移除冗余注释代谢物"></a>基于level和score移除冗余注释代谢物</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">object <span class="operator">&lt;-</span> object <span class="operator">%&gt;%</span> </span><br><span class="line">  activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;annotation_table&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  group_by<span class="punctuation">(</span>Compound.name<span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>Level <span class="operator">==</span> <span class="built_in">min</span><span class="punctuation">(</span>Level<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>SS <span class="operator">==</span> <span class="built_in">max</span><span class="punctuation">(</span>SS<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  slice_head<span class="punctuation">(</span>n <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">object <span class="operator">&lt;-</span> object <span class="operator">%&gt;%</span> </span><br><span class="line">  activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;annotation_table&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  group_by<span class="punctuation">(</span>variable_id<span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>Level <span class="operator">==</span> <span class="built_in">min</span><span class="punctuation">(</span>Level<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>SS <span class="operator">==</span> <span class="built_in">max</span><span class="punctuation">(</span>SS<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  slice_head<span class="punctuation">(</span>n <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><font color=#FF0000>为何要选最小的level？SS是什么score？</font></p><h3 id="样本聚类"><a href="#样本聚类" class="headerlink" title="样本聚类"></a>样本聚类</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">load<span class="punctuation">(</span><span class="string">&quot;statistical_analysis/object_final&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排除QC样本</span></span><br><span class="line">temp_object <span class="operator">&lt;-</span> object_final <span class="operator">%&gt;%</span> </span><br><span class="line">  activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>group <span class="operator">!=</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  <span class="built_in">log</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  scale<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>ComplexHeatmap<span class="punctuation">)</span></span><br><span class="line">h1 <span class="operator">&lt;-</span> HeatmapAnnotation<span class="punctuation">(</span><span class="built_in">class</span> <span class="operator">=</span> extract_sample_info<span class="punctuation">(</span>temp_object<span class="punctuation">)</span><span class="operator">$</span>group<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;statistical_analysis/Samples_heatmap.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line">massstat<span class="operator">::</span>Heatmap<span class="punctuation">(</span>matrix <span class="operator">=</span> temp_object<span class="punctuation">,</span> </span><br><span class="line">                  name <span class="operator">=</span> <span class="string">&quot;z-score&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                  row_names_gp <span class="operator">=</span> gpar<span class="punctuation">(</span>cex <span class="operator">=</span> <span class="number">0.2</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                  column_names_gp <span class="operator">=</span> gpar<span class="punctuation">(</span>cex <span class="operator">=</span> <span class="number">0.2</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                  top_annotation <span class="operator">=</span> h1<span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_16.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="样本聚类热图"></p><h3 id="差异表达代谢物"><a href="#差异表达代谢物" class="headerlink" title="差异表达代谢物"></a>差异表达代谢物</h3><p><font color=#FF0000>如果有多组数据，需要适当增加相应下述代码。“mutate_fc”的逻辑是每运行一次，则在object中增加一列“fc”，当有多个实验组时，可以将先前生成的fc重命名，因此，object中可以包含多个组间比较的fc结果。</font></p><ul><li><p>计算变化倍数</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取对照组样本名列表</span></span><br><span class="line">control_sample_id <span class="operator">=</span> object <span class="operator">%&gt;%</span></span><br><span class="line">activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">filter<span class="punctuation">(</span>group <span class="operator">==</span> <span class="string">&quot;Control&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取实验组样本名列表</span></span><br><span class="line">case_sample_id <span class="operator">=</span> object <span class="operator">%&gt;%</span></span><br><span class="line">activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">filter<span class="punctuation">(</span>group <span class="operator">==</span> <span class="string">&quot;Case&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#! 如果有多个实验组，参照以上格式在此列出，假设有实验组Case2</span></span><br><span class="line">case2_sample_id <span class="operator">=</span> object <span class="operator">%&gt;%</span></span><br><span class="line">activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">filter<span class="punctuation">(</span>group <span class="operator">==</span> <span class="string">&quot;Case2&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">pull<span class="punctuation">(</span>sample_id<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Calculate fold change，每次只能计算两个分组，如果有多个实验组，则依次将其与对照组比较</span></span><br><span class="line">object <span class="operator">&lt;-</span> mutate_fc<span class="punctuation">(</span>object <span class="operator">=</span> object<span class="punctuation">,</span> </span><br><span class="line">          control_sample_id <span class="operator">=</span> control_sample_id<span class="punctuation">,</span> </span><br><span class="line">          case_sample_id <span class="operator">=</span> case_sample_id<span class="punctuation">,</span> </span><br><span class="line">          mean_median <span class="operator">=</span> <span class="string">&quot;mean&quot;</span><span class="punctuation">)</span><span class="comment">#可选&quot;mean&quot;, &quot;median&quot;</span></span><br><span class="line"><span class="comment">#&gt; 110 control samples.</span></span><br><span class="line"><span class="comment">#&gt; 110 case samples.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#! 如果有多个实验组，则需要在此更改fc列的默认名，假设将默认的“fc”改为“fc_case1_vs_control”</span></span><br><span class="line">object <span class="operator">&lt;-</span>  object <span class="operator">%&gt;%</span> </span><br><span class="line">activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">dplyr<span class="operator">::</span>rename<span class="punctuation">(</span>fc_case1_vs_control <span class="operator">=</span> fc<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#! Calculate fold change，每次只能计算两个分组，如果有多个实验组，则依次将其与对照组比较，此处计算Case2与Control</span></span><br><span class="line">object <span class="operator">&lt;-</span> mutate_fc<span class="punctuation">(</span>object <span class="operator">=</span> object<span class="punctuation">,</span> </span><br><span class="line">          control_sample_id <span class="operator">=</span> control_sample_id<span class="punctuation">,</span> </span><br><span class="line">          case_sample_id <span class="operator">=</span> case2_sample_id<span class="punctuation">,</span> </span><br><span class="line">          mean_median <span class="operator">=</span> <span class="string">&quot;mean&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; 110 control samples.</span></span><br><span class="line"><span class="comment">#&gt; 110 case samples.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#! 如果有多个实验组，则需要在此更改fc列的默认名，假设将默认的“fc”改为“fc_case2_vs_control”</span></span><br><span class="line">object <span class="operator">&lt;-</span>  object <span class="operator">%&gt;%</span> </span><br><span class="line">activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">dplyr<span class="operator">::</span>rename<span class="punctuation">(</span>fc_case2_vs_control <span class="operator">=</span> fc<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>计算p值<br><font color="#FF0000">同理，当有多个实验组时，也可以分别计算p值，并将默认的列名“p_value”和“p_value_adjust”重命名，以在object中容纳多组相互比较的p值。</font></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">object <span class="operator">&lt;-</span> mutate_p_value<span class="punctuation">(</span></span><br><span class="line">  object <span class="operator">=</span> object<span class="punctuation">,</span></span><br><span class="line">  control_sample_id <span class="operator">=</span> control_sample_id<span class="punctuation">,</span></span><br><span class="line">  case_sample_id <span class="operator">=</span> case_sample_id<span class="punctuation">,</span></span><br><span class="line">  method <span class="operator">=</span> <span class="string">&quot;t.test&quot;</span><span class="punctuation">,</span><span class="comment"># &quot;t.test&quot;, &quot;wilcox.test&quot;</span></span><br><span class="line">  p_adjust_methods <span class="operator">=</span> <span class="string">&quot;BH&quot;</span><span class="comment"># &quot;holm&quot;, &quot;hochberg&quot;, &quot;hommel&quot;, &quot;bonferroni&quot;, &quot;BH&quot;, &quot;BY&quot;, &quot;fdr&quot;, &quot;none&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; 110 control samples.</span></span><br><span class="line"><span class="comment">#&gt; 110 case samples.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#! 如果涉及多组间的比较，则需重命名默认表头</span></span><br><span class="line">object <span class="operator">&lt;-</span>  object <span class="operator">%&gt;%</span> </span><br><span class="line">activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">dplyr<span class="operator">::</span>rename<span class="punctuation">(</span>p_value_case1_vs_control <span class="operator">=</span> p_value<span class="punctuation">,</span></span><br><span class="line">       p_value_adjust_case1_vs_control <span class="operator">=</span> p_value_adjust<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#! 假设存在Case2组</span></span><br><span class="line">object <span class="operator">&lt;-</span> mutate_p_value<span class="punctuation">(</span></span><br><span class="line">  object <span class="operator">=</span> object<span class="punctuation">,</span></span><br><span class="line">  control_sample_id <span class="operator">=</span> control_sample_id<span class="punctuation">,</span></span><br><span class="line">  case_sample_id <span class="operator">=</span> case2_sample_id<span class="punctuation">,</span></span><br><span class="line">  method <span class="operator">=</span> <span class="string">&quot;t.test&quot;</span><span class="punctuation">,</span></span><br><span class="line">  p_adjust_methods <span class="operator">=</span> <span class="string">&quot;BH&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#&gt; 110 control samples.</span></span><br><span class="line"><span class="comment">#&gt; 110 case samples.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#! 如果涉及多组间的比较，则需重命名默认表头</span></span><br><span class="line">object <span class="operator">&lt;-</span>  object <span class="operator">%&gt;%</span> </span><br><span class="line">activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">dplyr<span class="operator">::</span>rename<span class="punctuation">(</span>p_value_case2_vs_control <span class="operator">=</span> p_value<span class="punctuation">,</span></span><br><span class="line">       p_value_adjust_case2_vs_control <span class="operator">=</span> p_value_adjust<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>绘制火山图</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;statistical_analysis/Volcano.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line">  </span><br><span class="line">  p<span class="operator">&lt;-</span> volcano_plot<span class="punctuation">(</span></span><br><span class="line">      object <span class="operator">=</span> object<span class="punctuation">,</span></span><br><span class="line">      fc_column_name <span class="operator">=</span> <span class="string">&quot;fc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  p_value_column_name <span class="operator">=</span> <span class="string">&quot;p_value_adjust&quot;</span><span class="punctuation">,</span></span><br><span class="line">  fc_up_cutoff <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> </span><br><span class="line">  fc_down_cutoff <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  p_value_cutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span></span><br><span class="line">      add_text <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">      text_from <span class="operator">=</span> <span class="string">&quot;Compound.name&quot;</span><span class="punctuation">,</span> </span><br><span class="line">      point_size_scale <span class="operator">=</span> <span class="string">&quot;p_value_adjust&quot;</span></span><br><span class="line"><span class="punctuation">)</span> </span><br><span class="line">  </span><br><span class="line">  p <span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.5</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">  dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_12.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="火山图"></p><p><font color="#FF0000">假设存在Case2，绘制火山图。</font></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;statistical_analysis/Volcano2.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">&lt;-</span> volcano_plot<span class="punctuation">(</span>object <span class="operator">=</span> object<span class="punctuation">,</span></span><br><span class="line">    fc_column_name <span class="operator">=</span> <span class="string">&quot;fc_case2_vs_control&quot;</span><span class="punctuation">,</span><span class="comment"># 重命名后</span></span><br><span class="line"> p_value_column_name <span class="operator">=</span> <span class="string">&quot;p_value_adjust_case2_vs_control&quot;</span><span class="punctuation">,</span><span class="comment"># 重命名后</span></span><br><span class="line"> fc_up_cutoff <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> </span><br><span class="line"> fc_down_cutoff <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"> p_value_cutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span></span><br><span class="line">           add_text <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">           text_from <span class="operator">=</span> <span class="string">&quot;Compound.name&quot;</span><span class="punctuation">,</span> </span><br><span class="line">           point_size_scale <span class="operator">=</span> <span class="string">&quot;p_value_adjust_case2_vs_control&quot;</span><span class="punctuation">)</span> <span class="comment"># 重命名后</span></span><br><span class="line"></span><br><span class="line">p <span class="operator">+</span> scale_size_continuous<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.5</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="保存结果"><a href="#保存结果" class="headerlink" title="保存结果"></a>保存结果</h3><ul><li><p>保存差异表达代谢物结果。如果有多个实验组，则将下述代码中的“fc”和“p_value_adjust”更改为重命名后的名称，并分别保存到不同的文件中。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">differential_metabolites <span class="operator">&lt;-</span> extract_variable_info<span class="punctuation">(</span>object <span class="operator">=</span> object<span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>fc <span class="operator">&gt;</span> <span class="number">2</span> <span class="operator">|</span> fc <span class="operator">&lt;</span> <span class="number">0.5</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> filter<span class="punctuation">(</span>p_value_adjust <span class="operator">&lt;</span> <span class="number">0.05</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">readr<span class="operator">::</span>write_csv<span class="punctuation">(</span>differential_metabolites<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;statistical_analysis/differential_metabolites.csv&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>保存结果对象</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">object_final <span class="operator">&lt;-</span> object</span><br><span class="line"></span><br><span class="line">save<span class="punctuation">(</span>object_final<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;statistical_analysis/object_final&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="绘制热图"><a href="#绘制热图" class="headerlink" title="绘制热图"></a>绘制热图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">temp_object <span class="operator">&lt;-</span> object_final <span class="operator">%&gt;%</span> </span><br><span class="line">  activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>sample_id <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span>control_sample_id<span class="punctuation">,</span> case_sample_id<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>variable_id <span class="operator">%in%</span> differential_metabolites<span class="operator">$</span>variable_id<span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  <span class="built_in">log</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  scale<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>ComplexHeatmap<span class="punctuation">)</span></span><br><span class="line">h1 <span class="operator">&lt;-</span> HeatmapAnnotation<span class="punctuation">(</span><span class="built_in">class</span> <span class="operator">=</span> extract_sample_info<span class="punctuation">(</span>temp_object<span class="punctuation">)</span><span class="operator">$</span>group<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;statistical_analysis/diff_heatmap.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line">massstat<span class="operator">::</span>Heatmap<span class="punctuation">(</span>matrix <span class="operator">=</span> temp_object<span class="punctuation">,</span> </span><br><span class="line">                  name <span class="operator">=</span> <span class="string">&quot;z-score&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                  row_names_gp <span class="operator">=</span> gpar<span class="punctuation">(</span>cex <span class="operator">=</span> <span class="number">0.4</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                  column_names_gp <span class="operator">=</span> gpar<span class="punctuation">(</span>cex <span class="operator">=</span> <span class="number">0.2</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                  top_annotation <span class="operator">=</span> h1<span class="punctuation">,</span></span><br><span class="line">                  row_labels <span class="operator">=</span> extract_variable_info<span class="punctuation">(</span>temp_object<span class="punctuation">)</span><span class="operator">$</span>Compound.name<span class="punctuation">,</span></span><br><span class="line">                  border <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>  <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_17.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_17.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="显著差异代谢物热图"></p><h2 id="代谢通路富集"><a href="#代谢通路富集" class="headerlink" title="代谢通路富集"></a>代谢通路富集</h2><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>tidymass<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>tidyverse<span class="punctuation">)</span></span><br><span class="line">load<span class="punctuation">(</span><span class="string">&quot;statistical_analysis/object_final&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h4 id="富集"><a href="#富集" class="headerlink" title="富集"></a>富集</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dir.create<span class="punctuation">(</span>path <span class="operator">=</span> <span class="string">&quot;pathway_enrichment&quot;</span><span class="punctuation">,</span> showWarnings <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">diff_metabolites <span class="operator">&lt;-</span> object_final <span class="operator">%&gt;%</span> </span><br><span class="line">  activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>p_value_adjust <span class="operator">&lt;</span> <span class="number">0.05</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  extract_variable_info<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">head<span class="punctuation">(</span>diff_metabolites<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="加载KEGG-human-pathway数据库"><a href="#加载KEGG-human-pathway数据库" class="headerlink" title="加载KEGG human pathway数据库"></a>加载KEGG human pathway数据库</h3><p><font color=#FF0000>可选数据库：kegg_hsa_pathway，keggMS1database，query_id_kegg，hmdb_pathway，hmdbMS1Database，query_id_hmdb。</font></p><p><strong>？？这些数据库的区别是什么？</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">data<span class="punctuation">(</span><span class="string">&quot;kegg_hsa_pathway&quot;</span><span class="punctuation">,</span> package <span class="operator">=</span> <span class="string">&quot;metpath&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">kegg_hsa_pathway</span><br><span class="line"></span><br><span class="line">get_pathway_class<span class="punctuation">(</span>kegg_hsa_pathway<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除疾病相关通路!根据课题选择是否移除？</span></span><br><span class="line">pathway_class <span class="operator">=</span> metpath<span class="operator">::</span>pathway_class<span class="punctuation">(</span>kegg_hsa_pathway<span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>pathway_class<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">remain_idx <span class="operator">=</span> pathway_class <span class="operator">%&gt;%</span> unlist<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> stringr<span class="operator">::</span>str_detect<span class="punctuation">(</span><span class="string">&quot;Disease&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> `!`<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> which<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pathway_database <span class="operator">=</span> kegg_hsa_pathway<span class="punctuation">[</span>remain_idx<span class="punctuation">]</span></span><br><span class="line">pathway_database</span><br><span class="line"></span><br><span class="line">kegg_id <span class="operator">&lt;-</span>  diff_metabolites<span class="operator">$</span>KEGG.ID </span><br><span class="line">kegg_id <span class="operator">&lt;-</span>  kegg_id<span class="punctuation">[</span><span class="operator">!</span><span class="built_in">is.na</span><span class="punctuation">(</span>kegg_id<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line">result <span class="operator">&lt;-</span> enrich_kegg<span class="punctuation">(</span></span><br><span class="line">    query_id <span class="operator">=</span> kegg_id<span class="punctuation">,</span> </span><br><span class="line">    query_type <span class="operator">=</span> <span class="string">&quot;compound&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    id_type <span class="operator">=</span> <span class="string">&quot;KEGG&quot;</span><span class="punctuation">,</span></span><br><span class="line">    pathway_database <span class="operator">=</span> pathway_database<span class="punctuation">,</span> </span><br><span class="line">    p_cutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span> </span><br><span class="line">    p_adjust_method <span class="operator">=</span> <span class="string">&quot;BH&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    threads <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">result</span><br><span class="line"></span><br><span class="line">save<span class="punctuation">(</span>result<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;pathway_enrichment/result&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="绘制结果"><a href="#绘制结果" class="headerlink" title="绘制结果"></a>绘制结果</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  bar plot</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;pathway_enrichment/barplot.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">enrich_bar_plot<span class="punctuation">(</span>object <span class="operator">=</span> result<span class="punctuation">,</span> x_axis <span class="operator">=</span> <span class="string">&quot;p_value&quot;</span><span class="punctuation">,</span> cutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># scatter plot</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;pathway_enrichment/scatter_plot.pdf&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">enrich_scatter_plot<span class="punctuation">(</span>object <span class="operator">=</span> result<span class="punctuation">,</span> y_axis <span class="operator">=</span> <span class="string">&quot;p_value&quot;</span><span class="punctuation">,</span> y_axis_cutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># network</span></span><br><span class="line">tiff<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;pathway_enrichment/network.tiff&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">enrich_network<span class="punctuation">(</span>object <span class="operator">=</span> result<span class="punctuation">,</span> point_size <span class="operator">=</span> <span class="string">&quot;p_value&quot;</span><span class="punctuation">,</span> p_cutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span> only_significant_pathway <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_13.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="KEGG富集bar plot"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_14.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="KEGG富集scatter plot"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_15.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="KEGG富集network"></p><h2 id="Correlation-network-analysis"><a href="#Correlation-network-analysis" class="headerlink" title="Correlation network analysis"></a>Correlation network analysis</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">temp_object <span class="operator">&lt;-</span> object_final <span class="operator">%&gt;%</span> </span><br><span class="line">  activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;sample_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>sample_id <span class="operator">%in%</span> <span class="built_in">c</span><span class="punctuation">(</span>control_sample_id<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  activate_mass_dataset<span class="punctuation">(</span>what <span class="operator">=</span> <span class="string">&quot;variable_info&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  filter<span class="punctuation">(</span>variable_id <span class="operator">%in%</span> diff_metabolites<span class="operator">$</span>variable_id<span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  `+`<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  <span class="built_in">log</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  scale<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>ggraph<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>tidygraph<span class="punctuation">)</span></span><br><span class="line">graph_data <span class="operator">&lt;-</span> convert_mass_dataset2graph<span class="punctuation">(</span></span><br><span class="line">    object <span class="operator">=</span> temp_object<span class="punctuation">,</span></span><br><span class="line">    margin <span class="operator">=</span> <span class="string">&quot;variable&quot;</span><span class="punctuation">,</span></span><br><span class="line">    cor_method <span class="operator">=</span> <span class="string">&quot;spearman&quot;</span><span class="punctuation">,</span></span><br><span class="line">    p_adjust_cutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span></span><br><span class="line">    p_value_cutoff <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span></span><br><span class="line">    pos_cor_cutoff <span class="operator">=</span> <span class="number">0.7</span><span class="punctuation">,</span></span><br><span class="line">    neg_cor_cutoff <span class="operator">=</span> <span class="operator">-</span><span class="number">0.7</span></span><br><span class="line">  <span class="punctuation">)</span> <span class="operator">%&gt;%</span> </span><br><span class="line">  mutate<span class="punctuation">(</span>Degree <span class="operator">=</span> centrality_degree<span class="punctuation">(</span>mode <span class="operator">=</span> <span class="string">&#x27;all&#x27;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>extrafont<span class="punctuation">)</span></span><br><span class="line">loadfonts<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>showtext<span class="punctuation">)</span></span><br><span class="line">showtext_auto<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">plot <span class="operator">&lt;-</span> </span><br><span class="line">ggraph<span class="punctuation">(</span>graph <span class="operator">=</span> graph_data<span class="punctuation">,</span> layout <span class="operator">=</span> <span class="string">&quot;kk&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  geom_edge_fan<span class="punctuation">(</span>aes<span class="punctuation">(</span>color <span class="operator">=</span> correlation<span class="punctuation">,</span></span><br><span class="line">                    <span class="comment">#width = -log((p_adjust+0.1), 10)),</span></span><br><span class="line">                show.legend <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  geom_node_point<span class="punctuation">(</span>aes<span class="punctuation">(</span>size <span class="operator">=</span> Degree<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  shadowtext<span class="operator">::</span>geom_shadowtext<span class="punctuation">(</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> x<span class="punctuation">,</span> y <span class="operator">=</span> y<span class="punctuation">,</span></span><br><span class="line">                                  label <span class="operator">=</span> Compound.name<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                              bg.colour <span class="operator">=</span> <span class="string">&quot;white&quot;</span><span class="punctuation">,</span></span><br><span class="line">                              colour <span class="operator">=</span> <span class="string">&quot;black&quot;</span><span class="punctuation">)</span><span class="operator">+</span></span><br><span class="line">  theme_graph<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  scale_edge_color_gradient2<span class="punctuation">(</span>low <span class="operator">=</span> <span class="string">&quot;darkblue&quot;</span><span class="punctuation">,</span> mid <span class="operator">=</span> <span class="string">&quot;white&quot;</span><span class="punctuation">,</span> high <span class="operator">=</span> <span class="string">&quot;red&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ggsave<span class="punctuation">(</span>plot<span class="punctuation">,</span> filename <span class="operator">=</span> <span class="string">&quot;pathway_enrichment/cor_network.pdf&quot;</span><span class="punctuation">,</span> width <span class="operator">=</span> <span class="number">12</span><span class="punctuation">,</span> height <span class="operator">=</span> <span class="number">7</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_18.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/0_18.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="代谢物Correlation network"></p><h1 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h1><ul><li><strong>HILIC</strong>（亲水相互作用色谱）&amp; <strong>RPLC</strong>（反相色谱）：RPLC 色谱柱主要使用非极性固定相（C18、C8 等），而 HILIC 色谱柱则使用极性固定相（二氧化硅、酰胺等）。两种技术采用的流动相通常由乙腈和水组成，这使得两种液相色谱模式之间可以实现轻松切换。HILIC 和 RPLC 流动相的主要区别在于溶剂洗脱强度。对于 RPLC，乙腈是强洗脱溶剂。但对于HILIC，水是强洗脱溶剂。对于 RPLC，得到的色谱图通常是极性分析物到非极性分析物，而 HILIC 则相反。这种相反的洗脱顺序使 HILIC 成为更常用的 RPLC 的一个很好的补充技术。对于极性分析物和离子化分析物尤其如此，它们在 HILIC 模式下的保留时间更长。</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.bioengx.com/%E8%B4%A8%E8%B0%B1%E5%88%86%E6%9E%90%E6%9C%AF%E8%AF%AD%E6%9C%80%E5%85%A8%E8%A7%A3%E8%AF%BB/">质谱分析术语最全解读</a></li><li><a href="https://www.tidymass.org/start/whole_workflow/">Whole workflow using tidymass</a></li><li><a href="https://www.agilent.com/cs/library/applications/application-note-hilic%20versus-rplc-5994-1137zh-cn-agilent.pdf">极性分子的保留和分离 ― 关于何时使用 HILIC 与反相液相色谱柱的详细研究</a></li></ul><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生信软件 </tag>
            
            <tag> 代谢组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用metid构建代谢组数据库</title>
      <link href="/post/df57.html"/>
      <url>/post/df57.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>metid包能够用于in-house代谢物库构建，并可利用MS2 spectra进行代谢物鉴定。metid自带数据库，来自于公共数据库的整合。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span><span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span>remotes<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;remotes&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">remotes<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;tidymass/metid&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="数据库构建和使用"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="数据库构建和使用"></p><h1 id="建库"><a href="#建库" class="headerlink" title="建库"></a>建库</h1><h2 id="构建内部库"><a href="#构建内部库" class="headerlink" title="构建内部库"></a>构建内部库</h2><h3 id="质谱数据准备"><a href="#质谱数据准备" class="headerlink" title="质谱数据准备"></a>质谱数据准备</h3><p>将标准品原始质谱数据用<a href="http://www.proteowizard.org/download.html">ProteoWizard</a>转换为mzXM格式.</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="格式转换"></p><h3 id="标准品信息表"><a href="#标准品信息表" class="headerlink" title="标准品信息表"></a>标准品信息表</h3><p>将标准品信息整理至csv格式表格中，参考如下。<br>共11列：“Lab.ID”, “Compound.name”, “mz”, “RT”, “CAS.ID”, “HMDB.ID”, “KEGG.ID”, “Formula”, “mz.pos”, “mz.neg”, “Submitter”。也可以添加更多的信息，如“Family”, “Sub.pathway” 和“Note”。</p><p>Lab.ID: 不可重复</p><p>mz: 化合物准确的mass</p><p>RT: 保留时间，以秒为单位</p><p>mz.pos: 正离子模式下化合物的mz，如M+H。可设为NA</p><p>mz.neg: 负离子模式下化合物的mz，如M-H。可设为NA</p><p>Submitter: 个人或组织名称，可设为NA</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_3.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="info.csv"></p><p>新建目录<code>database_construction</code>，将正离子数据放在<code>database_construction/POS</code>中，将负离子数据放在<code>database_construction/NEG</code>中，标准品信息表<code>metabolite.info_RPLC.csv</code>放在<code>database_construction</code>中。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_4.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/df57_4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="数据集"></p><p><strong>注意</strong>：每个文件名必须包含碰撞能（collision energy），如<code>test_NCE25.mzXML</code>。</p><h3 id="建库-1"><a href="#建库-1" class="headerlink" title="建库"></a>建库</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>metid<span class="punctuation">)</span></span><br><span class="line">datapath<span class="operator">&lt;-</span>file.path<span class="punctuation">(</span><span class="string">&quot;./database_construction&quot;</span><span class="punctuation">)</span></span><br><span class="line">mydb <span class="operator">&lt;-</span> construct_database<span class="punctuation">(</span></span><br><span class="line">    path <span class="operator">=</span> datapath<span class="punctuation">,</span></span><br><span class="line">version <span class="operator">=</span> <span class="string">&quot;0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">metabolite.info.name <span class="operator">=</span> <span class="string">&quot;metabolite.info_RPLC.csv&quot;</span><span class="punctuation">,</span></span><br><span class="line">source <span class="operator">=</span> <span class="string">&quot;my lab&quot;</span><span class="punctuation">,</span></span><br><span class="line">link <span class="operator">=</span> <span class="string">&quot;http://xxx.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">creater <span class="operator">=</span> <span class="string">&quot;someone&quot;</span><span class="punctuation">,</span></span><br><span class="line">email <span class="operator">=</span> <span class="string">&quot;x@126.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">rt <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> <span class="comment"># Do the metabolites have RT information or not?</span></span><br><span class="line">mz.tol <span class="operator">=</span> <span class="number">15</span><span class="punctuation">,</span> <span class="comment"># m/z tolerance for the match between metabolites and precursor m/z of MS2 spectra.</span></span><br><span class="line">rt.tol <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span> <span class="comment"># RT tolerance for the match between metabolites and precursor m/z of MS2 spectra.</span></span><br><span class="line">threads <span class="operator">=</span> <span class="number">10</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存数据库</span></span><br><span class="line">save<span class="punctuation">(</span>mydb<span class="punctuation">,</span> file<span class="operator">=</span><span class="string">&quot;mydb&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：保存时前后名字必须一样。</p><h2 id="构建公共库"><a href="#构建公共库" class="headerlink" title="构建公共库"></a>构建公共库</h2><h3 id="安装massdatabase"><a href="#安装massdatabase" class="headerlink" title="安装massdatabase"></a>安装<a href="https://massdatabase.tidymass.org/index.html">massdatabase</a></h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remotes<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;tidymass/massdatabase&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>可将msp格式的数据库转换为metid数据库。<font color=#FF0000>目前有bug：Error in `dplyr::select()`: ! Can’t subset columns that don’t exist. ✖ Column `Name` doesn’t exist.</font></p><p>bug解决前可以下载已经构建好的公共库：<a href="https://tidymass.github.io/metid/articles/public_databases.html">Database provided for metid</a>。</p><h3 id="MassBank"><a href="#MassBank" class="headerlink" title="MassBank"></a><a href="https://github.com/MassBank/MassBank-data/releases">MassBank</a></h3><p>下载最新的release <a href="https://github.com/MassBank/MassBank-data/releases/download/2022.12.1/MassBank_NIST.msp">MassBank_NIST.msp</a>，将其放在当前目录下。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;C:/Users/liu/Downloads&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>metid<span class="punctuation">)</span></span><br><span class="line">massbank_database_2022.12.01 <span class="operator">&lt;-</span> construct_mona_database<span class="punctuation">(</span></span><br><span class="line">  file <span class="operator">=</span> <span class="string">&quot;MassBank_NIST.msp&quot;</span><span class="punctuation">,</span></span><br><span class="line">  path <span class="operator">=</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">  version <span class="operator">=</span> <span class="string">&quot;2022.12.01&quot;</span><span class="punctuation">,</span></span><br><span class="line">  source <span class="operator">=</span> <span class="string">&quot;MassBank&quot;</span><span class="punctuation">,</span></span><br><span class="line">  link <span class="operator">=</span> <span class="string">&quot;https://github.com/MassBank/MassBank-data/releases&quot;</span><span class="punctuation">,</span></span><br><span class="line">  creater <span class="operator">=</span> <span class="string">&quot;Hualin Liu&quot;</span><span class="punctuation">,</span></span><br><span class="line">  email <span class="operator">=</span> <span class="string">&quot;LHL371@126.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">  rt <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  threads <span class="operator">=</span> <span class="number">15</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">save<span class="punctuation">(</span>massbank_database_2022.12.01<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;massbank_database_2022.12.01&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="MoNA"><a href="#MoNA" class="headerlink" title="MoNA"></a><a href="https://mona.fiehnlab.ucdavis.edu/downloads">MoNA</a></h3><p>下载对应数据库，如此处下载<code>LC-MS Spectra (153,242 spectra)</code>，截至<a href="https://mona.fiehnlab.ucdavis.edu/spectra/statistics">2023.04.16</a>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>metid<span class="punctuation">)</span></span><br><span class="line">mona_database_2023.04.16 <span class="operator">&lt;-</span> construct_mona_database<span class="punctuation">(</span></span><br><span class="line">  file <span class="operator">=</span> <span class="string">&quot;MoNA-export-LC-MS_Spectra.msp&quot;</span><span class="punctuation">,</span></span><br><span class="line">  path <span class="operator">=</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">  version <span class="operator">=</span> <span class="string">&quot;2023.04.16&quot;</span><span class="punctuation">,</span></span><br><span class="line">  source <span class="operator">=</span> <span class="string">&quot;MoNA&quot;</span><span class="punctuation">,</span></span><br><span class="line">  link <span class="operator">=</span> <span class="string">&quot;https://mona.fiehnlab.ucdavis.edu/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  creater <span class="operator">=</span> <span class="string">&quot;Hualin Liu&quot;</span><span class="punctuation">,</span></span><br><span class="line">  email <span class="operator">=</span> <span class="string">&quot;LHL371@126.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">  rt <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  threads <span class="operator">=</span> <span class="number">10</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">save<span class="punctuation">(</span>mona_database_2023.04.16<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;mona_database_2023.04.16&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>massdatabase<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data <span class="operator">&lt;-</span> massdatabase<span class="operator">::</span>read_msp_data<span class="punctuation">(</span><span class="string">&quot;MoNA-export-LC-MS_Spectra.msp&quot;</span><span class="punctuation">,</span> source <span class="operator">=</span> <span class="string">&quot;mona&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">massdatabase<span class="operator">::</span>convert_mona2metid<span class="punctuation">(</span>data <span class="operator">=</span> data<span class="punctuation">,</span> path <span class="operator">=</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span> threads <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://tidymass.github.io/metid/articles/database_construction.html">Construct in-house MS2 datbase using metid</a></li><li><a href="https://tidymass.github.io/metid/articles/public_database_construction.html">Construct public MS2 datbase using metid</a></li></ul><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生信软件 </tag>
            
            <tag> 代谢组学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用xcms3处理和分析LC-MS数据</title>
      <link href="/post/377e.html"/>
      <url>/post/377e.html</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>本文档描述了xcms（version&gt;&#x3D;3）的LCMS实验的数据导入、探索、预处理和分析。示例和基本工作流程改编自Colin A.Smith的原始LC&#x2F;MS预处理和分析。</p><p>新版本使用<code>XCMSnExpe</code>对象（而不是旧的xcmsSet对象）作为预处理结果的容器。然而，为了支持依赖于xcmsSet对象的包和管道，可以使用as方法（即xset&lt;-as(x, “xcmsSet”)）将XCMSnExpe转换为xcmsSet对象，其中x是XCMSnxp对象。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>require<span class="punctuation">(</span><span class="string">&quot;BiocManager&quot;</span><span class="punctuation">,</span> quietly <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    install.packages<span class="punctuation">(</span><span class="string">&quot;BiocManager&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">BiocManager<span class="operator">::</span>install<span class="punctuation">(</span><span class="string">&quot;xcms&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><p>xcms支持（AIA&#x2F;ANDI）NetCDF、mzXML和mzML格式的LC&#x2F;MS数据。对于实际数据导入，使用Bioconductor的<a href="https://bioconductor.org/packages/3.15/mzR">mzR</a>。出于演示目的，我们将分析[1]中的数据子集，其研究了敲除脂肪酸酰胺水解酶（FAAH）基因在小鼠中的代谢后果。原始数据文件（NetCDF格式）随<code>faahKO</code>数据包提供。数据集包括来自6只敲除小鼠和6只野生型小鼠脊髓的样本。每个文件包含在正离子模式下以200-600 m&#x2F;z和2500-4500秒采集的质心模式（centroid mode）数据。为了加快处理速度，我们仅分析8个文件，且限定保留时间范围为2500到3500秒。</p><p>下面我们加载所有必需的包，在<code>faahKO</code>包中找到原始CDF文件，并构建描述实验设置的表型（phenodata）数据框。注意，对于实际实验，建议定义一个文件（表），其中包含原始数据文件的文件名以及每个文件的样本描述，作为附加列。然后，可以使用例如<code>read.table</code>导入该文件作为变量pd（而不是在下面的示例中在R中定义），并且可以将文件名传递给下面的<code>readMSData</code>函数，例如<code>files=paste0(MZML_PATH, &quot;/&quot;, pd$MZML_file)</code>，其中<code>MZML_PATH</code>是文件所在目录的路径，<code>&quot;mzMLfile&quot;</code>是phenodata文件中包含文件名那一列的<strong>列名</strong>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>xcms<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>faahKO<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>RColorBrewer<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>pander<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>magrittr<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>pheatmap<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>SummarizedExperiment<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Get the full path to the CDF files</span></span><br><span class="line">cdfs <span class="operator">&lt;-</span> dir<span class="punctuation">(</span>system.file<span class="punctuation">(</span><span class="string">&quot;cdf&quot;</span><span class="punctuation">,</span> package <span class="operator">=</span> <span class="string">&quot;faahKO&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> full.names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> recursive <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">,</span> <span class="number">5</span><span class="punctuation">,</span> <span class="number">6</span><span class="punctuation">,</span> <span class="number">7</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">,</span> <span class="number">11</span><span class="punctuation">,</span> <span class="number">12</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment">## Create a phenodata data.frame</span></span><br><span class="line">pd <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>sample_name <span class="operator">=</span> sub<span class="punctuation">(</span>basename<span class="punctuation">(</span>cdfs<span class="punctuation">)</span><span class="punctuation">,</span> pattern <span class="operator">=</span> <span class="string">&quot;.CDF&quot;</span><span class="punctuation">,</span> replacement <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> fixed <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">,</span> sample_group <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="built_in">rep</span><span class="punctuation">(</span><span class="string">&quot;KO&quot;</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">rep</span><span class="punctuation">(</span><span class="string">&quot;WT&quot;</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> stringsAsFactors <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>随后，我们使用<code>MSnbase</code>包中的<code>readMSData</code>方法将原始数据加载为<code>OnDiskMSnExpe</code>对象。MSnbase为质谱数据处理提供了基础结构和基础设施。此外，MSnbase可用于形心剖面模式（centroid profile-mode）MS数据（参见MSnbase包中的相应介绍）。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">raw_data <span class="operator">&lt;-</span> readMSData<span class="punctuation">(</span>files <span class="operator">=</span> cdfs<span class="punctuation">,</span> pdata <span class="operator">=</span> new<span class="punctuation">(</span><span class="string">&quot;NAnnotatedDataFrame&quot;</span><span class="punctuation">,</span> pd<span class="punctuation">)</span><span class="punctuation">,</span> mode <span class="operator">=</span> <span class="string">&quot;onDisk&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>接下来，我们将数据集限制在2500到3500秒的保留时间范围内。这仅仅是为了减少该示例的处理时间。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">raw_data <span class="operator">&lt;-</span> filterRt<span class="punctuation">(</span>raw_data<span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2500</span><span class="punctuation">,</span> <span class="number">3500</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>生成的<code>OnDiskMSnExpe</code>对象包含关于spectrum数量、保留时间、测量的总离子电流等的一般信息，但不包含完整的原始数据（即每个测量光谱的m&#x2F;z和强度值）。因此，它的内存占用相当小，是代表大型代谢组学实验的理想对象，同时允许执行简单的质量控制、数据检查和探索以及数据取子集操作。m&#x2F;z和强度值根据需要从原始数据文件中导入，因此原始数据文件的位置在初始数据导入后不应更改。</p><h1 id="初始数据检查"><a href="#初始数据检查" class="headerlink" title="初始数据检查"></a>初始数据检查</h1><p><code>OnDiskMSnExp</code>按spectrum组织MS数据，并提供<code>intensity</code>、<code>mz</code>和<code>rtime</code>方法以访问文件中的原始数据（测量的强度值、相应的m&#x2F;z和保留时间值）。此外，<code>spectra</code>方法可用于返回封装在spectrum对象中的所有数据。下面我们从对象中提取保留时间值。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>rtime<span class="punctuation">(</span>raw_data<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class="line">## 2501.378 2502.943 2504.508 2506.073 2507.638 2509.203</span><br></pre></td></tr></table></figure><p>即使实验由多个文件&#x2F;样本组成，所有数据都会作为一维矢量（one-dimensional vectors，rtime的一个数值型向量，一个向量列表for mz和intensity，每个各自都包含一个spectrum的值）返回。<code>fromFile</code>函数返回一个整型向量，提供值到原始文件的映射。下面我们使用<code>fromFile</code>索引按文件组织<code>mz</code>值。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mzs <span class="operator">&lt;-</span> mz<span class="punctuation">(</span>raw_data<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Split the list by file</span></span><br><span class="line">mzs_by_file <span class="operator">&lt;-</span> split<span class="punctuation">(</span>mzs<span class="punctuation">,</span> f <span class="operator">=</span> fromFile<span class="punctuation">(</span>raw_data<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">length</span><span class="punctuation">(</span>mzs_by_file<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] 8</span><br></pre></td></tr></table></figure><p>作为数据的第一次评估，我们在实验中绘制了每个文件的基峰色谱图（base peak chromatogram, BPC）。我们使用<code>chromatogram</code>方法并将<code>aggregationFun</code>设置为<code>&quot;max&quot;</code>，以返回每个spectrum的最大强度，从而根据原始数据创建BPC。为了创建总离子色谱图（total ion chromatogram），我们可以将<code>aggregationFun</code>设置为<code>sum</code>。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Get the base peak chromatograms. This reads data from the files.</span></span><br><span class="line">bpis <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>raw_data<span class="punctuation">,</span> aggregationFun <span class="operator">=</span> <span class="string">&quot;max&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">## Define colors for the two groups</span></span><br><span class="line">group_colors <span class="operator">&lt;-</span> paste0<span class="punctuation">(</span>brewer.pal<span class="punctuation">(</span><span class="number">3</span><span class="punctuation">,</span> <span class="string">&quot;Set1&quot;</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="string">&quot;60&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>group_colors<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;KO&quot;</span><span class="punctuation">,</span> <span class="string">&quot;WT&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Plot all chromatograms.</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_1.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>bpis<span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>raw_data<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="MChromatograms"></p><p><code>chromatogram</code>返回了一个<code>MCchromatograms</code>对象，该对象以二维矩阵形式组织各个<code>Chromatogram</code>对象（实际上包含chromatographic数据）：列表示样本，行（可选）表示m&#x2F;z和&#x2F;或保留时间范围。下面我们提取第一个样品的chromatogram，并获取其保留时间和强度值。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bpi_1 <span class="operator">&lt;-</span> bpis<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">head<span class="punctuation">(</span>rtime<span class="punctuation">(</span>bpi_1<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class="line">## 2501.378 2502.943 2504.508 2506.073 2507.638 2509.203</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>intensity<span class="punctuation">(</span>bpi_1<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006 </span><br><span class="line">##   43888    43960    43392    42632    42200    42288 </span><br></pre></td></tr></table></figure><p><code>chromatogram</code>法还支持从MS数据的m&#x2F;z-rt切片中提取chromatographic数据。在下一节中，我们将使用此方法为选定的峰创建提取的离子色谱图（extracted ion chromatogram, EIC）。</p><p>注意，<code>chromatogram</code>从每个文件读取原始数据以计算chromatogram。另一方面，<code>bpi</code>和<code>tic</code>方法不从原始文件读取任何数据，而是使用输入文件的头定义(header definition)中提供的相应信息（可能与实际数据不同）。</p><p>下面我们创建表示每个文件总离子流分布的箱线图。这些图对于发现有问题或失败的MS运行非常有用。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Get the total ion current by file</span></span><br><span class="line">tc <span class="operator">&lt;-</span> split<span class="punctuation">(</span>tic<span class="punctuation">(</span>raw_data<span class="punctuation">)</span><span class="punctuation">,</span> f <span class="operator">=</span> fromFile<span class="punctuation">(</span>raw_data<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">boxplot<span class="punctuation">(</span>tc<span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>raw_data<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        ylab <span class="operator">=</span> <span class="string">&quot;intensity&quot;</span><span class="punctuation">,</span> main <span class="operator">=</span> <span class="string">&quot;Total ion current&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Distribution of total ion currents per file"></p><p>此外，我们可以根据样品的BPC的相似性对样品进行聚类。这也有助于在实验中发现潜在的有问题的样本，或获得实验中样本分组的初步概述。由于样本之间的保留时间不完全相同，我们使用<code>bin</code>函数将强度分组在沿保留时间轴的固定时间范围（bins）中。在本示例中，我们使用的bin大小为2秒，默认值为0.5秒。聚类是使用完全连锁分级聚类（complete linkage hierarchical clustering）对合并的BPC的成对相关性进行的。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Bin the BPC</span></span><br><span class="line">bpis_bin <span class="operator">&lt;-</span> MSnbase<span class="operator">::</span>bin<span class="punctuation">(</span>bpis<span class="punctuation">,</span> binSize <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Calculate correlation on the log2 transformed base peak intensities</span></span><br><span class="line">cormat <span class="operator">&lt;-</span> cor<span class="punctuation">(</span>log2<span class="punctuation">(</span>do.call<span class="punctuation">(</span>cbind<span class="punctuation">,</span> lapply<span class="punctuation">(</span>bpis_bin<span class="punctuation">,</span> intensity<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">colnames<span class="punctuation">(</span>cormat<span class="punctuation">)</span> <span class="operator">&lt;-</span> rownames<span class="punctuation">(</span>cormat<span class="punctuation">)</span> <span class="operator">&lt;-</span> raw_data<span class="operator">$</span>sample_name</span><br><span class="line"></span><br><span class="line"><span class="comment">## Define which phenodata columns should be highlighted in the plot</span></span><br><span class="line">ann <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>group <span class="operator">=</span> raw_data<span class="operator">$</span>sample_group<span class="punctuation">)</span></span><br><span class="line">rownames<span class="punctuation">(</span>ann<span class="punctuation">)</span> <span class="operator">&lt;-</span> raw_data<span class="operator">$</span>sample_name</span><br><span class="line"></span><br><span class="line"><span class="comment">## Perform the cluster analysis</span></span><br><span class="line">pheatmap<span class="punctuation">(</span>cormat<span class="punctuation">,</span> annotation <span class="operator">=</span> ann<span class="punctuation">,</span> annotation_color <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>group <span class="operator">=</span> group_colors<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_3.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Grouping of samples based on similarity of their base peak chromatogram"></p><p>样本以成对方式聚类，样本索引的KO和WT样本具有最相似的BPC。</p><h1 id="色谱峰检测"><a href="#色谱峰检测" class="headerlink" title="色谱峰检测"></a>色谱峰检测</h1><p>接下来，我们使用<code>centWave</code>算法进行色谱峰检测[2]。然而，在运行峰值检测之前，强烈建议目视检查内参或已知化合物的提取离子色谱图，以评估和调整峰值检测设置，因为默认设置不适用于大多数LCMS实验。centWave的两个最关键的参数是<code>peakwidth</code>（色谱峰宽度的预期范围）和<code>ppm</code>（对应于一个色谱峰的centroids m&#x2F;z值的最大预期偏差；这通常比制造商规定的ppm大得多）参数。为了评估典型的色谱峰宽度，我们绘制了一个峰的EIC。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Define the rt and m/z range of the peak area</span></span><br><span class="line">rtr <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2700</span><span class="punctuation">,</span> <span class="number">2900</span><span class="punctuation">)</span></span><br><span class="line">mzr <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">334.9</span><span class="punctuation">,</span> <span class="number">335.1</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">## extract the chromatogram</span></span><br><span class="line">chr_raw <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>raw_data<span class="punctuation">,</span> mz <span class="operator">=</span> mzr<span class="punctuation">,</span> rt <span class="operator">=</span> rtr<span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_raw<span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>chr_raw<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_4.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Extracted ion chromatogram for one peak"></p><p>注意，如果在特定扫描（即特定保留时间）中，在各自的mz范围内没有测量到信号，则通过<code>chromatogram</code>法提取的Chromatogram对象包含<code>NA值</code>。反映在上图中为不连续的线。</p><p>上面的峰值宽度约为50秒。<code>peakwidth</code>参数应设置为适应数据集中预期的峰值宽度。对于当前示例数据集，我们将其设置为<code>20,80</code>。</p><p>对于<code>ppm</code>参数，我们提取对应于上述峰值的完整MS数据（强度、保留时间和m&#x2F;z值）。为此，我们首先按保留时间过滤原始对象，然后按m&#x2F;z过滤，最后用<code>type=“XIC”</code>绘制对象以生成下图。我们使用pipe（<code>%&gt;%</code>）命令更好地说明了相应的工作流。还应注意，在这种类型的图中，如果存在色谱峰，则默认显示色谱峰。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">raw_data <span class="operator">%&gt;%</span></span><br><span class="line">    filterRt<span class="punctuation">(</span>rt <span class="operator">=</span> rtr<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    filterMz<span class="punctuation">(</span>mz <span class="operator">=</span> mzr<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    plot<span class="punctuation">(</span>type <span class="operator">=</span> <span class="string">&quot;XIC&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_5.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Visualization of the raw MS data for one peak"></p><p><strong>图注</strong>：对于每个图：上面板：根据保留时间绘制强度值的色谱图；下面板：m&#x2F;z根据保留时间绘图。各个数据点根据强度进行着色。</p><p>在目前的数据中，m&#x2F;z值实际上没有变化。通常可以看到m&#x2F;z值（下面板）散布在化合物的实际m&#x2F;z值周围。centWave算法的第一步基于连续扫描的m&#x2F;z值的差异定义所谓的感兴趣区域（regions of interest, ROI）。具体而言，如果ROI的m&#x2F;z和平均m&#x2F;z之间的差小于用户定义的ppm参数，则来自连续扫描的m&#x2F;z值被包括在ROI中。因此，ppm的合理选择可以是来自作为色谱峰一部分的相邻扫描&#x2F;光谱（scans&#x2F;spectra）的数据点的最大m&#x2F;z差。建议检查许多化合物（内标或样品中已知存在的化合物）的m&#x2F;z值范围，并根据这些确定centWave的ppm参数。</p><p>注意，我们也可以对提取的离子色谱图（ion chromatogram）进行峰检测。这有助于评估不同的峰值检测设置。只需注意，提取的离子色谱图上的峰值检测不会考虑ppm参数，并且背景信号的估计与完整数据集上的峰值探测不同；因此，<code>snthresh</code>的值将具有不同的结果。下面我们使用<code>findChromPeaks</code>函数对提取的离子色谱图进行峰值检测。提交的参数对象定义将使用的算法，并允许定义此算法的设置。我们使用带有默认设置的centWave算法，<code>snthresh</code>除外。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xchr <span class="operator">&lt;-</span> findChromPeaks<span class="punctuation">(</span>chr_raw<span class="punctuation">,</span> param <span class="operator">=</span> CentWaveParam<span class="punctuation">(</span>snthresh <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>我们可以使用<code>chromPeaks</code>函数访问已识别的色谱峰。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>chromPeaks<span class="punctuation">(</span>xchr<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##            rt    rtmin    rtmax       into       intb  maxo  sn row column</span><br><span class="line">## [1,] 2781.505 2761.160 2809.674  412134.25  355516.37 16856  13   1      1</span><br><span class="line">## [2,] 2786.199 2764.290 2812.803 1496244.21 1391821.33 58736  20   1      2</span><br><span class="line">## [3,] 2734.556 2714.211 2765.855   21579.37   18449.43   899   4   1      3</span><br><span class="line">## [4,] 2797.154 2775.245 2815.933  159058.78  150289.31  6295  12   1      3</span><br><span class="line">## [5,] 2784.635 2761.160 2808.109   54947.54   37923.53  2715   2   1      4</span><br><span class="line">## [6,] 2859.752 2845.668 2878.532   13895.21   13874.87   905 904   1      4</span><br></pre></td></tr></table></figure><p>与<code>chromPeaks</code>矩阵相似，还有一个数据框<code>chromPeakData</code>，允许为每个色谱峰添加任意注释。下面我们提取这个数据框，默认情况下，该数据框只包含识别峰值的MS水平。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chromPeakData<span class="punctuation">(</span>xchr<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## DataFrame with 12 rows and 4 columns</span><br><span class="line">##      ms_level is_filled       row    column</span><br><span class="line">##     &lt;integer&gt; &lt;logical&gt; &lt;integer&gt; &lt;integer&gt;</span><br><span class="line">## 1           1     FALSE         1         1</span><br><span class="line">## 2           1     FALSE         1         2</span><br><span class="line">## 3           1     FALSE         1         3</span><br><span class="line">## 4           1     FALSE         1         3</span><br><span class="line">## 5           1     FALSE         1         4</span><br><span class="line">## ...       ...       ...       ...       ...</span><br><span class="line">## 8           1     FALSE         1         4</span><br><span class="line">## 9           1     FALSE         1         5</span><br><span class="line">## 10          1     FALSE         1         6</span><br><span class="line">## 11          1     FALSE         1         7</span><br><span class="line">## 12          1     FALSE         1         8</span><br></pre></td></tr></table></figure><p>接下来，我们在提取的离子色谱图中绘制已识别的色谱峰。我们使用<code>col</code>参数为各个色谱线上色。还可以为识别的峰值指定颜色，<code>peakCol</code>为前景&#x2F;边框颜色，<code>peakBg</code>为背景&#x2F;填充颜色。必须为<code>chromPeaks</code>列出的每个色谱峰提供一种颜色。下面我们定义了一种颜色，以指示样本所在的样本组，并使用峰<code>“sample”</code>列中的样本信息为每个色谱峰分配正确的颜色。更多峰值突出显示选项将在下面进一步描述。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sample_colors <span class="operator">&lt;-</span> group_colors<span class="punctuation">[</span>xchr<span class="operator">$</span>sample_group<span class="punctuation">]</span></span><br><span class="line">plot<span class="punctuation">(</span>xchr<span class="punctuation">,</span> col <span class="operator">=</span> sample_colors<span class="punctuation">,</span></span><br><span class="line">     peakBg <span class="operator">=</span> sample_colors<span class="punctuation">[</span>chromPeaks<span class="punctuation">(</span>xchr<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;column&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_6.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Signal for an example peak"></p><p><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。已识别色谱峰的峰面积用样品组颜色突出显示。</p><p>最后，我们对整个数据集进行色谱峰检测。请注意，我们将参数<code>prefilter</code>设置为<code>c(6, 5000)</code>，将<code>noise</code>设置为<code>5000</code>，以减少该示例的运行时间。使用此设置，我们只考虑峰值检测步骤中值大于5000的信号。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cwp <span class="operator">&lt;-</span> CentWaveParam<span class="punctuation">(</span>peakwidth <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">20</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">)</span><span class="punctuation">,</span> noise <span class="operator">=</span> <span class="number">5000</span><span class="punctuation">,</span></span><br><span class="line">                     prefilter <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">6</span><span class="punctuation">,</span> <span class="number">5000</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">xdata <span class="operator">&lt;-</span> findChromPeaks<span class="punctuation">(</span>raw_data<span class="punctuation">,</span> param <span class="operator">=</span> cwp<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>结果作为<code>XCMSnExp</code>对象返回，该对象通过存储LC&#x2F;GC-MS预处理结果来扩展<code>OnDiskMSnExp</code>对象。这也意味着，所有设置和过滤数据或访问（原始）数据的方法都是从<code>OnDiskMSnExp</code>对象继承的，因此可以重新使用。还请注意，通过使用参数<code>add＝TRUE</code>调用<code>findChromPeaks</code>，可以对<code>xdata</code>对象执行额外的峰值检测（例如，在MS level＞1的数据上）。</p><p>色谱峰检测的结果可通过<code>chromPeaks</code>方法获得。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>chromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">##           mz mzmin mzmax       rt    rtmin    rtmax      into      intb  maxo    sn sample</span><br><span class="line">## CP0001 453.2 453.2 453.2 2509.203 2501.378 2527.982 1007409.0 1007380.8 38152 38151      1</span><br><span class="line">## CP0002 236.1 236.1 236.1 2518.593 2501.378 2537.372  253501.0  226896.3 12957    11      1</span><br><span class="line">## CP0003 594.0 594.0 594.0 2601.535 2581.191 2637.529  161042.2  149297.3  7850    13      1</span><br><span class="line">## CP0004 577.0 577.0 577.0 2604.665 2581.191 2626.574  136105.2  129195.5  6215    13      1</span><br><span class="line">## CP0005 369.2 369.2 369.2 2587.451 2556.151 2631.269  483852.3  483777.1  7215  7214      1</span><br><span class="line">## CP0006 369.2 369.2 369.2 2568.671 2557.716 2578.061  144624.8  144602.9  7033  7032      1</span><br></pre></td></tr></table></figure><p>返回的<code>matrix</code>提供了每个已识别色谱峰的m&#x2F;z和保留时间范围，以及整合的信号强度（“into”）和最大峰强度（“maxo”）。“sample”列包含确定峰值的对象&#x2F;实验中样本的索引。</p><p>可以使用<code>chromPeakData</code>函数提取每个峰的注释。该数据框还可以用于为每个检测到的峰添加&#x2F;存储任意注释。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chromPeakData<span class="punctuation">(</span>xdata<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## DataFrame with 1707 rows and 2 columns</span><br><span class="line">##         ms_level is_filled</span><br><span class="line">##        &lt;integer&gt; &lt;logical&gt;</span><br><span class="line">## CP0001         1     FALSE</span><br><span class="line">## CP0002         1     FALSE</span><br><span class="line">## CP0003         1     FALSE</span><br><span class="line">## CP0004         1     FALSE</span><br><span class="line">## CP0005         1     FALSE</span><br><span class="line">## ...          ...       ...</span><br><span class="line">## CP1703         1     FALSE</span><br><span class="line">## CP1704         1     FALSE</span><br><span class="line">## CP1705         1     FALSE</span><br><span class="line">## CP1706         1     FALSE</span><br><span class="line">## CP1707         1     FALSE</span><br></pre></td></tr></table></figure><p>峰检测不会总是完美地工作，从而导致峰检测伪影（artifacts），例如重叠峰或人为分割峰。<code>refineChromPeaks</code>函数允许通过去除未通过特定标准的已识别峰或合并人工拆分的色谱峰来优化峰检测结果。使用参数对象<code>CleanPeaksParam</code>和<code>FilterIntensityParam</code>，可以分别删除保留时间范围或强度低于阈值的峰（有关更多详细信息和示例，请参阅各自的帮助页面）。使用<code>MergeNeighbringPeaksParam</code>可以合并色谱峰。下面我们对峰检测结果进行进一步处理，如果它们之间的信号低于较小峰最大强度的75%，合并每个文件在4秒窗口中重叠的峰值（merging peaks overlapping in a 4 second window per file）。有关设置和方法的详细说明，请参阅<code>MergeNeighborgingPeaksParam</code>帮助页面。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mpp <span class="operator">&lt;-</span> MergeNeighboringPeaksParam<span class="punctuation">(</span>expandRt <span class="operator">=</span> <span class="number">4</span><span class="punctuation">)</span></span><br><span class="line">xdata_pp <span class="operator">&lt;-</span> refineChromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">,</span> mpp<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>如下展示了合并峰的示例。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mzr_1 <span class="operator">&lt;-</span> 305.1 <span class="operator">+</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="number">0.01</span><span class="punctuation">)</span></span><br><span class="line">chr_1 <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>filterFile<span class="punctuation">(</span>xdata<span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span> mz <span class="operator">=</span> mzr_1<span class="punctuation">)</span></span><br><span class="line">chr_2 <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>filterFile<span class="punctuation">(</span>xdata_pp<span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span> mz <span class="operator">=</span> mzr_1<span class="punctuation">)</span></span><br><span class="line">par<span class="punctuation">(</span>mfrow <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_7.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_1<span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_8.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_2<span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_7.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Result from the peak refinement step: 处理前的数据" style="width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_8.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Result from the peak refinement step: 处理后的数据，峰被合并" style="width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p>对于以上色谱图centWave检测到3个峰（1个峰代表整个区域，两个较小的峰，见上图中的左侧面板）。<code>MergeNeighborgingPeaksParam</code>的峰细化（refinement ）将它们减少为单个峰（上图中的右面板）。注意，这种细化不会合并相邻峰值，因为它们之间的信号低于一定比例（参见下图）。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mzr_1 <span class="operator">&lt;-</span> 496.2 <span class="operator">+</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="number">0.01</span><span class="punctuation">)</span></span><br><span class="line">chr_1 <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>filterFile<span class="punctuation">(</span>xdata<span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span> mz <span class="operator">=</span> mzr_1<span class="punctuation">)</span></span><br><span class="line">chr_2 <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>filterFile<span class="punctuation">(</span>xdata_pp<span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span> mz <span class="operator">=</span> mzr_1<span class="punctuation">)</span></span><br><span class="line">par<span class="punctuation">(</span>mfrow <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_9.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_1<span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_10.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_2<span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_9.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Result from the peak refinement step: 处理前的数据" style="width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_10.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Result from the peak refinement step: 处理后的数据，峰未合并" style="width: 300px;height: 300px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p>还应注意，可以对提取的离子色谱图进行峰细化。这可以例如用于微调参数的设置。为了说明这一点，我们下面对提取的离子色谱图<code>chr_1</code>进行了峰细化，减少了<code>minProp</code>参数，以强制连接两个峰。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res <span class="operator">&lt;-</span> refineChromPeaks<span class="punctuation">(</span>chr_1<span class="punctuation">,</span> MergeNeighboringPeaksParam<span class="punctuation">(</span>minProp <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">chromPeaks<span class="punctuation">(</span>res<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">##         mz mzmin mzmax       rt    rtmin    rtmax     into intb    maxo  sn</span><br><span class="line">## CPM1 496.2 496.2 496.2 3384.012 3294.809 3412.181 45940118   NA 1128960 177</span><br><span class="line">##      sample row column</span><br><span class="line">## CPM1      1   1      1</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;cxms_11.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>res<span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_11.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="强制连接两个峰"></p><p>在继续之前，我们用峰细化的结果替换<code>xdata</code>对象。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdata <span class="operator">&lt;-</span> xdata_pp</span><br></pre></td></tr></table></figure><p>下面我们使用<code>chromPeaks</code>矩阵中的数据来计算每个文件的一些摘要。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">summary_fun <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>z<span class="punctuation">)</span></span><br><span class="line">    <span class="built_in">c</span><span class="punctuation">(</span>peak_count <span class="operator">=</span> nrow<span class="punctuation">(</span>z<span class="punctuation">)</span><span class="punctuation">,</span> rt <span class="operator">=</span> quantile<span class="punctuation">(</span>z<span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;rtmax&quot;</span><span class="punctuation">]</span> <span class="operator">-</span> z<span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;rtmin&quot;</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">T</span> <span class="operator">&lt;-</span> lapply<span class="punctuation">(</span>split.data.frame<span class="punctuation">(</span>chromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">,</span> f <span class="operator">=</span> chromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">,</span> FUN <span class="operator">=</span> summary_fun<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">T</span> <span class="operator">&lt;-</span> do.call<span class="punctuation">(</span>rbind<span class="punctuation">,</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">rownames<span class="punctuation">(</span><span class="built_in">T</span><span class="punctuation">)</span> <span class="operator">&lt;-</span> basename<span class="punctuation">(</span>fileNames<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pandoc.table<span class="punctuation">(</span><span class="built_in">T</span><span class="punctuation">,</span> caption <span class="operator">=</span> paste0<span class="punctuation">(</span><span class="string">&quot;Summary statistics on identified chromatographic&quot;</span><span class="punctuation">,</span> <span class="string">&quot; peaks. Shown are number of identified peaks per&quot;</span><span class="punctuation">,</span> <span class="string">&quot; sample and widths/duration of chromatographic &quot;</span><span class="punctuation">,</span> <span class="string">&quot;peaks.&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">------------------------------------------------------------------------</span><br><span class="line">    &amp;nbsp;      peak_count   rt.0%   rt.25%   rt.50%   rt.75%   rt.100%</span><br><span class="line">-------------- ------------ ------- -------- -------- -------- ---------</span><br><span class="line"> **ko15.CDF**      400       10.95   34.43    42.25    53.21     319.2</span><br><span class="line"></span><br><span class="line"> **ko16.CDF**      522       10.95   32.86    42.25    53.21     151.8</span><br><span class="line"></span><br><span class="line"> **ko21.CDF**      215       10.95   42.25    50.08    64.95     164.3</span><br><span class="line"></span><br><span class="line"> **ko22.CDF**      239       10.95   37.56    46.95    59.47     147.1</span><br><span class="line"></span><br><span class="line"> **wt15.CDF**      408       10.95    31.3    42.25    53.21     161.2</span><br><span class="line"></span><br><span class="line"> **wt16.CDF**      366       10.95   35.99    45.38    59.47     162.8</span><br><span class="line"></span><br><span class="line"> **wt21.CDF**      228       10.95   35.99    48.51    65.73     172.1</span><br><span class="line"></span><br><span class="line"> **wt22.CDF**      334       10.95   35.99    43.82     57.9     228.5</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Table: Summary statistics on identified chromatographic peaks. Shown are number of identified peaks per sample and widths/duration of chromatographic peaks.</span><br></pre></td></tr></table></figure><p>我们还可以使用<code>plotChromPeaks</code>函数绘制一个文件的m&#x2F;z——保留时间空间中已识别色谱峰的位置。下面我们绘制了第三个样品的色谱峰。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_12.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plotChromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">,</span> file <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_12.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Identified chromatographic peaks in the m/z by retention time space for one sample"></p><p>为了获得峰检测的全局概览，我们可以沿着保留时间轴绘制每个文件的已识别峰的频率。这允许识别MS运行中的时间段，在该时间段中识别出更多数量的峰，并评估这在文件之间是否一致。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_13.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plotChromPeakImage<span class="punctuation">(</span>xdata<span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_13.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Frequency of identified chromatographic peaks along the retention time axis"></p><p><strong>图注</strong>：频率是彩色编码的，较高的频率由黄-白表示。每行显示一个文件的峰值频率。</p><p>接下来，我们重点介绍前面示例峰的已识别色谱峰。在对应于已知峰或内标的峰列表上评估这样的图有助于确保峰检测设置是适当的并且正确地识别预期峰。我们从峰检测结果对象中提取离子色谱图，其中还包含我们可以使用<code>chromPeaks</code>函数提取的该离子的已识别色谱峰。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chr_ex <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>xdata<span class="punctuation">,</span> mz <span class="operator">=</span> mzr<span class="punctuation">,</span> rt <span class="operator">=</span> rtr<span class="punctuation">)</span></span><br><span class="line">chromPeaks<span class="punctuation">(</span>chr_ex<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">##         mz mzmin mzmax       rt    rtmin    rtmax      into      intb  maxo sn</span><br><span class="line">## CP0045 335   335   335 2781.505 2761.160 2809.674  412134.3  383167.4 16856 23</span><br><span class="line">## CP0501 335   335   335 2786.199 2764.290 2812.803 1496244.2 1461187.3 58736 72</span><br><span class="line">## CP1041 335   335   335 2797.154 2775.245 2815.933  159058.8  149229.6  6295 13</span><br><span class="line">## CP2002 335   335   335 2786.199 2764.290 2812.803  932645.2  915333.8 35856 66</span><br><span class="line">## CP2391 335   335   335 2792.461 2768.987 2823.760  876585.5  848569.1 27200 36</span><br><span class="line">##        sample row column</span><br><span class="line">## CP0045      1   1      1</span><br><span class="line">## CP0501      2   1      2</span><br><span class="line">## CP1041      3   1      3</span><br><span class="line">## CP2002      6   1      6</span><br><span class="line">## CP2391      7   1      7</span><br></pre></td></tr></table></figure><p>我们还可以绘制提取的离子色谱图。已识别的色谱峰将在图中自动突出显示。下面我们用矩形突出显示色谱峰，从峰的最小到最大rt，从0到峰的最大信号。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sample_colors <span class="operator">&lt;-</span> group_colors<span class="punctuation">[</span>chr_ex<span class="operator">$</span>sample_group<span class="punctuation">]</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_14.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_ex<span class="punctuation">,</span> col <span class="operator">=</span> sample_colors<span class="punctuation">,</span> peakType <span class="operator">=</span> <span class="string">&quot;rectangle&quot;</span><span class="punctuation">,</span> peakCol <span class="operator">=</span> sample_colors<span class="punctuation">[</span>chromPeaks<span class="punctuation">(</span>chr_ex<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> peakBg <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_14.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Signal for an example peak"></p><p><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。矩形表示每个样品的色谱峰。</p><p>作为上述矩形可视化的替代方案，可以用一个点表示每个峰的顶点位置（将参数<code>type=&quot;point&quot;</code>传递给函数），或通过指定<code>type=&quot;polygon&quot;</code>绘制实际识别的峰。为了完全省略突出显示已识别的峰（例如绘制基本峰色谱图或类似图），可以使用<code>type = &quot;none&quot;</code>”。下面我们使用<code>type=&quot;polygon&quot;</code>填充每个样品中每个已识别色谱峰的峰面积。然而，在这样的图中是否仍然可以识别单个峰取决于从中绘制峰的样本数量。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_15.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_ex<span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>chr_raw<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">,</span> lwd <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">     peakBg <span class="operator">=</span> sample_colors<span class="punctuation">[</span>chromPeaks<span class="punctuation">(</span>chr_ex<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_15.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Signal for an example peak"><br><strong>图注</strong>：红色和蓝色分别代表KO和野生型样本。已识别色谱峰的信号区域用颜色填充。</p><p>注意，我们还可以通过在<code>chromPeaks</code>方法中提供各自的m&#x2F;z和保留时间范围以及<code>mz</code>和<code>rt</code>参数，提取选定区域的已鉴定色谱峰。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pander<span class="punctuation">(</span>chromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">,</span> mz <span class="operator">=</span> mzr<span class="punctuation">,</span> rt <span class="operator">=</span> rtr<span class="punctuation">)</span><span class="punctuation">,</span> caption <span class="operator">=</span> paste<span class="punctuation">(</span><span class="string">&quot;Identified chromatographic peaks in a selected &quot;</span><span class="punctuation">,</span> <span class="string">&quot;m/z and retention time range.&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">   &amp;nbsp;     mz    mzmin   mzmax    rt    rtmin   rtmax    into      intb</span><br><span class="line">------------ ----- ------- ------- ------ ------- ------- --------- ---------</span><br><span class="line"> **CP0045**   335    335     335    2782   2761    2810    412134    383167</span><br><span class="line"></span><br><span class="line"> **CP0501**   335    335     335    2786   2764    2813    1496244   1461187</span><br><span class="line"></span><br><span class="line"> **CP1041**   335    335     335    2797   2775    2816    159059    149230</span><br><span class="line"></span><br><span class="line"> **CP2002**   335    335     335    2786   2764    2813    932645    915334</span><br><span class="line"></span><br><span class="line"> **CP2391**   335    335     335    2792   2769    2824    876586    848569</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Table: Identified chromatographic peaks in a selected  m/z and retention time range. (continued below)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------</span><br><span class="line">   &amp;nbsp;     maxo    sn   sample</span><br><span class="line">------------ ------- ---- --------</span><br><span class="line"> **CP0045**   16856   23     1</span><br><span class="line"></span><br><span class="line"> **CP0501**   58736   72     2</span><br><span class="line"></span><br><span class="line"> **CP1041**   6295    13     3</span><br><span class="line"></span><br><span class="line"> **CP2002**   35856   66     6</span><br><span class="line"></span><br><span class="line"> **CP2391**   27200   36     7</span><br><span class="line">----------------------------------</span><br></pre></td></tr></table></figure><p>最后，我们还绘制了每个样本的峰强度分布。这允许调查样本之间的峰信号是否存在系统差异。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Extract a list of per-sample peak intensities (in log2 scale)</span></span><br><span class="line">ints <span class="operator">&lt;-</span> split<span class="punctuation">(</span>log2<span class="punctuation">(</span>chromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;into&quot;</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">,</span> f <span class="operator">=</span> chromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_16.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">boxplot<span class="punctuation">(</span>ints<span class="punctuation">,</span> varwidth <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>xdata<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">,</span> ylab <span class="operator">=</span> <span class="built_in">expression</span><span class="punctuation">(</span><span class="built_in">log</span><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span><span class="operator">~</span>intensity<span class="punctuation">)</span><span class="punctuation">,</span> main <span class="operator">=</span> <span class="string">&quot;Peak intensities&quot;</span><span class="punctuation">)</span></span><br><span class="line">grid<span class="punctuation">(</span>nx <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">,</span> ny <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_16.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Peak intensity distribution per sample"><br>注意，除了上述色谱峰的识别之外，还可以使用<code>manualChromPeaks</code>函数手动定义和添加色谱峰（更多信息请参见<code>?manualChronPeaks</code>帮助页面）。</p><h1 id="Alignment"><a href="#Alignment" class="headerlink" title="Alignment"></a>Alignment</h1><p>分析物在色谱中洗脱的时间可能因样品（甚至化合物）而异。在上一节中作为示例所示的提取离子色谱图中已经可以观察到这种差异。对齐步骤，也称为保留时间校正，旨在通过沿保留时间轴移动信号来调整这一点，以在实验中对齐不同样本之间的信号。</p><p>存在很多的对齐算法（参见[3]），其中一些算法也在xcms中实现。在xcms中执行对齐&#x2F;保留时间校正的方法是<code>adjustRtime</code>，其根据所提供的参数类别使用不同的对齐算法。</p><p>在下面的示例中，我们使用<em>obiwarp</em>方法[4]来对齐样本。我们使用<code>binSize＝0.6</code>，它在mz为0.6的bins中创建扭曲函数（warping functions）。此外，这里建议修改每个实验的设置，并评估保留时间校正是否对齐了内参或已知化合物。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdata <span class="operator">&lt;-</span> adjustRtime<span class="punctuation">(</span>xdata<span class="punctuation">,</span> param <span class="operator">=</span> ObiwarpParam<span class="punctuation">(</span>binSize <span class="operator">=</span> <span class="number">0.6</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><code>adjustRtime</code>，除了计算每个光谱的校正保留时间外，还调整了已鉴定色谱峰的报告保留时间。</p><p>为了提取校正后的保留时间，我们可以使用<code>adjustedRtime</code>方法，或者简单地使用<code>rtime</code>方法，如果存在的话，默认情况下会从<code>XCMSnExp</code>对象返回校正后的保留时间。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Extract adjusted retention times</span></span><br><span class="line">head<span class="punctuation">(</span>adjustedRtime<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006</span><br><span class="line">## 2501.378 2502.958 2504.538 2506.118 2507.699 2509.280</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Or simply use the rtime method</span></span><br><span class="line">head<span class="punctuation">(</span>rtime<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## F1.S0001 F1.S0002 F1.S0003 F1.S0004 F1.S0005 F1.S0006</span><br><span class="line">## 2501.378 2502.958 2504.538 2506.118 2507.699 2509.280</span><br></pre></td></tr></table></figure><p>原始保留时间可以从包含与<code>rtime(xdata，adjusted=FALSE)</code>对齐的数据的<code>XCMSnExp</code>中提取。</p><p>为了评估对齐的影响，我们利用校正后的数据绘制BPC。此外，我们使用<code>plotAdjustedRtime</code>函数绘制每个样本的校正后保留时间与原始保留时间的差异。对于基峰色谱图，从结果对象中提取已识别的色谱峰是没有意义的。因此，我们在<code>chromatogram</code>调用中使用参数<code>include=&quot;none&quot;</code>，以在返回的对象中不包含色谱峰。请注意，也可以通过在<code>plot</code>调用中设置<code>peakType = &quot;none&quot;</code>来避免绘制它们。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Get the base peak chromatograms.</span></span><br><span class="line">bpis_adj <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>xdata<span class="punctuation">,</span> aggregationFun <span class="operator">=</span> <span class="string">&quot;max&quot;</span><span class="punctuation">,</span> include <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">)</span></span><br><span class="line">par<span class="punctuation">(</span>mfrow <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span> mar <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">4.5</span><span class="punctuation">,</span> <span class="number">4.2</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_17.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>bpis_adj<span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>bpis_adj<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Plot also the difference of adjusted to raw retention time.</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_18.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plotAdjustedRtime<span class="punctuation">(</span>xdata<span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>xdata<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_17.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_17.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obiwarp aligned data"><br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_18.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_18.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Obiwarp aligned data"></p><p><strong>图注</strong>：对齐后的基峰色谱图（顶部）和沿保留时间轴的校正保留时间与原始保留时间之间的差异（底部）。</p><p>校正后的保留时间与原始保留时间之间的差异太大，可能表明样品或对齐效果不佳（poorly performing samples or alignment）。</p><p><strong>注意</strong>：<code>XCMSnExp</code>对象保存原始数据以及校正后的保留时间，在大多数情况下，子设置（subsetting）将删除校正后的保持时间。因此，一些情况下用校正后的保留时间代替原始保留时间可能是有用的。这可以通过<code>applyAdjustedRtime</code>完成。</p><p>最后，我们评估了对齐对测试峰的影响。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">par<span class="punctuation">(</span>mfrow <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">## Plot the raw data</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_19.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_raw<span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>chr_raw<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Extract the chromatogram from the adjusted object</span></span><br><span class="line">chr_adj <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>xdata<span class="punctuation">,</span> rt <span class="operator">=</span> rtr<span class="punctuation">,</span> mz <span class="operator">=</span> mzr<span class="punctuation">)</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_20.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chr_adj<span class="punctuation">,</span> col <span class="operator">=</span> group_colors<span class="punctuation">[</span>chr_raw<span class="operator">$</span>sample_group<span class="punctuation">]</span><span class="punctuation">,</span> peakType <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_19.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_19.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Example extracted ion chromatogram before (top) and after alignment (bottom)"><br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_20.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_20.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Example extracted ion chromatogram before (top) and after alignment (bottom)"></p><h2 id="Subset-based-alignment"><a href="#Subset-based-alignment" class="headerlink" title="Subset-based alignment"></a>Subset-based alignment</h2><p>在一些实验中，仅根据样本的子集进行比对可能会有所帮助，例如，如果QC样本定期注射（injected ），或者如果实验包含空白样本。xcms中的对齐方法允许估计样本子集（不包括空白样本的所有样本或在测量运行期间定期注入的质控样本）的保留时间漂移，并使用这些来调整整个数据集。</p><p>参数<code>subset</code>（<code>PeakGroupsParam</code>或<code>ObiwarpParam</code>对象）可用于定义样本子集，整个数据集的对齐将基于该样本子集（例如，子集是QC样本的索引），参数<code>subsetAdjust</code>允许指定调整遗漏样本（left-out samples）的方法。目前有两个选项可用：</p><ul><li><code>subsetAdjust = &quot;previous&quot;</code>：根据先前子集样本（例如QC样本）的对齐结果调整非子集样本的保留时间。如果样本的顺序为A1、B1、B2、A2、B3、B4，A代表QC样本，B代表研究样本，则使用<code>subset = c(1, 4)</code>和<code>subsetAdjust = &quot;previous&quot;</code>将导致所有A样本彼此对齐，而非子集样本B1和B2将根据子集样本A1和B3以及B4对A2样本的对齐结果进行调整。</li><li><code>subsetAdjust = &quot;average&quot;</code>：基于先前和后续子集样本的对齐结果的内插（interpolation）来调整非子集样本的保留时间。在上述示例中，B1将基于子集（QC）样本A1和A2之间的校正保留时间的平均值进行调整。由于在非子集样本B3和B4之后没有子集样本，因此将仅基于A2的对齐结果来校正这些样本。注意，加权平均值用于计算经校正的保留时间平均值，其使用非子集样本与子集样本的索引之差的倒数作为权重。因此，如果我们有类似A1、B1、B2、A2的设置，在校正非子集样本B1时，A1的校正保留时间将比A2的更大，从而使其校正保留时间更接近A1的保留时间，而不是A2的保留时间。请参见下面的示例。</li></ul><p>这两种情况都需要对对象内的样本进行有意义的&#x2F;正确的排序（例如按注入索引排序）。</p><p>以下示例旨在说明这些对齐选项的效果。我们假设faahKO数据集中的样本1、4和7是质控样本（样本池）。因此，我们希望基于这些样本执行对齐，随后基于来自相邻子集（QC）样本的结果的插值来校正剩余的样本（2、3、5、6和8）的保留时间。在初始峰分组后，我们使用峰组法（peak groups method）进行校准，通过子集参数传递我们希望校准所基于的样本的索引，并指定<code>subsetAdjust = &quot;average&quot;</code>以根据相邻子集&#x2F;QC样本的校准结果的插值校正研究样本。</p><p>注意，对于任何子集对齐，所有参数（如<code>minFraction</code>）都是相对于子集的，而不是整个实验！</p><p>要重新执行对齐，我们可以首先使用<code>dropAdjustedRtime</code>函数删除以前的对齐结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xdata <span class="operator">&lt;-</span> dropAdjustedRtime<span class="punctuation">(</span>xdata<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Define the experimental layout</span></span><br><span class="line">xdata<span class="operator">$</span>sample_type <span class="operator">&lt;-</span> <span class="string">&quot;study&quot;</span></span><br><span class="line">xdata<span class="operator">$</span>sample_type<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">,</span> <span class="number">7</span><span class="punctuation">)</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="string">&quot;QC&quot;</span></span><br></pre></td></tr></table></figure><p>接下来，我们必须进行初始对应分析，因为峰群对齐方法通过对齐之前识别的hook峰（存在于大多数&#x2F;所有样品中的色谱峰；下一节将介绍所用算法的详细信息）来校正保留时间。我们在这里使用默认设置，但强烈建议为每个数据集调整参数。<br><code>PeakDensityParam</code>必须定义样本组（即，将单个样本分配给实验中的样本组）。如果实验中没有样本组，则应将每个文件的样本组设置为单个值（例如<code>rep(1, length(fileNames(xdata))</code>）。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Initial peak grouping. Use sample_type as grouping variable</span></span><br><span class="line">pdp_subs <span class="operator">&lt;-</span> PeakDensityParam<span class="punctuation">(</span>sampleGroups <span class="operator">=</span> xdata<span class="operator">$</span>sample_type<span class="punctuation">,</span></span><br><span class="line">                             minFraction <span class="operator">=</span> <span class="number">0.9</span><span class="punctuation">)</span></span><br><span class="line">xdata <span class="operator">&lt;-</span> groupChromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">,</span> param <span class="operator">=</span> pdp_subs<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Define subset-alignment options and perform the alignment</span></span><br><span class="line">pgp_subs <span class="operator">&lt;-</span> PeakGroupsParam<span class="punctuation">(</span>minFraction <span class="operator">=</span> <span class="number">0.85</span><span class="punctuation">,</span></span><br><span class="line">                            subset <span class="operator">=</span> which<span class="punctuation">(</span>xdata<span class="operator">$</span>sample_type <span class="operator">==</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                            subsetAdjust <span class="operator">=</span> <span class="string">&quot;average&quot;</span><span class="punctuation">,</span> span <span class="operator">=</span> <span class="number">0.4</span><span class="punctuation">)</span></span><br><span class="line">xdata <span class="operator">&lt;-</span> adjustRtime<span class="punctuation">(</span>xdata<span class="punctuation">,</span> param <span class="operator">=</span> pgp_subs<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>下面，我们绘制了对齐结果，用绿色标记了作为子集一部分的样本，其他样本用灰色标注。这很好地显示了<code>subsetAdjust = &quot;average&quot;</code>的插值是如何工作的：样本2的保留时间是根据子集样本1和4的保留时间进行校正的，但是，给更接近的子集样本1赋予了更大的权重，这导致校正后的样本2的保持时间与样本1的保持时间更相似。另一方面，样本3得到校正，给第二子集样本（4）赋予更多权重。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">clrs <span class="operator">&lt;-</span> <span class="built_in">rep</span><span class="punctuation">(</span><span class="string">&quot;#00000040&quot;</span><span class="punctuation">,</span> <span class="number">8</span><span class="punctuation">)</span></span><br><span class="line">clrs<span class="punctuation">[</span>xdata<span class="operator">$</span>sample_type <span class="operator">==</span> <span class="string">&quot;QC&quot;</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#00ce0080&quot;</span><span class="punctuation">)</span></span><br><span class="line">par<span class="punctuation">(</span>mfrow <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span> mar <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span> <span class="number">4.5</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_21.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>chromatogram<span class="punctuation">(</span>xdata<span class="punctuation">,</span> aggregationFun <span class="operator">=</span> <span class="string">&quot;sum&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> col <span class="operator">=</span> clrs<span class="punctuation">,</span> peakType <span class="operator">=</span> <span class="string">&quot;none&quot;</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_22.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plotAdjustedRtime<span class="punctuation">(</span>xdata<span class="punctuation">,</span> col <span class="operator">=</span> clrs<span class="punctuation">,</span> peakGroupsPch <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> peakGroupsCol <span class="operator">=</span> <span class="string">&quot;#00ce0040&quot;</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_21.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_21.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Subset-alignment results with option average"><br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_22.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_22.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Subset-alignment results with option average"></p><p><strong>图注</strong>：沿保留时间轴校正保留时间与原始保留时间之间的差异。对校准模型进行估算的样本显示为绿色，研究样本显示为灰色。</p><p>选项<code>subsetAdjust = &quot;previous&quot;</code>基于单个子集样本（先前的）校正非子集样本的保留时间，这在大多数情况下导致非子集样本校正后的保留时间与用于校正的子集样本高度相似。</p><h1 id="Correspondence"><a href="#Correspondence" class="headerlink" title="Correspondence"></a>Correspondence</h1><p>代谢组学预处理的最后一步是匹配样本之间（取决于设置，如果样本相邻，也在样本内）检测到的色谱峰的对应关系。在xcms中执行对应的方法是<code>groupChromPeaks</code>。我们将使用峰密度法[5]对色谱峰进行分组。该算法结合了色谱峰，这取决于沿着mz维度的小切片中沿着保留时间轴的峰密度。为了说明这一点，我们绘制了每个样品中具有多个色谱峰的mz切片的色谱图。我们使用0.4的<code>minFraction</code>参数值，因此每个样本组中至少有40%的样本中存在的色谱峰被分组为特征（feature）。样品组分配是使用<code>sampleGroups</code>参数指定的。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Define the mz slice.</span></span><br><span class="line">mzr <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">305.05</span><span class="punctuation">,</span> <span class="number">305.15</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Extract and plot the chromatograms</span></span><br><span class="line">chr_mzr <span class="operator">&lt;-</span> chromatogram<span class="punctuation">(</span>xdata<span class="punctuation">,</span> mz <span class="operator">=</span> mzr<span class="punctuation">)</span></span><br><span class="line"><span class="comment">## Define the parameters for the peak density method</span></span><br><span class="line">pdp <span class="operator">&lt;-</span> PeakDensityParam<span class="punctuation">(</span>sampleGroups <span class="operator">=</span> xdata<span class="operator">$</span>sample_group<span class="punctuation">,</span> minFraction <span class="operator">=</span> <span class="number">0.4</span><span class="punctuation">,</span> bw <span class="operator">=</span> <span class="number">30</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_23.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plotChromPeakDensity<span class="punctuation">(</span>chr_mzr<span class="punctuation">,</span> col <span class="operator">=</span> sample_colors<span class="punctuation">,</span> param <span class="operator">=</span> pdp<span class="punctuation">,</span> peakBg <span class="operator">=</span> sample_colors<span class="punctuation">[</span>chromPeaks<span class="punctuation">(</span>chr_mzr<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> peakCol <span class="operator">=</span> sample_colors<span class="punctuation">[</span>chromPeaks<span class="punctuation">(</span>chr_mzr<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">,</span> peakPch <span class="operator">=</span> <span class="number">16</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_23.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_23.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Example for peak density correspondence"></p><p><strong>图注</strong>：上图：具有多个色谱峰的mz切片的色谱图。下图：确定保留时间的色谱峰(x轴)和不同bw参数值的实验样品内的指数(y轴)。黑线表示峰密度估计值。峰分组（基于提供的设置）由灰色矩形表示。</p><p>上图中的上部面板显示了每个样品的提取离子色谱图，突出显示了检测到的峰。中间和下部曲线显示了不同样品中每个检测到的峰的保留时间。黑色实线表示检测到的峰沿保留时间的密度分布。组合成特征（峰值组）的峰值用灰色矩形表示。这种类型的可视化非常适合在将示例m&#x2F;z切片应用于完整数据集之前测试它们的对应设置。</p><p>下面，我们将基于定义设置（defined settings）对整个数据集进行对应分析。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Perform the correspondence</span></span><br><span class="line">pdp <span class="operator">&lt;-</span> PeakDensityParam<span class="punctuation">(</span>sampleGroups <span class="operator">=</span> xdata<span class="operator">$</span>sample_group<span class="punctuation">,</span> minFraction <span class="operator">=</span> <span class="number">0.4</span><span class="punctuation">,</span> bw <span class="operator">=</span> <span class="number">30</span><span class="punctuation">)</span></span><br><span class="line">xdata <span class="operator">&lt;-</span> groupChromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">,</span> param <span class="operator">=</span> pdp<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>基于xcms的预处理结果可以通过<code>quantify</code>法从<em>SummarizedExperiment</em>包中汇总为<code>SummarizedExperiment</code>对象。该对象将包含作为分析矩阵的特征丰度、作为<code>rowData</code>（即行注释）的特征定义（其m&#x2F;z、保留时间和其他元数据）和作为<code>colData</code>（即列注释）的样本&#x2F;表型信息。所有处理历史记录都将放入对象的元数据中（metadata）。然后，该对象可以用于任何进一步的（与xcms无关的）处理和分析。</p><p>下面我们使用<code>quantify</code>来生成当前分析的结果对象。参数值和任何其他附加参数将传递给<code>featureValues</code>方法，该方法在内部用于创建特征丰度矩阵。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res <span class="operator">&lt;-</span> quantify<span class="punctuation">(</span>xdata<span class="punctuation">,</span> value <span class="operator">=</span> <span class="string">&quot;into&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>样品注释可以通过<code>colData</code>方法访问。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">colData<span class="punctuation">(</span>res<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">## DataFrame with 8 rows and 3 columns</span><br><span class="line">##          sample_name sample_group sample_type</span><br><span class="line">##          &lt;character&gt;  &lt;character&gt; &lt;character&gt;</span><br><span class="line">## ko15.CDF        ko15           KO          QC</span><br><span class="line">## ko16.CDF        ko16           KO       study</span><br><span class="line">## ko21.CDF        ko21           KO       study</span><br><span class="line">## ko22.CDF        ko22           KO          QC</span><br><span class="line">## wt15.CDF        wt15           WT       study</span><br><span class="line">## wt16.CDF        wt16           WT       study</span><br><span class="line">## wt21.CDF        wt21           WT          QC</span><br><span class="line">## wt22.CDF        wt22           WT       study</span><br></pre></td></tr></table></figure><p>通过<code>rowData</code>注释特征：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rowData<span class="punctuation">(</span>res<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">DataFrame with 357 rows and 11 columns</span><br><span class="line">          mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks</span><br><span class="line">      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;</span><br><span class="line">FT001     200.1     200.1     200.1   2902.25   2882.24   2922.27         2</span><br><span class="line">FT002     205.0     205.0     205.0   2789.40   2782.36   2795.94         8</span><br><span class="line">FT003     206.0     206.0     206.0   2788.64   2780.79   2793.78         7</span><br><span class="line">FT004     207.1     207.1     207.1   2718.25   2713.28   2726.63         7</span><br><span class="line">FT005     219.1     219.1     219.1   2518.60   2517.35   2521.09         3</span><br><span class="line">...         ...       ...       ...       ...       ...       ...       ...</span><br><span class="line">FT353    595.25     595.2     595.3   3010.39   2992.58   3014.38         6</span><br><span class="line">FT354    596.20     596.2     596.2   2997.60   2992.58   3002.61         2</span><br><span class="line">FT355    596.30     596.3     596.3   3818.98   3811.68   3835.78         4</span><br><span class="line">FT356    597.40     597.4     597.4   3821.10   3817.96   3825.14         3</span><br><span class="line">FT357    599.30     599.3     599.3   4070.45   4042.10   4123.52         3</span><br><span class="line">             KO        WT            peakidx  ms_level</span><br><span class="line">      &lt;numeric&gt; &lt;numeric&gt;             &lt;list&gt; &lt;integer&gt;</span><br><span class="line">FT001         2         0           463,1180         1</span><br><span class="line">FT002         4         4     47,448,960,...         1</span><br><span class="line">FT003         3         4   32, 435,1164,...         1</span><br><span class="line">FT004         4         3     19,425,943,...         1</span><br><span class="line">FT005         1         2     1140,1379,2382         1</span><br><span class="line">...         ...       ...                ...       ...</span><br><span class="line">FT353         2         3   67, 529,1466,...         1</span><br><span class="line">FT354         0         2          1457,2452         1</span><br><span class="line">FT355         2         2  332,1110,2071,...         1</span><br><span class="line">FT356         1         2      838,2355,2680         1</span><br><span class="line">FT357         1         2      375,1757,2137         1</span><br></pre></td></tr></table></figure><p>特征丰度可以通过<code>assay</code>方法获得。还要注意，<code>SummarizedExperiment</code>支持多个这样的分析矩阵。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>assay<span class="punctuation">(</span>res<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class="line">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class="line">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class="line">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class="line">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class="line">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class="line">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class="line">        wt22.CDF</span><br><span class="line">FT001         NA</span><br><span class="line">FT002 1354004.93</span><br><span class="line">FT003  185399.47</span><br><span class="line">FT004  221937.53</span><br><span class="line">FT005   84772.92</span><br><span class="line">FT006  271128.02</span><br></pre></td></tr></table></figure><p>此外，还可以使用<code>featureDefinitions</code>和<code>featureValues</code>方法分别从对应分析中提取结果，前者返回带有特征定义的数据框(即mz和rt范围，在列peakidx中为每个特征的<code>chromPeaks</code>矩阵中的色谱峰指数)，后者为特征丰度。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Extract the feature definitions</span></span><br><span class="line">featureDefinitions<span class="punctuation">(</span>xdata<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">DataFrame with 357 rows and 11 columns</span><br><span class="line">          mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks</span><br><span class="line">      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;</span><br><span class="line">FT001     200.1     200.1     200.1   2902.25   2882.24   2922.27         2</span><br><span class="line">FT002     205.0     205.0     205.0   2789.40   2782.36   2795.94         8</span><br><span class="line">FT003     206.0     206.0     206.0   2788.64   2780.79   2793.78         7</span><br><span class="line">FT004     207.1     207.1     207.1   2718.25   2713.28   2726.63         7</span><br><span class="line">FT005     219.1     219.1     219.1   2518.60   2517.35   2521.09         3</span><br><span class="line">...         ...       ...       ...       ...       ...       ...       ...</span><br><span class="line">FT353    595.25     595.2     595.3   3010.39   2992.58   3014.38         6</span><br><span class="line">FT354    596.20     596.2     596.2   2997.60   2992.58   3002.61         2</span><br><span class="line">FT355    596.30     596.3     596.3   3818.98   3811.68   3835.78         4</span><br><span class="line">FT356    597.40     597.4     597.4   3821.10   3817.96   3825.14         3</span><br><span class="line">FT357    599.30     599.3     599.3   4070.45   4042.10   4123.52         3</span><br><span class="line">             KO        WT            peakidx  ms_level</span><br><span class="line">      &lt;numeric&gt; &lt;numeric&gt;             &lt;list&gt; &lt;integer&gt;</span><br><span class="line">FT001         2         0           463,1180         1</span><br><span class="line">FT002         4         4     47,448,960,...         1</span><br><span class="line">FT003         3         4   32, 435,1164,...         1</span><br><span class="line">FT004         4         3     19,425,943,...         1</span><br><span class="line">FT005         1         2     1140,1379,2382         1</span><br><span class="line">...         ...       ...                ...       ...</span><br><span class="line">FT353         2         3   67, 529,1466,...         1</span><br><span class="line">FT354         0         2          1457,2452         1</span><br><span class="line">FT355         2         2  332,1110,2071,...         1</span><br><span class="line">FT356         1         2      838,2355,2680         1</span><br><span class="line">FT357         1         2      375,1757,2137         1</span><br></pre></td></tr></table></figure><p><code>featureValues</code>方法返回一个矩阵，其中行是特征，列是样本。这个矩阵的内容可以使用<code>value</code>参数定义。默认值<code>value = &quot;into&quot;</code>返回一个矩阵，其中包含样本中某个特征对应的峰的整合信号。<code>chromPeaks</code>矩阵的任何列名都可以传递给参数<code>value</code>。下面我们提取每个特征&#x2F;样本的整合峰值强度。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Extract the into column for each feature.</span></span><br><span class="line">head<span class="punctuation">(</span>featureValues<span class="punctuation">(</span>xdata<span class="punctuation">,</span> value <span class="operator">=</span> <span class="string">&quot;into&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class="line">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class="line">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class="line">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class="line">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class="line">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class="line">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class="line">        wt22.CDF</span><br><span class="line">FT001         NA</span><br><span class="line">FT002 1354004.93</span><br><span class="line">FT003  185399.47</span><br><span class="line">FT004  221937.53</span><br><span class="line">FT005   84772.92</span><br><span class="line">FT006  271128.02</span><br></pre></td></tr></table></figure><p>该特征矩阵包含某些样品在特征m&#x2F;z-rt区域未检测到色谱峰（NA值）。虽然在许多情况下，在相应的区域可能确实没有峰信号，但也可能有信号，但峰检测算法未能检测到色谱峰(例如，因为信号太低或噪声太大)。xcms提供<code>fillChromPeaks</code>方法来填充原始文件中这些缺失值的强度数据。填充的峰被添加到chromPeaks矩阵中，并在<code>chromPeakData</code>数据框的<code>“is_filled”</code>列中用<code>TRUE</code>表示。下面我们执行这样的填充。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xdata <span class="operator">&lt;-</span> fillChromPeaks<span class="punctuation">(</span>xdata<span class="punctuation">,</span> param <span class="operator">=</span> ChromPeakAreaParam<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">head<span class="punctuation">(</span>featureValues<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">       ko15.CDF   ko16.CDF   ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class="line">FT001  135315.2  506848.88  111783.48  169955.6  210166.7  141768.0  233086.7</span><br><span class="line">FT002 1924712.0 1757150.96 1383416.72 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class="line">FT003  213659.3  289500.67  164404.50  178285.7  253825.6  241844.4  240606.0</span><br><span class="line">FT004  349011.5  451863.66  343897.76  208002.8  364609.8  360908.9  225332.1</span><br><span class="line">FT005  161425.0   37819.63   82574.72  107348.5  223951.8  135617.6  191928.5</span><br><span class="line">FT006  286221.4  286834.04  164008.97  149097.6  255697.7  311296.8  366441.5</span><br><span class="line">        wt22.CDF</span><br><span class="line">FT001  142142.23</span><br><span class="line">FT002 1354004.93</span><br><span class="line">FT003  185399.47</span><br><span class="line">FT004  221937.53</span><br><span class="line">FT005   84772.92</span><br><span class="line">FT006  271128.02</span><br></pre></td></tr></table></figure><p>对于样本中没有检测到峰的特征，该方法提取特征的mz-rt区域中的所有强度，对信号进行整合（integrates），并将填充的峰添加到<code>chromPeaks</code>矩阵中。如果特征的mz-rt区域没有测量&#x2F;可用信号，则不添加峰。对于这些，即使在填写了缺失的峰数据后，也会在<code>featureValues</code>矩阵中报告NA。</p><p>可以使用不同的选项来定义特征的mz-rt区域。使用上面使用的<code>ChromPeakAreaParam()</code>参数对象，使用其所有（检测到的）色谱峰的m&#x2F;z和rt范围定义特征区域：区域中低的m&#x2F;z值定义为特征所有峰的“mzmin”值的下四分位（25%分位数），高m&#x2F;z值为“mzmax”值的上四分位数（75%分位数），低rt值作为“rtmin”值的下四分位（25%分位数），高rt值为“rtmax”值的上四分位数（75%分位数）。这确保了信号是从特定特征区域集成的。</p><p>或者，可以在<code>fillChromPeaks</code>调用中使用<code>FillChromPpeaksParam</code>参数对象，这类似于初始（old）xcms实现的方法。</p><p>下面我们比较填写缺失值前后缺失值的数量。我们可以使用<code>featureValues</code>方法的<code>filled</code>参数来定义是否也应该返回填充的峰值（filled-in peak values）。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Missing values before filling in peaks</span></span><br><span class="line">apply<span class="punctuation">(</span>featureValues<span class="punctuation">(</span>xdata<span class="punctuation">,</span> filled <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span><span class="punctuation">,</span> MARGIN <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> FUN <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>z<span class="punctuation">)</span> <span class="built_in">sum</span><span class="punctuation">(</span><span class="built_in">is.na</span><span class="punctuation">(</span>z<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## ko15.CDF ko16.CDF ko21.CDF ko22.CDF wt15.CDF wt16.CDF wt21.CDF wt22.CDF</span><br><span class="line">##       91       93      168      154       95      119      167      123</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Missing values after filling in peaks</span></span><br><span class="line">apply<span class="punctuation">(</span>featureValues<span class="punctuation">(</span>xdata<span class="punctuation">)</span><span class="punctuation">,</span> MARGIN <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> FUN <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>z<span class="punctuation">)</span> <span class="built_in">sum</span><span class="punctuation">(</span><span class="built_in">is.na</span><span class="punctuation">(</span>z<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## ko15.CDF ko16.CDF ko21.CDF ko22.CDF wt15.CDF wt16.CDF wt21.CDF wt22.CDF</span><br><span class="line">##        5        4        5        5        4        7        6        2</span><br></pre></td></tr></table></figure><p>接下来，我们使用<code>featureSummary</code>函数获取每个特征的一般摘要，其中包括找到峰的样本数量或为特征分配了多个峰的样本数。同时指定样本组可以分解每个样本组的汇总统计信息。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>featureSummary<span class="punctuation">(</span>xdata<span class="punctuation">,</span> group <span class="operator">=</span> xdata<span class="operator">$</span>sample_group<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">      count  perc multi_count multi_perc       rsd KO_count KO_perc</span><br><span class="line">FT001     2  25.0           0          0 0.7039537        2      50</span><br><span class="line">FT002     8 100.0           0          0 0.1936518        4     100</span><br><span class="line">FT003     7  87.5           0          0 0.1717662        3      75</span><br><span class="line">FT004     7  87.5           0          0 0.2609145        4     100</span><br><span class="line">FT005     3  37.5           0          0 0.5385767        1      25</span><br><span class="line">FT006     7  87.5           0          0 0.3016973        3      75</span><br><span class="line">      KO_multi_count KO_multi_perc    KO_rsd WT_count WT_perc WT_multi_count</span><br><span class="line">FT001              0             0 0.7039537        0       0              0</span><br><span class="line">FT002              0             0 0.2178920        4     100              0</span><br><span class="line">FT003              0             0 0.2501505        4     100              0</span><br><span class="line">FT004              0             0 0.2957873        3      75              0</span><br><span class="line">FT005              0             0        NA        2      50              0</span><br><span class="line">FT006              0             0 0.3765933        4     100              0</span><br><span class="line">      WT_multi_perc    WT_rsd</span><br><span class="line">FT001             0        NA</span><br><span class="line">FT002             0 0.1918936</span><br><span class="line">FT003             0 0.1327983</span><br><span class="line">FT004             0 0.2575039</span><br><span class="line">FT005             0 0.6375539</span><br><span class="line">FT006             0 0.1641781</span><br></pre></td></tr></table></figure><p>我们可以将特征值矩阵与缺失峰值的填充数据一起添加到我们的<code>SummarizedExperiment</code>对象res中，作为附加矩阵（assay）：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assays<span class="punctuation">(</span>res<span class="punctuation">)</span><span class="operator">$</span>raw_filled <span class="operator">&lt;-</span> featureValues<span class="punctuation">(</span>xdata<span class="punctuation">,</span> filled <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>我们现在有两个可用的矩阵（assays），一个具有检测值的矩阵，一个包含检测值和填充值的矩阵，每个都可以通过其名称访问。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assayNames<span class="punctuation">(</span>res<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## [1] &quot;raw&quot;        &quot;raw_filled&quot;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>assay<span class="punctuation">(</span>res<span class="punctuation">,</span> <span class="string">&quot;raw&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">       ko15.CDF  ko16.CDF  ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class="line">FT001        NA  506848.9        NA  169955.6        NA        NA        NA</span><br><span class="line">FT002 1924712.0 1757151.0 1383416.7 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class="line">FT003  213659.3  289500.7        NA  178285.7  253825.6  241844.4  240606.0</span><br><span class="line">FT004  349011.5  451863.7  343897.8  208002.8  364609.8  360908.9        NA</span><br><span class="line">FT005        NA        NA        NA  107348.5  223951.8        NA        NA</span><br><span class="line">FT006  286221.4        NA  164009.0  149097.6  255697.7  311296.8  366441.5</span><br><span class="line">        wt22.CDF</span><br><span class="line">FT001         NA</span><br><span class="line">FT002 1354004.93</span><br><span class="line">FT003  185399.47</span><br><span class="line">FT004  221937.53</span><br><span class="line">FT005   84772.92</span><br><span class="line">FT006  271128.02</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>assay<span class="punctuation">(</span>res<span class="punctuation">,</span> <span class="string">&quot;raw_filled&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">       ko15.CDF   ko16.CDF   ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF</span><br><span class="line">FT001  135315.2  506848.88  111783.48  169955.6  210166.7  141768.0  233086.7</span><br><span class="line">FT002 1924712.0 1757150.96 1383416.72 1180288.2 2129885.1 1634342.0 1623589.2</span><br><span class="line">FT003  213659.3  289500.67  164404.50  178285.7  253825.6  241844.4  240606.0</span><br><span class="line">FT004  349011.5  451863.66  343897.76  208002.8  364609.8  360908.9  225332.1</span><br><span class="line">FT005  161425.0   37819.63   82574.72  107348.5  223951.8  135617.6  191928.5</span><br><span class="line">FT006  286221.4  286834.04  164008.97  149097.6  255697.7  311296.8  366441.5</span><br><span class="line">        wt22.CDF</span><br><span class="line">FT001  142142.23</span><br><span class="line">FT002 1354004.93</span><br><span class="line">FT003  185399.47</span><br><span class="line">FT004  221937.53</span><br><span class="line">FT005   84772.92</span><br><span class="line">FT006  271128.02</span><br></pre></td></tr></table></figure><p>应始终通过检查提取的离子色谱图（例如已知化合物、内标或一般识别特征）来评估峰检测、比对（alignment）和对应（correspondence）的性能。<code>featureChromatogram</code>函数允许提取<code>featureDefinitions</code>中每个特征的色谱图。返回的<code>MCchromatograms</code>对象包含每个特征（每行包含一个特征的数据）和样本（每列代表一个样本的数据）的离子色谱图。下面我们提取前4个特征的色谱图。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">feature_chroms <span class="operator">&lt;-</span> featureChromatograms<span class="punctuation">(</span>xdata<span class="punctuation">,</span> features <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">4</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">feature_chroms</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">## XChromatograms with 4 rows and 8 columns</span><br><span class="line">##                    1               2               3               4</span><br><span class="line">##      &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt;</span><br><span class="line">## [1,]        peaks: 0        peaks: 1        peaks: 0        peaks: 1</span><br><span class="line">## [2,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class="line">## [3,]        peaks: 1        peaks: 1        peaks: 0        peaks: 1</span><br><span class="line">## [4,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class="line">##                    5               6               7               8</span><br><span class="line">##      &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt; &lt;XChromatogram&gt;</span><br><span class="line">## [1,]        peaks: 0        peaks: 0        peaks: 0        peaks: 0</span><br><span class="line">## [2,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class="line">## [3,]        peaks: 1        peaks: 1        peaks: 1        peaks: 1</span><br><span class="line">## [4,]        peaks: 1        peaks: 1        peaks: 0        peaks: 1</span><br><span class="line">## phenoData with 3 variables</span><br><span class="line">## featureData with 5 variables</span><br><span class="line">## - - - xcms preprocessing - - -</span><br><span class="line">## Chromatographic peak detection:</span><br><span class="line">##  method: centWave</span><br><span class="line">## Correspondence:</span><br><span class="line">##  method: chromatographic peak density</span><br><span class="line">##  4 feature(s) identified.</span><br></pre></td></tr></table></figure><p>绘制提取的离子色谱图。我们再次使用每个鉴定峰的组颜色来填充该区域。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_24.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>feature_chroms<span class="punctuation">,</span> col <span class="operator">=</span> sample_colors<span class="punctuation">,</span> peakBg <span class="operator">=</span> sample_colors<span class="punctuation">[</span>chromPeaks<span class="punctuation">(</span>feature_chroms<span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span> <span class="string">&quot;sample&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_24.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_24.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Extracted ion chromatograms for features 1 to 4"><br> 为了访问第二个特征的EIC，我们可以简单地将<code>feature_chros</code>对象取子集。</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> eic_2 <span class="operator">&lt;-</span> feature_chroms<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">chromPeaks<span class="punctuation">(</span>eic_2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">        mz mzmin mzmax       rt    rtmin    rtmax    into    intb  maxo sn</span><br><span class="line">CP0055 205   205   205 2791.599 2771.048 2815.323 1924712 1850331 84280 64</span><br><span class="line">CP0502 205   205   205 2795.355 2773.257 2820.612 1757151 1711473 68384 69</span><br><span class="line">CP1049 205   205   205 2795.936 2773.877 2821.143 1383417 1334570 47384 54</span><br><span class="line">CP1277 205   205   205 2788.642 2768.195 2812.229 1180288 1126958 48336 32</span><br><span class="line">CP1567 205   205   205 2782.355 2761.949 2805.895 2129885 2054677 93312 44</span><br><span class="line">CP2005 205   205   205 2787.051 2766.690 2812.111 1634342 1566379 67984 53</span><br><span class="line">CP2392 205   205   205 2790.157 2763.587 2821.427 1623589 1531573 49208 28</span><br><span class="line">CP2649 205   205   205 2787.032 2766.714 2812.043 1354005 1299188 55712 35</span><br><span class="line">       sample row column</span><br><span class="line">CP0055      1   1      1</span><br><span class="line">CP0502      2   1      2</span><br><span class="line">CP1049      3   1      3</span><br><span class="line">CP1277      4   1      4</span><br><span class="line">CP1567      5   1      5</span><br><span class="line">CP2005      6   1      6</span><br><span class="line">CP2392      7   1      7</span><br><span class="line">CP2649      8   1      8</span><br></pre></td></tr></table></figure><p>最后，我们进行了主成分分析，以评估本实验中样本的分组。注意，我们没有执行任何数据标准化，因此分组可能（也将）受到技术偏见的影响。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Extract the features and log2 transform them</span></span><br><span class="line">ft_ints <span class="operator">&lt;-</span> log2<span class="punctuation">(</span>assay<span class="punctuation">(</span>res<span class="punctuation">,</span> <span class="string">&quot;raw_filled&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Perform the PCA omitting all features with an NA in any of the</span></span><br><span class="line"><span class="comment">## samples. Also, the intensities are mean centered.</span></span><br><span class="line">pc <span class="operator">&lt;-</span> prcomp<span class="punctuation">(</span>t<span class="punctuation">(</span>na.omit<span class="punctuation">(</span>ft_ints<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> center <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Plot the PCA</span></span><br><span class="line">cols <span class="operator">&lt;-</span> group_colors<span class="punctuation">[</span>xdata<span class="operator">$</span>sample_group<span class="punctuation">]</span></span><br><span class="line">pcSummary <span class="operator">&lt;-</span> summary<span class="punctuation">(</span>pc<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">png<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;xcms_25.png&quot;</span><span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>pc<span class="operator">$</span>x<span class="punctuation">[</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> pc<span class="operator">$</span>x<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> pch <span class="operator">=</span> <span class="number">21</span><span class="punctuation">,</span> main <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> xlab <span class="operator">=</span> paste0<span class="punctuation">(</span><span class="string">&quot;PC1: &quot;</span><span class="punctuation">,</span> format<span class="punctuation">(</span>pcSummary<span class="operator">$</span>importance<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span> <span class="operator">*</span> <span class="number">100</span><span class="punctuation">,</span> digits <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="string">&quot; % variance&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> ylab <span class="operator">=</span> paste0<span class="punctuation">(</span><span class="string">&quot;PC2: &quot;</span><span class="punctuation">,</span> format<span class="punctuation">(</span>pcSummary<span class="operator">$</span>importance<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span> <span class="operator">*</span> <span class="number">100</span><span class="punctuation">,</span> digits <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="string">&quot; % variance&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> col <span class="operator">=</span> <span class="string">&quot;darkgrey&quot;</span><span class="punctuation">,</span> bg <span class="operator">=</span> cols<span class="punctuation">,</span> cex <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line">grid<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">text<span class="punctuation">(</span>pc<span class="operator">$</span>x<span class="punctuation">[</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> pc<span class="operator">$</span>x<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> labels <span class="operator">=</span> xdata<span class="operator">$</span>sample_name<span class="punctuation">,</span> col <span class="operator">=</span> <span class="string">&quot;darkgrey&quot;</span><span class="punctuation">,</span> pos <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span> cex <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_25.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/metabolomics/xcms_25.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="PCA for the faahKO data set, un-normalized intensities"></p><p> 我们可以在PC2上看到KO和WT样品之间的预期分离。在PC1上样本根据其ID进行分离，ID&lt;&#x3D;18的样本与ID&gt;18的样本被分开。这种分离可能是由于技术偏差（例如，在不同的天&#x2F;周进行的测量）或由于所分析小鼠的生物学特性（性别、年龄、产仔等）造成的。</p><h1 id="Further-data-processing-and-analysis"><a href="#Further-data-processing-and-analysis" class="headerlink" title="Further data processing and analysis"></a>Further data processing and analysis</h1><p>标准化特征的信号强度是必需的，但目前xcms还不支持（在不久的将来可能会添加一些方法）。建议将<code>quantify</code>方法返回的<code>SummarizedExperiment</code>用于任何进一步的数据处理，因为这种类型的对象在同一对象中存储特征定义（feature definitions）、样本注释以及特征丰度。为了识别例如具有显著不同强度&#x2F;丰度的特征，建议使用其他R包中提供的功能，例如Bioconductor的<code>limma</code>包。为了支持依赖于旧<code>xcmsSet</code>结果对象的其他包，可以使用<code>xset &lt;- as(x, &quot;xcmsSet&quot;)</code>将新的<code>XCMSnExp</code>对象强制转换为<code>xcmsSet</code>对象，其中x是<code>XCMSnExp</code>对象。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://127.0.0.1:24676/library/xcms/doc/xcms.html">LCMS data preprocessing and analysis with xcms</a></li></ul><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，转载请注明出处请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生信软件 </tag>
            
            <tag> 代谢组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代谢组相关软件的安装及使用</title>
      <link href="/post/33b.html"/>
      <url>/post/33b.html</url>
      
        <content type="html"><![CDATA[<h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><h2 id="MZconvert"><a href="#MZconvert" class="headerlink" title="MZconvert"></a><a href="http://www.proteowizard.org/download.html">MZconvert</a></h2><p>下载ProteoWizard项目下的Linux native 64-bit，上传至服务器并解压缩 (会将所有文件解压至当前目录，建议提前单独建一个目录)，解压后的文件即为可执行程序，需将该目录写入环境变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar jxvf pwiz-bin-linux-x86_64-gcc7-release-3_0_23032_0cc4840.tar.bz2</span><br></pre></td></tr></table></figure><p><strong>注</strong>：在运行<code>msconvert</code>时，如果遇到报错<code>terminate called after throwing an instance of &#39;std::runtime_error&#39;</code>，<code>what():  locale::facet::_S_create_c_locale name not valid</code>，则在终端里运行命令<code>export LC_ALL=C</code>（去除所有本地化的设置，让命令能正确执行），为了永远生效，可将此命令写入环境变量。</p><h2 id="MS-DIAL"><a href="#MS-DIAL" class="headerlink" title="MS-DIAL"></a><a href="http://prime.psc.riken.jp/compms/msdial/main.html">MS-DIAL</a></h2><p>下载Linux最新版，解压后将路径添加至环境变量即可，有可能需要为主程序（MsdialConsoleApp）添加可执行权限（chmod +x MsdialConsoleApp）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c http://prime.psc.riken.jp/compms/msdial/download/repository/Linux/MSDIAL%20ver.4.9.221218%20Linuxx64.zip</span><br></pre></td></tr></table></figure><h1 id="加关注"><a href="#加关注" class="headerlink" title="加关注"></a>加关注</h1><p>关注公众号“生信之巅”。</p><table align="center"><tr>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生信软件 </tag>
            
            <tag> 代谢组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多种方法批量下载NCBI基因组</title>
      <link href="/post/213.html"/>
      <url>/post/213.html</url>
      
        <content type="html"><![CDATA[<h1 id="下载有summary的基因组"><a href="#下载有summary的基因组" class="headerlink" title="下载有summary的基因组"></a>下载有summary的基因组</h1><ul><li><p>在NCBI基因组数据库搜索物种</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="搜索物种"></p></li><li><p>下载元数据</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="下载TSV元数据"></p></li><li><p>获取下载链接<br>打开下载的元数据文件<code>prokaryotes.csv</code>（该文件也可以直接去NCBI FTP中下载，一般在各物种的目录下，名字为<code>assembly_summary.txt</code>，其格式与<code>prokaryotes.csv</code>略有不同，但都含有链接），将倒数第二列或最后一列的链接拷贝到TXT文本文档中，在每一行的最后加上要下载的文件名和数据类型：</p><ul><li>基因组：文件名 _genomic.fna.gz</li><li>蛋白序列：文件名 _protein.faa.gz</li><li>CDs序列：文件名 _cds_from_genomic.fna.gz </li><li>…</li></ul><p>可参考下图中的示例进行命名：<br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.5.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_2.5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="NCBI文件命名示例"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_3.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="获取下载链接"></p><p>建议用正则表达式替换（依赖EditPlus或其他具有正则表达式功能的文本编辑器），以基因组序列为例：</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_4.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="正则表达式批量替换获取基因组下载链接"><br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_5.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="替换后获得的基因组完整下载链接"></p></li><li><p>开始下载<br>将获得的完整链接保存到名字为<code>link.txt</code>的文本文档中，在LINUX终端中运行<code>for link in $(cat link.txt); do wget -c $link; done</code>即可批量下载基因组到<code>genome</code>目录中。若不慎在行末引入了看不见的换行符，可以用命令<code>perl -pe &#39;s/[\n\r]+//g&#39; link.txt &gt; link2.txt</code>进行删除。再用<code>for link in $(cat link2.txt); do wget -c $link; done</code>下载。</p></li></ul><h1 id="SRA数据下载"><a href="#SRA数据下载" class="headerlink" title="SRA数据下载"></a>SRA数据下载</h1><ul><li><p>下载<a href="https://github.com/ncbi/sra-tools/wiki/01.-Downloading-SRA-Toolkit">SRA Toolkit</a></p><p>根据自己的系统选择合适的版本进行下载，并将软件包中<code>bin</code>的绝对路径或相对路径加入到环境变量中，以便可以在终端中直接调用。</p></li><li><p>设置默认下载目录</p><p>如果不设置，默认会将基因组下载到家目录下，通过在终端里输入<code>vdb-config -i</code>命令配置下载目录，即下载到当前目录下。</p><p> <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_6.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_6.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="设置SRA Toolkit默认下载文件存放位置"></p><p>  <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_7.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_7.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="设置SRA Toolkit默认下载文件存放位置"></p></li><li><p>准备包含<code>SRA号</code>的列表文件，每一行含有一个编号，文件命名为<code>SRA.list</code>。</p></li><li><p>开始下载<br>将列表文件与脚本<code>downloadSRA.pl</code>放在同一目录下，在终端中运行<code>perl downloadSRA.pl</code>。</p></li></ul><h1 id="利用FTP软件根据物种下载基因组"><a href="#利用FTP软件根据物种下载基因组" class="headerlink" title="利用FTP软件根据物种下载基因组"></a>利用FTP软件根据物种下载基因组</h1><p> <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_8.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="通过FileZilla批量下载基因组"><br> <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_9.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/213_9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="通过FileZilla批量下载基因组"><br>    在右侧的列表中选中所有目录拖拽到本地即可开始下载。</p><h1 id="根据WGA-assession-number下载基因组"><a href="#根据WGA-assession-number下载基因组" class="headerlink" title="根据WGA assession number下载基因组"></a>根据WGA assession number下载基因组</h1><ul><li><p>安装<a href="https://github.com/kblin/ncbi-genome-download">ncbi-genome-download</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c bioconda ncbi-genome-download</span><br></pre></td></tr></table></figure></li><li><p>准备WGA assession number列表文件</p></li><li><p>开始下载<br>终端里输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ncbi-genome-download --assembly-accessions GCA.txt --output-folder 6_3 bacteria --section genbank --formats fasta</span><br></pre></td></tr></table></figure><p>其中<code>GCA.txt</code>为包含assession number的列表文件，每行一个assession number。<br>该软件的问题在于，需要<code>科学上网</code>，所以很多时候会掉链子。</p></li></ul><h1 id="代码获取"><a href="#代码获取" class="headerlink" title="代码获取"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“213”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NCBI </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用PGCGAP根据ids提取序列信息</title>
      <link href="/post/e6ae.html"/>
      <url>/post/e6ae.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><p>假设有一个fasta格式的序列文件<code>SRR9620252.faa</code>，我们想要提取其中的一些序列到一个新的文件中，我们拥有这些序列的id （假设这些id存放在文件<code>ids.txt</code>中）。常规操作的话，可以复制id，在fasta文件中打开搜索，粘贴id，点击查找，复制找到的序列，粘贴到新的文件中（假设为<code>Seqout.fasta</code>）。假如你只找一条序列，1 min之内可以完成，假如你要找100条序列，1 h可能没了。而用PGCGAP可以在1 min之内完成，剩下的59 min可以喝喝茶。</p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="PGCGAP安装"><a href="#PGCGAP安装" class="headerlink" title="PGCGAP安装"></a>PGCGAP安装</h2><p>参考<a href="https://liaochenlanruo.fun/pgcgap/">官网</a>，需要版本v1.0.35及以上。</p><h2 id="开始提取"><a href="#开始提取" class="headerlink" title="开始提取"></a>开始提取</h2><p>在终端里打开PGCGAP的conda安装环境，并运行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ids.txt中含有要提取序列的id，可以是一列或者多列，如果为多列，需要用空格或者制表符来分隔列与列，id本身是不能带空格的。</span><br><span class="line"></span><br><span class="line">pgcgap --ACC --id2seq --ids ids.txt --seqin SRR9620252.faa --seqout Seqout.fasta</span><br></pre></td></tr></table></figure><p>提取的文件保存在<code>Seqout.fasta</code>中。</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. Protocol exchange, 2022. DOI: 10.21203&#x2F;rs.2.21224&#x2F;v6</p><h1 id="示例获取"><a href="#示例获取" class="headerlink" title="示例获取"></a>示例获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e6ae”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用PGCGAP，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite PGCGAP. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 序列处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PGCGAP - the Prokaryotic Genomics and Comparative Genomics Analysis Pipeline v1.0.33</title>
      <link href="/post/d862.html"/>
      <url>/post/d862.html</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th><img src="https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green" class="lazyload placeholder" data-srcset="https://img.shields.io/badge/Platform-WSL%2FLinux%2FmacOS-green" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></th><th><a href="https://github.com/liaochenlanruo/pgcgap/blob/master/LICENSE"><img src="https://img.shields.io/github/license/liaochenlanruo/pgcgap" class="lazyload placeholder" data-srcset="https://img.shields.io/github/license/liaochenlanruo/pgcgap" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="License"></a></th><th><a href="https://anaconda.org/bioconda/pgcgap"><img src="https://anaconda.org/bioconda/pgcgap/badges/version.svg" class="lazyload placeholder" data-srcset="https://anaconda.org/bioconda/pgcgap/badges/version.svg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="GitHubversion"></a></th><th><img src="https://img.shields.io/conda/dn/bioconda/pgcgap.svg?style=flat" class="lazyload placeholder" data-srcset="https://img.shields.io/conda/dn/bioconda/pgcgap.svg?style=flat" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></th><th><a href="http://bioconda.github.io/recipes/pgcgap/README.html"><img src="https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat" class="lazyload placeholder" data-srcset="https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="install with bioconda"></a></th><th><a href="//shang.qq.com/wpa/qunwpa?idkey=fd4637eecd73bf0a5a8caa274843a07afdf1fbbc40a86630df5d4b029749cc7b"><img src="https://pub.idqqimg.com/wpa/images/group.png" class="lazyload placeholder" data-srcset="https://pub.idqqimg.com/wpa/images/group.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅" title="945751012"></a></th></tr></thead></table><p><center><script type="text/javascript" src="//rf.revolvermaps.com/0/0/4.js?i=0ett3z77b0x&amp;m=0&amp;h=128&amp;c=ff0000&amp;r=0" async="async"></script>&nbsp;&nbsp;&nbsp;&nbsp;<script type="text/javascript" src="//rf.revolvermaps.com/0/0/0.js?i=0ett3z77b0x&amp;d=3&amp;p=1&amp;b=1&amp;w=293&amp;g=2&amp;f=arial&amp;fs=13&amp;r=0&amp;c0=ff8a00&amp;c1=0006ff&amp;c2=000000&amp;ic0=0&amp;ic1=0" async="async"></script></center></p><p><a href="https://liaochenlanruo.github.io/pgcgap">English Readme</a> | <a href="https://liaochenlanruo.github.io/post/848f.html">中文说明</a></p><pre><code>      ____       ____      ____     ____       _        ____        U|  _&quot;\ u U /&quot;___|u U /&quot;___| U /&quot;___|u U  /&quot;\  u  U|  _&quot;\ u     \| |_) |/ \| |  _ / \| | u   \| |  _ /  \/ _ \/   \| |_) |/      |  __/    | |_| |   | |/__   | |_| |   / ___ \    |  __/        |_|        \____|    \____|   \____|  /_/   \_\   |_|           ||&gt;&gt;_      _)(|_    _// \\    _)(|_    \\    &gt;&gt;   ||&gt;&gt;_        (__)__)    (__)__)  (__)(__)  (__)__)  (__)  (__) (__)__)   </code></pre><h2 id="Multi-version-instructions-This-one-for-the-latest-version"><a href="#Multi-version-instructions-This-one-for-the-latest-version" class="headerlink" title="Multi-version instructions (This one for the latest version)"></a>Multi-version instructions (This one for the latest version)</h2><hr><ul><li><a href="./index-v1.0.29.html">Instructions for V1.0.29</a></li><li><a href="./index-v1.0.32.html">Instructions for V1.0.32</a></li><li><a href="./index.html">Instructions for the latest version</a></li></ul><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><hr><p>PGCGAP is a pipeline for prokaryotic comparative genomics analysis. It can take the pair-end reads, ONT reads or PacBio reads as input. In addition to genome assembly, gene prediction and annotation, it can also get common comparative genomics analysis results such as phylogenetic trees of single-core proteins and core SNPs, pan-genome, whole-genome Average Nucleotide Identity (ANI), orthogroups and orthologs, COG annotations, substitutions (SNPs) and insertions&#x2F;deletions (indels), and antimicrobial and virulence genes mining with only one line of commands. <strong><u>To follow this document, please upgrade PGCGAP to version v1.0.33 or later</u></strong>.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><hr><p>The software was tested successfully on Windows WSL, Linux x64 platform, and macOS. Because this software relies on a large number of other software, so it is recommended to install with <strong><a href="https://bioconda.github.io/index.html">Bioconda</a></strong>.</p><p><strong>Step1: Install PGCGAP</strong></p><ul><li><p>Method 1: use mamba to install PGCGAP</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install mamba first</span></span><br><span class="line">conda install mamba</span><br><span class="line"></span><br><span class="line"><span class="comment"># Usually specify the latest version of PGCGAP (v1.0.33 is coming soon)</span></span><br><span class="line">mamba create -n pgcgap pgcgap=1.0.33</span><br></pre></td></tr></table></figure><p>  <strong>Notice</strong>: <u>I had submitted the latest version (v1.0.33) of the Bioconda recipe for PGCGAP for a test. However, Bioconda moved to a new test server which allocated very little memory, causing the test to fail. As a result, I had to remove some dependencies from the Bioconda recipe to pass the test, so after installing the main program of PGCGAP v1.0.33 through Conda, users still need to install some dependencies (Installing V1.0.32 and previous versions does not require an additional dependency package installation). This situation will be resolved soon with the release of Conda v4.12 as Bioconda will switch to the less memory-consuming Mamba for recipe testing. After that, users will still be able to install PGCGAP and its dependencies just using the above commands.</u> However, at present, after the previous step, the user needs to execute the following command to complete the installation of the dependency packages:</p><p>  当安装PGCGAP v1.0.33的时候还需要单独安装依赖包，这是由于Bioconda换了新的测试服务器。我在提交最新版本的recipe并进行测试的时候，服务器仅分配了极小的内存，导致测试失败。因此，我不得不从Bioconda recipe中移除一些依赖包以通过测试。所以，在通过conda安装完PGCGAP的主程序后，还需要安装一些依赖包。这种状况将在不久的将来得到解决，即随着conda v4.12释放以后，Bioconda将转用耗费内存更小的mamba来进行recipe的测试，此后，用户仍可通过上述命令完成PGCGAP和其依赖包的安装。目前，在执行完上一步操作之后，用户还需要执行下面这条命令完成依赖包的安装（当然，安装v1.0.32及以前的版本不需要单独再安装依赖包了）：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate pgcgap</span><br><span class="line">mamba install -y abricate canu roary orthofinder fastani fastp snippy sickle-trim unicycler perl-file-copy-recursive prokka pal2nal mash trimal</span><br></pre></td></tr></table></figure></li><li><p>Method 2: use &quot;environment.yaml&quot;. Run the following commands to download the <a href="https://bcam.hzau.edu.cn/PGCGAP/conda/pgcgap_latest_env.yml">latest environmental file</a> and install PGCGAP:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install mamba first</span></span><br><span class="line">conda install mamba</span><br><span class="line"></span><br><span class="line"><span class="comment"># download pgcgap_latest_env.yml</span></span><br><span class="line">wget --no-check-certificate https://bcam.hzau.edu.cn/PGCGAP/conda/pgcgap_latest_env.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class="line">mamba <span class="built_in">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure></li></ul><p><strong>Step2: Setup COG database</strong> (Users should execute this after the first installation of pgcgap)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda activate pgcgap</span><br><span class="line">pgcgap --setup-COGdb</span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><p>Users with <a href="https://hub.docker.com/">docker container</a> installed have another choice to install PGCGAP.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure><p>(see <a href="https://quay.io/repository/biocontainers/pgcgap?tab=tags">pgcgap&#x2F;tags</a> for valid values for &lt;tag&gt;)</p><h2 id="Required-dependencies"><a href="#Required-dependencies" class="headerlink" title="Required dependencies"></a>Required dependencies</h2><hr><ul><li><a href="https://github.com/tseemann/abricate">Abricate</a></li><li><a href="http://www.bcgsc.ca/platform/bioinfo/software/abyss/">ABySS</a></li><li><a href="http://canu.readthedocs.org/">Canu</a></li><li><a href="http://weizhongli-lab.org/cd-hit/">CD-HIT</a></li><li><a href="https://www.gnu.org/software/coreutils/">Coreutils</a></li><li><a href="https://github.com/bbuchfink/diamond">Diamond</a></li><li><a href="https://github.com/ParBLiSS/FastANI">FastANI</a></li><li><a href="http://www.atgc-montpellier.fr/fastme/binaries.php">Fastme</a></li><li><a href="https://github.com/OpenGene/fastp">Fastp</a></li><li><a href="http://www.microbesonline.org/fasttree">FastTree</a></li><li><a href="https://github.com/samtools/htslib">Htslib</a></li><li><a href="http://www.iqtree.org/">IQ-TREE</a></li><li><a href="https://mafft.cbrc.jp/alignment/software/">Mafft</a></li><li><a href="https://github.com/marbl/Mash">Mash</a></li><li><a href="https://github.com/soedinglab/mmseqs2">Mmseqs2</a></li><li><a href="https://www.ebi.ac.uk/Tools/msa/muscle/">Muscle</a></li><li><a href="https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download">NCBI-blast+</a></li><li><a href="https://github.com/davidemms/OrthoFinder">OrthoFinder</a></li><li><a href="https://openjdk.java.net/">OpenJDK8</a></li><li><a href="http://www.bork.embl.de/pal2nal/">PAL2NAL v14</a></li><li><a href="http://trimal.cgenomics.org/">trimAL</a></li><li><a href="http://www.perl.org/get.html">Perl</a> &amp; the modules<ul><li><a href="http://metacpan.org/pod/BioPerl">perl-bioperl</a></li><li><a href="http://metacpan.org/pod/Data::Dumper">perl-data-dumper</a></li><li><a href="http://metacpan.org/pod/File::Tee">perl-file-tee</a></li><li><a href="http://metacpan.org/pod/Getopt::Long">perl-getopt-long</a></li><li><a href="http://search.cpan.org/~marekr/Pod-Usage-1.69/">perl-pod-usage</a></li><li><a href="https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm">perl-parallel-forkmanager</a></li></ul></li><li><a href="https://github.com/tseemann/prokka">Prokka</a></li><li><a href="https://www.python.org/">Python</a> &amp; the modules<ul><li><a href="https://biopython.org/">biopython</a></li><li><a href="https://matplotlib.org/">matplotlib</a></li><li><a href="http://www.numpy.org/">numpy</a></li><li><a href="http://pandas.pydata.org/">pandas</a></li><li><a href="http://seaborn.pydata.org/">seaborn</a></li></ul></li><li><a href="https://www.r-project.org/">R</a> &amp; the packages<ul><li><a href="https://cran.r-project.org/web/packages/corrplot/index.html">corrplot</a></li><li><a href="https://cran.r-project.org/web/packages/ggplot2/">ggplot2</a></li><li><a href="https://cran.r-project.org/web/packages/gplots/">gplots</a></li><li><a href="https://cran.r-project.org/web/packages/pheatmap/index.html">pheatmap</a></li><li><a href="https://cran.r-project.org/web/packages/plotrix/">plotrix</a></li></ul></li><li><a href="https://sanger-pathogens.github.io/Roary/">Roary</a></li><li><a href="https://github.com/najoshi/sickle">Sickle-trim</a></li><li><a href="https://github.com/tseemann/snippy">Snippy</a></li><li><a href="https://github.com/sanger-pathogens/snp-sites">Snp-sites</a></li><li><a href="https://github.com/rrwick/Unicycler">unicycler</a></li><li><a href="https://www.gnu.org/software/wget/">wget</a></li></ul><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><hr><ul><li><p><strong>Print the help messages:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --<span class="built_in">help</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Check for update:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --check-update</span><br></pre></td></tr></table></figure></li><li><p><strong>General usage:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap [modules] [options]</span><br></pre></td></tr></table></figure></li><li><p><strong>Show parameters for each module:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure></li><li><p><strong>Show examples of each module:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap Examples</span><br></pre></td></tr></table></figure></li><li><p><strong>Setup COG database:</strong> (Users should execute this after the first installation of pgcgap)</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --setup-COGdb</span><br></pre></td></tr></table></figure></li><li><p><strong>Modules:</strong></p><ul><li><p><strong>[--All]</strong> Perform Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH, AntiRes and pCOG functions with one command</p></li><li><p><strong>[--Assemble]</strong> Assemble reads (short, long or hybrid) into contigs</p></li><li><p><strong>[--Annotate]</strong> Genome annotation</p></li><li><p><strong>[--CoreTree]</strong> Construct single-core proteins tree and SNPs tree of single-copy core genes</p></li><li><p><strong>[--Pan]</strong> Run &quot;roary&quot; pan-genome pipeline with gff3 files, and construct a phylogenetic tree with the sing-copy core proteins called by roary</p></li><li><p><strong>[--OrthoF]</strong> Identify orthologous protein sequence families with &quot;OrthoFinder&quot;, and construct a phylogenetic tree with the sing-copy core Orthologues</p></li><li><p><strong>[--ANI]</strong> Compute whole-genome Average Nucleotide Identity ( ANI )</p></li><li><p><strong>[--MASH]</strong> Genome and metagenome similarity estimation using MinHash</p></li><li><p><strong>[--pCOG]</strong> Run COG annotation for each strain (*.faa), and generate a table containing the relative abundance of each flag for all strains</p></li><li><p><strong>[--VAR]</strong> Rapid haploid variant calling and core genome alignment with &quot;Snippy&quot;</p></li><li><p><strong>[--AntiRes]</strong> Screening of contigs for antimicrobial and virulence genes</p></li><li><p><strong>[--STREE]</strong> Construct a phylogenetic tree based on multiple sequences in one file</p></li><li><p><strong>[--ACC]</strong> Other useful gadgets (now includes &#39;Assess&#39; for filtering short sequences in the genome and assessing the statistics of the genome only)</p></li></ul></li><li><p><strong>Global Options:</strong></p><ul><li><p><strong>[--strain_num (INT)]</strong> [Required by &quot;--All&quot;, &quot;--CoreTree&quot;, &quot;--Pan&quot;, &quot;--VAR&quot; and &quot;--pCOG&quot;] The total number of strains used for analysis, not including the reference genome</p></li><li><p><strong>[--ReadsPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] Reads of all strains as file paths ( Default .&#x2F;Reads&#x2F;Illumina )</p></li><li><p><strong>[--scafPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot;, &quot;--MASH&quot; and &quot;--AntiRes&quot;] Path for contigs&#x2F;scaffolds (Default &quot;Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina&quot;)</p></li><li><p><strong>[--AAsPath (PATH)]</strong> [Required by &quot;--All&quot;, &quot;--Pan&quot;, &quot;--OrthoF&quot; and &quot;--pCOG&quot;] Amino acids of all strains as fasta file paths, ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;AAs&quot; )</p></li><li><p><strong>[--reads1 (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] The suffix name of reads 1 ( for example: if the name of reads 1 is &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot;, &quot;YBT-1520&quot; is the strain same, so the suffix name should be &quot;.R1.clean.fastq.gz&quot;)</p></li><li><p><strong>[--reads2 (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] The suffix name of reads 2( for example: if the name of reads 2 is &quot;YBT-1520_2.fq&quot;, the suffix name should be &quot;_2.fq&quot; )</p></li><li><p><strong>[--Scaf_suffix (STRING)]</strong> [Required by &quot;--All&quot;, &quot;--Assess&quot;, &quot;--Annotate&quot; &quot;--MASH&quot;, &quot;--ANI&quot; and &quot;--AntiRes&quot;] The suffix of scaffolds or genome files. This is an important parameter that must be set (Default -8.fa)</p></li><li><p><strong>[--filter_length (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--Assess&quot;]&gt; Sequences shorter than the &#39;filter_length&#39; will be removed from the assembled genomes. ( Default 200 )</p></li><li><p><strong>[--codon (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Annotate&quot;, &quot;--CoreTree&quot; and &quot;--Pan&quot;] Translation table ( Default 11 )</p><pre><code>- 1 Universal code- 2 Vertebrate mitochondrial code- 3 Yeast mitochondrial code- 4 Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma/Spiroplasma code- 5 Invertebrate mitochondrial- 6 Ciliate, Dasycladacean and Hexamita nuclear code- 9 Echinoderm and Flatworm mitochondrial code- 10 Euplotid nuclear code- 11 Bacterial, archaeal and plant plastid code ( Default )- 12 Alternative yeast nuclear code- 13 Ascidian mitochondrial code- 14 Alternative flatworm mitochondrial code- 15 Blepharisma nuclear code- 16 Chlorophycean mitochondrial code- 21 Trematode mitochondrial code- 22 Scenedesmus obliquus mitochondrial code- 23 Thraustochytrium mitochondrial code</code></pre></li><li><p><strong>[--suffix_len (INT)]</strong> [Required by &quot;--All&quot;, &quot;--Assemble&quot; and &quot;--VAR&quot;] <strong><u>(Strongly recommended)</u></strong> The suffix length of the reads, that is the length of your reads name minus the length of your strain name. For example the --suffix_len of &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot; is 26 ( &quot;YBT-1520&quot; is the strain name ) ( Default 0 )</p></li><li><p><strong>[--fasttree]</strong> [Can be used with &quot;CoreTree&quot;, &quot;Pan&quot; and &quot;OrthoF&quot;] Use FastTree to construct phylogenetic tree quickly instead of IQ-TREE</p></li><li><p><strong>[--bsnum (INT)]</strong> [Required by &quot;CoreTree&quot;, &quot;Pan&quot;, &quot;OrthoF&quot;, &quot;STREE&quot;, and &quot;VAR&quot;] Replicates for bootstrap of IQ-TREE ( Default 500 )</p></li><li><p><strong>[--fastboot (INT)]</strong> [Required by &quot;CoreTree&quot;, &quot;Pan&quot;, &quot;OrthoF&quot;, &quot;STREE&quot;, and &quot;VAR&quot;] Replicates for ultrafast bootstrap of IQ-TREE. ( must &gt;&#x3D; 1000, Default 1000 )</p></li><li><p><strong>[--logs (STRING)]</strong> Name of the log file ( Default Logs.txt )</p></li><li><p><strong>[--threads (INT)]</strong> Number of threads to be used ( Default 4 )</p></li></ul></li><li><p><strong>Local Options:</strong></p><ul><li><p><strong>--Assemble</strong></p><ul><li><p><strong>[--platform (STRING)]</strong> [Required] Sequencing Platform, &quot;illumina&quot;, &quot;pacbio&quot;, &quot;oxford&quot; and &quot;hybrid&quot; available ( Default illumina )</p></li><li><p><strong>[--assembler (STRING)]</strong> [Required] Software used for illumina reads assembly, &quot;abyss&quot; and &quot;spades&quot; available ( Default auto )</p></li><li><p><strong>[--kmmer (INT)]</strong> [Required] k-mer size for genome assembly of Illumina data ( Default 81 )</p></li><li><p><strong>[--genomeSize (STRING)]</strong> [Required] An estimate of the size of the genome. Common suffixes are allowed, for example, 3.7m or 2.8g. Needed by PacBio data and ONT data ( Default Unset )</p></li><li><p><strong>[--short1 (STRING)]</strong> [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p></li><li><p><strong>[--short2 (STRING)]</strong> [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p></li><li><p><strong>[--long (STRING)]</strong> [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p></li><li><p><strong>[--hout (STRING)]</strong> [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p></li></ul></li><li><p><strong>--Annotate</strong></p><ul><li><p><strong>[--genus (STRING)]</strong> Genus name of your strain ( Default &quot;NA&quot; )</p></li><li><p><strong>[--species (STRING)]</strong> Species name of your strain ( Default &quot;NA&quot;)\</p></li></ul></li><li><p><strong>--CoreTree</strong></p><ul><li><p><strong>[--CDsPath (PATH)]</strong> [Required] CDs of all strains as fasta file paths ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;CDs&quot; ), if set to &quot;NO&quot;, the SNPs of single-copy core genes will not be called</p></li><li><p><strong>[-c (FLOAT)]</strong> Sequence identity threshold, ( Default 0.5)</p></li><li><p><strong>[-n (INT)]</strong> Word_length, -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p></li><li><p><strong>[-G (INT)]</strong> Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p></li><li><p><strong>[-t (INT)]</strong> Tolerance for redundance ( Default 0 )</p></li><li><p><strong>[-aL (FLOAT)]</strong> Alignment coverage for the longer sequence. If set to 0.9, the alignment must cover 90% of the sequence ( Default 0.5 )</p></li><li><p><strong>[-aS (FLOAT)]</strong> Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p></li><li><p><strong>[-g (INT)]</strong> If set to 0, a sequence is clustered to the first cluster that meets the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meets the threshold (accurate but slow mode, Default 1)</p></li><li><p><strong>[-d (INT)]</strong> length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p></li></ul></li><li><p><strong>--Pan</strong></p><ul><li><strong>[--GffPath (PATH)]</strong> [Required] Gff files of all strains as paths ( Default &quot;.&#x2F;Results&#x2F;Annotations&#x2F;GFF&quot; )</li><li><strong>[--PanTree]</strong> Construct a phylogenetic tree of single-copy core proteins called by roary</li><li><strong>[--identi (INT)]</strong> Minimum percentage identity for blastp ( Default 95 )</li></ul></li><li><p><strong>--OrthoF</strong></p><ul><li><strong>[--Sprogram (STRING)]</strong> Sequence search program, Options: blast, mmseqs, blast_gz, diamond ( Default diamond)</li></ul></li><li><p><strong>--ANI</strong></p><ul><li><p><strong>[--queryL (FILE)]</strong> [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p></li><li><p><strong>[--refL (FILE)]</strong> [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p></li></ul></li><li><p><strong>--VAR</strong></p><ul><li><p><strong>[--refgbk (FILE)]</strong> [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: &quot;&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk&quot;</p></li><li><p><strong>[--qualtype (STRING)]</strong> [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p></li><li><p><strong>[--qual (INT)]</strong> Threshold for trimming based on average quality in a window. ( Default 20 )</p></li><li><p><strong>[--length (INT)]</strong> Threshold to keep a read based on length after trimming. ( Default 20 )</p></li><li><p><strong>[--mincov (INT)]</strong> The minimum number of reads covering a site to be considered ( Default 10 )</p></li><li><p><strong>[--minfrac (FLOAT)]</strong> The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p></li><li><p><strong>[--minqual (INT)]</strong> The minimum VCF variant call &quot;quality&quot; ( Default 100 )</p></li><li><p><strong>[--ram (INT)]</strong> Try and keep RAM under this many GB ( Default 8 )</p></li></ul></li><li><p><strong>--AntiRes</strong></p><ul><li><p><strong>[--db (STRING)]</strong> [Required] The database to use, options: all, <a href="https://www.ncbi.nlm.nih.gov/pubmed/24145532">argannot</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/27789705">card</a>, <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/">ecoh</a>, <a href="https://github.com/phac-nml/ecoli_vf">ecoli_vf</a>, <a href="https://megares.meglab.org/">megares</a>, <a href="https://www.biorxiv.org/content/10.1101/550707v1">ncbi</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/24777092">plasmidfinder</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/22782487">resfinder</a> and <a href="https://www.ncbi.nlm.nih.gov/pubmed/26578559">vfdb</a>. ( Default all )</p></li><li><p><strong>[--identity (INT)]</strong> [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p></li><li><p><strong>[--coverage (INT)]</strong> [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p></li></ul></li><li><p><strong>--STREE</strong></p><ul><li><p><strong>[--seqfile (STRING)]</strong> [Required] Path of the sequence file for analysis.</p></li><li><p><strong>[--seqtype (INT)]</strong> [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p></li></ul></li><li><p><strong>--pCOG</strong></p><ul><li><p><strong>[--evalue (FLOAT)]</strong> [Required] Maximum e-value to report alignments, ( Default 1e-3 )</p></li><li><p><strong>[--id (INT)]</strong> [Required] Minimum identity% to report an alignment, ( Default 40 )</p></li><li><p><strong>[--query_cover (INT)]</strong> [Required] Minimum query cover% to report an alignment, ( Default 70 )</p></li><li><p><strong>[--subject_cover (INT)]</strong> [Required] Minimum subject cover% to report an alignment, ( Default 50 )</p></li></ul></li><li><p><strong>--ACC</strong></p><ul><li><strong>[--Assess (STRING)]</strong> Filter short sequences in the genome and assess the status of the genome</li></ul></li></ul></li><li><p><strong>Paths of external programs</strong></p><p>  Not needed if they were in the environment variables path. Users can check with the &quot;--check-external-programs&quot; option for the essential programs.</p><ul><li><p><strong>[--abricate-bin (PATH)]</strong> Path to abyss binary file.<br>Default tries if abyss is in PATH;</p></li><li><p><strong>[--abyss-bin (PATH)]</strong> Path to abyss binary file. Default<br>tries if abyss is in PATH;</p></li><li><p><strong>[--canu-bin (PATH)]</strong> Path to canu binary file. Default<br>tries if canu is in PATH;</p></li><li><p><strong>[--cd-hit-bin (PATH)]</strong> Path to cd-hit binary file. Default<br>tries if cd-hit is in PATH;</p></li><li><p><strong>[--fastANI-bin (PATH)]</strong> Path to the fastANI binary file.<br>Default tries if fastANI is in PATH;</p></li><li><p><strong>[--iqtree-bin (PATH)]</strong> Path to the iqtree binary file.<br>Default tries if iqtree is in PATH;</p></li><li><p><strong>[--mafft-bin (PATH)]</strong> Path to mafft binary file. Default<br>tries if mafft is in PATH;</p></li><li><p><strong>[--mash-bin (PATH)]</strong> Path to the mash binary file. Default<br>tries if mash is in PATH.</p></li><li><p><strong>[--muscle-bin (PATH)]</strong> Path to the muscle binary file.<br>Default tries if muscle is in PATH.</p></li><li><p><strong>[--orthofinder-bin (PATH)]</strong> Path to the orthofinder binary<br>file. Default tries if orthofinder is in PATH;</p></li><li><p><strong>[--pal2nal-bin (PATH)]</strong> Path to the pal2nal.pl binary<br>file. Default tries if pal2nal.pl is in PATH;</p></li><li><p><strong>[--prodigal-bin (PATH)]</strong> Path to prodigal binary file.<br>Default tries if prodigal is in PATH;</p></li><li><p><strong>[--prokka-bin (PATH)]</strong> Path to prokka binary file. Default<br>tries if prokka is in PATH;</p></li><li><p><strong>[--roary-bin (PATH)]</strong> Path to the roary binary file.<br>Default tries if roary is in PATH;</p></li><li><p><strong>[--sickle-bin (PATH)]</strong> Path to the sickle-trim binary<br>file. Default tries if sickle is in PATH.</p></li><li><p><strong>[--snippy-bin (PATH)]</strong> Path to the snippy binary file.<br>Default tries if snippy is in PATH;</p></li><li><p><strong>[--snp-sites-bin (PATH)]</strong> Path to the snp-sites binary<br>file. Default tries if snp-sites is in PATH;</p></li><li><p><strong>[--trimAL-bin (PATH)]</strong> Path to the trimAL binary file.<br>Default tries if trimAL is in PATH;</p></li><li><p><strong>[--unicycler-bin (PATH)]</strong> Path to the unicycler binary<br>file. Default tries if unicycler is in PATH;</p></li></ul></li><li><p><strong>Setup COG database</strong></p><ul><li><strong>[--setup-COGdb]</strong> Users should execute this after first<br>installation of pgcgap.</li></ul></li><li><p>Check the required external programs (<strong>It is strongly recommended that this step be performed after the installation of PGCGAP</strong>):</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --check-external-programs</span><br></pre></td></tr></table></figure></li></ul><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>Example dataset can be download <a href="http://bcam.hzau.edu.cn/PGCGAP/PGCGAP_Examples.tar.gz">here</a>.</p><ul><li><p><strong>Example 1:</strong> Perform all functions, take the <em>Escherichia coli</em> as an example, total 6 strains for analysis.</p><p>  <strong>Notice</strong>: For the sake of flexibility, The &quot;VAR&quot; function needs to be added additionally.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --PanTree --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 2:</strong> Genome assembly.</p><ul><li><p>Illumina reads assembly</p><p>In this dataset, the naming format of the genome is “strain_1.fastq.gz” and “strain_2.fastq.gz”. The string after the strain name is “_1.fastq.gz”, and its length is 11, so &quot;--suffix_len&quot; was set to 11.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Assemble with ABySS</span></span><br><span class="line">pgcgap --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class="line"></span><br><span class="line"><span class="comment"># Assemble with SPAdes</span></span><br><span class="line">pgcgap --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class="line"></span><br><span class="line"><span class="comment"># Assemble with AUTO</span></span><br><span class="line">pgcgap --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure></li><li><p>ONT reads assembly</p><p>Oxford nanopore sequencing usually produces one reads file, so only the parameter of &quot;--reads1&quot; needs to be set, where the value is &quot;.fasta&quot;. “--genomeSize” is the estimated genome size, and users can check the genome size of similar strains in the NCBI database for reference. The parameter was set to &quot;4.8m&quot; here. The suffix of the reads file here is &quot;.fasta&quot; and its length is 6, so &quot;--suffix_len&quot; was set to 6.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure></li><li><p>PacBio reads assembly</p><p>PacBio also usually produces only one reads file &quot;pacbio.fastq&quot;, the parameter settings are similar to Oxford. The strain name is 6, so &quot;--suffix_len&quot; was set to 6.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure></li><li><p>Hybrid assembly of short reads and long reads</p><p>Paired-end short reads and long reads in the directory “Reads&#x2F;Hybrid&#x2F;“ were used as inputs. Illumina reads and long reads must be from the same isolates.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --Assemble --platform hybrid --ReadsPath Reads/Hybrid --short1 short_reads_1.fastq.gz --short2 short_reads_2.fastq.gz --long long_reads_high_depth.fastq.gz --threads 4</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Example 3</strong>: Gene prediction and annotation</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 4</strong>: Constructing single-copy core protein tree and core SNPs tree</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class="line">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class="line">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line">pgcgap --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 5:</strong> Constructing single-copy core protein tree only.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class="line">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class="line">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line">pgcgap --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 6:</strong> Conduct pan-genome analysis and construct a phylogenetic tree of single-copy core proteins called by roary. <strong><u>Applicable to v1.0.27 and later</u></strong>.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class="line">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class="line">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line">pgcgap --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 7:</strong> Inference of orthologous gene groups and construct a phylogenetic tree of single-copy Orthologue proteins. <strong><u>Applicable to v1.0.29 and later</u></strong>.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class="line">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class="line">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line">pgcgap --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 8:</strong> Compute whole-genome Average Nucleotide Identity (ANI).</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --ANI --threads 4 --queryL scaf.list --refL scaf.list --Scaf_suffix .fa</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 9:</strong> Genome and metagenome similarity estimation using MinHash.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --MASH --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 10:</strong> Run COG annotation for each strain.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --pCOG --threads 4 --strain_num 6 --<span class="built_in">id</span> 40 --query_cover 70 --subject_cover 50 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 11:</strong> Variants calling and phylogenetic tree construction based on the reference genome.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class="line">pgcgap --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line">pgcgap --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 12:</strong> Screening of contigs for antimicrobial and virulence genes.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db all --identity 75 --coverage 50</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgcgap --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap, DEFAULT)</span></span><br><span class="line">pgcgap --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line">pgcgap --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li></ul><h2 id="Generating-Input-files"><a href="#Generating-Input-files" class="headerlink" title="Generating Input files"></a>Generating Input files</h2><hr><h3 id="Working-directory"><a href="#Working-directory" class="headerlink" title="Working directory"></a>Working directory</h3><p>The directory where the PGCGAP software runs.</p><h3 id="Assemble"><a href="#Assemble" class="headerlink" title="Assemble"></a>Assemble</h3><p>Pair-end reads of all strains in a directory or PacBio reads or ONT reads (Default: .&#x2F;Reads&#x2F;Illumina&#x2F; under the working directory).</p><h3 id="Annotate"><a href="#Annotate" class="headerlink" title="Annotate"></a>Annotate</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p><h3 id="ANI"><a href="#ANI" class="headerlink" title="ANI"></a>ANI</h3><p>QUERY_LIST and REFERENCE_LIST files containing full paths to genomes, one per line (default: scaf.list under the working directory). If the “--Assemble” function was run first, the list file will be generated automatically.</p><h3 id="MASH"><a href="#MASH" class="headerlink" title="MASH"></a>MASH</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p><h3 id="CoreTree"><a href="#CoreTree" class="headerlink" title="CoreTree"></a>CoreTree</h3><p>Amino acids file (With “.faa” as the suffix) and nucleotide (With “.ffn” as the suffix) file of each strain placed into two directories (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;“ and “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;“). The “.faa” and “.ffn” files of the same strain should have the same prefix name. The name of protein IDs and gene IDs should be started with the strain name. The “Prokka” software was suggested to generate the input files. If the “--Annotate” function was run first, the files will be generated automatically. If the “--CDsPath” was set to “NO”, the nucleotide files will not be needed.</p><h3 id="OrthoF"><a href="#OrthoF" class="headerlink" title="OrthoF"></a>OrthoF</h3><p>A set of protein sequence files (one per species) in FASTA format under a directory (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;“). If the “--Annotate” function was run first, the files will be generated automatically.</p><h3 id="Pan"><a href="#Pan" class="headerlink" title="Pan"></a>Pan</h3><p>GFF3 files (With “.gff” as the suffix) of each strain placed into a directory. They must contain the nucleotide sequence at the end of the file. All GFF3 files created by Prokka are valid (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;). If the “--Annotate” function was run first, the files will be generated automatically.</p><h3 id="pCOG"><a href="#pCOG" class="headerlink" title="pCOG"></a>pCOG</h3><p>Amino acids file (With “.faa” as the suffix) of each strain placed into a directory (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;). If the “--Annotate” function was run first, the files will be generated automatically.</p><h3 id="VAR"><a href="#VAR" class="headerlink" title="VAR"></a>VAR</h3><ul><li><p>Pair-end reads of all strains in a directory (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory).</p></li><li><p>The full path of reference genome in FASTA format or GenBank format (<strong>must be provided</strong>).</p></li></ul><h3 id="AntiRes"><a href="#AntiRes" class="headerlink" title="AntiRes"></a>AntiRes</h3><p>Genomes files (complete or draft) in a directory (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</p><h3 id="STREE"><a href="#STREE" class="headerlink" title="STREE"></a>STREE</h3><p>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</p><h2 id="Output-Files"><a href="#Output-Files" class="headerlink" title="Output Files"></a>Output Files</h2><hr><h3 id="Assemble-1"><a href="#Assemble-1" class="headerlink" title="Assemble"></a>Assemble</h3><ul><li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong></p><p>  Directories contain Illumina assembly files and information of each strain.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong></p><p>  Directories contain PacBio assembly files and information of each strain.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong></p><p>  Directories contain ONT assembly files and information of each strain.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong></p><p>  Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina&#x2F;</strong></p><p>  Directory contains Illumina contigs&#x2F;scaffolds of all strains. &quot;*.filtered.fas&quot; is the genome after excluding short sequences. &quot;*.prefilter.stats&quot; describes the stats of the genome before filtering, and &quot;*.filtered.stats&quot; describes the stats of the genome after filtering.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford&#x2F;</strong></p><p>  Directory contains ONT contigs&#x2F;scaffolds of all strains.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio&#x2F;</strong></p><p>  Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p></li></ul><h3 id="Annotate-1"><a href="#Annotate-1" class="headerlink" title="Annotate"></a>Annotate</h3><ul><li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation&#x2F;</strong></p><p>  directories contain <a href="https://github.com/tseemann/prokka?_blank">annotation files</a> of each strain.</p></li><li><p><strong>Results&#x2F;Annotations&#x2F;AAs&#x2F;</strong></p><p>  Directory contain amino acids sequences of all strains.</p></li><li><p><strong>Results&#x2F;Annotations&#x2F;CDs&#x2F;</strong></p><p>  Directory contain nucleotide sequences of all strains.</p></li><li><p><strong>Results&#x2F;Annotations&#x2F;GFF&#x2F;</strong></p><p>  Directory contain the master annotation of all strains in GFF3 format.</p></li></ul><h3 id="ANI-1"><a href="#ANI-1" class="headerlink" title="ANI"></a>ANI</h3><ul><li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong></p><p>  The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p></li><li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong></p><p>  file with identity values arranged in a <a href="https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank">phylip-formatted lower triangular matrix</a>.</p></li><li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong></p><p>  An ANI matrix of all strains.</p></li><li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong></p><p>  The heatmap plot of &quot;ANIs.heatmap&quot;.</p></li></ul><h3 id="MASH-1"><a href="#MASH-1" class="headerlink" title="MASH"></a>MASH</h3><ul><li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong></p><p>  The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p></li><li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong></p><p>  The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p></li><li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong></p><p>  A similarity matrix of all genomes.</p></li><li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong></p><p>  A heat map plot of &quot;MASH.heatmap&quot;.</p></li></ul><h3 id="CoreTree-1"><a href="#CoreTree-1" class="headerlink" title="CoreTree"></a>CoreTree</h3><ul><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong></p><p>  Concatenated and aligned sequences file of single-copy core proteins.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong></p><p>  The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong></p><p>  The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong></p><p>  Concatenated and aligned sequences file of single-copy core genes.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong></p><p>  Core SNPs of single-copy core genes in fasta format.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.treefile</strong></p><p>  The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;&quot;Other_files&quot;</strong></p><p>  Intermediate directories and files.</p></li></ul><h3 id="OrthoF-1"><a href="#OrthoF-1" class="headerlink" title="OrthoF"></a>OrthoF</h3><ul><li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong></p><p>  Same as <a href="https://github.com/davidemms/OrthoFinder?_blank">OrthoFinder</a> outputs.</p></li><li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong></p><p>  Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.</p></li><li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong></p><p>  Phylogenetic tree constructed by FastTree.</p></li><li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong></p><p>  Phylogenetic tree constructed by IQ-TREE.</p></li></ul><h3 id="Pan-1"><a href="#Pan-1" class="headerlink" title="Pan"></a>Pan</h3><ul><li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong></p><p>  A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong></p><p>  A graph with the frequency of genes versus the number of genomes.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong></p><p>  A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong></p><p>  Alignments of single-copy core proteins called by roary software.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong></p><p>  A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong></p><p>  A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong></p><p>  see <a href="https://sanger-pathogens.github.io/Roary/?_blank">roary</a> outputs.</p></li></ul><h3 id="pCOG-1"><a href="#pCOG-1" class="headerlink" title="pCOG"></a>pCOG</h3><ul><li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong></p><p>  Intermediate files.</p></li><li><p><strong>*.2Scog.table</strong></p><p>  The super COG table of each strain.</p></li><li><p><strong>*.2Scog.table.pdf</strong></p><p>  A plot of super COG table in pdf format.</p></li><li><p><strong>All_flags_relative_abundances.table</strong></p><p>  A table containing the relative abundance of each flag for all strains.</p></li></ul><h3 id="VAR-1"><a href="#VAR-1" class="headerlink" title="VAR"></a>VAR</h3><ul><li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong></p><p>  directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href="https://github.com/tseemann/snippy?_blank">Snippy</a> outputs for detail.</p></li><li><p><strong>Results&#x2F;Variants&#x2F;Core</strong></p><p>  The directory containing SNP phylogeny files.</p><ul><li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li><li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li><li><strong>core.aln.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li><li><strong>core.aln.treefile</strong> : The best-fit model of evolution selected using IQ-TREE can be found in this file.</li></ul></li></ul><h3 id="AntiRes-1"><a href="#AntiRes-1" class="headerlink" title="AntiRes"></a>AntiRes</h3><ul><li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li><li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li></ul><h3 id="STREE-1"><a href="#STREE-1" class="headerlink" title="STREE"></a>STREE</h3><ul><li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li><li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the aligned sequences.</li><li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li><li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.iqtree</strong> : Log of IQ-TREE.</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><hr><p>PGCGAP is free software, licensed under GPLv3.</p><h2 id="Feedback-and-Issues"><a href="#Feedback-and-Issues" class="headerlink" title="Feedback and Issues"></a>Feedback and Issues</h2><hr><p>Please report any issues to the <a href="https://github.com/liaochenlanruo/pgcgap/issues?_blank">issues page</a> or email us at <a href="mailto:&#x6c;&#105;&#97;&#111;&#x63;&#x68;&#x65;&#110;&#x6c;&#x61;&#110;&#x72;&#x75;&#x6f;&#64;&#x77;&#x65;&#x62;&#109;&#x61;&#x69;&#108;&#x2e;&#104;&#122;&#x61;&#117;&#x2e;&#101;&#x64;&#117;&#x2e;&#x63;&#110;">&#x6c;&#105;&#97;&#111;&#x63;&#x68;&#x65;&#110;&#x6c;&#x61;&#110;&#x72;&#x75;&#x6f;&#64;&#x77;&#x65;&#x62;&#109;&#x61;&#x69;&#108;&#x2e;&#104;&#122;&#x61;&#117;&#x2e;&#101;&#x64;&#117;&#x2e;&#x63;&#110;</a>.</p><h2 id="Citation"><a href="#Citation" class="headerlink" title="Citation"></a>Citation</h2><hr><ul><li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative<br>  genomics. <em>Protocol exchange</em>, 2022. DOI: <a href="https://doi.org/10.21203/rs.2.21224/v6">10.21203&#x2F;rs.2.21224&#x2F;v6</a></p></li><li><p>If you use &quot;--Assemble&quot;, please also cite one or two of <a href="https://github.com/OpenGene/fastp">Fastp</a>, <a href="https://doi.org/10.1101/gr.214346.116">ABySS</a>, <a href="http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13">SPAdes</a>, <a href="https://doi.org/10.1101/gr.215087.116">Canu</a>, or <a href="https://doi.org/10.1371/journal.pcbi.1005595">Unicycler</a>.</p></li><li><p>If you use &quot;--Annotate&quot;, please also cite <a href="https://doi.org/10.1093/bioinformatics/btu153">Prokka</a>.</p></li><li><p>If you use &quot;--CoreTree&quot;, please also cite <a href="https://doi.org/10.1093/bioinformatics/btl158">CD-HIT</a>, <a href="https://doi.org/10.1093/nar/gkf436">MAFFT</a>, <a href="https://doi.org/10.1093/nar/gkl315">PAL2NAL</a>, <a href="https://doi.org/10.1093/bioinformatics/btp348">trimAL</a>, <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a> or <a href="https://doi.org/10.1371/journal.pone.0009490">FastTree</a>, and <a href="https://dx.doi.org/10.1099%2Fmgen.0.000056">SNP-sites</a>.</p></li><li><p>If you use &quot;--Pan&quot;, please also cite <a href="https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421">Roary</a>, <a href="https://doi.org/10.1093/nar/gkf436">MAFFT</a>, <a href="https://doi.org/10.1093/bioinformatics/btp348">trimAL</a>, <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a> or <a href="https://doi.org/10.1371/journal.pone.0009490">FastTree</a>.</p></li><li><p>If you use &quot;--OrthoF&quot;, please also cite <a href="https://dx.doi.org/10.1186%2Fs13059-019-1832-y">OrthoFinder</a>, <a href="https://doi.org/10.1093/nar/gkf436">MAFFT</a>, <a href="https://doi.org/10.1093/bioinformatics/btp348">trimAL</a>, <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a> or <a href="https://doi.org/10.1371/journal.pone.0009490">FastTree</a>.</p></li><li><p>If you use &quot;--ANI&quot;, please also cite <a href="https://dx.doi.org/10.1038%2Fs41467-018-07641-9">fastANI</a>.</p></li><li><p>If you use &quot;--MASH&quot;, please also cite <a href="https://dx.doi.org/10.1186%2Fs13059-016-0997-x">Mash</a>.</p></li><li><p>If you use &quot;--VAR&quot;, please also cite <a href="https://github.com/najoshi/sickle">Sickle</a>, <a href="https://github.com/tseemann/snippy">Snippy</a>, <a href="https://dx.doi.org/10.1093%2Fnar%2Fgku1196">Gubbins</a>, <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a>, and <a href="https://dx.doi.org/10.4161%2Ffly.19695">SnpEff</a>.</p></li><li><p>If you use &quot;--AntiRes&quot;, please also cite<br>  <a href="https://github.com/tseemann/abricate">Abricate</a> and the corresponding database you used: <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410">NCBI AMRFinderPlus</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/27789705">CARD</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/22782487">Resfinder</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/24145532">ARG-ANNOT</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/26578559">VFDB</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/24777092">PlasmidFinder</a>, <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/">EcOH</a>, or <a href="https://academic.oup.com/nar/article/48/D1/D561/5624973">MEGARES 2.00</a>.</p></li><li><p>If you use &quot;--STREE&quot;, please also cite <a href="http://europepmc.org/abstract/MED/30976793">Muscle</a>, <a href="https://doi.org/10.1093/bioinformatics/btp348">trimAL</a>, and <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a>.</p></li></ul><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><hr><h3 id="Q1-VAR-function-ran-failed-to-get-annotated-VCFs-and-Core-results"><a href="#Q1-VAR-function-ran-failed-to-get-annotated-VCFs-and-Core-results" class="headerlink" title="Q1 VAR function ran failed to get annotated VCFs and Core results"></a>Q1 VAR function ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in &quot;strain_name.log&quot; under Results&#x2F;Variants&#x2F;&lt;strain_name&gt;&#x2F; directory. If you find a sentence like &quot;WARNING: All frames are zero! This seems rather odd, please check that &#39;frame&#39; information in your &#39;genes&#39; file is accurate.&quot; This is a snpEff error. Users can install JDK8 to solve this problem.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install java-jdk=8.0.112</span><br></pre></td></tr></table></figure><p>Click <a href="https://github.com/tseemann/snippy/issues/259?_blank">here</a> for more solutions.</p><h3 id="Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher"><a href="#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher" class="headerlink" title="Q2 Could not determine version of minced please install version 2 or higher"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running the Annotate function, this error could happen, the error message shows as following:</p><pre><code>Error: A JNI error has occurred, please check your installation and try againException in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0    at java.lang.ClassLoader.defineClass1(Native Method)    at java.lang.ClassLoader.defineClass(ClassLoader.java:763)    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)    at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)    at java.net.URLClassLoader.access$100(URLClassLoader.java:74)    at java.net.URLClassLoader$1.run(URLClassLoader.java:369)    at java.net.URLClassLoader$1.run(URLClassLoader.java:363)    at java.security.AccessController.doPrivileged(Native Method)    at java.net.URLClassLoader.findClass(URLClassLoader.java:362)    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)    at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)[01:09:40] Could not determine version of minced - please install version 2.0 or higher</code></pre><p>Users can downgrade the minced to version 0.3 to solve this problem.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install minced=0.3</span><br></pre></td></tr></table></figure><p>Click <a href="https://github.com/bioconda/bioconda-recipes/pull/15407?_blank">here</a> for detail informations.</p><h3 id="Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib"><a href="#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib" class="headerlink" title="Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function &quot;VAR&quot; on macOS. It is an error of openssl. Users can solve this problem as the following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Firstly, install brew if have not installed before</span></span><br><span class="line">ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Install openssl with brew</span></span><br><span class="line">brew install openssl</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create the soft link for libraries</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure><p>Click <a href="https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7">here</a> for more informations.</p><h3 id="Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61"><a href="#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61" class="headerlink" title="Q4 Use of uninitialized value in require at Encode.pm line 61"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function &quot;Pan&quot;. It is a warning of Roary software. The content of line 61 is &quot;require Encode::ConfigLocal;&quot;. Users can ignore the warning. Click <a href="https://github.com/sanger-pathogens/Roary/issues/323">here</a> for details.</p><h2 id="Updates"><a href="#Updates" class="headerlink" title="Updates"></a>Updates</h2><hr><ul><li><p>V1.0.3</p><ul><li>Updated ANI function.</li></ul></li><li><p>V1.0.4</p><ul><li>Add parallel for function &quot;pCOG&quot;.</li><li>Optimized drawing of ANI heat map.</li></ul></li><li><p>V1.0.5</p><ul><li>Bug repair for the input of gubbins.</li></ul></li><li><p>V1.0.6</p><ul><li>Modified CoreTree to split protein and SNPs tree constructing.</li></ul></li><li><p>V1.0.7</p><ul><li>Split Assemble and Annotate into two functions.</li><li>Added third-generation genome assembly function.</li><li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li><li>Changed the name of function &quot;COG&quot; to &quot;pCOG&quot;.</li><li>Fixed the sorting bug for ANI heat map.</li></ul></li><li><p>V1.0.8</p><ul><li>Add the &quot;MASH&quot; function to compute genome distance and similarity using MinHash.</li></ul></li><li><p>V1.0.9</p><ul><li>The function of constructing a single-copy core protein phylogenetic tree was added to &quot;Pan&quot;.</li><li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan<br>chart has been added.</li><li>Fixed a bug for plotting the ANI matrix.</li></ul></li><li><p>V1.0.10</p><ul><li>Add the &quot;AntiRes&quot; function to screening of contigs for antimicrobial and virulence genes.</li></ul></li><li><p>V1.0.11</p><ul><li>Users now can choose &quot;abyss&quot; or &quot;spades&quot; for illumina reads aseembly.</li><li>New support for hybrid assembly of paired-end short reads and long reads.</li><li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li><li>Optimized display of help information. Users can check parameters for each modulewith command &quot;pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]&quot;, and can look up the examples of each module with command &quot;pgcgap Examples&quot;.</li></ul></li><li><p>V1.0.12</p><ul><li>Added automatic mode for illumina genome assembly. First, PGCGAP calls &quot;ABySS&quot; for genome assembly. When the assembled N50 is less than 50,000, it automatically calls &quot;SPAdes&quot; to try multiple parameters for assembly.</li><li>Added ability to filter short sequences of assembled genomes.</li><li>Added function of genome assembly status assessment.</li><li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li></ul></li><li><p>V1.0.13</p><ul><li>Fixed the &quot;running error&quot; bug of function &quot;Assess&quot; in module &quot;ACC&quot;.</li><li>Added module &quot;STREE&quot; for constructing a phylogenetic tree based on multiple sequences in one file.</li></ul></li><li><p>V1.0.14</p><ul><li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li><li>Fixed the error of function &quot;Assess&quot; in module &quot;ACC&quot;.</li></ul></li><li><p>V1.0.15</p><ul><li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li><li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li></ul></li><li><p>V1.0.16</p><ul><li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li><li>Force overwriting existing output folder when running &quot;Annotate&quot; analysis to avoid program crash.</li></ul></li><li><p>V1.0.17</p><ul><li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li><li>Added scripts to check if there were single-copy core proteins found while running module &quot;CoreTree&quot;.</li><li>Modified the help message.</li></ul></li><li><p>V1.0.18</p><ul><li>Updated the downloading link of COG database.</li><li>Users can choose the number of threads used for running module &quot;STREE&quot;.</li></ul></li><li><p>V1.0.19</p><ul><li>Can resume from break-point when downloading the COG database.</li><li>Fixed a bug that failed to create multi-level directories.</li></ul></li><li><p>V1.0.20</p><ul><li>Fixed a little bug (path error) of module &quot;VAR&quot;.</li><li>Fixed a little bug of module &quot;CoreTree&quot; to avoid the interference of special characters in sequence ID to the program.</li></ul></li><li><p>V1.0.21</p><ul><li>Change the default search program &quot;blast&quot; to &quot;diamond&quot; of<br>module &quot;OrthoF&quot;.</li><li>Fixed a bug of module &quot;pCOG&quot; to output the right figure.</li></ul></li><li><p>V1.0.22</p><ul><li>The drawing function of module &quot;ANI&quot; and module &quot;MASH&quot; has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li><li>Fixed a bug of module &quot;ANI&quot;, that is no heatmap will be drawn when there is &quot;NA&quot; in the ANI matrix in the previous versions.</li><li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li></ul></li><li><p>V1.0.23</p><ul><li>The &quot;--Assess&quot; function of module &quot;ACC&quot; was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li></ul></li><li><p>V1.0.24</p><ul><li>Fixed a little bug of module &quot;Pan&quot; to avoid the interference of special characters (&gt;) in sequence ID to the program.</li></ul></li><li><p>V1.0.25</p><ul><li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module &quot;CoreTree&quot; and &quot;Pan&quot;.</li><li>The parameter &quot;--identi&quot; was added into module &quot;Pan&quot; to allow users to set the minimum percentage identity for blastp.</li></ul></li><li><p>V1.0.26</p><ul><li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module &quot;ANI&quot; and &quot;MASH&quot;.</li><li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the &quot;ANI&quot; and &quot;MASH&quot; analysis.</li></ul></li><li><p>V1.0.27</p><ul><li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li></ul></li><li><p>V1.0.28</p><ul><li>Users can check and install the latest version of PGCGAP by the command &quot;pgcgap --check-update&quot;.</li><li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li><li>Update module pCOG to adjust the latest database of <a href="https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/">COG 2020</a>.</li><li>Optimized the drawing and color scheme of the module pCOG.</li><li>Fixed the parameter &quot;CoreTree&quot; in the module Pan to avoid program termination caused by the &quot;&gt;&quot; in non-sequence lines.</li></ul></li><li><p>V1.0.29</p><ul><li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li><li>Fixed the &quot;permission denied&quot; error when moving directories on the WSL platform.</li></ul></li><li><p>V1.0.30</p><ul><li>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</li><li>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</li><li>Added the option of using fasttree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</li></ul></li><li><p>V1.0.31</p><ul><li>The default replicates for bootstrap testing of IQ-TREE was set to 500.</li><li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li><li>Prevent the log from being written to the tree file generated by FastTree.</li></ul></li><li><p>V1.0.32</p><ul><li>A more colorful version, try &quot;pgcgap Examples&quot; to have a look.</li><li>Updated module AntiRes: the parameter --db had been modified to add choices of &quot;all&quot; and &quot;megares&quot;.</li><li>A little optimization of module VAR.</li><li>Replaced conda with mamba to update PGCGAP more quickly.</li></ul></li><li><p>V1.0.33</p><ul><li>Updated module CoreTree: <a href="https://bitsandbugs.org/2019/11/06/two-easy-ways-to-run-iq-tree-with-the-correct-number-of-constant-sites/">Run IQ-TREE with the correct number of constant sites</a> when constructing the single-copy core SNPs tree.</li><li>Updated module VAR: Use &quot;SNP-SITE&quot; and &quot;IQ-TREE -fconst&quot; to generate SNP sites from the &quot;core.full.aln&quot; and construct the phylogenetic tree.</li><li>Updated module pCOG: Replace blast with diamond to speed up analysis.</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
            <tag> 比较基因组学 </tag>
            
            <tag> PGCGAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL安装Docker避坑指北</title>
      <link href="/post/54a0.html"/>
      <url>/post/54a0.html</url>
      
        <content type="html"><![CDATA[<h1 id="升级WSL"><a href="#升级WSL" class="headerlink" title="升级WSL"></a>升级WSL</h1><ul><li><p>查看已安装的WSL版本(Windows PowerShell中运行)</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl.exe -l -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  显示如下：</p>  <figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  NAME                   STATE           VERSION</span><br><span class="line">* Ubuntu-20.04           Running         1</span><br><span class="line">  docker-desktop-data    Stopped         2</span><br></pre></td></tr></table></figure><p>  看到安装的为WSL1，据说WSL1不支持Docker，所以换成WSL2，至于WSL1 和WSL2的异同可参考<a href="https://docs.microsoft.com/zh-cn/windows/wsl/compare-versions">比较 WSL 1 和 WSL 2</a>。</p></li><li><p>安装WSL2 (Windows PowerShell中运行)</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl.exe --set-version ubuntu-20.04 2</span><br></pre></td></tr></table></figure><p>  显示如下：</p>  <figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正在进行转换，这可能需要几分钟时间...</span><br><span class="line">有关与 WSL 2 的主要区别的信息，请访问 https://aka.ms/wsl2</span><br><span class="line">转换完成。</span><br></pre></td></tr></table></figure></li></ul><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><p>在WSL中运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker-ce</span><br></pre></td></tr></table></figure><h1 id="Root用户启动Docker"><a href="#Root用户启动Docker" class="headerlink" title="Root用户启动Docker"></a>Root用户启动Docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line"><span class="built_in">export</span> DOCKER_HOST=tcp://localhost:2375</span><br><span class="line">service docker start</span><br></pre></td></tr></table></figure><p>显示如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* Starting Docker: docker</span><br></pre></td></tr></table></figure><h1 id="测试-还是在root用户"><a href="#测试-还是在root用户" class="headerlink" title="测试(还是在root用户)"></a>测试(还是在root用户)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p>以下是报错信息：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           20.10.12</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.16.12</span><br><span class="line"> Git commit:        e91ed57</span><br><span class="line"> Built:             Mon Dec 13 11:45:33 2021</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      true</span><br><span class="line">Cannot connect to the Docker daemon at tcp://localhost:2375. Is the docker daemon running?</span><br></pre></td></tr></table></figure><h1 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h1><p><strong>回到普通用户运行</strong></p><ul><li><p>编辑环境变量</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在最下面添加一行：</span></span><br><span class="line"><span class="built_in">export</span> DOCKER_HOST=<span class="string">&#x27;unix:///var/run/docker.sock&#x27;</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>再次测试</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker version</span><br></pre></td></tr></table></figure><p>  显示如下表明成功：</p>  <figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           20.10.12</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.16.12</span><br><span class="line"> Git commit:        e91ed57</span><br><span class="line"> Built:             Mon Dec 13 11:45:33 2021</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      true</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          20.10.12</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.16.12</span><br><span class="line">  Git commit:       459d0df</span><br><span class="line">  Built:            Mon Dec 13 11:43:42 2021</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     false</span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.4.13</span><br><span class="line">  GitCommit:        9cc61520f4cd876b86e77edfeb88fbcd536d1f9d</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.3</span><br><span class="line">  GitCommit:        v1.0.3-0-gf46b6ba</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br></pre></td></tr></table></figure></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.csdn.net/qq_44701736/article/details/119411485">WSL安装docker</a></li><li><a href="https://www.jianshu.com/p/7c0084fd9003">Cannot connect to the Docker daemon at tcp:&#x2F;&#x2F;localhost:2375. Is the docker daemon running?</a></li></ul><h1 id="代码获取"><a href="#代码获取" class="headerlink" title="代码获取"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 系统 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nanopore基因组组装</title>
      <link href="/post/74ad.html"/>
      <url>/post/74ad.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mamba install miniasm minipolish raven-assembler flye medaka python=3.8 fastp bwa masurca trycycler</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/rrwick/Minipolish.git</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/rrwick/Polypolish.git</span><br><span class="line"><span class="built_in">cd</span> Polypolish</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install cargo</span><br><span class="line">cargo build --release</span><br></pre></td></tr></table></figure><h1 id="Step-1-Generating-assemblies"><a href="#Step-1-Generating-assemblies" class="headerlink" title="Step 1: Generating assemblies"></a>Step 1: <a href="https://github.com/rrwick/Trycycler/wiki/Generating-assemblies">Generating assemblies</a></h1><h2 id="准备三代数据"><a href="#准备三代数据" class="headerlink" title="准备三代数据"></a>准备三代数据</h2><p>如果是含有多个文件的话，需要合并到一个文件里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> WHQ17/barcode14/*.fastq &gt; WHQ17.fastq</span><br></pre></td></tr></table></figure><h2 id="质控"><a href="#质控" class="headerlink" title="质控"></a>质控</h2><p>This will discard short reads (less than 1 kbp) and very bad reads (the worst 5%)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filtlong --min_length 1000 --keep_percent 95 WHQ17.fastq &gt; WHQ17.good.fastq</span><br></pre></td></tr></table></figure><h2 id="取子集-Subsampling-reads"><a href="#取子集-Subsampling-reads" class="headerlink" title="取子集 Subsampling reads"></a>取子集 Subsampling reads</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trycycler subsample --reads WHQ17.good.fastq --out_dir read_subsets --threads 8</span><br></pre></td></tr></table></figure><p>+++ info 参数解析</p><ul><li>--count: 输出的Reads子集的数量，大部分情况使用默认的12即可。</li><li>--genome_size: 预估的基因组大小 (e.g. –genome_size 5.5m)。不提供的话会通过miniasm 组装基因组，以估计大小，但是速度会慢。此值用于计算reads深度，不需要很精确，10%的错误是允许的。</li><li>--min_read_depth: 允许的最小read深度，控制着取子集的深度。</li><li>--threads: 使用的线程数（越大越好），影响miniasm 的组装速度。<br>+++</li></ul><p><strong>得到</strong>：<code>read_subsets/sample_*.fastq</code></p><h2 id="组装-Generating-assemblies"><a href="#组装-Generating-assemblies" class="headerlink" title="组装 Generating assemblies"></a>组装 Generating assemblies</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">threads=6  <span class="comment"># change as appropriate for your system</span></span><br><span class="line"><span class="built_in">mkdir</span> assemblies</span><br><span class="line"></span><br><span class="line">flye --nano-raw read_subsets/sample_01.fastq --threads <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> --out-dir assembly_01 &amp;&amp; <span class="built_in">cp</span> assembly_01/assembly.fasta assemblies/assembly_01.fasta &amp;&amp; <span class="built_in">rm</span> -r assembly_01</span><br><span class="line">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_02.fastq <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> &gt; assembly_02.gfa &amp;&amp; any2fasta assembly_02.gfa &gt; assemblies/assembly_02.fasta &amp;&amp; <span class="built_in">rm</span> assembly_02.gfa</span><br><span class="line">raven --threads <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> read_subsets/sample_03.fastq &gt; assemblies/assembly_03.fasta &amp;&amp; <span class="built_in">rm</span> raven.cereal</span><br><span class="line"></span><br><span class="line">flye --nano-raw read_subsets/sample_04.fastq --threads <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> --out-dir assembly_04 &amp;&amp; <span class="built_in">cp</span> assembly_04/assembly.fasta assemblies/assembly_04.fasta &amp;&amp; <span class="built_in">rm</span> -r assembly_04</span><br><span class="line">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_05.fastq <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> &gt; assembly_05.gfa &amp;&amp; any2fasta assembly_05.gfa &gt; assemblies/assembly_05.fasta &amp;&amp; <span class="built_in">rm</span> assembly_05.gfa</span><br><span class="line">raven --threads <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> read_subsets/sample_06.fastq &gt; assemblies/assembly_06.fasta &amp;&amp; <span class="built_in">rm</span> raven.cereal</span><br><span class="line"></span><br><span class="line">flye --nano-raw read_subsets/sample_07.fastq --threads <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> --out-dir assembly_07 &amp;&amp; <span class="built_in">cp</span> assembly_07/assembly.fasta assemblies/assembly_07.fasta &amp;&amp; <span class="built_in">rm</span> -r assembly_07</span><br><span class="line">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_08.fastq <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> &gt; assembly_08.gfa &amp;&amp; any2fasta assembly_08.gfa &gt; assemblies/assembly_08.fasta &amp;&amp; <span class="built_in">rm</span> assembly_08.gfa</span><br><span class="line">raven --threads <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> read_subsets/sample_09.fastq &gt; assemblies/assembly_09.fasta &amp;&amp; <span class="built_in">rm</span> raven.cereal</span><br><span class="line"></span><br><span class="line">flye --nano-raw read_subsets/sample_10.fastq --threads <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> --out-dir assembly_10 &amp;&amp; <span class="built_in">cp</span> assembly_10/assembly.fasta assemblies/assembly_10.fasta &amp;&amp; <span class="built_in">rm</span> -r assembly_10</span><br><span class="line">./Minipolish/miniasm_and_minipolish.sh read_subsets/sample_11.fastq <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> &gt; assembly_11.gfa &amp;&amp; any2fasta assembly_11.gfa &gt; assemblies/assembly_11.fasta &amp;&amp; <span class="built_in">rm</span> assembly_11.gfa</span><br><span class="line">raven --threads <span class="string">&quot;<span class="variable">$threads</span>&quot;</span> read_subsets/sample_12.fastq &gt; assemblies/assembly_12.fasta &amp;&amp; <span class="built_in">rm</span> raven.cereal</span><br></pre></td></tr></table></figure><p><strong>得到</strong>：<code>assemblies/*.fasta</code></p><p><strong>删除中间文件：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -r read_subsets</span><br></pre></td></tr></table></figure><h1 id="Step-2-Clustering-contigs"><a href="#Step-2-Clustering-contigs" class="headerlink" title="Step 2: Clustering contigs"></a><a href="https://github.com/rrwick/Trycycler/wiki/Clustering-contigs">Step 2: Clustering contigs</a></h1><h2 id="Running-Trycycler-cluster"><a href="#Running-Trycycler-cluster" class="headerlink" title="Running Trycycler cluster"></a>Running Trycycler cluster</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trycycler cluster --assemblies assemblies/*.fasta --reads WHQ17.good.fastq --out_dir trycycler --threads 10</span><br></pre></td></tr></table></figure><p>+++ info 参数解析</p><ul><li>--min_contig_len: 最小contig长度（默认1000），短于该长度的contigs将被丢弃。如果你的基因组含有长度更小的质粒，将该值设低。</li><li>--min_contig_depth: 覆盖contigs的reads的最低深度。For example, if an assembly has a mean depth of 90× and this setting is 0.1 (the default), then any contig with &lt;9× depth will be removed.</li><li>--distance: this is the Mash distance threshold used when defining clusters, and the default threshold is 0.01. Smaller thresholds (e.g. 0.005) can result in a larger number of tighter clusters. Larger thresholds (e.g. 0.02) can result in a smaller number of looser clusters.</li><li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li></ul><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><ul><li><code>trycycler/contigs.phylip</code>: a matrix of the Mash distances between all contigs in PHYLIP format.</li><li><code>trycycler/contigs.newick</code>: a FastME tree of the contigs built from the distance matrix. This can be visualised in a phylogenetic tree viewer such as FigTree, Dendroscope or Archaeopteryx.</li><li>One directory for each of the clusters: <code>trycycler/cluster_001, trycycler/cluster_002, etc</code>. These directories will each contain a subdirectory named 1_contigs which includes the FASTA files for the contigs in the cluster.</li></ul><h2 id="筛选-clusters"><a href="#筛选-clusters" class="headerlink" title="筛选 clusters"></a><font color="#FF0000">筛选 clusters</font></h2><p>将<code>contigs.newick</code>导入进化树查看软件，肉眼观察，主观意愿挑选，有问题的cluster删掉。参照<a href="https://github.com/rrwick/Trycycler/wiki/Clustering-contigs">Trycycler官方说明</a>。</p><h1 id="Step-3-Reconciling-contigs"><a href="#Step-3-Reconciling-contigs" class="headerlink" title="Step 3: Reconciling contigs"></a>Step 3: <a href="https://github.com/rrwick/Trycycler/wiki/Reconciling-contigs">Reconciling contigs</a></h1><h2 id="Running-Trycycler-reconcile"><a href="#Running-Trycycler-reconcile" class="headerlink" title="Running Trycycler reconcile"></a>Running Trycycler reconcile</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_001 --threads 10</span><br><span class="line">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_002 --threads 10</span><br><span class="line">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_003 --threads 10</span><br><span class="line">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_004 --threads 10</span><br><span class="line">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_005 --threads 10</span><br><span class="line">trycycler reconcile --reads WHQ17.good.fastq --cluster_dir trycycler/cluster_006 --threads 10</span><br></pre></td></tr></table></figure><p>+++ info 参数解析<br>General settings:</p><ul><li>--linear: use this option if your input contigs are not circular. It will disable the circularisation-correction steps in Trycycler reconcile.</li><li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.</li><li>--verbose: use this flag to display extra output. Mainly there for debugging purposes.</li></ul><p>Initial check:</p><ul><li>--max_mash_dist: if any of the sequences have a pairwise Mash distance of more than this (default &#x3D; 0.02), then the contigs will fail the initial check.</li><li>--max_length_diff: if any of the sequences have a pairwise relative length factor of more than this, then the contigs will fail the initial check. For example, if set to 1.1 (the default), then no contig can be more than 10% longer than any other.</li></ul><p>Circularisation:</p><ul><li>--max_add_seq and –max_add_seq_percent: these control how much sequence Trycycler is willing to add to a contig to circularise it. For example, if they are set to 1000 and 5 (the defaults), then Trycycler will be willing to add up to 1000 bp or 5% of a contig’s length (whichever is smaller) to circularise it. Any contig which requires more than 1000 bp or 5% of its length added to circularise will cause Trycycler reconcile to fail.</li><li>--max_trim_seq and –max_trim_seq_percent: these control how much sequence Trycycler is willing to remove from a contig to circularise it. For example, if they are set to 50000 and 10 (the defaults), then Trycycler will be willing to remove up to 50000 bp or 10% of a contig’s length (whichever is smaller) to circularise it. Any contig which requires more than 50000 bp or 10% of its length removed to circularise will cause Trycycler reconcile to fail.</li></ul><p>Final check:</p><ul><li>--min_identity: if any of the sequences have a pairwise global alignment percent identity of less than this (default &#x3D; 98), then the contigs will fail the final check.</li><li>--max_indel_size: if any of the sequences have a pairwise alignment indel size of more than this (default &#x3D; 250), then the contigs will fail the final check.<br>+++</li></ul><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>When finished, Trycycler reconcile will make <code>2_all_seqs.fasta</code> in the cluster directory, a multi-FASTA file containing each of the contigs ready for multiple sequence alignment.</p><h2 id="Dotplots"><a href="#Dotplots" class="headerlink" title="Dotplots"></a>Dotplots</h2><p>You can optionally run Trycycler dotplot on any problematic clusters to visualise the relationship between the sequences. For example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trycycler dotplot --cluster_dir trycycler/cluster_002</span><br></pre></td></tr></table></figure><p>This will create an image file (dotplots.png) in the cluster directory with a dotplot for all pairwise combinations of sequences. Same-strand k-mer matches are drawn in blue, and opposite-strand k-mer matches are drawn in red. For example:</p><p><img src="https://github.com/rrwick/Trycycler/wiki/images/dotplots.png" class="lazyload placeholder" data-srcset="https://github.com/rrwick/Trycycler/wiki/images/dotplots.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Dotplot"><br>In the above example (taken from cluster 2 of the good demo dataset), you can see that most of the sequences are in very nice agreement with each other. They have shifted start positions relative to each other, but that’s expected for contigs of a circular sequence. One of the contigs (E_contig_2) is on the opposite strand as the others, but that too is normal. Sequence D_contig_2, however, is a problem! It contains two entire copies of the same sequence, visible in the dotplot with itself and the dotplots with other sequences. It will need to be excluded or trimmed in order for reconciliation to succeed.</p><h1 id="Step-4-Multiple-sequence-alignment"><a href="#Step-4-Multiple-sequence-alignment" class="headerlink" title="Step 4: Multiple sequence alignment"></a><a href="https://github.com/rrwick/Trycycler/wiki/Multiple-sequence-alignment">Step 4: Multiple sequence alignment</a></h1><h2 id="Running-Trycycler-msa"><a href="#Running-Trycycler-msa" class="headerlink" title="Running Trycycler msa"></a>Running Trycycler msa</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">trycycler msa --cluster_dir trycycler/cluster_001 --threads 8</span><br><span class="line">trycycler msa --cluster_dir trycycler/cluster_002 --threads 8</span><br><span class="line">trycycler msa --cluster_dir trycycler/cluster_003 --threads 8</span><br><span class="line">trycycler msa --cluster_dir trycycler/cluster_004 --threads 8</span><br><span class="line">trycycler msa --cluster_dir trycycler/cluster_005 --threads 8</span><br><span class="line">trycycler msa --cluster_dir trycycler/cluster_006 --threads 8</span><br></pre></td></tr></table></figure><p>+++ info 参数解析<br>除了线程数外，其他三个参数可以用默认值。</p><ul><li>--kmer: the k-mer size used for sequence partitioning (default &#x3D; 32).</li><li>--step: the step size used for sequence partitioning (default &#x3D; 1000).</li><li>--lookahead: the look-ahead margin used for sequence partitioning (default &#x3D; 10000).</li><li>--threads: this is how many parallel instances of MUSCLE will be used when aligning the sequence partitions. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li></ul><h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><p>When finished, Trycycler reconcile will make a <code>3_msa.fasta</code> file in the cluster directory, a FASTA-formatted multiple sequence alignment of the contigs ready for use in generating a consensus. </p><h1 id="Step-5-Partitioning-reads"><a href="#Step-5-Partitioning-reads" class="headerlink" title="Step 5: Partitioning reads"></a><a href="https://github.com/rrwick/Trycycler/wiki/Partitioning-reads">Step 5: Partitioning reads</a></h1><h2 id="Running-Trycycler-partition"><a href="#Running-Trycycler-partition" class="headerlink" title="Running Trycycler partition"></a>Running Trycycler partition</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trycycler partition --reads WHQ17.good.fastq --cluster_dirs trycycler/cluster_* --threads 8</span><br></pre></td></tr></table></figure><p>+++ info 参数解析</p><ul><li>--min_aligned_len: reads with less than this many bases aligned (default &#x3D; 1000) will be ignored.</li><li>--min_read_cov: reads with less than this percentage of their length covered by alignments (default &#x3D; 90.0) will be ignored.</li><li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.<br>+++</li></ul><h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><p>After Trycycler partition completes, each of the cluster directories should have a <code>4_reads.fastq</code> file which contains its share of the total reads.</p><h1 id="Step-6-Generating-a-consensus"><a href="#Step-6-Generating-a-consensus" class="headerlink" title="Step 6: Generating a consensus"></a><a href="https://github.com/rrwick/Trycycler/wiki/Generating-a-consensus">Step 6: Generating a consensus</a></h1><h2 id="Running-Trycycler-consensus"><a href="#Running-Trycycler-consensus" class="headerlink" title="Running Trycycler consensus"></a>Running Trycycler consensus</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">trycycler consensus --cluster_dir trycycler/cluster_001 --threads 8</span><br><span class="line">trycycler consensus --cluster_dir trycycler/cluster_002 --threads 8</span><br><span class="line">trycycler consensus --cluster_dir trycycler/cluster_003 --threads 8</span><br><span class="line">trycycler consensus --cluster_dir trycycler/cluster_004 --threads 8</span><br><span class="line">trycycler consensus --cluster_dir trycycler/cluster_005 --threads 8</span><br><span class="line">trycycler consensus --cluster_dir trycycler/cluster_006 --threads 8</span><br></pre></td></tr></table></figure><p>+++ info 参数解析</p><ul><li>--linear: use this option if your input contigs are not circular. It will disable the circularisation steps when aligning reads and choosing variants.</li><li>--min_aligned_len: reads with less than this many bases aligned (default &#x3D; 1000) will be ignored.</li><li>--min_read_cov: reads with less than this percentage of their length aligned (default &#x3D; 90.0) will be ignored.</li><li>--threads: this is how many threads Trycycler will use for read alignment. It will only affect the speed performance, so you’ll probably want to use as many threads as you have available.</li><li>--verbose: use this flag to display extra output. For every read-assessed variant, this will show the alternative sequences and their read alignment scores.<br>+++</li></ul><h2 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h2><p>When finished, you should have a <code>7_final_consensus.fasta</code> file in each of your cluster directories. If you have multiple clusters, you can combine their consensus sequences into a single FASTA file like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> trycycler/cluster_*/7_final_consensus.fasta &gt; trycycler/consensus.fasta</span><br></pre></td></tr></table></figure><h1 id="Step-7-Polishing-after-Trycycler"><a href="#Step-7-Polishing-after-Trycycler" class="headerlink" title="Step 7: Polishing after Trycycler"></a><a href="https://github.com/rrwick/Trycycler/wiki/Polishing-after-Trycycler">Step 7: Polishing after Trycycler</a></h1><h2 id="Medaka-需要知道测序仪信息basecalling"><a href="#Medaka-需要知道测序仪信息basecalling" class="headerlink" title="Medaka (需要知道测序仪信息basecalling)"></a>Medaka (需要知道测序仪信息basecalling)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> trycycler/cluster_*; <span class="keyword">do</span></span><br><span class="line">    medaka_consensus -i <span class="string">&quot;<span class="variable">$c</span>&quot;</span>/4_reads.fastq -d <span class="string">&quot;<span class="variable">$c</span>&quot;</span>/7_final_consensus.fasta -o <span class="string">&quot;<span class="variable">$c</span>&quot;</span>/medaka -m r941_prom_hac_g507 -t 8</span><br><span class="line">    <span class="built_in">mv</span> <span class="string">&quot;<span class="variable">$c</span>&quot;</span>/medaka/consensus.fasta <span class="string">&quot;<span class="variable">$c</span>&quot;</span>/8_medaka.fasta</span><br><span class="line">    <span class="built_in">rm</span> -r <span class="string">&quot;<span class="variable">$c</span>&quot;</span>/medaka <span class="string">&quot;<span class="variable">$c</span>&quot;</span>/*.fai <span class="string">&quot;<span class="variable">$c</span>&quot;</span>/*.mmi  <span class="comment"># clean up</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> trycycler/cluster_*/8_medaka.fasta &gt; trycycler/consensus.fasta</span><br></pre></td></tr></table></figure><h2 id="Short-read-polishing"><a href="#Short-read-polishing" class="headerlink" title="Short-read polishing"></a>Short-read polishing</h2><h3 id="Step-1-read-QC"><a href="#Step-1-read-QC" class="headerlink" title="Step 1: read QC"></a>Step 1: read QC</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastp --in1 WHQ17_BDMS190038054-1a_1.clean.fq.gz --in2 WHQ17_BDMS190038054-1a_2.clean.fq.gz --out1 WHQ17_1.fastq.gz --out2 WHQ17_2.fastq.gz --unpaired1 WHQ17_u.fastq.gz --unpaired2 WHQ17-u.fastq.gz</span><br></pre></td></tr></table></figure><h3 id="Step-2-Polypolish"><a href="#Step-2-Polypolish" class="headerlink" title="Step 2: Polypolish"></a>Step 2: Polypolish</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bwa index trycycler/consensus.fasta</span><br><span class="line">bwa mem -t 8 -a trycycler/consensus.fasta WHQ17_1.fastq.gz &gt; alignments_1.sam</span><br><span class="line">bwa mem -t 8 -a trycycler/consensus.fasta WHQ17_2.fastq.gz &gt; alignments_2.sam</span><br><span class="line">polypolish trycycler/consensus.fasta alignments_1.sam alignments_2.sam &gt; trycycler/polypolish.fasta</span><br></pre></td></tr></table></figure><h3 id="Step-3-POLCA"><a href="#Step-3-POLCA" class="headerlink" title="Step 3: POLCA"></a>Step 3: POLCA</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这一步报错，暂未执行</span></span><br><span class="line">polca.sh -a trycycler/polypolish.fasta -r <span class="string">&quot;WHQ17_1.fastq.gz WHQ17_2.fastq.gz&quot;</span> -t 8 -m 10G</span><br><span class="line"><span class="built_in">mv</span> *.PolcaCorrected.fa polypolish_polca.fasta</span><br></pre></td></tr></table></figure><h1 id="删除无用信息"><a href="#删除无用信息" class="headerlink" title="删除无用信息"></a>删除无用信息</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> alignments_1.sam alignments_2.sam fastp.*</span><br><span class="line"><span class="built_in">rm</span> -rf *.read_subsets</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用eggNOG-mapper注释基因组</title>
      <link href="/post/2581.html"/>
      <url>/post/2581.html</url>
      
        <content type="html"><![CDATA[<h1 id="EggNOG-mapper简介-本文未完待续…"><a href="#EggNOG-mapper简介-本文未完待续…" class="headerlink" title="EggNOG-mapper简介(本文未完待续…)"></a>EggNOG-mapper简介(本文未完待续…)</h1><p>EggNOG-mapper (a.k.a. emapper.py or just emapper) is a tool for fast functional annotation of novel sequences. It uses precomputed orthologous groups (OGs) and phylogenies from the eggNOG database (<a href="http://eggnogdb.embl.de/">http://eggnogdb.embl.de/</a>) to transfer functional information from fine-grained orthologs only.</p><p>Common uses of eggNOG-mapper include the annotation of novel genomes, transcriptomes or even metagenomic gene catalogs.</p><p>The use of orthology predictions for functional annotation permits a higher precision than traditional homology searches (i.e. BLAST searches), as it avoids transferring annotations from close paralogs (duplicate genes with a higher chance of being involved in functional divergence).</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>Python 3.7 (or greater)</li><li>BioPython 1.76 (python package) (BioPython 1.78 should work since emapper version 2.1.7)</li><li>psutil 5.7.0 (python package)</li><li>xlsxwriter 1.4.3 (python package), only if using the –excel option</li><li>wget (linux command, required for downloading the eggNOG-mapper databases with download_eggnog_data.py, and to create new Diamond&#x2F;MMseqs2 databases with create_dbs.py)</li><li>sqlite (&gt;&#x3D;3.8.2)</li></ul><h2 id="需要的存储空间"><a href="#需要的存储空间" class="headerlink" title="需要的存储空间"></a>需要的存储空间</h2><ul><li>~40 GB for the eggNOG annotation databases (eggnog.db and eggnog.taxa.db)</li><li>~9 GB for Diamond database of eggNOG sequences (required if using -m diamond, which is the default search mode).</li><li><del>11 GB for MMseqs2 database of eggNOG sequences (</del>86 GB if MMseqs2 index is created) (required if using -m mmseqs).</li><li>~3 GB for PFAM database (required if using –pfam_realign options for realignment of queries to PFAM domains).<br>The size of eggNOG diamond&#x2F;mmseqs databases created with create_dbs.py is highly variable, depending on the size of the chosen taxonomic groups.</li></ul><p>Databases for specific taxonomic ranges can be downloaded (for HMMER) or created (for Diamond and MMseqs2). The size of these databases is highly variable. For the size of HMMER databases, check <a href="http://eggnog5.embl.de/#/app/downloads">http://eggnog5.embl.de/#/app/downloads</a>. For Diamond and MMseqs2 databases, DB size will depend on the number of proteins which are from those taxonomic ranges. Also, these proteins need to be downloaded to create the databases, and can be removed afterwards.</p><h2 id="Other-Requirements"><a href="#Other-Requirements" class="headerlink" title="Other Requirements"></a>Other Requirements</h2><ul><li>Using –dbmem loads the whole eggnog.db sqlite3 annotation database during the annotation step, and therefore requires ~44 GB of memory.</li><li>Using the –num_servers option when running HMMER in server mode (a.k.a. hmmgpmd, which is used for -m hmmer –usemem, –pfam_realign denovo or hmm_server.py) loads the HMM database as many times as specified in the argument (e.g. –pfam_realign denovo –num_servers 2 loads the PFAM database into memory twice, with up to roughly 2 GB per instance).</li></ul><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><ul><li>安装主程序</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c bioconda eggnog-mapper</span><br></pre></td></tr></table></figure><ul><li>安装数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#创建数据库存储目录</span><br><span class="line">mkdir /home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class="line"></span><br><span class="line">#将数据库位置加入环境变量</span><br><span class="line">export EGGNOG_DATA_DIR=/home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class="line"></span><br><span class="line">#下载数据库</span><br><span class="line">download_eggnog_data.py -P -M -y -f --data_dir /home/liu/miniconda3/envs/pgcgap/lib/python3.7/site-packages/data</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Similarly, use create_dbs.py. For example, to create a diamond database for Bacteria only:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create_dbs.py -m diamond --dbname bacteria --taxa Bacteria</span><br></pre></td></tr></table></figure><p>This will create a bacteria.dmnd diamond database in the default data directory or the one specified in EGGNOG_DATA_DIR environment variable. Such database can be used with emapper.py –dmnd_db bacteria.dmnd. Note that the first time create_dbs.py is used it will take time to download the eggNOG proteins and create the Diamond or MMseqs2 database. Next calls to create_dbs.py (to the same data directory pointed by EGGNOG_DATA_DIR, or –data_dir, or data&#x2F; by default) will not need to download the eggnog5 proteins again. If no more databases are going to be created, the proteins can be removed. For further info, check create_dbs.py –help.</p><h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><h1 id="代码获取"><a href="#代码获取" class="headerlink" title="代码获取"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Functional genomics </tag>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microbial Ecology投稿经验</title>
      <link href="/post/8e76.html"/>
      <url>/post/8e76.html</url>
      
        <content type="html"><![CDATA[<h1 id="Geographic-Scale-Influences-the-Interactivities-Between-Determinism-and-Stochasticity-in-the-Assembly-of-Sedimentary-Microbial-Communities-on-the-South-China-Sea-Shelf投稿过程"><a href="#Geographic-Scale-Influences-the-Interactivities-Between-Determinism-and-Stochasticity-in-the-Assembly-of-Sedimentary-Microbial-Communities-on-the-South-China-Sea-Shelf投稿过程" class="headerlink" title="Geographic Scale Influences the Interactivities Between Determinism and Stochasticity in the Assembly of Sedimentary Microbial Communities on the South China Sea Shelf投稿过程"></a>Geographic Scale Influences the Interactivities Between Determinism and Stochasticity in the Assembly of Sedimentary Microbial Communities on the South China Sea Shelf投稿过程</h1><h2 id="类型："><a href="#类型：" class="headerlink" title="类型："></a>类型：</h2><ul><li>Artical</li></ul><h2 id="周期："><a href="#周期：" class="headerlink" title="周期："></a>周期：</h2><ul><li>~4.5个月</li></ul><h2 id="节点："><a href="#节点：" class="headerlink" title="节点："></a>节点：</h2><ul><li><strong>First Submission</strong>：2021.09.08</li><li><strong>分配审稿人</strong>：2021.09.14</li><li><strong>审稿完毕</strong>：2021.09.21</li><li><strong>返回修稿意见</strong>：2021.10.23 早上</li><li><strong>Resubmission</strong>：2021.11.16 早上</li><li><strong>With Editor</strong>：2021.11.16 中午</li><li><strong>Under review</strong>: 2021.11.17 早上</li><li><strong>Required reviews completed</strong>：2021.12.03 中午</li><li><strong>Minor revision needed</strong>：2021.12.09 早上</li><li><strong>Revision submitted to journal</strong>：2020.12.09 夜晚</li><li><strong>With editor</strong>：2021.12.10 中午</li><li><strong>返回修稿意见</strong>：2021.12.11 9:50<br>编辑发邮件让修稿，然而修稿意见里面是空的。我们于12月13号发信问编辑，当天收到回信，结果是他搞错了，不需要再修稿了。</li><li><strong>Accepted</strong>：2021.12.14 20:32</li><li><strong>Proof</strong>：2022.01.17 10:30</li><li><strong>Online</strong>：2022.01.18</li></ul><h2 id="文章链接"><a href="#文章链接" class="headerlink" title="文章链接"></a>文章链接</h2><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/8e76_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/8e76_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><a href="https://doi.org/10.1007/s00248-021-01946-x">Geographic Scale Influences the Interactivities Between Determinism and Stochasticity in the Assembly of Sedimentary Microbial Communities on the South China Sea Shelf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该杂志速度还是比较快的，审稿人有点多，4位，但是提的意见非常有助于提升文章的质量。</p>]]></content>
      
      
      <categories>
          
          <category> 投稿 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投稿经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用DeepARG预测抗生素抗性基因ARGs</title>
      <link href="/post/92eb.html"/>
      <url>/post/92eb.html</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>DeepARG 是一种机器学习解决方案，它使用深度学习来表征和注释宏基因组中的抗生素抗性基因。它由两种输入模型组成：短序列Reads和gene-like序列。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/92eb_1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Automatic annotation of highly homologous ARGs"></p><h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><ul><li><p>通过<code>conda</code>安装</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建环境</span></span><br><span class="line">conda create -n deeparg_env python=2.7.18</span><br><span class="line">conda activate deeparg_env</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装diamond</span></span><br><span class="line">conda install -c bioconda diamond==0.9.24</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装其他依赖</span></span><br><span class="line">conda install trimmomatic vsearch bedtools bowtie2 samtools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装DeepARG</span></span><br><span class="line">pip install deeparg==1.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载数据库等， -o指定下载路径</span></span><br><span class="line">deeparg download_data -o tools/deeparg</span><br></pre></td></tr></table></figure></li><li><p>通过其他方法安装</p><p>  参考<a href="https://bitbucket.org/gusphdproj/deeparg-ss/src/master/">官方文档</a>进行。</p></li></ul><h1 id="使用软件"><a href="#使用软件" class="headerlink" title="使用软件"></a>使用软件</h1><h2 id="预测Reads中的ARGs"><a href="#预测Reads中的ARGs" class="headerlink" title="预测Reads中的ARGs"></a>预测Reads中的ARGs</h2><h3 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h3><p>双端Reads。</p><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deeparg short_reads_pipeline --forward_pe_file Reads/LD201221-0003_S20210104-0015_F01_clean.R1.fq.gz --reverse_pe_file Reads/LD201221-0003_S20210104-0015_F01_clean.R2.fq.gz --output_file F01.deeparg -d ~/tools/deeparg/</span><br></pre></td></tr></table></figure><p>+++primary 参数解析</p><p><code>-h, --help</code>            show this help message and exit<br><code>--forward_pe_file</code> <strong>FORWARD_PE_FILE</strong>:           forward mate from paired end library<br><code>--reverse_pe_file</code> <strong>REVERSE_PE_FILE</strong>:             reverse mate from paired end library<br><code>--output_file</code> <strong>OUTPUT_FILE</strong>:           save results to this file prefix<br><code>-d</code> <strong>DEEPARG_DATA_PATH</strong>:               Path where data was downloaded [see deeparg download-data –help for details]<br><code>--deeparg_identity</code> <strong>DEEPARG_IDENTITY</strong>:      minimum identity for ARG alignments [default 80]<br><code>--deeparg_probability</code> <strong>DEEPARG_PROBABILITY</strong>:      minimum probability for considering a reads as ARG-like [default 0.8]<br><code>--deeparg_evalue</code> <strong>DEEPARG_EVALUE</strong>:     minimum e-value for ARG alignments [default 1e-10]<br><code>--gene_coverage</code> <strong>GENE_COVERAGE</strong>:        minimum coverage required for considering a full gene in percentage. This parameter looks at the full gene and all hits that align to the gene. If the overlap of all hits is below the threshold the gene is discarded. Use with caution [default 1]</p><p>+++</p><h2 id="预测FASTA序列中的ARGs"><a href="#预测FASTA序列中的ARGs" class="headerlink" title="预测FASTA序列中的ARGs"></a>预测FASTA序列中的ARGs</h2><h3 id="输入文件-1"><a href="#输入文件-1" class="headerlink" title="输入文件"></a>输入文件</h3><p>可以是<code>核苷酸序列</code>或者是<code>氨基酸序列</code>。</p><h3 id="命令-1"><a href="#命令-1" class="headerlink" title="命令"></a>命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1) Annotate gene-like sequences when the input is a nucleotide FASTA file:</span></span><br><span class="line">    deeparg predict --model LS --<span class="built_in">type</span> nucl --input /path/file.fasta --out /path/to/out/file.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2) Annotate gene-like sequences when the input is an amino acid FASTA file:</span></span><br><span class="line">    deeparg predict --model LS --<span class="built_in">type</span> prot --input /path/file.fasta --out /path/to/out/file.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3) Annotate short sequence reads when the input is a nucleotide FASTA file:</span></span><br><span class="line">    deeparg predict --model SS --<span class="built_in">type</span> nucl --input /path/file.fasta --out /path/to/out/file.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4) Annotate short sequence reads when the input is a protein FASTA file (unusual case):</span></span><br><span class="line">    deeparg predict --model SS --<span class="built_in">type</span> prot --input /path/file.fasta --out /path/to/out/file.out</span><br></pre></td></tr></table></figure><p>+++primary 参数解析<br>usage: deeparg predict<br>    <code>-h, --help</code>            show this help message and exit<br>    <code>--model</code> <strong>MODEL</strong>:         Select model to use (short sequences for reads | long sequences for genes) SS|LS [No default]<br>    <code>-i, --input-file</code> <strong>INPUT_FILE</strong>:     Input file (Fasta input file)<br>    <code>-o, --output-file</code> <strong>OUTPUT_FILE</strong>:    Output file where to store results<br>    <code>-d, --data-path</code> <strong>DATA_PATH</strong>:       Path where data was downloaded [see deeparg download-data –help for details]<br>    <code>--type</code> <strong>TYPE</strong>:       Molecular data type prot&#x2F;nucl [Default: nucl]<br>    <code>--min-prob</code> <strong>MIN_PROB</strong>:   Minimum probability cutoff [Default: 0.8]<br>    <code>--arg-alignment-identity</code> <strong>ARG_ALIGNMENT_IDENTITY</strong>:          Identity cutoff for sequence alignment [Default: 50]<br>    <code>--arg-alignment-evalue</code> <strong>ARG_ALIGNMENT_EVALUE</strong>:                  Evalue cutoff [Default: 1e-10]<br>    <code>--arg-alignment-overlap</code> <strong>ARG_ALIGNMENT_OVERLAP</strong>:                 Alignment read overlap [Default: 0.8]<br>    <code>--arg-num-alignments-per-entry</code> <strong>ARG_NUM_ALIGNMENTS_PER_ENTRY</strong>:    Diamond, minimum number of alignments per entry [Default: 1000]<br>    <code>--model-version</code> <strong>MODEL_VERSION</strong>:     Model deepARG version [Default: v2]</p><p>+++</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>DeepARG产生两个文件： <code>.ARG</code>包含probability &gt;&#x3D; –prob (0.8 default)的序列，<code>.potential.ARG</code>包含probability &lt; –prob (0.8 default)的序列。<code>*.potential.ARG</code>文件中仍可能含有ARG-like序列，但是需要对这些序列进行检查。 </p><p>两个文件的文件头如下所示：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* ARG<span class="built_in">_</span>NAME</span><br><span class="line">* QUERY<span class="built_in">_</span>START</span><br><span class="line">* QUERY<span class="built_in">_</span>END</span><br><span class="line">* QUERY<span class="built_in">_</span>ID</span><br><span class="line">* PREDICTED<span class="built_in">_</span>ARG<span class="built_in">_</span>CLASS</span><br><span class="line">* BEST<span class="built_in">_</span>HIT<span class="built_in">_</span>FROM<span class="built_in">_</span>DATABASE</span><br><span class="line">* PREDICTION<span class="built_in">_</span>PROBABILITY</span><br><span class="line">* ALIGNMENT<span class="built_in">_</span>BESTHIT<span class="built_in">_</span>IDENTITY (<span class="comment">%)</span></span><br><span class="line">* ALIGNMENT<span class="built_in">_</span>BESTHIT<span class="built_in">_</span>LENGTH</span><br><span class="line">* ALIGNMENT<span class="built_in">_</span>BESTHIT<span class="built_in">_</span>BITSCORE</span><br><span class="line">* ALIGNMENT<span class="built_in">_</span>BESTHIT<span class="built_in">_</span>EVALUE</span><br><span class="line">* COUNTS</span><br></pre></td></tr></table></figure><h3 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h3><ul><li>Run_deepARG_reads.pl</li><li>Run_deepARG_scafs.pl</li></ul><h3 id="样本间比较"><a href="#样本间比较" class="headerlink" title="样本间比较"></a>样本间比较</h3><h4 id="生成样本VS-ARGs矩阵"><a href="#生成样本VS-ARGs矩阵" class="headerlink" title="生成样本VS. ARGs矩阵"></a>生成样本VS. ARGs矩阵</h4><ul><li>co_type.pl</li></ul><h4 id="绘制气泡图"><a href="#绘制气泡图" class="headerlink" title="绘制气泡图"></a>绘制气泡图</h4><ul><li>Bubble_plot.R</li></ul><h4 id="绘制热图"><a href="#绘制热图" class="headerlink" title="绘制热图"></a>绘制热图</h4><ul><li>Plot_heatmap.R</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://bench.cs.vt.edu/deeparg">DeepARG官网</a></li><li><a href="https://bitbucket.org/gusphdproj/deeparg-ss/src/master/">DeepARG Repository</a></li></ul><h1 id="代码获取"><a href="#代码获取" class="headerlink" title="代码获取"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“92eb”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生信软件 </tag>
            
            <tag> ARGs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算蛋白质等电点并绘制全局pI图</title>
      <link href="/post/85d7.html"/>
      <url>/post/85d7.html</url>
      
        <content type="html"><![CDATA[<h1 id="蛋白质组的全局-pIs"><a href="#蛋白质组的全局-pIs" class="headerlink" title="蛋白质组的全局 pIs"></a>蛋白质组的全局 pIs</h1><p>细胞全局蛋白质组 pI 图的变化取决于氨基酸的总电荷，并对蛋白质的结构和特性具有重要意义。</p><p>普遍认为原核基因组具有两个最大的双峰形状，一个在酸性pH值下主要对应于溶解的蛋白质（细胞质蛋白或分泌蛋白），另一种在膜蛋白的碱性pH值下，具有细胞内碱性（带正电荷）结构域以促进质子动力的产生。在这两个峰之间，有一个最小的中性值，对应于细胞内的pH值（如下图）。</p><p>蛋白质氨基酸组成和 pI 水平的显着变化提供了一种工具来预测培养物或宏基因组组装基因组(MAG)的首选栖息地。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="蛋白质组的全局 pIs"><br><a href="https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-019-0731-5#Abs1">Pedro J. et al., 2019, Microbiome</a></p><h1 id="安装EMBOSS"><a href="#安装EMBOSS" class="headerlink" title="安装EMBOSS"></a>安装EMBOSS</h1><ul><li>下载</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget  ftp://emboss.open-bio.org/pub/EMBOSS/emboss-latest.tar.gz</span><br></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar zxvf emboss-latest.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 防止报错 (error while loading shared libraries: libnucleus.so.6)</span></span><br><span class="line">sudo /sbin/ldconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置、编译与安装</span></span><br><span class="line"><span class="built_in">cd</span> emboss-latest</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h1 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h1><p>输入文件为含有一条或多条氨基酸序列的FASTA格式文件。</p><h1 id="计算氨基酸序列的各特征数据Calculate-statistics-of-protein-properties"><a href="#计算氨基酸序列的各特征数据Calculate-statistics-of-protein-properties" class="headerlink" title="计算氨基酸序列的各特征数据Calculate statistics of protein properties"></a><ruby>计算氨基酸序列的各特征数据<rt>Calculate statistics of protein properties</rt></ruby></h1><h2 id="逐个文件计算"><a href="#逐个文件计算" class="headerlink" title="逐个文件计算"></a>逐个文件计算</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pepstats -sequence F01_bin.1.faa -outfile F01_bin.1.out</span><br></pre></td></tr></table></figure><p>:::primary 参数解析</p><ul><li><p>Standard (Mandatory) qualifiers:</p><ul><li>[-sequence]          seqall     Protein sequence(s) filename and optional<br>                        format, or reference (input USA)</li><li>[-outfile]           outfile    [*.pepstats] Pepstats program output file</li></ul></li><li><p>Advanced (Unprompted) qualifiers:</p><ul><li>-aadata             datafile   [Eamino.dat] Amino acid properties</li><li>-mwdata             datafile   [Emolwt.dat] Molecular weight data for amino<br>                        acids</li><li>-pkdata             datafile   [Epk.dat] Values of pKa for amino acids</li><li>-[no]termini        boolean    [Y] Include charge at N and C terminus</li><li>-mono               boolean    [N] Use monoisotopic weights</li></ul></li></ul><p>:::</p><h2 id="批量计算与pI提取并输出为相对丰度"><a href="#批量计算与pI提取并输出为相对丰度" class="headerlink" title="批量计算与pI提取并输出为相对丰度"></a>批量计算与pI提取并输出为相对丰度</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># name: print_pI.pl</span></span><br><span class="line"><span class="comment"># Author: Liu Hualin</span></span><br><span class="line"><span class="comment"># Date: 2022.01.03</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @genome = <span class="keyword">glob</span>(<span class="string">&quot;*.faa&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@genome) &#123;</span><br><span class="line">$_=~<span class="regexp">/(\S+).faa/</span>;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;.pepstats&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $pi = $1 . <span class="string">&quot;.pI&quot;</span>;</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;pepstats -sequence $_ -outfile $out&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> %hash;</span><br><span class="line"><span class="keyword">my</span> $seqnum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="regexp">/^(Isoelectric Point = )(\S+)/</span>) &#123;</span><br><span class="line"><span class="keyword">my</span> $pi = <span class="keyword">sprintf</span> <span class="string">&quot;%.1f&quot;</span>, $2;</span><br><span class="line">$hash&#123;$pi&#125;++;</span><br><span class="line">$seqnum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"></span><br><span class="line"><span class="comment">#my @records = values %hash;</span></span><br><span class="line"><span class="comment">#my $seqnum = @records;</span></span><br><span class="line"><span class="comment">#print $seqnum . &quot;\n&quot;;</span></span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$pi&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;Isoelectric point\tRelative frequency\n&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span>  (<span class="keyword">keys</span> %hash) &#123;</span><br><span class="line"><span class="keyword">my</span> $frequency = <span class="keyword">sprintf</span> <span class="string">&quot;%.2f&quot;</span>, $hash&#123;$_&#125;/$seqnum;<span class="comment">#@records;</span></span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;$_\t$frequency\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="选择性忽略-（这是我自己用的）"><a href="#选择性忽略-（这是我自己用的）" class="headerlink" title="选择性忽略 （这是我自己用的）"></a>选择性忽略 （这是我自己用的）</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># name: co_sample_pI.pl</span></span><br><span class="line"><span class="comment"># Author: Liu Hualin</span></span><br><span class="line"><span class="comment"># Date: 2022.01.03</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;F06.pi&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;MAGs\tIsoelectric point\tRelative frequency\n&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> @pI = <span class="keyword">glob</span>(<span class="string">&quot;F06*.pI&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@pI) &#123;</span><br><span class="line">$_=~<span class="regexp">/(\S+).pI/</span>;</span><br><span class="line"><span class="keyword">my</span> $mag = $1;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;$mag\t$_\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br></pre></td></tr></table></figure><h1 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h1><h2 id="绘制蛋白质组的全局-pIs图"><a href="#绘制蛋白质组的全局-pIs图" class="headerlink" title="绘制蛋白质组的全局 pIs图"></a>绘制蛋白质组的全局 pIs图</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 1 读入数据</span></span><br><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/Results/Annotations/AAs&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">F1 <span class="operator">&lt;-</span>read.table<span class="punctuation">(</span><span class="string">&quot;F01_bin.1.pI&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2 绘图，以下5选1</span></span><br><span class="line"><span class="comment">## 单组加点，运行完后跳到Step 3</span></span><br><span class="line">p1 <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>F1<span class="punctuation">,</span> aes<span class="punctuation">(</span>Isoelectric.point<span class="punctuation">,</span> Relative.frequency<span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span>geom_point<span class="punctuation">(</span>size<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span>shape<span class="operator">=</span><span class="number">21</span><span class="punctuation">)</span><span class="operator">+</span>geom_smooth<span class="punctuation">(</span>method<span class="operator">=</span> <span class="string">&quot;gam&quot;</span><span class="punctuation">)</span><span class="operator">+</span>theme_classic<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 单组无点，运行完后跳到Step 3</span></span><br><span class="line">p1 <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>F1<span class="punctuation">,</span> aes<span class="punctuation">(</span>Isoelectric.point<span class="punctuation">,</span> Relative.frequency<span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span>geom_smooth<span class="punctuation">(</span>method<span class="operator">=</span> <span class="string">&quot;gam&quot;</span><span class="punctuation">)</span><span class="operator">+</span>theme_classic<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 多组加点</span></span><br><span class="line">p1 <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>F1<span class="punctuation">,</span> aes<span class="punctuation">(</span>Isoelectric.point<span class="punctuation">,</span> Relative.frequency<span class="punctuation">,</span> color<span class="operator">=</span>MAGs<span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span>geom_point<span class="punctuation">(</span>size<span class="operator">=</span><span class="number">3</span><span class="punctuation">,</span>shape<span class="operator">=</span><span class="number">21</span><span class="punctuation">)</span><span class="operator">+</span>geom_smooth<span class="punctuation">(</span>method<span class="operator">=</span> <span class="string">&quot;gam&quot;</span><span class="punctuation">)</span><span class="operator">+</span>theme_classic<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 多组无点显示置信区间</span></span><br><span class="line">p1 <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>F1<span class="punctuation">,</span> aes<span class="punctuation">(</span>Isoelectric.point<span class="punctuation">,</span> Relative.frequency<span class="punctuation">,</span> color<span class="operator">=</span>MAGs<span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span>geom_smooth<span class="punctuation">(</span>method<span class="operator">=</span> <span class="string">&quot;gam&quot;</span><span class="punctuation">)</span><span class="operator">+</span>theme_classic<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 多组无点去除置信区间</span></span><br><span class="line">p1 <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>F1<span class="punctuation">,</span> aes<span class="punctuation">(</span>Isoelectric.point<span class="punctuation">,</span> Relative.frequency<span class="punctuation">,</span> color<span class="operator">=</span>MAGs<span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span>geom_smooth<span class="punctuation">(</span>method<span class="operator">=</span> <span class="string">&quot;gam&quot;</span><span class="punctuation">,</span>se <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span><span class="operator">+</span>theme_classic<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3 美化，看下图</span></span><br><span class="line">p1 <span class="operator">+</span> scale_x_continuous<span class="punctuation">(</span>limits<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> scale_y_continuous<span class="punctuation">(</span>limits<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="built_in">max</span><span class="punctuation">(</span>F1<span class="operator">$</span>Relative.frequency<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="built_in">max</span><span class="punctuation">(</span>F1<span class="operator">$</span>Relative.frequency<span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">0.01</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> labs<span class="punctuation">(</span>x<span class="operator">=</span> <span class="string">&quot;Isoelectric point&quot;</span><span class="punctuation">,</span>y <span class="operator">=</span> <span class="string">&quot;Relative frequency&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## ==============以下代码为自用========================</span></span><br><span class="line"><span class="comment">## F04自定义颜色</span></span><br><span class="line">p1 <span class="operator">+</span> scale_x_continuous<span class="punctuation">(</span>limits<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> scale_y_continuous<span class="punctuation">(</span>limits<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="built_in">max</span><span class="punctuation">(</span>F1<span class="operator">$</span>Relative.frequency<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="built_in">max</span><span class="punctuation">(</span>F1<span class="operator">$</span>Relative.frequency<span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">0.01</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> labs<span class="punctuation">(</span>x<span class="operator">=</span> <span class="string">&quot;Isoelectric point&quot;</span><span class="punctuation">,</span>y <span class="operator">=</span> <span class="string">&quot;Relative frequency&quot;</span><span class="punctuation">)</span><span class="operator">+</span> scale_color_manual<span class="punctuation">(</span>name<span class="operator">=</span><span class="string">&quot;MAGs&quot;</span><span class="punctuation">,</span> values<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span><span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span><span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## F05自定义颜色</span></span><br><span class="line">p1 <span class="operator">+</span> scale_x_continuous<span class="punctuation">(</span>limits<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> scale_y_continuous<span class="punctuation">(</span>limits<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="built_in">max</span><span class="punctuation">(</span>F1<span class="operator">$</span>Relative.frequency<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="built_in">max</span><span class="punctuation">(</span>F1<span class="operator">$</span>Relative.frequency<span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">0.01</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> labs<span class="punctuation">(</span>x<span class="operator">=</span> <span class="string">&quot;Isoelectric point&quot;</span><span class="punctuation">,</span>y <span class="operator">=</span> <span class="string">&quot;Relative frequency&quot;</span><span class="punctuation">)</span><span class="operator">+</span> scale_color_manual<span class="punctuation">(</span>name<span class="operator">=</span><span class="string">&quot;MAGs&quot;</span><span class="punctuation">,</span> values<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span><span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span><span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## F06自定义颜色</span></span><br><span class="line">p1 <span class="operator">+</span> scale_x_continuous<span class="punctuation">(</span>limits<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">14</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> scale_y_continuous<span class="punctuation">(</span>limits<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">0.01</span><span class="punctuation">,</span> <span class="built_in">max</span><span class="punctuation">(</span>F1<span class="operator">$</span>Relative.frequency<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span><span class="built_in">max</span><span class="punctuation">(</span>F1<span class="operator">$</span>Relative.frequency<span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">0.01</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> labs<span class="punctuation">(</span>x<span class="operator">=</span> <span class="string">&quot;Isoelectric point&quot;</span><span class="punctuation">,</span>y <span class="operator">=</span> <span class="string">&quot;Relative frequency&quot;</span><span class="punctuation">)</span><span class="operator">+</span> scale_color_manual<span class="punctuation">(</span>name<span class="operator">=</span><span class="string">&quot;MAGs&quot;</span><span class="punctuation">,</span> values<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span><span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span><span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#f7b6d2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#5254a3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#000000&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/85d7_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="蛋白质组的全局 pIs"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><p><a href="https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-019-0731-5#Abs1">Pedro J. et al., 2019, Microbiome</a></p></li><li><p><a href="http://emboss.sourceforge.net/">EMBOSS</a></p></li></ul><h1 id="代码获取"><a href="#代码获取" class="headerlink" title="代码获取"></a>代码获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“85d7”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
            <tag> 蛋白质组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用GTDB-TK对细菌和古菌基因组进行物种分类</title>
      <link href="/post/8fb3.html"/>
      <url>/post/8fb3.html</url>
      
        <content type="html"><![CDATA[<p>GTDB-Tk 是一个软件工具包，用于根据<ruby>基因组数据库分类 GTDB<rt>Genome Database Taxonomy GTDB</rt></ruby> 为细菌和古菌基因组<ruby>分配客观分类学分类<rt>assigning objective taxonomic classifications</rt></ruby>。可以用于宏基因组组装基因组 (MAG)、单菌基因组和单细胞基因组。</p><h1 id="安装GTDB-Tk"><a href="#安装GTDB-Tk" class="headerlink" title="安装GTDB-Tk"></a>安装GTDB-Tk</h1><ul><li><p>通过conda安装主程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># latest version</span></span><br><span class="line">conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk</span><br><span class="line"></span><br><span class="line"><span class="comment"># specific version (replace 2.3.0 with the version you wish to install, recommended)</span></span><br><span class="line">conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk=2.3.0</span><br></pre></td></tr></table></figure></li><li><p>下载GTDB-Tk数据库 (~47 G)</p><p>最新版本的数据库为R214，需要 &gt;&#x3D;2.1.0 版本的GTDB-Tk。</p><ul><li><p>自动 (非常慢)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">download-db.sh</span><br></pre></td></tr></table></figure></li><li><p>手动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 找到下载脚本的路径并打开，从中找到数据库的链接</span></span><br><span class="line"><span class="built_in">which</span> download-db.sh</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 进入数据库默认路径</span></span><br><span class="line"><span class="built_in">cd</span> ~/miniconda3/envs/gtdbtk/share/gtdbtk-2.3.0/db/</span><br><span class="line">  </span><br><span class="line">   <span class="comment"># 用wget下载 (非常慢)，推荐在Windows下用其他软件下载，再上传服务器</span></span><br><span class="line"><span class="built_in">nohup</span> wget -c https://data.gtdb.ecogenomic.org/releases/release214/214.0/auxillary_files/gtdbtk_r214_data.tar.gz --no-check-certificate &amp;</span><br><span class="line"></span><br><span class="line">tar zxvf gtdbtk_r214_data.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> release214/* ./</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可自定义数据库的存放位置</span></span><br><span class="line">编辑`~/miniconda3/envs/gtdbtk/etc/conda/activate.d/gtdbtk.sh`，将`<span class="built_in">export</span> GTDBTK_DATA_PATH=`后面的内容改成数据库所在的路径。</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="运行软件"><a href="#运行软件" class="headerlink" title="运行软件"></a>运行软件</h1><p>:::info<br>注意：pplacer requires ~215 GB of RAM to fully load the bacterial tree into memory. 因此要么在服务器上运行，要么设置足够大的swap分区方可在PC中运行。<br>:::</p><h2 id="classify-wf"><a href="#classify-wf" class="headerlink" title="classify_wf"></a>classify_wf</h2><p>:::default<br>可以通过<code>classify_wf</code>命令完成整个工作流程。<br>:::</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># v2.3.0增加了两个参数（二选一）：--skip_ani_screen，--mash_db，前者无参数值，后者指定MASH参考数据库 (.msh)的输出或读取路径</span></span><br><span class="line">gtdbtk classify_wf --genome_dir &lt;my_genomes&gt; --out_dir &lt;output_dir&gt; --extension fna --cpus 20 --force --skip_ani_screen</span><br></pre></td></tr></table></figure><p>+++primary 参数解析</p><ul><li><p>--genome_dir<br>directory containing genome files in FASTA format</p></li><li><p>--batchfile<br>path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p></li><li><p>--out_dir<br>directory to output files</p></li><li><p>--skip_ani_screen     Skip the ani_screening step to classify genomes using mash and FastANI (default: False)</p></li><li><p>--mash_db MASH_DB     path to save&#x2F;read (if exists) the Mash reference sketch database (.msh)</p></li><li><p>-x, --extension<br>extension of files to process, gz &#x3D; gzipped (Default: fna)</p></li><li><p>--min_perc_aa<br>exclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (Default: 10)</p></li><li><p>--prefix<br>prefix for all output files (Default: gtdbtk)</p></li><li><p>--cpus<br>number of CPUs to use (Default: 1)</p></li><li><p>--pplacer_cpus<br>use pplacer_cpus during placement (default: cpus)</p></li><li><p>--force<br>continue processing if an error occurs on a single genome</p></li><li><p>--scratch_dir<br>Reduce pplacer memory usage by writing to disk (slower).</p></li><li><p>--min_af<br>minimum alignment fraction to consider closest genome (Default: 0.65)</p></li><li><p>--tmpdir<br>specify alternative directory for temporary files （Default: &#x2F;tmp</p></li><li><p>--debug<br>create intermediate files for debugging purposes<br>+++</p></li></ul><p>:::default<br>但下面我们演示分步运行。在处理大型管道时，单独运行这些步骤有时会很有用。<br>:::</p><h2 id="Step-1-准备输入文件"><a href="#Step-1-准备输入文件" class="headerlink" title="Step 1 准备输入文件"></a>Step 1 准备输入文件</h2><p>以下两个基因组作为示例文件：* Genome A: <code>GCF_003947435.1</code> [<a href="https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1">GTDB</a> &#x2F; <a href="https://www.ncbi.nlm.nih.gov/assembly/GCF_003947435.1/">NCBI</a>] * Genome B: <code>GCA_002011125.1</code> [<a href="https://gtdb.ecogenomic.org/genomes?gid=GCA_002011125.1">GTDB</a> &#x2F; <a href="https://www.ncbi.nlm.nih.gov/assembly/GCA_002011125.1/">NCBI</a>]。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create the directory.</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /tmp/gtdbtk &amp;&amp; <span class="built_in">cd</span> /tmp/gtdbtk</span><br><span class="line"></span><br><span class="line"><span class="comment"># Obtain the genomes.</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /tmp/gtdbtk/genomes</span><br><span class="line">wget -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/003/947/435/GCF_003947435.1_ASM394743v1/GCF_003947435.1_ASM394743v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_a.fna.gz</span><br><span class="line"></span><br><span class="line">wget -q https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/002/011/125/GCA_002011125.1_ASM201112v1/GCA_002011125.1_ASM201112v1_genomic.fna.gz -O /tmp/gtdbtk/genomes/genome_b.fna.gz</span><br></pre></td></tr></table></figure><h2 id="Step-2-Gene-calling-identify"><a href="#Step-2-Gene-calling-identify" class="headerlink" title="Step 2 Gene calling (identify)"></a>Step 2 Gene calling (identify)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtdbtk identify --genome_dir /tmp/gtdbtk/genomes --out_dir /tmp/gtdbtk/identify --extension gz --cpus 20</span><br></pre></td></tr></table></figure><p>+++success Results</p><p>获得的基因和<ruby>标记<rt>marker</rt></ruby>信息可以在每个<ruby>基因组反应中间文件目录<rt>genomes respeective intermediate files directory</rt></ruby>下找到，如下所示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /tmp/gtdbtk/identify/identify/intermediate_results/marker_genes/genome_a.fna/</span><br></pre></td></tr></table></figure><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>pfam<span class="built_in">_</span>tophit.tsv</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>protein.gff.sha256</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>pfam<span class="built_in">_</span>tophit.tsv.sha256</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>tigrfam.out</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>pfam.tsv</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>tigrfam.out.sha256</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>pfam.tsv.sha256</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>tigrfam<span class="built_in">_</span>tophit.tsv</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>protein.faa</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>tigrfam<span class="built_in">_</span>tophit.tsv.sha256</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>protein.faa.sha256</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>tigrfam.tsv</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>protein.fna</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>tigrfam.tsv.sha256</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>protein.fna.sha256</span><br><span class="line">prodigal<span class="built_in">_</span>translation<span class="built_in">_</span>table.tsv</span><br><span class="line">genome<span class="built_in">_</span>a.fna<span class="built_in">_</span>protein.gff</span><br><span class="line">prodigal<span class="built_in">_</span>translation<span class="built_in">_</span>table.tsv.sha256</span><br></pre></td></tr></table></figure><p>:::default<br>大部分情况下只需要读取摘要文件，其中详细说明了从archaeal 122或bacterial 120<ruby>标记集<rt>marker set</rt></ruby>识别的标记。<br>:::</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /tmp/gtdbtk/identify/gtdbtk.ar122.markers_summary.tsv</span><br></pre></td></tr></table></figure><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name    number<span class="built_in">_</span>unique<span class="built_in">_</span>genes     number<span class="built_in">_</span>multiple<span class="built_in">_</span>genes   number<span class="built_in">_</span>multiple<span class="built_in">_</span>unique<span class="built_in">_</span>genes    number<span class="built_in">_</span>missing<span class="built_in">_</span>genes    list<span class="built_in">_</span>unique<span class="built_in">_</span>genes       list<span class="built_in">_</span>multiple<span class="built_in">_</span>genes     list<span class="built_in">_</span>multiple<span class="built_in">_</span>unique<span class="built_in">_</span>genes      list<span class="built_in">_</span>missing<span class="built_in">_</span>genes</span><br><span class="line">genome<span class="built_in">_</span>a.fna    109     3       0       10      PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,PF13685.1,TIGR00021,TIGR00037,TIGR00042,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00549,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01213,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02390,TIGR02651,TIGR03626,TIGR03627,TIGR03628,TIGR03636,TIGR03653,TIGR03665,TIGR03671,TIGR03672,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684    PF01496.14,TIGR00458,TIGR00658          PF01866.12,TIGR00064,TIGR00373,TIGR00522,TIGR02338,TIGR02389,TIGR03629,TIGR03670,TIGR03673,TIGR03722</span><br><span class="line">genome<span class="built_in">_</span>b.fna    118     2       0       2       PF00368.13,PF00410.14,PF00466.15,PF00687.16,PF00827.12,PF00900.15,PF01000.21,PF01015.13,PF01090.14,PF01092.14,PF01157.13,PF01191.14,PF01194.12,PF01198.14,PF01200.13,PF01269.12,PF01280.15,PF01282.14,PF01655.13,PF01798.13,PF01864.12,PF01866.12,PF01868.11,PF01984.15,PF01990.12,PF02006.11,PF02978.14,PF03874.11,PF04019.7,PF04104.9,PF04919.7,PF07541.7,PF13656.1,TIGR00021,TIGR00037,TIGR00042,TIGR00064,TIGR00111,TIGR00134,TIGR00240,TIGR00264,TIGR00270,TIGR00279,TIGR00283,TIGR00291,TIGR00293,TIGR00307,TIGR00308,TIGR00323,TIGR00324,TIGR00335,TIGR00336,TIGR00337,TIGR00373,TIGR00389,TIGR00392,TIGR00398,TIGR00405,TIGR00408,TIGR00422,TIGR00425,TIGR00432,TIGR00442,TIGR00448,TIGR00456,TIGR00458,TIGR00463,TIGR00468,TIGR00471,TIGR00490,TIGR00491,TIGR00501,TIGR00521,TIGR00522,TIGR00549,TIGR00658,TIGR00670,TIGR00729,TIGR00936,TIGR00982,TIGR01008,TIGR01012,TIGR01018,TIGR01020,TIGR01025,TIGR01028,TIGR01038,TIGR01046,TIGR01052,TIGR01060,TIGR01077,TIGR01080,TIGR01309,TIGR01952,TIGR02076,TIGR02153,TIGR02236,TIGR02258,TIGR02338,TIGR02389,TIGR02390,TIGR02651,TIGR03626,TIGR03628,TIGR03629,TIGR03636,TIGR03653,TIGR03665,TIGR03670,TIGR03671,TIGR03672,TIGR03673,TIGR03674,TIGR03677,TIGR03680,TIGR03683,TIGR03684,TIGR03722 PF01496.14,PF13685.1            TIGR01213,TIGR03627</span><br></pre></td></tr></table></figure><p>+++</p><h2 id="Step-3-Aligning-genomes-align"><a href="#Step-3-Aligning-genomes-align" class="headerlink" title="Step 3 Aligning genomes (align)"></a>Step 3 Aligning genomes (align)</h2><p>该步骤将对齐所有已识别的标记，确定最可能的<ruby>域<rt>domain </rt></ruby>并输出串联的MSA。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtdbtk align --identify_dir /tmp/gtdbtk/identify --out_dir /tmp/gtdbtk/align --cpus 20</span><br></pre></td></tr></table></figure><p>+++success Results</p><p>:::warning<br>要注意输出，如果一个基因组识别出的标记数量较少，那么在这一步，它将被排除在分析之外。如果出现这种情况，将出现警告。<br>:::</p><p>根据domain的不同，<code>ar122</code>或<code>bac120</code>的前缀文件将出现，其中包含用户基因组和GTDB基因组的MSA，或仅包含用户基因组（<code>gtdbtk.ar122.MSA.fasta</code>和<code>gtdbtk.ar122.user_MSA.fasta</code>）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /tmp/gtdbtk/align</span><br></pre></td></tr></table></figure><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">align/</span><br><span class="line">gtdbtk.ar122.user<span class="built_in">_</span>msa.fasta</span><br><span class="line">identify/</span><br><span class="line">gtdbtk.ar122.filtered.tsv</span><br><span class="line">gtdbtk.log</span><br><span class="line">gtdbtk.ar122.msa.fasta</span><br><span class="line">gtdbtk.warnings.log</span><br></pre></td></tr></table></figure><p>+++</p><h2 id="Step-4-基因组分类-classify"><a href="#Step-4-基因组分类-classify" class="headerlink" title="Step 4 基因组分类 (classify)"></a>Step 4 基因组分类 (classify)</h2><p>将用户的基因组放置于参考树上，然后决定其最为可能的分类。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gtdbtk classify --genome_dir /tmp/gtdbtk/genomes --align_dir /tmp/gtdbtk/align --out_dir /tmp/gtdbtk/classify -x gz --cpus 20</span><br></pre></td></tr></table></figure><p>+++success Results</p><p>两个主要的输出文件包括<ruby>总结文件<rt>summary file</rt></ruby>和包含基因组的参考树 (<code>gtdbtk.ar122.summary.tsv</code>和<code>gtdbtk.ar122.classify.tree</code>)。基因组的分类信息呈现于总结文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /tmp/gtdbtk/classify</span><br></pre></td></tr></table></figure><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">classify/</span><br><span class="line">gtdbtk.ar122.summary.tsv</span><br><span class="line">gtdbtk.warnings.log</span><br><span class="line">gtdbtk.ar122.classify.tree</span><br><span class="line">gtdbtk.log</span><br></pre></td></tr></table></figure><p>+++</p><h2 id="错误信息处理"><a href="#错误信息处理" class="headerlink" title="错误信息处理"></a>错误信息处理</h2><ul><li><p>OpenBLAS blas_thread_init: pthread_create failed for thread 109 of 128: Resource temporarily unavailable</p><ul><li>解决方案：少调用一些线程就ok了。</li></ul></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://ecogenomics.github.io/GTDBTk">GTBD-Tk Documentation</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宏病毒组分析流程1-VirSorter2</title>
      <link href="/post/1551.html"/>
      <url>/post/1551.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><ul><li><p>安装主程序及依赖</p><p>:::default</p><ul><li><a href="https://bitbucket.org/MAVERICLab/virsorter2/src/master">VirSorter2</a> (version &gt;&#x3D;2.2.3)</li><li><a href="https://bitbucket.org/berkeleylab/checkv/src/master">CheckV</a> (version &gt;&#x3D;0.7.0)</li><li><a href="https://github.com/shafferm/DRAM">DRAMv</a> (version &gt;&#x3D;1.2.0)<br>:::</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create -n virome virsorter=2 checkv dram</span><br><span class="line">conda activate virome</span><br></pre></td></tr></table></figure></li><li><p>下载数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vs2 db: db-vs2 ~ 10 min</span></span><br><span class="line">virsorter setup -d /new_data/hualin/db/db-vs2 -j 50</span><br><span class="line"></span><br><span class="line"><span class="comment"># checkv db: checkv-db-v1.0  &lt; 5 mins</span></span><br><span class="line">checkv download_database /new_data/hualin/db/checkv</span><br><span class="line"></span><br><span class="line"><span class="comment"># DRAMv: db-dramv ~5h and ~60GB of memory</span></span><br><span class="line">DRAM-setup.py prepare_databases --skip_uniref --output_dir db-dramv</span><br></pre></td></tr></table></figure></li></ul><h1 id="预测"><a href="#预测" class="headerlink" title="预测"></a>预测</h1><ul><li><p>获取测试数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O test.fa https://bitbucket.org/MAVERICLab/virsorter2/raw/15a21fa9c1ee1d2af52b0148b167292e549d356e/test/test-for-sop.fa</span><br></pre></td></tr></table></figure></li><li><p>运行VirSorter2</p><p>  +++info 命令解析</p><ul><li>首先以0.5 的score阈值运行VirSorter2 以保证最大的灵敏度。</li><li>只关注噬菌体 (dsDNA and ssDNA phage)，可选dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae。</li><li>序列最小长度为5000 bp，后续病毒分类的最低要求如此。 </li><li>可根据自己的CPU核心数自行调整 “-j”。</li><li>“–keep-original-seq” 保留了环状和接近完整的病毒contigs (score &gt;0.8 as a whole sequence)，后续将通过checkV修剪其尾端的潜在宿主基因并处理重复的环状contigs片段。<br>  +++</li></ul><p>  :::default<br>  Time: 31m7.310s with a real dataset of 90.52 MB and 207,544 sequences<br>  :::</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsorter run --keep-original-seq -w vs2-pass1 -i test.fa --include-groups dsDNAphage,ssDNA --min-length 5000  --min-score 0.5 -j 50 all</span><br></pre></td></tr></table></figure><p>  +++primary 参数解析<br>  -w 指定输出目录<br>  -i 指定输入序列<br>  --min-length 过滤短序列<br>  --min-score 分数阈值<br>  --keep-original-seq 保留环状和接近完整的病毒contigs<br>  --include-groups 指定包含的病毒类型，用“,”分隔。可选：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br>  -j 线程数<br>  all 直接写上就可以<br>  +++</p><p>  +++success 结果解析</p><ul><li><p>final-viral-combined.fa: 病毒序列</p><ul><li>鉴定为病毒的完整序列（标识为后缀 ||full）；</li><li>鉴定为病毒的部分序列（用后缀 ||{i}_partial 标识）； {i} 可以是从 0 到该Contig中发现的最大病毒片段数的数字；</li><li>带有<ruby>标志基因<rt>hallmark gene</rt></ruby>的短序列（少于两个基因）被鉴定为病毒（用后缀 ||lt2gene 标识）；</li></ul></li><li><p>final-viral-score.tsv: 每个病毒序列的评分跨组和一些关键特征，这可以用于进一步过滤</p><ul><li>sequence name</li><li>score of each viral sequences across groups (多列)</li><li>max score across groups</li><li>max score group</li><li>contig length</li><li>hallmark gene count</li><li>viral gene %</li><li>nonviral gene %</li></ul></li></ul>  <div style="width:100%;overflow:scroll;">      <table border="1" rules="all" style="width:2000px; height:100px; text-align:center">          <tr>          <td>seqname</td>          <td>dsDNAphage</td>          <td>NCLDV</td>          <td>RNA</td>          <td>ssDNA</td>          <td>lavidaviridae</td>          <td>max_score</td>          <td>max_score_group</td>          <td>length</td>          <td>hallmark</td>          <td>viral</td>          <td>cellular</td>          </tr>          <tr>          <td>NODE_5_length_17317_cov_8.385876&#124;&#124;full</td>          <td>0.993</td>          <td>0.847</td>          <td>0.005</td>          <td>0.060</td>          <td>0.467</td>          <td>0.993</td>          <td>dsDNAphage</td>          <td>17315</td>          <td>2</td>          <td>64.700</td>          <td>5.900</td>          </tr>          <tr>          <td>NODE_6_length_16611_cov_115.615064&#124;&#124;full</td>          <td>0.920</td>          <td>0.207</td>          <td>0.035</td>          <td>0.087</td>          <td>0.053</td>          <td>0.920</td>          <td>dsDNAphage</td>          <td>16610</td>          <td>0</td>          <td>3.200</td>          <td>0.000</td>          </tr>          <tr>          <td>NODE_8_length_14848_cov_778.417157&#124;&#124;full</td>          <td>1.000</td>          <td>0.220</td>          <td>0.105</td>          <td>0.380</td>          <td>0.627</td>          <td>1.000</td>          <td>dsDNAphage</td>          <td>14848</td>          <td>15</td>          <td>100.000</td>          <td>0.000</td>          </tr>          <tr>          <td>NODE_16_length_12563_cov_14.331948&#124;&#124;full</td>          <td>0.973</td>          <td>0.200</td>          <td>0.165</td>          <td>0.273</td>          <td>0.227</td>          <td>0.973</td>          <td>dsDNAphage</td>          <td>12083</td>          <td>0</td>          <td>8.000</td>          <td>0.000</td>          </tr>          <tr>          <td>NODE_17_length_11885_cov_350.043956&#124;&#124;full</td>          <td>0.653</td>          <td>0.513</td>          <td>0.050</td>          <td>0.080</td>          <td>0.047</td>          <td>0.653</td>          <td>dsDNAphage</td>          <td>11885</td>          <td>0</td>          <td>9.100</td>          <td>0.000</td>          </tr>          <tr>          <td>NODE_21_length_11527_cov_216.405073&#124;&#124;full</td>          <td>0.620</td>          <td>0.407</td>          <td>0.000</td>          <td>0.013</td>          <td>0.060</td>          <td>0.620</td>          <td>dsDNAphage</td>          <td>11526</td>          <td>0</td>          <td>10.500</td>          <td>5.300</td>          </tr>          <tr>          <td>NODE_23_length_11316_cov_8.144303&#124;&#124;full</td>          <td>0.367</td>          <td>0.540</td>          <td>0.010</td>          <td>0.000</td>          <td>0.400</td>          <td>0.540</td>          <td>NCLDV</td>          <td>11313</td>          <td>1</td>          <td>23.100</td>          <td>7.700</td>          </tr>      </table>  </div>  <p>  :::warning<br>  不同病毒类群的分类器并非相互排斥，它们的<ruby>目标病毒序列空间<rt>target viral sequence space</rt></ruby>可能存在重叠，这意味着该信息不应被使用或当作<ruby>可靠的分类<rt>reliable taxonomic classification</rt></ruby>。VirSorter2的用途仅限于病毒鉴定。<br>  :::</p><ul><li><p>final-viral-boundary.tsv: 带有边界信息的表 (与其他两个文件相比，可能有额外的记录，应该忽略)。</p><p>only some of the columns in this file might be useful:</p><ul><li>seqname: original sequence name</li><li>trim_orf_index_start, trim_orf_index_end: start and end ORF index on orignal sequence of identified viral sequence</li><li>trim_bp_start, trim_bp_end: start and end position on orignal sequence of identified viral sequence</li><li>trim_pr: score of final trimmed viral sequence</li><li>partial: full sequence as viral or partial sequence as viral; this is defined when a full sequence has score &gt; score cutoff, it is full (0), or else any viral sequence extracted within it is partial (1)</li><li>pr_full: score of the original sequence</li><li>hallmark_cnt: hallmark gene count</li><li>group: the classifier of viral group that gives high score; this should NOT be used as reliable classification</li></ul></li></ul>  <div style="width:100%;overflow:scroll;">      <table border="1" rules="all" style="width:2000px; height:100px; text-align:center">          <tr>      <td>seqname</td>      <td>trim_orf_index_start</td>      <td>trim_orf_index_end</td>      <td>trim_bp_start</td>      <td>trim_bp_end</td>      <td>trim_pr</td>      <td>trim_pr_max</td>      <td>prox_orf_index_start</td>      <td>prox_orf_index_end</td>      <td>prox_bp_start</td>      <td>prox_bp_end</td>      <td>prox_pr</td>      <td>prox_pr_max</td>      <td>partial</td>      <td>full_orf_index_start</td>      <td>full_orf_index_end</td>      <td>full_bp_start</td>      <td>full_bp_end</td>      <td>pr_full</td>      <td>arc</td>      <td>bac</td>      <td>euk</td>      <td>vir</td>      <td>mix</td>      <td>unaligned</td>      <td>hallmark_cnt</td>      <td>group</td>      <td>shape</td>      <td>seqname_new</td>          </tr>          <tr>      <td>NODE_999_length_4026_cov_7.610929</td>      <td>1</td>      <td>12</td>      <td>1</td>      <td>4025</td>      <td>0.547</td>      <td>0.547</td>      <td>1</td>      <td>12</td>      <td>1</td>      <td>4025</td>      <td>nan</td>      <td>nan</td>      <td>0</td>      <td>1</td>      <td>12</td>      <td>1</td>      <td>4025</td>      <td>0.547</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>100.0</td>      <td>0</td>      <td>dsDNAphage</td>      <td>linear</td>      <td>NODE_999_length_4026_cov_7.610929||full</td>          </tr>          <tr>      <td>NODE_9999_length_1276_cov_11.598690</td>      <td>1</td>      <td>3</td>      <td>3</td>      <td>1274</td>      <td>0.955</td>      <td>0.955</td>      <td>1</td>      <td>3</td>      <td>3</td>      <td>1274</td>      <td>nan</td>      <td>nan</td>      <td>0</td>      <td>1</td>      <td>3</td>      <td>3</td>      <td>1274</td>      <td>0.955</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>100.0</td>      <td>0</td>      <td>RNA</td>      <td>linear</td>      <td>NODE_9999_length_1276_cov_11.598690||full</td>          </tr>          <tr>      <td>NODE_99999_length_314_cov_4.000000</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>287</td>      <td>0.57</td>      <td>0.57</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>287</td>      <td>nan</td>      <td>nan</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>287</td>      <td>0.57</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>50.0</td>      <td>50.0</td>      <td>0</td>      <td>RNA</td>      <td>linear</td>      <td>NODE_99999_length_314_cov_4.000000||full</td>          </tr>          <tr>      <td>NODE_99992_length_314_cov_4.389961</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>275</td>      <td>0.747</td>      <td>0.747</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>275</td>      <td>nan</td>      <td>nan</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>275</td>      <td>0.747</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>100.0</td>      <td>0</td>      <td>ssDNA</td>      <td>linear</td>      <td>NODE_99992_length_314_cov_4.389961||full</td>          </tr>          <tr>      <td>NODE_9997_length_1276_cov_44.113841</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1240</td>      <td>0.98</td>      <td>0.98</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1240</td>      <td>nan</td>      <td>nan</td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>1</td>      <td>1240</td>      <td>0.98</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>0.0</td>      <td>50.0</td>      <td>50.0</td>      <td>0</td>      <td>RNA</td>      <td>linear</td>      <td>NODE_9997_length_1276_cov_44.113841||full</td>          </tr>      </table>  </div>  <p>  :::warning<br>  在<ruby>原病毒<rt>provirus </rt></ruby>提取过程中，为了获得更好的敏感性，VirSorter2有时会高估病毒序列的大小。建议清除这些前病毒预测，以去除预测病毒区域边缘的潜在宿主基因，例如使用<a href="https://bitbucket.org/berkeleylab/checkv">CheckV</a>等工具。<br>  :::</p><p>  :::primary<br>  How to pick a score cutoff?<br>  :::</p><p>  一般来说，score&gt;0.9的人为高置信度。得分在 0.5 到 0.9 之间的可能是病毒和非病毒的混合体。很难确定区分病毒和非病毒的最佳分数，因为它取决于宿主序列和未知序列的百分比。因此，[建议使用默认截止值 (0.5) 以获得最大灵敏度，然后使用 checkV 应用质量检查步骤以消除误报（预测完整性除外）]{.rainbow}。&#x3D;&#x3D;请继续下面的流程。&#x3D;&#x3D;<br>  +++</p></li><li><p>运行checkV</p><p>  +++info 命令解析<br>  Score阈值设为0.5时，VirSorter2结果中可能存在一些非病毒序列或区域。因此，使用CheckV对VirSorter2的结果进行质量控制，并修剪在<ruby>原病毒<rt>proviruses</rt></ruby>末端留下的潜在宿主区域。可以根据CPU内核的可用性调整-t选项。<br>  +++</p><p>  :::default<br>  Time: 0m28.795s<br>  :::</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkv end_to_end vs2-pass1/final-viral-combined.fa checkv -t 50 -d /new_data/hualin/db/checkv/checkv-db-v1.0</span><br></pre></td></tr></table></figure><p>  +++success 结果解析</p><ul><li>.&#x2F;checkv&#x2F;</li><li>completeness.tsv</li><li>complete_genomes.tsv</li><li>contamination.tsv</li><li>proviruses.fna</li><li>quality_summary.tsv</li><li>viruses.fna</li><li>tmp<br>  +++</li></ul></li><li><p>再次运行VirSorter2 </p><p>+++info 命令解析</p><ul><li>再次利用checkV-trimmed序列运行VirSorter2以得到”affi-contigs.tab”文件，该文件将作为DRAMv的输入以鉴定AMGs。</li><li>注意”--seqname-suffix-off”选项保留了原始的输入序列名称，因为我们确信在本步骤中，不可能从同一条contig中获得&gt;1个原病毒。</li><li>“--viral-gene-enrich-off”选项关闭了病毒基因要多于宿主基因的要求，以确保VirSorter2在这一步不做任何筛查。</li><li>以上两个选项需要VirSorter2版本&gt;&#x3D;2.2.1。</li><li>可选所有病毒：dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae<br>+++</li></ul><p>:::default<br>  Time: 18m30.896s<br>  :::</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> checkv/proviruses.fna checkv/viruses.fna &gt; checkv/combined.fna</span><br><span class="line"></span><br><span class="line">virsorter run --seqname-suffix-off --viral-gene-enrich-off --provirus-off --prep-for-dramv -i checkv/combined.fna -w vs2-pass2 --include-groups dsDNAphage,ssDNA --min-length 5000 --min-score 0.5 -j 50 all</span><br></pre></td></tr></table></figure><p>  +++success 结果解析</p><ul><li>.&#x2F;vs2-pass2&#x2F;</li><li>inal-viral-combined.fa</li><li>final-viral-score.tsv</li><li>for-dramv&#x2F;final-viral-combined-for-dramv.fa</li><li>for-dramv&#x2F;viral-affi-contigs-for-dramv.tab<br>  +++</li></ul></li><li><p>运行DRAMv</p><p>+++info 命令解析<br>使用DRAMv注释鉴定的病毒序列，以用于后续<ruby>人工整理<rt>manual curation</rt></ruby>。可通过”--threads”控制调用的CPU核心数。<br>+++</p><p>:::default<br>  Time: 8.81h<br>  :::</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step 1 annotate 耗时步骤，建议投后台运行</span></span><br><span class="line">DRAM-v.py annotate -i vs2-pass2/for-dramv/final-viral-combined-for-dramv.fa -v vs2-pass2/for-dramv/viral-affi-contigs-for-dramv.tab -o dramv-annotate --skip_trnascan --threads 50 --min_contig_size 1000</span><br><span class="line"></span><br><span class="line"><span class="comment">#step 2 summarize anntotations</span></span><br><span class="line">DRAM-v.py distill -i dramv-annotate/annotations.tsv -o dramv-distill</span><br></pre></td></tr></table></figure><p>  +++success 结果解析</p><ul><li>dramv-annotate&#x2F;annotations.tsv</li><li>dramv-annotate&#x2F;genbank 各条contig的gbk文件</li><li>dramv-annotate&#x2F;genes.faa</li><li>dramv-annotate&#x2F;genes.fna</li><li>dramv-annotate&#x2F;genes.gff</li><li>dramv-annotate&#x2F;rrnas.tsv</li><li>dramv-annotate&#x2F;scaffolds.fna</li><li>dramv-annotate&#x2F;vMAGs 各条contig的fasta文件<br>  +++</li></ul></li></ul><h1 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h1><h2 id="依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选"><a href="#依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选" class="headerlink" title="依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选"></a>依据病毒和宿主基因数、分数、hallmark基因数以及contig长度进行筛选</h2><p>来自checkV的病毒和宿主基因计数可用于假阳性筛查。由于checkV在预测病毒基因方面非常保守，那些由checkV预测的病毒基因的序列应该是病毒的，而那些没有被checkV预测到病毒基因的序列更可能是非病毒的。</p><p>基于我们对土壤宏基因组的基准测试，(1) 那些没有预测到病毒和宿主基因的序列是病毒；(2) 没有病毒基因但有2个或2个以上宿主基因的大多数为非病毒基因；(3) 那些没有病毒基因和具有1个宿主基因的很难区分其为病毒还是非病毒（可能是可移动的基因元件，类似于VirSorter1中的第3类），除非手动检查，否则应该丢弃。</p><p>只选择那些大于10kb的用于手动检查，因为太短的无法分辨。还有那些VirSorter2 得分≥0.95或hallmark基因计数&gt;2的大多数是病毒。&#x3D;&#x3D;这些经验筛选标准总结如下：&#x3D;&#x3D;</p><p>:::success<br>Keep1: viral_gene &gt;0<br>:::<br>:::success<br>Keep2: viral_gene &#x3D;0 AND (host_gene &#x3D;0 OR score &gt;&#x3D;0.95 OR hallmark &gt;2)<br>:::<br>:::warning<br>Manual check: (NOT in Keep1 OR Keep2) AND viral_gene &#x3D;0 AND host_gene &#x3D;1 AND length &gt;&#x3D;10kb<br>:::<br>:::danger<br>Discard: the rest<br>:::</p><p>[要查看病毒基因、宿主基因、评分和<ruby>序列的特征标记<rt>hallmark of sequences</rt></ruby>，您可以合并”vs2-pass1&#x2F;final-viral-score.tsv”和”checkv&#x2F;contamination.tsv”，并在电子表格中过滤。]{.aqua}本尊为各位提供了Perl脚本<a href="https://github.com/liaochenlanruo/myScripts/tree/main/1551%20Virome">cat_tsv.pl</a>以实现机动合并！直接在终端运行<code>perl cat_tsv.pl</code>即可得到合并后的文件<code>forCheck.txt</code>。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> %hash;</span><br><span class="line"><span class="keyword">my</span> $head_checkv;</span><br><span class="line"><span class="keyword">my</span> $head_pass1;</span><br><span class="line"><span class="keyword">my</span> $count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">my</span> $num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;checkv/contamination.tsv&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_ =~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line">$count++;</span><br><span class="line"><span class="keyword">if</span> ($count == <span class="number">1</span>) &#123;</span><br><span class="line">$head_checkv = $_;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line">$hash&#123;$lines[<span class="number">0</span>]&#125; = $_;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;vs2-pass1/final-viral-score.tsv&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;forCheck.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_ =~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line">$num++;</span><br><span class="line"><span class="keyword">if</span> ($num == <span class="number">1</span>) &#123;</span><br><span class="line">$head_pass1 = $_;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;$head_pass1\t$head_checkv\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">my</span> @line = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">exists</span> $hash&#123;$line[<span class="number">0</span>]&#125;) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;$_\t$hash&#123;$line[0]&#125;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;$_\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br></pre></td></tr></table></figure><p>接下来按照上面的四条规则对<code>forCheck.txt</code>进行拆分，得到病毒<code>Virus.txt</code>、手动核对<code>Manual_check.txt</code>及抛弃的<code>Discard.txt</code>。可以自己看，也可以用<code>get_virus.pl</code>来完成。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> $count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;forCheck.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> VIRUS, <span class="string">&quot;&gt;Virus.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> MANUAL, <span class="string">&quot;&gt;Manual_check.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> DISCARD, <span class="string">&quot;&gt;Discard.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_ =~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line">$count++;</span><br><span class="line"><span class="keyword">if</span> ($count == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">print</span> VIRUS $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> MANUAL $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> DISCARD $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">if</span> ($lines[<span class="number">15</span>] &gt; <span class="number">0</span>) &#123; <span class="comment"># virus keep1</span></span><br><span class="line"><span class="keyword">print</span> VIRUS $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">elsif</span> (($lines[<span class="number">15</span>] == <span class="number">0</span>) &amp;&amp; ($lines[<span class="number">16</span>] == <span class="number">0</span>)) &#123; <span class="comment"># virus keep2</span></span><br><span class="line"><span class="keyword">print</span> VIRUS $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">elsif</span> (($lines[<span class="number">15</span>] == <span class="number">0</span>) &amp;&amp; ($lines[<span class="number">6</span>] &gt;= <span class="number">0</span>.<span class="number">95</span>)) &#123; <span class="comment"># virus keep2</span></span><br><span class="line"><span class="keyword">print</span> VIRUS $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">elsif</span> (($lines[<span class="number">15</span>] == <span class="number">0</span>) &amp;&amp; ($lines[<span class="number">9</span>] &gt; <span class="number">2</span>)) &#123; <span class="comment"># virus keep2</span></span><br><span class="line"><span class="keyword">print</span> VIRUS $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">elsif</span> (($lines[<span class="number">15</span>] == <span class="number">0</span>) &amp;&amp; ($lines[<span class="number">16</span>] == <span class="number">1</span>) &amp;&amp; ($lines[<span class="number">8</span>] &gt;= <span class="number">10000</span>)) &#123; <span class="comment"># manual check</span></span><br><span class="line"><span class="keyword">print</span> MANUAL $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123; <span class="comment"># discard</span></span><br><span class="line"><span class="keyword">print</span> DISCARD $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> VIRUS;</span><br><span class="line"><span class="keyword">close</span> MANUAL;</span><br><span class="line"><span class="keyword">close</span> DISCARD;</span><br></pre></td></tr></table></figure><p>用法：脚本与<code>forCheck.txt</code>放在同一目录，终端运行如下命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl get_virus.pl</span><br></pre></td></tr></table></figure><p>对于<code>Manual_check.txt</code>中的序列，需要用眼睛和脑袋去<code>dramv-annotate/annotations.tsv</code>中找注释信息，然后根据下面的方法判断其属于病毒还是细胞，如果是病毒，就将其所在的那行信息复制到<code>Virus.txt</code>文件的末尾，并保存。</p><h2 id="依据DRAMv注释筛选"><a href="#依据DRAMv注释筛选" class="headerlink" title="依据DRAMv注释筛选"></a>依据DRAMv注释筛选</h2><p>在病毒和宿主中都有一些共同的基因(如{脂多糖^LPS}相关)和移动元件，这些基因可能导致上述“Keep2”类别中的假阳性。因此，++要谨慎对待带有这些基因的contigs++{.dot}。专家们已经编制了一份与此相关的[“可疑”]{.red}基因列表。我们可以使用“Keep2”类别中的contigs对DRAMv表取子集，并在DRAMv子集表中筛选“可疑”基因(忽略大小写，例如在“grep”中使用“-i”选项)，然后将带有这些基因的contigs放入“手动检查”类别中。</p><h2 id="手动检查-tabset"><a href="#手动检查-tabset" class="headerlink" title="手动检查{.tabset}"></a>手动检查{.tabset}</h2><p>对于存在于<ruby>“手动检查”<rt>manual check</rt></ruby>类别中的序列，可以观察其在”dramv-annotate&#x2F;annotations.tsv”中的注释信息。本步骤很难标准化，下面是一些经验之谈：</p><div class="tabs" id="tab-id"><ul class="nav-tabs"><li class="tab active"><a class="#tab-id-1">判定contig为病毒的标准</a></li><li class="tab"><a class="#tab-id-2">判定contig为非病毒的标准</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-id-1"><p>;;;id1  判定contig为病毒的标准</p><ul><li>结构基因、hallmark基因、<ruby>注释缺失或假设性富集<rt>depletion in annotations or enrichment for hypotheticals</rt> (~10%的基因具有non-hypothetical注释)。</li><li>缺乏hallmarks，但&gt;&#x3D;50%已注释的基因为病毒，且其中至少一半以上的viral bitcore &gt;100，且contig的长度&lt;50kb。</li><li>Provirus: <ruby>整合酶&#x2F;重组酶&#x2F;切除酶&#x2F;阻遏子<rt>Integrase&#x2F;recombinase&#x2F;excisionase&#x2F;repressor</rt></ruby>，在一侧富集了病毒基因。</li><li>Provirus: 基因组中存在“break”：两个基因之间的<ruby>间隙<rt>gap</rt></ruby>对应于一个<ruby>链开关<rt>strand switch</rt></ruby>，更高的编码密度，注释缺失，以及在一侧噬菌体基因的富集。</li><li><ruby>仅有~1-3个基因有注释，但至少一半命中病毒，且命中基因的bitscore不超过病毒bitscore的150% ，<rt>Few annotations only ~1-3 genes, but with at least half hitting to viruses, and where the genes hitting cells have a bitscore no more than 150% that of the viral bitscores</rt></ruby> <ruby>且&#x2F;或病毒的bitscore &gt;100 <rt> and&#x2F;or viral bitscores are &gt;100</rt></ruby>。</li><li>LPS (脂多糖) <ruby>外观区域对病毒基因的命中率也非常高<rt>looking regions if also has very strong hits to viral genes</rt></ruby>，bitscore&gt;100。<br>;;;</li></ul></div><div class="tab-pane" id="tab-id-2"><p>;;;id1 判定contig为非病毒的标准</p><ul><li><ruby>细胞样基因<rt>cellular like genes</rt></ruby>是病毒基因的3倍，几乎所有基因都有注释，没有基因只命中病毒，也没有病毒<ruby>标志基因<rt>hallmark genes</rt></ruby>。</li><li>缺乏任何病毒hallmark genes，且长度 &gt;50kb。</li><li>许多明显的细胞基因字符串，没有其他病毒标志基因。 在基准测试中遇到的例子包括 1) CRISPR Cas, 2) ABC transporters, 3) Sporulation proteins, 4) Two-component systems, 5) Secretion system。这其中一些可能是由病毒编码的，但在没有进一步证据的情况下并不表明是病毒contig。</li><li>多个质粒基因或转座酶，但没有明确的只命中病毒的基因。</li><li>注释信息很少，仅有~1-3个基因同时命中了病毒和细胞基因，但有stronger bitscores支持其为细胞基因。</li><li><ruby>没有强有力的命中病毒的脂多糖样区域<rt>LPS looking regions if no strong viral hits</rt></ruby>。富含通常与脂多糖相关的基因，如{外聚酶^epimerases}、{糖基转移酶^glycosyl transferases}、{酰基转移酶^acyltransferase}、{短链脱氢酶&#x2F;还原酶^dehydrogenase&#x2F;reductase short-chain}、{脱水酶^dehydratase}。</li><li>注释为 Type IV 和&#x2F;或 Type VI 分析系统，并被非病毒基因围绕。</li><li>注释信息很少，仅有~1-3个基因全部命中细胞基因 (即使 bitscore &lt;100) ，且没有命中病毒的基因。<br>;;;</li></ul></div></div></div><p>:::warning<br>最后，用户要注意，VirSorter 2和&#x2F;或checkV预测的任何原病毒边界只是一个近似的估计(寻找“ends”在前噬菌体发现中是一个相当具有挑战性的问题)，也需要仔细地手工检查，特别是在AMG研究中。<br>:::</p><p>最终我们需要拿到病毒contig的序列，用<code>get_virus_seqs.pl</code>完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/perl</span></span><br><span class="line">use strict;</span><br><span class="line">use warnings;</span><br><span class="line"></span><br><span class="line">my %<span class="built_in">hash</span>;</span><br><span class="line">open IN, <span class="string">&quot;checkv/combined.fna&quot;</span> || die;</span><br><span class="line"><span class="built_in">local</span> $/ = <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line">chomp;</span><br><span class="line">my (<span class="variable">$header</span>, <span class="variable">$seq</span>) = <span class="built_in">split</span>(/\n/, <span class="variable">$_</span>, 2);</span><br><span class="line">my <span class="variable">$id</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$header</span> =~/(\S+)\|\|.+/) &#123;</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$header</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$hash</span>&#123;<span class="variable">$id</span>&#125; = <span class="variable">$seq</span>;</span><br><span class="line">&#125;</span><br><span class="line">close IN;</span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> $/ = <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">open IN, <span class="string">&quot;Virus.txt&quot;</span> || die;</span><br><span class="line">open OUT, <span class="string">&quot;&gt;Virus.fas&quot;</span> || die;</span><br><span class="line">open NO, <span class="string">&quot;&gt;NoSeqs.ids&quot;</span> || die;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line">chomp;</span><br><span class="line">my @lines = <span class="built_in">split</span> /\t/;</span><br><span class="line"><span class="variable">$lines</span>[0] =~/(\S+)\|\|/;</span><br><span class="line"><span class="keyword">if</span> (exists <span class="variable">$hash</span>&#123;<span class="variable">$1</span>&#125;) &#123;</span><br><span class="line"><span class="built_in">print</span> OUT <span class="string">&quot;&gt;<span class="variable">$lines</span>[0]\n<span class="variable">$hash</span>&#123;<span class="variable">$1</span>&#125;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">print</span> NO <span class="string">&quot;<span class="variable">$lines</span>[0]\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">close IN;</span><br><span class="line">close OUT;</span><br><span class="line">close NO;</span><br></pre></td></tr></table></figure><p>用法：终端运行如下命令即可得到序列文件<code>Virus.fas</code>。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl get_virus_seqs.pl</span><br></pre></td></tr></table></figure><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“1551”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://github.com/jiarong/VirSorter2">VirSorter2</a></li><li><a href="https://www.protocols.io/view/viral-sequence-identification-sop-with-virsorter2-bwm5pc86">Viral sequence identification SOP with VirSorter2 V.3</a></li></ul><div class="mermaid">graph TDA [Reads] --&gt; B((MetaSpaDES))B --&gt; C [Contigs]C --&gt; D ((VirSorter))C --&gt; E ((VirFinder))E --&gt; F {Score &gt;&#x3D; 0.7 &amp; p &lt; 0.05}F -- YES --&gt; G [Virus]F -- NO --&gt; H [Contigs]D --&gt; GH --&gt; I ((CAT))I --&gt; J {&lt; 40%}J -- YES --&gt; GJ -- NO --&gt; K [Not Virus]G --&gt; L ((Nucmer))L --&gt; M {Identity &gt;&#x3D; 95% &amp; Coverage &gt;&#x3D; 80%}M -- YES --&gt; N [Grouped]M -- NO --&gt; O [Not Grouped]G --&gt; P ((Prodigal))P --&gt; Q [Amino Acid Sequences]Q --&gt; R {Length &lt; 10 kb}R -- YES --&gt; S ((Blastp))R -- NO --&gt; T ((vConTACT2))S --&gt; U [Annotated Genes]T --&gt; U</div>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生信软件 </tag>
            
            <tag> ST179 </tag>
            
            <tag> 宏病毒组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux中使用tar将大文件压缩为多个小的压缩包</title>
      <link href="/post/ed43.html"/>
      <url>/post/ed43.html</url>
      
        <content type="html"><![CDATA[<p>在GitHub上传文件时，单个文件不允许超过100m，超过的话需要使用Git Large File Storage，操作起来稍有些复杂，而且我记得也有限制。在这里我们可以将大文件压缩并切片，使之被分割为多个小文件，再上传GitHub，下载之后再合并即可。</p><ul><li><p>压缩</p><p>假设有个大文件<code>CAZy.faa</code>，原始大小为725m，压缩后为135m，因此我们可以将其压缩为2~3个文件 即可避免100m的限制。建议上传至GitHub的单个文件大小不要超过50m，因此我们以50m为阈值对文件进行切割（参数-b）。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar czf - CAZy.faa | <span class="built_in">split</span> -b 50m - CAZy.faa.tar.gz</span><br></pre></td></tr></table></figure><p>运行命令后，得到了3个文件：CAZy.faa.tar.gzaa，CAZy.faa.tar.gzab，CAZy.faa.tar.gzac。</p></li><li><p>解压</p><p>通过如下命令解压后可以得到完整的<code>CAZy.faa</code>文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> CAZy.faa.tar.gz* | tar -xzv</span><br></pre></td></tr></table></figure></li><li><p>在Windows下解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先合并，再用压缩软件解压</span></span><br><span class="line"><span class="comment">## 按“win+r”键，在弹出的输入框中输入“cmd”进入windows下的命令提示符界面。切换路径，如进入F盘，直接输入“F:”，再进入F盘的xin文件夹输入“cd xin”，输入以下命令进行合并（注意，用的是cmd而不是powershell）：</span></span><br><span class="line">copy /b CAZy.faa.tar.gza* CAZy.faa.tar.gz</span><br></pre></td></tr></table></figure></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://my.oschina.net/yysue/blog/1815340">Linux下将一个文件压缩分包成多个小文件</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言绘制分组条形图</title>
      <link href="/post/36cc.html"/>
      <url>/post/36cc.html</url>
      
        <content type="html"><![CDATA[<p>当我们要对一个多行多列的数据进行可视化的时候，分组条形图是一种不错的选择。</p><h1 id="输入文件样式"><a href="#输入文件样式" class="headerlink" title="输入文件样式"></a>输入文件样式</h1><p>本例中数据内容如下图所示，将其保存在名为<code>CAZy.Category.Matrix.txt</code>的文件中。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/36cc_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/36cc_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="CAZy.Category.Matrix.txt"></p><h1 id="绘图代码"><a href="#绘图代码" class="headerlink" title="绘图代码"></a>绘图代码</h1><p>在Rstudio中运行如下代码，细节可根据具体情况修改</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>reshape<span class="punctuation">)</span></span><br><span class="line">windowsFonts<span class="punctuation">(</span>Arial<span class="operator">=</span>windowsFont<span class="punctuation">(</span><span class="string">&quot;Arial&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment">#加载Windows字体</span></span><br><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/NCyc&quot;</span><span class="punctuation">)</span> <span class="comment">#设定工作目录</span></span><br><span class="line">cazy <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;CAZy.Category.Matrix.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line">cazy_melt <span class="operator">&lt;-</span> melt<span class="punctuation">(</span>cazy<span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>cazy_melt<span class="punctuation">)</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Cazy&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Samples&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Abundances&quot;</span><span class="punctuation">)</span></span><br><span class="line">ggplot<span class="punctuation">(</span>cazy_melt<span class="punctuation">,</span>aes<span class="punctuation">(</span>x <span class="operator">=</span> Samples<span class="punctuation">,</span>y <span class="operator">=</span> Abundances<span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span></span><br><span class="line">     geom_bar<span class="punctuation">(</span>stat <span class="operator">=</span> <span class="string">&#x27;identity&#x27;</span><span class="punctuation">,</span> <span class="comment">#identity是直接引用数据集中变量的值（表示不要计数，而是直接使用数据本身作为频数。）</span></span><br><span class="line">              aes<span class="punctuation">(</span>fill <span class="operator">=</span> Cazy<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">              position <span class="operator">=</span> position_dodge<span class="punctuation">(</span><span class="number">0.9</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span><span class="comment">#使柱子并排放置</span></span><br><span class="line">     theme_classic<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">+</span> </span><br><span class="line">     theme<span class="punctuation">(</span>text<span class="operator">=</span>element_text<span class="punctuation">(</span>family<span class="operator">=</span><span class="string">&quot;Arial&quot;</span><span class="punctuation">,</span>size<span class="operator">=</span><span class="number">12</span><span class="punctuation">,</span>face <span class="operator">=</span> <span class="string">&quot;plain&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="comment">#设置文字的字体字号</span></span><br><span class="line">           axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>size<span class="operator">=</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> <span class="comment"># 设置X轴文字大小</span></span><br><span class="line">      scale_fill_manual<span class="punctuation">(</span>values<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span><span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span><span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span><span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span><span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span><span class="string">&quot;#e377c2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span>  <span class="comment"># 设置填充颜色</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/36cc_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/36cc_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="分组条形图"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.csdn.net/weixin_45387324/article/details/109398216">R语言ggplot2分组条形图</a></li><li><a href="https://www.jianshu.com/p/e443edd76daa">geom_bar()函数绘制条形图</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SY179 </tag>
            
            <tag> R语言 </tag>
            
            <tag> 绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用NCycDB数据库从宏基因组中预测氮循环基因</title>
      <link href="/post/18ea.html"/>
      <url>/post/18ea.html</url>
      
        <content type="html"><![CDATA[<p>氮（N）循环是地球生态系统中重要的生物地球化学途径的集合，在生态学和环境研究中得到了广泛的关注。目前，<ruby>鸟枪法宏基因组测序<rt>Shotgun metagenome sequencing</rt></ruby>已被广泛应用于探索负责 N 循环过程的基因家族。NCycDB是一个手动管理的综合数据库，用于从鸟枪法宏基因组测序数据中快速准确地分析 N 循环基因（亚）家族。 NCycDB 总共包含 68 个基因（亚）家族，涵盖 8 个 N 循环过程，分别具有 95% 和 100% 一致性阈值的 84 759 和 219 146 个代表性序列。数据库中还包含了1958 个<ruby>同源直系同源组<rt>Homologous orthology groups</rt></ruby>的序列，以避免由于“小数据库”问题导致的假阳性分配。</p><h1 id="数据库及脚本"><a href="#数据库及脚本" class="headerlink" title="数据库及脚本"></a>数据库及脚本</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul><li><p>通过Git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/liaochenlanruo/NCyc.git</span><br></pre></td></tr></table></figure></li><li><p>通过wget</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/liaochenlanruo/NCyc/archive/refs/heads/master.zip</span><br></pre></td></tr></table></figure></li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>通过<code>Git</code>下载的不需要解压，通过<code>Wget</code>下载的需要先解压。</li><li>修改<code>NCycProfilter.PL</code>文件的第8-13行中4个依赖软件的安装路径。</li><li>将<code>data</code>目录下的<code>NCyc_100_2019Jul.7z</code>解压，将解压得到的<code>NCyc_100_2019Jul</code>重命名为<code>NCyc_100.faa</code>并移动至<code>data</code>目录下。</li></ul><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>Blast</li><li>diamond</li><li>usearch</li><li>Perl</li></ul><h1 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h1><ul><li><p>序列文件<br>宏基因组测序得到的Reads文件、组装后的序列文件以及通过基因预测后得到的氨基酸序列文件均可。序列文件可以是压缩的，也可以是解压的。</p></li><li><p>基因组-序列数对应文件<br>提供一份文本文档，共包含两列，第一列为<code>样本名称</code>(即序列文件的名字，不带文件后缀名)，第二列为<code>样本包含的序列数量</code>。</p></li></ul><h1 id="预测"><a href="#预测" class="headerlink" title="预测"></a>预测</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl NCycProfiler.PL -d ./ -m diamond -f faa -s prot -si SI.txt -o Ncycle.out.txt</span><br></pre></td></tr></table></figure><p>:::info<br>参数解析：<br>:::</p><p>-d 指定工作目录，即序列文件所在目录。<br>-m 指定用哪个软件进行序列比对，可选<code>diamond</code>，<code>blast</code>，<code>usearch</code>。<br>-f 指定序列文件的后缀名，不需要带<code>.</code>。<br>-s 指定序列类型，氨基酸为<code>prot</code>，核苷酸为<code>nucl</code>。<br>-si 基因组-序列数对应文件<br>-rs 随机取样大小，如果不指定，将取包含序列最少的样本的序列数<br>-o 指定输出的文件名称</p><h1 id="结果解析"><a href="#结果解析" class="headerlink" title="结果解析"></a>结果解析</h1><p>得到的结果文件是一个表格，第一行为随机取样大小。第一列为参与N循环的基因名，其他列为各样本含有的对应基因的数量。</p><h1 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h1><p>可参考本站另一篇文章<a href="https://www.liaochenlanruo.fun/post/b68c.html">R语言绘制气泡图Bubb_Plot</a>进行数据可视化。</p><ul><li>不带分组</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/NCyc&quot;</span><span class="punctuation">)</span></span><br><span class="line">data <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;Ncycle.out.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>reshape<span class="punctuation">)</span></span><br><span class="line">data_melt <span class="operator">&lt;-</span> melt<span class="punctuation">(</span>data<span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>data_melt<span class="punctuation">)</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Genes&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Samples&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Abundances&quot;</span><span class="punctuation">)</span></span><br><span class="line">data_melt <span class="operator">&lt;-</span>as.data.frame<span class="punctuation">(</span>data_melt<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 做主图</span></span><br><span class="line">bubble <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>data_melt<span class="punctuation">[</span>which<span class="punctuation">(</span>data_melt<span class="operator">$</span>Abundances<span class="operator">&gt;</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">,</span> aes<span class="punctuation">(</span>x <span class="operator">=</span> Samples<span class="punctuation">,</span> y <span class="operator">=</span> Genes<span class="punctuation">,</span> size <span class="operator">=</span> Abundances<span class="punctuation">,</span> color <span class="operator">=</span> Samples<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> geom_point<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改细节 — 图注，点大小，点shape</span></span><br><span class="line">bubble_style <span class="operator">&lt;-</span> bubble <span class="operator">+</span> theme_classic<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">+</span></span><br><span class="line">    labs<span class="punctuation">(</span></span><br><span class="line">        x <span class="operator">=</span> <span class="string">&quot;Sediment layers&quot;</span><span class="punctuation">,</span></span><br><span class="line">        y <span class="operator">=</span> <span class="string">&quot;N cycling genes&quot;</span><span class="punctuation">,</span></span><br><span class="line">        color<span class="operator">=</span><span class="string">&quot;Samples&quot;</span><span class="punctuation">,</span> <span class="comment"># 颜色图注名</span></span><br><span class="line">        size<span class="operator">=</span><span class="string">&quot;Abundances&quot;</span><span class="punctuation">)</span><span class="operator">+</span>    <span class="comment"># 大小图注名</span></span><br><span class="line">    scale_size<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.1</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">0.1</span><span class="punctuation">,</span> <span class="number">0.6</span><span class="punctuation">,</span> <span class="number">0.2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span>  <span class="comment">#等比修改圆圈大小</span></span><br><span class="line">    theme<span class="punctuation">(</span>plot.title<span class="operator">=</span>element_text<span class="punctuation">(</span>family<span class="operator">=</span><span class="string">&quot;Arial&quot;</span><span class="punctuation">,</span>size<span class="operator">=</span><span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">                                  color<span class="operator">=</span><span class="string">&quot;red&quot;</span><span class="punctuation">,</span>face<span class="operator">=</span><span class="string">&quot;italic&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                  hjust<span class="operator">=</span><span class="number">0.5</span><span class="punctuation">,</span>lineheight<span class="operator">=</span><span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">          plot.subtitle <span class="operator">=</span> element_text<span class="punctuation">(</span>hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">    theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">bubble_style</span><br></pre></td></tr></table></figure><p>依据下表获得基因的<code>Pathways</code>和<code>Annotation</code>，随后依据<code>Pathways</code>进行分组并绘图。</p><table><thead><tr><th>Pathways</th><th>Gene (sub) families</th><th>Annotation</th></tr></thead><tbody><tr><td>Nitrification</td><td>amoA_A</td><td>Ammonia monooxygenase subunit A (archaea)</td></tr><tr><td>^^</td><td>amoB_A</td><td>Ammonia monooxygenase subunit B (archaea)</td></tr><tr><td>^^</td><td>amoC_A</td><td>Ammonia monooxygenase subunit C (archaea)</td></tr><tr><td>^^</td><td>amoA_B</td><td>Ammonia monooxygenase subunit A (bacteria)</td></tr><tr><td>^^</td><td>amoB_B</td><td>Ammonia monooxygenase subunit B (bacteria)</td></tr><tr><td>^^</td><td>amoC_B</td><td>Ammonia monooxygenase subunit C (bacteria)</td></tr><tr><td>^^</td><td>hao</td><td>Hydroxylamine dehydrogenase</td></tr><tr><td>^^</td><td>nxrA</td><td>Nitrite oxidoreductase, alpha subunit</td></tr><tr><td>^^</td><td>nxrB</td><td>Nitrite oxidoreductase, beta subunit</td></tr><tr><td>Denitrification</td><td>napA</td><td>Periplasmic nitrate reductase NapA</td></tr><tr><td>^^</td><td>napB</td><td>Cytochrome c-type protein NapB</td></tr><tr><td>^^</td><td>napC</td><td>Cytochrome c-type protein NapC</td></tr><tr><td>^^</td><td>narG</td><td>Nitrate reductase</td></tr><tr><td>^^</td><td>narH</td><td>Nitrate reductase</td></tr><tr><td>^^</td><td>narJ</td><td>Nitrate reductase molybdenum cofactor assembly chaperone</td></tr><tr><td>^^</td><td>narI</td><td>Nitrate reductase gamma subunit</td></tr><tr><td>^^</td><td>nirK</td><td>Nitrite reductase (NO-forming)</td></tr><tr><td>^^</td><td>nirS</td><td>Nitrite reductase (NO-forming)</td></tr><tr><td>^^</td><td>norB</td><td>Nitric oxide reductase subunit B</td></tr><tr><td>^^</td><td>norC</td><td>Nitric oxide reductase subunit C</td></tr><tr><td>^^</td><td>nosZ</td><td>Nitrous-oxide reductase</td></tr><tr><td>^^</td><td>narZ</td><td>Nitrate reductase 2, alpha subunit</td></tr><tr><td>^^</td><td>narY</td><td>Nitrate reductase 2, beta subunit</td></tr><tr><td>^^</td><td>narV</td><td>Nitrate reductase 2, gamma subunit</td></tr><tr><td>^^</td><td>narW</td><td>Nitrate reductase 2, delta subunit</td></tr><tr><td>Assimilatory nitrate reduction</td><td>nasA</td><td>Assimilatory nitrate reductase catalytic subunit</td></tr><tr><td>^^</td><td>nasB</td><td>Assimilatory nitrate reductase electron transfer subunit</td></tr><tr><td>^^</td><td>nirA</td><td>Ferredoxin-nitrite reductase</td></tr><tr><td>^^</td><td>NR</td><td>Nitrate reductase (NAD(P)H)</td></tr><tr><td>^^</td><td>narB</td><td>Assimilatory nitrate reductase</td></tr><tr><td>^^</td><td>narC</td><td>Cytochrome b-561</td></tr><tr><td>Dissimilatory nitrate reduction</td><td>napA</td><td>Periplasmic nitrate reductase NapA</td></tr><tr><td>^^</td><td>napB</td><td>Cytochrome c-type protein NapB</td></tr><tr><td>^^</td><td>napC</td><td>Cytochrome c-type protein NapC</td></tr><tr><td>^^</td><td>narG</td><td>Nitrate reductase</td></tr><tr><td>^^</td><td>narH</td><td>Nitrate reductase</td></tr><tr><td>^^</td><td>narJ</td><td>Nitrate reductase molybdenum cofactor assembly chaperone</td></tr><tr><td>^^</td><td>narI</td><td>Nitrate reductase gamma subunit</td></tr><tr><td>^^</td><td>narZ</td><td>Nitrate reductase 2, alpha subunit</td></tr><tr><td>^^</td><td>narY</td><td>Nitrate reductase 2, beta subunit</td></tr><tr><td>^^</td><td>narV</td><td>Nitrate reductase 2, gamma subunit</td></tr><tr><td>^^</td><td>narW</td><td>Nitrate reductase 2, delta subunit</td></tr><tr><td>^^</td><td>nirB</td><td>Nitrite reductase (NADH) large subunit</td></tr><tr><td>^^</td><td>nirD</td><td>Nitrite reductase (NADH) small subunit</td></tr><tr><td>^^</td><td>nrfA</td><td>Nitrite reductase (cytochrome c-552)</td></tr><tr><td>^^</td><td>nrfB</td><td>Cytochrome c-type protein NrfB</td></tr><tr><td>^^</td><td>nrfC</td><td>Protein NrfC</td></tr><tr><td>^^</td><td>nrfD</td><td>Protein NrfD</td></tr><tr><td>Nitrogen fixation</td><td>anfG</td><td>Nitrogenase delta subunit</td></tr><tr><td>^^</td><td>nifD</td><td>Nitrogenase molybdenum-iron protein alpha chain</td></tr><tr><td>^^</td><td>nifH</td><td>Nitrogenase iron protein NifH</td></tr><tr><td>^^</td><td>nifK</td><td>Nitrogenase molybdenum-iron protein beta chain</td></tr><tr><td>^^</td><td>nifW</td><td>Nitrogenase-stabilizing&#x2F;protective protein</td></tr><tr><td>Anammox</td><td>hzo</td><td>Hydrazine oxidoreductase</td></tr><tr><td>^^</td><td>hzsA</td><td>Hydrazine synthase subunit A</td></tr><tr><td>^^</td><td>hzsB</td><td>Hydrazine synthase subunit B</td></tr><tr><td>^^</td><td>hzsC</td><td>Hydrazine synthase subunit C</td></tr><tr><td>^^</td><td>hdh</td><td>Hydrazine dehydrogenase</td></tr><tr><td>Organic degradation and synthesis</td><td>ureA</td><td>Urease subunit gamma</td></tr><tr><td>^^</td><td>ureB</td><td>Urease subunit beta</td></tr><tr><td>^^</td><td>ureC</td><td>Urease subunit alpha</td></tr><tr><td>^^</td><td>nao</td><td>Nitroalkane oxidase</td></tr><tr><td>^^</td><td>nmo</td><td>Nitronate monooxygenase</td></tr><tr><td>^^</td><td>gdh_K00260</td><td>Glutamate dehydrogenase</td></tr><tr><td>^^</td><td>gdh_K00261</td><td>Glutamate dehydrogenase (NAD(P)+)</td></tr><tr><td>^^</td><td>gdh_K00262</td><td>Glutamate dehydrogenase (NADP+)</td></tr><tr><td>^^</td><td>gdh_K15371</td><td>Glutamate dehydrogenase</td></tr><tr><td>^^</td><td>gs_K00264</td><td>Glutamate synthase (NADPH&#x2F;NADH)</td></tr><tr><td>^^</td><td>gs_K00265</td><td>Glutamate synthase (NADPH&#x2F;NADH) large chain</td></tr><tr><td>^^</td><td>gs_K00266</td><td>Glutamate synthase (NADPH&#x2F;NADH) small chain</td></tr><tr><td>^^</td><td>gs_K00284</td><td>Glutamate synthase (ferredoxin)</td></tr><tr><td>^^</td><td>glsA</td><td>Glutaminase</td></tr><tr><td>^^</td><td>glnA</td><td>Glutamine synthetase</td></tr><tr><td>^^</td><td>asnB</td><td>Asparagine synthase (glutamine-hydrolysing)</td></tr><tr><td>^^</td><td>ansB</td><td>Glutamin-(asparagin-)ase</td></tr><tr><td>Others</td><td>hcp</td><td>Hydroxylamine reductase</td></tr><tr><td>^^</td><td>pmoA</td><td>Particulate methane monooxygenase subunit A</td></tr><tr><td>^^</td><td>pmoB</td><td>Particulate methane monooxygenase subunit B</td></tr><tr><td>^^</td><td>pmoC</td><td>Particulate methane monooxygenase subunit C</td></tr></tbody></table><ul><li>带分组</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;E:/Researches/Xiaqian/NGS/CleanData/宏基因组数据/Result/NCyc&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;Ncycle.out.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>reshape<span class="punctuation">)</span></span><br><span class="line">data_melt <span class="operator">&lt;-</span> melt<span class="punctuation">(</span>data<span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>data_melt<span class="punctuation">)</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Genes&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Annotation&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Pathways&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Samples&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Abundances&quot;</span><span class="punctuation">)</span></span><br><span class="line">data_melt <span class="operator">&lt;-</span>as.data.frame<span class="punctuation">(</span>data_melt<span class="punctuation">)</span></span><br><span class="line">bubble <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>data_melt<span class="punctuation">[</span>which<span class="punctuation">(</span>data_melt<span class="operator">$</span>Abundances<span class="operator">&gt;</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">,</span> aes<span class="punctuation">(</span>x <span class="operator">=</span> Samples<span class="punctuation">,</span> y <span class="operator">=</span> Genes<span class="punctuation">,</span> size <span class="operator">=</span> Abundances<span class="punctuation">,</span> color <span class="operator">=</span> Samples<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme_bw<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">+</span> labs<span class="punctuation">(</span>x <span class="operator">=</span> <span class="string">&quot;Sediment layers&quot;</span><span class="punctuation">,</span> y <span class="operator">=</span> <span class="string">&quot;N cycling genes&quot;</span><span class="punctuation">)</span><span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span> colour <span class="operator">=</span> <span class="string">&quot;black&quot;</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> size <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span> axis.text.y <span class="operator">=</span> element_text<span class="punctuation">(</span>size <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    theme<span class="punctuation">(</span>panel.grid <span class="operator">=</span> element_blank<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> panel.border <span class="operator">=</span> element_blank<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    theme<span class="punctuation">(</span>panel.spacing <span class="operator">=</span> unit<span class="punctuation">(</span><span class="number">.1</span><span class="punctuation">,</span> <span class="string">&quot;lines&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">    theme<span class="punctuation">(</span>plot.margin<span class="operator">=</span>unit<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">0</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="string">&quot;cm&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="operator">+</span> geom_point<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">+</span> facet_grid<span class="punctuation">(</span>Pathways <span class="operator">~</span> .<span class="punctuation">,</span> drop<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> scale<span class="operator">=</span><span class="string">&quot;free&quot;</span><span class="punctuation">,</span>space<span class="operator">=</span><span class="string">&quot;free&quot;</span><span class="punctuation">,</span> <span class="built_in">switch</span> <span class="operator">=</span> <span class="string">&quot;y&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">    theme<span class="punctuation">(</span>strip.background <span class="operator">=</span> element_rect<span class="punctuation">(</span>fill <span class="operator">=</span> <span class="string">&quot;grey95&quot;</span><span class="punctuation">,</span> colour <span class="operator">=</span> <span class="string">&quot;white&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> strip.text.y.left <span class="operator">=</span> element_text<span class="punctuation">(</span>angle<span class="operator">=</span><span class="number">360</span><span class="punctuation">)</span><span class="punctuation">,</span> strip.text<span class="operator">=</span>element_text<span class="punctuation">(</span>size<span class="operator">=</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://doi.org/10.1093/bioinformatics/bty741">NCycDB: a curated integrative database for fast and accurate metagenomic profiling of nitrogen cycling genes</a></li><li><a href="https://github.com/qichao1984/NCyc">GitHub</a></li></ul><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“18ea”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宏基因组 </tag>
            
            <tag> Functional genomics </tag>
            
            <tag> SY179 </tag>
            
            <tag> 生信软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCBI上传基因簇之tbl2asn的使用</title>
      <link href="/post/d444.html"/>
      <url>/post/d444.html</url>
      
        <content type="html"><![CDATA[<p>向<a href="https://www.ncbi.nlm.nih.gov/">NCBI</a>提交基因簇的时候需要提供sqn格式的文件，这个文件需要通过<a href="https://www.ncbi.nlm.nih.gov/genbank/tbl2asn2/">tbl2asn</a>生成。</p><h1 id="文件准备"><a href="#文件准备" class="headerlink" title="文件准备"></a>文件准备</h1><p>tbl2asn依赖三个文件来生成sqn文件：</p><ul><li>文件1：fasta格式的基因组序列文件</li></ul><p>Header处的中括号部分可以不写。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">&gt;Toyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster [organism=Bacillus toyonensis] [strain=XIN-YC13] [topology=linear] [moltype=DNA] [tech=wgs] [gcode=11] [country=China] Bacillus toyonensis strain XIN-YC13 Toyoncin biosynthesis gene cluster, complete sequence</span><br><span class="line">ttaaaa taatttaata</span><br><span class="line">gggaagtttt ttagttgttt tggactcttc ccaaacactg ctttaagtgt tggattaaca</span><br><span class="line"> tcatccctat tccccgaaaa cataatgtga ggatttatga ataatgcata tgctctaaca</span><br><span class="line">ttattatcat caacaccact ctctgaacga gccataatac ccttatcaat taattttcta</span><br><span class="line">accaatggac taactttagt ttcatgtctt ccaatttttt tagctaattc tcgctgagtt</span><br><span class="line"> aatgggattt gttctttcga attaatatca ttaactaaac aattacttaa aaaacctaca</span><br><span class="line">cacattgaaa tatctactaa aaataccttc tcagcatttg ttaaataatc aatttcgaac</span><br><span class="line"> aaatactgga tattttgttg aataatctga acaaacttcg ctttattttt cactttacgc</span><br><span class="line"> tcaggaacta atttcattcc tcttgaacga gcttttgatt gaagtttatt tgctaaatac</span><br><span class="line"> atctcttctt cagacaagac ctttaaatcc tcaatatctc tcaatcttga atttttttca</span><br><span class="line"> gcttgttcta agttgataaa ctttgacata ttctttttgc tcctcttttc taagattttc</span><br><span class="line"> aactagagaa ggaaaaaatt ttatgttatg attcctgtag aatttacaat tcaatatgta</span><br><span class="line"> caaaagaact ccccttttct aattgatagt ttggtcgctt tcaattataa tacaagggga</span><br><span class="line"> ttttttacat cttaaaattt ttcatttttg aatcaatccc tgaaaatata aagaacacat</span><br><span class="line"> cacataaatt attcttaata ttttataatc gaaaaaataa taggaataaa gaaaaatact</span><br><span class="line"> gcaataaata tattcatctg tttcttactc aaaccggcca ctatatttaa tcccattcct</span><br><span class="line"> ataataatta attcccaaat tgaaaacact tcaaatttac tacaaattat atatagtaat</span><br><span class="line"> gtacctggtt caaatattga acccaaacta gtatacgtta ctatttctcc tcctataaat</span><br><span class="line"> agtgttaata atgtattaat taatttacct aaaatagaaa ttacactagc aaatattgta</span><br><span class="line"> atagatacta actttttata agaaacatct ttactcatca gcatcattac aatctttaaa</span><br><span class="line"> ataatccccc aaataaaagg tgtaattaaa gcaatgaaaa tcgatgcaaa acctcctaac</span><br><span class="line"> atcatttggg aaacaagggg tatttccata tctgcaaata cttctttttg aattttaacc</span><br><span class="line"> aattctggat tgctatgtct tgcatataca gataaaatcc ctattattgc ttgtataact</span><br><span class="line"> gataaataca taagaggaaa ccatatcgga ctaattattt tcatacgctc gaattcagaa</span><br><span class="line"> ataggagatg taatcataaa aattagagat ggtttttcat aattgttttt ttctttattc</span><br><span class="line"> actactaaac tattatccat atattaacac cttctttttt tattcataac gtaatgcttc</span><br><span class="line"> aattggatct aattttgcag ccttattggc tggaatcaat ccaaatataa taccaagcga</span><br><span class="line"> catcgaaaat aatacgccac ccacaacaac ttcccatgaa acaagaggcg gccattttgc</span><br><span class="line"> aaatgtggac acaatgtacg ctccacaata accaagtcca atcccaatca atccaccaag</span><br><span class="line"> aagtgtcaac ataattgctt caattaaaaa ttgcaacaaa attttaccac gcgttgctcc</span><br><span class="line">aagtgcttta cgtaccccaa tctcacgtgt acgctctgtt acagaaacaa gcatgatatt</span><br><span class="line">cataactcca attccgccta caactaaaga aatacttgca atacctgcaa taatcattgt</span><br><span class="line">cataatatta gtaactttag aaataccttt ttggatttct tctaaattta caatttcata</span><br><span class="line"> tttcccttta aactcttcag attgtctatc atttaataat tttactccct tttttccagc</span><br><span class="line">tgtttgtaat tgatcaaccc ctattgcttg aattgtaata gattgttgag agttatcatc</span><br><span class="line"> tccatataat attggccata ttgaaagtgg tattaaaatt tctgacattc caaaaccaag</span><br><span class="line"> ctcttcatct cctgaactga atagaccaat aatttgaagt ggctgacctt taatttctat</span><br><span class="line"> aattttacca atgactgatt catgctcatt aggaaataac tctttcacta atgtttgatt</span><br><span class="line"> aaccattatt acattattac cttgcatcaa atcatcttca ttaagagaac gacctttctc</span><br><span class="line"> tattttcatt ttagtcatat taaaatattc ttttgtaata ccatttatat tagttacaac</span><br><span class="line">ctttttatca tcaccaatta atgtctctgt actagagttt tgaacaatta catttttaat</span><br><span class="line"> ttcttttatc ttttttaact caaaaagatc ttcttcactt acagatggtt ttttgtcatt</span><br><span class="line"> catagatcct gttgttaata actcattaat atcttcttta tatgtaatcg gaatagtgtt</span><br><span class="line"> attgccagaa gcggtaaatt gtgatttaag cattgcttct ccacctttac caatggctac</span><br><span class="line"> aacagtaata atagaaccta caccaataat aattccaagc atcgtaagag ctgagcgcag</span><br><span class="line"> tttatgagct aaaatagaag ataaggcaat ttttatacta tctaataaac tcataccata</span><br><span class="line"> caccttctat cttctgtaat tttcccatct cgcaatatga tgcgacgtga agaataagct</span><br><span class="line"> gctacctctt cttcatgtgt aaccataacg attgtcgtac cttctgcatt taacttcgta</span><br><span class="line"> aagatatcca taacttgtgc accagacttc gtatcaagcg caccagttgg ctcatcagcc</span><br><span class="line"> ataataaacg ttggattatt cgcaatcgat cttgcaatag caacacgctg cttctgtcca</span><br><span class="line"> cctgacagct cactaggtaa atgatgtact ctatccgcta atccaacttt cccaagcgct</span><br><span class="line"> tcgagcgctc tttgacgacg ctctgctttc ttcactccac cataaatcag tggtaattca</span><br><span class="line"> acgttttcca ctgcggaaag gcgcggcaat aaattaaaat gctggaacac aaaaccgata</span><br><span class="line">tattcattac gaattaaagc aagttttgac tcatctgctg ttaaaatatt cacatcattc</span><br><span class="line">agcatatatt cgccttctgt tggacgatct aaacaaccga taatattcat aagagttgat</span><br><span class="line">ttaccagaac cagacggtcc cataattgaa acaaattcac caccttgaat agttaaacta</span><br><span class="line">ataccgtgca aaataggaac cgccattttt ccttgataat acgttttagc aatattattt</span><br><span class="line">aacgtaatca tttctctttc acttccattc cgtcatatac gttgtcggaa ggatttttaa</span><br><span class="line">ccaccttttg ccccactgtt gcgccctcta caatctctgt ccaatctcca tcagtagcac</span><br><span class="line">cttttttcac attttgttta cgaagcttac ctttctcttc gatatataca aatgcatcat</span><br><span class="line">      cgcctttttc aacaatactc ttacttggaa cagcaatcat tcttttattc tctaaattta</span><br><span class="line">      cttgtaacga aacatgataa cctggagata aaccatcttg actatcaaga cttgctttat</span><br><span class="line">      atgtatattg agacatattt tgagtcactt cccccatgcc atcagcttga gccatttcta</span><br><span class="line">      cacttgttgg gaactcactt acctctgtaa tcttccctgt ccactttttc ttactatttg</span><br><span class="line">      ctttcgcagt tacagtaaac gtttgatcct tttgaatttg cgacttctga agctcagtta</span><br><span class="line">      atgttccttg aatttggaat ggatctttag aagcaacttg taaaaaggct ttcccttgac</span><br><span class="line">      cacctaacgc ttgtgatgaa ctttgtgctg catctttatc taacttttga acaacaccag</span><br><span class="line">      caaaattgct ataaatcgta agttcgttct gctttttatt taactcttct ttttgtaact</span><br><span class="line">      tccctttctc tttctcaagg tctgttgtct tttgcgctat ttctaattca cttacttgct</span><br><span class="line">      cttccatcgg atctattact tctttcccag ctccgctatc tttcgccttc ttaatttctt</span><br><span class="line">      tcttcaacga atcaatcttc tttttccctt ggtcataacg catatctgcc atcttttgat</span><br><span class="line">      caagcacagc ttgcttcatt tgcaaattaa tttcttcatt atcgtaagaa aacaatttcg</span><br><span class="line">      ttcccttttc tatttcttgt ccttctttca cttcaatatc tttcactttt cctttagtca</span><br><span class="line">      gatccgcgta gaaactttca atattccccg gcttcacttg accagaaatt aactttgtat</span><br><span class="line">      tattaagatt gcgctctgtg actttttcaa aactaacagt atctattttt gttaccgctt</span><br><span class="line">      tcttcttact ttgcactacg aaaatattaa taaatgtaac aataacaatt aacgcaataa</span><br><span class="line">      ctccaataat agctcctttc tttttatttt taaaaataaa aagttctttt ttaatcacaa</span><br><span class="line">      caatcttctc cttattcata tctaaaattt aaacttttaa attttacata aaaatttaaa</span><br><span class="line">      acttctaaaa tataacatgt ataatttacc atagatgatt tattttgtat aatataaaaa</span><br><span class="line">      tatctatata aataatgcta attttcaaac aatggggtgg aagatactaa tgttagaaaa</span><br><span class="line">      aaaagataga ctaacagaaa tagaggaaca aattatatac ttaatttcaa aggaattagg</span><br><span class="line">      aaataaagaa atagcggaaa aattaaatta ttcacaacgt agcatcggtt acaaaataaa</span><br><span class="line">      taatattttt aaaaaattaa atgttaattc aagaatcgga ctgattatag aagctgtaaa</span><br><span class="line">      aaaaaatata atttaaatat aagaatgctt tcatgttaat attttataga aactaaatat</span><br><span class="line">      agaggtgatt aaaatgcaaa aattttttga agctattagt gctataggta tagtaggtta</span><br><span class="line">      ctttttaggt aaattcacaa gtattccttt aatagacaaa tatacattgt atttcggcgt</span><br><span class="line">      aatgttgatg attggggtta ttggaagatt tattataaaa gtaattaact cagaagaaga</span><br><span class="line">      gacacatgat tcaaacaaat aaaatactct aataaaaatg gaagaagatt gcacttaagt</span><br><span class="line">      gcaatcttct tccattttta ttgaaaattg attaaataat gttaatattg caattgtgtg</span><br><span class="line">      gtgcagatta gggtgattat gtaatagggg gaaattaaaa atgatcaata cagcttggaa</span><br><span class="line">      aattattaaa gcactacaaa aatacggtac aaaagcatac aatgttatca aaaaaggcgg</span><br><span class="line">      ccaagcaatg tacgacagct tcatggcagc taaagctaaa ggttggacac atgcagcttg</span><br><span class="line">      gtggctagta gaacatggtt caactttagg aacattctat gatttattaa aagctgctgg</span><br><span class="line">      attaatcgac taattacagc aactaaacaa ctaaacaact aaacaactta aaaatacaaa</span><br><span class="line">      ttaccctaaa ctgtacccct attacatatt aactaattat tttaaaggtt ggatgataat</span><br><span class="line">      atgtcaaata acatcatatc tgtaaaaaat ttaattaaaa gcttcgataa caaaatagta</span><br><span class="line">      ttagataaat taaatttcga aatgaaagaa aactccactg ttgtaataat aggtaaaaac</span><br><span class="line">      ggtgcaggta aaagtgtctt tctaaattgt ttacttggat ttattcatta caaccaaggt</span><br><span class="line">      tcaatactaa tagatggaca acctgtagaa aatcgattac atctccgcaa gattacatcg</span><br><span class="line">      ttaatttctt cagaccatca agaacatcta aatttattaa cccccaatga atatttttct</span><br><span class="line">      tttttacaag atatttacca actaaaaagt aataataaag acaaaattca aaattactca</span><br><span class="line">     gaagatctat atgttactaa agaactcaat actgtatttt catcactttc ttttggaaca</span><br><span class="line">     aaaaagaaaa tacaattaat tggtagccta ttatattctc ctaaattatt gatttgcgac</span><br><span class="line">     gaaatatttg aagggcttga tacagactca gtaaaatggg ttaaaaactt atttcaacaa</span><br><span class="line">     agaaaacaag aaaatctttc tactttattt acaactcata ttactgaaca tataacagat</span><br><span class="line">     ataacagaaa aaaattacat acttgaaaat ggaaaattaa ttgtgtaagt ttaaccactt</span><br><span class="line">     atatttaaag ctaaaattaa ggagcttaaa atatgaattt taatatatat aagagactat</span><br><span class="line">     atgataaatc aacagaagaa aaaagcaaaa caataacaaa acaaatatta tttggaatta</span><br><span class="line">     taaatagttc tatattaata ggtatactac tcacatgttt ggagattttc aactttaaaa</span><br><span class="line">     tttcaactgt aatgtatggt tatttcacta tatatataat actagaactt ttactattat</span><br><span class="line">     tctctgcaaa tcaactatat gaaagtacag aattcataat aaaattcctt aaatatacac</span><br><span class="line">     caataaccat aaataaacta tatttctcac attttctaag ttctaaatat tcattttcca</span><br><span class="line">     atctttttga aataataact ctcacatcaa ttttattaat atataatgtc gatatcttat</span><br><span class="line">     attcatttat tttcataatt agcttacaaa ttattagctt aataagaaca tatttagaat</span><br><span class="line">     ttttactatt atattctcaa aaaaaacagg ttaaaatttt tactctaacc cattttgttt</span><br><span class="line">     tcataatatc tatggttttt tatattattg ttaaaacaaa atcgatagat ttagtattct</span><br><span class="line">     ttgaaaacac aaatatgtta attatatctg ttcttctcat aacattcttg atatcacttt</span><br><span class="line">     taacatataa acatattata gaatacttaa tgaaaaataa tgaaattgta tataatgcta</span><br><span class="line">     tttttatcaa gttaactttt aacacagcta atttaattag taaattattt aaatttaata</span><br><span class="line">     catcaattgc atctttaata aaaatacata taatacgatt attacgtaat caagactata</span><br><span class="line">     taagtagatt actaaaaata ggaatattac tatttatttt ttcttctata agctttctat</span><br><span class="line">     ttttcgataa atcatcaaca aacaatgaaa tgagtgatat actttacttt tcatttttta</span><br><span class="line">     tttccttatt tagtttttct aacatacgat tagactataa cttagtttct aaattaagct</span><br><span class="line">     tagaggatta tccaataaca aaattacaat caagattaag cattgatata gcacatggaa</span><br><span class="line">     ttttactatt tatactatct ttatttcttt tattaacaca atacttattg aatccaacaa</span><br><span class="line">     atattctaac tctaattgat ggtttattat catttatttg tttttatttt ctaagtcttg</span><br><span class="line">     gtatagaaaa agcagatatt ataataacac caaaaacaaa atggaaaatg tatccattat</span><br><span class="line">     tttttgtgat gggattaata attgaagcaa tatttctatt aaaattcaaa atatggataa</span><br><span class="line">     aattaataac tttattcctt tgtatactgt ggtcatattt acgtgtttat tggaaattaa</span><br><span class="line">     aaaaacaata aacacaatta aaaagttccc ttcatatttt ttgaagggaa cttttatttt</span><br><span class="line">     aaacaaaaat tacaaacaag caaagttatt taaaagtaaa cttttaaaat tattgaatta</span><br><span class="line">     ataacaatta gtctaagata tatcagccaa atttaatttt taaacaaacc gaaaaaccct</span><br><span class="line">     ttccgttttt gtttctgatt ttggctctgt atttctctaa tgttttcaag caataactga</span><br><span class="line">     tctcgttttt caaatttttt ctctataaaa acctctaatt caatattttt atcttctact</span><br><span class="line">     tcctttaatt ttctctccgt attagccaaa tgttcttttg tggtaactaa ttcattcgta</span><br><span class="line">     atctcttgta atttttgaac aagcgtttga ttgaactgat tttgtaattg ttgattttct</span><br><span class="line">     aatacttcat ccaacttctt ttctaattcc gatttttcct ctcttgaaac aaacaaatca</span><br><span class="line">     agttctccat tccgccatgc tcgaacttga tcataagacc atttttgcac ctgtattttt</span><br><span class="line">     tctttaattg ctatcaattc ttctatattt tcctttgagt acctacgatg ccctccctga</span><br><span class="line">     cttcgctccg tttgtatatt aaattcgttt gaccatgctt ttaacaagtc aggggtaatc</span><br><span class="line">     cctaaacgat ccgcaacaat tttcggtgta tacatttctg attttaattc caa</span><br></pre></td></tr></table></figure><ul><li>文件2：描述基因特征的feature table文件（.tbl）</li></ul><p>该文件可以用prokka对文件1进行注释而得到，但是需要自己加以修改，加上文件前几行以及gene相关的信息，各列之间用制表符分隔。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&gt;Feature Toyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster</span><br><span class="line">18409source</span><br><span class="line">organismBacillus toyonensis</span><br><span class="line">mol<span class="built_in">_</span>typegenomic DNA</span><br><span class="line">strainXIN-YC13</span><br><span class="line">5851gene</span><br><span class="line">geneorf1</span><br><span class="line">5851CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00001</span><br><span class="line">productMarR family transcriptional regulator</span><br><span class="line">1476811gene</span><br><span class="line">geneorf2</span><br><span class="line">1476811CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00002</span><br><span class="line">productYIP1 family membrane protein</span><br><span class="line">27101496gene</span><br><span class="line">geneorf3</span><br><span class="line">27101496CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00003</span><br><span class="line">productABC transporter permease</span><br><span class="line">33872707gene</span><br><span class="line">geneorf4</span><br><span class="line">33872707CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00004</span><br><span class="line">productABC transporter ATP-binding protein</span><br><span class="line">45953384gene</span><br><span class="line">geneorf5</span><br><span class="line">45953384CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00005</span><br><span class="line">productRND family efflux transporter, MFP subunit</span><br><span class="line">47464952gene</span><br><span class="line">geneorf6</span><br><span class="line">47464952CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00006</span><br><span class="line">productHelix-turn-helix transcriptional regulator</span><br><span class="line">50105198gene</span><br><span class="line">geneorf7</span><br><span class="line">50105198CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00007</span><br><span class="line">productPutative membrane protein</span><br><span class="line">53375549gene</span><br><span class="line">genetoyA</span><br><span class="line">53375549CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00008</span><br><span class="line">productToyonsin precusor</span><br><span class="line">56576304gene</span><br><span class="line">geneorf9</span><br><span class="line">56576304CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00009</span><br><span class="line">productABC transporter ATP-binding protein</span><br><span class="line">63497707gene</span><br><span class="line">geneorf10</span><br><span class="line">63497707CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00010</span><br><span class="line">productPutative membrane protein</span><br><span class="line">83917849gene</span><br><span class="line">geneorf11</span><br><span class="line">83917849CDS</span><br><span class="line">inferenceab initio prediction:Prodigal:002006</span><br><span class="line">locus<span class="built_in">_</span>tagToyoncin<span class="built_in">_</span>biosynthesis<span class="built_in">_</span>gene<span class="built_in">_</span>cluster<span class="built_in">_</span>00011</span><br><span class="line">productMarR family transcriptional regulator</span><br></pre></td></tr></table></figure><ul><li>文件3：描述作者信息的模板文件（.sbt）</li></ul><p>可以在<a href="https://submit.ncbi.nlm.nih.gov/genbank/template/submission/">NCBI</a>上生成该文件。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">Submit-block ::= &#123;</span><br><span class="line">  contact &#123;</span><br><span class="line">    contact &#123;</span><br><span class="line">      name name &#123;</span><br><span class="line">        last &quot;xin&quot;,</span><br><span class="line">        first &quot;bingyue&quot;,</span><br><span class="line">        middle &quot;&quot;,</span><br><span class="line">        initials &quot;&quot;,</span><br><span class="line">        suffix &quot;&quot;,</span><br><span class="line">        title &quot;&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      affil std &#123;</span><br><span class="line">        affil &quot;Huaibei Normal University&quot;,</span><br><span class="line">        div &quot;College of Life Sciences&quot;,</span><br><span class="line">        city &quot;Huaibei&quot;,</span><br><span class="line">        sub &quot;Anhui&quot;,</span><br><span class="line">        country &quot;China&quot;,</span><br><span class="line">        street &quot;Dongshan road No.100&quot;,</span><br><span class="line">        email &quot;xinbingyuex@163.com&quot;,</span><br><span class="line">        postal-code &quot;235000&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  cit &#123;</span><br><span class="line">    authors &#123;</span><br><span class="line">      names std &#123;</span><br><span class="line">        &#123;</span><br><span class="line">          name name &#123;</span><br><span class="line">            last &quot;Xin&quot;,</span><br><span class="line">            first &quot;Bingyue&quot;,</span><br><span class="line">            middle &quot;&quot;,</span><br><span class="line">            initials &quot;&quot;,</span><br><span class="line">            suffix &quot;&quot;,</span><br><span class="line">            title &quot;&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      affil std &#123;</span><br><span class="line">        affil &quot;Huaibei Normal University&quot;,</span><br><span class="line">        div &quot;College of Life Sciences&quot;,</span><br><span class="line">        city &quot;Huaibei&quot;,</span><br><span class="line">        sub &quot;Anhui&quot;,</span><br><span class="line">        country &quot;China&quot;,</span><br><span class="line">        street &quot;Dongshan road No.100&quot;,</span><br><span class="line">        postal-code &quot;235000&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  subtype new</span><br><span class="line">&#125;</span><br><span class="line">Seqdesc ::= pub &#123;</span><br><span class="line">  pub &#123;</span><br><span class="line">    gen &#123;</span><br><span class="line">      cit &quot;unpublished&quot;,</span><br><span class="line">      authors &#123;</span><br><span class="line">        names std &#123;</span><br><span class="line">          &#123;</span><br><span class="line">            name name &#123;</span><br><span class="line">              last &quot;Xin&quot;,</span><br><span class="line">              first &quot;Bingyue&quot;,</span><br><span class="line">              middle &quot;&quot;,</span><br><span class="line">              initials &quot;&quot;,</span><br><span class="line">              suffix &quot;&quot;,</span><br><span class="line">              title &quot;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      title &quot;Purification and characterization of a novel leaderless bacteriocin, toyoncin, produced by Bacillus toyonensis XIN-YC13 that specifically active against Bacilus cereus and Listeria monocytogenes&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">Seqdesc ::= user &#123;</span><br><span class="line">  type str &quot;Submission&quot;,</span><br><span class="line">  data &#123;</span><br><span class="line">    &#123;</span><br><span class="line">      label str &quot;AdditionalComment&quot;,</span><br><span class="line">      data str &quot;ALT EMAIL:xinbingyuex@163.com&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">Seqdesc ::= user &#123;</span><br><span class="line">  type str &quot;Submission&quot;,</span><br><span class="line">  data &#123;</span><br><span class="line">    &#123;</span><br><span class="line">      label str &quot;AdditionalComment&quot;,</span><br><span class="line">      data str &quot;Submission Title:None&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：文件1和文件2的序列描述信息必须一致，此例中均为“Toyoncin_biosynthesis_gene_cluster”。</p><h1 id="文件生成"><a href="#文件生成" class="headerlink" title="文件生成"></a>文件生成</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tbl2asn -t template.sbt -p ./ -V vb -x .fna</span><br></pre></td></tr></table></figure><p>-t 模板文件<br>-p 输入文件所在路径<br>-V<br>  -v 生成验证文件，保存错误信息<br>  -b 生成gbf文件<br>-x 文件1（FASTA文件）的后缀名，根据实际情况填写</p><p><strong>注意</strong>：如果用Prokka带的tbl2asn，生成的sqn和gbf文件中的日期通常是1-JAN-2019，需要自己手动改正为当前时间，这是因为Prokka里的tbl2asn是经过修改的。建议使用官方版的<a href="https://ftp.ncbi.nih.gov/toolbox/ncbi_tools/converters/by_program/tbl2asn/">tbl2asn</a>，可避免日期错误。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.ncbi.nlm.nih.gov/genbank/tbl2asn2/">tbl2asn</a></li><li><a href="http://www.chenlianfu.com/?p=2171">上传基因组数据到NCBI</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NCBI </tag>
            
            <tag> 序列处理 </tag>
            
            <tag> 生信软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言安装依赖包错误集锦</title>
      <link href="/post/a713.html"/>
      <url>/post/a713.html</url>
      
        <content type="html"><![CDATA[<h1 id="devtools安装错误"><a href="#devtools安装错误" class="headerlink" title="devtools安装错误"></a>devtools安装错误</h1><h2 id="XML包-安装之-ERROR-configuration-failed-for-package-‘XML’"><a href="#XML包-安装之-ERROR-configuration-failed-for-package-‘XML’" class="headerlink" title="XML包 安装之 ERROR: configuration failed for package ‘XML’"></a>XML包 安装之 ERROR: configuration failed for package ‘XML’</h2><ul><li><p>CentOS解决方案</p><p>在Linux终端中运行如下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y libxml2-devel</span><br></pre></td></tr></table></figure></li></ul><h1 id="qiime2R安装错误"><a href="#qiime2R安装错误" class="headerlink" title="qiime2R安装错误"></a>qiime2R安装错误</h1><h2 id="rjcommon-h-11-21-fatal-error-jpeglib-h-No-such-file-or-directory"><a href="#rjcommon-h-11-21-fatal-error-jpeglib-h-No-such-file-or-directory" class="headerlink" title="rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory"></a>rjcommon.h:11:21: fatal error: jpeglib.h: No such file or directory</h2><p>该错误是安装依赖包“jpeg”时发生的。</p><ul><li><p>CentOS解决方案</p><p>在Linux终端中运行如下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install sudo yum install -y libjpeg-turbo-devel.x86_64</span><br></pre></td></tr></table></figure></li></ul><h1 id="WGCNA安装错误"><a href="#WGCNA安装错误" class="headerlink" title="WGCNA安装错误"></a>WGCNA安装错误</h1><p>Warning in install.packages :<br>  没有’‘impute’, ‘preprocessCore’, ‘GO.db’, ‘AnnotationDbi’’这种相依关系</p><ul><li>解决方案：在R环境下通过<code>BiocManager</code>安装<code>GO.db</code>。<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>requireNamespace<span class="punctuation">(</span><span class="string">&quot;BiocManager&quot;</span><span class="punctuation">,</span> quietly <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  install.packages<span class="punctuation">(</span><span class="string">&quot;BiocManager&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">BiocManager<span class="operator">::</span>install<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;GO.db&quot;</span><span class="punctuation">,</span> <span class="string">&quot;impute&quot;</span><span class="punctuation">,</span> <span class="string">&quot;preprocessCore&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> R语言 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux服务器中安装网页版Rstudio</title>
      <link href="/post/ea71.html"/>
      <url>/post/ea71.html</url>
      
        <content type="html"><![CDATA[<p>本文演示如何在CentOS7服务器上安装Rstudio server。</p><h1 id="安装Rstudio"><a href="#安装Rstudio" class="headerlink" title="安装Rstudio"></a>安装Rstudio</h1><p>访问<a href="https://www.rstudio.com/products/rstudio/download-server">Rstudio官网</a>，选择对应的Linux发行版，下载Rstudio安装包。本文以最常见的CentOS7为例演示，<strong>前提是系统中已经安装了R</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://download2.rstudio.org/server/centos7/x86_64/rstudio-server-rhel-2021.09.0-351-x86_64.rpm</span><br><span class="line">sudo yum install rstudio-server-rhel-2021.09.0-351-x86_64.rpm</span><br></pre></td></tr></table></figure><h1 id="开启Rstudio服务"><a href="#开启Rstudio服务" class="headerlink" title="开启Rstudio服务"></a>开启Rstudio服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> rstudio-server.service</span><br><span class="line">sudo systemctl start rstudio-server.service</span><br><span class="line">sudo systemctl status rstudio-server</span><br></pre></td></tr></table></figure><h1 id="开启8787端口"><a href="#开启8787端口" class="headerlink" title="开启8787端口"></a>开启8787端口</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo firewalld</span><br><span class="line">sudo firewall-cmd --permanent --add-port=8787/tcp</span><br><span class="line">sudo firewall-cmd --permanent --add-port=8787/udp</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h1 id="远程登录Rstudio"><a href="#远程登录Rstudio" class="headerlink" title="远程登录Rstudio"></a>远程登录Rstudio</h1><p>在浏览器地址栏输入<code>http://ip:8787/</code>打开网页，输入自己的用户名和密码登录即可。</p><h1 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h1><h2 id="Rstudio服务启动失败"><a href="#Rstudio服务启动失败" class="headerlink" title="Rstudio服务启动失败"></a>Rstudio服务启动失败</h2><h3 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h3><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="sudo rstudio-server status"></p><h3 id="排雷"><a href="#排雷" class="headerlink" title="排雷"></a>排雷</h3><ul><li><p>检查安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rstudio-server verify-installation</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="sudo rstudio-server verify-installation"></p><p>提示“&#x2F;usr&#x2F;lib&#x2F;rstudio-server&#x2F;bin&#x2F;rsession: error while loading shared libraries: libR.so: cannot open shared object file: No such file or directory”，表明缺少libR.so库。</p></li><li><p>安装R</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y R.x86_64</span><br></pre></td></tr></table></figure></li><li><p>再次检查安装情况</p><p>提示找不到R。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="sudo rstudio-server verify-installation"></p><p>可以看到这里进入了conda的base环境，它影响了程序的判断，退出conda环境后再试一下就不再报错了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><p><strong>注</strong>：conda环境一定要退彻底。</p></li><li><p>再次启动Rstudio服务，并查看状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rstudio-server start</span><br><span class="line">sudo rstudio-server status</span><br></pre></td></tr></table></figure><p>  <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/ea71_4.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="rstudio-server正常运行"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> R语言 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令模式下配置Linux网络</title>
      <link href="/post/893d.html"/>
      <url>/post/893d.html</url>
      
        <content type="html"><![CDATA[<p>配置网卡接口eth0:</p><p>进入配置文件所在目录，并在超级用户权限下编辑网络配置对应的文件（不同的机器文件名可能不一样）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/sysconfig/network-scripts</span><br><span class="line"></span><br><span class="line">vim ifcfg-enp4s0f0</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY<span class="built_in">_</span>METHOD=none</span><br><span class="line">BROWSER<span class="built_in">_</span>ONLY=no</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4<span class="built_in">_</span>FAILURE<span class="built_in">_</span>FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6<span class="built_in">_</span>AUTOCONF=yes</span><br><span class="line">IPV6<span class="built_in">_</span>DEFROUTE=yes</span><br><span class="line">IPV6<span class="built_in">_</span>FAILURE<span class="built_in">_</span>FATAL=no</span><br><span class="line">IPV6<span class="built_in">_</span>ADDR<span class="built_in">_</span>GEN<span class="built_in">_</span>MODE=stable-privacy</span><br><span class="line">NAME=enp4s0f0</span><br><span class="line">UUID=10a90825-f850-4717-a2c3-0d7e936bd33X</span><br><span class="line">DEVICE=enp4s0f0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=172.16.98.15X</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=172.16.98.X</span><br><span class="line">DNS1=10.8.8.X</span><br><span class="line">DNS2=10.8.4.X</span><br><span class="line">MACADDR=&quot;08:3A:88:54:C7:7X&quot;</span><br></pre></td></tr></table></figure><p><strong>MACADDR</strong>为MAC地址，<strong>IPADDR</strong>为IP地址，<strong>NETMASK</strong>为子网掩码，<strong>GATEWAY</strong>为网关地址，“X”为虚构的，保护隐私。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在FASTA文件中搜索完全匹配的短序列</title>
      <link href="/post/6a93.html"/>
      <url>/post/6a93.html</url>
      
        <content type="html"><![CDATA[<p>有时候需要在FASTA格式的文件中搜索短的保守序列，这个时候采用查找法比使用blast等序列比对更加人性化。<u>但是要注意避坑，即FASTA文档中的序列一般是被打断为许多行的，如果要查找的目标序列恰好在断行处，是没有办法直接揪出它的</u>，所以在查找前需要将序列中间的换行符去掉，将其变为一行。</p><p>该任务可以通过Perl脚本<strong>search_short_seqs.pl</strong>实现。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu Hualin</span></span><br><span class="line"><span class="comment"># Date: Oct 20, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> $/ = <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$ARGV[0]&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;Target_seqs.fa&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">my</span> $str = $ARGV[<span class="number">1</span>];</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> ($id, $seq) = <span class="keyword">split</span> (<span class="string">&quot;\n&quot;</span>, $_, <span class="number">2</span>);</span><br><span class="line">$seq=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="keyword">if</span> ($seq=~<span class="regexp">/$str/i</span>) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;&gt;$id\n$seq\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br></pre></td></tr></table></figure><p>运行方法：将<strong>search_short_seqs.pl</strong>与输入文件（FASTA文件）放在同一目录中，在终端里运行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl search_short_seqs.pl FASTA文件 要查找的序列</span><br></pre></td></tr></table></figure><p>带有搜索序列的序列将输出到文件<strong>Target_seqs.fa</strong>中。</p><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“6a93”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 序列处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-sakuraplus表格边框及滚动条调教</title>
      <link href="/post/e5ab.html"/>
      <url>/post/e5ab.html</url>
      
        <content type="html"><![CDATA[<p>sakuraplus主题默认是不显示表格边框的，而且对于比较宽的表格容易溢出，使得布局不美观。表格边框可以修改CSS来添加，较宽的表格可以通过添加滚动条来控制其不溢出，说起来简单，但是中间有很多坑，特此记录。</p><h1 id="添加表格边框"><a href="#添加表格边框" class="headerlink" title="添加表格边框"></a>添加表格边框</h1><p>该主题默认的style用的是<a href="https://github.com/cungudafa/cdn/blob/master/css/style.css">https://github.com/cungudafa/cdn/blob/master/css/style.css</a>，没有办法修改，因此，我们将采用本地样式表替换它。</p><p>打开themes&#x2F;hexo-theme-sakuraplus&#x2F;layout&#x2F;_partial&#x2F;head.ejs，找到并注释掉<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- theme.libs.css.style %&gt;&quot; type=&quot;text/css&quot; media=&quot;all&quot; id=&quot;saukra_css-css&quot;&gt;</code>，然后添加<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;%- config.root %&gt;css/style.css&quot; media=&quot;screen&quot; type=&quot;text/css&quot;&gt;</code>，打开themes&#x2F;hexo-theme-sakuraplus&#x2F;source&#x2F;css&#x2F;style.css，大概在1074行，修改table的CSS属性，内容如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line"><span class="attribute">overflow</span>: auto</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">text-align</span>: left;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">    <span class="attribute">font-size</span>: inherit;</span><br><span class="line">    <span class="attribute">overflow</span>: visible;</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1em</span></span><br><span class="line"><span class="comment">/*    border-width: 1px 1px 1px 1px;</span></span><br><span class="line"><span class="comment">    border-bottom: 1px solid #cbcbcb;</span></span><br><span class="line"><span class="comment">    border-left: 1px solid #cbcbcb;</span></span><br><span class="line"><span class="comment">    border-right: 1px solid #cbcbcb;</span></span><br><span class="line"><span class="comment">    border-top: 1px solid #cbcbcb;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>划重点</strong>：（1）注意分号的有无；（2）后面5行需要注释掉，不然所有的代码块都会被加上边框，这是其中的一个坑，当然，也可以将后五行的颜色改为black，酱紫在黑色代码框中，其边线不是很明显。</p><p><strong>存在的问题</strong>：即便像上面一样设置，边框其实还是加在了代码块中，我们可以做的就是将边线颜色设置的和代码块颜色一致或者相近。表格里面的样式会被添加到代码块上，比如将text-align: 设置为center，所有的代码将居中显示，暂时无解。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e5ab_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e5ab_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="被表格样式传染的代码块带上了边框"></p><h1 id="为宽表格添加滚动条"><a href="#为宽表格添加滚动条" class="headerlink" title="为宽表格添加滚动条"></a>为宽表格添加滚动条</h1><p>在markdown表格的开头和结尾各另起行，加入DIV和table标签，格式如下</p><p>&lt;div style&#x3D;”overflow-x:auto;”&gt;<br>    &lt;table&gt;</p><p>markdown格式的表格<br>&lt;&#x2F;table&gt;<br>&lt;&#x2F;div&gt;</p><p><strong>注</strong>：&lt;table&gt;与表格首行之间需要加一空行！</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.w3school.com.cn/css/css_table.asp">CSS表格</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SignalP+TMHMM预测微生物分泌蛋白</title>
      <link href="/post/c886.html"/>
      <url>/post/c886.html</url>
      
        <content type="html"><![CDATA[<p>Subtitle: Predict Secretory Protein in microbes with SignalP and TMHMM</p><p><ruby>分泌蛋白<rt>Secretory Protein</rt></ruby>是指在细胞内合成后，分泌到细胞外起作用的蛋白质。分泌蛋白的N 端有一般由15～30 个氨基酸组成的信号肽。信号肽是引导新合成的蛋白质向分泌通路转移的短（长度5-30个氨基酸）肽链。常指新合成多肽链中用于指导蛋白质的跨膜转移（定位）的N-末端的氨基酸序列（有时不一定在N端）。<u>使用<strong>SignalP</strong> 注释蛋白序列是否含有信号肽结构，使用<strong>TMHMM</strong>注释蛋白序列是否含有跨膜结构，最终筛选出含有信号肽结构并且不含跨膜结构的蛋白为分泌蛋白</u>。</p><h1 id="软件-Software"><a href="#软件-Software" class="headerlink" title="软件 Software"></a><ruby>软件 <rt>Software</rt></ruby></h1><ul><li><p><a href="https://services.healthtech.dtu.dk/service.php?SignalP-6.0">SignalP V6.0</a></p></li><li><p>SignalP 6.0 <ruby>预测来自古细菌、革兰氏阳性细菌、革兰氏阴性细菌和真核生物的蛋白质中存在的信号肽<rt>predicts signal peptides and the location of their cleavage sites in proteins from Archaea,  Gram-positive Bacteria,</rt></ruby><ruby>及其切割位点的位置。<rt> Gram-negative Bacteria and Eukarya.</rt></ruby><ruby>在细菌和古细菌中，SignalP 6.0 可以区分五种类型的信号肽：<rt>In Bacteria and Archaea, SignalP 6.0 can discriminate between five types of signal peptides:</rt></ruby></p><ul><li><p>Sec&#x2F;SPI：<ruby>由 Sec 转座转运，并由信号肽酶 I (Lep) 切割的“标准”分泌信号肽；<rt>“Standard” secretory signal peptides transported by Sec translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p></li><li><p>Sec&#x2F;SPII：<ruby>由 Sec 转座子运输，并由信号肽酶 II (Lsp) 切割的脂蛋白信号肽；<rt>lipoprotein signal peptides transported by the Sec translocon and cleaved by Signal Peptidase II (Lsp).</rt></ruby></p></li><li><p>Tat&#x2F;SPI：<ruby>由 Tat 转座子转运，并由信号肽酶 I (Lep) 切割的 Tat 信号肽；<rt>Tat signal peptides transported by the Tat translocon and cleaved by Signal Peptidase I (Lep).</rt></ruby></p></li><li><p>Tat&#x2F;SPII：<ruby>由 Tat 转位子转运，并由信号肽酶 II (Lsp) 切割的 Tat 脂蛋白信号肽；<rt>Tat lipoprotein signal peptides transported by Tat translocon &amp; cleaved by Signal Peptidase II (Lsp).</rt></ruby></p></li><li><p>Sec&#x2F;SPIII：<ruby>由 Sec 转位子运输，并由信号肽酶 III (PilD&#x2F;PibD) 切割的菌毛蛋白和菌毛蛋白样信号肽。<rt>Pilin &amp; pilin-like signal peptides transported by Sec translocon &amp; cleaved by Signal Peptidase III (PilD&#x2F;PibD).</rt></ruby></p></li><li><p><ruby>此外，SignalP 6.0 预测信号肽的区域。<rt>Additionally, SignalP 6.0 predicts the regions of signal peptides.</rt></ruby><ruby>根据类型，预测 n、h 和 c 区域以及其他显着特征的位置。<rt> Depending on the type, the positions of n-, h- and c-regions as well as of other distinctive features are predicted.</rt></ruby></p></li></ul></li><li><p><a href="https://services.healthtech.dtu.dk/service.php?TMHMM-2.0">TMHMM V2.0c</a></p><ul><li>用于预测蛋白质中的跨膜螺旋。</li></ul></li><li><p>Python</p></li></ul><p>SignalP和TMHMM对于学术用户免费，但是需要填写相关信息和邮箱，以接收下载链接（4h有效时间）。</p><h1 id="软件安装-Installation-of-Softwares"><a href="#软件安装-Installation-of-Softwares" class="headerlink" title="软件安装 Installation of Softwares"></a><ruby>软件安装 <rt>Installation of Softwares</rt></ruby></h1><h2 id="安装SignalP-6-0"><a href="#安装SignalP-6-0" class="headerlink" title="安装SignalP 6.0"></a>安装SignalP 6.0</h2><ul><li><p>下载</p><p>访问<a href="https://services.healthtech.dtu.dk/service.php?SignalP-6.0">SignalP V6.0</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“signalp-6.0.fast.tar.gz”。有两个模式可以选择——“slow_sequential”和“fast”。前者runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower；后者uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faste。本教程下载的是fast模式。</p></li><li><p><ruby>安装 <rt>Installation</rt></ruby></p><ul><li><p><ruby>安装依赖 <rt>Dependencies</rt></ruby></p><ul><li><p>Python</p></li><li><p>matplotlib&gt;3.3.2</p></li><li><p>numpy&gt;1.19.2</p></li><li><p>torch&gt;1.7.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torch</span><br></pre></td></tr></table></figure></li><li><p>tqdm&gt;4.46.1</p></li></ul></li><li><p>安装SignalP 6.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压缩安装文件</span></span><br><span class="line">tar zxvf signalp-6.0.fast.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入解压后的软件目录，在终端运行</span></span><br><span class="line">python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试安装</span></span><br><span class="line">signalp6 --<span class="built_in">help</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="安装TMHMM-V2-0c"><a href="#安装TMHMM-V2-0c" class="headerlink" title="安装TMHMM V2.0c"></a>安装TMHMM V2.0c</h2><ul><li><p>下载</p><p>  访问<a href="https://services.healthtech.dtu.dk/service.php?TMHMM-2.0">TMHMM V2.0c</a>网站，找到“Download”，填写相关信息，获取下载链接，下载得到“tmhmm-2.0c.Linux.tar.gz”。</p></li><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压缩</span></span><br><span class="line">tar zxvf tmhmm-2.0c.Linux.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入解压后的目录</span></span><br><span class="line"><span class="built_in">cd</span> tmhmm-2.0c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前路径，我的是“/home/liu/tools/tmhmm-2.0c/bin”</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将该路径加入到系统的环境变量中，参考我之前的文章来（编辑~/.bashrc）https://liaochenlanruo.github.io/post/f6c9.html#%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改bin目录下的tmhmm和tmhmmformat.pl的首行为“#!/usr/bin/perl”</span></span><br></pre></td></tr></table></figure></li><li><p><font color="#FF0000">运行错误</font></p><p>运行软件时总报<code>Segmentation fault (core dumped)</code>错误，暂时无解。各位可以使用其<a href="http://www.cbs.dtu.dk/services/TMHMM/">在线版</a>。</p></li></ul><h1 id="软件用法-Usage"><a href="#软件用法-Usage" class="headerlink" title="软件用法 Usage"></a><ruby>软件用法 <rt>Usage</rt></ruby></h1><h2 id="SignalP-6-0"><a href="#SignalP-6-0" class="headerlink" title="SignalP 6.0"></a>SignalP 6.0</h2><h3 id="预测-Prediction"><a href="#预测-Prediction" class="headerlink" title="预测 Prediction"></a><ruby>预测 <rt>Prediction</rt></ruby></h3><p>A command takes the following form </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">signalp6 --fastafile /path/to/input.fasta --organism other --output_dir path/to/be/saved --format txt --mode fast</span><br></pre></td></tr></table></figure><ul><li><p><code>fastafile</code> <ruby>输入文件为FASTA格式的蛋白序列文件<rt>Specifies the fasta file with the sequences to be predicted.</rt></ruby>。</p></li><li><p><code>organism</code> is either <code>other</code> or <code>Eukarya</code>. Specifying <code>Eukarya</code> triggers post-processing of the SP predictions to prevent spurious results (only predicts type Sec&#x2F;SPI).</p></li><li><p><code>format</code> can take the values <code>txt</code>, <code>png</code>, <code>eps</code>, <code>all</code>. It defines what output files are created for individual sequences. <code>txt</code> produces a tabular <code>.gff</code> file with the per-position predictions for each sequence. <code>png</code>, <code>eps</code>, <code>all</code> additionally produce probability plots in the requested format. For larger prediction jobs, plotting will slow down the processing speed significantly.</p></li><li><p><code>mode</code> is either <code>fast</code>, <code>slow</code> or <code>slow-sequential</code>. Default is <code>fast</code>, which uses a smaller model that approximates the performance of the full model, requiring a fraction of the resources and being significantly faster. <code>slow</code> runs the full model in parallel, which requires more than 14GB of RAM to be available. <code>slow-sequential</code> runs the full model sequentially, taking the same amount of RAM as <code>fast</code> but being 6 times slower. If the specified model is not installed, SignalP will abort with an error.</p></li></ul><h3 id="输出-Outputs"><a href="#输出-Outputs" class="headerlink" title="输出 Outputs"></a><ruby>输出<rt> Outputs</rt></ruby></h3><ul><li><p>output_dir&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="output.gff3"></p></li><li><p>output_dir&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p></li><li><p>output_dir&#x2F;region_output.gff3：包含所有的信号肽区域信息。</p><ul><li><p>n-region: The n-terminal region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as N</p></li><li><p>h-region: The center hydrophobic region of the signal peptide. Reported for Sec&#x2F;SPI, Sec&#x2F;SPII, Tat&#x2F;SPI and Tat&#x2F;SPII. Labeled as H</p></li><li><p>c-region: The c-terminal region of the signal peptide, reported for Sec&#x2F;SPI and Tat&#x2F;SPI.</p></li><li><p>Cysteine: The conserved cysteine in +1 of the cleavage site of Lipoproteins that is used for Lipidation. Labeled as c.</p></li><li><p>Twin-arginine motif: The twin-arginine motif at the end of the n-region that is characteristic for Tat signal peptides. Labeled as R.</p></li><li><p>Sec&#x2F;SPIII: These signal peptides have no known region structure.</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="region_output.gff3"></p></li></ul></li></ul><h3 id="批处理与结果优化"><a href="#批处理与结果优化" class="headerlink" title="批处理与结果优化"></a>批处理与结果优化</h3><p>脚本名：run_SignalP.pl</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu Hualin</span></span><br><span class="line"><span class="comment"># Date: Oct 14, 2021</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> IDNOSEQ, <span class="string">&quot;&gt;IDNOSEQ.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">my</span> @faa = <span class="keyword">glob</span>(<span class="string">&quot;*.faa&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@faa) &#123;</span><br><span class="line">$_ =~ <span class="regexp">/(.+).faa/</span>;</span><br><span class="line"><span class="keyword">my</span> $str = $1;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;.nodesc&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $sigseq = $1 . <span class="string">&quot;.sigseq&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $outdir = $1 . <span class="string">&quot;_signalp&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, $_ || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="regexp">/^(&gt;\S+)/</span>) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $1 . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line"><span class="keyword">my</span> %hash = idse<span class="string">q($out)</span>;</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;signalp6 --fastafile $out --organism other --output_dir $outdir --format txt --mode fast&quot;</span>);</span><br><span class="line"><span class="keyword">my</span> $gff = $outdir . <span class="string">&quot;/output.gff3&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (! -z $gff) &#123;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$gff&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$sigseq&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">exists</span> $hash&#123;$lines[<span class="number">0</span>]&#125;) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;&gt;$lines[0]\n$hash&#123;$lines[0]&#125;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">print</span> IDNOSEQ $str . <span class="string">&quot;\t&quot;</span> . <span class="string">&quot;$lines[0]\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;rm $out&quot;</span>);</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;mv $sigseq $outdir&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IDNOSEQ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">idseq</span> </span>&#123;</span><br><span class="line"><span class="keyword">my</span> ($fasta) = @_;</span><br><span class="line"><span class="keyword">my</span> %hash;</span><br><span class="line"><span class="keyword">local</span> $/ = <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, $fasta || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> ($header, $seq) = <span class="keyword">split</span> (<span class="regexp">/\n/</span>, $_, <span class="number">2</span>);</span><br><span class="line">$header =~ <span class="regexp">/(\S+)/</span>;</span><br><span class="line"><span class="keyword">my</span> $id = $1;</span><br><span class="line">$hash&#123;$id&#125; = $seq;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">return</span> (%hash);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将run_SignalP.pl与后缀名为“.faa”的FASTA格式文件放在同一目录下，在终端中运行如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl run_SignalP.pl</span><br></pre></td></tr></table></figure><h3 id="结果解读Output-interpretation"><a href="#结果解读Output-interpretation" class="headerlink" title="结果解读Output interpretation"></a><ruby>结果解读<rt>Output interpretation</rt></ruby></h3><p>*代表输入文件的名字。</p><ul><li><p>*_signalp&#x2F;output.gff3：仅包含含有信号肽的序列信息；</p></li><li><p>*_signalp&#x2F;prediction_results.txt：包含了输入文件中的所有序列（不重要）；</p></li><li><p>*_signalp&#x2F;region_output.gff3：包含所有的信号肽区域信息;</p></li><li><p><strong>*_signalp&#x2F;*.sigseq</strong>：存储所有信号肽的氨基酸序列文件，可用作TMHMM的输入文件。</p></li></ul><h2 id="TMHMM"><a href="#TMHMM" class="headerlink" title="TMHMM"></a>TMHMM</h2><h3 id="预测"><a href="#预测" class="headerlink" title="预测"></a>预测</h3><p>离线版总是报错，找不出原因，因此使用网页服务器进行，输入文件为上述生成的“*_signalp&#x2F;*.sigseq”，将其上传至网页版<a href="http://www.cbs.dtu.dk/services/TMHMM/">TMHMM</a>，提交任务，等待结果即可。</p><h3 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h3><p>TMHMM可以输出多种格式的结果文件，具体请参考其<a href="http://www.cbs.dtu.dk/services/TMHMM-2.0/TMHMM2.0.guide.html#output">官方说明</a>。</p><p> <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_2.5.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="在TMHMM网站提交任务"></p><ul><li><p><strong>Long output format</strong></p><ul><li><p>Length： <ruby>蛋白序列的长度。<rt>The length of the protein sequence.</rt></ruby></p></li><li><p>Number of predicted TMHs：<ruby>预测到的跨膜螺旋的数量。<rt>The number of predicted transmembrane helices.</rt></ruby></p></li><li><p>Exp number of AAs in TMHs：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices. </rt></ruby> <ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p></li><li><p>Exp number, first 60 AAs：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p></li><li><p>Total prob of N-in：<ruby>N端在膜的细胞质一侧的总概率。<rt> The total probability that the N-term is on the cytoplasmic side of the membrane.</rt></ruby></p></li><li><p>POSSIBLE N-term signal sequence：<ruby>当“Exp number, first 60 AAs”大于 10 时产生的警告。 <rt> A warning that is produced when “Exp number, first 60 AAs” is larger than 10.</rt></ruby></p></li></ul></li><li><p>蛋白F01_bin.1_00110共计436个氨基酸，有5个跨膜螺旋结构。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="含有跨膜结构的蛋白"></p></li><li><p>蛋白F01_bin.1_00142共计557个氨基酸，所有序列均在膜外，即该序列编码的是分泌蛋白。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_4.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="不含跨膜结构的蛋白"></p></li><li><p><strong>Short output format</strong></p><ul><li><p>“len&#x3D;”： <ruby>蛋白序列的长度。 <rt>The length of the protein sequence.</rt></ruby></p></li><li><p>“ExpAA&#x3D;”：<ruby>跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids intransmembrane helices.</rt></ruby><ruby>如果此数字大于 18，则很可能是跨膜蛋白（或具有信号肽）。<rt>If this number is larger than 18 it is very likely to be a transmembrane protein (OR have a signal peptide).</rt></ruby></p></li><li><p>“First60&#x3D;”：<ruby>在蛋白的前60个氨基酸中跨膜螺旋中氨基酸的预期数量。<rt>The expected number of amino acids in transmembrane helices in the first 60 amino acids of the protein.</rt></ruby><ruby>如果该数字超过几个，你应该被警告在 N 端预测的跨膜螺旋可能是一个信号肽。<rt>If it more than a few, you are warned that a predicted transmembrane helix in the N-term could be a signal peptide.</rt></ruby></p></li><li><p>“PredHel&#x3D;”：<ruby>预测到的跨膜螺旋的数量。 <rt>The number of predicted transmembrane helices by N-best.</rt></ruby></p></li><li><p>“Topology&#x3D;”：<ruby>N-best 预测的拓扑结构。<rt>The topology predicted by N-best.</rt></ruby>拓扑是由跨膜螺旋的位置给出的，如果螺旋在内部，则由“i”分隔，如果螺旋在外部，则由“o”分隔。’i7-29o44-66i87-109o’意味着它从膜内开始，在位置7到29有一个预测的TMH，30-43在膜外，然后是位置44-66的TMH。</p></li></ul><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/c886_5.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Short output format"></p></li></ul><h3 id="结果汇总"><a href="#结果汇总" class="headerlink" title="结果汇总"></a>结果汇总</h3><p>通过网页版预测我们仅得到了一个列表文件（Short output format），该文件需要自己复制网页内容粘贴到新文件中，我将其命名为<b>*_TMHMM_SHORT.txt</b>，并将其存放在<b>*_signalp</b>目录中，该目录是由<strong>run_SignalP.pl</strong>生成的。下面我将会统计各个基因组中信号肽蛋白的总数量、分泌蛋白数量和跨膜蛋白数量到文件<strong>Statistics.txt</strong>中，并分别提取每个基因组的分泌蛋白序列到<b>*_signalp&#x2F;*.secretory.faa</b>文件中，提取跨膜蛋白序列到<b>*_signalp&#x2F;*.membrane.faa</b>文件中。该过程将通过<strong>tmhmm_parser.pl</strong>完成。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu Hualin</span></span><br><span class="line"><span class="comment"># Date: Oct 15, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;Statistics.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;Strain name\tSignal peptide numbers\tSecretory protein numbers\tMembrane protein numbers\n&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> @sig = <span class="keyword">glob</span>(<span class="string">&quot;*_signalp&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $sig (@sig) &#123;</span><br><span class="line">$sig=~<span class="regexp">/(.+)_signalp/</span>;</span><br><span class="line"><span class="keyword">my</span> $str = $1;</span><br><span class="line"><span class="keyword">my</span> $tmhmm = $sig . <span class="string">&quot;/$str&quot;</span> . <span class="string">&quot;_TMHMM_SHORT.txt&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $fasta = $sig . <span class="string">&quot;/$str&quot;</span> . <span class="string">&quot;.sigseq&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $secretory = $str . <span class="string">&quot;.secretory.faa&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $membrane = $str . <span class="string">&quot;.membrane.faa&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> SEC, <span class="string">&quot;&gt;$secretory&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> MEM, <span class="string">&quot;&gt;$membrane&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">my</span> $out = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">my</span> $on = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">my</span> %hash = idse<span class="string">q($fasta)</span>;</span><br><span class="line"><span class="keyword">open</span> IN, $tmhmm || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="comment">#print $_ . &quot;\n&quot;;</span></span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">if</span> ($lines[<span class="number">5</span>] eq <span class="string">&quot;Topology=o&quot;</span>) &#123;</span><br><span class="line">$out++;</span><br><span class="line"><span class="keyword">print</span> SEC <span class="string">&quot;&gt;$lines[0]\n$hash&#123;$lines[0]&#125;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">$on++;</span><br><span class="line"><span class="keyword">print</span> MEM <span class="string">&quot;&gt;$lines[0]\n$hash&#123;$lines[0]&#125;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> SEC;</span><br><span class="line"><span class="keyword">close</span> MEM;</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;mv $secretory $membrane $sig&quot;</span>);</span><br><span class="line"><span class="keyword">my</span> $total = $out + $on;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;$str\t$total\t$out\t$on\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">idseq</span> </span>&#123;</span><br><span class="line"><span class="keyword">my</span> ($fasta) = @_;</span><br><span class="line"><span class="keyword">my</span> %hash;</span><br><span class="line"><span class="keyword">local</span> $/ = <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, $fasta || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> ($header, $seq) = <span class="keyword">split</span> (<span class="regexp">/\n/</span>, $_, <span class="number">2</span>);</span><br><span class="line">$header =~ <span class="regexp">/(\S+)/</span>;</span><br><span class="line"><span class="keyword">my</span> $id = $1;</span><br><span class="line">$hash&#123;$id&#125; = $seq;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">return</span> (%hash);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行方法</strong>：将<b>tmhmm_parser.pl</b>放在<b>*_signalp</b>的上一级目录下，<b>*_signalp</b>目录中必须包含<b>*_TMHMM_SHORT.txt</b>文件和<b>*.sigseq</b>文件。在终端运行如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl tmhmm_parser.pl</span><br></pre></td></tr></table></figure><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“c886”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><p><a href="https://services.healthtech.dtu.dk/service.php?SignalP-6.0">SignalP V6.0</a></p></li><li><p><a href="http://www.cbs.dtu.dk/services/TMHMM/">TMHMM</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Functional genomics </tag>
            
            <tag> SY179 </tag>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用EffectiveT3预测微生物中的III型分泌系统效应蛋白</title>
      <link href="/post/fb68.html"/>
      <url>/post/fb68.html</url>
      
        <content type="html"><![CDATA[<p>III 型分泌系统 (Type III secretion system，T3SS) 主要是革兰氏阴性菌的分泌蛋白分泌到细胞外的运输途径，T3SS效应蛋白 (Type III secretion system Effector protein) 与革兰氏阴性致病菌致病机理有关。</p><p>通常用软件<a href="https://effectors.csb.univie.ac.at/method/effectivet3">EffectiveT3</a> 预测T3SS，通过其内部特定的计算模型对每条氨基酸序列进行评分，分值越高，可信度越高，选出评分高于阈值的序列，认为这些序列为III 型分泌系统效应蛋白。</p><p>EffectiveT3 的更新版本加强了 Effective 中 N 端信号肽的识别。对于更新，开发者收集了新的训练数据集，将来自 T3SEdb 的 504 个经过验证的分泌蛋白与其原始的训练数据结合在一起。新模型同样基于朴素贝叶斯分类器（Naive Bayesian Classifier），只是用了更多数据进行训练。在执行遗漏交叉验证测试（leave-one-taxon-out test ）时，其精度为 0.87，与其之前的报告相当。</p><p>新模型现已嵌入到 Effective 中，也可供下载。在新模型中，朴素贝叶斯分类器对“secreted”类的默认最小分数为 0.9999。该默认值在网页上称为“selective”，而 0.95 称为“sensitive”。阈值也可以自由选择。</p><h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><ul><li><p>主程序</p><ul><li><a href="https://effectors.csb.univie.ac.at/method/effectivet3">EffectiveT3</a></li></ul></li><li><p>依赖</p><ul><li>openjdk &gt;&#x3D;6</li></ul></li><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用conda安装时依赖Pyton 2.7，3.5，3.6，需要首先创建相应版本的Python环境（自行创建）</span></span><br><span class="line">conda install effectivet3</span><br></pre></td></tr></table></figure></li><li><p>数据库（modules）配置</p><p><font color="#FF0000">记录一个深坑</font>：程序默认在module的路径前加了一个”.&#x2F;module”路径，因此，虽然程序安装的过程中自动下载了modules，然而我们并没有办法调用它们，只能重新下载。用户每次运行软件前需要在当前目录下创建了module目录，并下载modules，然后将其存到module目录中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p module</span><br><span class="line"></span><br><span class="line">curl -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar</span><br><span class="line"></span><br><span class="line">curl -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar</span><br><span class="line"></span><br><span class="line">curl -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar</span><br><span class="line"></span><br><span class="line">curl -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module</span><br></pre></td></tr></table></figure></li></ul><h1 id="输入数据"><a href="#输入数据" class="headerlink" title="输入数据"></a>输入数据</h1><p>包含蛋白序列的FASTA格式文件</p><h1 id="运行软件"><a href="#运行软件" class="headerlink" title="运行软件"></a>运行软件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">effectivet3 -f F02_bin.1.faa -m TTSS_TTSS_STD-2.0.2.jar -t selective -o F02_bin.1.out -q</span><br></pre></td></tr></table></figure><ul><li>-f: 输入文件</li><li>-m: 模型，可选”TTSS_ANIMAL-1.0.1.jar”，”TTSS_PLANT-1.0.1.jar”，”TTSS_STD-1.0.1.jar”和“TTSS_STD-2.0.2.jar”，建议用“TTSS_STD-2.0.2.jar”</li><li>-t: 模式，”sensitive” and “selective”二选一，建议使用”selective”</li><li>-o: 输出文件</li><li>-q: 启动命令行模式</li></ul><h1 id="输出文件解读"><a href="#输出文件解读" class="headerlink" title="输出文件解读"></a>输出文件解读</h1><ul><li><p>English: The table of results displays all query proteins sorted by prediction score. Effector classification (true&#x2F;false) according to the applied threshold is shown in the last column.</p></li><li><p>简体中文: 结果包含了输入文件中所有的查询序列IDs，根据得分进行排序。一共包含4列，第一列为序列ID，第二列为序列描述，第三列为预测得分，第四列描述该序列是否为效应因子。各列间以英文的分号（;）分隔。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_0.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="F01_bin.1.out"></p></li></ul><h1 id="批处理与结果整合"><a href="#批处理与结果整合" class="headerlink" title="批处理与结果整合"></a>批处理与结果整合</h1><p><strong>脚本名</strong>：run_effectiveT3.pl</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Oct 13, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download modules</span></span><br><span class="line"><span class="comment"># 记录一个深坑，程序默认在module的路径前加了一个&quot;./module&quot;路径，因此，虽然程序安装的过程中自动下载了modules，然而我们并没有办法调用它们，只能重新下载。</span></span><br><span class="line"><span class="comment"># 以下代码在当前目录下创建了module目录，并下载modules，然后将其存到module目录中。</span></span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;mkdir -p module&quot;</span>);</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;curl -o TTSS_STD-2.0.2.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_2.0.2_src_all.jar&quot;</span>);</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;curl -o TTSS_ANIMAL-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_ANIMAL/TTSS_ANIMAL_1.0.1_src_all.jar&quot;</span>);</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;curl -o TTSS_PLANT-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_PLANT/TTSS_PLANT_1.0.1_src_all.jar&quot;</span>);</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;curl -o TTSS_STD-1.0.1.jar https://depot.galaxyproject.org/software/TTSS_STD/TTSS_STD_1.0.1_src_all.jar&quot;</span>);</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;mv -f TTSS_STD-2.0.2.jar TTSS_ANIMAL-1.0.1.jar TTSS_PLANT-1.0.1.jar TTSS_STD-1.0.1.jar module&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict one by one</span></span><br><span class="line"><span class="keyword">my</span> @faa = <span class="keyword">glob</span>(<span class="string">&quot;*.faa&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@faa) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).faa/</span>;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;.T3&quot;</span>;</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;effectivet3 -f $_ -m TTSS_STD-2.0.2.jar -t selective -o $out -q&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># information aggregation</span></span><br><span class="line"><span class="keyword">my</span> (%hash, %strain);</span><br><span class="line"><span class="keyword">my</span> $line_num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">open</span> T3, <span class="string">&quot;&gt;T3SS.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> T3 <span class="string">&quot;Strain\tId\tDescription\tScore\tis secreted\tProtein sequences\n&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> @t3 = <span class="keyword">glob</span>(<span class="string">&quot;*.T3&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $t3 (@t3) &#123;</span><br><span class="line">$t3=~<span class="regexp">/(.+).T3/</span>;</span><br><span class="line"><span class="keyword">my</span> $str = $1;</span><br><span class="line"><span class="keyword">my</span> $faa = $1 . <span class="string">&quot;.faa&quot;</span>;</span><br><span class="line">$strain&#123;$str&#125;++;</span><br><span class="line"><span class="keyword">my</span> %temp;</span><br><span class="line"><span class="comment"># Save ID and Sequence to %temp</span></span><br><span class="line"><span class="keyword">open</span> FAA, <span class="string">&quot;$faa&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">local</span> $/ = <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">&lt;FAA&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;FAA&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> ($header, $seq) = <span class="keyword">split</span> (<span class="regexp">/\n/</span>, $_, <span class="number">2</span>);</span><br><span class="line">$header=~<span class="regexp">/(\S+)/</span>;</span><br><span class="line"><span class="keyword">my</span> $id = $1;</span><br><span class="line">$seq=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line">$temp&#123;$id&#125; = $seq;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> FAA;</span><br><span class="line"><span class="keyword">local</span> $/ = <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$t3&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="regexp">/^#/</span>) &#123;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\;/</span>;</span><br><span class="line"><span class="keyword">if</span> ($lines[<span class="number">3</span>] eq <span class="string">&quot;true&quot;</span>) &#123;</span><br><span class="line">$line_num++;</span><br><span class="line"><span class="keyword">print</span> T3 <span class="string">&quot;$str\t&quot;</span> . <span class="keyword">join</span>(<span class="string">&quot;\t&quot;</span>, @lines) . <span class="string">&quot;\t&quot;</span> . $temp&#123;$lines[<span class="number">0</span>]&#125; . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">$hash&#123;$str&#125;<span class="string">&#123;true&#125;</span>++;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">$hash&#123;$str&#125;<span class="string">&#123;false&#125;</span>++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> T3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($line_num &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">open</span> T3NUM, <span class="string">&quot;&gt;T3SS.num&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> T3NUM <span class="string">&quot;Strain\tTotal sequences\tT3S effective true\tT3S effective false\n&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span>  (<span class="keyword">sort</span> <span class="keyword">keys</span> %strain) &#123;</span><br><span class="line"><span class="keyword">if</span> ($hash&#123;$_&#125;<span class="string">&#123;true&#125;</span> &amp;&amp; $hash&#123;$_&#125;<span class="string">&#123;false&#125;</span>) &#123;</span><br><span class="line"><span class="keyword">my</span> $total = $hash&#123;$_&#125;<span class="string">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class="string">&#123;false&#125;</span>;</span><br><span class="line"><span class="keyword">print</span> T3NUM $_ . <span class="string">&quot;\t&quot;</span> . $total . <span class="string">&quot;\t&quot;</span> . $hash&#123;$_&#125;<span class="string">&#123;true&#125;</span> . <span class="string">&quot;\t&quot;</span> . $hash&#123;$_&#125;<span class="string">&#123;false&#125;</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">elsif</span> ($hash&#123;$_&#125;<span class="string">&#123;true&#125;</span>) &#123;</span><br><span class="line">$hash&#123;$_&#125;<span class="string">&#123;false&#125;</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">my</span> $total = $hash&#123;$_&#125;<span class="string">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class="string">&#123;false&#125;</span>;</span><br><span class="line"><span class="keyword">print</span> T3NUM $_ . <span class="string">&quot;\t&quot;</span> . $total . <span class="string">&quot;\t&quot;</span> . $hash&#123;$_&#125;<span class="string">&#123;true&#125;</span> . <span class="string">&quot;\t&quot;</span> . $hash&#123;$_&#125;<span class="string">&#123;false&#125;</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">$hash&#123;$_&#125;<span class="string">&#123;true&#125;</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">my</span> $total = $hash&#123;$_&#125;<span class="string">&#123;true&#125;</span> + $hash&#123;$_&#125;<span class="string">&#123;false&#125;</span>;</span><br><span class="line"><span class="keyword">print</span> T3NUM $_ . <span class="string">&quot;\t&quot;</span> . $total . <span class="string">&quot;\t&quot;</span> . $hash&#123;$_&#125;<span class="string">&#123;true&#125;</span> . <span class="string">&quot;\t&quot;</span> . $hash&#123;$_&#125;<span class="string">&#123;false&#125;</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> T3NUM;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;mkdir -p T3SS_result&quot;</span>);</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;mv *.T3 T3SS.num T3SS.txt T3SS_result&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>用法</strong>：将脚本与含有氨基酸序列的FASTA格式文件（后缀名为”.faa”，如果为其他，需要修改脚本第19、21和31行）放在同一目录下，在终端里运行如下命令（不需要事先配置数据库）：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl run_effectiveT3.pl</span><br></pre></td></tr></table></figure><p><strong>报错</strong>：Use of uninitialized value $seq in substitution (s&#x2F;&#x2F;&#x2F;) at run_effectiveT3.pl line 47, &lt;FAA&gt; chunk .</p><p><strong>原因</strong>：氨基酸序列ID&#x2F;Header那一行的注释信息中含有”&gt;“。该报错不影响结果的准确性，可以忽略。</p><h1 id="结果解读"><a href="#结果解读" class="headerlink" title="结果解读"></a>结果解读</h1><ul><li><p>T3SS_result&#x2F;strain_name.T3：（strain_name代表输入文件的名称）effectiveT3输出的原始结果，共4列，如前文所述。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="CXY008.T3"></p></li><li><p>T3SS_result&#x2F;T3SS.txt：包含了所有菌株的预测得到的效应因子，共6列，第一列为菌株名，中间的4列同上一个文件，最后一列为对应的氨基酸序列。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="T3SS.txt"></p></li><li><p>T3SS_result&#x2F;T3SS.sum：记录所有菌株中序列总数、效应因子序列数和非效应因子序列数。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/fb68_3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="T3SS.sum"></p></li></ul><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“fb68”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://effectors.csb.univie.ac.at/method/effectivet3">EffectiveDB</a></li><li><a href="https://github.com/bioconda/bioconda-recipes/tree/master/recipes/effectivet3">Bioconda</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Functional genomics </tag>
            
            <tag> SY179 </tag>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
            <tag> T3SS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言绘制气泡图Bubb_Plot</title>
      <link href="/post/b68c.html"/>
      <url>/post/b68c.html</url>
      
        <content type="html"><![CDATA[<p>气泡图是经常用到的一种图，可以对比不同样本中某个特征的丰富度差异。以下代码“bubbleChart_No0.R”用于气泡图的绘制，零值将不会在图中输出。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="输入文件示例"></p><figure class="highlight r"><figcaption><span>bubbleChart_No0.R</span><a href="https://github.com/liaochenlanruo/myScripts/tree/main/b68c%20BubblePlot">代码在此</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env Rscript</span></span><br><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;E:/Researches/lujia16S/Analysis_20200907/Downstream_analysis/Function&quot;</span><span class="punctuation">)</span><span class="comment">#设置工作目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pdf(file=&quot;FunctionsBubbleChart.pdf&quot;, width=14, height=11)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件 sep 根据文件格式确定</span></span><br><span class="line">data <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;functional_table3.tsv&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>reshape<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data_melt <span class="operator">&lt;-</span> melt<span class="punctuation">(</span>data<span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>data_melt<span class="punctuation">)</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Functions&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Samples&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Abundances&quot;</span><span class="punctuation">)</span></span><br><span class="line">data_melt<span class="operator">$</span>Sites<span class="operator">=</span>substring<span class="punctuation">(</span>data_melt<span class="operator">$</span>Samples<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="comment"># 根据第二列的样本名称提取站位信息，用于后续着色</span></span><br><span class="line">data_melt <span class="operator">&lt;-</span>as.data.frame<span class="punctuation">(</span>data_melt<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 做主图</span></span><br><span class="line">bubble <span class="operator">&lt;-</span> ggplot<span class="punctuation">(</span>data_melt<span class="punctuation">[</span>which<span class="punctuation">(</span>data_melt<span class="operator">$</span>Abundances<span class="operator">&gt;</span><span class="number">0</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span><span class="punctuation">,</span> aes<span class="punctuation">(</span>x <span class="operator">=</span> Samples<span class="punctuation">,</span> y <span class="operator">=</span> Functions<span class="punctuation">,</span> size <span class="operator">=</span> Abundances<span class="punctuation">,</span> color <span class="operator">=</span> Sites<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> geom_point<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字体修饰</span></span><br><span class="line"><span class="comment">##windowsFonts(myFont = windowsFont(&quot;Times New Roman&quot;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改细节 — 图注，点大小，点shape</span></span><br><span class="line">bubble_style <span class="operator">&lt;-</span> bubble <span class="operator">+</span> theme_classic<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">+</span></span><br><span class="line">  labs<span class="punctuation">(</span></span><br><span class="line">    x <span class="operator">=</span> <span class="string">&quot;Sampling Sites&quot;</span><span class="punctuation">,</span></span><br><span class="line">    y <span class="operator">=</span> <span class="string">&quot;Functions&quot;</span><span class="punctuation">,</span></span><br><span class="line">    color<span class="operator">=</span><span class="string">&quot;Sites&quot;</span><span class="punctuation">,</span> <span class="comment"># 颜色图注名</span></span><br><span class="line">    size<span class="operator">=</span><span class="string">&quot;Abundances&quot;</span><span class="punctuation">)</span><span class="operator">+</span>    <span class="comment"># 大小图注名</span></span><br><span class="line">    scale_size<span class="punctuation">(</span><span class="built_in">range</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0.1</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span> breaks <span class="operator">=</span> seq<span class="punctuation">(</span><span class="number">0.1</span><span class="punctuation">,</span> <span class="number">0.6</span><span class="punctuation">,</span> <span class="number">0.2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span>  <span class="comment">#等比修改圆圈大小</span></span><br><span class="line">    theme<span class="punctuation">(</span>plot.title<span class="operator">=</span>element_text<span class="punctuation">(</span>family<span class="operator">=</span><span class="string">&quot;Times New Roman&quot;</span><span class="punctuation">,</span>size<span class="operator">=</span><span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">                                color<span class="operator">=</span><span class="string">&quot;red&quot;</span><span class="punctuation">,</span>face<span class="operator">=</span><span class="string">&quot;italic&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                hjust<span class="operator">=</span><span class="number">0.5</span><span class="punctuation">,</span>lineheight<span class="operator">=</span><span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                                plot.subtitle <span class="operator">=</span> element_text<span class="punctuation">(</span>hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">    theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#dev.off()</span></span><br></pre></td></tr></table></figure><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>在Rstudio中运行以上代码，注意更改自己的工作目录和输入文件。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/b68c_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="气泡图"></p><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“b68c”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
            <tag> 绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从GenBank文件中提取Features</title>
      <link href="/post/3a23.html"/>
      <url>/post/3a23.html</url>
      
        <content type="html"><![CDATA[<p>二话不说，上代码，需要安装BioPerl</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="keyword">use</span> Bio::SeqIO;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Oct 9, 2021</span></span><br><span class="line"><span class="comment"># Usage: perl get_gbk_features.pl &lt;in&gt; &lt;out&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> $in = <span class="keyword">shift</span>;</span><br><span class="line"><span class="keyword">my</span> $out = <span class="keyword">shift</span>;</span><br><span class="line"><span class="keyword">my</span> $seqin = Bio::SeqIO-&gt;new( <span class="string">-format =&gt;</span> <span class="string">&#x27;genbank&#x27;</span>, <span class="string">-file =&gt;</span> <span class="string">&quot;$in&quot;</span>);</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span>( (<span class="keyword">my</span> $seq = $seqin-&gt;next_seq) ) &#123;</span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $sf ( $seq-&gt;get_SeqFeatures ) &#123;</span><br><span class="line"><span class="keyword">if</span>( $sf-&gt;primary_tag eq <span class="string">&#x27;CDS&#x27;</span> ) &#123;</span><br><span class="line"><span class="keyword">my</span> @tags = $sf -&gt;get_all_tags();</span><br><span class="line"><span class="comment">#print join(&quot;\t&quot;, @tags) . &quot;\n&quot;;</span></span><br><span class="line"><span class="keyword">print</span> OUT $sf-&gt;get_tag_values(<span class="string">&#x27;locus_tag&#x27;</span>), <span class="string">&quot;\t&quot;</span>, $sf-&gt;start, <span class="string">&quot;\t&quot;</span>, $sf-&gt;end, <span class="string">&quot;\t&quot;</span>, $sf-&gt;strand, <span class="string">&quot;\t&quot;</span>, $sf-&gt;get_tag_values(<span class="string">&#x27;product&#x27;</span>), <span class="string">&quot;\t&quot;</span>, $sf-&gt;get_tag_values(<span class="string">&#x27;translation&#x27;</span>),<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl get_gbk_features.pl examples/INPUT/LHL010.gbk LHL010.list</span><br></pre></td></tr></table></figure><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“3a23”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 序列处理 </tag>
            
            <tag> perl </tag>
            
            <tag> 编程 </tag>
            
            <tag> BioPerl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>按照Contig切割GenBank文件</title>
      <link href="/post/d9f9.html"/>
      <url>/post/d9f9.html</url>
      
        <content type="html"><![CDATA[<p>当一个基因组含有多个Contigs&#x2F;Scaffolds的时候，在GenBank文件中也会产生多个LOCUS。某些软件会将GenBank文件作为输入，但仅支持一个GenBank文件中只包含一条Contig&#x2F;Scaffold，如基因岛预测软件<a href="https://github.com/brinkmanlab/islandpath">islandpath</a>。这个时候就需要我们将GenBank文件进行切割。手动切是体力活，也不像钓鱼那样有成就感，因此提供一个脚本”split_GenBank.pl”来完成。</p><p><font color="#FF0000"><strong>敬告</strong>：使用该脚本请引用本文网址，请尊重本人的劳动成果，谢谢！</font></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Oct 9, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @gbk = <span class="keyword">glob</span>(<span class="string">&quot;*.gbk&quot;</span>);<span class="comment"># 批处理所有后缀为.gbk的文件</span></span><br><span class="line"><span class="keyword">foreach</span>  (@gbk) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).gbk/</span>;</span><br><span class="line"><span class="keyword">my</span> $str = $1;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">local</span> $/ = <span class="string">&quot;LOCUS&quot;</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">/\s+(\S+)/</span>;</span><br><span class="line"><span class="keyword">my</span> $scaf = $1;</span><br><span class="line"><span class="keyword">my</span> $out = $str . <span class="string">&quot;_&quot;</span> . $scaf . <span class="string">&quot;.gb&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $assession = $str . <span class="string">&quot;_&quot;</span> . $scaf;</span><br><span class="line">$_=~<span class="regexp">s/ACCESSION.+/ACCESSION   $assession/g</span>;<span class="comment"># 添加ACCESSION number</span></span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;LOCUS$_&quot;</span>;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将脚本与后缀名为“.gbk”的GenBank文件放在同一目录下，运行如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl split_GenBank.pl</span><br></pre></td></tr></table></figure><p>得到的后缀名为“.gb”的文件即为切割后的GenBank文件。</p><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“d9f9”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 序列处理 </tag>
            
            <tag> perl </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原核生物基因岛预测</title>
      <link href="/post/5324.html"/>
      <url>/post/5324.html</url>
      
        <content type="html"><![CDATA[<h1 id="软件-Software-needed"><a href="#软件-Software-needed" class="headerlink" title="软件 (Software needed)"></a>软件 (Software needed)</h1><ul><li><a href="https://github.com/brinkmanlab/islandpath">IslandPath-DIMOB</a></li><li><a href="https://bioperl.org/">BioPerl</a></li></ul><h1 id="安装-Installation"><a href="#安装-Installation" class="headerlink" title="安装 (Installation)"></a>安装 (Installation)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install islandpath</span><br><span class="line">conda install perl-bioperl</span><br></pre></td></tr></table></figure><h1 id="输入文件-Input-Files"><a href="#输入文件-Input-Files" class="headerlink" title="输入文件 (Input Files)"></a>输入文件 (Input Files)</h1><ul><li>GenBank (.gbk) or an embl (.embl) file</li><li><font color='#ff0000'><strong>注意:</strong> 输入文件中只允许包含一条序列，否则会报错！(Please make sure you are running islandpath on a genbank file with only one contig)。</font>如果一个文件中含有多个序列，那么就要将其分割成为多个文件，然后逐个作为输入文件进行预测。切割方法见我的另一篇文章<a href="https://liaochenlanruo.github.io/post/d9f9.html">按照Contig切割GenBank文件</a>。</li></ul><h1 id="运行软件-Run"><a href="#运行软件-Run" class="headerlink" title="运行软件 (Run)"></a>运行软件 (Run)</h1><h2 id="常规运行"><a href="#常规运行" class="headerlink" title="常规运行"></a>常规运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gbk file</span></span><br><span class="line">islandpath example/NC_003210.gbk NC_003210_GIs.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># embl file</span></span><br><span class="line">islandpath example/NC_000913.embl NC_000913_GIs.txt</span><br></pre></td></tr></table></figure><p>输出结果如下图所示：</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="示例输出结果展示"></p><h2 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h2><p>在得到大量基因组的时候，手动提交并不像打游戏那样让人渴望敲击键盘和鼠标，为了避免烦躁，我们来写脚本“run_islandpath.pl”，然后让机器做剩下的事情。该脚本可以实现GenBank文件的切割，基因岛预测，以及结果的整合，实现了IslandPath-DIMOB所无法完成的分析。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="keyword">use</span> Bio::SeqIO;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Oct 8, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Split GenBank files</span></span><br><span class="line"><span class="keyword">my</span> @gbk = <span class="keyword">glob</span>(<span class="string">&quot;*.gbk&quot;</span>);<span class="comment"># 批处理所有后缀为.gbk的文件</span></span><br><span class="line"><span class="keyword">foreach</span>  (@gbk) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).gbk/</span>;</span><br><span class="line"><span class="keyword">my</span> $str = $1;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">local</span> $/ = <span class="string">&quot;LOCUS&quot;</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">/\s+(\S+)/</span>;</span><br><span class="line"><span class="keyword">my</span> $scaf = $1;</span><br><span class="line"><span class="keyword">my</span> $out = $str . <span class="string">&quot;_&quot;</span> . $scaf . <span class="string">&quot;.gb&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $assession = $str . <span class="string">&quot;_&quot;</span> . $scaf;</span><br><span class="line">$_=~<span class="regexp">s/ACCESSION.+/ACCESSION   $assession/g</span>;<span class="comment"># 添加ACCESSION number</span></span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;LOCUS$_&quot;</span>;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># predict Gene Islands</span></span><br><span class="line">$/ = <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> @gb = <span class="keyword">glob</span>(<span class="string">&quot;*.gb&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@gb) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).gb/</span>;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;.island&quot;</span>;</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;islandpath $_ $out&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get features from GenBank files</span></span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $gb (@gb) &#123;</span><br><span class="line">$gb=~<span class="regexp">/(.+).gb/</span>;</span><br><span class="line"><span class="keyword">my</span> $str = $1;</span><br><span class="line"><span class="keyword">my</span> $out = $str . <span class="string">&quot;.list&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $seqin = Bio::SeqIO-&gt;new( <span class="string">-format =&gt;</span> <span class="string">&#x27;genbank&#x27;</span>, <span class="string">-file =&gt;</span> <span class="string">&quot;$gb&quot;</span>);</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span>( (<span class="keyword">my</span> $seq = $seqin-&gt;next_seq) ) &#123;</span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $sf ( $seq-&gt;get_SeqFeatures ) &#123;</span><br><span class="line"><span class="keyword">if</span>( $sf-&gt;primary_tag eq <span class="string">&#x27;CDS&#x27;</span> ) &#123;</span><br><span class="line"><span class="keyword">my</span> @tags = $sf -&gt;get_all_tags();</span><br><span class="line"><span class="comment">#print join(&quot;\t&quot;, @tags) . &quot;\n&quot;;</span></span><br><span class="line"><span class="keyword">print</span> OUT $sf-&gt;get_tag_values(<span class="string">&#x27;locus_tag&#x27;</span>), <span class="string">&quot;\t&quot;</span>, $sf-&gt;start, <span class="string">&quot;\t&quot;</span>, $sf-&gt;end, <span class="string">&quot;\t&quot;</span>, $sf-&gt;strand, <span class="string">&quot;\t&quot;</span>, $sf-&gt;get_tag_values(<span class="string">&#x27;product&#x27;</span>), <span class="string">&quot;\t&quot;</span>, $sf-&gt;get_tag_values(<span class="string">&#x27;translation&#x27;</span>),<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Parser the results</span></span><br><span class="line"><span class="keyword">my</span> (%hash, %gi, %list, %gif);</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;All_island.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;Sequence IDsPredictorCategoryGI StartGI End.Strand.Island IDsGene IDsGene StartGene EndStrandProductsProtein Sequences\n&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> LIST, <span class="string">&quot;&gt;All_island.list&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> LIST <span class="string">&quot;Island IDs\tGI Start\tGI End\tGI Length\tGene Number\tGene IDs\n&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> @GI = <span class="keyword">glob</span>(<span class="string">&quot;*.island&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@GI) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).island/</span>;</span><br><span class="line"><span class="keyword">my</span> $list = $1 . <span class="string">&quot;.list&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">my</span> $start = $lines[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">my</span> $end = $lines[<span class="number">4</span>];</span><br><span class="line"><span class="keyword">my</span> $id = $lines[-<span class="number">1</span>];</span><br><span class="line"><span class="keyword">my</span> $gilen = $end - $start + <span class="number">1</span>;</span><br><span class="line">$hash&#123;$id&#125; = $start . <span class="string">&quot;-&quot;</span> . $end . <span class="string">&quot;-&quot;</span> . $id;</span><br><span class="line">$gi&#123;$id&#125; = $_;</span><br><span class="line">$gif&#123;$id&#125; = $start . <span class="string">&quot;\t&quot;</span> . $end . <span class="string">&quot;\t&quot;</span> . $gilen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">open</span> GB, <span class="string">&quot;$list&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;GB&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> @line = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $ids (<span class="keyword">sort</span> <span class="keyword">keys</span> %hash) &#123;</span><br><span class="line"><span class="keyword">my</span> ($start2, $end2, $gi) = <span class="keyword">split</span> <span class="regexp">/\-/</span>, $hash&#123;$ids&#125;;</span><br><span class="line"><span class="keyword">if</span> (($line[<span class="number">1</span>] &gt;= $start2) &amp;&amp; ($line[<span class="number">2</span>] &lt;= $end2)) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $gi&#123;$gi&#125; . <span class="string">&quot;\t&quot;</span> . $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">push</span> @&#123;$list&#123;$gi&#125;&#125;, $line[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> GB;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>  (<span class="keyword">sort</span> <span class="keyword">keys</span> %list) &#123;</span><br><span class="line"><span class="keyword">print</span> LIST $_ . <span class="string">&quot;\t&quot;</span> . $gif&#123;$_&#125; . <span class="string">&quot;\t&quot;</span> . @&#123;$list&#123;$_&#125;&#125; . <span class="string">&quot;\t&quot;</span> . <span class="keyword">join</span> (<span class="string">&quot; &quot;</span>, @&#123;$list&#123;$_&#125;&#125;) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> LIST;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将“run_islandpath.pl”与GenBank文件放在同一目录下，在终端里运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl run_islandpath.pl</span><br></pre></td></tr></table></figure><p>结果汇总于<strong>All_island.txt</strong>和<strong>All_island.list</strong>中，内容如下面二图所示。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="All_island.txt"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/5324-3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="All_island.list"></p><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“5324”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Functional genomics </tag>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
            <tag> 基因岛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预测前噬菌体prophages</title>
      <link href="/post/53f4.html"/>
      <url>/post/53f4.html</url>
      
        <content type="html"><![CDATA[<p>本文介绍如何从细菌&#x2F;古菌中预测前噬菌体。</p><h1 id="软件选择"><a href="#软件选择" class="headerlink" title="软件选择"></a>软件选择</h1><ul><li><a href="https://github.com/linsalrob/PhiSpy">PhiSpy</a></li><li><a href="https://bioperl.org/">BioPerl</a></li></ul><h1 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h1><h2 id="安装主程序"><a href="#安装主程序" class="headerlink" title="安装主程序"></a>安装主程序</h2><ul><li><p>推荐使用conda</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install phispy</span><br><span class="line">conda install perl-bioperl</span><br></pre></td></tr></table></figure></li></ul><h2 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a>下载模型</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://ftp.ncbi.nlm.nih.gov/pub/kristensen/pVOGs/downloads/All/AllvogHMMprofiles.tar.gz</span><br><span class="line"></span><br><span class="line">tar -zxvf AllvogHMMprofiles.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> AllvogHMMprofiles/* &gt; pVOGs.hmm</span><br></pre></td></tr></table></figure><h1 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h1><ul><li>需要GenBank格式的文件，可通过<a href="http://rast.nmpdr.org/rast.cgi">RAST server</a>或<a href="https://github.com/tseemann/prokka">PROKKA</a>获得。</li></ul><h1 id="运行软件"><a href="#运行软件" class="headerlink" title="运行软件"></a>运行软件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PhiSpy.py genbank_file -o output_directory --phage_genes 1 --color --threads 6 --phmms pVOGs.hmm --min_contig_size 5000 --output_choice 1</span><br></pre></td></tr></table></figure><ul><li>genbank file: 输入文件</li><li>output directory: 输出目录</li><li>--phage_genes: 区域内含有的被鉴定为噬菌体基因的最小数量。默认采用严格模式，即在每个前噬菌体区域必须鉴定得到两个或更多个phage基因。调高该参数的值将会减少预测到的前噬菌体的数量，反之，减小参数值，将会得到更多的移动元件。如果该参数设置为0，将会预测plasmids, integrons, and pathogenicity islands. Somewhat unexpectedly, it will also identify the ribosomal RNA operons as likely being mobile since they are unlike the host’s backbone!</li><li>--color: 根据CDs的功能对其着色，使用<a href="https://www.sanger.ac.uk/science/tools/artemis">Artemis</a>查看</li><li>--threads: 线程数</li><li>--min_contig_size: 低于阈值的序列将被忽略，不对其进行预测</li><li>--output_choice: 控制输出的文件类型，详见<a href="https://github.com/linsalrob/PhiSpy">官网</a></li></ul><h1 id="报错处理"><a href="#报错处理" class="headerlink" title="报错处理"></a>报错处理</h1><ul><li><p>由于序列ID引发的错误</p><ul><li>错误信息如下：</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/bin/PhiSpy.py&quot;, line 10, in &lt;module&gt;</span><br><span class="line">  sys.exit(run())</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/main.py&quot;, line 122, in run</span><br><span class="line">  main(sys.argv)</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/main.py&quot;, line 44, in main</span><br><span class="line">  args<span class="built_in">_</span>parser.record = PhiSpyModules.SeqioFilter(filter(lambda x: len(x.seq) &gt; args<span class="built_in">_</span>parser.min<span class="built_in">_</span>contig<span class="built_in">_</span>size, SeqIO.parse(handle, &quot;genbank&quot;)))</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/PhiSpyModules/seqio<span class="built_in">_</span>filter.py&quot;, line 33, in <span class="built_in">_</span><span class="built_in">_</span>init<span class="built_in">_</span><span class="built_in">_</span></span><br><span class="line">  for n, item in enumerate(content):</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/SeqIO/Interfaces.py&quot;, line 74, in <span class="built_in">_</span><span class="built_in">_</span>next<span class="built_in">_</span><span class="built_in">_</span></span><br><span class="line">  return next(self.records)</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 516, in parse<span class="built_in">_</span>records</span><br><span class="line">  record = self.parse(handle, do<span class="built_in">_</span>features)</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 499, in parse</span><br><span class="line">  if self.feed(handle, consumer, do<span class="built_in">_</span>features):</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 465, in feed</span><br><span class="line">  self.<span class="built_in">_</span>feed<span class="built_in">_</span>first<span class="built_in">_</span>line(consumer, self.line)</span><br><span class="line">File &quot;/home/liu/miniconda3/envs/component/lib/python3.7/site-packages/Bio/GenBank/Scanner.py&quot;, line 1571, in <span class="built_in">_</span>feed<span class="built_in">_</span>first<span class="built_in">_</span>line</span><br><span class="line">  raise ValueError(&quot;Did not recognise the LOCUS line layout:<span class="keyword">\n</span>&quot; + line)</span><br><span class="line">ValueError: Did not recognise the LOCUS line layout:</span><br><span class="line">LOCUS       NODE<span class="built_in">_</span>52<span class="built_in">_</span>length<span class="built_in">_</span>15591<span class="built_in">_</span>cov<span class="built_in">_</span>14.37480715591 bp</span><br></pre></td></tr></table></figure><ul><li>解决方案<ul><li>将sequence ID缩短</li></ul></li></ul></li></ul><h1 id="批处理并整合结果"><a href="#批处理并整合结果" class="headerlink" title="批处理并整合结果"></a>批处理并整合结果</h1><p>撰写脚本“run_PhiSpy.pl”。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="keyword">use</span> Bio::SeqIO;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Oct 12, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @gbk = <span class="keyword">glob</span>(<span class="string">&quot;*.gbk&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@gbk) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).gbk/</span>;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;_prophage&quot;</span>;</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;PhiSpy.py $_ -o $out --phage_genes 1 --min_contig_size 5000 --output_choice 1 --color --phmms pVOGs.hmm --threads 8&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;All.prophages.txt&quot;</span> || <span class="keyword">die</span>;<span class="comment"># print prophages informations</span></span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;Strain\tPhage ID\tContig ID\tStart location of the prophage\tStop location of the prophage\tStart of attL\tEnd of attL\tStart of attR\tEnd of attR\tsequence of attL\tSequence of attR\tWhy this att site was chosen for this prophage\n&quot;</span>;</span><br><span class="line"><span class="comment"># attachment (att) sites</span></span><br><span class="line"><span class="keyword">open</span> SEQ, <span class="string">&quot;&gt;All.prophages.seq&quot;</span> || <span class="keyword">die</span>;<span class="comment"># print prophages sequences</span></span><br><span class="line"><span class="keyword">print</span> SEQ <span class="string">&quot;Strain\tPhage ID\tContig ID\tGene Start\tGene End\tStrand\tAnnotation\tProtein sequences\n&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> @result = <span class="keyword">glob</span>(<span class="string">&quot;*_prophage&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@result) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+)_prophage/</span>;</span><br><span class="line"><span class="keyword">my</span> $str = $1;</span><br><span class="line"><span class="keyword">my</span> $prophage = $_ . <span class="string">&quot;/prophage_coordinates.tsv&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (! -z $prophage) &#123;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$prophage&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">my</span> $contig = $lines[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">my</span> $gbk = $str . <span class="string">&quot;.gbk&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $seqin = Bio::SeqIO-&gt;new( <span class="string">-format =&gt;</span> <span class="string">&#x27;genbank&#x27;</span>, <span class="string">-file =&gt;</span> <span class="string">&quot;$gbk&quot;</span>);<span class="comment">#需要在gbk文件所在的目录中运行命令!</span></span><br><span class="line"><span class="keyword">while</span>( (<span class="keyword">my</span> $seq = $seqin-&gt;next_seq) ) &#123;</span><br><span class="line"><span class="keyword">foreach</span> <span class="keyword">my</span> $sf ( $seq-&gt;get_SeqFeatures ) &#123;</span><br><span class="line"><span class="keyword">if</span> ($seq-&gt;display_name eq $contig) &#123;</span><br><span class="line"><span class="keyword">if</span>( $sf-&gt;primary_tag eq <span class="string">&#x27;CDS&#x27;</span> ) &#123;</span><br><span class="line"><span class="comment">#print SEQ $str, &quot;\t&quot;, $lines[0], &quot;\t&quot;, $seq-&gt;display_name, &quot;\t&quot;, $sf-&gt;start, &quot;\t&quot;, $sf-&gt;end, &quot;\t&quot;, $sf-&gt;strand, &quot;\t&quot;, $sf-&gt;get_tag_values(&#x27;product&#x27;), &quot;\t&quot;, $sf-&gt;get_tag_values(&#x27;translation&#x27;), $seq-&gt;seq,&quot;\n&quot;;# Also print contig sequences</span></span><br><span class="line"><span class="keyword">print</span> SEQ $str, <span class="string">&quot;\t&quot;</span>, $lines[<span class="number">0</span>], <span class="string">&quot;\t&quot;</span>, $seq-&gt;display_name, <span class="string">&quot;\t&quot;</span>, $sf-&gt;start, <span class="string">&quot;\t&quot;</span>, $sf-&gt;end, <span class="string">&quot;\t&quot;</span>, $sf-&gt;strand, <span class="string">&quot;\t&quot;</span>, $sf-&gt;get_tag_values(<span class="string">&#x27;product&#x27;</span>), <span class="string">&quot;\t&quot;</span>, $sf-&gt;get_tag_values(<span class="string">&#x27;translation&#x27;</span>),<span class="string">&quot;\n&quot;</span>;<span class="comment"># Only print Protein sequences</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span> OUT $str . <span class="string">&quot;\t&quot;</span> . $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line"><span class="keyword">close</span> SEQ;</span><br></pre></td></tr></table></figure><p>将“run_PhiSpy.pl”和后缀名为“.gbk”的GenBank格式的文件，以及“pVOGs.hmm”放在同一目录下，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl run_PhiSpy.pl</span><br></pre></td></tr></table></figure><p>得到两个汇总文件：</p><ul><li><strong>All.prophages.txt</strong>: 包含prophage信息的文件</li><li><strong>All.prophages.seq</strong>: 包含prophage序列的文件</li></ul><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="All.prophages.txt"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/53f4_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="All.prophages.seq"></p><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“53f4”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://github.com/linsalrob/PhiSpy">https://github.com/linsalrob/PhiSpy</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo渲染异常</title>
      <link href="/post/112a.html"/>
      <url>/post/112a.html</url>
      
        <content type="html"><![CDATA[<h1 id="代码渲染问题"><a href="#代码渲染问题" class="headerlink" title="代码渲染问题"></a>代码渲染问题</h1><h2 id="代码块中的花括号-被渲染为’-123-’和’-125-’"><a href="#代码块中的花括号-被渲染为’-123-’和’-125-’" class="headerlink" title="代码块中的花括号{}被渲染为’&amp;#123;’和’&amp;#125;’"></a>代码块中的花括号{}被渲染为’&amp;#123;’和’&amp;#125;’</h2><ul><li><p>原因</p><p>  安装了代码高亮插件(hexo-prism-plugin)导致的错误</p></li><li><p>解决方案</p><p>  卸载该插件，然后重新渲染。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-prism-plugin</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CAZy碳水化合物活性酶预测</title>
      <link href="/post/9052.html"/>
      <url>/post/9052.html</url>
      
        <content type="html"><![CDATA[<h1 id="CAZy数据库简介"><a href="#CAZy数据库简介" class="headerlink" title="CAZy数据库简介"></a>CAZy数据库简介</h1><p><a href="http://www.cazy.org/Home.html">CAZy</a> 全称为Carbohydrate-Active enZYmes Database，碳水化合物酶相关的专业数据库，内容包括能催化碳水化合物降解、修饰、以及生物合成的相关酶系家族。其包含五个主要分类：糖苷水解酶（Glycoside Hydrolases, GHs）、糖基转移酶（GlycosylTransferases, GTs）、多糖裂解酶（Polysaccharide Lyases, PLs）、糖酯酶（Carbohydrate Esterases, CEs）和氧化还原酶（Auxiliary Activities, AAs）。此外，还包含与碳水化合物结合结构域（Carbohydrate-Binding Modules， CBMs）。五大分类和一个结构域下，都分别建立了多个Family。</p><ul><li><p><a href="http://www.cazy.org/Glycoside-Hydrolases.html">GHs</a>：糖苷键的水解和&#x2F;或重排</p></li><li><p><a href="http://www.cazy.org/GlycosylTransferases.html">GTs</a>：糖苷键的形成</p></li><li><p><a href="http://www.cazy.org/Polysaccharide-Lyases.html">PLs</a>：糖苷键的非水解裂解</p></li><li><p><a href="http://www.cazy.org/Carbohydrate-Esterases.html">CEs</a>：水解碳水化合物的酯类</p></li><li><p><a href="http://www.cazy.org/Auxiliary-Activities.html">AAs</a>：与 CAZymes 协同作用的氧化还原酶</p></li><li><p><a href="http://www.cazy.org/Carbohydrate-Binding-Modules.html">CBMs</a>：与碳水化合物结合</p></li></ul><h1 id="CAZy数据库的准备"><a href="#CAZy数据库的准备" class="headerlink" title="CAZy数据库的准备"></a>CAZy数据库的准备</h1><p>在进行预测之前需要准备数据库，CAZy貌似没有提供FASTA格式的序列数据库，而仅提供了序列的Assenssion number，需要我们自己从NCBI数据库中下载序列。下载方法参照我之前的文章《<a href="https://liaochenlanruo.github.io/post/e7e9.html">根据assession number批量从NCB下载数据</a>》，在文章中提供了下载CAZy序列的方法和脚本，此处不再赘述。</p><p>在上一篇文章结尾获得的“All.sequences.fas”文件包含了所有的CAZy数据库序列，在正式预测之前需要完成数据库的格式化。后面我们将通过Diamond软件从基因组中预测CAZy蛋白，因此采用Diamond格式化数据库。</p><ul><li><p>序列预处理</p><p>  不知道什么原因，下载的序列存在两个问题，其一，下一条序列的ID连接着上一条序列的末尾，没有断行；其二，序列中存在着一段网页代码。因此，需要分两步进行修正。</p><ul><li><p>解决断行问题</p><p>  撰写脚本“add_linebreak.pl”，内容如下：</p>  <figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 30, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> $/=<span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;All.sequences.fas&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;CAZy.fas&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;&gt;$_\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br></pre></td></tr></table></figure><p>  将脚本与”All.sequences.fas”放在同一目录下，在终端或者命令行中运行如下命令，得到“CAZy.fas”。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl add_linebreak.pl</span><br></pre></td></tr></table></figure></li><li><p>删除无关内容</p><p>  用EmEditor软件打开CAZy.fas，Ctrl+F调出查找功能，搜索“www.” 可以看到如下内容，手动将其删除，并保存文件。</p><p>  <img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="数据库中需要手动删除的网页信息"></p></li></ul></li><li><p>构建Diamond数据库</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diamond makedb --<span class="keyword">in</span> CAZy.fas -d CAZy</span><br></pre></td></tr></table></figure><h1 id="开始序列比对"><a href="#开始序列比对" class="headerlink" title="开始序列比对"></a>开始序列比对</h1><p>当然，我们选择用Perl进行批量比对</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 30, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @faa = <span class="keyword">glob</span>(<span class="string">&quot;*.faa&quot;</span>);<span class="comment"># 读取所有后缀为“.faa”的文件，可以自己更改</span></span><br><span class="line"><span class="keyword">foreach</span>  (@faa) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).faa/</span>;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;.CAZy.diamond&quot;</span>;</span><br><span class="line"><span class="comment"># -p表示线程数，在笔记本上用6个即可</span></span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;diamond blastp -d CAZy -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将上述代码复制到文件中，命名为“run_diamond_CAZy.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析，得到“*.CAZy.diamond”：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl run_diamond_CAZy.pl</span><br></pre></td></tr></table></figure><h1 id="比对结果过滤"><a href="#比对结果过滤" class="headerlink" title="比对结果过滤"></a>比对结果过滤</h1><p>在比对过程中我们控制了evalue和query coverage，但是没有控制identity。但是很多时候，需要设定一个identity的阈值，低于阈值的比对将会被删除，该步骤可以将比对结果拷贝到Excel中根据identity排序，手动删除阈值以下的行，然而我选择用Perl批处理。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 30, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @cazy = <span class="keyword">glob</span>(<span class="string">&quot;*.CAZy.diamond&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@cazy) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).CAZy.diamond/</span>;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;.CAZy.diamond.filtered&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">if</span> ($lines[<span class="number">2</span>] &gt;= <span class="number">40</span>) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将上述代码复制到文件中，命名为“filter_cazy_diamond.pl”，将其和上一步产生的文件放在同一目录下，并在终端中输入如下命令，完成过滤，保留identity &gt;&#x3D; 40% 的行，得到“*.CAZy.diamond.filtered”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl filter_cazy_diamond.pl</span><br></pre></td></tr></table></figure><h1 id="你以为完了？还得mapping！"><a href="#你以为完了？还得mapping！" class="headerlink" title="你以为完了？还得mapping！"></a>你以为完了？还得mapping！</h1><p>得到的结果如下图所示，第二列的Hits是NCBI的Assession number，我们根本只知道这是什么CAZy家族，因此需要mapping！</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Diamond比对结果"></p><p>回头找到我们下载的<a href="http://www.cazy.org/IMG/cazy_data/cazy_data.zip">cazy_data.txt</a>，里面保存的是CAZy家族与Assession number的对应关系。比较闲的兄弟可以用查找-复制-粘贴的方法将“*.CAZy.diamond.filtered”中的Assession number替换为CAZy家族。我为比较忙的兄弟准备了下面的代码，批处理。不过我输出的是一个矩阵。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 30, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> %cazy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;cazy_data.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line">$cazy&#123;$lines[<span class="number">2</span>]&#125; = $lines[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> %hash;</span><br><span class="line"><span class="keyword">my</span> %samples;</span><br><span class="line"><span class="keyword">my</span> %ids;</span><br><span class="line"><span class="keyword">my</span> @filtered = <span class="keyword">glob</span>(<span class="string">&quot;*.CAZy.diamond.filtered&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@filtered) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).CAZy.diamond.filtered/</span>;</span><br><span class="line"><span class="keyword">my</span> $sample = $1;</span><br><span class="line">$samples&#123;$1&#125;++;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> @line = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">exists</span> $cazy&#123;$line[<span class="number">1</span>]&#125;) &#123;</span><br><span class="line">$ids&#123;$cazy&#123;$line[<span class="number">1</span>]&#125;&#125;++;</span><br><span class="line">$hash&#123;$sample&#125;&#123;$cazy&#123;$line[<span class="number">1</span>]&#125;&#125;++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;CAZy.Matrix.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @samples = <span class="keyword">sort</span> <span class="keyword">keys</span> %samples;</span><br><span class="line"><span class="keyword">my</span> @ids = <span class="keyword">sort</span> <span class="keyword">keys</span> %ids;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t&quot;</span> . <span class="keyword">join</span>(<span class="string">&quot;\t&quot;</span>, @samples) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">my</span> $i=<span class="number">0</span>; $i&lt;@ids ;$i++) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $ids[$i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">my</span> $j=<span class="number">0</span>; $j&lt;@samples ;$j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">exists</span> $hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t$hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br></pre></td></tr></table></figure><p>将上述代码复制到文件中，命名为“assession2cazy.pl“，将其和”cazy_data.txt“，及上一步产生的文件“*.CAZy.diamond.filtered”放在同一目录下，并在终端中输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl assession2cazy.pl</span><br></pre></td></tr></table></figure><p>得到一个矩阵“CAZy.Matrix.txt”，内容如下，行为CAZy家族，列为基因组&#x2F;样本名。拿到本文件后，可以做热图看CAZy家族在各样本中的分布情况，然而这个热图将会比鞋帮子脸还要长，可读性不高，因此我选择将这些family合并为大类，生成一个新的矩阵。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_3.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Mapping后的矩阵"></p><p>二话不说，上代码。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 30, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> %category;</span><br><span class="line"><span class="keyword">my</span> %hash;</span><br><span class="line"><span class="keyword">my</span> @samples;</span><br><span class="line"><span class="keyword">my</span> $count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;CAZy.Matrix.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line">$count++;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">if</span> ($count == <span class="number">1</span>) &#123;</span><br><span class="line">@samples = <span class="keyword">split</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span>;</span><br><span class="line">$lines[<span class="number">0</span>]=~<span class="regexp">/(.+?)\d+/</span>;</span><br><span class="line"><span class="keyword">my</span> $cate = $1;</span><br><span class="line">$category&#123;$cate&#125;++;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">my</span> $i=<span class="number">0</span>; $i&lt;@samples; $i++) &#123;</span><br><span class="line"><span class="keyword">my</span> $j = $i + <span class="number">1</span>;</span><br><span class="line">$hash&#123;$samples[$i]&#125;&#123;$cate&#125; += $lines[$j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;CAZy.Category.Matrix.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @category = <span class="keyword">sort</span> <span class="keyword">keys</span> %category;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t&quot;</span> . <span class="keyword">join</span>(<span class="string">&quot;\t&quot;</span>, @samples) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">my</span> $i=<span class="number">0</span>; $i&lt;@category ;$i++) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $category[$i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">my</span> $j=<span class="number">0</span>; $j&lt;@samples ;$j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">exists</span> $hash&#123;$samples[$j]&#125;&#123;$category[$i]&#125;) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t$hash&#123;$samples[$j]&#125;&#123;$category[$i]&#125;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br></pre></td></tr></table></figure><p>将上述代码复制到文件中，命名为“cazyfamily2categories.pl”，将其和上一步产生的文件“CAZy.Matrix.txt”放在同一目录下，并在终端中输入如下命令，得到文件“CAZy.Category.Matrix.txt”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl cazyfamily2categories.pl</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_4.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/9052_4.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="CAZy.Category.Matrix.txt内容概览"></p><p>接下来是要做柱状图还是heatmap，就随便了。</p><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“9052”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Functional genomics </tag>
            
            <tag> CAZy </tag>
            
            <tag> SY179 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建样本vs基因矩阵</title>
      <link href="/post/412a.html"/>
      <url>/post/412a.html</url>
      
        <content type="html"><![CDATA[<p>承接上一篇文章<a href="https://liaochenlanruo.github.io/post/e922.html">Swissprot数据库的本地化与序列比对</a>。</p><h1 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h1><p>分别预测了多个样本&#x2F;基因组中某些基因的存在与否即数量，需要将这些样本&#x2F;基因组中的基因数量情况合并在一起构建矩阵，此时，手动是非常困难和无趣的。又该请出Perl神了。</p><h1 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h1><p>在上一篇文章中，我们将多个宏基因组蛋白序列与SwissProt数据库做了比对，并根据比对到的ID与其他数据库做了mapping，得到了多个输出文件，保存为“sample.mapped”。其中“sample”可以是样本名，也可以是基因组名，它将出现在最后构建的矩阵中。这些文件既可作为本例的输入文件，其内容大概是下面酱紫的，各列以制表符分隔。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="输入文件长酱紫"></p><h1 id="写脚本"><a href="#写脚本" class="headerlink" title="写脚本"></a>写脚本</h1><p>上图是其中一个文件的内容的一部分，接下来我们将提取第19列的GO number来构建矩阵。将以下代码保存到文件中，命名为“get_matrix.pl”。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 29, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> %hash;</span><br><span class="line"><span class="keyword">my</span> %ids;</span><br><span class="line"><span class="keyword">my</span> %samples;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @files = <span class="keyword">glob</span>(<span class="string">&quot;*.mapped&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@files) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).mapped/</span>;</span><br><span class="line"><span class="keyword">my</span> $sample = $1;</span><br><span class="line">$samples&#123;$1&#125;++;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;<span class="comment"># 忽略第一行，如果第一行不是标题行，请将该行注释掉</span></span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">if</span> ($lines[<span class="number">18</span>]=~<span class="regexp">/.+\; /</span>) &#123;</span><br><span class="line"><span class="keyword">my</span> @terms = <span class="keyword">split</span> <span class="regexp">/\; /</span>, $lines[<span class="number">18</span>];<span class="comment"># 18代表文件的第19列，若想提取其他列，可以自行修改该数字为“列号-1”，因为第一列代号为0</span></span><br><span class="line"><span class="keyword">foreach</span>  (@terms) &#123;</span><br><span class="line">$ids&#123;$_&#125;++;</span><br><span class="line">$hash&#123;$sample&#125;&#123;$_&#125;++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">elsif</span> ($lines[<span class="number">18</span>]=~<span class="regexp">/\S+/</span>) &#123;</span><br><span class="line">$ids&#123;$lines[<span class="number">18</span>]&#125;++;</span><br><span class="line">$hash&#123;$sample&#125;&#123;$lines[<span class="number">18</span>]&#125;++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;Matrix.txt&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @samples = <span class="keyword">sort</span> <span class="keyword">keys</span> %samples;</span><br><span class="line"><span class="keyword">my</span> @ids = <span class="keyword">sort</span> <span class="keyword">keys</span> %ids;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t&quot;</span> . <span class="keyword">join</span>(<span class="string">&quot;\t&quot;</span>, @samples) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">my</span> $i=<span class="number">0</span>; $i&lt;@ids ;$i++) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $ids[$i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">my</span> $j=<span class="number">0</span>; $j&lt;@samples ;$j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">exists</span> $hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t$hash&#123;$samples[$j]&#125;&#123;$ids[$i]&#125;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br></pre></td></tr></table></figure><h1 id="构建矩阵"><a href="#构建矩阵" class="headerlink" title="构建矩阵"></a>构建矩阵</h1><p>将脚本与输入文件放在同一目录下，在终端或Windows命令行中运行如下命令，得到的“Matrix.txt”即为输出文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl get_matrix.pl</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/412a_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="输出文件长酱紫"></p><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“412a”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SY179 </tag>
            
            <tag> perl </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swissprot数据库的本地化与序列比对并与其他数据库快速mapping</title>
      <link href="/post/e922.html"/>
      <url>/post/e922.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据库下载与构建"><a href="#数据库下载与构建" class="headerlink" title="数据库下载与构建"></a>数据库下载与构建</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz</span><br></pre></td></tr></table></figure><h2 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h2><ul><li><p>解压缩</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip -d uniprot_sprot.fasta.gz</span><br></pre></td></tr></table></figure></li><li><p>构建blast+数据库</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">makeblastdb -<span class="keyword">in</span> uniprot_sprot.fasta -dbtype prot -out uniprot_sprot -parse_seqids</span><br></pre></td></tr></table></figure></li><li><p>构建DIAMOND数据库</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diamond makedb --<span class="keyword">in</span> uniprot_sprot.fasta -d uniprot_sprot_diamond</span><br></pre></td></tr></table></figure></li></ul><h1 id="比对"><a href="#比对" class="headerlink" title="比对"></a>比对</h1><ul><li><p>blastp蛋白比对</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blastp -query F01.faa -out F01.swissprot -db /new_data/hualin/db/uniprot_sprot -outfmt 6 -num_threads 30 -evalue 1e-5</span><br></pre></td></tr></table></figure></li><li><p>diamond蛋白比对</p><ul><li><p>单个基因组对比</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q F01.faa -e 1e-5 -f 6 -o F01.diamond -k 1 --sensitive -p 30 --query-cover 50</span><br></pre></td></tr></table></figure></li><li><p>多个个基因组对比</p><p>不会shell没办法，写Perl脚本(run_diamond.pl)来完成。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line">   <span class="keyword">use</span> strict;</span><br><span class="line">   <span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 28, 2021</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">my</span> @faa = <span class="keyword">glob</span>(<span class="string">&quot;*.faa&quot;</span>);<span class="comment"># 读取所有后缀为“.faa”的文件，可以自己更改</span></span><br><span class="line">   <span class="keyword">foreach</span>  (@faa) &#123;</span><br><span class="line">    $_=~<span class="regexp">/(.+).faa/</span>;</span><br><span class="line">    <span class="keyword">my</span> $out = $1 . <span class="string">&quot;.diamond&quot;</span>;</span><br><span class="line">    <span class="comment"># 将/new_data/hualin/db/uniprot_sprot_diamond换成自己的数据库路径; -p表示线程数，在笔记本上用6个即可</span></span><br><span class="line">    <span class="keyword">system</span>(<span class="string">&quot;diamond blastp -d /new_data/hualin/db/uniprot_sprot_diamond -q $_ -e 1e-5 -f 6 -o $out -k 1 --sensitive -p 30 --query-cover 50&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>将上述代码复制到文件中，命名为“run_diamond.pl”，将其和序列文件放在同一目录下，并在终端中输入如下命令，完成分析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl run_diamond.pl</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="将比对结果mapping至其他数据库"><a href="#将比对结果mapping至其他数据库" class="headerlink" title="将比对结果mapping至其他数据库"></a>将比对结果mapping至其他数据库</h1><ul><li><p>打开网址<a href="https://www.uniprot.org/uploadlists/">https://www.uniprot.org/uploadlists/</a>, 上传比对上的swissprot ID，可以将比对结果转换为诸如KEGG等其他数据库的ID。个人感觉不是很好用。</p></li><li><p>我们可以把mapping文件下载下来，自己写脚本来提取信息，虽然麻烦些，但得到的更多。</p><ul><li><p>下载mapping文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/idmapping/idmapping_selected.tab.gz</span><br></pre></td></tr></table></figure></li><li><p>解压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip -d idmapping_selected.tab.gz</span><br></pre></td></tr></table></figure></li><li><p>写脚本提取对应信息</p><p> Diamond比对的结果文件内容如下，第一列是自己的氨基酸序列ID，第二列是SwissProt数据库中序列的ID，而我们真正需要的是第二列中两个竖线中间的内容，在稍后的脚本中将通过正则表达式把它给揪出来。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">F01<span class="built_in">_</span>00001sp|Q73G44|MDH<span class="built_in">_</span>WOLPM47.27238010812433149.55e-1672.8</span><br><span class="line">   F01<span class="built_in">_</span>00003sp|D9PU00|TFRA<span class="built_in">_</span>METTM41.35693017757445404.89e-131397</span><br><span class="line">   F01<span class="built_in">_</span>00004sp|P9WN88|FRDB<span class="built_in">_</span>MYCTO32.7208118619215232193.84e-28110</span><br><span class="line">   F01<span class="built_in">_</span>00005sp|Q021N6|SUCC<span class="built_in">_</span>SOLUE62.83841412138313831.45e-155446</span><br></pre></td></tr></table></figure><p>开始写脚本，保存为“run_mapping.pl”。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 28, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> %maps;</span><br><span class="line"><span class="keyword">my</span> @diaout = <span class="keyword">glob</span>(<span class="string">&quot;*.diamond&quot;</span>);<span class="comment"># 读取所有的diamond比对后的输出文件</span></span><br><span class="line"><span class="keyword">foreach</span>  (@diaout) &#123;</span><br><span class="line">$_=~<span class="regexp">/(\S+).diamond/</span>;</span><br><span class="line"><span class="keyword">my</span> %hash;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span>;</span><br><span class="line">$lines[<span class="number">1</span>]=~<span class="regexp">/.+\|(.+)\|.+/</span>;</span><br><span class="line">$hash&#123;$1&#125;++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;idmapping_selected.tab&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">exists</span> $hash&#123;$lines[<span class="number">0</span>]&#125;) &#123;</span><br><span class="line">$maps&#123;$lines[<span class="number">0</span>]&#125; = $_;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @diaout2 = <span class="keyword">glob</span>(<span class="string">&quot;*.diamond&quot;</span>);<span class="comment"># 读取所有的diamond比对后的输出文件</span></span><br><span class="line"><span class="keyword">foreach</span>  (@diaout2) &#123;</span><br><span class="line">$_=~<span class="regexp">/(\S+).diamond/</span>;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;.mapped&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;qseqid\tsseqid\tpident\tlength\tmismatch\tgapopen\tqstart\tqend\tsstart\tsend\tevalue\tbitscore\tUniProtKB-ACUniProtKB-IDGeneID (EntrezGene)RefSeqGIPDBGOUniRef100UniRef90UniRef50UniParcPIRNCBI-taxonMIMUniGenePubMedEMBLEMBL-CDSEnsemblEnsembl_TRSEnsembl_PROAdditional PubMed\n&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span>;</span><br><span class="line">$lines[<span class="number">1</span>]=~<span class="regexp">/.+\|(.+)\|.+/</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">exists</span> $maps&#123;$1&#125;) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $_ . <span class="string">&quot;\t&quot;</span> . $maps&#123;$1&#125; . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">print</span> OUT $_ . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将脚本与diamond比对的结果文件以及下载的mapping文件放在同一目录下，在终端里输入如下命令即可得到mapping后的结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl run_mapping.pl</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="GO-注释"><a href="#GO-注释" class="headerlink" title="GO 注释"></a>GO 注释</h1><ul><li><p>从map后的文件中提取基因ID和GO number，各列以制表符分隔，没有GO注释的只输出gene ID。</p><p>  准备脚本，命名为“get_GO.pl”，与上一步生成的“*.mapped”文件放在同一目录下。</p>  <figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 28, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @mapped = <span class="keyword">glob</span>(<span class="string">&quot;*.mapped&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@mapped) &#123;</span><br><span class="line">$_=~<span class="regexp">/(.+).mapped/</span>;</span><br><span class="line"><span class="keyword">open</span> IN, <span class="string">&quot;$_&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">my</span> $out = $1 . <span class="string">&quot;.GO&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> OUT, <span class="string">&quot;&gt;$out&quot;</span> || <span class="keyword">die</span>;</span><br><span class="line">&lt;IN&gt;;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="keyword">my</span> @lines = <span class="keyword">split</span> <span class="regexp">/\t/</span>;</span><br><span class="line"><span class="keyword">print</span> OUT $lines[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> ($lines[<span class="number">18</span>]=~<span class="regexp">/.+\; /</span>) &#123;</span><br><span class="line"><span class="keyword">my</span> @terms = <span class="keyword">split</span> <span class="regexp">/\; /</span>, $lines[<span class="number">18</span>];<span class="comment"># 18代表文件的第19列</span></span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t&quot;</span> . <span class="keyword">join</span>(<span class="string">&quot;\t&quot;</span>, @terms) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">elsif</span> ($lines[<span class="number">18</span>]=~<span class="regexp">/\S+/</span>) &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\t&quot;</span> . $lines[<span class="number">18</span>] . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">print</span> OUT <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line"><span class="keyword">close</span> OUT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  在终端或者Windows命令行中运行如下命令，得到的“*.GO”为输出文件。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl get_GO.pl</span><br></pre></td></tr></table></figure></li><li><p>GO注释与可视化</p></li></ul><p>访问网页<a href="https://wego.genomics.cn/">WEGO 2.0</a>，在网页中间位置是数据传输接口，将刚刚得到的所有结果文件拖拽上传，<strong>File format</strong>选择<u>Native Format</u>，如果自己的数据是模式物种，可以在<strong>Reference</strong>中选择对应的物种，点击<strong>Submit</strong>即可。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="在WEGO 2.0网页提交数据"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WEGO 2.0分析结果一览表"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/e922-3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="WEGO 2.0分析结果柱状图"></p><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e922”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Functional genomics </tag>
            
            <tag> SY179 </tag>
            
            <tag> 生信软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根据assession number批量从NCB下载数据</title>
      <link href="/post/e7e9.html"/>
      <url>/post/e7e9.html</url>
      
        <content type="html"><![CDATA[<p>有时候我们手里会得到一些NCBI的assession number，且数量比较多，而我们真正需要的是序列，这时候手动挨个搜索和下载是不太现实的，除非是你闲得无事可做。其实有一个网页是可以批量下载序列的，即<a href="https://www.ncbi.nlm.nih.gov/sites/batchentrez">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> ，下面演示一下其用法。<strong>请就着文末视频食用。</strong></p><ul><li><p>首先，<u>准备一份列表文件，其中包含需要下载序列的IDs，每行一个ID</u>。这里有一个从网上下载的CaZY数据库，本以为是序列文件，下载后才发现里面没有序列。这个文件包含三列，以制表符分隔各列，最后一列是Assession number，因此前两列可以删掉。可以将文件内容复制到Excel中，删除前两列，将最后一列复制到一个新的文本文档中。也可以在支持正则表达式的文本编辑器中直接查找替换。<strong>刚刚的示例文件可以从<a href="http://www.cazy.org/IMG/cazy_data/cazy_data.zip">这里</a>下载</strong>。正则表达式查找的公式为“.+\t(.+)”，其中“.+”代表的是任意多个字符，“\t”匹配的是制表符，+是贪婪的，一直遇到最后一个“\t”才终止匹配。即“.+\t”匹配的是前两列以及第二列后面的制表符，最后的“(.+)”匹配的是第三列。小括号的作用是捕获匹配的内容。替换的公式为“$1”，表示第一个小括号内的内容，即第三列。</p></li><li><p>接下来将得到的列表文件提交至网站上以下载序列，需要选择对应的数据库，这里选择protein，点击“Retrieve”开始下载。由于序列较多，因此反应比较慢，需要耐心等待。估计是崩了，再试一遍，文件包含2650471个ID，估计服务器吃不消，实在不行就拆分成几个文件，分批次下载。我这里用的是EmEditor软件，按照10000行每个文件对整个文件进行了拆分，得到了266个文件，现在拿其中的一个做演示，看看服务器是否吃得消。看来一万个也太多，二十几个试了一下，莫得问题。方法就是酱紫的，至于可以一次性下载多少，各位自己去试吧。搞定！</p></li><li><p><strong>兄弟们不用试了，我已经试过了，一次只能搞几百个</strong>，对于几十万行的列表来说，手动逐个提交也是要命的，因此我写了一个Perl脚本(download_NCBI.pl)来完成该任务，<u>不过只能在Linux下运行</u>，代码如下：</p></li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="keyword">use</span> LWP::Simple;</span><br><span class="line"><span class="comment"># Author: Liu hualin</span></span><br><span class="line"><span class="comment"># Date: Sep 28, 2021</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Usage: perl download_NCBI.pl 列表文件 序列类型（参照https://www.ncbi.nlm.nih.gov/sites/batchentrez数据库填写，常用的包括nucleotide, protein）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @ids;</span><br><span class="line"><span class="keyword">my</span> $dbtype = $ARGV[<span class="number">1</span>];<span class="comment"># nucleotide, protein</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;split -l 300 $ARGV[0] splited_&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> @splited = <span class="keyword">glob</span>(<span class="string">&quot;splited_*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>  (@splited) &#123;</span><br><span class="line">$_=~<span class="regexp">/splited_(.+)/</span>;</span><br><span class="line"><span class="keyword">my</span> $out = <span class="string">&quot;seqs.$1.fasta&quot;</span>;</span><br><span class="line"><span class="keyword">open</span> IN, $_ || <span class="keyword">die</span>;</span><br><span class="line"><span class="keyword">while</span> (&lt;IN&gt;) &#123;</span><br><span class="line"><span class="keyword">chomp</span>;</span><br><span class="line">$_=~<span class="regexp">s/[\r\n]+//g</span>;</span><br><span class="line"><span class="keyword">push</span> @ids, $_;</span><br><span class="line">&#125;</span><br><span class="line">getstore(<span class="string">&quot;http://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=$dbtype&amp;rettype=fasta&amp;retmode=text&amp;id=&quot;</span>.join(<span class="string">&quot;,&quot;</span>, @ids),<span class="string">&quot;$out&quot;</span>);</span><br><span class="line">@ids = ();</span><br><span class="line"><span class="keyword">close</span> IN;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;cat seqs.* &gt; All.sequences.fas&quot;</span>);</span><br><span class="line"><span class="keyword">system</span>(<span class="string">&quot;rm splited_* seqs.*&quot;</span>);</span><br></pre></td></tr></table></figure><p>运行方法也贼简单，将脚本和列表文件放在同一目录下，然后在Linux终端里输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl download_NCBI.pl cazy_ids.txt protein</span><br></pre></td></tr></table></figure><p>其中cazy_ids.txt为包含assession number的列表文件，protein表示列表里的ID是蛋白。最后面的这个参数可以在<a href="https://www.ncbi.nlm.nih.gov/sites/batchentrez">https://www.ncbi.nlm.nih.gov/sites/batchentrez</a> 左上角的Database查询，<strong>但是要全部小写</strong>。</p><p>运行一下，看看效果！</p><p><font color="#FF0000">2000 years later…</font></p><p>2650471&#x2F;300&#x3D;8835个文件，最终生成的序列文件名称为“All.sequences.fas”，中间过程文件会被自动删除。千年以后拿结果，不管怎么说，总算解放了双手，让电脑慢慢去跑吧！</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=378319348&page=" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><h1 id="脚本获取"><a href="#脚本获取" class="headerlink" title="脚本获取"></a>脚本获取</h1><p>关注公众号“生信之巅”，聊天窗口回复“e7e9”获取下载链接。</p><table align="center"><tr>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/生信之巅公众号.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅微信公众号" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-right: 0px;margin-bottom: 5px;align: center;"></td>  <td align="center"><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/social/小程序码.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="生信之巅小程序码" style="width: 100px;height: 100px;vertical-align: -20px;border-radius: 0%;margin-left: 0px;margin-bottom: 5px;align: center"></td></tr></table><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CAZy </tag>
            
            <tag> NCBI </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Perl处理可恶的Windows换行符</title>
      <link href="/post/3f45.html"/>
      <url>/post/3f45.html</url>
      
        <content type="html"><![CDATA[<p>每次在Windows下运行Perl，或者通过Perl处理Windows系统生成的文件时，行尾总会有隐藏的换行符删不掉，chomp毛用都没有。处理后的文件在文本阅读器如TXT、EditPlus等中是看不到换行符的，然而当将文本内容拷贝到Excel表格中时，明明应该在一行的内容却变成了两行，这便是隐藏的换行符在捣鬼。疑惑、愤怒、迷茫的情绪交织在一起，伴随着一声声的“哪儿错了”却不知所措，其实只要通过下面一句代码干掉那些隐藏的换行符就万事大吉了。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_=~<span class="regexp">s/[\n\r]+$//</span>;</span><br></pre></td></tr></table></figure><p>上述命令表示通过查找替换的方式去除当前行末尾的所有换行符。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> perl </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩增子系之绘制物种分类堆叠图</title>
      <link href="/post/baf4.html"/>
      <url>/post/baf4.html</url>
      
        <content type="html"><![CDATA[<p><strong>为何要手绘堆叠图？</strong><br>QIIME2虽然可以生成堆叠图，然而图片只能在网页上查看，无法下载。此外，QIIME2的图有几分丑，且不可个性化修改，因此，手绘最靠谱。手绘当然不是用手画，而是用手敲代码。</p><h1 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h1><ul><li>各级别的物种分布文件，可以直接从QIIME2 生成的taxa_barplot.qzv文件提交至 <a href="https://view.qiime2.org/">https://view.qiime2.org</a> ，随后从网页左上角“CSV”按钮处导出各分类级别的丰度表，但是要删除风度表最后几列的元数据信息，只保留丰度信息，各列之间以逗号分隔，内容如下所示，该文件是LEVEL-2（Phylum）水平的物种丰度分布：</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">index,Bacteria;Chloroflexi,Bacteria;Planctomycetota,Archaea;Nanoarchaeota,Bacteria;Patescibacteria,Bacteria;Proteobacteria,Bacteria;Actinobacteriota,Archaea;Aenigmarchaeota,Bacteria;Acidobacteriota,Archaea;Altiarchaeota,Bacteria;Firmicutes,Bacteria;Bdellovibrionota,Bacteria;Dependentiae,Bacteria;Spirochaetota,Bacteria;Margulisbacteria,Bacteria;Myxococcota,Archaea;Halobacterota,Archaea;Crenarchaeota,Bacteria;Latescibacterota,Bacteria;NB1-j,Bacteria;Desulfobacterota,Bacteria;Verrucomicrobiota,Archaea;Iainarchaeota,Bacteria;DTB120,Bacteria;Elusimicrobiota,Eukaryota;SAR,Archaea;Asgardarchaeota,Archaea;Euryarchaeota,Bacteria;CK-2C2-2,Bacteria;Sva0485,Archaea;Thermoplasmatota,Bacteria;Bacteroidota,Bacteria;Marinimicrobia (SAR406 clade),Bacteria;MBNT15,Bacteria;Nitrospinota,Bacteria;Zixibacteria,Bacteria;Nitrospirota,Archaea;Micrarchaeota,Bacteria;LCP-89,Bacteria;Armatimonadota,Bacteria;WOR-1,Bacteria;Gemmatimonadota,Bacteria;Fibrobacterota,Bacteria;Calditrichota,Bacteria;Sumerlaeota,Bacteria;Aerophobota,Bacteria;WS1,Bacteria;NKB15,Bacteria;SAR324 clade(Marine group B),Bacteria;Dadabacteria,Bacteria;BHI80-139,Bacteria;Desantisbacteria,Bacteria;Schekmanbacteria,Archaea;Hadarchaeota,Archaea;Hydrothermarchaeota,Bacteria;Caldatribacteriota,Bacteria;TA06,Bacteria;WS2,Eukaryota;Amorphea,Bacteria;Cyanobacteria,Bacteria;Hydrogenedentes,Bacteria;Cloacimonadota,Bacteria;WPS-2,Bacteria;Modulibacteria,Eukaryota;Archaeplastida,Bacteria;10bav-F6,Bacteria;Methylomirabilota,Bacteria;Deferrisomatota,Bacteria;Fusobacteriota,Bacteria;Fermentibacterota,Bacteria;Entotheonellaeota,Eukaryota;Discoba,Bacteria;Campylobacterota,Bacteria;PAUC34f,Bacteria;Poribacteria,Bacteria;AncK6,Bacteria;GN01,Bacteria;Acetothermia,Bacteria;FCPU426</span><br><span class="line">B01,383,1058,157,274,7755,1317,0,1025,0,39,22,16,0,0,71,0,6841,20,633,49,145,0,0,0,247,13,0,0,0,13,1012,0,0,53,0,137,0,0,39,0,271,7,17,4,0,0,0,7,471,0,0,0,0,0,3,0,0,69,3,53,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">B02,225,507,98,27,3279,228,0,522,0,10,4,0,0,0,25,0,7995,8,336,6,54,0,0,0,9,4,0,0,0,0,259,0,12,65,0,29,0,0,0,0,163,0,16,0,0,0,0,22,106,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">B03,196,360,246,38,2605,119,0,587,0,8,5,0,0,0,172,0,11619,16,370,11,0,3,0,0,13,0,0,0,0,0,206,5,0,83,8,67,0,0,0,0,130,0,5,0,0,0,0,27,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">B04,437,922,636,61,4209,195,0,1051,0,9,5,6,0,0,274,0,14573,22,628,5,88,9,0,0,17,8,0,0,0,26,271,14,0,129,7,95,0,0,0,0,219,0,20,0,0,0,0,84,145,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,467,0,0,0,5,0,0,12,0,0,0,0,0</span><br><span class="line">B05,240,1159,187,26,2929,149,0,778,0,8,0,0,0,0,204,0,10918,26,473,0,20,0,0,7,10,8,0,0,0,0,193,9,0,209,0,96,0,0,2,0,244,3,19,0,0,0,0,131,125,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,532,0,0,0,12,0,0,0,0,0,0,0,0</span><br><span class="line">B06,211,2003,1380,168,2469,188,12,617,3,13,4,15,7,2,196,0,7802,16,383,47,94,0,0,22,7,43,25,0,0,84,223,33,0,244,5,112,0,0,0,0,204,8,28,8,0,0,0,69,105,0,5,0,0,8,0,0,0,0,0,0,0,0,0,0,0,639,0,0,0,9,0,0,0,0,0,0,0,0</span><br><span class="line">B07,231,2607,4129,694,2667,231,20,399,12,36,10,21,37,0,156,0,5611,47,453,76,93,112,0,16,21,187,53,0,0,267,196,73,0,106,0,74,0,0,0,24,169,8,37,6,6,0,5,82,118,0,7,0,0,0,0,0,0,4,0,0,0,0,0,0,0,399,0,0,0,8,0,0,0,0,0,0,0,0</span><br><span class="line">B08,228,2573,4942,604,2084,150,51,507,7,14,0,22,32,2,109,0,6026,28,269,58,156,94,0,31,7,193,21,0,0,264,220,11,4,212,0,67,4,0,0,65,113,3,26,0,0,0,0,81,108,0,0,5,0,0,0,0,0,0,0,13,0,0,0,0,0,468,0,0,0,21,0,0,7,0,0,0,0,0</span><br><span class="line">B09,606,3235,2950,1247,1922,696,52,487,16,21,20,84,12,0,107,0,1559,80,341,478,198,148,0,34,63,131,6,3,9,144,141,30,6,106,13,87,42,0,4,0,205,6,76,5,8,11,8,142,70,9,0,3,0,15,0,0,0,0,0,7,0,0,0,0,0,508,0,0,0,18,0,5,0,0,0,0,0,0</span><br></pre></td></tr></table></figure><ul><li>样本元数据，描述各样本特征的文件，以制表符分隔各列，内容如下：</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">IDSamplesLayerDepthLocationPositionSite</span><br><span class="line">B01B010-15RightDownstreamB</span><br><span class="line">B02B021-25RightDownstreamB</span><br><span class="line">B03B032-35RightDownstreamB</span><br><span class="line">B04B043-45RightDownstreamB</span><br><span class="line">B05B054-55RightDownstreamB</span><br><span class="line">B06B065-610RightDownstreamB</span><br><span class="line">B07B076-710RightDownstreamB</span><br><span class="line">B08B087-810RightDownstreamB</span><br><span class="line">B09B098-910RightDownstreamB</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p><strong>建议在Rstudio中运行。</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先需要安装依赖包“amplicon”，如果没有安装“devtools”需要先安装，命令如下：</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>requireNamespace<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">,</span> quietly<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    install.packages<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>devtools<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖包“amplicon”，我对原作者的程序做了些许的优化，所以，可以从我的GitHub进行安装，命令如下：</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>requireNamespace<span class="punctuation">(</span><span class="string">&quot;amplicon&quot;</span><span class="punctuation">,</span> quietly<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    install_github<span class="punctuation">(</span><span class="string">&quot;liaochenlanruo/amplicon&quot;</span><span class="punctuation">)</span></span><br><span class="line">suppressWarnings<span class="punctuation">(</span>suppressMessages<span class="punctuation">(</span>library<span class="punctuation">(</span>amplicon<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录，视自己的具体情况而定，工作目录中当包含输入文件：</span></span><br><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;E:/Researches/Xiaqian/NGS/CleanData/ALL/细菌V6V8-1/Analysis_20210624/barplot&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件读取元数据和物种注释</span></span><br><span class="line">metadata<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;sample-metadata.tsv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">taxonomy<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;taxonomy.tsv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制堆叠柱状图，颜色自定义。界水平物种组成表和元数据作为输入，分组列名为Group，显示前4个分类，其余归类为其他(Other)，按丰度排序。</span></span><br><span class="line">otutab1<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;level-1.csv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;,&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">otutab1<span class="operator">=</span>t<span class="punctuation">(</span>otutab1<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按照站位分组，通过“groupID”参数设置分组信息，这里我选择根据站位（Site）分组，用户当根据自己的实际情况来设置。</span></span><br><span class="line"><span class="punctuation">(</span>ds<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab1<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">4</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ds2 <span class="operator">=</span> ds <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 出图</span></span><br><span class="line">ds2</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照深度分组</span></span><br><span class="line"><span class="punctuation">(</span>dd<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab1<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Depth&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">4</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dd2 <span class="operator">=</span> dd <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dd2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 门水平物种组成表和元数据作为输入，分组列名为Group，显示前19个分类，按丰度排序</span></span><br><span class="line">otutab2<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;level-2.csv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;,&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">otutab2<span class="operator">=</span>t<span class="punctuation">(</span>otutab2<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按照站位分组</span></span><br><span class="line"><span class="punctuation">(</span>ps<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab2<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">20</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ps2 <span class="operator">=</span> ps <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#aec7e8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ffbb78&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#98df8a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff9896&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c5b0d5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c49c94&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#f7b6d2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#7f7f7f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c7c7c7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#dbdb8d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9edae5&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ps2</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照深度分组</span></span><br><span class="line"><span class="punctuation">(</span>pd<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab2<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Depth&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">20</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pd2 <span class="operator">=</span> pd <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#aec7e8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ffbb78&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#98df8a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff9896&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c5b0d5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c49c94&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#f7b6d2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#7f7f7f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c7c7c7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#dbdb8d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9edae5&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pd2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 纲水平物种组成表和元数据作为输入，分组列名为Group，显示前19个分类，按丰度排序</span></span><br><span class="line">otutab3<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;level-3.csv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;,&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">,</span> <span class="built_in">quote</span><span class="operator">=</span><span class="string">&quot;\&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">otutab3<span class="operator">=</span>t<span class="punctuation">(</span>otutab3<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按照站位分组</span></span><br><span class="line"><span class="punctuation">(</span>cs<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab3<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">20</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">cs2 <span class="operator">=</span> cs <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#aec7e8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ffbb78&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#98df8a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff9896&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c5b0d5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c49c94&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#f7b6d2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#7f7f7f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c7c7c7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#dbdb8d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9edae5&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">cs2</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照深度分组</span></span><br><span class="line"><span class="punctuation">(</span>cd<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab3<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Depth&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">20</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">cd2 <span class="operator">=</span> cd <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#aec7e8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ffbb78&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#98df8a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff9896&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c5b0d5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c49c94&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#f7b6d2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#7f7f7f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c7c7c7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#dbdb8d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9edae5&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">cd2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 属水平物种组成表和元数据作为输入，分组列名为Site，显示前19个分类，按丰度排序</span></span><br><span class="line">otutab6<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;level-6.csv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;,&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">otutab6<span class="operator">=</span>t<span class="punctuation">(</span>otutab6<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按照站位分组</span></span><br><span class="line"><span class="punctuation">(</span>gs<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab6<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">20</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">gs2 <span class="operator">=</span> gs <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#aec7e8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ffbb78&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#98df8a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff9896&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c5b0d5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c49c94&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#f7b6d2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#7f7f7f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c7c7c7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#dbdb8d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9edae5&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">gs2</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照深度分组</span></span><br><span class="line"><span class="punctuation">(</span>gd<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab6<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Depth&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">20</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">gd2 <span class="operator">=</span> gd <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#aec7e8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ffbb78&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#98df8a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff9896&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c5b0d5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c49c94&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#f7b6d2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#7f7f7f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c7c7c7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#dbdb8d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9edae5&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">gd2</span><br></pre></td></tr></table></figure><p>最后的图可以在Rstudio中手动导出。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=378319348&page=" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扩增子 </tag>
            
            <tag> SY179 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩增子可视化专题</title>
      <link href="/post/fccc.html"/>
      <url>/post/fccc.html</url>
      
        <content type="html"><![CDATA[<p>扩增子分析较常用的软件是QIIME2，然而其生成的图并不美观，且无法下载，是不可能够达到发表要求的，因此需要我们通过其他方法将QIIME2生成的数据结果进行可视化。本文将记录相关的分析方法和示例。</p><h1 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h1><ul><li>特征表（Feature table），或者叫做OTU表，本教程中文件名为<strong>feature-table.tsv</strong>。该文件可由QIIME2生成，由biome格式转换而来。</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">F01F02F03F04F05F06H2<span class="built_in">_</span>1H2<span class="built_in">_</span>2H2<span class="built_in">_</span>3H2<span class="built_in">_</span>4H2<span class="built_in">_</span>5H2<span class="built_in">_</span>6I1<span class="built_in">_</span>1I1<span class="built_in">_</span>2I1<span class="built_in">_</span>3I1<span class="built_in">_</span>4I1<span class="built_in">_</span>5I1<span class="built_in">_</span>6</span><br><span class="line">3733c766539aba5e3e8f964a5ba390480.00.00.00.00.00.00.06.00.00.00.00.00.00.00.00.00.00.0</span><br><span class="line">547715c94c5b0c7ba2049658f732397b0.00.00.06.00.00.00.00.00.00.00.00.00.00.00.00.00.00.0</span><br><span class="line">708c69ff1252447c0709333304cd9bed0.00.00.00.00.00.00.00.00.00.05.00.00.00.00.00.00.00.0</span><br><span class="line">344ee69a9e51ffac2811294d3f04833d0.00.00.00.00.00.00.00.00.00.07.00.00.00.00.00.00.00.0</span><br><span class="line">d2e467b7867f49c25caaacdea5c7eb430.00.00.00.00.00.00.00.00.00.00.00.00.018.00.00.00.00.0</span><br><span class="line">4adc9b2b0866f620425d07d3ff7ca7e20.00.00.00.00.00.00.00.00.00.00.00.00.08.00.00.00.00.0</span><br><span class="line">0ffcdef70b9c1436126ba32d7a40d9610.00.00.00.00.00.00.00.00.00.00.00.00.00.031.00.00.00.0</span><br><span class="line">7170ce6c7520acc3c13189478aea54a853.00.00.00.00.00.037.025.00.00.00.00.023.021.00.00.00.00.0</span><br><span class="line">b624986630f3d33fbe0a21e66c46d1a50.00.00.00.00.00.00.00.09.00.00.00.00.00.00.00.00.00.0</span><br><span class="line">78305c3f5955043aba7de952c78859c90.00.022.057.073.055.00.00.00.082.073.00.00.00.043.0132.082.095.0</span><br><span class="line">60d9992b10f6dd4da4dc53826b7433f50.00.00.00.045.00.00.00.00.00.00.00.00.00.00.00.00.00.0</span><br><span class="line">33468988848349138af5cb1c23b550f20.02.011.012.00.00.00.00.00.00.00.00.00.00.00.00.00.00.0</span><br></pre></td></tr></table></figure><ul><li>样本元数据（Metadata），本教程中文件名为<strong>sample-metadata.tsv</strong>。该文件由分析者自己准备，用于描述各个样本的特征。</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  IDSamplesLayerDepthDepth2LocationPositionSite</span><br><span class="line">F01F010-5505 cmbsfTurnUpstreamF</span><br><span class="line">F02F025-91010 cmbsfTurnUpstreamF</span><br><span class="line">F03F039-131515 cmbsfTurnUpstreamF</span><br><span class="line">F04F0413-171515 cmbsfTurnUpstreamF</span><br><span class="line">F05F0517-222020 cmbsfTurnUpstreamF</span><br><span class="line">F06F0622-262525 cmbsfTurnUpstreamF</span><br><span class="line">H2<span class="built_in">_</span>1H2<span class="built_in">_</span>10-5505 cmbsfLeftUpstreamH2</span><br><span class="line">H2<span class="built_in">_</span>2H2<span class="built_in">_</span>25-101010 cmbsfLeftUpstreamH2</span><br><span class="line">H2<span class="built_in">_</span>3H2<span class="built_in">_</span>310-151515 cmbsfLeftUpstreamH2</span><br><span class="line">H2<span class="built_in">_</span>4H2<span class="built_in">_</span>415-202020 cmbsfLeftUpstreamH2</span><br><span class="line">H2<span class="built_in">_</span>5H2<span class="built_in">_</span>520-252525 cmbsfLeftUpstreamH2</span><br><span class="line">H2<span class="built_in">_</span>6H2<span class="built_in">_</span>625-293030 cmbsfLeftUpstreamH2</span><br><span class="line">I1<span class="built_in">_</span>1I1<span class="built_in">_</span>10-5505 cmbsfLeftUpstreamI1</span><br><span class="line">I1<span class="built_in">_</span>2I1<span class="built_in">_</span>25-101010 cmbsfLeftUpstreamI1</span><br><span class="line">I1<span class="built_in">_</span>3I1<span class="built_in">_</span>310-151515 cmbsfLeftUpstreamI1</span><br><span class="line">I1<span class="built_in">_</span>4I1<span class="built_in">_</span>415-202020 cmbsfLeftUpstreamI1</span><br><span class="line">I1<span class="built_in">_</span>5I1<span class="built_in">_</span>520-252525 cmbsfLeftUpstreamI1</span><br><span class="line">I1<span class="built_in">_</span>6I1<span class="built_in">_</span>625-293030 cmbsfLeftUpstreamI1</span><br></pre></td></tr></table></figure><ul><li>分类信息，本教程中文件名为<strong>taxonomy.tsv</strong>。该文件可由QIIME2生成。</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Feature IDTaxonConfidence</span><br><span class="line">9e24eb7a415db9a59586d17d0f49cbeaArchaea;Asgardarchaeota;Lokiarchaeia0.9999999998216045</span><br><span class="line">2a1d71d9fca92f9b3fc8f3126db076d0Bacteria;Proteobacteria;Gammaproteobacteria;Pseudomonadales;Pseudomonadaceae;Pseudomonas0.9881304182870394</span><br><span class="line">5d89868f1a1db1bc0b153eca96bbf7fdArchaea;Crenarchaeota;Nitrososphaeria;Nitrosopumilales;Nitrosopumilaceae0.9999999999859067</span><br><span class="line">cc957f2e853493d72875a6528ca83435Archaea;Crenarchaeota;Nitrososphaeria;Nitrosopumilales;Nitrosopumilaceae0.9999999999854506</span><br><span class="line">5179960239613d4c220e889075c6773eArchaea;Crenarchaeota;Nitrososphaeria;Nitrosopumilales;Nitrosopumilaceae;Candidatus Nitrosopumilus0.9558707678091154</span><br><span class="line">d62ab321b324b106e11961e79384f974Bacteria;Methylomirabilota;Methylomirabilia;Methylomirabilales;Methylomirabilaceae;wb1-A120.9999999975860316</span><br><span class="line">920aa9728ffb783cbc5721932cadda36Bacteria;Aerophobota;Aerophobia;Aerophobales;uncultured bacterium0.9999939600150409</span><br><span class="line">b5edcefd9280528ee377cb70dea8a6a7Archaea;Asgardarchaeota;Lokiarchaeia;uncultured archaeon0.99744406884555</span><br><span class="line">43b02d567fe419b94ad063081c7bba58Bacteria;Planctomycetota;Brocadiae;Brocadiales;Scalinduaceae;Candidatus Scalindua;uncultured bacterium0.9999941829048367</span><br><span class="line">0f1be1121dd04bc63b5ec4be0efc09b8Archaea;Asgardarchaeota;Lokiarchaeia;uncultured archaeon0.7884239553020901</span><br><span class="line">430d9115ca79bad01227bcc9c7694cf1Bacteria;Proteobacteria;Gammaproteobacteria;Xanthomonadales;Xanthomonadaceae;Thermomonas;uncultured bacterium0.7413321650122459</span><br><span class="line">0bf08973da329747d913d5c261f91944Bacteria;Aerophobota;Aerophobia;Aerophobales1.0000000000000024</span><br></pre></td></tr></table></figure><ul><li>进化树，本教程中文件名为<strong>tree.nwk</strong>。该文件可由QIIME2生成，Newick格式，是用代表序列构建的系统发育树。</li></ul><hr><h1 id="Alpha-diversity"><a href="#Alpha-diversity" class="headerlink" title="Alpha diversity"></a>Alpha diversity</h1><h2 id="Shannon、Richness、Simpson、Chao1、ACE、Pielou、PD-whole-tree指数的计算与可视化"><a href="#Shannon、Richness、Simpson、Chao1、ACE、Pielou、PD-whole-tree指数的计算与可视化" class="headerlink" title="Shannon、Richness、Simpson、Chao1、ACE、Pielou、PD_whole_tree指数的计算与可视化"></a>Shannon、Richness、Simpson、Chao1、ACE、Pielou、PD_whole_tree指数的计算与可视化</h2><h3 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h3><ul><li>feature-table.tsv</li><li>sample-metadata.tsv</li></ul><h3 id="第一步：计算多样性"><a href="#第一步：计算多样性" class="headerlink" title="第一步：计算多样性"></a>第一步：计算多样性</h3><p>将如下代码保存到文件”compute_alpha.R“中，并将程序与输入文件放在同一目录下。在终端中运行命令”Rscript compute_alpha.R“，得到输出文件”alpha.txt“。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env R</span></span><br><span class="line"><span class="comment">#定义函数</span></span><br><span class="line">library<span class="punctuation">(</span>picante<span class="punctuation">)</span>       <span class="comment">#picante 包加载时默认同时加载 vegan</span></span><br><span class="line"> </span><br><span class="line">alpha <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">,</span> tree <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> base <span class="operator">=</span> <span class="built_in">exp</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">        est <span class="operator">&lt;-</span> estimateR<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">        Richness <span class="operator">&lt;-</span> est<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">        Chao1 <span class="operator">&lt;-</span> est<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">        ACE <span class="operator">&lt;-</span> est<span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br><span class="line">        Shannon <span class="operator">&lt;-</span> diversity<span class="punctuation">(</span>x<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&#x27;shannon&#x27;</span><span class="punctuation">,</span> base <span class="operator">=</span> base<span class="punctuation">)</span></span><br><span class="line">        Simpson <span class="operator">&lt;-</span> diversity<span class="punctuation">(</span>x<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&#x27;simpson&#x27;</span><span class="punctuation">)</span>    <span class="comment">#Gini-Simpson 指数</span></span><br><span class="line">        Pielou <span class="operator">&lt;-</span> Shannon <span class="operator">/</span> <span class="built_in">log</span><span class="punctuation">(</span>Richness<span class="punctuation">,</span> base<span class="punctuation">)</span></span><br><span class="line">        goods_coverage <span class="operator">&lt;-</span> 1 <span class="operator">-</span> rowSums<span class="punctuation">(</span>x <span class="operator">==</span> <span class="number">1</span><span class="punctuation">)</span> <span class="operator">/</span> rowSums<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">        </span><br><span class="line">        result <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>Richness<span class="punctuation">,</span> Shannon<span class="punctuation">,</span> Simpson<span class="punctuation">,</span> Pielou<span class="punctuation">,</span> Chao1<span class="punctuation">,</span> ACE<span class="punctuation">,</span> goods_coverage<span class="punctuation">)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span><span class="built_in">is.null</span><span class="punctuation">(</span>tree<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">                PD_whole_tree <span class="operator">&lt;-</span> pd<span class="punctuation">(</span>x<span class="punctuation">,</span> tree<span class="punctuation">,</span> include.root <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">                <span class="built_in">names</span><span class="punctuation">(</span>PD_whole_tree<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="string">&#x27;PD_whole_tree&#x27;</span></span><br><span class="line">                result <span class="operator">&lt;-</span> cbind<span class="punctuation">(</span>result<span class="punctuation">,</span> PD_whole_tree<span class="punctuation">)</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        result</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#现在直接使用定义好的命令 alpha()，一步得到多种 Alpha 多样性指数</span></span><br><span class="line"><span class="comment">#加载 OTU 丰度表和进化树文件</span></span><br><span class="line">otu <span class="operator">&lt;-</span> read.delim<span class="punctuation">(</span><span class="string">&#x27;feature-table.tsv&#x27;</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&#x27;\t&#x27;</span><span class="punctuation">,</span> stringsAsFactors <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> check.names <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">otu <span class="operator">&lt;-</span> t<span class="punctuation">(</span>otu<span class="punctuation">)</span></span><br><span class="line">tree <span class="operator">&lt;-</span> read.tree<span class="punctuation">(</span><span class="string">&#x27;tree.nwk&#x27;</span><span class="punctuation">)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#不包含谱系多样性，无需指定进化树；Shannon 公式的 log 底数我们使用 2</span></span><br><span class="line"><span class="comment">##alpha_all &lt;- alpha(otu, base = 2)</span></span><br><span class="line"><span class="comment">#包含谱系多样性时，指定进化树文件；Shannon 公式的 log 底数我们使用 2</span></span><br><span class="line">alpha_all <span class="operator">&lt;-</span> alpha<span class="punctuation">(</span>otu<span class="punctuation">,</span> tree<span class="punctuation">,</span> base <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#输出保存在本地</span></span><br><span class="line">write.table<span class="punctuation">(</span>alpha_all<span class="punctuation">,</span> <span class="string">&#x27;alpha.txt&#x27;</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="第二步：制图"><a href="#第二步：制图" class="headerlink" title="第二步：制图"></a>第二步：制图</h3><p>这一步需要在Rstudio中运行如下命令，在终端里直接运行会报错（莫名其妙），最终输出7个PDF图形文件。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env R</span></span><br><span class="line"><span class="comment"># 基于github安装包，需要devtools，检测是否存在，不存在则安装</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>requireNamespace<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">,</span> quietly <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    install.packages<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载github包安装工具</span></span><br><span class="line">library<span class="punctuation">(</span>devtools<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测amplicon包是否安装，没有从源码安装</span></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>requireNamespace<span class="punctuation">(</span><span class="string">&quot;amplicon&quot;</span><span class="punctuation">,</span> quietly <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    install_github<span class="punctuation">(</span><span class="string">&quot;liaochenlanruo/amplicon&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 提示升级，选择3 None不升级；升级会容易出现报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># library加载包，suppress不显示消息和警告信息</span></span><br><span class="line">suppressWarnings<span class="punctuation">(</span>suppressMessages<span class="punctuation">(</span>library<span class="punctuation">(</span>amplicon<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录，根据实际情况设定</span></span><br><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;用户自己的工作目录&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取元数据，参数指定包括标题行(TRUE)，列名为1列，制表符分隔，无注释行，不转换为因子类型</span></span><br><span class="line">metadata <span class="operator">=</span> read.table<span class="punctuation">(</span><span class="string">&quot;sample-metadata.tsv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取第一步中vegan计算的6种alpha多样性指数</span></span><br><span class="line"><span class="comment">#alpha_div = read.table(&quot;alpha.txt&quot;, header=T, row.names=1, sep=&quot;\t&quot;, comment.char=&quot;&quot;)</span></span><br><span class="line">alpha_div <span class="operator">&lt;-</span> read.delim<span class="punctuation">(</span><span class="string">&quot;alpha.txt&quot;</span><span class="punctuation">,</span> <span class="built_in">quote</span><span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制各组香农指数分布，外层()可对保存的图形同时预览</span></span><br><span class="line"><span class="punctuation">(</span>p1 <span class="operator">=</span> alpha_boxplot<span class="punctuation">(</span>alpha_div<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&quot;Shannon&quot;</span><span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID <span class="operator">=</span> <span class="string">&quot;Depth2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##物种丰富度 Richness 指数</span></span><br><span class="line"><span class="punctuation">(</span>p2 <span class="operator">=</span> alpha_boxplot<span class="punctuation">(</span>alpha_div<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&quot;Richness&quot;</span><span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID <span class="operator">=</span> <span class="string">&quot;Depth2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Gini-Simpson 指数（我们平时常用的 Simpson 指数即为 Gini-Simpson 指数）</span></span><br><span class="line"><span class="punctuation">(</span>p3 <span class="operator">=</span> alpha_boxplot<span class="punctuation">(</span>alpha_div<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&quot;Simpson&quot;</span><span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID <span class="operator">=</span> <span class="string">&quot;Depth2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Chao1 指数</span></span><br><span class="line"><span class="punctuation">(</span>p4 <span class="operator">=</span> alpha_boxplot<span class="punctuation">(</span>alpha_div<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&quot;Chao1&quot;</span><span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID <span class="operator">=</span> <span class="string">&quot;Depth2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ACE 指数</span></span><br><span class="line"><span class="punctuation">(</span>p5 <span class="operator">=</span> alpha_boxplot<span class="punctuation">(</span>alpha_div<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&quot;ACE&quot;</span><span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID <span class="operator">=</span> <span class="string">&quot;Depth2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Shannon 均匀度（Pielou 均匀度）</span></span><br><span class="line"><span class="punctuation">(</span>p6 <span class="operator">=</span> alpha_boxplot<span class="punctuation">(</span>alpha_div<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&quot;Pielou&quot;</span><span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID <span class="operator">=</span> <span class="string">&quot;Depth2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##谱系多样性</span></span><br><span class="line"><span class="punctuation">(</span>p7 <span class="operator">=</span> alpha_boxplot<span class="punctuation">(</span>alpha_div<span class="punctuation">,</span> index <span class="operator">=</span> <span class="string">&quot;PD_whole_tree&quot;</span><span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID <span class="operator">=</span> <span class="string">&quot;Depth2&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存图片，指定图片为pdf格式方便后期修改，图片宽89毫米，高75毫米</span></span><br><span class="line">ggsave<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;alpha_boxplot_shannon.pdf&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> p1<span class="punctuation">,</span> width<span class="operator">=</span><span class="number">89</span><span class="punctuation">,</span> height<span class="operator">=</span><span class="number">75</span><span class="punctuation">,</span> units<span class="operator">=</span><span class="string">&quot;mm&quot;</span><span class="punctuation">)</span></span><br><span class="line">ggsave<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;alpha_boxplot_Richness.pdf&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> p2<span class="punctuation">,</span> width<span class="operator">=</span><span class="number">89</span><span class="punctuation">,</span> height<span class="operator">=</span><span class="number">75</span><span class="punctuation">,</span> units<span class="operator">=</span><span class="string">&quot;mm&quot;</span><span class="punctuation">)</span></span><br><span class="line">ggsave<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;alpha_boxplot_Simpson.pdf&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> p3<span class="punctuation">,</span> width<span class="operator">=</span><span class="number">89</span><span class="punctuation">,</span> height<span class="operator">=</span><span class="number">75</span><span class="punctuation">,</span> units<span class="operator">=</span><span class="string">&quot;mm&quot;</span><span class="punctuation">)</span></span><br><span class="line">ggsave<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;alpha_boxplot_Chao1.pdf&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> p4<span class="punctuation">,</span> width<span class="operator">=</span><span class="number">89</span><span class="punctuation">,</span> height<span class="operator">=</span><span class="number">75</span><span class="punctuation">,</span> units<span class="operator">=</span><span class="string">&quot;mm&quot;</span><span class="punctuation">)</span></span><br><span class="line">ggsave<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;alpha_boxplot_ACE.pdf&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> p5<span class="punctuation">,</span> width<span class="operator">=</span><span class="number">89</span><span class="punctuation">,</span> height<span class="operator">=</span><span class="number">75</span><span class="punctuation">,</span> units<span class="operator">=</span><span class="string">&quot;mm&quot;</span><span class="punctuation">)</span></span><br><span class="line">ggsave<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;alpha_boxplot_Pielou.pdf&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> p6<span class="punctuation">,</span> width<span class="operator">=</span><span class="number">89</span><span class="punctuation">,</span> height<span class="operator">=</span><span class="number">75</span><span class="punctuation">,</span> units<span class="operator">=</span><span class="string">&quot;mm&quot;</span><span class="punctuation">)</span></span><br><span class="line">ggsave<span class="punctuation">(</span>paste0<span class="punctuation">(</span><span class="string">&quot;alpha_boxplot_PD_whole_tree.pdf&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> p7<span class="punctuation">,</span> width<span class="operator">=</span><span class="number">89</span><span class="punctuation">,</span> height<span class="operator">=</span><span class="number">75</span><span class="punctuation">,</span> units<span class="operator">=</span><span class="string">&quot;mm&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=335536606&page=" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><hr><h2 id="物种多样性条形图的绘制"><a href="#物种多样性条形图的绘制" class="headerlink" title="物种多样性条形图的绘制"></a>物种多样性条形图的绘制</h2><h3 id="输入文件-1"><a href="#输入文件-1" class="headerlink" title="输入文件"></a>输入文件</h3><ul><li>处理后的Feature Table</li></ul><p>从QIIME2可视化网站上下载的各level的物种丰度表，此处以level-2（Phylum水平）为例，命名为“level-2.csv”。该文件可以用excel或WPS打开，然后复制所有内容至一个新建的名字为“level-2.txt”的文本文档中，删除无关的行或列（如路径），只保留丰度数据，并保存。格式如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">indexspecies1species2species3species4</span><br><span class="line">Sample1081521165</span><br><span class="line">Sample2129710971315</span><br><span class="line">...</span><br><span class="line">Samplex154629281011</span><br></pre></td></tr></table></figure><ul><li>sample-metadata.tsv</li><li>taxonomy.tsv</li></ul><h3 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h3><p>以下代码在Rstudio中逐步输入运行</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;用户自己的路径&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>requireNamespace<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">,</span> quietly<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    install.packages<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>devtools<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>requireNamespace<span class="punctuation">(</span><span class="string">&quot;amplicon&quot;</span><span class="punctuation">,</span> quietly<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    install_github<span class="punctuation">(</span><span class="string">&quot;microbiota/amplicon&quot;</span><span class="punctuation">)</span></span><br><span class="line">suppressWarnings<span class="punctuation">(</span>suppressMessages<span class="punctuation">(</span>library<span class="punctuation">(</span>amplicon<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件读取元数据，特征表和物种注释</span></span><br><span class="line">metadata<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;sample-metadata.tsv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">taxonomy<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;taxonomy.tsv&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">otutab2<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;level-2.txt&quot;</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span> row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> comment.char<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span> stringsAsFactors<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#堆叠柱状图。以分组均值绘制，展示丰度最高的19个门，其余归类为其他(Other)</span></span><br><span class="line"><span class="comment"># 门水平物种组成表和元数据作为输入，分组列名为Group，默认显示前19个分类，按丰度排序</span></span><br><span class="line">otutab2<span class="operator">=</span>t<span class="punctuation">(</span>otutab2<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">(</span>ps<span class="operator">=</span>tax_stackplot<span class="punctuation">(</span>otutab2<span class="punctuation">,</span> metadata<span class="punctuation">,</span> groupID<span class="operator">=</span><span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> topN<span class="operator">=</span><span class="number">20</span><span class="punctuation">,</span> style<span class="operator">=</span><span class="string">&quot;sample&quot;</span><span class="punctuation">,</span> sorted<span class="operator">=</span><span class="string">&quot;abundance&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ps2 <span class="operator">=</span> ps <span class="operator">+</span> scale_fill_manual<span class="punctuation">(</span>values <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;#1f77b4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#aec7e8&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff7f0e&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ffbb78&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#2ca02c&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#98df8a&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#d62728&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#ff9896&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9467bd&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c5b0d5&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#8c564b&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c49c94&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#e377c2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#f7b6d2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#7f7f7f&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#c7c7c7&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#bcbd22&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#dbdb8d&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#17becf&quot;</span><span class="punctuation">,</span> <span class="string">&quot;#9edae5&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>axis.text.x <span class="operator">=</span> element_text<span class="punctuation">(</span>angle <span class="operator">=</span> <span class="number">90</span><span class="punctuation">,</span> hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">,</span> vjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ps2</span><br></pre></td></tr></table></figure><h3 id="演示视频-1"><a href="#演示视频-1" class="headerlink" title="演示视频"></a>演示视频</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=633107204&page=" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><hr><h1 id="Beta多样性"><a href="#Beta多样性" class="headerlink" title="Beta多样性"></a>Beta多样性</h1><h2 id="NMDS分析及可视化"><a href="#NMDS分析及可视化" class="headerlink" title="NMDS分析及可视化"></a>NMDS分析及可视化</h2><h3 id="输入文件-2"><a href="#输入文件-2" class="headerlink" title="输入文件"></a>输入文件</h3><ul><li>feature-table.tsv</li><li>sample-metadata.tsv</li></ul><h3 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h3><p>在Rstudio中运行如下代码：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;用户的工作目录&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&quot;vegan&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取数据，一份otu.table文件和一份分组信息文件</span></span><br><span class="line">otu <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;feature-table.tsv&quot;</span><span class="punctuation">,</span>row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span>sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span>check.names<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">design <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;sample-metadata.tsv&quot;</span><span class="punctuation">,</span>header<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">,</span>sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">,</span>row.names<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span>check.names<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据调整为列名是OTU，行名是样本名</span></span><br><span class="line">otu<span class="operator">=</span>t<span class="punctuation">(</span>otu<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准化，当然method有很多，可以通过?decostand查看其它method</span></span><br><span class="line">vare.hel<span class="operator">&lt;-</span>decostand<span class="punctuation">(</span>otu<span class="punctuation">,</span>method<span class="operator">=</span><span class="string">&quot;hellinger&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算Bray-curtis距离矩阵</span></span><br><span class="line">vare.dis <span class="operator">&lt;-</span> vegdist<span class="punctuation">(</span>vare.hel<span class="punctuation">,</span>method<span class="operator">=</span><span class="string">&quot;bray&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用NMDS的方法</span></span><br><span class="line">vare.mds <span class="operator">&lt;-</span> metaMDS<span class="punctuation">(</span>vare.hel<span class="punctuation">,</span>distance <span class="operator">=</span> <span class="string">&quot;bray&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先提取前两轴坐标</span></span><br><span class="line">point <span class="operator">=</span> scores<span class="punctuation">(</span>vare.mds<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将分组文件和得分文件合并</span></span><br><span class="line">index <span class="operator">=</span> merge<span class="punctuation">(</span>design<span class="punctuation">,</span> point<span class="punctuation">,</span>by<span class="operator">=</span><span class="string">&quot;row.names&quot;</span><span class="punctuation">,</span><span class="built_in">all</span><span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看Stress值</span></span><br><span class="line"><span class="comment"># Stress值是反映模型合适程度的指标，NMDS会多次打乱数据计算Stress值，直到找到最合适的模型，也就是最低的Stress值；理想状况下，Stress值为0，一般Stress值低于0.1较为合理。</span></span><br><span class="line">vare.mds</span><br><span class="line"></span><br><span class="line"><span class="comment"># Stress:     0.07498046 #记住这个数字，后面会打印在图中</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显着性检验；anosim本质是基于排名的算法，更加适合NMDS，这里基于元数据中的深度（Depth）计算</span></span><br><span class="line">anosim.result<span class="operator">&lt;-</span>anosim<span class="punctuation">(</span>vare.dis<span class="punctuation">,</span> design<span class="operator">$</span>Depth<span class="punctuation">,</span>permutations <span class="operator">=</span><span class="number">999</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">summary<span class="punctuation">(</span>anosim.result<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ANOSIM statistic R: 0.8036 #记住这个数字，后面会打印在图中</span></span><br><span class="line"><span class="comment">#       Significance: 0.001 #记住这个数字，后面会打印在图中</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tiff输出图形，适合大部分出版刊物，入门级别分辩率300,18*14的长宽；</span></span><br><span class="line"><span class="comment">#tiff(file=&quot;beta_bray_NMDS.tiff&quot;, res = 300, compression =&quot;none&quot;, width=180,height=140,units= &quot;mm&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在这里我选择输出为PDF，后续可以进一步的编辑</span></span><br><span class="line">pdf<span class="punctuation">(</span>file<span class="operator">=</span><span class="string">&quot;beta_bray_NMDS.pdf&quot;</span><span class="punctuation">,</span> width<span class="operator">=</span><span class="number">180</span><span class="punctuation">,</span>height<span class="operator">=</span><span class="number">140</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#开始出图，代码如下：</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&quot;ggplot2&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">p <span class="operator">=</span> ggplot<span class="punctuation">(</span>index<span class="punctuation">,</span> aes<span class="punctuation">(</span>x<span class="operator">=</span>NMDS1<span class="punctuation">,</span> y<span class="operator">=</span>NMDS2<span class="punctuation">,</span> color<span class="operator">=</span>as.factor<span class="punctuation">(</span>Depth<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">      geom_point<span class="punctuation">(</span>size<span class="operator">=</span><span class="number">0</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">     <span class="comment">#scale_colour_manual(values = c(&quot;red&quot;,&quot;blue&quot;, &quot;green&quot;)) +#这行代码是用于自定义颜色的，有几个组就用几个颜色，少于3个组的话不支持自定义</span></span><br><span class="line">     labs<span class="punctuation">(</span>x<span class="operator">=</span>paste<span class="punctuation">(</span><span class="string">&quot;NMDS1&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> y<span class="operator">=</span>paste<span class="punctuation">(</span><span class="string">&quot;NMDS2&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> title<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#置信区间当然要加上，有三种方式，线条类型也可以更改。将上面得到的三个指标在图中更换Stress，R，p。</span></span><br><span class="line"></span><br><span class="line">p<span class="operator">+</span>stat_ellipse<span class="punctuation">(</span>type <span class="operator">=</span> <span class="string">&quot;t&quot;</span><span class="punctuation">,</span> linetype <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> level <span class="operator">=</span> <span class="number">0.95</span><span class="punctuation">,</span> show.legend <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="operator">+</span></span><br><span class="line">    annotate<span class="punctuation">(</span><span class="string">&quot;text&quot;</span><span class="punctuation">,</span>x<span class="operator">=</span><span class="operator">-</span><span class="number">2.5</span><span class="punctuation">,</span>y<span class="operator">=</span><span class="operator">-</span><span class="number">1.25</span><span class="punctuation">,</span>parse<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span>size<span class="operator">=</span><span class="number">4</span><span class="punctuation">,</span>label<span class="operator">=</span><span class="string">&quot;&#x27;R: &#x27;*0.8036&quot;</span><span class="punctuation">,</span>family<span class="operator">=</span><span class="string">&quot;serif&quot;</span><span class="punctuation">,</span>fontface<span class="operator">=</span><span class="string">&quot;italic&quot;</span><span class="punctuation">,</span>colour<span class="operator">=</span><span class="string">&quot;darkred&quot;</span><span class="punctuation">,</span>hjust <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span><span class="operator">+</span></span><br><span class="line">    annotate<span class="punctuation">(</span><span class="string">&quot;text&quot;</span><span class="punctuation">,</span>x<span class="operator">=</span><span class="operator">-</span><span class="number">2.5</span><span class="punctuation">,</span>y<span class="operator">=</span><span class="operator">-</span><span class="number">1.35</span><span class="punctuation">,</span>parse<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span>size<span class="operator">=</span><span class="number">4</span><span class="punctuation">,</span>label<span class="operator">=</span><span class="string">&quot;&#x27;p: &#x27;*0.001&quot;</span><span class="punctuation">,</span>family<span class="operator">=</span><span class="string">&quot;serif&quot;</span><span class="punctuation">,</span>fontface<span class="operator">=</span><span class="string">&quot;italic&quot;</span><span class="punctuation">,</span>colour<span class="operator">=</span><span class="string">&quot;darkred&quot;</span><span class="punctuation">,</span>hjust <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span><span class="operator">+</span></span><br><span class="line">    annotate<span class="punctuation">(</span><span class="string">&quot;text&quot;</span><span class="punctuation">,</span>x<span class="operator">=</span><span class="operator">-</span><span class="number">2.5</span><span class="punctuation">,</span>y<span class="operator">=</span><span class="operator">-</span><span class="number">1.45</span><span class="punctuation">,</span>parse<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span>size<span class="operator">=</span><span class="number">4</span><span class="punctuation">,</span>label<span class="operator">=</span><span class="string">&quot;&#x27;Stress: &#x27;*0.075&quot;</span><span class="punctuation">,</span>family<span class="operator">=</span><span class="string">&quot;serif&quot;</span><span class="punctuation">,</span>fontface<span class="operator">=</span><span class="string">&quot;italic&quot;</span><span class="punctuation">,</span>colour<span class="operator">=</span><span class="string">&quot;darkred&quot;</span><span class="punctuation">,</span>hjust <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span> <span class="operator">+</span> geom_point<span class="punctuation">(</span>aes<span class="punctuation">(</span>x<span class="operator">=</span>NMDS1<span class="punctuation">,</span> y<span class="operator">=</span>NMDS2<span class="punctuation">,</span> shape<span class="operator">=</span>Site<span class="punctuation">)</span><span class="punctuation">,</span> size<span class="operator">=</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">+</span></span><br><span class="line"><span class="comment">#scale_shape_manual(values = c(15, 19, 17))+#这行代码是用于自定义形状的，有几个组就用几个形状，少于3个组的话不支持自定义</span></span><br><span class="line">    theme_classic<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="演示视频-2"><a href="#演示视频-2" class="headerlink" title="演示视频"></a>演示视频</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=548008577&page=" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://github.com/YongxinLiu/MicrobiomeStatPlot">https://github.com/YongxinLiu/MicrobiomeStatPlot</a></li></ul><p><font color="#FF0000"><ruby><b>敬告</b>：使用文中脚本请引用本文网址，请尊重本人的劳动成果，谢谢！<rt><b>Notice</b>: When you use the scripts in this article, please cite the link of this webpage. Thank you!</rt></ruby></font></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扩增子 </tag>
            
            <tag> SY179 </tag>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绘图自定义colors</title>
      <link href="/post/6e6b.html"/>
      <url>/post/6e6b.html</url>
      
        <content type="html"><![CDATA[<p>在绘图过程中经常需要为不同的对象分配不同的color，然而如何得到对比度高又不唐突的color组合是一门艺术。对于不懂美术的理工男来说，希望有现成的color sets可用。</p><span id="more"></span><p>实际上，D3.js中给出了两套color sets方案，分别用于10和20个对象的color。colors代码（16进制）和效果如下：</p><h1 id="Category-10"><a href="#Category-10" class="headerlink" title="Category 10"></a>Category 10</h1><p><svg width="500" height="500"><rect x="75" y="0" width="460" height="46" fill="#1f77b4"></rect><rect x="75" y="46" width="460" height="46" fill="#ff7f0e"></rect><rect x="75" y="92" width="460" height="46" fill="#2ca02c"></rect><rect x="75" y="138" width="460" height="46" fill="#d62728"></rect><rect x="75" y="184" width="460" height="46" fill="#9467bd"></rect><rect x="75" y="230" width="460" height="46" fill="#8c564b"></rect><rect x="75" y="276" width="460" height="46" fill="#e377c2"></rect><rect x="75" y="322" width="460" height="46" fill="#7f7f7f"></rect><rect x="75" y="368" width="460" height="46" fill="#bcbd22"></rect><rect x="75" y="414" width="460" height="46" fill="#17becf"></rect><text x="0" y="20">#1f77b4  </text><text x="0" y="66">#ff7f0e  </text><text x="0" y="112">#2ca02c  </text><text x="0" y="158">#d62728  </text><text x="0" y="204">#9467bd  </text><text x="0" y="250">#8c564b  </text><text x="0" y="296">#e377c2  </text><text x="0" y="342">#7f7f7f  </text><text x="0" y="388">#bcbd22  </text><text x="0" y="434">#17becf  </text></svg></p><h1 id="Category-20a"><a href="#Category-20a" class="headerlink" title="Category 20a"></a>Category 20a</h1><p><svg width="500" height="500"><rect x="75" y="0" width="460" height="23" fill="#1f77b4"></rect><rect x="75" y="23" width="460" height="23" fill="#aec7e8"></rect><rect x="75" y="46" width="460" height="23" fill="#ff7f0e"></rect><rect x="75" y="69" width="460" height="23" fill="#ffbb78"></rect><rect x="75" y="92" width="460" height="23" fill="#2ca02c"></rect><rect x="75" y="115" width="460" height="23" fill="#98df8a"></rect><rect x="75" y="138" width="460" height="23" fill="#d62728"></rect><rect x="75" y="161" width="460" height="23" fill="#ff9896"></rect><rect x="75" y="184" width="460" height="23" fill="#9467bd"></rect><rect x="75" y="207" width="460" height="23" fill="#c5b0d5"></rect><rect x="75" y="230" width="460" height="23" fill="#8c564b"></rect><rect x="75" y="253" width="460" height="23" fill="#c49c94"></rect><rect x="75" y="276" width="460" height="23" fill="#e377c2"></rect><rect x="75" y="299" width="460" height="23" fill="#f7b6d2"></rect><rect x="75" y="322" width="460" height="23" fill="#7f7f7f"></rect><rect x="75" y="345" width="460" height="23" fill="#c7c7c7"></rect><rect x="75" y="368" width="460" height="23" fill="#bcbd22"></rect><rect x="75" y="391" width="460" height="23" fill="#dbdb8d"></rect><rect x="75" y="414" width="460" height="23" fill="#17becf"></rect><rect x="75" y="437" width="460" height="23" fill="#9edae5"></rect><text x="0" y="20">#1f77b4  </text><text x="0" y="43">#aec7e8  </text><text x="0" y="66">#ff7f0e  </text><text x="0" y="89">#ffbb78  </text><text x="0" y="112">#2ca02c  </text><text x="0" y="135">#98df8a  </text><text x="0" y="158">#d62728  </text><text x="0" y="181">#ff9896  </text><text x="0" y="204">#9467bd  </text><text x="0" y="227">#c5b0d5  </text><text x="0" y="250">#8c564b  </text><text x="0" y="273">#c49c94  </text><text x="0" y="296">#e377c2  </text><text x="0" y="319">#f7b6d2  </text><text x="0" y="342">#7f7f7f  </text><text x="0" y="365">#c7c7c7  </text><text x="0" y="388">#bcbd22  </text><text x="0" y="411">#dbdb8d  </text><text x="0" y="434">#17becf  </text><text x="0" y="457">#9edae5  </text></svg></p><h1 id="Category-20b"><a href="#Category-20b" class="headerlink" title="Category 20b"></a>Category 20b</h1><p><svg width="500" height="500"><rect x="75" y="0" width="460" height="23" fill="#393b79"></rect><rect x="75" y="23" width="460" height="23" fill="#5254a3"></rect><rect x="75" y="46" width="460" height="23" fill="#6b6ecf"></rect><rect x="75" y="69" width="460" height="23" fill="#9c9ede"></rect><rect x="75" y="92" width="460" height="23" fill="#637939"></rect><rect x="75" y="115" width="460" height="23" fill="#8ca252"></rect><rect x="75" y="138" width="460" height="23" fill="#b5cf6b"></rect><rect x="75" y="161" width="460" height="23" fill="#cedb9c"></rect><rect x="75" y="184" width="460" height="23" fill="#8c6d31"></rect><rect x="75" y="207" width="460" height="23" fill="#bd9e39"></rect><rect x="75" y="230" width="460" height="23" fill="#e7ba52"></rect><rect x="75" y="253" width="460" height="23" fill="#e7cb94"></rect><rect x="75" y="276" width="460" height="23" fill="#843c39"></rect><rect x="75" y="299" width="460" height="23" fill="#ad494a"></rect><rect x="75" y="322" width="460" height="23" fill="#d6616b"></rect><rect x="75" y="345" width="460" height="23" fill="#e7969c"></rect><rect x="75" y="368" width="460" height="23" fill="#7b4173"></rect><rect x="75" y="391" width="460" height="23" fill="#a55194"></rect><rect x="75" y="414" width="460" height="23" fill="#ce6dbd"></rect><rect x="75" y="437" width="460" height="23" fill="#de9ed6"></rect><text x="0" y="20">#393b79  </text><text x="0" y="43">#5254a3  </text><text x="0" y="66">#6b6ecf  </text><text x="0" y="89">#9c9ede  </text><text x="0" y="112">#637939  </text><text x="0" y="135">#8ca252  </text><text x="0" y="158">#b5cf6b  </text><text x="0" y="181">#cedb9c  </text><text x="0" y="204">#8c6d31  </text><text x="0" y="227">#bd9e39  </text><text x="0" y="250">#e7ba52  </text><text x="0" y="273">#e7cb94  </text><text x="0" y="296">#843c39  </text><text x="0" y="319">#ad494a  </text><text x="0" y="342">#d6616b  </text><text x="0" y="365">#e7969c  </text><text x="0" y="388">#7b4173  </text><text x="0" y="411">#a55194  </text><text x="0" y="434">#ce6dbd  </text><text x="0" y="457">#de9ed6  </text></svg></p><h1 id="Category-20c"><a href="#Category-20c" class="headerlink" title="Category 20c"></a>Category 20c</h1><p><svg width="500" height="500"><rect x="75" y="0" width="460" height="23" fill="#3182bd"></rect><rect x="75" y="23" width="460" height="23" fill="#6baed6"></rect><rect x="75" y="46" width="460" height="23" fill="#9ecae1"></rect><rect x="75" y="69" width="460" height="23" fill="#c6dbef"></rect><rect x="75" y="92" width="460" height="23" fill="#e6550d"></rect><rect x="75" y="115" width="460" height="23" fill="#fd8d3c"></rect><rect x="75" y="138" width="460" height="23" fill="#fdae6b"></rect><rect x="75" y="161" width="460" height="23" fill="#fdd0a2"></rect><rect x="75" y="184" width="460" height="23" fill="#31a354"></rect><rect x="75" y="207" width="460" height="23" fill="#74c476"></rect><rect x="75" y="230" width="460" height="23" fill="#a1d99b"></rect><rect x="75" y="253" width="460" height="23" fill="#c7e9c0"></rect><rect x="75" y="276" width="460" height="23" fill="#756bb1"></rect><rect x="75" y="299" width="460" height="23" fill="#9e9ac8"></rect><rect x="75" y="322" width="460" height="23" fill="#bcbddc"></rect><rect x="75" y="345" width="460" height="23" fill="#dadaeb"></rect><rect x="75" y="368" width="460" height="23" fill="#636363"></rect><rect x="75" y="391" width="460" height="23" fill="#969696"></rect><rect x="75" y="414" width="460" height="23" fill="#bdbdbd"></rect><rect x="75" y="437" width="460" height="23" fill="#d9d9d9"></rect><text x="0" y="20">#3182bd  </text><text x="0" y="43">#6baed6  </text><text x="0" y="66">#9ecae1  </text><text x="0" y="89">#c6dbef  </text><text x="0" y="112">#e6550d  </text><text x="0" y="135">#fd8d3c  </text><text x="0" y="158">#fdae6b  </text><text x="0" y="181">#fdd0a2  </text><text x="0" y="204">#31a354  </text><text x="0" y="227">#74c476  </text><text x="0" y="250">#a1d99b  </text><text x="0" y="273">#c7e9c0  </text><text x="0" y="296">#756bb1  </text><text x="0" y="319">#9e9ac8  </text><text x="0" y="342">#bcbddc  </text><text x="0" y="365">#dadaeb  </text><text x="0" y="388">#636363  </text><text x="0" y="411">#969696  </text><text x="0" y="434">#bdbdbd  </text><text x="0" y="457">#d9d9d9  </text></svg></p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nature Protocols投稿经验</title>
      <link href="/post/7ceb.html"/>
      <url>/post/7ceb.html</url>
      
        <content type="html"><![CDATA[<h1 id="PGCGAP投稿过程"><a href="#PGCGAP投稿过程" class="headerlink" title="PGCGAP投稿过程"></a>PGCGAP投稿过程</h1><h2 id="第一次投稿"><a href="#第一次投稿" class="headerlink" title="第一次投稿"></a>第一次投稿</h2><h3 id="类型："><a href="#类型：" class="headerlink" title="类型："></a>类型：</h3><ul><li>Protocols</li></ul><h3 id="周期："><a href="#周期：" class="headerlink" title="周期："></a>周期：</h3><ul><li>~1周</li></ul><h3 id="节点："><a href="#节点：" class="headerlink" title="节点："></a>节点：</h3><ul><li><strong>Submitted</strong>：2020.01.08</li><li><strong>Editor Assigned</strong>：2020.01.13</li><li><strong>Manuscript under consideration</strong>：2020.01.13</li><li><strong>Manuscript under editorial consideration</strong>：2020.01.15</li><li><strong>Rejection</strong>：2020.01.15</li></ul><h3 id="拒稿原因："><a href="#拒稿原因：" class="headerlink" title="拒稿原因："></a>拒稿原因：</h3><p>欲在NP上发表的方法应该在至少一篇primary research artical中使用过，已证明其正确性。而彼时PGCGAP并未在任何已发表的文章中使用过，因此不适宜发表。NP拒稿有两种：其一，直接拒绝；其二，暂时拒绝。编辑建议将稿件投到其开放平台《protocol exchange》上，待符合要求以后可再次投稿。</p><h3 id="积累："><a href="#积累：" class="headerlink" title="积累："></a>积累：</h3><p>一年多的时间，PGCGAP更新了十几个版本，protocol也更新了5个版本。陆陆续续的也出了5篇引用PGCGAP的文章，其中两篇自引（NP要求自引）和三篇他引。</p><h2 id="第二次投稿"><a href="#第二次投稿" class="headerlink" title="第二次投稿"></a>第二次投稿</h2><h3 id="类型：-1"><a href="#类型：-1" class="headerlink" title="类型："></a>类型：</h3><ul><li>Protocols</li></ul><h3 id="周期：-1"><a href="#周期：-1" class="headerlink" title="周期："></a>周期：</h3><ul><li>~ 50d</li></ul><h3 id="节点：-1"><a href="#节点：-1" class="headerlink" title="节点："></a>节点：</h3><ul><li><strong>Submitted</strong>：2021.04.25</li><li><strong>Editor Assigned</strong>：2021.04.27</li><li><strong>Manuscript under consideration</strong>：2021.04.27</li><li><strong>First Feedback</strong>：2021.05.24，编辑提出PGCGAP的部分而非全部模块在primary paper中引用，并让我们回复是否有primary paper引用了所有的模块。</li><li><strong>Reply</strong>：2021.05.16，向编辑说明了其他模块的情况。</li><li><strong>Manuscript under editorial consideration</strong>：2021.06.03</li><li><strong>Editor Decision Started</strong>：2021.06.07</li><li><strong>Decision sent to author</strong>：2021.06.15</li></ul>]]></content>
      
      
      <categories>
          
          <category> 投稿 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投稿经验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩增子分析--计算随机过程和决定性过程比例</title>
      <link href="/post/1755.html"/>
      <url>/post/1755.html</url>
      
        <content type="html"><![CDATA[<p>确定性过程（deterministic processes）和随机性过程（stochastic processes)是两个影响微生物群落结构系统发育组装的重要过程，本文介绍计算二者所占比例的方法。</p><span id="more"></span><h1 id="1-软件"><a href="#1-软件" class="headerlink" title="1. 软件"></a><font color=#FF0000 >1. 软件</font></h1><ul><li>NST</li><li>iCAMP</li><li>ape 用于读取进化树文件</li><li>picante</li></ul><h1 id="2-文件准备"><a href="#2-文件准备" class="headerlink" title="2. 文件准备"></a><font color=#FF0000 >2. 文件准备</font></h1><h2 id="2-1-Feature-Table"><a href="#2-1-Feature-Table" class="headerlink" title="2.1 Feature Table"></a><font color=#FF0000 >2.1 Feature Table</font></h2><p>行为OTUs&#x2F;ASVs，列为样本。</p><table><thead><tr><th>TaxonID</th><th>Sample 1</th><th>Sample 2</th><th>Sample 3</th><th>Sample 4</th></tr></thead><tbody><tr><td>OTU1</td><td>232.0</td><td>209.0</td><td>349.0</td><td>256.0</td></tr><tr><td>OTU2</td><td>75.0</td><td>35.0</td><td>44.0</td><td>0.0</td></tr><tr><td>OTU3</td><td>237.0</td><td>224.0</td><td>291.0</td><td>353.0</td></tr><tr><td>OTU4</td><td>371.0</td><td>80.0</td><td>319.0</td><td>345.0</td></tr></tbody></table><h2 id="2-2-Group-File"><a href="#2-2-Group-File" class="headerlink" title="2.2 Group File"></a><font color=#FF0000 >2.2 Group File</font></h2><p>该文件描述了所有样本的分组情况，如实验组和对照组，或者其他分组。</p><table><thead><tr><th>Sample_ID</th><th>Group</th></tr></thead><tbody><tr><td>Sample 1</td><td>Group x</td></tr><tr><td>Sample 2</td><td>Group x</td></tr><tr><td>Sample 3</td><td>Group y</td></tr><tr><td>Sample 4</td><td>Group y</td></tr><tr><td>…</td><td>…</td></tr></tbody></table><h2 id="2-3-Tree-File"><a href="#2-3-Tree-File" class="headerlink" title="2.3 Tree File"></a><font color=#FF0000 >2.3 Tree File</font></h2><p>包含Feature table中所有OTUs&#x2F;ASVs的系统发育树文件，理想条件下仅包含Feature table中的OTUs&#x2F;ASVs，不过大部分情况下还会包含数据库中的一些物种，在随后的分析中需要去除多余的物种（后续会讲到）。</p><h1 id="3-开始分析"><a href="#3-开始分析" class="headerlink" title="3. 开始分析"></a><font color=#FF0000 >3. 开始分析</font></h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="comment">#!/usr/bin/env R</span></span><br><span class="line"><span class="comment"># version 20200919</span></span><br><span class="line"><span class="comment"># Step 1. 文件、路径和参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定包含输入文件的目录路径，注意区分Windows和Linux的路径写法</span></span><br><span class="line">wd<span class="operator">=</span><span class="string">&quot;/mnt/e/Researches/lujia16S/Analysis_20200907/exported-feature-table_2k_abund22/Raup_Crick&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定结果文件的保存路径</span></span><br><span class="line">save.wd<span class="operator">=</span><span class="string">&quot;/mnt/e/Researches/lujia16S/Analysis_20200907/exported-feature-table_2k_abund22/Raup_Crick/Result2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建文件保存路径</span></span><br><span class="line">dir.create<span class="punctuation">(</span>save.wd<span class="punctuation">,</span> recursive <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定Feature table（OTU表）的文件名</span></span><br><span class="line">com.file<span class="operator">=</span><span class="string">&quot;feature-table.tsv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定样本分组文件，每行为一个样本</span></span><br><span class="line">group.file<span class="operator">=</span><span class="string">&quot;treatment.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定NWK格式的系统发育树文件</span></span><br><span class="line">tree.file<span class="operator">=</span><span class="string">&quot;tree.nwk&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置并行运算使用的线程数</span></span><br><span class="line">nworker<span class="operator">=</span><span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># randomization time for null model analysis. 真实分析的时候一般设置为1000，如果测试的话可以设20</span></span><br><span class="line">rand.time<span class="operator">=</span><span class="number">999</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出文件的前缀名，随便设置</span></span><br><span class="line">prefix<span class="operator">=</span><span class="string">&quot;Lujia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2. 加载R包</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保已经安装过所需的R包</span></span><br><span class="line"><span class="comment">#install.packages(&quot;NST&quot;) </span></span><br><span class="line"></span><br><span class="line">library<span class="punctuation">(</span>ape<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>iCAMP<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>NST<span class="punctuation">)</span> <span class="comment"># need to be NST &gt;=3.0.3</span></span><br><span class="line">library<span class="punctuation">(</span>picante<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 3. 加载数据并匹配IDs</span></span><br><span class="line"></span><br><span class="line">setwd<span class="punctuation">(</span>wd<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读入Feature Table，注意自己文件的列与列之间的分隔符是什么，制表符用sep = &quot;\t&quot;，逗号用sep = &quot;,&quot;</span></span><br><span class="line">comm<span class="operator">=</span>t<span class="punctuation">(</span>read.table<span class="punctuation">(</span>com.file<span class="punctuation">,</span>header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> as.is <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> stringsAsFactors <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读入分组文件，同样注意设置分隔符</span></span><br><span class="line">group<span class="operator">=</span>read.table<span class="punctuation">(</span>group.file<span class="punctuation">,</span> header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> as.is <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> stringsAsFactors <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果tree中的OTUs和Feature Table中的OTUs一一对应，可以直接用下面一个命令读入tree（注意去掉###），否则的话则运行下面LHL加入的3行命令</span></span><br><span class="line"><span class="comment">###tree=ape::read.tree(file = tree.file) # if you have tree</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下3行是LHL加入的</span></span><br><span class="line">phy<span class="operator">&lt;-</span>read.tree<span class="punctuation">(</span>tree.file<span class="punctuation">)</span><span class="comment"># 读入树文件</span></span><br><span class="line">prune_tree<span class="operator">&lt;-</span>prune.sample<span class="punctuation">(</span>comm<span class="punctuation">,</span>phy<span class="punctuation">)</span><span class="comment"># 使树文件和OTU表文件一一对齐</span></span><br><span class="line">tree<span class="operator">=</span>prune_tree <span class="comment"># 此刻的Tree干净了，可用于后续分析而不会报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下命令检测Feature Table中的样本名称是否与分组文件中的样本名一一对应</span></span><br><span class="line">samp.ck<span class="operator">=</span>NST<span class="operator">::</span>match.name<span class="punctuation">(</span>rn.list<span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>comm<span class="operator">=</span>comm<span class="punctuation">,</span>group<span class="operator">=</span>group<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">comm<span class="operator">=</span>samp.ck<span class="operator">$</span>comm</span><br><span class="line">comm<span class="operator">=</span>comm<span class="punctuation">[</span><span class="punctuation">,</span>colSums<span class="punctuation">(</span>comm<span class="punctuation">)</span><span class="operator">&gt;</span><span class="number">0</span><span class="punctuation">,</span>drop<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">]</span></span><br><span class="line">group<span class="operator">=</span>samp.ck<span class="operator">$</span>group</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下命令检测Feature Table中的OTUs名称是否与Tree中的OTUs名一一对应</span></span><br><span class="line">tax.ck<span class="operator">=</span>NST<span class="operator">::</span>match.name<span class="punctuation">(</span>cn.list <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>comm<span class="operator">=</span>comm<span class="punctuation">)</span><span class="punctuation">,</span>tree.list <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>tree<span class="operator">=</span>tree<span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment"># if you have tree</span></span><br><span class="line">comm<span class="operator">=</span>tax.ck<span class="operator">$</span>comm</span><br><span class="line">tree<span class="operator">=</span>tax.ck<span class="operator">$</span>tree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 4. Grouping way and metacommunity seting</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择分组，如果拥有多种分组方式，每次运行时选择其中的一组。此处选择的时分组文件中的第二列</span></span><br><span class="line">groupi<span class="operator">=</span>group<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span>drop<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新定义输出文件的前缀，以分组的名称来命名，此处以分组文件第二列的表头“Group”为前缀</span></span><br><span class="line">prefixi<span class="operator">=</span>paste0<span class="punctuation">(</span>prefix<span class="punctuation">,</span><span class="string">&quot;.Group&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if treatment and control are from different metacommunities, you may set meta.groupi=groupi，默认为NULL</span></span><br><span class="line"><span class="comment">#meta.groupi=NULL</span></span><br><span class="line">meta.groupi<span class="operator">=</span>groupi</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 5. taxonomic NST</span></span><br><span class="line"><span class="comment"># Step 5.1 calculate tNST</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定计算距离矩阵的方法，&quot;jaccard&quot; and &quot;bray&quot; are preferred.</span></span><br><span class="line">dist.method<span class="operator">=</span><span class="string">&quot;bray&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录运行时间</span></span><br><span class="line">t1<span class="operator">=</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入输出目录</span></span><br><span class="line">setwd<span class="punctuation">(</span>save.wd<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算tNST</span></span><br><span class="line">tnst<span class="operator">=</span>tNST<span class="punctuation">(</span>comm<span class="operator">=</span>comm<span class="punctuation">,</span> group<span class="operator">=</span>groupi<span class="punctuation">,</span> meta.group<span class="operator">=</span>meta.groupi<span class="punctuation">,</span> meta.com<span class="operator">=</span><span class="literal">NULL</span><span class="punctuation">,</span> dist.method<span class="operator">=</span>dist.method<span class="punctuation">,</span> abundance.weighted<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> rand<span class="operator">=</span>rand.time<span class="punctuation">,</span> output.rand<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> nworker<span class="operator">=</span>nworker<span class="punctuation">,</span> LB<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span> null.model<span class="operator">=</span><span class="string">&quot;PF&quot;</span><span class="punctuation">,</span> between.group<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> SES<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> RC<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以R data格式保存tNST的输出 </span></span><br><span class="line">save<span class="punctuation">(</span>tnst<span class="punctuation">,</span> file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span> <span class="string">&quot;.tNST.rda&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存其他tNST结果到多个文件中</span></span><br><span class="line">write.table<span class="punctuation">(</span>tnst<span class="operator">$</span>index.grp<span class="punctuation">,</span> file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span> <span class="string">&quot;.tNST.summary.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>tnst<span class="operator">$</span>index.pair.grp<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.tNST.pairwise.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>tnst<span class="operator">$</span>index.pair<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.tNST.pairwise.index.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line">write.table<span class="punctuation">(</span>tnst<span class="operator">$</span>index.between<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.tNST.between.summary.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>tnst<span class="operator">$</span>index.pair.between<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.tNST.pairwise.between.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">format<span class="punctuation">(</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">-</span>t1<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 5.2 Bootstrapping test</span></span><br><span class="line"></span><br><span class="line">t1<span class="operator">=</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算Bootstrapping</span></span><br><span class="line">tnstbt<span class="operator">=</span>nst.boot<span class="punctuation">(</span>nst.result<span class="operator">=</span>tnst<span class="punctuation">,</span> group<span class="operator">=</span>groupi<span class="punctuation">,</span> rand<span class="operator">=</span>rand.time<span class="punctuation">,</span> trace<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> two.tail<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span> out.detail<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> between.group<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span> nworker<span class="operator">=</span>nworker<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存结果</span></span><br><span class="line">save<span class="punctuation">(</span>tnstbt<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.tNST.boot.rda&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存结果</span></span><br><span class="line">write.table<span class="punctuation">(</span>tnstbt<span class="operator">$</span>summary<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.tNST.boot.summary.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line">write.table<span class="punctuation">(</span>tnstbt<span class="operator">$</span>compare<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.tNST.boot.compare.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span>t<span class="operator">=</span>format<span class="punctuation">(</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">-</span>t1<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 5.3 PERMANOVA</span></span><br><span class="line"></span><br><span class="line">t1<span class="operator">=</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">tnstpaov<span class="operator">=</span>nst.panova<span class="punctuation">(</span>nst.result<span class="operator">=</span>tnst<span class="punctuation">,</span> group <span class="operator">=</span> groupi<span class="punctuation">,</span> rand <span class="operator">=</span> rand.time<span class="punctuation">,</span> trace <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>tnstpaov<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.tNST.PERMANOVA.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">(</span>t<span class="operator">=</span>format<span class="punctuation">(</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">-</span>t1<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Steo 6. phylogenetic NST</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 6.1 phylogentic distance matrix # use bigmemory for big dataset</span></span><br><span class="line"></span><br><span class="line">wd.pd<span class="operator">=</span>paste0<span class="punctuation">(</span>save.wd<span class="punctuation">,</span><span class="string">&quot;/pdbig&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span><span class="punctuation">(</span><span class="operator">!</span>dir.exists<span class="punctuation">(</span>wd.pd<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">&#123;</span>dir.create<span class="punctuation">(</span>wd.pd<span class="punctuation">)</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">setwd<span class="punctuation">(</span>wd.pd<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span><span class="punctuation">(</span>file.exists<span class="punctuation">(</span><span class="string">&quot;pd.desc&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment"># if already done before, directly use it.</span></span><br><span class="line">  pdbig<span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  pdbig<span class="operator">$</span>tip.label<span class="operator">=</span>read.table<span class="punctuation">(</span><span class="string">&quot;pd.taxon.name.csv&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;,&quot;</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> stringsAsFactors <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> as.is <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">  pdbig<span class="operator">$</span>pd.wd<span class="operator">=</span>wd.pd</span><br><span class="line">  pdbig<span class="operator">$</span>pd.file<span class="operator">=</span><span class="string">&quot;pd.desc&quot;</span></span><br><span class="line">  pdbig<span class="operator">$</span>pd.name.file<span class="operator">=</span><span class="string">&quot;pd.taxon.name.csv&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="keyword">else</span><span class="punctuation">&#123;</span></span><br><span class="line">  pdbig<span class="operator">=</span>iCAMP<span class="operator">::</span>pdist.big<span class="punctuation">(</span>tree <span class="operator">=</span> tree<span class="punctuation">,</span> wd <span class="operator">=</span> wd.pd<span class="punctuation">,</span> nworker <span class="operator">=</span> nworker<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 6.2 calculate pNST</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># to count time cost</span></span><br><span class="line">t1<span class="operator">=</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">setwd<span class="punctuation">(</span>save.wd<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pnst<span class="operator">=</span>NST<span class="operator">::</span>pNST<span class="punctuation">(</span>comm<span class="operator">=</span>comm<span class="punctuation">,</span> pd.desc<span class="operator">=</span>pdbig<span class="operator">$</span>pd.file<span class="punctuation">,</span> pd.wd<span class="operator">=</span>pdbig<span class="operator">$</span>pd.wd<span class="punctuation">,</span></span><br><span class="line">pd.spname<span class="operator">=</span>pdbig<span class="operator">$</span>tip.label<span class="punctuation">,</span> group<span class="operator">=</span>groupi<span class="punctuation">,</span> meta.group<span class="operator">=</span>meta.groupi<span class="punctuation">,</span> abundance.weighted<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> rand<span class="operator">=</span>rand.time<span class="punctuation">,</span> output.rand<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> taxo.null.model<span class="operator">=</span><span class="literal">NULL</span><span class="punctuation">,</span> phylo.shuffle<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> exclude.conspecifics<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span> nworker<span class="operator">=</span>nworker<span class="punctuation">,</span> between.group<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span> SES<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> RC<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># save pNST output in R data format</span></span><br><span class="line">save<span class="punctuation">(</span>pnst<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.rda&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>pnst<span class="operator">$</span>index.grp<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.summary.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>pnst<span class="operator">$</span>index.pair.grp<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.pairwise.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>pnst<span class="operator">$</span>index.pair<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.pairwise.index.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>pnst<span class="operator">$</span>index.between<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.between.summary.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>pnst<span class="operator">$</span>index.pair.between<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.pairwise.between.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">format<span class="punctuation">(</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">-</span>t1<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 6.3 Bootstrapping test</span></span><br><span class="line"></span><br><span class="line">t1<span class="operator">=</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pnstbt<span class="operator">=</span>nst.boot<span class="punctuation">(</span>nst.result<span class="operator">=</span>pnst<span class="punctuation">,</span> group<span class="operator">=</span>groupi<span class="punctuation">,</span> rand<span class="operator">=</span>rand.time<span class="punctuation">,</span> trace<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> two.tail<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span> out.detail<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> between.group<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span> nworker<span class="operator">=</span>nworker<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">save<span class="punctuation">(</span>pnstbt<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.boot.rda&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>pnstbt<span class="operator">$</span>summary<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.boot.summary.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>pnstbt<span class="operator">$</span>compare<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.boot.compare.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">(</span>t<span class="operator">=</span>format<span class="punctuation">(</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">-</span>t1<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 6.4 PERMANOVA</span></span><br><span class="line"></span><br><span class="line">t1<span class="operator">=</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pnstpaov<span class="operator">=</span>nst.panova<span class="punctuation">(</span>nst.result<span class="operator">=</span>pnst<span class="punctuation">,</span> group <span class="operator">=</span> groupi<span class="punctuation">,</span> rand <span class="operator">=</span> rand.time<span class="punctuation">,</span> trace <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">write.table<span class="punctuation">(</span>pnstpaov<span class="punctuation">,</span>file <span class="operator">=</span> paste0<span class="punctuation">(</span>prefixi<span class="punctuation">,</span><span class="string">&quot;.pNST.PERMANOVA.csv&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">(</span>t<span class="operator">=</span>format<span class="punctuation">(</span>Sys.time<span class="punctuation">(</span><span class="punctuation">)</span><span class="operator">-</span>t1<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h1 id="4-结果解读"><a href="#4-结果解读" class="headerlink" title="4. 结果解读"></a><font color=#FF0000 >4. 结果解读</font></h1><h2 id="4-1-确定性过程和随机性过程的相对重要性"><a href="#4-1-确定性过程和随机性过程的相对重要性" class="headerlink" title="4.1 确定性过程和随机性过程的相对重要性"></a><font color=#FF0000 >4.1 确定性过程和随机性过程的相对重要性</font></h2><ul><li><p>An index, normalized stochasticity ratio (NST), was developed with 50% as the boundary point between more deterministic (&lt;50%) and more stochastic (&gt;50%) assembly. <font color=#2196F3>NST &gt; 50%时Stochastic Processes占主导，而NST &lt; 50%时，Deterministic Processes占主导。</font></p></li><li><p>用显著的偏差(即|β NTI| &gt; 2)来表示确定性过程占主导地位和用小的偏差(即|β NTI| &lt; 2)来表明随机过程占主导地位。用显著的偏差(即|β NTI| &gt; 2)来表示确定性过程占主导地位和用小的偏差(即|β NTI| &lt; 2)来表明随机过程占主导地位。同质性和变异性选择应分别造成小于和大于预期的群落更替;βNTI &lt;−2或&gt; + 2进一步解释为表明同质性或变异性选择分别占主导地位;</p></li></ul><h2 id="4-2-通过RCbray判断随机过程中各种过程的贡献"><a href="#4-2-通过RCbray判断随机过程中各种过程的贡献" class="headerlink" title="4.2 通过RCbray判断随机过程中各种过程的贡献"></a><font color=#FF0000 >4.2 通过RCbray判断随机过程中各种过程的贡献</font></h2><p>Modified Raup-Crick index (RCbray) is subsequently calculated by comparing empirically observed Bray-Curtis and simulated null distribution. Thus, according to themodified Raup-Crick index (RCbray), stochastic processes could be classified into 3 ecological processes: 均质分散homogenizing dispersal (RCbray &lt; −0.95), 分散限制dispersal limitation (RCbray &gt; +0.95) and 生态漂变ecological drift (−0.95&lt; RCbray &lt; +0.95) <a href="https://doi.org/10.1038/ismej.2012.22">Stegen et al., 2012</a>;  <a href="https://doi.org/10.1038/ismej.2013.93">Stegen et al., 2013</a>.</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扩增子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Use microeco分析扩增子数据</title>
      <link href="/post/4cf4.html"/>
      <url>/post/4cf4.html</url>
      
        <content type="html"><![CDATA[<p>本文阐述使用microeco分析扩增子数据……</p><span id="more"></span><h1 id="1-安装microeco"><a href="#1-安装microeco" class="headerlink" title="1. 安装microeco"></a><font color=#FF0000 >1. 安装microeco</font></h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If devtools package is not installed, first install it</span></span><br><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># then install microeco</span></span><br><span class="line">devtools<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;ChiLiubio/microeco&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="punctuation">(</span><span class="operator">!</span>requireNamespace<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">,</span> quietly <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">&#123;</span>install.packages<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">)</span><span class="punctuation">&#125;</span></span><br><span class="line">devtools<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;jbisanz/qiime2R&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h1 id="2-准备数据"><a href="#2-准备数据" class="headerlink" title="2. 准备数据"></a><font color=#FF0000 >2. 准备数据</font></h1><h2 id="otu-table"><a href="#otu-table" class="headerlink" title="otu_table"></a><font color=#FF9800 >otu_table</font></h2><p>OTU表</p><table><thead><tr><th></th><th>Sample 1</th><th>Sample 2</th><th>Sample 3</th><th>Sample 4</th></tr></thead><tbody><tr><td>OTU1</td><td>232.0</td><td>209.0</td><td>349.0</td><td>256.0</td></tr><tr><td>OTU2</td><td>75.0</td><td>35.0</td><td>44.0</td><td>0.0</td></tr><tr><td>OTU3</td><td>237.0</td><td>224.0</td><td>291.0</td><td>353.0</td></tr><tr><td>OTU4</td><td>371.0</td><td>80.0</td><td>319.0</td><td>345.0</td></tr></tbody></table><h2 id="taxonomy-table"><a href="#taxonomy-table" class="headerlink" title="taxonomy_table"></a><font color=#FF9800 >taxonomy_table</font></h2><p>分类表</p><div style="overflow-x:auto;"><table><table><thead><tr><th></th><th>Kingdom</th><th>Phylum</th><th>Class</th><th>Order</th><th>Family</th><th>Genus</th><th>Species</th></tr></thead><tbody><tr><td>OTU1</td><td>d__Bacteria</td><td>p__Desulfobacterota</td><td>c__Desulfobacteria</td><td>o__Desulfatiglandales</td><td>f__Desulfatiglandaceae</td><td>g__Desulfatiglans</td><td></td></tr><tr><td>OTU2</td><td>d__Bacteria</td><td>p__Sva0485</td><td>c__Sva0485</td><td>o__Sva0485</td><td>f__Sva0485</td><td>g__Sva0485</td><td>s__uncultured_hydrocarbon</td></tr><tr><td>OTU3</td><td>d__Bacteria</td><td>p__Desulfobacterota</td><td>c__Syntrophobacteria</td><td>o__Syntrophobacterales</td><td>f__uncultured</td><td>g__uncultured</td><td>s__uncultured_delta</td></tr><tr><td>OTU4</td><td>d__Bacteria</td><td>p__Myxococcota</td><td>c__Polyangia</td><td>o__Polyangiales</td><td>f__Sandaracinaceae</td><td>g__uncultured</td><td></td></tr></tbody></table></table></div><h2 id="sample-info"><a href="#sample-info" class="headerlink" title="sample_info"></a><font color=#FF9800 >sample_info</font></h2><p>样本元数据</p><table><thead><tr><th>SampleID</th><th>Group</th><th>Type</th><th>Saline</th></tr></thead><tbody><tr><td>Sample 1</td><td>G1</td><td>T1</td><td>Non-saline</td></tr><tr><td>Sample 2</td><td>G1</td><td>T1</td><td>Non-saline</td></tr><tr><td>Sample 3</td><td>G2</td><td>T1</td><td>Saline</td></tr><tr><td>Sample 4</td><td>G2</td><td>T2</td><td>Saline</td></tr></tbody></table><h2 id="env-data"><a href="#env-data" class="headerlink" title="env_data"></a><font color=#FF9800 >env_data</font></h2><p>环境因子</p><table><thead><tr><th>SampleID</th><th>Depth</th><th>Longitude</th><th>Latitude</th></tr></thead><tbody><tr><td>Sample 1</td><td>0</td><td>23.0</td><td>20</td></tr><tr><td>Sample 2</td><td>10</td><td>35.0</td><td>44.0</td></tr><tr><td>Sample 3</td><td>20</td><td>43.0</td><td>70.0</td></tr><tr><td>Sample 4</td><td>30</td><td>60.0</td><td>69.0</td></tr></tbody></table><h2 id="phylo-tree"><a href="#phylo-tree" class="headerlink" title="phylo_tree"></a><font color=#FF9800 >phylo_tree</font></h2><p>进化树</p><h1 id="3-导入数据"><a href="#3-导入数据" class="headerlink" title="3. 导入数据"></a><font color=#FF0000 >3. 导入数据</font></h1><ul><li><p>加载R包</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>microeco<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ape<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>qiime2R<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># use pipe operator in magrittr package</span></span><br><span class="line">library<span class="punctuation">(</span>magrittr<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># set.seed is used to fix the random number generation to make the results repeatable</span></span><br><span class="line">set.seed<span class="punctuation">(</span><span class="number">123</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># make the plotting background same with the tutorial</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">theme_set<span class="punctuation">(</span>theme_bw<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>导入数据</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单独导入环境因子文件</span></span><br><span class="line">env_data <span class="operator">&lt;-</span> read.delim<span class="punctuation">(</span><span class="string">&quot;E:/Researches/lujia16S/Analysis_20200907/Ordination_analyses/env4.txt&quot;</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span> header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义数据导入函数</span></span><br><span class="line">qiimed2meco <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>ASV_data<span class="punctuation">,</span> sample_data<span class="punctuation">,</span> taxonomy_data<span class="punctuation">,</span> phylo_tree <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="comment"># Read ASV data</span></span><br><span class="line">ASV <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>read_qza<span class="punctuation">(</span>ASV_data<span class="punctuation">)</span><span class="operator">$</span>data<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#  Read metadata</span></span><br><span class="line">metadata <span class="operator">&lt;-</span> read_q2metadata<span class="punctuation">(</span>sample_data<span class="punctuation">)</span></span><br><span class="line">rownames<span class="punctuation">(</span>metadata<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">as.character</span><span class="punctuation">(</span>metadata<span class="punctuation">[</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># Read taxonomy table</span></span><br><span class="line">taxa_table <span class="operator">&lt;-</span> read_qza<span class="punctuation">(</span>taxonomy_data<span class="punctuation">)</span></span><br><span class="line">taxa_table <span class="operator">&lt;-</span> parse_taxonomy<span class="punctuation">(</span>taxa_table<span class="operator">$</span>data<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># Make the taxonomic table clean, this is very important.</span></span><br><span class="line">taxa_table <span class="operator">%&lt;&gt;%</span> tidy_taxonomy</span><br><span class="line"><span class="comment"># Read phylo tree</span></span><br><span class="line"><span class="keyword">if</span><span class="punctuation">(</span><span class="operator">!</span><span class="built_in">is.null</span><span class="punctuation">(</span>phylo_tree<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">phylo_tree <span class="operator">&lt;-</span> read_qza<span class="punctuation">(</span>phylo_tree<span class="punctuation">)</span><span class="operator">$</span>data</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">dataset <span class="operator">&lt;-</span> microtable<span class="operator">$</span>new<span class="punctuation">(</span>sample_table <span class="operator">=</span> metadata<span class="punctuation">,</span> tax_table <span class="operator">=</span> taxa_table<span class="punctuation">,</span> otu_table <span class="operator">=</span> ASV<span class="punctuation">,</span> phylo_tree <span class="operator">=</span> phylo_tree<span class="punctuation">)</span></span><br><span class="line">dataset</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入本地数据，包括OTU表、样本元数据、分类表、tree文件。这几个文件均有QIIME2生成。</span></span><br><span class="line">meco_dataset <span class="operator">&lt;-</span> qiimed2meco<span class="punctuation">(</span>ASV_data <span class="operator">=</span> <span class="string">&quot;E:/Researches/lujia16S/Analysis_20200907/dada2_table.qza&quot;</span><span class="punctuation">,</span> sample_data <span class="operator">=</span> <span class="string">&quot;E:/Researches/lujia16S/Analysis_20200907/metadata.tsv&quot;</span><span class="punctuation">,</span> taxonomy_data <span class="operator">=</span> <span class="string">&quot;E:/Researches/lujia16S/Analysis_20200907/taxonomy.qza&quot;</span><span class="punctuation">,</span> phylo_tree <span class="operator">=</span> <span class="string">&quot;E:/Researches/lujia16S/Analysis_20200907/tree.qza&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">meco_dataset</span><br></pre></td></tr></table></figure></li></ul><h1 id="4-数据预处理"><a href="#4-数据预处理" class="headerlink" title="4. 数据预处理"></a><font color=#FF0000 >4. 数据预处理</font></h1><ul><li><p>移除未被分配到 “k__Archaea” 或 “k__Bacteria”的OTUs</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meco_dataset<span class="operator">$</span>tax_table <span class="operator">%&lt;&gt;%</span> base<span class="operator">::</span>subset<span class="punctuation">(</span>Kingdom <span class="operator">==</span> <span class="string">&quot;k__Archaea&quot;</span> <span class="operator">|</span> Kingdom <span class="operator">==</span> <span class="string">&quot;k__Bacteria&quot;</span><span class="punctuation">)</span></span><br><span class="line">print<span class="punctuation">(</span>meco_dataset<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>移除注释为线粒体和叶绿体的OTUs</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移除tax_table中包含taxa名字的行，无论分类等级（taxonomic ranks），不区分大小写字母。简言之，taxa = c(&quot;mitochondria&quot;, &quot;chloroplast&quot;)定义了删除包含mitochondria和chloroplast的行。</span></span><br><span class="line"></span><br><span class="line">meco_dataset<span class="operator">$</span>filter_pollution<span class="punctuation">(</span>taxa <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;mitochondria&quot;</span><span class="punctuation">,</span> <span class="string">&quot;chloroplast&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">print<span class="punctuation">(</span>meco_dataset<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>为了使otu_table、tax_table和phylo_tree中的OTUs相同，我们再次使用tidy_dataset() 函数</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meco_dataset<span class="operator">$</span>tidy_dataset<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">print<span class="punctuation">(</span>meco_dataset<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>调用sample_sums()检查各样本中的序列数量</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meco_dataset<span class="operator">$</span>sample_sums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> <span class="built_in">range</span></span><br></pre></td></tr></table></figure></li><li><p>有时，为了减少物种数目对多样性度量的影响，我们需要进行重采样，使每个样本中的序列数量相等。函数rarefy_samples可以在稀疏（rarefying）前后自动调用函数tidy_dataset。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># As an example, we use 20001 sequences in each sample</span></span><br><span class="line">meco_dataset<span class="operator">$</span>rarefy_samples<span class="punctuation">(</span>sample.size <span class="operator">=</span> <span class="number">20001</span><span class="punctuation">)</span></span><br><span class="line">meco_dataset<span class="operator">$</span>sample_sums<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> <span class="built_in">range</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="5-alpha多样性"><a href="#5-alpha多样性" class="headerlink" title="5. alpha多样性"></a><font color=#FF0000 >5. alpha多样性</font></h1><ul><li><p>然后，我们使用cal_abund()计算每个分类等级的分类单元丰度（taxa abundance）。此函数返回一个名为taxa_abund的列表，其中包含每个分类等级上的丰度信息的多个数据框。列表自动存储在microtable object中。</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">meco_dataset<span class="operator">$</span>cal_abund<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return dataset$taxa_abund</span></span><br><span class="line"><span class="built_in">class</span><span class="punctuation">(</span>meco_dataset<span class="operator">$</span>taxa_abund<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>通过save_abund()将taxa abundance保存至本地文件</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dir.create<span class="punctuation">(</span><span class="string">&quot;taxa_abund&quot;</span><span class="punctuation">)</span></span><br><span class="line">meco_dataset<span class="operator">$</span>save_abund<span class="punctuation">(</span>dirpath <span class="operator">=</span> <span class="string">&quot;taxa_abund&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>计算alpha多样性。结果自动存储在microtable object中。<font color=#2196F3>作为示例，此处未计算系统发育多样性（phylogenetic diversity）</font>。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 若要计算Faith&#x27;s phylogenetic diversity，设置PD = TRUE，计算速度会较慢</span></span><br><span class="line">meco_dataset<span class="operator">$</span>cal_alphadiv<span class="punctuation">(</span>PD <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># return dataset$alpha_diversity</span></span><br><span class="line"><span class="built_in">class</span><span class="punctuation">(</span>meco_dataset<span class="operator">$</span>alpha_diversity<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># save dataset$alpha_diversity to a directory</span></span><br><span class="line">dir.create<span class="punctuation">(</span><span class="string">&quot;alpha_diversity&quot;</span><span class="punctuation">)</span></span><br><span class="line">meco_dataset<span class="operator">$</span>save_alphadiv<span class="punctuation">(</span>dirpath <span class="operator">=</span> <span class="string">&quot;alpha_diversity&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="6-β多样性"><a href="#6-β多样性" class="headerlink" title="6. β多样性"></a><font color=#FF0000 >6. β多样性</font></h1><ul><li><p>利用函数cal_betadiv()计算beta-多样性的距离矩阵。我们提供了四个最常用的索引：Bray-curtis、Jaccard、加权Unifrac和未加权Unifrac。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If you do not want to calculate unifrac metrics, use unifrac = FALSE</span></span><br><span class="line"><span class="comment"># 需要GUniFrac package</span></span><br><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;GUniFrac&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">meco_dataset<span class="operator">$</span>cal_betadiv<span class="punctuation">(</span>unifrac <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return dataset$beta_diversity</span></span><br><span class="line"><span class="built_in">class</span><span class="punctuation">(</span>meco_dataset<span class="operator">$</span>beta_diversity<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># save dataset$beta_diversity to a directory</span></span><br><span class="line">dir.create<span class="punctuation">(</span><span class="string">&quot;beta_diversity&quot;</span><span class="punctuation">)</span></span><br><span class="line">meco_dataset<span class="operator">$</span>save_betadiv<span class="punctuation">(</span>dirpath <span class="operator">=</span> <span class="string">&quot;beta_diversity&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="7-trans-abund-class"><a href="#7-trans-abund-class" class="headerlink" title="7. trans_abund class"></a><font color=#FF0000 >7. trans_abund class</font></h1><ul><li><p>绘制Barplot。转换分类丰度数据，以便使用ggplot2包绘制分类单元丰度。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create trans_abund object</span></span><br><span class="line"><span class="comment"># use 12 Phyla with the highest abundance in the dataset.</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_abund<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> taxrank <span class="operator">=</span> <span class="string">&quot;Phylum&quot;</span><span class="punctuation">,</span> ntaxa <span class="operator">=</span> <span class="number">12</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># t1 object now include the transformed abundance data t1$abund_data and other elements for the following plotting</span></span><br></pre></td></tr></table></figure></li><li><p>绘制Barplot. We remove the sample names in x axis and add the facet to show abundance according to groups.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">t1<span class="operator">$</span>plot_bar<span class="punctuation">(</span>others_color <span class="operator">=</span> <span class="string">&quot;grey70&quot;</span><span class="punctuation">,</span> facet <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> xtext_keep <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> legend_text_italic <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return a ggplot2 object</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取组内平均值。The groupmean parameter can be used to obtain the group-mean barplot.</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_abund<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> taxrank <span class="operator">=</span> <span class="string">&quot;Phylum&quot;</span><span class="punctuation">,</span> ntaxa <span class="operator">=</span> <span class="number">12</span><span class="punctuation">,</span> groupmean <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>plot_bar<span class="punctuation">(</span>others_color <span class="operator">=</span> <span class="string">&quot;grey70&quot;</span><span class="punctuation">,</span> legend_text_italic <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Then alluvial plot is implemented in the plot_bar function.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;ggalluvial&quot;</span><span class="punctuation">)</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_abund<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> taxrank <span class="operator">=</span> <span class="string">&quot;Phylum&quot;</span><span class="punctuation">,</span> ntaxa <span class="operator">=</span> <span class="number">12</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># use_alluvium = TRUE make the alluvial plot, clustering =TRUE can be used to reorder the samples by clustering</span></span><br><span class="line">t1<span class="operator">$</span>plot_bar<span class="punctuation">(</span>use_alluvium <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> clustering <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> xtext_type_hor <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> xtext_size <span class="operator">=</span> <span class="number">6</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>The box plot is an excellent way to intuitionally show data distribution across groups.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># show 15 taxa at Class level</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_abund<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> taxrank <span class="operator">=</span> <span class="string">&quot;Class&quot;</span><span class="punctuation">,</span> ntaxa <span class="operator">=</span> <span class="number">15</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>plot_box<span class="punctuation">(</span>group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="#/images/lujia/show_15_taxa_at_Class_level.jpg" class="lazyload placeholder" data-srcset="#/images/lujia/show_15_taxa_at_Class_level.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="show 15 taxa at Class level"></p><ul><li><p>Then we show the heatmap with the high abundant genera.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># show 40 taxa at Genus level</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_abund<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> taxrank <span class="operator">=</span> <span class="string">&quot;Genus&quot;</span><span class="punctuation">,</span> ntaxa <span class="operator">=</span> <span class="number">40</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>plot_heatmap<span class="punctuation">(</span>facet <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> xtext_keep <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> withmargin <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Then, we show the pie chart.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t1 <span class="operator">&lt;-</span> trans_abund<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> taxrank <span class="operator">=</span> <span class="string">&quot;Phylum&quot;</span><span class="punctuation">,</span> ntaxa <span class="operator">=</span> <span class="number">6</span><span class="punctuation">,</span> groupmean <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># all pie chart in one row</span></span><br><span class="line">t1<span class="operator">$</span>plot_pie<span class="punctuation">(</span>facet_nrow <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="8-trans-venn-class"><a href="#8-trans-venn-class" class="headerlink" title="8. trans_venn class"></a><font color=#FF0000 >8. trans_venn class</font></h1><ul><li><p>The trans_venn class is used for venn analysis. To analyze the unique and shared OTUs of groups, we first merge samples according to the “Group” column of sample_table.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># merge samples as one community for each group</span></span><br><span class="line">dataset1 <span class="operator">&lt;-</span> meco_dataset<span class="operator">$</span>merge_samples<span class="punctuation">(</span>use_group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># dataset1 is a new microtable object</span></span><br><span class="line"><span class="comment"># create trans_venn object</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_venn<span class="operator">$</span>new<span class="punctuation">(</span>dataset1<span class="punctuation">,</span> ratio <span class="operator">=</span> <span class="string">&quot;seqratio&quot;</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>plot_venn<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># The integer data is OTU number</span></span><br><span class="line"><span class="comment"># The percentage data is the sequence number/total sequence number</span></span><br></pre></td></tr></table></figure></li><li><p>When the groups are too many to show with venn plot, we can use petal plot.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use &quot;Type&quot; column in sample_table</span></span><br><span class="line">dataset1 <span class="operator">&lt;-</span> meco_dataset<span class="operator">$</span>merge_samples<span class="punctuation">(</span>use_group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_venn<span class="operator">$</span>new<span class="punctuation">(</span>dataset1<span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>plot_venn<span class="punctuation">(</span>petal_plot <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Sometimes, we are interested in the unique and shared species. In another words, the composition of the unique or shared species may account for the different and similar parts of ecological characteristics across groups[10]. For this goal, we first transform the results of venn plot to the traditional species-sample table, that is, another object of microtable class.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dataset1 <span class="operator">&lt;-</span> meco_dataset<span class="operator">$</span>merge_samples<span class="punctuation">(</span>use_group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_venn<span class="operator">$</span>new<span class="punctuation">(</span>dataset1<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># transform venn results to the sample-species table, here do not consider abundance, only use presence/absence information.</span></span><br><span class="line">t2 <span class="operator">&lt;-</span> t1<span class="operator">$</span>trans_venn_com<span class="punctuation">(</span>use_OTUs_frequency <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># t2 is a new microtable class, each part is considered as a sample</span></span><br><span class="line"><span class="built_in">class</span><span class="punctuation">(</span>t2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>We use bar plot to show the composition at the Genus level.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># calculate taxa abundance, that is, the frequency</span></span><br><span class="line">t2<span class="operator">$</span>cal_abund<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># transform and plot</span></span><br><span class="line">t3 <span class="operator">&lt;-</span> trans_abund<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> t2<span class="punctuation">,</span> taxrank <span class="operator">=</span> <span class="string">&quot;Genus&quot;</span><span class="punctuation">,</span> ntaxa <span class="operator">=</span> <span class="number">12</span><span class="punctuation">)</span></span><br><span class="line">t3<span class="operator">$</span>plot_bar<span class="punctuation">(</span>bar_type <span class="operator">=</span> <span class="string">&quot;part&quot;</span><span class="punctuation">,</span> legend_text_italic <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span> ylab_title <span class="operator">=</span> <span class="string">&quot;Frequency (%)&quot;</span><span class="punctuation">,</span> xtext_type_hor <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>We also try to use pie chart to show the compositions at the Phylum level</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t3 <span class="operator">&lt;-</span> trans_abund<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> t2<span class="punctuation">,</span> taxrank <span class="operator">=</span> <span class="string">&quot;Phylum&quot;</span><span class="punctuation">,</span> ntaxa <span class="operator">=</span> <span class="number">8</span><span class="punctuation">)</span></span><br><span class="line">t3<span class="operator">$</span>plot_pie<span class="punctuation">(</span>facet_nrow <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span> use_colors <span class="operator">=</span> rev<span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span>RColorBrewer<span class="operator">::</span>brewer.pal<span class="punctuation">(</span><span class="number">8</span><span class="punctuation">,</span> <span class="string">&quot;Dark2&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="string">&quot;grey50&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="9-trans-alpha-class"><a href="#9-trans-alpha-class" class="headerlink" title="9. trans_alpha class"></a><font color=#FF0000 >9. trans_alpha class</font></h1><ul><li><p>Alpha diversity can be transformed and plotted using trans_alpha class. Creating trans_alpha object can return two data frame: alpha_data and alpha_stat.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t1 <span class="operator">&lt;-</span> trans_alpha<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$alpha_stat</span></span><br><span class="line">t1<span class="operator">$</span>alpha_stat<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br></pre></td></tr></table></figure></li><li><p>Then, we test the differences among groups using the KW rank sum test and anova with multiple comparisons.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t1<span class="operator">$</span>cal_diff<span class="punctuation">(</span>method <span class="operator">=</span> <span class="string">&quot;KW&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_alpha_diff</span></span><br><span class="line">t1<span class="operator">$</span>res_alpha_diff<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span> <span class="punctuation">]</span></span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>Groups</th><th>Measure</th><th>Test method</th><th>p.value</th><th>Significance</th></tr></thead><tbody><tr><td>1</td><td>T16 vs T18</td><td>Observed</td><td>KW</td><td>2.601895e-03</td><td>**</td></tr><tr><td>2</td><td>T16 vs T20</td><td>Observed</td><td>KW</td><td>3.011399e-08</td><td>***</td></tr><tr><td>3</td><td>T16 vs T21</td><td>Observed</td><td>KW</td><td>2.174162e-04</td><td>***</td></tr><tr><td>4</td><td>T16 vs T17</td><td>Observed</td><td>KW</td><td>1.234229e-03</td><td>**</td></tr><tr><td>5</td><td>T18 vs T20</td><td>Observed</td><td>KW</td><td>7.319258e-08</td><td>***</td></tr></tbody></table>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t1<span class="operator">$</span>cal_diff<span class="punctuation">(</span>method <span class="operator">=</span> <span class="string">&quot;anova&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_alpha_diff</span></span><br><span class="line">t1<span class="operator">$</span>res_alpha_diff</span><br></pre></td></tr></table></figure>  <div style="overflow-x:auto;">  <table><table><thead><tr><th>Observed</th><th>Chao1</th><th>ACE</th><th>Shannon</th><th>Simpson</th><th>InvSimpson</th><th>Fisher</th><th>Coverage</th></tr></thead><tbody><tr><td>T18</td><td>a</td><td>a</td><td>a</td><td>a</td><td>a</td><td>a</td><td>a</td></tr><tr><td>T16</td><td>b</td><td>b</td><td>b</td><td>a</td><td>a</td><td>a</td><td>b</td></tr><tr><td>T17</td><td>c</td><td>c</td><td>c</td><td>b</td><td>a</td><td>b</td><td>c</td></tr><tr><td>T21</td><td>d</td><td>d</td><td>d</td><td>c</td><td>a</td><td>c</td><td>d</td></tr><tr><td>T20</td><td>e</td><td>e</td><td>e</td><td>d</td><td>b</td><td>d</td><td>e</td></tr><tr><td></table></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></div></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li><li><p>Now, let us plot the mean and se of alpha diversity for each group, and add the duncan.test (agricolae package) result.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t1<span class="operator">$</span>plot_alpha<span class="punctuation">(</span>add_letter <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> measure <span class="operator">=</span> <span class="string">&quot;Chao1&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>We can also use the boxplot to show the paired comparisons directly.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t1<span class="operator">$</span>plot_alpha<span class="punctuation">(</span>pair_compare <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> measure <span class="operator">=</span> <span class="string">&quot;Chao1&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="10-trans-beta-class"><a href="#10-trans-beta-class" class="headerlink" title="10. trans_beta class"></a><font color=#FF0000 >10. trans_beta class</font></h1><ul><li><p>The distance matrix of beta diversity can be transformed and plotted using trans_beta class. The analysis referred to the beta diversity in this class mainly include ordination, group distance, clustering and manova. We first show the ordination using PCoA.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># we first create an object and select PCoA for ordination</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_beta<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> measure <span class="operator">=</span> <span class="string">&quot;bray&quot;</span><span class="punctuation">,</span> ordination <span class="operator">=</span> <span class="string">&quot;PCoA&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># t1$res_ordination is the ordination result list</span></span><br><span class="line"><span class="built_in">class</span><span class="punctuation">(</span>t1<span class="operator">$</span>res_ordination<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># plot the PCoA result</span></span><br><span class="line">t1<span class="operator">$</span>plot_ordination<span class="punctuation">(</span>plot_color <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> plot_shape <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> plot_group_ellipse <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Then we plot and compare the group distances.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># calculate and plot sample distances within groups</span></span><br><span class="line">t1<span class="operator">$</span>cal_group_distance<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_group_distance</span></span><br><span class="line">t1<span class="operator">$</span>plot_group_distance<span class="punctuation">(</span>distance_pair_stat <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># calculate and plot sample distances between groups (报错：错误: Insufficient values in manual scale. 10 needed but only 8 provided.)</span></span><br><span class="line">t1<span class="operator">$</span>cal_group_distance<span class="punctuation">(</span>within_group <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>plot_group_distance<span class="punctuation">(</span>distance_pair_stat <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Clustering plot is also a frequently used method.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use replace_name to set the label name, group parameter used to set the color (报错：找不到对象&#x27;dataset&#x27;)</span></span><br><span class="line">t1<span class="operator">$</span>plot_clustering<span class="punctuation">(</span>group <span class="operator">=</span> <span class="string">&quot;Indexs&quot;</span><span class="punctuation">,</span> replace_name <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Water-depth(m)&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Indexs&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>perMANOVA is often used in the differential test of distances among groups.</p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># manova for all groups</span></span><br><span class="line">t1<span class="operator">$</span>cal_manova<span class="punctuation">(</span>cal_manova_all <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>res_manova<span class="operator">$</span>aov.tab</span><br></pre></td></tr></table></figure><table><thead><tr><th>Permutation: free</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>Number of permutations: 999</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Terms added sequentially (first to last)</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td>Df</td><td>SumsOfSqs</td><td>MeanSqs</td><td>F.Model</td><td>R<sup>2</sup></td><td>Pr(&gt;F)</td></tr><tr><td>Site</td><td>4</td><td>15.669</td><td>3.9173</td><td>19.445</td><td>0.48077</td><td>0.001 ***</td></tr><tr><td>Residuals</td><td>84</td><td>16.923</td><td>0.2015</td><td></td><td>0.51923</td><td></td></tr><tr><td>Total</td><td>88</td><td>32.592</td><td></td><td></td><td>1.00000</td><td></td></tr></tbody></table><p> &gt; Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</p></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># manova for each paired groups</span></span><br><span class="line">t1<span class="operator">$</span>cal_manova<span class="punctuation">(</span>cal_manova_paired <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>res_manova</span><br></pre></td></tr></table></figure><table><thead><tr><th>Groups</th><th>measure</th><th>permutations</th><th>R<sup>2</sup></th><th>p.value</th><th>Significance</th></tr></thead><tbody><tr><td>1</td><td>T16 vs T18</td><td>bray</td><td>999</td><td>0.2748773</td><td>0.001</td></tr><tr><td>2</td><td>T16 vs T20</td><td>bray</td><td>999</td><td>0.4539103</td><td>0.001</td></tr><tr><td>3</td><td>T16 vs T21</td><td>bray</td><td>999</td><td>0.4102009</td><td>0.001</td></tr><tr><td>4</td><td>T16 vs T17</td><td>bray</td><td>999</td><td>0.2243404</td><td>0.001</td></tr><tr><td>5</td><td>T18 vs T20</td><td>bray</td><td>999</td><td>0.3736482</td><td>0.001</td></tr><tr><td>6</td><td>T18 vs T21</td><td>bray</td><td>999</td><td>0.3504104</td><td>0.001</td></tr><tr><td>7</td><td>T18 vs T17</td><td>bray</td><td>999</td><td>0.2147055</td><td>0.001</td></tr><tr><td>8</td><td>T20 vs T21</td><td>bray</td><td>999</td><td>0.3575765</td><td>0.001</td></tr><tr><td>9</td><td>T20 vs T17</td><td>bray</td><td>999</td><td>0.4589248</td><td>0.001</td></tr><tr><td>10</td><td>T21 vs T17</td><td>bray</td><td>999</td><td>0.4395176</td><td>0.001</td></tr></tbody></table> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># manova for specified group set: here &quot;Group + Type&quot;</span></span><br><span class="line">t1<span class="operator">$</span>cal_manova<span class="punctuation">(</span>cal_manova_set <span class="operator">=</span> <span class="string">&quot;Site+ Indexs&quot;</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>res_manova<span class="operator">$</span>aov.tab</span><br></pre></td></tr></table></figure><table><thead><tr><th>Permutation: free</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>Number of permutations: 999</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Terms added sequentially (first to last)</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td>Df</td><td>SumsOfSqs</td><td>MeanSqs</td><td>F.Model</td><td>R<sup>2</sup></td><td>Pr(F)</td></tr><tr><td>Site</td><td>4</td><td>15.669</td><td>4</td><td>0</td><td>0.48077</td><td>1</td></tr><tr><td>Indexs</td><td>84</td><td>16.923</td><td>0</td><td>0</td><td>0.51923</td><td>1</td></tr><tr><td>Residuals</td><td>0</td><td>0.000</td><td>Inf</td><td></td><td>0.00000</td><td></td></tr><tr><td>Total</td><td>88</td><td>32.592</td><td></td><td></td><td>1.00000</td><td></td></tr></tbody></table><h1 id="11-trans-diff-class"><a href="#11-trans-diff-class" class="headerlink" title="11. trans_diff class"></a><font color=#FF0000 >11. trans_diff class</font></h1><ul><li><p>Differential abundance test is a very important part in the microbial community data analysis. It can be used to find the significant taxa in determining the community differences across groups. Currently, trans_diff class have three famous approaches to perform this analysis: metastat[11], LEfSe[12] and random forest. Metastat depends on the permutations and t-test and performs well on the sparse data. It is used for the comparisons between two groups.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># metastat analysis at Genus level</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_diff<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;metastat&quot;</span><span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> metastat_taxa_level <span class="operator">=</span> <span class="string">&quot;Genus&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># t1$res_metastat is the result</span></span><br><span class="line"><span class="comment"># t1$res_metastat_group_matrix is the group comparisons order for plotting</span></span><br><span class="line"><span class="comment"># plot the first paired groups, choose_group = 1</span></span><br><span class="line">t1<span class="operator">$</span>plot_metastat<span class="punctuation">(</span>use_number <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span> qvalue <span class="operator">=</span> <span class="number">0.05</span><span class="punctuation">,</span> choose_group <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>LEfSe combines the non-parametric test and linear discriminant analysis. We implement this approach in this package instead of the python version.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t1 <span class="operator">&lt;-</span> trans_diff<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;lefse&quot;</span><span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> alpha <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">,</span> lefse_subgroup <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># t1$res_lefse is the LEfSe result</span></span><br><span class="line"><span class="comment"># t1$res_abund is the abundance information</span></span><br><span class="line">t1<span class="operator">$</span>plot_lefse_bar<span class="punctuation">(</span>LDA_score <span class="operator">=</span> <span class="number">4</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>We can also plot the abundance of taxa detected using LEfSe.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t1<span class="operator">$</span>plot_diff_abund<span class="punctuation">(</span>use_number <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">30</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Then, we show the cladogram of the differential features in the taxonomic tree. There are too many taxa in this dataset. As an example, we only use the highest 200 abundant taxa in the tree and 50 differential features. We only show the full taxonomic label at Phylum level and use letters at other levels to reduce the text overlap.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clade_label_level 5 represent phylum level in this analysis</span></span><br><span class="line"><span class="comment"># require ggtree package</span></span><br><span class="line">t1<span class="operator">$</span>plot_lefse_cladogram<span class="punctuation">(</span>use_taxa_num <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span> use_feature_num <span class="operator">=</span> <span class="number">50</span><span class="punctuation">,</span> clade_label_level <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>There may be a problem related with the taxonomic labels in the plot. When the levels used are too many, the taxonomic labels may have too much overlap. However, if we only indicate the Phylum labels, the taxa in the legend with marked letters are too many. At this time, you can select the taxa that you want to show in the plot manually like the following operation.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># choose some taxa according to the positions in the previous picture; those taxa labels have minimum overlap</span></span><br><span class="line">use_labels <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;c__Deltaproteobacteria&quot;</span><span class="punctuation">,</span> <span class="string">&quot;c__Actinobacteria&quot;</span><span class="punctuation">,</span> <span class="string">&quot;o__Rhizobiales&quot;</span><span class="punctuation">,</span> <span class="string">&quot;p__Proteobacteria&quot;</span><span class="punctuation">,</span> <span class="string">&quot;p__Bacteroidetes&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="string">&quot;o__Micrococcales&quot;</span><span class="punctuation">,</span> <span class="string">&quot;p__Acidobacteria&quot;</span><span class="punctuation">,</span> <span class="string">&quot;p__Verrucomicrobia&quot;</span><span class="punctuation">,</span> <span class="string">&quot;p__Firmicutes&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="string">&quot;p__Chloroflexi&quot;</span><span class="punctuation">,</span> <span class="string">&quot;c__Acidobacteria&quot;</span><span class="punctuation">,</span> <span class="string">&quot;c__Gammaproteobacteria&quot;</span><span class="punctuation">,</span> <span class="string">&quot;c__Betaproteobacteria&quot;</span><span class="punctuation">,</span> <span class="string">&quot;c__KD4-96&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;c__Bacilli&quot;</span><span class="punctuation">,</span> <span class="string">&quot;o__Gemmatimonadales&quot;</span><span class="punctuation">,</span> <span class="string">&quot;f__Gemmatimonadaceae&quot;</span><span class="punctuation">,</span> <span class="string">&quot;o__Bacillales&quot;</span><span class="punctuation">,</span> <span class="string">&quot;o__Rhodobacterales&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># then use parameter select_show_labels to show</span></span><br><span class="line">t1<span class="operator">$</span>plot_lefse_cladogram<span class="punctuation">(</span>use_taxa_num <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span> use_feature_num <span class="operator">=</span> <span class="number">50</span><span class="punctuation">,</span> select_show_labels <span class="operator">=</span> use_labels<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># Now we can see that more taxa names appear in the tree</span></span><br></pre></td></tr></table></figure></li><li><p>If you are interested in taxonomic tree, you can also use metacoder package[13] to plot the taxonomic tree based on the selected taxa. We do not show the usage here.</p></li><li><p>The third approach is rf, which depends on the random forest[14, 15] and the non-parametric test. The current method can calculate random forest by bootstrapping like the method in LEfSe and only use the significant features. MeanDecreaseGini is selected as the indicator value in the analysis.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use Genus level for parameter rf_taxa_level, if you want to use all taxa, change to &quot;all&quot;</span></span><br><span class="line"><span class="comment"># nresam = 1 and boots = 1 represent no bootstrapping and use all samples directly</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_diff<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;rf&quot;</span><span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> rf_taxa_level <span class="operator">=</span> <span class="string">&quot;Genus&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># t1$res_rf is the result stored in the object</span></span><br><span class="line"><span class="comment"># plot the result</span></span><br><span class="line">t2 <span class="operator">&lt;-</span> t1<span class="operator">$</span>plot_diff_abund<span class="punctuation">(</span>use_number <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span> only_abund_plot <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">gridExtra<span class="operator">::</span>grid.arrange<span class="punctuation">(</span>t2<span class="operator">$</span>p1<span class="punctuation">,</span> t2<span class="operator">$</span>p2<span class="punctuation">,</span> ncol<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> nrow <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> widths <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># the middle asterisk represent the significances</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="12-trans-env-class"><a href="#12-trans-env-class" class="headerlink" title="12. trans_env class"></a><font color=#FF0000 >12. trans_env class</font></h1><ul><li><p>分析环境因子对微生物群落结构和组装的影响：RDA分析(db-RDA和RDA).</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add_data is used to add the environmental data</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_env<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> add_data <span class="operator">=</span> env_data<span class="punctuation">[</span><span class="punctuation">,</span> <span class="number">1</span><span class="operator">:</span><span class="number">7</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use bray-curtis distance to do dbrda</span></span><br><span class="line">t1<span class="operator">$</span>cal_rda<span class="punctuation">(</span>use_dbrda <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> use_measure <span class="operator">=</span> <span class="string">&quot;bray&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># t1$res_rda is the result list stored in the object</span></span><br><span class="line">t1<span class="operator">$</span>trans_rda<span class="punctuation">(</span>adjust_arrow_length <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> max_perc_env <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># t1$res_rda_trans is the transformed result for plotting</span></span><br><span class="line">t1<span class="operator">$</span>plot_rda<span class="punctuation">(</span>plot_color <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use Genus</span></span><br><span class="line">t1<span class="operator">$</span>cal_rda<span class="punctuation">(</span>use_dbrda <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> taxa_level <span class="operator">=</span> <span class="string">&quot;Genus&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># As the main results of RDA are related with the projection and angles between different arrows,</span></span><br><span class="line"><span class="comment"># we adjust the length of the arrow to show them clearly using several parameters.</span></span><br><span class="line">t1<span class="operator">$</span>trans_rda<span class="punctuation">(</span>show_taxa <span class="operator">=</span> <span class="number">10</span><span class="punctuation">,</span> adjust_arrow_length <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> max_perc_env <span class="operator">=</span> <span class="number">1500</span><span class="punctuation">,</span> max_perc_tax <span class="operator">=</span> <span class="number">3000</span><span class="punctuation">,</span> min_perc_env <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span> min_perc_tax <span class="operator">=</span> <span class="number">300</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># t1$res_rda_trans is the transformed result for plotting</span></span><br><span class="line">t1<span class="operator">$</span>plot_rda<span class="punctuation">(</span>plot_color <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Mantel test 用于检测环境因子和距离矩阵之间是否具有显著的相关性。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t1<span class="operator">$</span>cal_mantel<span class="punctuation">(</span>use_measure <span class="operator">=</span> <span class="string">&quot;bray&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_mantel</span></span><br><span class="line">t1<span class="operator">$</span>res_mantel</span><br></pre></td></tr></table></figure>  <div style="overflow-x:auto;">  <table>  <table><thead><tr><th></th><th>variable_name</th><th>cor_method</th><th>corr_res</th><th>p_res</th><th>significance</th></tr></thead><tbody><tr><td>1</td><td><strong>TN</strong></td><td>pearson</td><td>0.5571885</td><td>0.001</td><td>***</td></tr><tr><td>2</td><td><strong>TC</strong></td><td>pearson</td><td>0.5712239</td><td>0.001</td><td>***</td></tr><tr><td>3</td><td><strong>TS</strong></td><td>pearson</td><td>0.2665453</td><td>0.001</td><td>***</td></tr><tr><td>4</td><td><strong>TOC</strong></td><td>pearson</td><td>0.3540337</td><td>0.001</td><td>***</td></tr><tr><td>5</td><td><strong>Salinity</strong></td><td>pearson</td><td>0.2782537</td><td>0.001</td><td>***</td></tr><tr><td>6</td><td>Temperature</td><td>pearson</td><td>0.5856050</td><td>0.001</td><td>***</td></tr><tr><td>7</td><td><strong>Dissolved.oxygen</strong></td><td>pearson</td><td>0.4358422</td><td>0.001</td><td>***</td></tr><tr><td>8</td><td>Surface.chlorophyll.concentrations</td><td>pearson</td><td>0.2586823</td><td>0.001</td><td>***</td></tr><tr><td>9</td><td>pH</td><td>pearson</td><td>0.4498964</td><td>0.001</td><td>***</td></tr><tr><td>10</td><td><strong>PAR</strong></td><td>pearson</td><td>0.1712861</td><td>0.001</td><td>***</td></tr><tr><td>11</td><td>Density</td><td>pearson</td><td>0.5682679</td><td>0.001</td><td>***</td></tr><tr><td>12</td><td>Turbidity</td><td>pearson</td><td>0.2260436</td><td>0.001</td><td>***</td></tr><tr><td></table></div></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table></li><li><p>环境变量与分类群（taxa）的相关性对分析和推断影响群落结构的因素具有重要意义。在本例中，我们首先进行了差异丰度检验（differential abundance test）和随机森林分析（random forest），得到了重要的属（Genus）。然后利用这些分类单元进行相关性分析。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># first create trans_diff object</span></span><br><span class="line">t2 <span class="operator">&lt;-</span> trans_diff<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> method <span class="operator">=</span> <span class="string">&quot;rf&quot;</span><span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> rf_taxa_level <span class="operator">=</span> <span class="string">&quot;Genus&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># then create trans_env object</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_env<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> add_data <span class="operator">=</span> env_data<span class="punctuation">[</span><span class="punctuation">,</span> <span class="number">1</span><span class="operator">:</span><span class="number">7</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># calculate correlation</span></span><br><span class="line">t1<span class="operator">$</span>cal_cor<span class="punctuation">(</span>use_data <span class="operator">=</span> <span class="string">&quot;other&quot;</span><span class="punctuation">,</span> p_adjust_method <span class="operator">=</span> <span class="string">&quot;fdr&quot;</span><span class="punctuation">,</span> other_taxa <span class="operator">=</span> t2<span class="operator">$</span>res_rf<span class="operator">$</span>Taxa<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">60</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_cor </span></span><br></pre></td></tr></table></figure></li><li><p>使用ggplot2或pheatmap进行可视化</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># default ggplot2 method</span></span><br><span class="line">t1<span class="operator">$</span>plot_corr<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># clustering heatmap; require pheatmap package</span></span><br><span class="line">t1<span class="operator">$</span>plot_corr<span class="punctuation">(</span>pheatmap <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="#/images/lujia/7%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E7%BE%A4ggplot2.jpg" class="lazyload placeholder" data-srcset="#/images/lujia/7%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E7%BE%A4ggplot2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="7个环境变量与分类群ggplot2"></p><p><img src="#/images/lujia/7%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E7%BE%A4%E7%9B%B8%E5%85%B3%E6%80%A7_pheatmap.jpg" class="lazyload placeholder" data-srcset="#/images/lujia/7%E4%B8%AA%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E5%88%86%E7%B1%BB%E7%BE%A4%E7%9B%B8%E5%85%B3%E6%80%A7_pheatmap.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="7个环境变量与分类群相关性_pheatmap"></p><ul><li><p>各组内的环境变量与分类群taxa之间的关系</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># calculate correlations for different groups using parameter by_group</span></span><br><span class="line">t1<span class="operator">$</span>cal_cor<span class="punctuation">(</span>by_group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> use_data <span class="operator">=</span> <span class="string">&quot;other&quot;</span><span class="punctuation">,</span> p_adjust_method <span class="operator">=</span> <span class="string">&quot;fdr&quot;</span><span class="punctuation">,</span> other_taxa <span class="operator">=</span> t2<span class="operator">$</span>res_rf<span class="operator">$</span>Taxa<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">60</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_cor</span></span><br><span class="line">t1<span class="operator">$</span>plot_corr<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="#/images/lujia/correlations_between_environmental_variables_and_60_taxa.jpg" class="lazyload placeholder" data-srcset="#/images/lujia/correlations_between_environmental_variables_and_60_taxa.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="correlations_between_environmental_variables_and_60_taxa"></p><ul><li><p>环境因子与alpha-多样性之间的关系</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t1 <span class="operator">&lt;-</span> trans_env<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> add_data <span class="operator">=</span> env_data<span class="punctuation">[</span><span class="punctuation">,</span> <span class="number">1</span><span class="operator">:</span><span class="number">7</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># use add_abund_table parameter to add the extra data table</span></span><br><span class="line">t1<span class="operator">$</span>cal_cor<span class="punctuation">(</span>add_abund_table <span class="operator">=</span> meco_dataset<span class="operator">$</span>alpha_diversity<span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>plot_corr<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="#/images/lujia/relationship_between_7_environmental_factors_and_alpha_diversity.jpg" class="lazyload placeholder" data-srcset="#/images/lujia/relationship_between_7_environmental_factors_and_alpha_diversity.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="relationship_between_7_environmental_factors_and_alpha_diversity"></p><h1 id="13-trans-nullmodel-class"><a href="#13-trans-nullmodel-class" class="headerlink" title="13. trans_nullmodel class"></a><font color=#FF0000 >13. trans_nullmodel class</font></h1><ul><li><p>近几十年来，系统发育分析和空模型（null model）的结合，通过增加系统发育维度（phylogeny dimension），更加有力地促进了生态位和中性（niche and neutral）对群落组装影响的推断[16，17]。trans_nullmodel class提供了一个封装，包括对系统发育信号、beta平均成对系统发育距离（beta mean pairwise phylogenetic distance，betaMPD）、beta平均最近分类单元距离（beta mean nearest taxon distance，betaMNTD）、beta最近分类单元指数（beta nearest taxon index，betaNTI）、beta净相关指数（beta net relatedness index，betaNRI）和基于Bray-Curtis的Raup-Crick（Bray-Curtis-based Raup-Crick，RCbray）的计算。系统发育信号分析的方法基于mantel相关图（mantel correlogram）[18]，与其他方法相比，系统发育信号的变化是直观而清晰的。betaMNTD和betaMPD的算法已经过优化，比picante包中的算法更快[3]。RCbray和betaNTI（或betaNRI）之间的组合可用于推断在特定假设下支配群落装配（community assembly）的每个生态过程（ecological process）的强度[17]。这可以通过函数cal_process()来解析每个推断进程（ecological process）的百分比来实现。<font color=#2196F3 ><strong>我们首先检查系统发育信号：</strong></font></p> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># generate trans_nullmodel object; use 10000 OTUs as example</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_nullmodel<span class="operator">$</span>new<span class="punctuation">(</span>meco_dataset<span class="punctuation">,</span> taxa_number <span class="operator">=</span> <span class="number">10000</span><span class="punctuation">,</span> add_data <span class="operator">=</span> env_data<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use TOC as the test variable (__报错：Error in cor(as.vector(xdis), ydis, method = method, use = use) : </span></span><br><span class="line">  cov<span class="operator">/</span>cor中有遗漏值__<span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>cal_mantel_corr<span class="punctuation">(</span>use_env <span class="operator">=</span> <span class="string">&quot;TOC&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># return t1$res_mantel_corr</span></span><br><span class="line"><span class="comment"># plot the mantel correlogram(__报错：Error in names(x) &lt;- value : &#x27;names&#x27;属性的长度[4]必需和矢量的长度[0]一样__)</span></span><br><span class="line">t1<span class="operator">$</span>plot_mantel_corr<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>betaNRI（ses.betampd）用于显示“basal”系统发育转换（phylogenetic turnover）[18]。与betaNTI相比，它能捕获更多与深层系统发育（deep phylogeny）相关的转换信息（turnover information）。值得注意的是，经过几十年的发展，出现了许多空模型（null models）。在trans-nullmodel class中，我们随机化了物种的系统发育相关性。这种洗牌方法（shuffling approach）固定了观察到的物种α-多样性和β-多样性的水平，以探讨观察到的系统发育转换是否与空模型（物种间的系统发育关系是随机的）显著不同。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行500次null model</span></span><br><span class="line">t1<span class="operator">$</span>cal_ses_betampd<span class="punctuation">(</span>runs<span class="operator">=</span><span class="number">500</span><span class="punctuation">,</span> abundance.weighted <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 返回t1$res_ses_betampd</span></span><br></pre></td></tr></table></figure></li><li><p>可以使用trans_beta class中的plot_group_distance function绘制betaNRI图。结果表明T20和T21的平均betaNRI 显著高于其它三者，表明T20和T21中的basal phylogenetic turnover是高的。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将betaNRI矩阵加入到beta_diversity列表中</span></span><br><span class="line">meco_dataset<span class="operator">$</span>beta_diversity<span class="punctuation">[[</span><span class="string">&quot;betaNRI&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> t1<span class="operator">$</span>res_ses_betampd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用measure &quot;betaNRI&quot;创建trans_beta class</span></span><br><span class="line">t2 <span class="operator">&lt;-</span> trans_beta<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> measure <span class="operator">=</span> <span class="string">&quot;betaNRI&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># transform the distance for each group</span></span><br><span class="line">t2<span class="operator">$</span>cal_group_distance<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果可视化</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">g1 <span class="operator">&lt;-</span> t2<span class="operator">$</span>plot_group_distance<span class="punctuation">(</span>distance_pair_stat <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">g1 <span class="operator">+</span> geom_hline<span class="punctuation">(</span>yintercept <span class="operator">=</span> <span class="operator">-</span><span class="number">2</span><span class="punctuation">,</span> linetype <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span> <span class="operator">+</span> geom_hline<span class="punctuation">(</span>yintercept <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> linetype <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="#/images/lujia/betaNRI_all.jpg" class="lazyload placeholder" data-srcset="#/images/lujia/betaNRI_all.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="betaNRI all"></p><ul><li><p>若要单独的对每个组进行 null model analysis，例如每个组作为一个物种池（species pool），我们可以分别为每个组计算结果。 我们发现，当分别对每个组进行betaNRI 分析时，CW和TW间的mean betaNRI没有显著差异，且二者均显著高于IW ，揭示了在将每个区域视为特定物种库的条件下，CW和TW中变量选择的强度（strength of variable selection）可能相似。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个列表用于存放trans_nullmodel的结果</span></span><br><span class="line">sesbeta_each <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">group_col <span class="operator">&lt;-</span> <span class="string">&quot;Site&quot;</span></span><br><span class="line">all_groups <span class="operator">&lt;-</span> unique<span class="punctuation">(</span>meco_dataset<span class="operator">$</span>sample_table<span class="punctuation">[</span><span class="punctuation">,</span> group_col<span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对每个组分别进行计算</span></span><br><span class="line"><span class="keyword">for</span><span class="punctuation">(</span>i <span class="keyword">in</span> all_groups<span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="comment"># like the above operation, but need provide &#x27;group&#x27; and &#x27;select_group&#x27;</span></span><br><span class="line">test <span class="operator">&lt;-</span> trans_nullmodel<span class="operator">$</span>new<span class="punctuation">(</span>meco_dataset<span class="punctuation">,</span> group <span class="operator">=</span> group_col<span class="punctuation">,</span> select_group <span class="operator">=</span> i<span class="punctuation">,</span> taxa_number <span class="operator">=</span> <span class="number">1000</span><span class="punctuation">,</span> add_data <span class="operator">=</span> env_data<span class="punctuation">)</span></span><br><span class="line">test<span class="operator">$</span>cal_ses_betampd<span class="punctuation">(</span>runs <span class="operator">=</span> <span class="number">500</span><span class="punctuation">,</span> abundance.weighted <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">sesbeta_each<span class="punctuation">[[</span>i<span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> test<span class="operator">$</span>res_ses_betampd</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并结果并重塑（reshape），得到一个对称矩阵（symmetrical matrix）</span></span><br><span class="line">library<span class="punctuation">(</span>reshape2<span class="punctuation">)</span></span><br><span class="line">test <span class="operator">&lt;-</span> lapply<span class="punctuation">(</span>sesbeta_each<span class="punctuation">,</span> melt<span class="punctuation">)</span> <span class="operator">%&gt;%</span> do.call<span class="punctuation">(</span>rbind<span class="punctuation">,</span> .<span class="punctuation">)</span> <span class="operator">%&gt;%</span> reshape2<span class="operator">::</span>dcast<span class="punctuation">(</span>.<span class="punctuation">,</span> Var1<span class="operator">~</span>Var2<span class="punctuation">,</span> value.var <span class="operator">=</span> <span class="string">&quot;value&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> `row.names&lt;-`<span class="punctuation">(</span>.<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> .<span class="punctuation">[</span><span class="punctuation">,</span> <span class="operator">-</span><span class="number">1</span><span class="punctuation">,</span> drop <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如同上述操作</span></span><br><span class="line">meco_dataset<span class="operator">$</span>beta_diversity<span class="punctuation">[[</span><span class="string">&quot;betaNRI&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> test</span><br><span class="line">t2 <span class="operator">&lt;-</span> trans_beta<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> measure <span class="operator">=</span> <span class="string">&quot;betaNRI&quot;</span><span class="punctuation">)</span></span><br><span class="line">t2<span class="operator">$</span>cal_group_distance<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">g1 <span class="operator">&lt;-</span> t2<span class="operator">$</span>plot_group_distance<span class="punctuation">(</span>distance_pair_stat <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">g1 <span class="operator">+</span> geom_hline<span class="punctuation">(</span>yintercept <span class="operator">=</span> <span class="operator">-</span><span class="number">2</span><span class="punctuation">,</span> linetype <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span> <span class="operator">+</span> geom_hline<span class="punctuation">(</span>yintercept <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> linetype <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="#/images/lujia/betaNRI_individual.jpg" class="lazyload placeholder" data-srcset="#/images/lujia/betaNRI_individual.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="betaNRI individual"></p><ul><li><p>BetaNTI(ses.betamntd) 可用于指示系统发育的末端转换（ phylogenetic terminal turnover） [17]</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行500次null model</span></span><br><span class="line">t1<span class="operator">$</span>cal_ses_betamntd<span class="punctuation">(</span>runs<span class="operator">=</span><span class="number">500</span><span class="punctuation">,</span> abundance.weighted <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 返回t1$res_ses_betamntd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将betaNTI矩阵加入到beta_diversity列表中</span></span><br><span class="line">meco_dataset<span class="operator">$</span>beta_diversity<span class="punctuation">[[</span><span class="string">&quot;betaNTI&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> t1<span class="operator">$</span>res_ses_betamntd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用measure &quot;betaNRI&quot;创建trans_beta class</span></span><br><span class="line">t2 <span class="operator">&lt;-</span> trans_beta<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> group <span class="operator">=</span> <span class="string">&quot;Site&quot;</span><span class="punctuation">,</span> measure <span class="operator">=</span> <span class="string">&quot;betaNTI&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># transform the distance for each group</span></span><br><span class="line">t2<span class="operator">$</span>cal_group_distance<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果可视化</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">g1 <span class="operator">&lt;-</span> t2<span class="operator">$</span>plot_group_distance<span class="punctuation">(</span>distance_pair_stat <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">g1 <span class="operator">+</span> geom_hline<span class="punctuation">(</span>yintercept <span class="operator">=</span> <span class="operator">-</span><span class="number">2</span><span class="punctuation">,</span> linetype <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span> <span class="operator">+</span> geom_hline<span class="punctuation">(</span>yintercept <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> linetype <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>cal_rcbray()功能用于计算RCbray (Bray-Curtis-based Raup-Crick) ，以评估成分转换（compositional turnover）是否主要受漂移控制[19]。我们应用空模型（null model）通过从每个物种池中随机采样个体来模拟物种分布，同时保留物种发生频率（species occurrence frequency）和样本物种丰富度（sample species richness）[18]。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># result stored in t1$res_rcbray</span></span><br><span class="line">t1<span class="operator">$</span>cal_rcbray<span class="punctuation">(</span>runs <span class="operator">=</span> <span class="number">1000</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_rcbray</span></span><br></pre></td></tr></table></figure></li><li><p>作为一个例子，我们还计算了引用文献[17，18]中所示的在群落组装（community assembly）上推断过程（ inferred processes ）所占的比例。在此示例中，具有显着betaNTI值（|βNTI|&gt; 2）的成对比较部分是估计的选择（Selection）造成影响； βNTI&gt; 2代表异构选择（heterogeneous ）； βNTI&lt;-2表示同质选择（homogeneous ）。 RCbray值表征了随机分配（randomization）下观察到的Bray-Curtis和Bray-Curtis期望值之间的偏差大小（magnitude of deviation）。 | RCbray | &gt; 0.95被认为是显着的。 |βNTI| &lt; 2和RCbray &gt; +0.95被视为受散播限制（Dispersal Limitation）与漂移（Drift）相结合的影响。 |βNTI| &lt; 2和RCbray &lt; -0.95被视为均质分散（Homogenizing Dispersal）影响的估计值。 |βNTI| &lt; 2和|RCbray| &lt; 0.95估算了漂移单独作用的影响。</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use betaNTI and rcbray to evaluate processes</span></span><br><span class="line">t1<span class="operator">$</span>cal_process<span class="punctuation">(</span>use_betamntd <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># return t1$res_process</span></span><br><span class="line">t1<span class="operator">$</span>res_process</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>process</th><th>percentage</th></tr></thead><tbody><tr><td>1</td><td>variable selection</td><td>0.4341164</td></tr><tr><td>2</td><td>homogeneous selection</td><td>63.6874362</td></tr><tr><td>3</td><td>dispersal limitation</td><td>0.0000000</td></tr><tr><td>4</td><td>homogeneous dispersal</td><td>14.8365679</td></tr><tr><td>5</td><td>drift</td><td>21.0418795</td></tr></tbody></table></li></ul><h1 id="14-trans-network-class"><a href="#14-trans-network-class" class="headerlink" title="14. trans_network class"></a><font color=#FF0000 >14. trans_network class</font></h1><h2 id="correlation-based-network"><a href="#correlation-based-network" class="headerlink" title="correlation-based network"></a><font color=#FF9800 >correlation-based network</font></h2><ul><li>准备R包并进行计算相关性  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;WGCNA&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>WGCNA<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 以下3选1</span></span><br><span class="line"><span class="comment"># 1. Use R base cor.test, slow</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_network<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> cal_cor <span class="operator">=</span> <span class="string">&quot;base&quot;</span><span class="punctuation">,</span> taxa_level <span class="operator">=</span> <span class="string">&quot;OTU&quot;</span><span class="punctuation">,</span> filter_thres <span class="operator">=</span> <span class="number">0.0001</span><span class="punctuation">,</span> cor_method <span class="operator">=</span> <span class="string">&quot;spearman&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_cor_p list; one table: correlation; another: p value</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. SparCC method, require SpiecEasi package</span></span><br><span class="line"><span class="comment"># SparCC is very slow, so consider filtering more species with low abundance</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_network<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> meco_dataset<span class="punctuation">,</span> cal_cor <span class="operator">=</span> <span class="string">&quot;SparCC&quot;</span><span class="punctuation">,</span> taxa_level <span class="operator">=</span> <span class="string">&quot;OTU&quot;</span><span class="punctuation">,</span> filter_thres <span class="operator">=</span> <span class="number">0.001</span><span class="punctuation">,</span> SparCC_simu_num <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. When the OTU number is large, use R WGCNA package to replace R base to calculate correlations</span></span><br><span class="line"><span class="comment"># require WGCNA package</span></span><br><span class="line">t1 <span class="operator">&lt;-</span> trans_network<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> dataset<span class="punctuation">,</span> cal_cor <span class="operator">=</span> <span class="string">&quot;WGCNA&quot;</span><span class="punctuation">,</span> taxa_level <span class="operator">=</span> <span class="string">&quot;OTU&quot;</span><span class="punctuation">,</span> filter_thres <span class="operator">=</span> <span class="number">0.0001</span><span class="punctuation">,</span> cor_method <span class="operator">=</span> <span class="string">&quot;spearman&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="构建网络"><a href="#构建网络" class="headerlink" title="构建网络"></a><font color=#FF9800 >构建网络</font></h2><ul><li><p>COR_optimization &#x3D; TRUE represent using RMT theory to find the optimized correlation threshold instead of the COR_cut.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># construct network; require igraph package</span></span><br><span class="line">t1<span class="operator">$</span>cal_network<span class="punctuation">(</span>p_thres <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">,</span> COR_optimization <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_network</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># (可选) use arbitrary coefficient threshold to contruct network</span></span><br><span class="line">t1<span class="operator">$</span>cal_network<span class="punctuation">(</span>p_thres <span class="operator">=</span> <span class="number">0.01</span><span class="punctuation">,</span> COR_cut <span class="operator">=</span> <span class="number">0.73</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># save network</span></span><br><span class="line"><span class="comment"># open the gexf file using Gephi(https://gephi.org/)</span></span><br><span class="line"><span class="comment"># require rgexf package</span></span><br><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;rgexf&quot;</span><span class="punctuation">)</span></span><br><span class="line">t1<span class="operator">$</span>save_network<span class="punctuation">(</span>filepath <span class="operator">=</span> <span class="string">&quot;network.gexf&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Now, we show the node colors with the Phylum information and the edges colors with the positive and negative correlations. All the data used has been stored in the network.gexf file, including modules classifications, Phylum information and edges classifications.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># calculate network attributes</span></span><br><span class="line">t1<span class="operator">$</span>cal_network_attr<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_network_attr</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># classify the node; return t1$res_node_type</span></span><br><span class="line">t1<span class="operator">$</span>cal_node_type<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_node_type</span></span><br><span class="line"><span class="comment"># we retain the file for the following example in trans_func part</span></span><br><span class="line">network_node_type <span class="operator">&lt;-</span> t1<span class="operator">$</span>res_node_type</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot node roles in terms of the within-module connectivity and among-module connectivity</span></span><br><span class="line">t1<span class="operator">$</span>plot_taxa_roles<span class="punctuation">(</span>use_type <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># plot node roles with phylum information</span></span><br><span class="line">t1<span class="operator">$</span>plot_taxa_roles<span class="punctuation">(</span>use_type <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>Now, we show the eigengene analysis of modules. The eigengene of a module, i.e. the first principal component of PCA, represents the main variance of the abundance in the species of the module.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t1<span class="operator">$</span>cal_eigen<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_eigen</span></span><br></pre></td></tr></table></figure></li><li><p><strong>出错了</strong>！Then we perform correlation heatmap to show the relationships between eigengenes and environmental factors.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create trans_env object like the above operation</span></span><br><span class="line">t2 <span class="operator">&lt;-</span> trans_env<span class="operator">$</span>new<span class="punctuation">(</span>dataset <span class="operator">=</span> dataset<span class="punctuation">,</span> add_data <span class="operator">=</span> env_data_16S<span class="punctuation">[</span><span class="punctuation">,</span> <span class="number">4</span><span class="operator">:</span><span class="number">11</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># calculate correlations</span></span><br><span class="line">t2<span class="operator">$</span>cal_cor<span class="punctuation">(</span>add_abund_table <span class="operator">=</span> t1<span class="operator">$</span>res_eigen<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># plot the correlation heatmap</span></span><br><span class="line">t2<span class="operator">$</span>plot_corr<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li><p>The function cal_sum_links() is used to sum the links (edge) number from one taxa to another or in the same taxa. The function plot_sum_links() is used to show the result from the function cal_sum_links(). This is very useful to fast see how many nodes are connected between different taxa or within one taxa. In terms of “Phylum” level in the tutorial, the function cal_sum_links() sum the linkages number from one Phylum to another Phylum or the linkages in the same Phylum. So the numbers along the outside of the circular plot represent how many edges or linkages are related with the Phylum. For example, in terms of Proteobacteria, there are roughly total 900 edges associated with the OTUs in Proteobacteria, in which roughly 200 edges connect both OTUs in Proteobacteria and roughly 150 edges connect the OTUs from Proteobacteria with the OTUs from Chloroflexi.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">devtools<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;mattflor/chorddiag&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># calculate the links between or within taxonomic ranks (报错：Error in ecount(network) : 没有&quot;ecount&quot;这个函数)</span></span><br><span class="line">t1<span class="operator">$</span>cal_sum_links<span class="punctuation">(</span>taxa_level <span class="operator">=</span> <span class="string">&quot;Phylum&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t1$res_sum_links_pos and t1$res_sum_links_neg</span></span><br><span class="line"><span class="comment"># require chorddiag package</span></span><br><span class="line">t1<span class="operator">$</span>plot_sum_links<span class="punctuation">(</span>plot_pos <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> plot_num <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="15-trans-func-class"><a href="#15-trans-func-class" class="headerlink" title="15. trans_func class"></a><font color=#FF0000 >15. trans_func class</font></h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Identify microbial traits</span></span><br><span class="line"><span class="comment"># create object of trans_func</span></span><br><span class="line">t2 <span class="operator">&lt;-</span> trans_func<span class="operator">$</span>new<span class="punctuation">(</span>meco_dataset<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># mapping the taxonomy to the database</span></span><br><span class="line"><span class="comment"># the function can recognize prokaryotes or fungi automatically</span></span><br><span class="line">t2<span class="operator">$</span>cal_spe_func<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t2$res_spe_func, 1 represent function exists, 0 represent no or cannot confirmed.</span></span><br></pre></td></tr></table></figure><ul><li><p>The percentages of the OTUs having the same trait can reflect the functional redundancy of this function in the community or the module in the network.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># calculate the percentages of OTUs for each trait in each module of network</span></span><br><span class="line"><span class="comment"># use_community = FALSE represent calculating module, not community, node_type_table provide the module information</span></span><br><span class="line">t2<span class="operator">$</span>cal_spe_func_perc<span class="punctuation">(</span>use_community <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> node_type_table <span class="operator">=</span> network_node_type<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return t2$res_spe_func_perc</span></span><br><span class="line"><span class="comment"># we only plot some important traits, so we use the default group list to filter and show the traits.</span></span><br><span class="line">t2<span class="operator">$</span>plot_spe_func_perc<span class="punctuation">(</span>select_samples <span class="operator">=</span> paste0<span class="punctuation">(</span><span class="string">&quot;M&quot;</span><span class="punctuation">,</span> <span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># M represents module, ordered by the nodes number from high to low</span></span><br></pre></td></tr></table></figure></li><li><p>Tax4Fun requires a strict input file demand on the taxonomic information. To analyze the trimmed or changed OTU data in R with Tax4Fun, we provide a link to the Tax4Fun functional prediction.</p>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">t1 <span class="operator">&lt;-</span> trans_func<span class="operator">$</span>new<span class="punctuation">(</span>meco_dataset<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># install Tax4Fun package and download SILVA123 ref data from  http://tax4fun.gobics.de/</span></span><br><span class="line">wget https<span class="operator">:</span><span class="operator">/</span><span class="operator">/</span>github.com<span class="operator">/</span>bwemheu<span class="operator">/</span>Tax4Fun2<span class="operator">/</span>releases<span class="operator">/</span>download<span class="operator">/</span><span class="number">1.1</span>.5<span class="operator">/</span>Tax4Fun2_1.1.5.tar.gz</span><br><span class="line">install.packages<span class="punctuation">(</span>pkgs <span class="operator">=</span> <span class="string">&quot;Tax4Fun2_1.1.5.tar.gz&quot;</span><span class="punctuation">,</span> repos <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> source <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># decompress SILVA123; provide path in folderReferenceData as you put</span></span><br><span class="line">t1<span class="operator">$</span>cal_tax4fun<span class="punctuation">(</span>folderReferenceData <span class="operator">=</span> <span class="string">&quot;./SILVA123&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># return two files: t1$tax4fun_KO: KO file; t1$tax4fun_path: pathway file.</span></span><br><span class="line"><span class="comment"># t1$tax4fun_KO$Tax4FunProfile[1:5, 1:2]</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="16-知识点"><a href="#16-知识点" class="headerlink" title="16. 知识点"></a><font color=#FF0000 >16. 知识点</font></h1><h2 id="确定性过程和随机过程"><a href="#确定性过程和随机过程" class="headerlink" title="确定性过程和随机过程"></a><font color=#FF9800 >确定性过程和随机过程</font></h2><ul><li><p>The term <font color=#2196F3 size=5><b>“deterministic process”</b></font> refers to two types of selective forces, namely, those that lead to either more (i.e. homogeneous selection) or less (i.e. heterogeneous selection) similar structures among communities due to homogeneous and heterogeneous environmental pressures, respectively (Zhou &amp; Ning, 2017).  <font color=#2196F3 size=5><b>确定性过程</b></font>包括两种选择力，即分别导致更加相似（即同质选择）或更少相似（即异质选择）的群落间的结构的同质和异质环境压力。</p></li><li><p>The term<font color=#2196F3 size=5><b> “stochastic process” </b></font>refers to homogenizing dispersal, dispersal limitation (combined with drift) and pure drift, which can obscure the turnover among microbial communities due to high dispersal; low dispersal; and random changes in birth, death and reproduction, respectively (Zhou &amp; Ning, 2017). <font color=#2196F3 size=5><b>随机过程</b></font>是指均匀分散、分散限制（结合漂变）和纯漂变，它们可以通过高度分散、低分散和出生、死亡和繁殖的随机变化来掩盖&#x2F;减弱微生物群落之间的更替。</p></li></ul><p><img src="/images/lujia/nullmodel.png" alt="Community assembly processes by Stegen *et al.* https://www.nature.com/articles/ismej201393"></p><ul><li>An NTI of &gt;+2 indicates that the ASVs in a local community are more closely related than expected by chance, suggesting the role of selective pressures (e.g. environmental conditions) in phylogenetic clustering. An NTI of &lt;−2 represents phylogenetic overdispersion, indicating two possible biotic interactions: competition and facilitation. In contrast, a mean NTI across multiple communities that is significantly greater or less than zero indicates phylogenetic clustering or overdispersion, respectively (Zhou &amp; Ning, 2017). NTI &gt;2表明，在一个地方群落中，ASVs的亲缘关系比预期的更为密切，表明选择压力（如环境条件）在系统发育聚类中的作用。NTI &lt;-2表示系统发育过度分散，表明两种可能的生物相互作用：竞争和促进。相反，多个群落间的平均NTI显著大于或小于零，分别表明系统发育聚类或过度分散（Zhou和Ning，2017）。</li><li>βNTI&gt;+2 or &lt;−2 signified heterogeneous selection or homogeneous selection, respectively. βNTI&gt;+2 or &lt;−2 分别指示异质选择和同质选择。</li></ul><h1 id="17-参考"><a href="#17-参考" class="headerlink" title="17. 参考"></a><font color=#FF0000 >17. 参考</font></h1><ul><li><a href="https://chiliubio.github.io/microeco/">https://chiliubio.github.io/microeco/</a></li><li>Zhou, J., &amp; Ning, D. (2017). Stochastic community assembly: Does it matter in microbial ecology? Microbiology and Molecular Biology Reviews, 81(4), e00002–17. <a href="https://doi.org/10.1128/MMBR.00002%E2%80%9017">https://doi.org/10.1128/MMBR.00002‐17</a></li><li><a href="http://www.360doc.com/content/20/1223/07/71874948_952966442.shtml">http://www.360doc.com/content/20/1223/07/71874948_952966442.shtml</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扩增子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宏基因组分析流程及代码</title>
      <link href="/post/ab1b.html"/>
      <url>/post/ab1b.html</url>
      
        <content type="html"><![CDATA[<p>本文阐述宏基因组物种分类、组装、bining、基因预测及注释……</p><span id="more"></span><h1 id="A、软件列表及安装"><a href="#A、软件列表及安装" class="headerlink" title="A、软件列表及安装"></a>A、软件列表及安装</h1><h2 id="A-1-分类相关"><a href="#A-1-分类相关" class="headerlink" title="A.1 分类相关"></a>A.1 分类相关</h2><h3 id="A-1-1-metaphlan-3-0"><a href="#A-1-1-metaphlan-3-0" class="headerlink" title="A.1.1 metaphlan 3.0"></a>A.1.1 metaphlan 3.0</h3><p>MetaPhlAn is a tool for profiling the composition of microbial communities from metagenomic shotgun sequencing data.</p><h4 id="a-安装主文件"><a href="#a-安装主文件" class="headerlink" title="a. 安装主文件"></a>a. 安装主文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ conda create -n metaphlan python=3.7 metaphlan</span><br><span class="line">$ conda activate metaphlan</span><br></pre></td></tr></table></figure><h4 id="b-安装数据库"><a href="#b-安装数据库" class="headerlink" title="b. 安装数据库"></a>b. 安装数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ metaphlan --install</span><br></pre></td></tr></table></figure><h4 id="c-安装依赖包"><a href="#c-安装依赖包" class="headerlink" title="c. 安装依赖包"></a>c. 安装依赖包</h4><ul><li>hclust<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda install -c bioconda hclust2</span><br></pre></td></tr></table></figure></li><li>R, vegan, ape <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda install r-base r-vegan r-ape</span><br></pre></td></tr></table></figure></li><li>rbiom<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ R</span><br><span class="line">$ install.packages(<span class="string">&quot;rbiom&quot;</span>)</span><br><span class="line">$ quit()</span><br></pre></td></tr></table></figure></li></ul><h3 id="A-1-2-gtdbtk"><a href="#A-1-2-gtdbtk" class="headerlink" title="A.1.2 gtdbtk"></a>A.1.2 <a href="https://ecogenomics.github.io/GTDBTk/">gtdbtk</a></h3><h4 id="a-Hardware-requirements"><a href="#a-Hardware-requirements" class="headerlink" title="a. Hardware requirements"></a>a. Hardware requirements</h4><table><thead><tr><th>Domain</th><th>Memory</th><th>Storage</th><th>Time</th></tr></thead><tbody><tr><td>Archaea</td><td>~8 GB</td><td>~27 GB</td><td>~1 hour &#x2F; 1,000 genomes @ 64 CPUs</td></tr><tr><td>Bacteria</td><td>~150 GB</td><td>~27 GB</td><td>~1 hour &#x2F; 1,000 genomes @ 64 CPUs</td></tr></tbody></table><h4 id="b-Install-GTDB-Tk-with-conda"><a href="#b-Install-GTDB-Tk-with-conda" class="headerlink" title="b. Install GTDB-Tk with conda"></a>b. Install GTDB-Tk with conda</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create -n gtdbtk -c conda-forge -c bioconda gtdbtk</span><br></pre></td></tr></table></figure><h4 id="c-GTDB-Tk-reference-data"><a href="#c-GTDB-Tk-reference-data" class="headerlink" title="c. GTDB-Tk reference data"></a>c. GTDB-Tk reference data</h4><ul><li><strong>Note that different versions of the GTDB release data may not run on all versions of GTDB-Tk, below are all supported versions:</strong></li></ul><table><thead><tr><th>GTDB Release</th><th>Minimum version</th><th>Maximum version</th></tr></thead><tbody><tr><td>R95</td><td>1.3.0</td><td>N&#x2F;A</td></tr><tr><td>R89</td><td>0.3.0</td><td>0.1.2</td></tr><tr><td>R86.2</td><td>0.2.1</td><td>0.2.2</td></tr><tr><td>R86</td><td>0.1.0</td><td>0.1.6</td></tr><tr><td>R83</td><td>0.0.6</td><td>0.0.7</td></tr></tbody></table><ul><li>Download the reference data</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://data.ace.uq.edu.au/public/gtdb/data/releases/release95/95.0/auxillary_files/gtdbtk_r95_data.tar.gz</span><br><span class="line">  </span><br><span class="line">$ tar xvzf gtdbtk_r95_data.tar.gz</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：GTDB-Tk requires an environment variable named GTDBTK_DATA_PATH to be set to the directory containing the unarchived GTDB-Tk reference data.</p><ul><li>You can automatically alias GTDBTK_DATA_PATH whenever the environment is activated by editing {gtdbtk environment path}&#x2F;etc&#x2F;conda&#x2F;activate.d&#x2F;gtdbtk.sh, e.g.:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Determine the GTDB-Tk environment path</span></span><br><span class="line">$ conda activate gtdbtk</span><br><span class="line">$ <span class="built_in">which</span> gtdbtk</span><br><span class="line"><span class="comment"># /miniconda3/envs/gtdbtk-1.3.0/bin/gtdbtk</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Edit the activate file</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;export GTDBTK_DATA_PATH=/path/to/release/package/&quot;</span> &gt; /miniconda3/envs/gtdbtk-1.3.0/etc/conda/activate.d/gtdbtk.sh</span><br></pre></td></tr></table></figure><h3 id="A-1-3-Kraken2"><a href="#A-1-3-Kraken2" class="headerlink" title="A.1.3 Kraken2"></a>A.1.3 <a href="https://github.com/DerrickWood/kraken2">Kraken2</a></h3><h4 id="a-Hardware-requirements-1"><a href="#a-Hardware-requirements-1" class="headerlink" title="a. Hardware requirements"></a>a. Hardware requirements</h4><ul><li>Disk space: Construction of a Kraken 2 standard database requires approximately 100 GB of disk space. A test on 01 Jan 2018 of the default installation showed 42 GB of disk space was used to store the genomic library files, 26 GB was used to store the taxonomy information from NCBI, and 29 GB was used to store the Kraken 2 compact hash table.</li><li>Memory: To run efficiently, Kraken 2 requires enough free memory to hold the database (primarily the hash table) in RAM. While this can be accomplished with a ramdisk, Kraken 2 will by default load the database into process-local RAM; the –memory-mapping switch to kraken2 will avoid doing so. The default database size is 29 GB (as of Jan. 2018), and you will need slightly more than that in RAM if you want to build the default database.</li></ul><h4 id="b-Install-Kraken2-with-conda"><a href="#b-Install-Kraken2-with-conda" class="headerlink" title="b. Install Kraken2 with conda"></a>b. Install Kraken2 with conda</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create -n kraken2 kraken2</span><br></pre></td></tr></table></figure><h4 id="c-Build-the-database"><a href="#c-Build-the-database" class="headerlink" title="c. Build the database"></a>c. Build the database</h4><ul><li>下载数据库。找到一个存储空间比较大的目录并进入，运行如下命令，这里下载的数据库包括archaea，bacteria，plasmid，viral，fungi，protozoa，UniVec和UniVec_Core：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> bash -c <span class="string">&#x27;for i in archaea bacteria plasmid viral fungi protozoa UniVec UniVec_Core; do kraken2-build --download-library $i --threads 24 --db db_name; done&#x27;</span> &amp;</span><br></pre></td></tr></table></figure></li><li>下载分类信息<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> kraken2-build --download-taxonomy --threads 24 --db db_name &amp;</span><br></pre></td></tr></table></figure></li><li>建立索引<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> kraken2-build --build --threads 24 --db db_name &amp;</span><br></pre></td></tr></table></figure><h4 id="d-序列分类"><a href="#d-序列分类" class="headerlink" title="d. 序列分类"></a>d. 序列分类</h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kraken2 --paired --threads 24 --unclassified-out unclassified<span class="comment">#.fq --classified-out classified#.fq --output outfile --confidence 0.5 --memory-mapping --use-names --report reportname --report-zero-counts --db $DBNAME reads1 read2</span></span><br></pre></td></tr></table></figure><h2 id="A-2-组装、Bining、质量评估"><a href="#A-2-组装、Bining、质量评估" class="headerlink" title="A.2 组装、Bining、质量评估"></a>A.2 组装、Bining、质量评估</h2><h3 id="A-2-1-metawrap"><a href="#A-2-1-metawrap" class="headerlink" title="A.2.1 metawrap"></a>A.2.1 metawrap</h3><p>MetaWRAP is a pipeline for genome-resolved metagenomic data analysis.</p><h4 id="a-安装主文件-1"><a href="#a-安装主文件-1" class="headerlink" title="a. 安装主文件"></a>a. 安装主文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create -n metawrap python=2.7 metaphlan</span><br></pre></td></tr></table></figure><h4 id="b-安装其他分析工具到metawrap环境中"><a href="#b-安装其他分析工具到metawrap环境中" class="headerlink" title="b. 安装其他分析工具到metawrap环境中"></a>b. 安装其他分析工具到metawrap环境中</h4><ul><li><strong>cd-hit</strong></li><li><strong>coverm</strong> DNA read coverage and relative abundance calculator focused on metagenomics applications</li><li><strong>bamm</strong> Metagenomics-focused BAM file manipulation</li><li><strong>unitem</strong> Ensemble binning strategies for combining the output of multiple binning methods</li><li><strong>humann2</strong> The HMP Unified Metabolic Analysis Network 2</li><li><strong><a href="https://github.com/biobakery/biobakery/wiki/GraPhlAn">graphlan</a></strong> </li><li><strong><a href="https://pypi.org/project/export2graphlan/">export2graphlan</a></strong> </li><li><strong><a href="https://data.ace.uq.edu.au/public/CheckM_databases/">checkm database</a></strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ conda activeta metawrap</span><br><span class="line">$ conda install cd-hit coverm bamm unitem humann2 graphlan export2graphlan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到一个合适的目录并cd进入以便存储checkm数据库</span></span><br><span class="line">$ wget https://data.ace.uq.edu.au/public/CheckM_databases/checkm_data_2015_01_16.tar.gz</span><br><span class="line">$ tar zxvf checkm_data_2015_01_16.tar.gz</span><br><span class="line">$ checkm data setRoot</span><br><span class="line"><span class="comment"># 随后输入数据库所在的full path</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="A-3-非冗余基因功能注释"><a href="#A-3-非冗余基因功能注释" class="headerlink" title="A.3 非冗余基因功能注释"></a>A.3 非冗余基因功能注释</h2><h3 id="A-3-1-eggNOG-mapper"><a href="#A-3-1-eggNOG-mapper" class="headerlink" title="A.3.1 eggNOG-mapper"></a>A.3.1 eggNOG-mapper</h3><p>功能注释，uniref, eggNOG, KEGG, GO; CAZy; VFDB; CARD; TCDB; PHI。</p><h3 id="A-3-2-EnrichM"><a href="#A-3-2-EnrichM" class="headerlink" title="A.3.2 EnrichM"></a>A.3.2 EnrichM</h3><p><a href="https://github.com/geronimp/enrichM">EnrichM</a> is a set of comparative genomics tools for large sets of metagenome assembled genomes (MAGs). The current functionality includes:</p><ul><li>A basic annotation pipeline for MAGs.</li><li>A pipeline to determine the metabolic pathways that are encoded by MAGs, using KEGG modules as a reference (although custom pathways can be specified)</li><li>A pipeline to identify genes or metabolic pathways that are enriched within and between user-defined groups of genomes (groups can be genomes that are related functionally, phylogenetically, recovered from different environments, etc).</li><li>To construct metabolic networks from annotated population genomes.</li><li>Construct random forest machine learning models from the functional composition of either MAGs, metagenomes or transcriptomes.</li><li>Apply these random forest machine learning models to classify new MAGs metagenomes.</li></ul><h4 id="a-安装主文件-2"><a href="#a-安装主文件-2" class="headerlink" title="a. 安装主文件"></a>a. 安装主文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ conda create -n enrichm python=3</span><br><span class="line">$ conda install enrichm</span><br></pre></td></tr></table></figure><h4 id="b-安装数据库-1"><a href="#b-安装数据库-1" class="headerlink" title="b. 安装数据库"></a>b. 安装数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 约5.7 G</span></span><br><span class="line">$ enrichm data</span><br></pre></td></tr></table></figure><p><strong>报错</strong> ：</p><blockquote><p>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;data.py”, line 114, in do<br>    version_remote &#x3D; urllib.request.urlopen(self.ftp + self.VERSION).readline().strip().decode(“utf-8”)<br>AttributeError: module ‘urllib’ has no attribute ‘request’</p><p>During handling of the above exception, another exception occurred:</p><p>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;bin&#x2F;enrichm”, line 342, in &lt;module&gt;<br>    run.run_enrichm(args, sys.argv)<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;run.py”, line 288, in run_enrichm<br>    d.do(args.uninstall, args.dry)<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;data.py”, line 117, in do<br>    “Unable to find most current EnrichM database VERSION in ftp. Please complain at <a href="https://github.com/geronimp/enrichM">https://github.com/geronimp/enrichM</a>“)<br>Exception: Unable to find most current EnrichM database VERSION in ftp. Please complain at <a href="https://github.com/geronimp/enrichM">https://github.com/geronimp/enrichM</a></p></blockquote><p><strong>解决方案：将data.py中的’import urllib’替换为’import urllib.request’</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /home/hualin/miniconda3/envs/enrichm/lib/python3.6/site-packages/enrichm/data.py</span><br></pre></td></tr></table></figure><h4 id="c-Sepcifying-the-location-of-the-EnrichM-database"><a href="#c-Sepcifying-the-location-of-the-EnrichM-database" class="headerlink" title="c. Sepcifying the location of the EnrichM database"></a>c. Sepcifying the location of the EnrichM database</h4><p>If you would like to store the EnrichM database outside of your home directory, move you need to tell EnrichM where to look. To do this, export a BASH variable named “ENRICHM_DB”:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> ENRICHM_DB=/path/to/database/ &gt;&gt;~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>注意</strong> ：&#x2F;path&#x2F;to&#x2F;database&#x2F;根据实际情况而定！<br><strong>报错</strong>：</p><blockquote><p>$ enrichm<br>Traceback (most recent call last):<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;bin&#x2F;enrichm”, line 38, in &lt;module&gt;<br>    from enrichm.run import Run<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;run.py”, line 24, in &lt;module&gt;<br>    from enrichm.network_analyzer import NetworkAnalyser<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;network_analyzer.py”, line 22, in &lt;module&gt;<br>    from enrichm.network_builder import NetworkBuilder<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;network_builder.py”, line 24, in &lt;module&gt;<br>    from enrichm.databases import Databases<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;databases.py”, line 28, in &lt;module&gt;<br>    class Databases:<br>  File “&#x2F;home&#x2F;hualin&#x2F;miniconda3&#x2F;envs&#x2F;enrichm&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;enrichm&#x2F;databases.py”, line 36, in Databases<br>    PICKLE_VERSION &#x3D; open(os.path.join(CUR_DATABASE_DIR, ‘VERSION’)).readline().strip()<br>FileNotFoundError: [Errno 2] No such file or directory: ‘&#x2F;new_data&#x2F;hualin&#x2F;db&#x2F;enrichm_database_v10&#x2F;26-11-2018&#x2F;VERSION’</p></blockquote><p><strong>Solve</strong>: 将下载的数据库文件全部复制一份到“<strong>26-11-2018</strong>”目录中，否则后续运行annotaton时会提示找不到数据库文件。</p><h1 id="B、数据分析"><a href="#B、数据分析" class="headerlink" title="B、数据分析"></a>B、数据分析</h1><h2 id="B-1-使用metaphlan从Reads中获取物种分类信息"><a href="#B-1-使用metaphlan从Reads中获取物种分类信息" class="headerlink" title="B.1 使用metaphlan从Reads中获取物种分类信息"></a>B.1 使用metaphlan从Reads中获取物种分类信息</h2><h3 id="Step-1-激活环境"><a href="#Step-1-激活环境" class="headerlink" title="Step 1. 激活环境"></a>Step 1. 激活环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda activate metaphlan</span><br></pre></td></tr></table></figure><h3 id="Step-2-对paired-end-Reads进行注释"><a href="#Step-2-对paired-end-Reads进行注释" class="headerlink" title="Step 2. 对paired-end Reads进行注释"></a>Step 2. 对paired-end Reads进行注释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ metaphlan Reads1,Reads2 --input_type fastq --bowtie2out Str1.bowtie2.bz2 --<span class="built_in">nproc</span> 10 -o Str1_profiled.txt</span><br></pre></td></tr></table></figure><p>Reads1和Reads2分别代表双端测序得到的正向和反向数据；–input_type指定文件格式，我们拿到的下机数据一般为fastq格式；–bowtie2out参数将会保存运行产生的中间文件以便后续重新运行程序时作为输入文件；–nproc指定使用的线程数量；-o指定输出文件名。</p><h3 id="Step-3-汇总所有的结果文件"><a href="#Step-3-汇总所有的结果文件" class="headerlink" title="Step 3. 汇总所有的结果文件"></a>Step 3. 汇总所有的结果文件</h3><p>对所有的文件均运行Step 2 ，产生了多个输出文件（*_profiled.txt），可以将它们汇总到一个文件中（merged_abundance_table.txt），便于后续对多个样品进行相互比较。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ merge_metaphlan_tables.py *_profiled.txt &gt; merged_abundance_table.txt</span><br></pre></td></tr></table></figure><h3 id="Step-4-从合并的文件中提取种水平的分类"><a href="#Step-4-从合并的文件中提取种水平的分类" class="headerlink" title="Step 4. 从合并的文件中提取种水平的分类"></a>Step 4. 从合并的文件中提取种水平的分类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -E <span class="string">&quot;s__|clade&quot;</span> merged_abundance_table.txt | sed <span class="string">&#x27;s/^.*s__//g&#x27;</span> | <span class="built_in">cut</span> -f1,3-8 | sed -e <span class="string">&#x27;s/clade_name/body_site/g&#x27;</span> &gt; merged_abundance_table_species.txt</span><br></pre></td></tr></table></figure><h3 id="Step-5-绘制样本间种水平的热图"><a href="#Step-5-绘制样本间种水平的热图" class="headerlink" title="Step 5. 绘制样本间种水平的热图"></a>Step 5. 绘制样本间种水平的热图</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hclust2.py -i merged_abundance_table_species.txt -o abundance_heatmap_species.png --ftop 50 --f_dist_f braycurtis --s_dist_f braycurtis --cell_aspect_ratio 0.5 -l --flabel_size 10 --slabel_size 10 --max_flabel_len 100 --max_slabel_len 100 --minv 0.1 --dpi 300</span><br></pre></td></tr></table></figure><h3 id="Step-6-计算样本间的unifrac距离"><a href="#Step-6-计算样本间的unifrac距离" class="headerlink" title="Step 6. 计算样本间的unifrac距离"></a>Step 6. 计算样本间的unifrac距离</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载依赖的tree文件和脚本,与要分析的文件放于同一目录下</span></span><br><span class="line">$ wget https://github.com/biobakery/MetaPhlAn/blob/master/metaphlan/utils/mpa_v30_CHOCOPhlAn_201901_species_tree.nwk</span><br><span class="line">$ wget https://github.com/biobakery/MetaPhlAn/blob/master/metaphlan/utils/calculate_unifrac.R</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始计算距离</span></span><br><span class="line">$ Rscript plot_unifrac.R merged_abundance_table.txt mpa_v30_CHOCOPhlAn_201901_species_tree.nwk unifrac_merged_abundance_table.txt</span><br></pre></td></tr></table></figure><h3 id="Step-7-绘制cladogram图"><a href="#Step-7-绘制cladogram图" class="headerlink" title="Step 7. 绘制cladogram图"></a>Step 7. 绘制cladogram图</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 激活依赖软件所在的环境</span></span><br><span class="line">$ conda activate metawrap</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成绘图所需的文件</span></span><br><span class="line">$ <span class="built_in">tail</span> -n +2 merged_abundance_table.txt | <span class="built_in">cut</span> -f1,3- &gt; merged_abundance_table_reformatted.txt</span><br><span class="line"></span><br><span class="line">$ export2graphlan.py --skip_rows 1 -i merged_abundance_table_reformatted.txt --tree merged_abundance.tree.txt --annotation merged_abundance.annot.txt --most_abundant 100 --abundance_threshold 1 --least_biomarkers 10 --annotations 5,6 --external_annotations 7 --min_clade_size 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">$ graphlan_annotate.py --annot merged_abundance.annot.txt merged_abundance.tree.txt merged_abundance.xml</span><br><span class="line"></span><br><span class="line">$ graphlan.py --dpi 300 merged_abundance.xml merged_abundance.pdf --external_legends</span><br></pre></td></tr></table></figure><h2 id="B-2-使用metawrap对Reads进行组装"><a href="#B-2-使用metawrap对Reads进行组装" class="headerlink" title="B.2 使用metawrap对Reads进行组装"></a>B.2 使用metawrap对Reads进行组装</h2><h3 id="Step-1-激活环境-1"><a href="#Step-1-激活环境-1" class="headerlink" title="Step 1. 激活环境"></a>Step 1. 激活环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda activate metawrap</span><br></pre></td></tr></table></figure><h3 id="Step-2-组装"><a href="#Step-2-组装" class="headerlink" title="Step 2. 组装"></a>Step 2. 组装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ metawrap assembly -1 Reads1 -2 Reads2 -o Assemble1 -m 300 -t 15 --metaspades</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>Usage: metaWRAP assembly [options] -1 reads_1.fastq -2 reads_2.fastq -o output_dir<ul><li>Options:<ul><li><p>   -1 STR          forward fastq reads</p></li><li><p>   -2 STR          reverse fastq reads</p></li><li><p>   -o STR          output directory</p></li><li><p>   -m INT          memory in GB (default&#x3D;24)</p></li><li><p>   -t INT          number of threads (defualt&#x3D;1)</p></li><li><p>   -l INTminimum length of assembled contigs (default&#x3D;1000)</p></li><li><p>   --megahitassemble with megahit (default)</p></li><li><p>--metaspadesassemble with metaspades instead of megahit (better results but slower and higher memory requirement)</p></li></ul></li></ul></details><p>Reads1和Reads2分别代表双端测序得到的正向和反向数据；-o指定输出目录，-m指定最大可用内存大小，超过设定值后程序会自动退出，建议设大一点，我10G的数据大概需要180G内存；-t指定线程数；–metaspades表示用metaspades进行组装，特别慢，但是组装结果相对好一些。</p><h2 id="B-3-使用metawrap对Contigs进行Bining"><a href="#B-3-使用metawrap对Contigs进行Bining" class="headerlink" title="B.3 使用metawrap对Contigs进行Bining"></a>B.3 使用metawrap对Contigs进行Bining</h2><h3 id="Step-1-激活环境-2"><a href="#Step-1-激活环境-2" class="headerlink" title="Step 1. 激活环境"></a>Step 1. 激活环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda activate metawrap</span><br></pre></td></tr></table></figure><h3 id="Step-2-Bining"><a href="#Step-2-Bining" class="headerlink" title="Step 2. Bining"></a>Step 2. Bining</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ metawrap binning -o Str1.INITIAL_BINNING -t 20 -m 200 --universal --run-checkm -a &lt;path of contigs&gt; --metabat2 --maxbin2 --concoct 解压的Reads1 解压的Reads2</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>Usage: metaWRAP binning [options] -a assembly.fa -o output_dir readsA_1.fastq readsA_2.fastq ... [readsX_1.fastq readsX_2.fastq]<ul><li><p>Note1: Make sure to provide all your separately replicate read files, not the joined file.</p></li><li><p>Note2: You may provide single end or interleaved reads as well with the use of the correct option</p></li><li><p>Note3: If the output already has the .bam alignments files from previous runs, the module will skip re-aligning the reads</p></li><li><p>Options:</p><ul><li>   -a STR          metagenomic assembly file</li><li>   -o STR          output directory</li><li>   -t INT          number of threads (default&#x3D;1)</li><li>   -m INTamount of RAM available (default&#x3D;4)</li><li>   -l INTminimum contig length to bin (default&#x3D;1000bp). Note: metaBAT will default to 1500bp minimum</li><li>   --metabat2      bin contigs with metaBAT2</li><li>   --metabat1bin contigs with the original metaBAT</li><li>   --maxbin2bin contigs with MaxBin2</li><li>   --concoctbin contigs with CONCOCT</li><li>--universaluse universal marker genes instead of bacterial markers in MaxBin2 (improves Archaea binning)</li><li>   --run-checkmimmediately run CheckM on the bin results (requires 40GB+ of memory)</li><li>   --single-endnon-paired reads mode (provide *.fastq files)</li><li>   --interleavedthe input read files contain interleaved paired-end reads</details>**注意避坑：** 这里的Reads1和Reads2需要提供解压缩后的Reads文件，不但要解压缩，还需要重命名，即后缀名必须为“\_clean\_1.fastq” 和 “\_clean\_2.fastq”，否则软件无法运行。-o指定输出目录；-t指定线程数；-m指定最大内存限制；--run-checkm表明即时检查Bining的质量；--metabat2 --maxbin2 --concoct 指定同时采用这三个分箱工具进行Bining；--universal指定MaxBin2采用universal marker 基因代替 bacterial markers  (improves Archaea binning)。</li></ul></li></ul><h3 id="Step-3-整合三种方法的bins-metabat2-maxbin2-concoct-结果"><a href="#Step-3-整合三种方法的bins-metabat2-maxbin2-concoct-结果" class="headerlink" title="Step 3. 整合三种方法的bins (metabat2, maxbin2, concoct) 结果"></a>Step 3. 整合三种方法的bins (metabat2, maxbin2, concoct) 结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ metawrap bin_refinement -o F01_BIN_REFINEMENT(输出目录) -t 20 -A str1.INITIAL_BINNING/metabat2_bins/ -B str1.INITIAL_BINNING/maxbin2_bins/ -C str1.INITIAL_BINNING/concoct_bins/ -c 70 -x 5</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>Usage: metaWRAP bin_refinement [options] -o output_dir -A bin_folderA [-B bin_folderB -C bin_folderC]<ul><li><p>Note: the contig names in different bin folders must be consistant (must come from the same assembly).</p></li><li><p>Options:</p><ul><li>-o STR          output directory</li><li>   -t INT          number of threads (default&#x3D;1)</li><li>   -m INTmemory available (default&#x3D;40)</li><li>   -c INT          完整度minimum % completion of bins [should be &gt;50%] (default&#x3D;70)</li><li>   -x INT          污染度maximum % contamination of bins that is acceptable (default&#x3D;10)</li><li>   -A STRfolder with metagenomic bins (files must have .fa or .fasta extension)</li><li>   -B STRanother folder with metagenomic bins</li><li>   -C STRanother folder with metagenomic bins</li><li>   --skip-refinementdont use binning_refiner to come up with refined bins based on combinations of binner outputs</li><li>   --skip-checkmdont run CheckM to assess bins</li><li>   --skip-consolidationchoose the best version of each bin from all bin refinement iteration</li><li>   --keep-ambiguousfor contigs that end up in more than one bin, keep them in all bins (default: keeps them only in the best bin)</li><li>   --remove-ambiguousfor contigs that end up in more than one bin, remove them in all bins (default: keeps them only in the best bin)</li><li>   --quickadds –reduced_tree option to checkm, reducing runtime, especially with low memory</li></ul></li></ul></details><h3 id="Step-4-Blobology可视化bin"><a href="#Step-4-Blobology可视化bin" class="headerlink" title="Step 4. Blobology可视化bin"></a>Step 4. Blobology可视化bin</h3><p><strong>一个坑：</strong> metawrap安装的blast为2.6版本，只能用Version 4 的nt库。而最新的nt库为Version 5，v4已经不再维护了。因此需要更新metawrap安装环境中的blast至2.8.0及以上版本，这里无法通过‘conda updata blast’实现更新，而是需要下载新版本的blast可执行程序，覆盖metawrap环境中的blast程度们。 如果你采用的是默认版本的blast和V5的nt库，会得到报错：“BLAST Database error: Error: Not a valid version 4 database”.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ metawrap blobology -a Result/Assemble/F01/final_assembly.fasta -t 20 -o F01.BLOBOLOGY --bins F01_BIN_REFINEMENT/metawrap_70_5_bins reads/F01_clean_1.fastq reads/F01_clean_2.fastq</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>Usage: metaWRAP blobology [options] -a assembly.fasta -o output_dir readsA_1.fastq readsA_2.fastq [readsB_1.fastq readsB_2.fastq ... ]<ul><li><p>Options:</p><ul><li>   -a STRassembly fasta file</li><li>   -o STR          output directory</li><li>   -t INT          number of threads</li><li>   --subsamble INTNumber of contigs to run blobology on. Subsampling is randomized. (default&#x3D;ALL)</li><li>   --binsSTRFolder containing bins. Contig names must match those of the assembly file. (default&#x3D;None)</li></ul></li></ul></details><h3 id="Step-5-Bins-定量"><a href="#Step-5-Bins-定量" class="headerlink" title="Step 5. Bins 定量"></a>Step 5. Bins 定量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ metawrap quant_bins -b F01_BIN_REFINEMENT/metawrap_70_5_bins -t 8 -o F01.QUANT_BINS -a Result/Assemble/F01/final_assembly.fasta reads/F01_clean_1.fastq reads/F01_clean_2.fastq</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>Usage: metaWRAP quant_bins [options] -b bins_folder -o output_dir -a assembly.fa readsA_1.fastq readsA_2.fastq ... [readsX_1.fastq readsX_2.fastq]<ul><li><p>Options:</p><ul><li>   -b STR          folder containing draft genomes (bins) in fasta format</li><li>   -o STR          output directory</li><li>   -a STRfasta file with entire metagenomic assembly (strongly recommended!)</li><li>   -t INTnumber of threads</li></ul></li></ul></details><h3 id="Step-6-重组装"><a href="#Step-6-重组装" class="headerlink" title="Step 6. 重组装"></a>Step 6. 重组装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">metawrap reassemble_bins -o F01.BIN_REASSEMBLY -1 reads/F01_clean_1.fastq -2 reads/F01_clean_2.fastq -t 20 -m 400 -c 70 -x 10 -b F01_BIN_REFINEMENT/metawrap_70_5_bins</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>Usage: metaWRAP reassemble_bins [options] -o output_dir -b bin_folder -1 reads_1.fastq -2 reads_2.fastq<ul><li><p>Options:</p><ul><li>   -b STRfolder with metagenomic bins</li><li>   -o STRoutput directory</li><li>   -1 STR          forward reads to use for reassembly</li><li>   -2 STR          reverse reads to use for reassembly</li><li>   -t INTnumber of threads (default&#x3D;1)</li><li>   -m INTmemory in GB (default&#x3D;40)</li><li>   -c INTminimum desired bin completion % (default&#x3D;70)</li><li>   -x INTmaximum desired bin contamination % (default&#x3D;10)</li><li>   -l INTminimum contig length to be included in reassembly (default&#x3D;500)</li><li>   --strict-cut-offmaximum allowed SNPs for strict read mapping (default&#x3D;2)</li><li>   --permissive-cut-offmaximum allowed SNPs for permissive read mapping (default&#x3D;5)</li><li>   --skip-checkmdont run CheckM to assess bins</li><li>   --parallelrun spades reassembly in parallel, but only using 1 thread per bin</li></ul></li></ul></details><h2 id="B-4-MAGs注释"><a href="#B-4-MAGs注释" class="headerlink" title="B.4 MAGs注释"></a>B.4 MAGs注释</h2><h3 id="B-4-1-GTDB-TK-进行物种分类和注释，构建系统发育树"><a href="#B-4-1-GTDB-TK-进行物种分类和注释，构建系统发育树" class="headerlink" title="B.4.1 GTDB-TK 进行物种分类和注释，构建系统发育树"></a>B.4.1 GTDB-TK 进行物种分类和注释，构建系统发育树</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda activate gtdbtk</span><br></pre></td></tr></table></figure><h4 id="classify-wf——Classify-workflow-包括了Step-1-3"><a href="#classify-wf——Classify-workflow-包括了Step-1-3" class="headerlink" title="classify_wf——Classify workflow (包括了Step 1-3)"></a>classify_wf——Classify workflow (包括了Step 1-3)</h4><p>The classify workflow consists of three steps: identify, align, and classify.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ time gtdbtk classify_wf --genome_dir metawrap_70_5_bins/ --out_dir classify_wf_output -x .fa --prefix F --cpus 6 -r --debug</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>usage: gtdbtk classify_wf (--genome_dir GENOME_DIR | --batchfile BATCHFILE) --out_dir OUT_DIR [-x EXTENSION] [--min_perc_aa MIN_PERC_AA] [--prefix PREFIX] [--cpus CPUS]                          [--pplacer_cpus PPLACER_CPUS] [--force] [--scratch_dir SCRATCH_DIR] [-r] [--min_af MIN_AF] [--debug] [-h]<ul><li><p>mutually exclusive required arguments:</p><ul><li>--genome_dir GENOME_DIR<br>               directory containing genome files in FASTA format</li><li>--batchfile BATCHFILE<br>               path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</li></ul></li><li><p>required named arguments:</p><ul><li>--out_dir OUT_DIR     directory to output files</li></ul></li><li><p>optional arguments:</p><ul><li>-x, --extension EXTENSION<br>                extension of files to process, gz &#x3D; gzipped (default: fna)</li><li>--min_perc_aa MIN_PERC_AA<br>                exclude genomes that do not have at least this percentage of AA in the MSA (inclusive bound) (default: 10)</li><li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li><li>--cpus CPUS           number of CPUs to use (default: 1)</li><li>--pplacer_cpus PPLACER_CPUS<br>                use pplacer_cpus during placement (default: cpus)</li><li>--force               continue processing if an error occurs on a single genome (default: False)</li><li>--scratch_dir SCRATCH_DIR<br>                Reduce pplacer memory usage by writing to disk (slower).</li><li>-r, --recalculate_red<br>                recalculate RED values based on the reference tree and all added user genomes (default: False)</li><li>--min_af MIN_AF       minimum alignment fraction to consider closest genome (default: 0.65)</li><li>--debug               create intermediate files for debugging purposes (default: False)</li><li>-h, --help            show help message</details></li></ul></li></ul><h4 id="Step-1-identify——在基因组中寻找marker-genes"><a href="#Step-1-identify——在基因组中寻找marker-genes" class="headerlink" title="Step 1: identify——在基因组中寻找marker genes"></a>Step 1: identify——在基因组中寻找marker genes</h4><p>Translation table选择：use table 11 unless the coding density using table 4 is 5% higher than when using table 11 and the coding density under table 4 is &gt;70%.  GTDB-Tk 不会区分 tables 4和tables 5. 若用户清楚使用哪一个table，可以通过--batchfile指定。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ time gtdbtk identify --genome_dir metawrap_70_5_bins/ --out_dir identify_output --cpus 6 --prefix F --debug -x .fa --write_single_copy_genes</span><br></pre></td></tr></table></figure><h4 id="Step-2-align"><a href="#Step-2-align" class="headerlink" title="Step 2: align"></a>Step 2: align</h4><p>Create a multiple sequence alignment based on the AR122&#x2F;BAC120 marker set.<br>Time 3m50.019s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ time gtdbtk align --identify_dir identify_output/ --out_dir align_output --cpus 3 --prefix F --debug</span><br></pre></td></tr></table></figure><h4 id="Step-3-classify"><a href="#Step-3-classify" class="headerlink" title="Step 3: classify"></a>Step 3: classify</h4><p>Determine taxonomic classification of genomes.<br>Time 118m9.386s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ time gtdbtk classify --genome_dir metawrap_70_5_bins/ --align_dir align_output/ --out_dir classify_output --cpus 3 --prefix F --debug -x .fa -r</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：如果内存较小，则加上“–scratch_dir”参数。</p><hr><h4 id="Step-4-export-msa-这一步不运行"><a href="#Step-4-export-msa-这一步不运行" class="headerlink" title="Step 4: export_msa (这一步不运行)"></a>Step 4: export_msa (这一步不运行)</h4><p>The export_msa will export the untrimmed archaeal or bacterial MSA used in the reference data.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 古菌 0m1.503s</span></span><br><span class="line">$ time gtdbtk export_msa --domain arc --output msa_arc.faa --debug</span><br><span class="line"></span><br><span class="line"><span class="comment"># 细菌 0m16.679s</span></span><br><span class="line">$ time gtdbtk export_msa --domain bac --output msa_bac.faa --debug</span><br></pre></td></tr></table></figure><h4 id="Step-5-trim-msa-这一步不运行"><a href="#Step-5-trim-msa-这一步不运行" class="headerlink" title="Step 5: trim_msa (这一步不运行)"></a>Step 5: trim_msa (这一步不运行)</h4><p>The trim_msa command will trim a MSA given a user-specified mask file, or the archaeal&#x2F;bacterial mask present in the reference data.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 古菌 0m10.675s</span></span><br><span class="line">$ time gtdbtk trim_msa --untrimmed_msa msa_arc.faa --output msa_arc_trim.faa --reference_mask arc --debug</span><br><span class="line"></span><br><span class="line"><span class="comment"># 细菌 3m28.793s</span></span><br><span class="line">$ time gtdbtk trim_msa --untrimmed_msa msa_bac.faa --output msa_bac_trim.faa --reference_mask bac --debug</span><br></pre></td></tr></table></figure><h4 id="Step-6-infer"><a href="#Step-6-infer" class="headerlink" title="Step 6: infer"></a>Step 6: infer</h4><p>Infer tree from multiple sequence alignment.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#古菌 44m54.884s</span></span><br><span class="line">$ time gtdbtk infer --msa_file align_output/F.ar122.msa.fasta --out_dir infer_out_arc_F --prefix F --cpus 12 --debug</span><br><span class="line"></span><br><span class="line"><span class="comment">#细菌</span></span><br><span class="line">$ time gtdbtk infer --msa_file align_output/F.bac120.msa.fasta --out_dir infer_out_bac_F --prefix F --cpus 12 --debug</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>usage: gtdbtk infer --msa_file MSA_FILE --out_dir OUT_DIR [--prot_model {JTT,WAG,LG}] [--no_support] [--gamma] [--prefix PREFIX] [--cpus CPUS] [--debug] [-h]<ul><li><p>required named arguments:</p><ul><li>--msa_file MSA_FILE   multiple sequence alignment in FASTA format</li><li>--out_dir OUT_DIR     directory to output files</li></ul></li><li><p>optional arguments:</p><ul><li>--prot_model {JTT,WAG,LG}<br>                protein substitution model for tree inference (default: WAG)</li><li>--no_support          do not compute local support values using the Shimodaira-Hasegawa test (default: False)</li><li>--gamma               rescale branch lengths to optimize the Gamma20 likelihood (default: False)</li><li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li><li>--cpus CPUS           number of CPUs to use (default: 1)</li><li>--debug               create intermediate files for debugging purposes (default: False)</li><li>-h, --help            show help message</details></li></ul></li></ul><h4 id="Step-7-decorate"><a href="#Step-7-decorate" class="headerlink" title="Step 7: decorate"></a>Step 7: decorate</h4><p>Decorate a tree with the GTDB-Tk taxonomy.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 古菌</span></span><br><span class="line">$ time gtdbtk decorate --input_tree infer_out_arc_F/F.unrooted.tree --output_tree F.decorate_unrooted_arc.tree --gtdbtk_classification_file classify_output/classify/F.ar122.summary.tsv --debug</span><br><span class="line"></span><br><span class="line"><span class="comment"># 细菌</span></span><br><span class="line">$ time gtdbtk decorate --input_tree infer_out_bac_F/F.unrooted.tree --output_tree F.decorate_unrooted_brc.tree --gtdbtk_classification_file classify_output/classify/F.bac120.summary.tsv --debug</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>usage: gtdbtk decorate --input_tree INPUT_TREE --output_tree OUTPUT_TREE [--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE] [--custom_taxonomy_file CUSTOM_TAXONOMY_FILE]                       [--debug] [-h]<ul><li><p>required named arguments:</p><ul><li>--input_tree INPUT_TREE<br>                path to the unrooted tree in Newick format</li><li>--output_tree OUTPUT_TREE<br>                path to output the tree</li></ul></li><li><p>optional arguments:</p><ul><li>--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE<br>                file with GTDB-Tk classifications produced by the <code>classify</code> command</li><li>--custom_taxonomy_file CUSTOM_TAXONOMY_FILE<br>                file indicating custom taxonomy strings for user genomes, that should contain any genomes belonging to the outgroup</li><li>--debug               create intermediate files for debugging purposes (default: False)</li><li>-h, --help            show help message</details></li></ul></li></ul><h4 id="Step-8-root"><a href="#Step-8-root" class="headerlink" title="Step 8: root"></a>Step 8: root</h4><p>Root a tree using an outgroup.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ time gtdbtk root --input_tree input.tree --outgroup_taxon p__Nanoarchaeota --output_tree output.tree --gtdbtk_classification_file &lt;file with GTDB-Tk classifications produced by the classify <span class="built_in">command</span>&gt; --debug</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>usage: gtdbtk root --input_tree INPUT_TREE --outgroup_taxon OUTGROUP_TAXON --output_tree OUTPUT_TREE [--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE]                   [--custom_taxonomy_file CUSTOM_TAXONOMY_FILE] [--debug] [-h]<ul><li><p>required named arguments:</p><ul><li>--input_tree INPUT_TREE<br>                path to the unrooted tree in Newick format</li><li>--outgroup_taxon OUTGROUP_TAXON<br>                taxon to use as outgroup (e.g., p__Patescibacteria or p__Altarchaeota)</li><li>--output_tree OUTPUT_TREE<br>                path to output the tree</li></ul></li><li><p>optional arguments:</p><ul><li>--gtdbtk_classification_file GTDBTK_CLASSIFICATION_FILE<br>                file with GTDB-Tk classifications produced by the <code>classify</code> command</li><li>--custom_taxonomy_file CUSTOM_TAXONOMY_FILE<br>                file indicating custom taxonomy strings for user genomes, that should contain any genomes belonging to the outgroup</li><li>--debug               create intermediate files for debugging purposes (default: False)</li><li>-h, --help            show help message</details></li></ul></li></ul><hr><h4 id="Step-9-ani-rep——计算ANI值"><a href="#Step-9-ani-rep——计算ANI值" class="headerlink" title="Step 9: ani_rep——计算ANI值"></a>Step 9: ani_rep——计算ANI值</h4><p>Compute the ANI of input genomes to all GTDB-Tk representative genomes.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ time gtdbtk ani_rep --genome_dir metawrap_70_5_bins/ --out_dir ani_rep/ --cpus 6 -x .fa --prefix F --debug</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gtdbtk de_novo_wf --genome_dir metawrap_70_5_bins/ --out_dir de_novo_wf --extension .fa --bacteria --outgroup_taxon p__Patescibacteria --prefix F --cpus 6 --debug</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary>usage: gtdbtk ani_rep (--genome_dir GENOME_DIR | --batchfile BATCHFILE) --out_dir OUT_DIR [--no_mash] [--mash_k MASH_K] [--mash_s MASH_S] [--mash_d MASH_D] [--mash_v MASH_V]                      [--mash_db MASH_DB] [--min_af MIN_AF] [-x EXTENSION] [--prefix PREFIX] [--cpus CPUS] [--debug] [-h]<ul><li><p>mutually exclusive required arguments:</p><ul><li><p>--genome_dir GENOME_DIR<br>                directory containing genome files in FASTA format</p></li><li><p>--batchfile BATCHFILE<br>                path to file describing genomes - tab separated in 2 or 3 columns (FASTA file, genome ID, translation table [optional])</p></li><li><p>- required named arguments:</p></li><li><p>--out_dir OUT_DIR     directory to output files</p></li></ul></li><li><p>optional Mash arguments:</p><ul><li>--no_mash             skip pre-filtering of genomes using Mash (default: False)</li><li>--mash_k MASH_K       k-mer size [1-32] (default: 16)</li><li>--mash_s MASH_S       maximum number of non-redundant hashes (default: 5000)</li><li>--mash_d MASH_D       maximum distance to keep [0-1] (default: 0.1)</li><li>--mash_v MASH_V       maximum p-value to keep [0-1] (default: 1.0)</li><li>--mash_db MASH_DB     path to save&#x2F;read (if exists) the Mash reference sketch database (.msh)</li></ul></li><li><p>optional FastANI arguments:</p><ul><li>--min_af MIN_AF       minimum alignment fraction to consider closest genome (default: 0.65)</li></ul></li><li><p>optional arguments:</p><ul><li>-x, --extension EXTENSION<br>                extension of files to process, gz &#x3D; gzipped (default: fna)</li><li>--prefix PREFIX       prefix for all output files (default: gtdbtk)</li><li>--cpus CPUS           number of CPUs to use (default: 1)</li><li>--debug               create intermediate files for debugging purposes (default: False)</li><li>-h, --help            show help message </details></li></ul></li></ul><h3 id="B-4-2-EnrichM-注释"><a href="#B-4-2-EnrichM-注释" class="headerlink" title="B.4.2 EnrichM 注释"></a>B.4.2 EnrichM 注释</h3><h4 id="Step-1-annotate"><a href="#Step-1-annotate" class="headerlink" title="Step 1. annotate"></a>Step 1. annotate</h4><p>基因组注释管道，可以使用dbCAN将基因组与KO, PFAM, TIGRFAM和CAZY 数据库进行比对。结果将为每个基因组产生一个.gff文件，并生成每个注释类型的频率矩阵（frequency matrix），其中行是注释IDs，列是基因组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ enrichm annotate --genome_directory metawrap_70_5_bins --output EnrichM_annotate --force --ko --ko_hmm --pfam --tigrfam --clusters --orthologs --cazy --ec --threads 30 --parallel 8 --suffix .fa --count_domains --chunk_number 8</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary><ul><li><p>Output options:</p><ul><li>--output OUTPUT       Output directory</li><li>--force               Overwrite previous run</li></ul></li><li><p>Input options (Use one):</p><ul><li>--genome_files GENOME_FILES [GENOME_FILES …]<br>      Space separated list of genomes to annotate</li><li>--genome_directory GENOME_DIRECTORY<br>      Directory containing genomes to annotate</li><li>--protein_files PROTEIN_FILES [PROTEIN_FILES …]<br>      Space separated list of .faa files of genomes to annotate. Protein files need to be generated by prodigal.</li><li>--protein_directory PROTEIN_DIRECTORY<br>      Directory containing .faa files of genomes to annotate. Protein files need to be generated by prodigal.</li></ul></li><li><p>Annotations options:</p><ul><li>--ko                  Annotate with KO ids</li><li>--ko_hmm              Annotate with KO ids</li><li>--pfam                Annotate with Pfam HMMs</li><li>--tigrfam             Annotate with TIGRFAM HMMs</li><li>--clusters            Annotate with cluster ids</li><li>--orthologs           Annotate with ortholog ids</li><li>--cazy                Annotate with dbCAN HMMs</li><li>--ec                  Annotate with EC ids</li></ul></li><li><p>Cutoff options:</p><ul><li>--cut_ga              For PFAM and TIGRfam searches: use profiles GA gathering cutoffs to set all thresholding</li><li>--cut_nc              For PFAM and TIGRfam searches: use profiles NC noise cutoffs to set all thresholding</li><li>--cut_tc              For PFAM and TIGRfam searches: use profiles TC trusted cutoffs to set all thresholding</li><li>--cut_ko              For KO HMM annotation searches: use cutoffs defined by KEGG to maximise F-score.</li><li>--evalue EVALUE       Use this evalue cutoff to filter false positives (default: 1e-05)</li><li>--bit BIT             Use this bit score cutoff to filter false positives (default: 0)</li><li>--id ID               Use this percent identity cutoff to filter false positives (default: 0.3)</li><li>--aln_query ALN_QUERY<br>      This fraction of the query must align to the reference (default: 0.7)</li><li>--aln_reference ALN_REFERENCE<br>      This fraction of the reference must align to the query (default: 0.7)</li><li>--c C                 When clustering, use matches above this fraction of aligned (covered) query and target residues (default: 0.7)</li></ul></li><li><p>Runtime options:</p><ul><li>--threads THREADS     Use this number of threads when annotating with BLAST and HMMsearch (default: 1)</li><li>--parallel PARALLEL   Run this number of jobs in parallel when annotating with HMMsearch (default: 5)</li><li>--inflation INFLATION<br>     Inflation factor to use when calling clusters in ortholog (default &#x3D; 5.0)</li><li>--suffix SUFFIX       Treat files ending with this suffix within the –genome_directory as genomes (default: .fna for –genome_directory and .faa for )</li><li>--light               Don’t store metadata for genome files (can’t use enrichM compare downstream, default&#x3D;False)</li><li>--count_domains       Fill the frequency matrix with the total number of times an annotation was detected (for example, when one domain more than once within a protein), rather than the count of proteins with with that annotation</li><li>--chunk_number CHUNK_NUMBER<br>      Split loading of genomes into this many chunks (default &#x3D; 4)</li><li>--chunk_max CHUNK_MAX<br>      Maximum number of genomes to load per chunk (default &#x3D; 2500)</li></ul></li></ul></details><h4 id="Step-2-classify"><a href="#Step-2-classify" class="headerlink" title="Step 2. classify"></a>Step 2. classify</h4><p>Determine what pathways a genome encodes. Classify quickly reads in KO annotations in the form of a matrix (KO IDs as rows, genomes as columns) and determines which KEGG modules are complete. Annotation matrices can be generated using the annotate function.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ enrichm classify --output EnrichM_classify/ko_hmm_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ko_hmm_frequency_table.tsv --cutoff 0</span><br><span class="line"></span><br><span class="line">$ enrichm classify --output EnrichM_classify/ko_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ko_frequency_table.tsv --cutoff 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下6个命令可不必运行</span></span><br><span class="line">$ enrichm classify --output EnrichM_classify/cazy_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/cazy_frequency_table.tsv --cutoff 0</span><br><span class="line"></span><br><span class="line">$ enrichm classify --output EnrichM_classify/cluster_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/cluster_frequency_table.tsv --cutoff 0</span><br><span class="line"></span><br><span class="line">$ enrichm classify --output EnrichM_classify/ec_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ec_frequency_table.tsv --cutoff 0</span><br><span class="line"></span><br><span class="line">$ enrichm classify --output EnrichM_classify/ortholog_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/ortholog_frequency_table.tsv --cutoff 0</span><br><span class="line"></span><br><span class="line">$ enrichm classify --output EnrichM_classify/pfam_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/pfam_frequency_table.tsv --cutoff 0</span><br><span class="line"></span><br><span class="line">$ enrichm classify --output EnrichM_classify/tigrfam_frequency_table --aggregate --genome_and_annotation_matrix EnrichM_annotate/tigrfam_frequency_table.tsv --cutoff 0</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary><ul><li><p>Output options:</p><ul><li>--output OUTPUT       Output directory</li><li>--force               Overwrite previous run</li></ul></li><li><p>Input options:</p><ul><li>--genome_and_annotation_matrix GENOME_AND_ANNOTATION_MATRIX<br>      Path to file containing a genome annotation matrix</li><li>--custom_modules CUSTOM_MODULES<br>      Tab separated file containing module name, definition as the columns</li><li>--module_rules_json MODULE_RULES_JSON<br>       json file specifying rules to interpret the annotation and guide module annotation</li><li>--gff_files GFF_FILES<br>      GFF files for the genomes being classified.</li></ul></li><li><p>Cutoff options:</p><ul><li>--cutoff CUTOFF       Output only modules with greater than this percent of the requied KO groups (default &#x3D; print all modules)</li></ul></li><li><p>Runtime options:</p><ul><li>--aggregate           Calculate the abundance of each pathway within each genome&#x2F;sample (column)</details></li></ul></li></ul><h4 id="Step-3-enrichment"><a href="#Step-3-enrichment" class="headerlink" title="Step 3. enrichment"></a>Step 3. enrichment</h4><p>Enrichment will read in KO or PFAM annotations in the form of a matrix (IDs as rows, genomes as columns) and a metadata file that separates genomes into groups to compare, and will run some basic stats to determine the enrichment of modules or pfam clans between and within the groups.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ enrichm enrichment --output EnrichM_enrichment/ --metadata genome.list --annotation_matrix EnrichM_annotate/ko_frequency_table.tsv --force</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary><ul><li><p>- Output options:</p><ul><li>--output OUTPUT       Output directory</li><li>--force               Overwrite previous run</li></ul></li><li><p>Input options:</p><ul><li>--annotate_output ANNOTATE_OUTPUT<br>     Output directory provided by enrichm annotate</li><li>--metadata METADATA   Metadata file with two columns, the first with the genome name, the second with the groupings to compare.</li><li>--annotation_matrix ANNOTATION_MATRIX<br>     Annotation matrix to compare.</li><li>--gff_files GFF_FILES [GFF_FILES …]<br>     Gff files for genomes to compare.</li><li>--abundance 基因组丰度矩阵</li><li>--abundance_metadata ABUNDANCE_METADATA<br>     Metadata grouping abundance samples.</li><li>--transcriptome TRANSCRIPTOME  基因组丰度矩阵</li><li>--transcriptome_metadata TRANSCRIPTOME_METADATA<br>     Metadata grouping abundance samples.</li></ul></li><li><p>Genome Taxonomy DataBase (GTDB) options:</p><ul><li>--batchfile BATCHFILE<br>     metadata file to compare with.</li></ul></li><li><p>Runtime options:</p><ul><li>--pval_cutoff PVAL_CUTOFF<br>     Only output results with a p-value below a this cutoff (default&#x3D;0.05).</li><li>--proportions_cutoff PROPORTIONS_CUTOFF<br>     Proportion enrichment cutoff.</li><li>--threshold THRESHOLD<br>     The threshold to control for in false discovery rate of familywise error rate.</li><li>--multi_test_correction MULTI_TEST_CORRECTION<br>     The form of mutiple test correction to use. Uses the statsmodel module and consequently has all of its options.<br>                Default: Benjamini-Hochberg FDR (fdr_bh)<br>                Options: Bonferroni (b)<br>                     Sidak (s)<br>                     Holm (h)<br>                     Holm-Sidak (hs)<br>                     Simes-Hochberg (sh)<br>                     Hommel (ho)<br>                     FDR Benjamini-Yekutieli (fdr_by)<br>                     FDR 2-stage Benjamini-Hochberg (fdr_tsbh)<br>                     FDR 2-stage Benjamini-Krieger-Yekutieli (fdr_tsbky)<br>                     FDR adaptive Gavrilov-Benjamini-Sarkar (fdr_gbs))</li><li>--processes PROCESSES  采用多少个进程进行富集分析</li><li>--allow_negative_values  允许输入的矩阵中有负值</li><li>--ko                    Compare KO ids (annotated with DIAMOND)</li><li>--ko_hmm          Compare KO ids (annotated with HMMs)</li><li>--pfam                Compare Pfam ids</li><li>--tigrfam             Compare TIGRFAM ids</li><li>--cluster              Compare cluster ids</li><li>--ortholog            Compare ortholog ids</li><li>--cazy                 Compare dbCAN ids</li><li>--ec                     Compare EC ids</li><li>--range RANGE         Base pair range to search for synteny within. Default &#x3D; 2500.</li><li>--subblock_size SUBBLOCK_SIZE<br>                Number of genes clustered in a row to be reported. Default &#x3D; 2.</li><li>--operon_mismatch_cutoff OPERON_MISMATCH_CUTOFF<br>                Number of allowed mismatches when searching for operons across genomes. Defaul</li><li>--operon_match_score_cutoff OPERON_MATCH_SCORE_CUTOFF<br>                Score cutoff for operon matches</li></ul></li></ul></details><h4 id="Step-4-pathway"><a href="#Step-4-pathway" class="headerlink" title="Step 4. pathway"></a>Step 4. pathway</h4><p>Pathway reads in a KO matrix and generates a Cytoscape-readable metabolic network and metadata file. Only reactions that are possible given the KOs present in the input matrix are shown, and the modules and reactions that are included in the output can be customized（<strong>报错</strong>）.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ enrichm pathway --matrix EnrichM_annotate/ko_frequency_table.tsv --genome_metadata genome.list --output EnrichM_pathway --abundance EnrichM_enrichment/F01_vs_F02_ivg_results.cdf.tsv --abundance_metadata genome.list --force</span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary><ul><li><p>Input options:</p><ul><li>--matrix KO矩阵. 必须提供</li><li>--genome_metadata GENOME_METADATA<br>       Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li><li>--abundance 丰度矩阵</li><li>--abundance_metadata ABUNDANCE_METADATA<br>      Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li><li>--tpm_values TPM_VALUES<br>       DetectM产生的TPM values</li><li>--tpm_metadata TPM_METADATA<br>       Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li><li>--metabolome METABOLOME<br>       Metabolome CID matrix.</li></ul></li><li><p>Logging options:</p><ul><li>--log LOG             Output logging information to this file.</li><li>--verbosity VERBOSITY<br>     Level of verbosity (1 - 5 - default &#x3D; 4) 5 &#x3D; Very verbose, 1 &#x3D; Silent</li></ul></li><li><p>Output options:</p><ul><li>--output             输出路径</li><li>--force               覆盖之前输出的结果</li></ul></li><li><p>Pathway options:</p><ul><li>--limit LIMIT [LIMIT …]<br>     USE ONLY these reactions, or reactions within this pathway or module (space separated list).</li><li>--filter FILTER [FILTER …]<br>     Do not use these reactions, or reactions within this pathway or module (space separated list).</li><li>--enrichment_output ENRICHMENT_OUTPUT<br>      Supply an enrichment output to integrate the results into the output network.</li></ul></li></ul></details><h4 id="Step-5-explore"><a href="#Step-5-explore" class="headerlink" title="Step 5. explore"></a>Step 5. explore</h4><p>Explore is similar to pathway, but rather than generating a specified pathway it will start from a given query compound ID, and explore the possible reactions that use that compound given the enzymes present in the input KO matrix.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ </span><br></pre></td></tr></table></figure><details><summary>点击此处查看参数</summary><ul><li><p>Input options: </p><ul><li>--matrix MATRIX       KO矩阵. 必须提供</li><li>--genome_metadata GENOME_METADATA<br>      Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare.</li><li>--abundance 丰度矩阵</li><li>--abundance_metadata ABUNDANCE_METADATA<br>     Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare..</li><li>--tpm_values TPM_VALUES<br>     DetectM产生的TPM values</li><li>--tpm_metadata TPM_METADATA<br>     Metadata文件包含两列，第一列为基因组名字，第二列with the groupings to compare..</li><li>--metabolome METABOLOME<br>     Metabolome CID matrix.</li></ul></li><li><p>Logging options:</p><ul><li>--log LOG             Output logging information to this file.</li><li>--verbosity VERBOSITY<br>      Level of verbosity (1 - 5 - default &#x3D; 4) 5 &#x3D; Very verbose, 1 &#x3D; Silent</li></ul></li><li><p>Output options:</p><ul><li>--output             输出路径</li><li>--force               覆盖之前输出的结果</li></ul></li><li><p>Query options:</p><ul><li>--queries QUERIES     A file containing the KEGG ids of the compounds from which to start in the metabolic network</li><li>--depth DEPTH         Number of steps to take into the metabolic network</details></li></ul></li></ul><h1 id="C-Metagenome-functional-profiling"><a href="#C-Metagenome-functional-profiling" class="headerlink" title="C Metagenome functional profiling"></a>C Metagenome functional profiling</h1><ul><li>从宏基因组组装的contigs中预测基因——prodigal -p meta模式</li><li>Metagenome-assembled genes which were not included in the MAGs were subjected to taxonomic classification using <a href="https://github.com/bioinformatics-centre/kaiju">Kaiju</a></li><li>eggNOG-mapper比对<a href="https://doi.org/10.1093/nar/gkv1248">eggnog</a>数据库</li><li>HMMER 比对<a href="https://doi.org/10.1093/nar/gky995">Pfam</a></li><li><a href="https://www.kegg.jp/blastkoala/">GhostKOALA </a>和<a href="https://www.genome.jp/tools/kofamkoala/">KofamKOALA (v1.0.0)</a>比对<a href="https://doi.org/10.1093/nar/28.1.27">KEGG</a></li><li>BLASTP比对<a href="https://doi.org/10.1093/nar/gkv1103">TCDB</a></li><li><a href="http://bcb.unl.edu/dbCAN2/">dbCAN2 (v2.0.1)</a>比对<a href="https://doi.org/10.1093/nar/gkn663">CAZy</a></li><li>BLASTP比对<a href="https://www.ebi.ac.uk/merops/submit_searches.shtml">MEROPS </a></li><li><a href="https://github.com/Arkadiy-Garber/FeGenie">FeGenie</a>检测Iron-related genes</li><li>Fe-containing domains were characterized using <a href="https://doi.org/10.1073/pnas.0605798103">Superfamily (v1.75)</a>.</li><li>砷呼吸和抗性基因挖掘<a href="https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/HMM_search">https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic&#x2F;tree&#x2F;master&#x2F;HMM_search</a>，模型下载<a href="https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/gene_targeted_assembly/gene_resource">https://github.com/ShadeLab/PAPER_Dunivin_meta_arsenic/tree/master/gene_targeted_assembly/gene_resource</a></li></ul><h1 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h1><ul><li><a href="https://github.com/biobakery/MetaPhlAn/wiki/MetaPhlAn-3.0">MetaPhlAn 3.0 tutorial</a></li><li><a href="https://zouhua.top/archives/9d8099c8.html">MetaPhlAn 3.0: 宏基因组物种组成分析软件</a></li><li><a href="https://github.com/biobakery/biobakery/wiki/GraPhlAn">GraPhlAn Tutorial</a></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宏基因组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux骚操作</title>
      <link href="/post/9d1b.html"/>
      <url>/post/9d1b.html</url>
      
        <content type="html"><![CDATA[<p>记录一些平时遇到的Linux问题及解决方法！</p><span id="more"></span><h1 id="骚操作1：查杀僵尸进程"><a href="#骚操作1：查杀僵尸进程" class="headerlink" title="骚操作1：查杀僵尸进程"></a>骚操作1：查杀僵尸进程</h1><h2 id="通过top命令发现了僵尸进程"><a href="#通过top命令发现了僵尸进程" class="headerlink" title="通过top命令发现了僵尸进程"></a>通过top命令发现了僵尸进程</h2><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="发现僵尸进程"></p><p>这里的aragorn和prodigal为僵尸进程。</p><h2 id="寻找僵尸进程的父进程"><a href="#寻找僵尸进程的父进程" class="headerlink" title="寻找僵尸进程的父进程"></a>寻找僵尸进程的父进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -A -ostat,ppid,pid,cmd | grep -e <span class="string">&#x27;^[Zz]&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="寻找父进程ppid"></p><p>aragorn和prodigal的父进程的ppid为133619。</p><h2 id="杀死父进程"><a href="#杀死父进程" class="headerlink" title="杀死父进程"></a>杀死父进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 133619</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill3.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/LinuxKill3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="僵尸进程已被杀死"></p><p>之所以选择杀死父进程是因为僵尸进程本身很难被杀掉！</p><h1 id="骚操作2：使用sudo或nohup运行bash报错"><a href="#骚操作2：使用sudo或nohup运行bash报错" class="headerlink" title="骚操作2：使用sudo或nohup运行bash报错"></a>骚操作2：使用sudo或nohup运行bash报错</h1><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p>在终端里使用sudo或nohup运行bash的时候经常报错：-bash: syntax error near unexpected token ‘do’。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>将要运行的命令加到如下语句中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用超级用户运行时</span></span><br><span class="line">sudo bash -c <span class="string">&#x27;your commands&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#服务器投后台运行</span></span><br><span class="line"><span class="built_in">nohup</span> bash -c <span class="string">&#x27;your commands&#x27;</span> &amp;</span><br></pre></td></tr></table></figure><h1 id="骚操作3：CentOS升级GCC"><a href="#骚操作3：CentOS升级GCC" class="headerlink" title="骚操作3：CentOS升级GCC"></a>骚操作3：CentOS升级GCC</h1><h2 id="安装SCL（第三方软件选集）"><a href="#安装SCL（第三方软件选集）" class="headerlink" title="安装SCL（第三方软件选集）"></a>安装SCL（第三方软件选集）</h2><p>使用下面命令安装SCL<br>SCL可以在不覆盖原有软件包的情况下与其共存，缺点就是仅支持64位<br>SCL仅支持安装devtoolset-4（gcc 5.2）（不含）之后的gcc版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y centos-release-scl</span><br></pre></td></tr></table></figure><h2 id="安装gcc"><a href="#安装gcc" class="headerlink" title="安装gcc"></a>安装gcc</h2><p>使用以下命令安装gcc，其中的9表示大版本号，默认安装大版本下的最新稳定版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils</span><br></pre></td></tr></table></figure><h2 id="将gcc加入环境变量"><a href="#将gcc加入环境变量" class="headerlink" title="将gcc加入环境变量"></a>将gcc加入环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source /opt/rh/devtoolset-9/enable&quot;</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h1 id="骚操作4：CentOS-7防火墙"><a href="#骚操作4：CentOS-7防火墙" class="headerlink" title="骚操作4：CentOS 7防火墙"></a>骚操作4：CentOS 7防火墙</h1><h2 id="启动防火墙"><a href="#启动防火墙" class="headerlink" title="启动防火墙"></a>启动防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">启动： systemctl start firewalld</span><br></pre></td></tr></table></figure><h2 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent </span><br></pre></td></tr></table></figure><h2 id="重新载入"><a href="#重新载入" class="headerlink" title="重新载入"></a>重新载入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld.service</span><br><span class="line"></span><br><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure><h2 id="查看当前开了哪些端口"><a href="#查看当前开了哪些端口" class="headerlink" title="查看当前开了哪些端口"></a>查看当前开了哪些端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-services</span><br></pre></td></tr></table></figure><h2 id="查看所有打开的端口"><a href="#查看所有打开的端口" class="headerlink" title="查看所有打开的端口"></a>查看所有打开的端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h1 id="骚操作5：Linux基本指令丢失修复办法"><a href="#骚操作5：Linux基本指令丢失修复办法" class="headerlink" title="骚操作5：Linux基本指令丢失修复办法"></a>骚操作5：Linux基本指令丢失修复办法</h1><p>如输入ls、cd、cat等基本指令提示找不到命令，可以通过以下命令修复：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BtToxin_Digger--A high-throughput Bacillus thuringiensis toxin mining pipeline</title>
      <link href="/post/5908.html"/>
      <url>/post/5908.html</url>
      
        <content type="html"><![CDATA[<p>BtToxin_Digger is the latest high-throughput Bacillus thuringiensis virulence factor mining pipeline on the whole network, including the basic web version and the local advanced version.</p><span id="more"></span><h2 id="What-is-BtToxin-Digger"><a href="#What-is-BtToxin-Digger" class="headerlink" title="What is BtToxin_Digger?"></a>What is BtToxin_Digger?</h2><p>BtToxin_Digger is a high-throughput, automatic gene mining tool that can mine toxin genes, such as Cry, Cyt and Vip, etc, from <em>Bacillus thuringiensis</em>. The pipeline accepts multiple forms of input data including Reads, assembled genomes, CDSs, and protein sequences and can output rich and useful results. It is derived from the re-design of the tool <a href="https://bcam.hzau.edu.cn/BtToxin_Digger/">BtToxin_Digger</a> we developed previously. Compared with BtToxin_Digger, BtToxin_Digger has many improvements, as follows:</p><ul><li><p>Can be run in batches, suitable for large-scale genome analysis.</p></li><li><p>Added genome assembly functions, including second-generation short-reads assembly, third-generation long-reads assembly, and hybrid assembly of short-reads and long-reads, to realize the full-automatic mining of genes from Reads to virulence factors. The previous three input files (assembled genomes, ORFs and protein sequences) are still supported, and genome assembly can be used independently.</p></li><li><p>Fixed a bug where BtToxin_Digger often reported errors when processing assembled genomes.</p></li><li><p>Added support for CDSs and not limited to ORFs.</p></li><li><p>The database has been updated, adding support for App, Gpp, Mcf, Mpf, Mpp, Mtx, Pra, Prb, Spp, Tpp, Cyt, Vip, Vpa, Vpb, Xpp and other virulence factors.</p></li><li><p>BtToxin_Digger generates comprehensive and readable outputs including toxin list and sequence for each input; a matrix of all strains and the virulence factors it contains (behavior strain names, listed as virulence factor names), which can be used as virulence factors contained in the strain Database; and a file writes the information and sequences of all toxins (Table 1) to facilitate centralized processing and downstream analysis and experiment designs.</p></li><li><p>Added multi-thread support, greatly improving the running speed of the pipeline.</p></li></ul><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><ul><li><p>Required dependencies<br>– <a href="http://metacpan.org/pod/BioPerl">BioPerl</a><br>– <a href="https://www.ebi.ac.uk/Tools/hmmer/">HMMER</a><br>– <a href="https://github.com/cjlin1/libsvm">libsvm</a><br>– <a href="https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&amp;PAGE_TYPE=BlastDocs&amp;DOC_TYPE=Download">NCBI-blast+</a><br>– <a href="http://www.perl.org/get.html">Perl</a><br>– <a href="https://liaochenlanruo.hzaubmb.org/pgcgap">PGCGAP</a></p></li><li><p>Source codes</p></li></ul><p>The BtToxin_Digger codes can be downloaded from <a href="https://github.com/liaochenlanruo/BtToxin_Digger">GitHub</a>.</p><ul><li>Install with Bioconda - OSX&#x2F;Linux&#x2F;WSL</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda create -n toxin python=3</span><br><span class="line">conda activate toxin</span><br><span class="line">conda install bttoxin_digger</span><br></pre></td></tr></table></figure><ul><li>Install with the docker container</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull quay.io/biocontainers/bttoxin_digger:&lt;tag&gt;</span><br></pre></td></tr></table></figure><p>(See <a href="https://quay.io/repository/biocontainers/bttoxin_digger?tab=tags">bttoxin_digger&#x2F;tags</a> for valid values for <tag>)</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToxin_Digger [Options]</span><br></pre></td></tr></table></figure><p>Options:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[--help]                      Print the help message and exit</span><br><span class="line">[--version]                   Show version number of BtToxin_Digger and exit</span><br><span class="line">[--threads (INT)]             Number of threads to be used ( Default 4 )</span><br><span class="line">[--SeqPath (PATH)]            [Required] The path of input sequences ( Default &quot;the current directory&quot; )</span><br><span class="line">[--SequenceType (STRING)]     [Required] Sequence type for inputs. &quot;reads&quot;, &quot;nucl&quot;, &quot;orfs&quot;, and &quot;prot&quot; avaliable ( Default nucl )</span><br><span class="line">[--platform (STRING)]         [Required] Sequencing Platform, &quot;illumina&quot;, &quot;pacbio&quot;, &quot;oxford&quot; and &quot;hybrid&quot; available ( Default illumina )</span><br><span class="line">[--assemble_only (STRING)]    Only perform genome assembly without predicting toxins.</span><br><span class="line">[--reads1 (STRING)]           [Required by &quot;reads&quot;] The suffix name of reads 1 ( for example: if the name of reads 1 is &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot;, &quot;YBT-1520&quot; is the strain same, so the suffix name should be &quot;.R1.clean.fastq.gz&quot; )</span><br><span class="line">[--reads2 (STRING)]           [Required by &quot;reads&quot;] The suffix name of reads 2( not required by &quot;oxford&quot; and &quot;pacbio&quot;. For example: if the name of reads 2 is &quot;YBT-1520_2.fq&quot;, the suffix name should be _2.fq&quot; )</span><br><span class="line">[--suffix_len (INT)]          [Required by &quot;reads&quot;] (Strongly recommended) The suffix length of the reads file, that is the length of the reads name minus the length of the strain name. For example the --suffix_len of &quot;YBT-1520_L1_I050.R1.clean.fastq.gz&quot; is 26 ( &quot;YBT-1520&quot; is the strain name ) ( Default 0 )</span><br><span class="line">[--short1 (STRING)]           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</span><br><span class="line">[--short2 (STRING)]           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</span><br><span class="line">[--long (STRING)]             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</span><br><span class="line">[--hout (STRING)]             [Required] Output directory for hybrid assembly ( Default &quot;../../Results/Assembles/Hybrid&quot; )</span><br><span class="line">[--genomeSize (STRING)]       [Required] An estimate of the size of the genome. Common suffixes are allowed, for example, 3.7m or 2.8g. Needed by PacBio data and Oxford data ( Default 6.07m )</span><br><span class="line">[--Scaf_suffix (STRING)]      The suffix of scaffolds or genomes ( Default &quot;.filtered.fas&quot; )</span><br><span class="line">[--orfs_suffix (STRING)]      The suffix of orfs files ( Default &quot;.ffn&quot; )</span><br><span class="line">[--prot_suffix (STRING)]      The suffix of protein files ( Default &quot;.faa&quot; )</span><br></pre></td></tr></table></figure><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><ul><li>Processing Illumina paired-end Reads</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToxin_Digger --SeqPath &lt;Illumina Reads PATH&gt; --SequenceType reads --platform illumina --reads1 &lt;suffix name of reads 1&gt; -reads2 &lt;suffix name of reads 2&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure><ul><li>Processing PacBio long Reads</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToxin_Digger --SeqPath &lt;PacBio Reads PATH&gt; --SequenceType reads --platform pacbio --reads1 &lt;suffix name of PacBio reads&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure><ul><li>Processing Oxford long Reads</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToxin_Digger --SeqPath &lt;Oxford Reads PATH&gt; --SequenceType reads --platform oxford --reads1 &lt;suffix name of Oxford reads&gt; --threads &lt;INT&gt; --suffix_len &lt;INT&gt;</span><br></pre></td></tr></table></figure><ul><li>Processing Hybrid Reads (Long reads + illumina short reads)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToxin_Digger --SeqPath &lt;Reads PATH&gt; --SequenceType reads --platform hybrid --short1 &lt;short reads 1&gt; --short2 &lt;short reads 2&gt; --long &lt;long reads&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure><ul><li>Processing Assembled genomes</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToxin_Digger --SeqPath &lt;Assembled genome PATH&gt; --SequenceType nucl --Scaf_suffix &lt;suffix of genomes&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure><ul><li>Processing Protein sequences</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToxin_Digger --SeqPath &lt;Protein file PATH&gt; --SequenceType prot --prot_suffix &lt;suffix of protein files&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure><ul><li>Processing Coding sequences</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BtToxin_Digger --SeqPath &lt;CDSs file PATH&gt; --SequenceType orfs --orfs_suffix &lt;suffix of orfs files&gt; --threads &lt;INT&gt;</span><br></pre></td></tr></table></figure><h2 id="Outputs"><a href="#Outputs" class="headerlink" title="Outputs"></a>Outputs</h2><ul><li><p><strong>Results&#x2F;Assembles&#x2F;*</strong>: Genome assembly results;</p></li><li><p><strong>Results&#x2F;Toxins&#x2F;*.list</strong>: Toxin list of each strain;</p></li><li><p><strong>Results&#x2F;Toxins&#x2F;*.gbk</strong>: Toxin sequences in Genbank format of each strain;</p></li><li><p><strong>Results&#x2F;Toxins&#x2F;Btallgenes.table</strong>: A matrix describes Strains vs. Toxins;</p></li><li><p><strong>Results&#x2F;Toxins&#x2F;All_Toxins.txt</strong>: A table containing all information and sequences of all toxin genes. See table 1 for details.</p></li></ul><h2 id="Contents-of-list"><a href="#Contents-of-list" class="headerlink" title="Contents of *.list:"></a>Contents of *.list:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Overview of prediction  Sequence type: nucl</span><br><span class="line">NameCryCytVipOthersSummary</span><br><span class="line">Rank110001</span><br><span class="line">Rank200000</span><br><span class="line">Rank300000</span><br><span class="line">Rank41001112</span><br><span class="line">HMM_SVM0000</span><br><span class="line">Summary1101113</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Toxin type: Cry protein</span><br><span class="line">IDProtein_IDProtein_descriptionLengthRankBLASTBest_hitHit lengthCoverageIdentitySVMHMM</span><br><span class="line">1NHPK02000085.1_00018+2 19034-20206 len=391391Rank1YESCry78Aa135997.2132.66NONO</span><br><span class="line">2NHPK02000099.1_00001-1 5374-7407 len=678678Rank4YESCry2Ab35633100.00100.00NOYES</span><br><span class="line">3NHPK02000115.1_00002+2 2-1342 len=447447Rank4YESCry1Da2116538.37100.00NOYES</span><br><span class="line">4NHPK02000115.1_00006+3 4275-7898 len=12081208Rank4YESCry1Ca151189100.00100.00NOYES</span><br><span class="line">5NHPK02000153.1_00001-1 4176-6365 len=730730Rank4YESCry1Ia40719100.00100.00YESYES</span><br><span class="line">6NHPK02000168.1_00002-3 1673-5146 len=11581158Rank4YESCry9Ea91150100.00100.00YESYES</span><br><span class="line">7NHPK02000196.1_00001+3 723-2942 len=740740Rank4YESCry1Da2116563.43100.00NOYES</span><br><span class="line">8NHPK02000240.1_00001+2 2-1813 len=604604Rank4YESCry1Ac16117851.27100.00NOYES</span><br><span class="line">9NHPK02000243.1_00001+2 2-1738 len=579579Rank4YESCry1Aa18122547.27100.00NOYES</span><br><span class="line">10NHPK02000256.1_00001+2 2-1294 len=431431Rank4YESCry1Ac30117836.59100.00NOYES</span><br><span class="line">11NHPK02000386.1_00001-2 3-530 len=176176Rank4YESCry1Ab1169525.3299.43NOYES</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Toxin type: Cyt protein</span><br><span class="line">IDProtein_IDProtein_descriptionLengthRankBLASTBest_hitHit lengthCoverageIdentitySVMHMM</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Toxin type: Vip protein</span><br><span class="line">IDProtein_IDProtein_descriptionLengthRankBLASTBest_hitHit lengthCoverageIdentitySVMHMM</span><br><span class="line">1NHPK02000099.1_00004-3 10013-12397 len=795795Rank4YESVip3Aa12789100.00100.00NOYES</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Toxin type: Other toxins</span><br><span class="line">IDProtein_IDProtein_descriptionLengthRankBLASTBest_hitHit lengthCoverageIdentitySVMHMM</span><br><span class="line">1NHPK02000017.1_00027-3 15272-16258 len=329329Rank4YESZwa5B-other322100.0099.07NONA</span><br><span class="line">//</span><br></pre></td></tr></table></figure><h2 id="Contents-of-gbk-Partial"><a href="#Contents-of-gbk-Partial" class="headerlink" title="Contents of *.gbk (Partial):"></a>Contents of *.gbk (Partial):</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">LOCUS       NHPK02000017.1_00027        77664 bp    dna     linear   UNK</span><br><span class="line">ACCESSION   NHPK02000017.1_00027</span><br><span class="line">FEATURES             Location/Qualifiers</span><br><span class="line">     Segment         complement(15272..16258)</span><br><span class="line">                     /ETX_MTX2=&quot;NO&quot;</span><br><span class="line">                     /Endotoxin_C=&quot;NO&quot;</span><br><span class="line">                     /Endotoxin_M=&quot;NO&quot;</span><br><span class="line">                     /Endotoxin_N=&quot;NO&quot;</span><br><span class="line">                     /Endotoxin_mid=&quot;NO&quot;</span><br><span class="line">                     /Rank=&quot;Rank4&quot;</span><br><span class="line">                     /Segment_name=&quot;NHPK02000017.1_00027&quot;</span><br><span class="line">                     /Toxin_10=&quot;NO&quot;</span><br><span class="line">                     /blast_detail=&quot;Query_desc:-3 15272-16258 len=329</span><br><span class="line">                     Query_Length:329Query_Start-End:8-329Hit_id:Zwa5B-other</span><br><span class="line">                     Hit_desc:AAZ67352.1Hit_length:322Hit_Start-End:1-322</span><br><span class="line">                     Aln_length:322Percent_identity:99.0683229813665</span><br><span class="line">                     E-value:0.0&quot;</span><br><span class="line">                     /blast_prediction=&quot;YES&quot;</span><br><span class="line">                     /hmm_detail=&quot;&quot;</span><br><span class="line">                     /hmm_prediction=&quot;NA&quot;</span><br><span class="line">                     /locus_tag=&quot;NHPK02000017.1_00027&quot;</span><br><span class="line">                     /protein_desc=&quot;-3 15272-16258 len=329&quot;</span><br><span class="line">                     /protein_id=&quot;NHPK02000017.1_00027&quot;</span><br><span class="line">                     /protein_len=&quot;329&quot;</span><br><span class="line">                     /svm_prediction=&quot;NO&quot;</span><br><span class="line">                     /translation=&quot;YRNEEAIMMYLNTKHINEMGVNWEETINVISKAVQSLDAEDFSQ</span><br><span class="line">                     PIKPYLRFDDPANRIIAMPAYIGGEFKVSGIKWIASFPKNIEKGIQRAHSVTILNDAM</span><br><span class="line">                     TGKPFATLNTAMVSVIRTASVTGLMIREFAKLRDLNNVKVGIIGFGPIGQMHLKMVTA</span><br><span class="line">                     LLGDKIESVYLYDINGIKDELIPEDIYSKTQKVNAYEEAYNDADIFITCTVSAEGYID</span><br><span class="line">                     KKPKDGALLLNVSLRDFKPDILEYTKSLVVDNWEEVCREKTDVERMHLERGLQKEDTV</span><br><span class="line">                     SIADVVIRGALQNFPYDKAILFNPMGMAIFDVAIAAYYYQRAREKEIGVLLED&quot;</span><br><span class="line">ORIGIN      </span><br><span class="line">        1 cttctaaccg caaggactgc ggggttagcc taatcaatta gagttcgata gaactcttta</span><br><span class="line">       61 cttaggaatc cctcacttct aaacgaagtg aaagtggggt tagttcaaaa ctattaacta</span><br><span class="line">      121 taatataccc tttcaagaaa ttttaaaaag gttgaagtag ccaaaaaata ttttccggaa</span><br><span class="line">      181 taattagatt aatttctctt ttttgtatat ttatgttaaa ttattgttat cactacaaat</span><br><span class="line">      241 ttattgaata attttaatac tctccccttt atactatggt aatatgtttt tcacaataca</span><br><span class="line">      301 tattaccact ataattgcaa acatatataa acccatattt agaattttta agattctttc</span><br><span class="line">      361 atagcattaa gatatttttt accttttagt ttgtttattc ttaattttta aactaaaata</span><br><span class="line">      421 atatatattg gtaataatta aataaaattc caataattat aggaaggaga aaattatgaa</span><br></pre></td></tr></table></figure><h2 id="Table-1-Description-of-“All-Toxins-txt”"><a href="#Table-1-Description-of-“All-Toxins-txt”" class="headerlink" title="Table 1. Description of “All_Toxins.txt”"></a>Table 1. Description of “All_Toxins.txt”</h2><table><thead><tr><th align="left">Header</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">Strain</td><td align="left">The name of your input</td></tr><tr><td align="left">Protein_id</td><td align="left">The protein ID</td></tr><tr><td align="left">Protein_len</td><td align="left">The length of protein sequence</td></tr><tr><td align="left">Strand</td><td align="left">Positive or negative strand where the gene comes from</td></tr><tr><td align="left">Gene location on scaffold</td><td align="left">Gene coordinates on the genome</td></tr><tr><td align="left">SVM</td><td align="left">Is the protein predicted by SVM</td></tr><tr><td align="left">BLAST</td><td align="left">Is the protein predicted by BLAST</td></tr><tr><td align="left">HMM</td><td align="left">Is the protein predicted by HMM</td></tr><tr><td align="left">Hit_id</td><td align="left">The subject sequence ID</td></tr><tr><td align="left">Hit_length</td><td align="left">The length of subject sequence</td></tr><tr><td align="left">Aln_length</td><td align="left">alignment length (sequence overlap)</td></tr><tr><td align="left">Query start-end</td><td align="left">Start and end of alignment in query</td></tr><tr><td align="left">Hit stard-end</td><td align="left">Start and end of alignment in subject</td></tr><tr><td align="left">Identity</td><td align="left">Percentage of identical matches</td></tr><tr><td align="left">Evalue of blast</td><td align="left">Expect value of BLAST</td></tr><tr><td align="left">Hmm hit</td><td align="left">The subject model ID</td></tr><tr><td align="left">Hmm hit length</td><td align="left">The length of subject model sequence</td></tr><tr><td align="left">Evalue of Hmm</td><td align="left">Expect value of HMM</td></tr><tr><td align="left">Nomenclature</td><td align="left"><a href="http://www.lifesci.sussex.ac.uk/home/Neil_Crickmore/Bt">Bt nomenclature</a> containing 4 Ranks</td></tr><tr><td align="left">Endotoxin_N</td><td align="left">Whether the Cry protein contain Endotoxin_N domain</td></tr><tr><td align="left">Endotoxin_M</td><td align="left">Whether the Cry protein contain Endotoxin_M domain</td></tr><tr><td align="left">Endotoxin_C</td><td align="left">Whether the Cry protein contain Endotoxin_C domain</td></tr><tr><td align="left">Endotoxin_mid</td><td align="left">Whether the Cry protein contain Endotoxin_mid domain</td></tr><tr><td align="left">Toxin_10</td><td align="left">Whether the Cry protein contain Toxin_10 domain</td></tr><tr><td align="left">ETX_MTX2</td><td align="left">Whether the Cry protein contain ETX_MTX2 domain</td></tr><tr><td align="left">Gene sequence</td><td align="left">The nucleotide sequence of the toxin</td></tr><tr><td align="left">Protein sequence</td><td align="left">Amino acid sequence of the toxin</td></tr><tr><td align="left">Scaffold sequence</td><td align="left">The scaffold sequence where the toxin gene is located</td></tr></tbody></table><h2 id="Table-2-The-contents-of-“All-Toxins-txt”-Partial"><a href="#Table-2-The-contents-of-“All-Toxins-txt”-Partial" class="headerlink" title="Table 2. The contents of “All_Toxins.txt” (Partial)"></a>Table 2. The contents of “All_Toxins.txt” (Partial)</h2><table><thead><tr><th align="center">Strain</th><th align="center">Protein_id</th><th align="center">Protein_len</th><th align="center">Strand</th><th align="center">Gene location on scaffold</th><th align="center">SVM</th><th align="center">BLAST</th><th align="center">HMM</th><th align="center">Hit_id</th><th align="center">Hit_length</th><th align="center">Aln_length</th><th align="center">Query start-end</th><th align="center">Hit stard-end</th><th align="center">Identity</th><th align="center">Evalue of blast</th><th align="center">Hmm hit</th><th align="center">Hmm hit length</th><th align="center">Evalue of Hmm</th><th align="center">Nomenclature</th><th align="center">Endotoxin_N</th><th align="center">Endotoxin_M</th><th align="center">Endotoxin_C</th><th align="center">Endotoxin_mid</th><th align="center">Toxin_10</th><th align="center">ETX_MTX2</th><th align="center">Gene sequence</th><th align="center">Protein sequence</th><th align="center">Scaffold sequence</th></tr></thead><tbody><tr><td align="center">1126_1</td><td align="center">NHPK02000017.1_00027</td><td align="center">329</td><td align="center">-3</td><td align="center">10001-10987</td><td align="center">NO</td><td align="center">YES</td><td align="center">NA</td><td align="center">Zwa5B-other</td><td align="center">322</td><td align="center">322</td><td align="center">8-329</td><td align="center">1-322</td><td align="center">99.0683229813665</td><td align="center">0.0</td><td align="center">NA</td><td align="center">NA</td><td align="center">NA</td><td align="center">Rank4</td><td align="center">NO</td><td align="center">NO</td><td align="center">NO</td><td align="center">NO</td><td align="center">NO</td><td align="center">NO</td><td align="center">GTCTTCTAATAAAACACCTATTTCCTTTTCCCTAGCCCTTTGATAGTAATAAGCAGCAATGGCTACATCAAAAATGGCCATACCCATTGGATTAAATAATATTGCTTTGTCATAAGGGAAGTTTTGCAGTGCTCCTCGGATTACAACGTCAGCAATTGATACTGTATCTTCTTTTTGTAAACCTCTTTCAAGGTGCATCCTTTCAACATCAGTTTTTTCACGACAGACTTCTTCCCAATTATCAACAACTAGGGATTTTGTATATTCTAAGATATCAGGCTTAAAATCACGAAGAGAAACATTGAGTAGTAGCGCTCCATCTTTAGGTTTCTTATCAATATAACCTTCTGCAGAAACAGTACAAGTAATAAAAATATCAGCATCATTATAGGCTTCTTCATAAGCATTAACCTTTTGAGTTTTAGAATAAATATCCTCAGGAATTAATTCGTCTTTAATTCCATTGATATCATATAGGTAAACACTTTCGATTTTATCGCCTAATAGGGCAGTTACCATCTTTAAATGCATCTGACCAATAGGTCCAAATCCAATAATTCCAACTTTAACATTATTTAAATCTCTTAACTTGGCAAACTCTCGAATCATTAACCCTGTTACAGAAGCTGTTCGTATTACACTGACCATTGCTGTATTAAGCGTCGCAAATGGTTTTCCAGTCATAGCATCATTTAATATAGTAACTGAATGAGCACGTTGAATACCTTTCTCAATATTCTTCGGAAAACTAGCTATCCATTTGATTCCTGAAACCTTAAATTCTCCTCCAATATAAGCTGGCATAGCAATAATTCTATTAGCCGGATCATCAAAACGTAAGTATGGCTTAATTGGCTGAGAAAAATCTTCTGCATCAAGACTTTGTACTGCCTTTGAAATGACATTTATTGTTTCTTCCCAATTAACACCCATTTCATTGATATGTTTAGTATTTAAATACATCATAATTGCTTCCTCATTTCTATA</td><td align="center">YRNEEAIMMYLNTKHINEMGVNWEETINVISKAVQSLDAEDFSQPIKPYLRFDDPANRIIAMPAYIGGEFKVSGIKWIASFPKNIEKGIQRAHSVTILNDAMTGKPFATLNTAMVSVIRTASVTGLMIREFAKLRDLNNVKVGIIGFGPIGQMHLKMVTALLGDKIESVYLYDINGIKDELIPEDIYSKTQKVNAYEEAYNDADIFITCTVSAEGYIDKKPKDGALLLNVSLRDFKPDILEYTKSLVVDNWEEVCREKTDVERMHLERGLQKEDTVSIADVVIRGALQNFPYDKAILFNPMGMAIFDVAIAAYYYQRAREKEIGVLLED</td><td align="center">TCTCAATACGAACCAGTAAAAATGGTTCAGGGCGTTGAAGATACTGGACGTAATTCTTTTAGCCAAGCTAGTTTTTCAAACGTACTTCTAAGAACAGATACATCTGGAGCTACCTACAAAAGTTGGAACGGTTCAATTTCTTCCTCATTTTCTAAACACGGTACTTATGGTAACAGTTTCACAGTTTATTCTCAAGTGCCATTAAGCGCAAGTTTACGCTAAAATTGTTCTTGTATACGAATAATTTTGTGAAAAAGGTAGCTGTACTTTTGTACAGCTACCTTTTTCATATGGTGAATTTTTAATAGATATTGTATCAGACATAAGTTACATTCTTCATATTTTAACTTCTTTGAATTCAATAATACTTAATCAGCTTGTCTTATTACTTCACTTAACGTATCGAGATACAGCTTATAGCAACTACAACACGCTTTATTATTAATAATACCACTCTTCTTAATTTAACTTTAATTCCATTGCATTGATTTTTTAATAATAAATATACAACTTAGTAATGATAATAGATATACAATAAGAATAATATACAACTGTTTTGGTTCAATGCTATCGATATAAAGACTCATAATTGGATATGACCAAGGAAACAGTATCCAATAGTTTGTATGCGAGATAAAAAAGCTACCCAACCCGCCTATAACCCCTACTAATAATGAAAGTAACGGGATTTTATAAAATATTATATTTATTAAAAAATGTAAATTCACAATAGTTAAAGAGCTAATCACCATAAAAAGTATAGAAAAAATTAATCTTTGATAAACAGTCCCAAGATTATCAACCGTTAATACTATAGGTATACTAGTTATGACTAAAGCACATATTAAATAACCAAAAGTAATTATTAAGCAAAACAAAAACTTATTACTTAATATAGTTTTTAAAGTGATTCCGTGATAAATAGCAGACATATATCCTTTTCTTCTGAACTCGTTTACAAAAGAAAATGACACTAATAGACCTATTGCAATAGGTAAAAATAATCTACAAAAAAGACTTAGAATCGCTATATGCATGAAAACGCCATCTTTTGATTGAGATGATACAGTTAGAAAGATTTGAAAACTAATTGGTATCAACAGAAATACTAGTAACAGGATATACAATCCATTATGAAGACTTTTTTTATATTCACCTAATATACCCACTTATTTCACCCTTTATTATTCATATGTATAATATTTAAAACTCACAGCTAATAACATAATTCCTAAAATATAGATTGAAGAACTTGCAAGATATATTAAAATAGTTGTTTCTTTCATCATTACATCACTTACTATATTCAATGCATAAAATATTGGAAATGTCTTTGTGAATACTACAGGAAATAATCCATAAGTTACGCTAAAAAAAATCCAAATAACTGACAAGGACGCCGCAAGAATTCCCTTTTTTATAATCAAATGAAAAAGTAATTGAGAATATGGTATTGCTAAAGATAGAATTGTACAAAGCATCAACATTTTCAAAAAATAAAGTATAGATATTTCATATCCATTTATAAAAATATAGATACCCATAACTGAAAAATTTAAAATATTAAAGATTAAATAAAACAGTATAAACAATAAATTTTTAGCTACCAATAATTTAAATTTTGAAATTGGCTTTGTATAGATAATGGCCCAAGTACCATATTTATTTTCAGAAGAAATGATAAAATACCACATACAAGCAGAAAAAATGCTTAATGTTAGTGTATTAAAGTTTACTGTAATTGCTATAAGATTGGTAGATTGAAACATATCGGGATTATTCTTGTTAAAAATAAAATAACTTATACACAAAAAGCTTGATAATAATGAAAAAAACAAAGAAAATAACAATAATTTTCTCCCACCAATTTTCCTCATCTCACTATTCACACTTTTAAAGATAAATTGCATTATGATAGTAACTCCTTTTGTTTAGTTAAAGATAAAAATACTTCCTCTAATGTTAGCTTTTTAGGGCTAACTTCAAAAATATCTATATCATTTTCAATTAATATTCTGGTTAAATTAGGAACACTATTTTGATCTATCATTAGTTTGAATACCCCTTCTTTTTCTATGCTATAAGGTATATCCTTTGTATTTAAAATCCTTTCTGTGGCAGTAGTGTCATTAACATGAACAATATATTCTCTAGAAGTAATAATACTGTTTAAATTCCCTTCATAGAGTAAGTTACCCTTATGCAGTAATGCTATGTAATCTGCTATCATTTCGATTTCAGCTAAATTATGACTAGAAATAAATATTGTCTTCCCCTCATTTTTTACTAAATGAAGTAATAAGCGCCTTATCTCGTGTACTCCCTCTGGGTCTAATCCATTTGTCGGCTCATCAAGAATTAGTATTTTAGGATCATTAAGAATAGCAAAGGAAATACCTAGCCTTTGTTTCATTCCTAAAGAAAAATCTTTCACTTTTTTATCTTTTGCTTTATATATTCCTGTAATTTTTAATACTCTGTCTATTTCATCTAAAGGCTTATTAATCATTTTTTGTACATAGGCTAAATTTTCATATGCTGTCAAATTAGGATAGTAGGTAGGTGAATCAATAAAACAACCCACATTTTCAAATAATTCTTCTTTCCAATCTTTGATATCTTTATTATTAAATAATATCGTTCCTTTATCTAATGGAATTAATCCTAATAGCATTCGCATTGTTGTTGTTTTTCCTGCACCATTTGGTCCAATAAAAGCATATAAACTTCCTTCAGGAACAGATAAGTTTAAATCCCTTACAATGGATTGATTGTCAAAAGACTTTGTTAAATTTTTAGTTTGGATTGCTAATTTCATTTTGTTCCTCACTTTCTTATTCTCAAATAAAAGTAAGTATCTATTAAATTCTTGATCTATTAGATATTCTATTTACCCTTTACCTAATGTTTGCAATTTGGATTTAGAAAATATTTCTCGTTGTTTTAATTTTTTATCAGTAAGTTCATAAACTCTATCTACACGCTCTAAAATATTTTCATCATGAGTGATAATAATCTTAGTGGATGGTATGGCAAATATATTTTCAATAACAGCATTTGCCGTTTCCCTATCTAAATGGTTAGTTGGTTCATCCAAAATAAGAATCGGATATTCTTTCATGAACAATCGTAACATAGCCAACCTTTGTCTTTGGCCACCGGAGAAATTTGTTCCTCCCTCTGAGATTAAAATATCATTTATACTTTGAAATTGAATATAATTACTCAGATTCAATTTATCAATAGACTCCTGGATTTTTGAAGGATCATAATTTATATCAAAGTAAGATAAATTCTCAGATAAACTTCCTCTAAATAAAACTCCATCCTGAGTCATTAGTCCTACATTTTTTCTTAGTTCCTCACTGTTCCAATCTTTAATATCTCTATCGTCTATTAATATATTACCCTTATCGGGAGTATGCAATTTTAATAATAAGTTAGCTAAAGTGGACTTACCACTGCCACTTTCTCCAACAATAGCAATACTTTCGTTATTTTTAATGTTCAAACTTAAGTTTTCTATTATTTTTTTGTCATCAAAACTAAACGAAATATTATTAAATTGAATCGATCCTCTAAGAATGTTTACTTTAGTATCCGATCCATCTTTTTCTAGTTCCTCTTCCAAGATATCTAAAGTTCTTAATAAAAGTGGTTTAACTGAATTCCAATTTAAAATTGATCCTATAATTGTTGAAACCGGAGAAAATATAATACTAGATATAGCAATAAAGAAGAAAATATTACTTAAATCCCCTTCTCCTTTACTAAAATTATAAAATCCTACAGCAAGCATTATGATAATAAATATTGTTGATAGGGAACTATTAAATGATTCTAAAGCATTTTGTTTTAGCGCTCGTTTATGTACTGTATCTAAGTATTTATTATAATCTTTTTGCCATACAGATTTAATTCTAGAAAAAATCCCTGTAGCCTTTACATAATACATCGCTTTTAATGATTCATTAATTTTCCCTCTATGTTCTCCTAGGTAATACGTTTCGACTAAATTAGCATTATATATGAATTTCCCTAAGGAAATATTGATAAATAGGGAACTAGCAATAAAAAACATCAATATTAAAGTATAAAAAGTCTCAGTATATAATAGATACATCAATAATGGAATGATAACTACTATTGATATAATCATTTCAATTAGATCCTCTAAAATATATCCTCGTATTGATTCTAGGCTCATGATTCTTACATTTAAATCCCCTGCATGACGTGTAGTAATTTTTTCTATGGGGGTATTAAACATATGCTCAAAAACTTTTGTTGTACTTTTTCTATCAATTTCTTTCTGAAAGTTTACTTTTATAATAGAAGTTATAGATTTTATCCCTATAACAACGATTAAACTTCCCAAAATAATTAAAAGGTATCTTACATCCACTTCCTTTGAAGCATTCAAAATATCCATAAACTTTTTCAAAATAAAGGGGAAAGCAAGAATTGAGATTTGTGCTAACAATGCTAATAGTGCTAATAAAACAATCTGGCTAGGAGATACAAAATGATCAATATATCTAAGTAATATATGTTTTTCACGCCTTTTAGTATTTGGCTGTATATCTTTTTTGTTTTCTATTACTAGGATATAGTCACAGAACATTTCCTCAAAACTTCTTATATCAATTATCATCGGCCCTGCCTTAGGATCTACAATATAAAATTTATTTGCTTTAACCCTTTCAATAATTACAAAGTGATTAAAGCCCCAAAATGCTATCATCGGCTTTTGTATCCTTTGTAAATCAGTTATATTTTCTATCCTATATGCAGTTGCAGAAAGTCCATACGATTTACTAACTTTTTTAATATCCAACAAACTCCATGCCGATTTTTTATTGATAATTTTACTATTTCTAATTTCCGAAGCTTGTACTGCTGAACCATAATAATGCATAATCATTGCTAGACAACTAGGCCCACAATCAAAAGATGTCATTTGCGGTATAAATTTAATTTTCTTCCTTAACATATTTATCACCTATTCTAGGCATTAAAGTATAAAATGCTATTTAGTTTATTATCCTCTAACCTTTGTAAAAAATACAAAATACTTCCTAGCCCTGTAAATAATGCGATTTTATGAGGATTAAAATCTTCTATATCAAAATTATTCAAAAAGTTATTTGTTACTTTCATAACAATTTGTTTTTCATTGCGCTCGAGCATACCTCTATTTTCTAGCTCCAATAAAAAGTCTAGTTTCCCCATTAAACCATGACATAAACAATAATCACTATTTTCATGTAATGTACTTAAGATTTGTTTTTTAAAAAAAATTAAATCTGATTGTATATCCTCATTTTGATACGATTCTAAAATTTTAATTCTCGAGATTCCCATTCCACTAAATCCTTTACACCAGCTATCTGTATACTCATATTCACTCATACTCATTTTCTCACTTTTATGTATACCATGTATTACTCTATCGTACTTATTTGTTTTTAATATGCCTTTTAACTTATAAAATGCGAGAAGTTGTCCTGATAATCCATGAACAAACCCCTTTAATGAATCCTCTAAATTTAGAGTATCGTGAGCTTTCCAATATACAAATTCATTATGTGTTTGCATATTATTGACAATGTAGTCACCGAGATTTTCAGCCACTTTAAGCAATATTTTATAATTAGGATTAATTTGATAGAACTTAACTGCCGTTAAAATTAGACCAGCTGAACCCCCTAATATATCAAAATGCTTATCGCTATATTTACCTTTTTCAATATCAGAGTTGACATCCATAAATATTTGCAATATCAATCTTTCATCGATAGATGTTATATGTGGTAAATTTGTTAAATAGTAAGAAATAATTGCATTAACACCATTTACAAAACCATAATTATTTTTATTTTTGTTTAATATTTCTTGCAGGGCTTTTTGTTCAAGTTTATTTATAATTTCAATCTGATTAGGATCAGCATTATTTCTCAATAATGAACTTATTCCCAATAATCCATCATATATTCCACTATTCAAATGGTTTATCTCAAGCTCCCCTTGCCAATTTGTTTTTAATCCAATAAAATCTACAGCACCGTCTTTTGATATATAACTGCCATCAAGAATTTTCCCTGTAATTGCTTCCTTTATTTTATTTGTAGGTAAATTAGTTCGAAAATTAATTGTTTCCTTTACTGTATTCAGCTTATATAGATTGTCATTTTGATTAGAAAGGGATATTTCTATAATTTTTCTTTGTAATAAAAAGTCAGCATATGAAATTTTTTTAAATTTTGTTTCTAGATCTATTTCATTATTTGATAAACTTTCGCAAGACTCCCATTCATACTTATTAAAGAAATATGGAACATCATAGGATAATAGTGCCTCTATCTCTTTTTGAATAATATCTTTCCTAGTAGCCAAGTATATGTTTTTTTCAAGAATATTCCGCAAATATTTTATAGTCTTTAATTTATTCTCTAATAAATCCGGAACATTTAGTCTATCTAATAAAAGGGTATAGACTTTTGTATTTCGATATACTTTTCGATAATTCCATTTAGAAACACTATTTTTTAATATACACATATACTCCTCTTTGTTTTTTAAAACTGAGTTATATGCATTCTCAAAACCTTTAATAATATCATCTATATAATTATCATACTCGTATATATCATCGTTAAGAAACGGTAAATTCTGAACCGTATCTTCTACTATTGTCTCTTCTCTTATTTCAATTGGATTCGATGTAAATTCATTTTTTATTTTAATTGTTTTTACCAAAGACTTCATTACTCTCCCAATTGCACTGTAATCTCTTATTACCTCCCTACCTCCACTAAACCTTATAGGTAGCATTCTAGAATTTAATACTGAATTAGATAATATAAAACTACTGGTTTCTTCAGTAACACTTGGATTTAATGTACTTCCTAATGTCTCAAAATCAATTATGACTGGTGAGGATTGTTTAGCTATGATATTTTCATTATGTATGTCACTTCCATTAATCAAATACATTACCGAAAGCACTACACCTAAATTATAATAATAATCTTTAATTTGCTCATTAGATTCACATGATTCATGATTAATGTATTCCATATATCCATAATTTCTTTTATTAACTACTTGCGGAATAAAGATATCCGTATTTAAATCTTTATTCAGTTGATTAATTAAACTATGATATAGTATAGAATTTTTCAAATCGACTGGTTTTAAAATTACCTTATTATTAAATTTATCTTCTAAAAGAATTGTTCTCTTTCCATTATTATGGTAGTCACCTAGGTTAATAACTTTTTCTACATGCATAATATTAAAACCCGACATTTTATGAATTTCTTTTTGATCTTTTTCAAGAGCACCTTGCAACCAAATCATATAATTTATTTCATTTTCAATGATTGTAAAAATTTTTTCGTTTAATACGGGTAATATTTTAAAAAAATTCATATAAAATTTTTTAAAATGAAAGAAGTTCTTTGTAAAATACTTATATTCTTCATTGGTATCCATTCCTCTTAAAGCATTTTCTACCCTAAGTTTATTTATGTATACAATTAAGGATGGCCTTAATACTTGGTATAGTCTTTTTTCTAAATCAAACATTATCGATTCAGAAACCTTCTCAAAATTACCAAAAAAATCAATTTTATTTATTATCATATTTTTAAAGAATACTACATATGTTTGTATTATTTTTTGAAAGTTATAGTTTTCGTCATCCTTAATGACATCATTACATGAAAAACCCTCTAAAAAGATAACAAAATTTTTTTCTAGATATTCTTTTGTTACTAAAGAATGTGATCCATTATCTATTGTATTCAAAATTCCATGTGAATTATTTTTCATAATAACCTCTTCTTTTTATAGGTAGGAGAAACAGTTAGAAATTCATTCTCATTAAAGAGAGTAAGGCCTTTCGCCTTACTCTCTTTAACTATTAGTAGCATTTTTTACAAATTCTTTGTCCCATAATCGTGACACATGCTACAGGCACATTCCAAGGACAATCTTTAGTTAAAGTTTCAACCCAACCAGGTCCTGCTCCACCAACTAATTGTTCAATCTCTTCATCTTCTACGACTTGTAAATATTTTTCAGTTTCCATTTCAATACCTACCTTTTATTTTTTTGAAAATGATGTTATAAATTCAATAATTTACCACAACATTATCTAAAAACAATATACCATTAAATGTTAATAAAAAAAAGATATATTTATAGAAAAATAAAATAATAGGATATTTAACTATATTAATATAATTAAAGGAGACTCACTTACTATATCATTAAAATTTAAAGGCTATTTTCCAAGTTAATATTTTTAAAATTTTATAAATTTATTAATAATCAATGCTGTTTAATAATTTAAATAATTCTTCTAATACCTGAATAACGATTAAGAATATTAATTAAACTTGTAAAAAATAGATTTTCAGAAGATATAGCTCAAGAATATTTTACCATAAAATAGGATAATCAATTCTTTTTTTAATAGTATAATGCTTCGTCAGAAAATTTTAATCATGAATTGCAAAAAGCATGTTAAAAATAAAAAGATGAAATTGCAAGTATATTCACTTCACAATCCCATCTCTTCTAAAAATTGTATATCATCAACTCTCTTGATCCTCGCAATTCTACCAAATTAATAGCAACACATTATGTAGATATAGGTTTATACTATTCTACATTTAAATACATGTAATATTGCCTATACTTTGTTATTTTCATGTGAAACTAATTCACTATATATCTCTTTCTCTATATTTTTCAAGAGAATTTCCAACCTATTTTTTGTAGCTAGATTAAAATGTGGATTTAATTCTTTTATTATAAATTCAAGTATCTCAAAGCTTATGTAATCTCCTAATTCAAGTGAATATTGATCACCCAAGAAAGTTTTTAATTTTTTAGAGATCTCCACTTTATCTTTTTTGGTAATATTTACCCCATCCGATAACAAACCTCTCTTAGATTAGTCTTAAATACTAATTCAAAAAGTTTTTATAACATAATAAAAATATTTTGGAATTAATATAAATCATATAATGAAATTTTTACAAATAAATAAAAAATATACATCATAATCATTAAACAATATATTAAGCATCGTAAACATATATTGGCTCGTCATAAAGGCGTAAACATTTTGACCAATTTCCACATAACGTTTCCCATTCACCAGCAGGATATACTTCCGTACGCAATATATGAAGTGGTATACGTAAATTCAATAACCGACCACTAAGCGTCGTACGAGTAACTCCCGCTGGCATTAAAAACTTTGCTTCAATTACCTTTTTCAGTTCCATCAACGAGTATTCTGGATAACTCATCAATATTTCATTTGAATGAGGCCAGACCTCAGTATCATTTGAATGACGGCGTACCGTATACTCATGTTGATATAAGCTGACAATACGATGCCATATCTCTAAATGATTAAATAAATCGCTATTTAAATCCCTTGCATATAAAAAATGTACTTGTTTATTTGCTTCTGTAATTTTTGCAAGCAAACGTTTATTAGCAATAATCTTACCTGACCAAATTATTGTAGGTTCTTTCTTTAAATTATTTACCCATTCCCCCATTGGTAATAAATGATTCCAAGCACGAATTTTTATTTTTTCATCAGGTACTACCTGTACAGCAACGCGTTTACAACCTAATGCCATCATAGCCTTCATACGATGGGCACCATCAAGTAACAGATAATTACCATCACTAAGCTCAGATACTAAGGGAGGATTCCGTAAAACACCTTCGCTTTCCATTACACGACAAATTTGTTCCAATCTTTTGTGTTCATATGATTCATGAAAGCGAATTTGCTTGGGATGTAAGAGATCTAAGGCCGAAATAATTTCACTCATAAAAACAGCTCCTCAAATAATTACATAAATTCTAAGCTTATCAAATAACTAATTTTCTATAATGATTAGTCGTGTTTACCGATATTTAGCAGCTATTAGACAATTATTTCAAACTACGTTTAATAATTTTACTAGTCTTCTAATAAAACACCTATTTCCTTTTCCCTAGCCCTTTGATAGTAATAAGCAGCAATGGCTACATCAAAAATGGCCATACCCATTGGATTAAATAATATTGCTTTGTCATAAGGGAAGTTTTGCAGTGCTCCTCGGATTACAACGTCAGCAATTGATACTGTATCTTCTTTTTGTAAACCTCTTTCAAGGTGCATCCTTTCAACATCAGTTTTTTCACGACAGACTTCTTCCCAATTATCAACAACTAGGGATTTTGTATATTCTAAGATATCAGGCTTAAAATCACGAAGAGAAACATTGAGTAGTAGCGCTCCATCTTTAGGTTTCTTATCAATATAACCTTCTGCAGAAACAGTACAAGTAATAAAAATATCAGCATCATTATAGGCTTCTTCATAAGCATTAACCTTTTGAGTTTTAGAATAAATATCCTCAGGAATTAATTCGTCTTTAATTCCATTGATATCATATAGGTAAACACTTTCGATTTTATCGCCTAATAGGGCAGTTACCATCTTTAAATGCATCTGACCAATAGGTCCAAATCCAATAATTCCAACTTTAACATTATTTAAATCTCTTAACTTGGCAAACTCTCGAATCATTAACCCTGTTACAGAAGCTGTTCGTATTACACTGACCATTGCTGTATTAAGCGTCGCAAATGGTTTTCCAGTCATAGCATCATTTAATATAGTAACTGAATGAGCACGTTGAATACCTTTCTCAATATTCTTCGGAAAACTAGCTATCCATTTGATTCCTGAAACCTTAAATTCTCCTCCAATATAAGCTGGCATAGCAATAATTCTATTAGCCGGATCATCAAAACGTAAGTATGGCTTAATTGGCTGAGAAAAATCTTCTGCATCAAGACTTTGTACTGCCTTTGAAATGACATTTATTGTTTCTTCCCAATTAACACCCATTTCATTGATATGTTTAGTATTTAAATACATCATAATTGCTTCCTCATTTCTATATCATTTTTATAAAGAAACTAATTGGTCTTCTACTGATTTTTTTGTATTAAGCCATTCTACCCATTCTACGTTGTAAATAGTTGATGTGTAAGCTTGTCCATTATCAGGACACAAGAAAACAACATTAGGTGTATTTTGAACATCCCTATTTTCAAAATACTTTTGGATTGCATAATATGAAGTCCCTGATGATCCACCAGCAAATATTGCATGTTTATTAAATAGCTCATAACAACCTGCAACAGTATGGACCTCCGGTACAATCATTACATCATCAATCAATGCTTTTTTAACCATACCAGGTATCATACTGGCACCAATTCCTGGTATGTACCGTTTACGAGGCTTATCACCAAAAATAATGGACCCTTGACTATCTACCGCAATAATTTTAATATTAGGGAATTTTTCTTTTAATCGTGTAGATACCCCAGCGATAGTTCCTCCAGTACTCACTCCAATGAAGGCATAATCTAACTGTTTAAAATCATTAGATATTTCTTCACCAATTCCTTGATAATGGGCTTCAAAGTTATCAGCATTATTATATTGATTTGTCCAGTATGCATTAGGAATAGTATTTAAAAGTTCTTCCACCTTATTTAAACGCGTTAATAAATAGCCACCTGTTTCATCTCGTTCATCCACTTTAGCTACTTGATAGGAAGTTGCTCTCAAAAAATTCTCATAACTATCATTAATATTTGGATCAATAACTGGTATGAATTTCAGGCCGATATACCTACAAAGAGTAGCAAGAGCAACCGCAAAGTTACCAGATGAAGATTCGATAATTGTAGAATTTTCAGTCACTTCACCGCGACTTATTGCTGATTTTAAAATATGGTGAGCAGCACGCACTTTAACACTATTCATTAAATTGTGATATTCTAGTTTTGCATACAGATTAATCTTTTCATGCTCTAATTTAATCATAGGTGTGTTGCCGATTACCCTTTCTAAACTCTCTAATTTCTTGAGCATAATTTGCTTCCTTTCTTGGTTAAAATCTAAAAAAATAATTAAAGATAAATAGTTGTAAATGTTCTTTCGAATGTATTTCAAATAGAACTTATACCTGAAAGACAATAAATGCTAGATTCTTTAGTATCGATAAGCTAAGCACCATTCAAGTACTGCCATAGCACTATTTAGCTTGTTTTCGGCCTGGGTAAATACAATACTTTTCGGTCCATCAATAACTGTTGCTGCTACTTCTTCCCCCCGGTGTGCTGGGAGGTCATGCATGAAAGTAGCTTCCGGATATAAAGTCAAAATTCTCTCTGTCACTGCAAATGGATTAAAGGCATCTTTCCATAAAGGATCTATTTTGCTTGTCCCTGTTGTTTGCCACCTTGTTGTATATACAACATCCACTTCACTAGGTAACATTTTTATATCATGACATTCAATAACTTTAGCACCAGATAATCGTGCATATTCTTTTGATTTTTCAAGCACACTTGGAGACACTCCATAACCAGCAGGTGTAAAAAGATATAACTCCGTACCTGGAAAACGAGATAAAGAAAGAGCTAGAGCTGCAGCACTGTTATTACCTTCTCCCATATATAAAACCCGTAATCCAGCTATTTCACCAAATTTTTGTTTCATTGTTGTTAAGTCTGTTAGCGCTTGTGTTGGATGTTCTTCCGTACTCATTGCATTAATGACTGCCATACGACTTTGAGATGCCAGCTTTTCCATTTCCTTTTGACTATCTGCAGTTCTTGCTACTAGTGCATCCAGCATTCGCGAAAGTACTTGAGTAGTGTCTTCTATAGACTCCCCTGTATTTTCTTGCAAATCATTTGGACCATACGTTACAATTTGTGCACCCATCTTTAATGCTGCAACAGAAAATGCCGATCGAGTTCTAGTCGATGTTTTACGGAAGTAAATCCCAATTATATTTCCCGCTAATATTTGATTAGGTTGTGATTTACCTGTGGCAAACTCTACCCCACGAGTTACAATTTGGTTAATATCACTATCAGTAAGATCCTCAAGAGTAATTAAATGTTTTCGAATAGCCATTATTATATTACCTCCCTTTTGAATAATTGCATGTAACAAAAATGTATTTACATATGTATGTAAATAAAAACTACTAAACAGCTAAAGTAAAAATAATAGATTGGAAATATAATTCATGTGGATCCATTACCACACTTTTCTATAATTTTTTTTAAACTAATGTATAGCAGTTGATATATAGCCTATATGAACTCGAATACTATTTTTACTCAGAAATACTTACATATAATTCTATTGTTAGTCTATATTCCTATTTTTTATGATATAGCTCTGCTGAATATATTACACACTACAACACTAAAAATATACTCAAAATACAGAATTTTCAGCTTTCTCAATTCTTTCATCAATTTTCTGTCAATTCATACTCAAATTATCTTTTTTACTAATAATATACATACAATGTTGGCTGTTTCTTTTATAGCCCACTTCTAAAAAATCCACCCATTCAAAAATAACGTTTTCCGGATTGTCAGTTAAGATACAAATTACTGCTGCAGTCATTAAAGAGTCCTCTTTAAAAGAGATATACTCCTTCTACTGGCTCGCTATTTTTAGTTATGATAACCTCTTAATTGTTACAGCTATAACGCTAACAATTGTTATTGCAACCATTGATCTAAGTAAACAAACAATGAATGACATACTAATATATACACAAAGTAATCTATTAAGCGTAAAATGATTGCATCTCCAGCAAGTTTAATTACTTATTCAGATCTTTGCTTTTATAATTTTCAAAATTAAATTTCCGAAAATTTTCTTTCCTTAAGGAAATATCGATCATTTTAAACTATGTAAGAATGCTTATCTTCTATAAAGTAATTACACAAATCAACAAAGTCAATTTCAATTATTGATTCTGGAAAACTATCTAAAGAAGCACAACAAGAAAGCTTATAATCTTTACCAATAGTAAACTTTTTATAATAAACCTCATTAGATAGCATGTCACCATAAAATATTATATTTTTTTTAATAACAAAAGAGTTTAAAGGTATAGTTAGTCCTTTCCCTATCCATTTAACAAAGCTTTCTTTTATAGTCCATAATTCATAAAACACATCTAATTGTTGTTCTACATTTAATGAATTTAAATAATTAAATTCTTCCTCAGTAAATATATTTTTAATCATTGTAGTATCCATGGGCCGGACTTTTTCTACATCTATTCCTACTTCTTCCTCATGAATAGCTCCAACAACCCAACTTTCGGAATGCGATATATTAAAATGAAAATTATTTAACTCATCCACATAAGGCTTTCCGTATTCATTGTATTTATATTTAATATCTTTATTTTCTTTTGAGAAATTTGTAATAATTAAATATCTTATTATAATGTCTCCAATTAAGGCGCTATATTGGTCGGGCTTTCTTTTATATTTCTGTATTTTCATCTGCTTTTCTTTTGAGACCAAACTCATAAGTTTCTGCATAATGTTATGTTCTATATTTCCTGGCACACGTACCTTATATATATTCATTATTTCCTTCCCACCTAACTTCTTATATAAATATAAAAAACTCTCAATGAATAATTCCTATTTATTTTTGATTAGTAAAAAACATTTTCAGAGGATAATATTCTATTTTACATTCATATTTTCGACTTATTTTCTAACCTCTTTATGTCTATTATTGAATGGGCTCAAAGAAAAAAGTCTCATAATATGTTATACACGAATTTATGAGACTTTTAGAAAACTAATAGTGTACAATTTCAAATAATATTTCACCTATTTACATGTGCTAATAAGAGCATTTGTTTAAAACTCATTTTTATACTCTTTACCAACTCATGAATATGCGGTTTCTCTAACATACTCAGATGGGAACCTGGCACTTGCAAAGCGTATACTTCCCCTGATGTATATTCATTCCATCTGTTATAATCTACTAGTGGGTGAATGTCATTAATAGATGCATTAAATAGAAAGATATCTGCTTTTATTTTTTGTTTACAATTATATTTTAGGTATGCATATCTATTAGCTATCATTACTTTTAACTTATTCATCATTGGATCTTCAAAATTTTGCTGACAACTATTTTTATTCAATGTAAATTTTTTCAGTAAAGATTCTATTAATTGTTCTTCACTCATTTGCTCAAAACTAATTTTCTCAATCCCTAACTGATCATTGAATTTTTCCAATTCTTCAAAGGCATTCTTAATATTTAAACTAAGAATCTCCTTACCTTGTTCAATAGGATGAACATCAAGTAAACCTAGAAAACTAACTTTATCACCTAGTTCTTCTAATTTTCTAGCCATTTCAAATGCAACTATTCCTCCAAAAGACCATCCTAATAAGGCATATGGCCCTTCTTTTTTTACTTGTTTAATCTCTTCTATATATCTTACCGCCATTTCCTCTACAGATAAGTTTGAAAATCTATTATCATCATATCCTATAGATTGTAACCCATATACAGTCTTATCCTCTCCTAATTCTCTAGCCAAATCATAATAGTTTAATATGCCCCCTCCTTGTCCATGAACAATGAACCATTGACTATCCTTGTTTGTCCCATTTTGAATTGGAATTAAACACTCACTGTCTATTCCTTTATTCCTACTTATTACATCACTTAATTGTTCAATAGTAGCATTTTGAAATAATAAACTTAATGGCAGTTGCACATTAAACATTCTCTTGATATTTTCGAATAACTTTAATCCCTTAAGAGAATGACCACCTAATTCAAAGAAATTATCATTTATACCAATATTATTTACGCCTAATATACTACTCCAAATATCAATTAAACTACTATCTATGTCATTTCTTGGTGGTACATAATTACTATTGTCCAGTGTATTTAGCTTCGGTAACTTACTTCTATCTATTTTCCCATTTTGTGTTAATGGTATATTGTGAATTGGTATGAGTTGTTGAGGTATCATATAATGTGGTAACTTTGTTGCCAAATATGCTCTTACCTCTGGAATAGGAATATCTTTTTCTGTAACTACGTATGCACATAAATACTTTTCCCCAGCTTCATCTTCTTGATCTATTACTACGGCCGTTTTGATTGTCTCATATTTTAACAAACTCGCTTCTATCTCACCTAGTTCTATTCGATATCCCCTTATTTTTACTTGATGATCGACTCGGCCCAAGTATTCAATGTTACCATCAGGTAGCCACCTTGCTATATCCCCTGTTTTATATAGTTTCTCACCTCGTTCAAATGGATGATCAATAAATTTATCTGCTGTTAATTCTGTTCGATTGATGTATCCTCTAGCTAACCCTATGCCAGAGATACATATTTCACCTGGAACACCTATAGGTTGTATCCTATAAAATGAATCCAATATATAAATTTTAGTATTTAACAATGGTGAACCTATCGGTACGTTTTGTGTTGTAATTTCTTTATTACTCTCATATCGATAAGATGTACAACAAACTGTAGCCTCTGTAGGTCCGTATCCATTTAATATTTGGAGGTTCCCCCTAAATAGATGATCGTATTTTGCGAGTAATTCTGTTTTAATGGGTTCTACTCCCACAAGTAGCTTATTTAACACTATCTTCTGGTTATCTCTAACAAAATAATCATATATTTCATTTAATAAAGTAGGTGGAATATATGATAATGTAACCTGTTCTTCAAGAATAACTTGTACAAGTTTTGATACATCAAACTTCTCACCTTGATAAATAGTCATTCTTGCGCCATATATCAATGGGACAAATATCTCAAAAATAGTAACATCAAAAGAAATACTACTTGAGAATAGAACGTTATCAGTTATCCCTATATCTTGAGAGAAATCTTCATACATTGCACACAAAAAATTAGTCAAGGATCGATGTTCAATCATTACTCCTTTAGGTTGTCCTGTAGAACCTGATGTATAAATAACATACGCTAAGTTGTGAGGTTCTATCATCATTTGCATGTCTTCTCCTGGTTCTTCTTCAAAAGACATATCCATTAGATCTATTACATTACCTTGGAATTCTATCCCCTTTATAATAGAGTTTTGATGTACTAATACATGTGAACACCCACTGTCTGTCAGCATATATTCCACTCTTTGTTTTGGTAAGGCGGTATCAATTGGTAAATACGCCCCACCTGCTTTTAAAACACCTAATATACCTATAACCATCTCGATGGATCGTTCCATCATCACACCAACAATGGATTCTCTTTTAACTCCTTGGTCTAATAACCTTCTCGCCAACTGATTAGCTTTTATATTTAATTCATTATATGTAATTCCTTTTTCATTACATACAACGGCTATTTGATTAGGGTTCCGTTTTACTTGTTCTTCAAACATTTTATGCACTAATAAATGATTAGAATTTGAATTCTCTTTTTTGTTAAATTCATTCATAATACAATGTTCTTCTTCTATAGATAACATATTAATATTACGCAATCGTACTCTAGGGTTATTAGTTACTTCCTCAACTATATTTGTAAAATGTACCATTAACCTTTCTATTGTCTCCGCTTTAAATAACTTAGTACTATATTCTACTTTTAAATGAATGTTATTATCTATTTCCGTTGCTACTAATGACAAATCAAATTTTGAAACTGACTGCTTAAACGGATACGGTGTAAATTCTAATTCACCAATAGATATTGGATTCATATCCATGTTTTGAAAAACAAACATGGTATCAAATAATGGATTTCTACTTGTATCCCTATGCAAGTCTAAACCTTCTAATAGTTCTTCAAAAGGATAGTCTTGATTTTCATAAGCTTCTAATGTATTGAGTTTTAATCTACTCAAAAACTCAATAAACTCATCGTCATTTTCTAGATAATTTCTCATTACCAAAGTATTAATAAACATACCAATCATATGATTAGTATCAGAATGAGACCTTCCAGCAATAGGCGAACCTACAATAATGTCTTCTTGACCTGTGTATCTAGATAAAAGTATGTTATAAATGGCCAATAAAATCATATATGGCGTAGTACCAGTTTCAGTTGCTAGCTTATTTACTTTAAAAGTTAAATCTCTTCCCAAATTAAAAGAACAAACATTACCTTTAAAGCTTTGTATAGTCGGTCTTTGAAAATCGGTTGGAAAATTTAAAACCGGGAGTTCTCCTTTTAAAGTTGTTAACCAATAATTCTTTTGTTCACTAATTAGATTCTTATAGTAAGGTCCATTTTGCCACATCACATAGTCTTTGTACTGCACTCTCAATTTTGGAAGCTCATTTCCTTTATACAATTCTACAAACTCTTTTATTAATATCCCCATTGATAAACCATCAGATATTATATGATGCATATCTACTACAAGGATATGTCTTTCTTCTGCTATCCTTAAAAGCAACACCCTTAATAATGGAGGTTTTGATAAATCAAATGGACTTATAAACTCATGTATTAAATAATCCGCATCTTTTTCATTTACATGAACGTATTCAATATTGAAATCTACATTAGGCTCAATTTTCTGCACTAATTCCCCATCTAAAATTTGAAAAGAAGTTCTTAATATTTCATGTCTCTCAATTAAAGATTGAAATATATTTTCAAACTTATCTTTACAAATATCCCCTTCTACTTTAAGTATTGTGGGCATATTATAAGTTGTATTTGTACCATCTTCGAATTGATCTACTATAAACATTCTCTTTTGTGACGTAGAAGCTAAATAATACTCTTGTTGTTTTACAGGTTCTATGGAAATATAATTACTTTTTTCCATTTCTAATATACATTTTGAAAAATCAACCAAAATAGGAAACTTAAATAGGGATTTAATAGATAATTGCACATTAAATTCTTTATTAACGATAGAAATTAGCCTAGCAGCCTTTAATGAATGACCACCTATCTCAAAAAAATTATCCCGTATTCCTACCCTTTGTATTCCTAATACATCTTTCCAAATCTCAACTAATTTTCTTTCTGTAGAATTTGTCGGCTCTAGATGACTAGATTTCAAATTATTTATAGGTTGAGGTAATTTTTTTCTATCTATTTTTCCGTTTTGTGTTAACGGTATGTTTTGAATGGATATGATTTGTTGAGGTATCATATAATATGGTAACTTGGTTGCTAAATATGCTCTTACCTCTGGAATAGGAATATCTTTTTCGGTAACTACATACGCACATAAATACTTTTCTCCACTTTCATCTTCTCGCTGTATTACTACGGCGGTTTTGATTGTCTCATATTTTAACAAACTTGCTTCTATCTCACCTAGTTCTATTCGATATCCCCTTATTTTCACTTGATGATCAACTCGTCCCAAGTATTCTATGTTACCATCAGGTAGCCATCTCGCTATATCTCCTGTTTTATATAATTTCTCACCATGTTCAAATGGATGATCAATAAATTTATCTGCTGTTAATTCTTTTCGATTGATGTATCCCCTAGCTAACCCTATGCCAGAAATACATATTTCTCCTGGAACACCTATAGGTTGTAGCCTGTGAAATGAATCCAATATATAAATTTTAGTATTTAACAATGGCGAACCTATTGGTACGTTTTGTATTGTAATTTCTTTATCCCTCTCATATTGATAAGATGTACAACAGACTGTAGCCTCTGTAGGTCCGTATAAATTTAATATTTGGAGGTTCCCCCTAAATAGATGATCGTATTTTGCAAGTAATTCTGTTTTAATTGGTTCTACTCCCACGAAAAGTTTATTTAACGATATCTTCTGATTCGCCCTTACAAAATAATCATATATTTCATTTAATAAGGTAGGTGGAATATATGCTAACGTGACCTGTTCCTCAAGAATGACTTGTACAAGTTTTGGTACATCAAACTTCTCACCTTGATAAATAGTCATTCTTGCTCCATATACCAATGGGACAAATATTTCAAATATAGTAACATCAAAAGAAATACTACTTGAGAATAGTACATTATCACTTATCCCTATATCTTGAGAGAAGTCCTCATACATTGCACACAAAAAATTAGTTAAGGAACGATGTTCAATCATTACCCCTTTGGGCTGGCCTGTAGAACCTGATGTATAAATAACATATGCCAAATTTTGAGGTTCCATCGTTATCTGCAAATCTTCTACTTGTTCTTCTTCAAAAGGAATATCCATTAGATTTATTACACTACCTTGAAATGCTACTCCCTTTATAATAGAGTTTTGATATGTTAGTACATGTGAACACCCGCTGTCTGTCAGCATATATTCCACTCTTTGTTTTGGTAACTCGGTATCAATCGGTAAATACGCCCCACCCGCTTTTAAGATACCTAATATGCCTACAATCATCTCAATAGAGCGTTCCATCATCACACCAACAATGGATTCTCTTTTAACTCCCTGGTCTAATAACCTTCTCGCCAACTGATTAGCTTTTATATTTAATTGTTTATATGTAATTTCTTTTCCATTACATACAATCGCTATTTGATTAGGATTCTGTTTTACCTGCTCTTCAAATAATTGAGGAGCTGTTACAGTCTCACAAAGTAATGTTTTATGAACTCTAGTCGTATGATTGAAATCAAATAATATTTGATTCTTTTCTGTTTTAGGCATTACATCTAGATCCATTGCAGATTTATTTGGATCTTTCATTAATATATCTAAAATATTATATAAATGATTAACTATTCTACTAACTAATCCTTCACTATATAAAATAGAATTGTAATCCACTTGAACCTTTAACTGTTCTTCATTTTTCATAAACCTAATAACCATATCAGAGTTTATTTTATCTGTACTCTCATAACAATGAATATCATCTAACATTACTATTGTATTTAATAAGGGAAGATTATTACTCTCTCCATCTAGACTTAATAATTGAGTAAGTTTATTAAAAGGAAAATGACAATGTTCATTTGACTCTAAAATTGTTTCTTTAATTTTATATATTATTTCTTTAAAATTATCTTCTTGATTTATTTGAGTACGTAATAATAAAAAGTTGTTTTGAAAAACCGTCTCTTCTTGACCTTGTTTAAA</td></tr></tbody></table><h2 id="Table-3-The-contents-of-“Bt-all-genes-table”"><a href="#Table-3-The-contents-of-“Bt-all-genes-table”" class="headerlink" title="Table 3. The contents of “Bt_all_genes.table”"></a>Table 3. The contents of “Bt_all_genes.table”</h2><table><thead><tr><th align="center">-</th><th align="center">Cry1Ac16</th><th align="center">Cry1Ca15</th><th align="center">Cry1Da2</th><th align="center">Cry1Ia40</th><th align="center">Cry2Aa10</th><th align="center">Cry2Ab35</th><th align="center">Cry78Aa1</th><th align="center">Cry9Ea9</th><th align="center">HMM_Cry_len_492</th><th align="center">HMM_Cyt_len_531</th><th align="center">HMM_Cyt_len_533</th><th align="center">HMM_Cyt_len_615</th><th align="center">Sip1A2-other</th><th align="center">Vip1Aa2</th><th align="center">Vip3Aa12</th><th align="center">Zwa5B-other</th></tr></thead><tbody><tr><td align="center">1126_1</td><td align="center">100.00</td><td align="center">100.00</td><td align="center">100.00</td><td align="center">100.00</td><td align="center"></td><td align="center">100.00</td><td align="center">32.66</td><td align="center">100.00</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">100.00</td><td align="center">99.07</td></tr><tr><td align="center">AFS094730</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">36.14</td><td align="center"></td><td align="center">1</td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center">92.41</td><td align="center">29.46</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">AFS095482</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">1</td><td align="center"></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">AK47</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">100.00</td><td align="center">100.00</td><td align="center">100.00</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">100.00</td><td align="center">100.00</td></tr></tbody></table><p><strong>Footnote:</strong> The float number represent the identity of blast search, and the integer number represent the number of toxins predicted by HMM and SVM.</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>BtToxin_Digger is free software, licensed under <a href="https://github.com/liaochenlanruo/BtToxin_Digger/blob/master/LICENSE">GPLv3</a>.</p><h2 id="Feedback-Issues"><a href="#Feedback-Issues" class="headerlink" title="Feedback&#x2F;Issues"></a>Feedback&#x2F;Issues</h2><p>Please report any issues about usage of the software to the <a href="https://github.com/liaochenlanruo/BtToxin_Digger/issues">issues page</a>.</p><h2 id="Citation"><a href="#Citation" class="headerlink" title="Citation"></a>Citation</h2><ul><li><p>If you use this software please cite: <strong>Hualin Liu</strong>, Jinshui Zheng, Dexin Bo, Yun Yu, Weixing Ye, Donghai Peng, Ming Sun. (2021) BtToxin_Digger: a comprehensive and high-throughput pipeline for mining toxin protein genes from <em>Bacillus thuringiensis</em>. <em><strong>Bioinformatics</strong></em>, 2021;, btab506, <a href="https://doi.org/10.1093/bioinformatics/btab506">https://doi.org/10.1093/bioinformatics/btab506</a>.</p></li><li><p>If you used the genome assembly function, please also cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. Protocol exchange, 2021. DOI: <a href="https://dx.doi.org/10.21203/rs.2.21224/v5">10.21203&#x2F;rs.2.21224&#x2F;v5+</a>.</p></li></ul><h2 id="FAQs"><a href="#FAQs" class="headerlink" title="FAQs"></a>FAQs</h2><h2 id="Updates"><a href="#Updates" class="headerlink" title="Updates"></a>Updates</h2><ul><li><p>v1.0.2</p><ul><li>Fixed a “Can not find path” error.</li></ul></li><li><p>v1.0.3</p><ul><li>Fixed a bug of “get_all_info_nucl.pl”, which can not get the gene location and strand information of some toxins.</li></ul></li><li><p>v1.0.4</p><ul><li>Updated the database and models to support <a href="https://www.bpprc.org/">the latest clasiffication of Bt toxins</a>.</li></ul></li><li><p>v1.0.5</p><ul><li>The name of strains with no toxin found will be outputed into the file “Strains_without_toxins_found.txt”.</li></ul></li><li><p>v1.0.6</p><ul><li>Update to adapt to PGCGAP v1.0.23, and to delete the intermediate files.</li></ul></li><li><p>v1.0.7</p><ul><li>To delete the intermediate files.</li></ul></li><li><p>v1.0.8</p><ul><li>To delete the intermediate files.</li></ul></li><li><p>v1.0.9</p><ul><li>Update the database to keep it consistent with the BPPRC (to 2021-06-07).<br>More HMM models are added.<br>The filter length of amino acid sequence was reduced from 115 to 75.<br>Solved a problem: BioPerl reported an error when the length of the sequence in the input file was inconsistent.</li></ul></li><li><p>v1.0.10</p><ul><li>Users can use the command “BtToxin_Digger –update-db” to update their local database.<br>The toxin database was updated to 2021.08.02.</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Functional genomics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux和基因组测序技术初识</title>
      <link href="/post/f6c9.html"/>
      <url>/post/f6c9.html</url>
      
        <content type="html"><![CDATA[<p>该文档可以帮助读者入门Linux系统，掌握常用命令和多种软件安装方式。此外还简述了全基因组测序技术，希望读者可以通过此文档初步了解生物信息学。</p><span id="more"></span><h1 id="Linux初识"><a href="#Linux初识" class="headerlink" title="Linux初识"></a>Linux初识</h1><h2 id="目录结构与路径"><a href="#目录结构与路径" class="headerlink" title="目录结构与路径"></a>目录结构与路径</h2><h3 id="根目录"><a href="#根目录" class="headerlink" title="根目录"></a>根目录</h3><p>根目录（root）是系统最顶级目录，以“&#x2F;”表示，其他目录均为根目录的下级目录。</p><h3 id="家目录"><a href="#家目录" class="headerlink" title="家目录"></a>家目录</h3><p>家目录（home）是用户的最顶级目录，以“~&#x2F;”表示，用户所有的目录均为家目录的下级目录。</p><h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><p>绝对路径指的是目录或文件的绝对位置，是从根目录开始的完整路径，如“&#x2F;home&#x2F;bio&#x2F;”。可通过“pwd”命令获取当前目录的绝对路径。</p><h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p>相对路径不需要从根目录开始，只要指定与当前目录的相对位置即可。</p><h3 id="当前目录"><a href="#当前目录" class="headerlink" title="当前目录"></a>当前目录</h3><p>当前所在的路径，以“.&#x2F;“表示。</p><h3 id="上级目录"><a href="#上级目录" class="headerlink" title="上级目录"></a>上级目录</h3><p>也称为父目录，以“..&#x2F;“表示向上一级的目录，以“..&#x2F;..&#x2F;”表示向上两级的目录，以此类推。</p><h2 id="命名法则"><a href="#命名法则" class="headerlink" title="命名法则"></a>命名法则</h2><ul><li>文档与目录均以英文命名，可使用字母、数字和下划线；</li><li>文档与目录的名称不允许存在空格；</li><li>名称区分大小写。</li></ul><h2 id="终端工具"><a href="#终端工具" class="headerlink" title="终端工具"></a>终端工具</h2><p>终端（terminal）是运行Linux命令的工具，类似于Windows的命令行工具。Linux各发行版均自带终端。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Terminal.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Linux自带终端"></p><p>远程操控Linux服务器时，可以使用第三方的终端工具，如PuTTy软件。输入IP地址即可远程登录服务器运行命令。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/putty.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Putty"></p><p>本地计算机与服务器之间的文件传输可以通过FTP软件实现,如FileZilla。输入服务器的IP地址、用户名、密码以及端口即可链接服务器。如果服务器采用的时FTP协议，则端口填写21，若采用的是SFTP协议，则端口设置为22。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/filezilla.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="FileZilla"></p><h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><p><strong>pwd：</strong> 获取当前位置的绝对路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pwd.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="获取当前位置的绝对路径"></p><p><strong>mkdir：</strong> 创建目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mkdir.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="创建tools目录"></p><p><strong>ls：</strong> 查看当前目录包含的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看当前目录包含的内容"></p><p>查看所有的目录和文件（包含隐藏的内容）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -a</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsa.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看当前目录包含的所有内容"></p><p>查看根目录所含内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> /</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsroot.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看根目录所含内容"></p><p>查看家目录所含内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> ~/</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lshome.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看家目录所含内容"></p><p><strong>cd：</strong> 切换路径</p><p>进入“tools”目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> tools</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdtools.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="进入“tools”目录"></p><p><strong>vim：</strong> 创建&#x2F;编辑文档</p><p>以下所有操作均需在英文输入法状态下进行。首先创建一个新文档“example.txt”，并输入内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim example.txt</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimexample.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="创建“example.txt”文档"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/unwritable.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="此时无法输入内容"></p><p>此时无法输入内容，需要按一下字母“i”键切换到输入模式。当左下角出现“–NSERT –” 字样时，可以输入文字。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/viminsert.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="vim插入模式"></p><p>输入相关的内容。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/inputsth.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="vim输入内容"></p><p>输入完毕时需要先按一下“ESC”键退出编辑模式，此时“–NSERT –” 字样消失。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimesc.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="退出vim编辑模式"></p><p>按住组合键“shift + :”切换到vim操作模式，此时左下角出现一个“:”。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimshift.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="shift + :"></p><p>输入“wq!”保存修改并退出。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimquit.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="保存并退出vim"></p><p>查看创建的文件是否在于目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看当前目录下的文件及目录"></p><p><strong>cp：</strong> 复制目录或文件</p><p>将创建的“example.txt”文档复制到上一级目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cp</span> example.txt ../</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cpup.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="向上级目录复制文件"></p><p>查看上一级目录下是否存在刚刚复制的文档。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> ../</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsup.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看父目录下的文件及目录"></p><p><strong>rm：</strong> 删除目录或文件</p><p>删除tools目录下的“example.txt”文档。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">rm</span> example.txt</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rmexample.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="删除tools目录下的“example.txt”文档"></p><p>查看文档是否被删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看是否成功删除文件"></p><p><strong>mv：</strong> 移动&#x2F;重命名</p><p>将上一级目录下的“example.txt”文档移动到当前目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mv</span> ../example.txt ./</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/mv1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="移动文件"></p><p>查看文档是否移动成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> ../</span><br><span class="line">$ <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/ls4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看是否成功移动文件"></p><p>将“example.txt”文档重命名为“examp2.txt”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mv</span> example.txt examp2.txt</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/rename.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="文档重命名"></p><p>查看重命名结果。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsrename.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看重命名结果"></p><p><strong>wget：</strong> 下载</p><p>使用wget工具下载基因组拼接软件“AbySS”到tools目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://www.bcgsc.ca/platform/bioinfo/software/abyss/releases/2.1.5/abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/wgetabyss.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="下载AbySS软件"></p><p><strong>tar：</strong> 压缩&#x2F;解压缩</p><p>tar.gz格式的文件可用“tar zxvf”进行解压，将刚才下载的“abyss-2.1.5.tar.gz”解压缩。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar zxvf abyss-2.1.5.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/tar.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="解压缩AbySS软件"></p><p><strong>top：</strong> 查看系统进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ top</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/top.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="通过top查看系统进程"></p><p>按字母键“q”退出。Ubuntu还带有另一个更加直观的查看系统进程的工具“htop”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ htop</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/htop.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="通过htop查看系统进程"></p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>在软件安装的时候经常需要设置环境变量，所谓的环境变量就是告诉计算机软件的安装位置。存放环境变量的文件在用户的家目录下，为隐藏文件，可通过“ls -a”命令查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -a ~/</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsahome.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看家目录中的所有文档和目录"></p><p>“.bashrc”和“.profile”均为环境变量配置文件，通常我们只需要编辑“.bashrc”。</p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="源码编译安装"><a href="#源码编译安装" class="headerlink" title="源码编译安装"></a>源码编译安装</h3><p>源码安装适合于所有的Linux发行版以及macOS。以刚下载的“AbySS”基因组拼接软件为例演示源码编译安装，一共分三步：配置（.&#x2F;configure）、编译（make）和安装（sudo make install）。首先进入“AbySS”软件目录下，并查看目录中的文件，找到配置文件“configure”，根据“README.md”中的指示对软件进行配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> abyss-2.1.5/</span><br><span class="line">$ <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsabyss.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="进入AbySS目录并查看其所含内容"></p><p>“.&#x2F;configure”表示运行configure进行安装前配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure</span><br></pre></td></tr></table></figure><p>进行编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ make</span><br></pre></td></tr></table></figure><p>进行安装，需要“sudo”命令提供对系统目录的写入权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 以上只演示了一般的安装方法，但是“AbySS”软件依赖其他的一些软件，需要先安装依赖包，最后安装“AbySS”，否则会安装失败。</p><h2 id="通过包管理工具安装"><a href="#通过包管理工具安装" class="headerlink" title="通过包管理工具安装"></a>通过包管理工具安装</h2><p>不同的Linux发行版具有各自的软件包管理器。目前常用的Linux发行版主要是基于“RedHat”和“Debian”而制作的。<br>RedHat 系列的包管理器为“yum”，使用方法为在终端输入“sudo yum install -y 软件名称”。</p><p>Debian 系列的包管理器为“apt-get”，使用方法为在终端输入“sudo apt-get install 软件名称”。</p><p>示例：通过apt-get在Ubuntu中安装AbySS软件，输入命令和密码后，根据提示输入“Y”并按回车键进行自动安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install abyss</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="通过apt-get安装AbySS"></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/aptabyss2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="通过apt-get安装AbySS"></p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>以原核生物基因预测软件“Prodigal”为例演示。首先在Github上找到prodigal的源码，点击“Clone or download”，并按照图示点击链接右侧的图标以复制git地址。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/githubprodigal.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="复制prodigal链接"></p><p>在终端中进入tools目录，并输入克隆命令将项目克隆到本地计算机。命令公式为“git clone link”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/hyattpd/Prodigal.git</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cloneprodigal.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="克隆prodigal"></p><p>克隆完成后进入“Prodigal”目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> Prodigal</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/cdprodigal.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="进入Prodigal目录"></p><p>编译软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ make</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/makeprodigal.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="编译prodigal"></p><p>报错信息提示找不到gcc命令，因此需要首先安装gcc，输入命令后根据提示输入密码，直至安装完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install gcc</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installgcc.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装gcc"></p><p>重新编译prodigal</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ make</span><br><span class="line">$ <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/lsprodigal.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看prodigal编译结果"></p><p>编译完成后得到了可执行程序，但是系统无法找到prodigal的路径，因此需要我们将其所在的路径加入到环境变量中。通过vim打开环境变量配置文件“.bashrc”，进入编辑模式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/.bashrc</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/vimbashrc.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="打开环境变量文件"></p><p>在文档末尾添加配置语句 <strong>“export PATH&#x3D;$PATH:$HOME&#x2F;tools&#x2F;Prodigal”</strong> 。$HOME代表家目录，“$HOME&#x2F;tools&#x2F;Prodigal”代表prodigal可执行程序所在的目录。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalpath.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="在环境变量中添加prodigal路径"></p><p>编辑完成后保存并退出。然后执行“source ~&#x2F;.bashrc”命令刷新，通知系统“.bashrc”文档已经更改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/sourcebashrc.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="刷新环境变量"></p><p>测试配置是否成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ prodigal -h</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/prodigalhelp.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看prodigal帮助信息"></p><p>若要将其他软件加入到环境变量，只需在后面加入其他软件所在路径即可，各软件的路径间以英文“:“分割，不得有空格。下图为将多个软件加入到环境变量的示例。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/multiplepath.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="添加多个软件路径"></p><h2 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h2><p>软链接（Soft Link）相当于Windows系统中的快捷方式，可以将可执行程序的软链接存放至系统默认的环境变量之中，如“&#x2F;usr&#x2F;bin&#x2F;”或“&#x2F;usr&#x2F;local&#x2F;bin”之中。仍旧以刚编译好的prodigal软件为例，创建软链接的公式为 <strong>“sudo ln -s &#x2F;home&#x2F;bio&#x2F;tools&#x2F;Prodigal&#x2F;prodigal &#x2F;usr&#x2F;local&#x2F;bin&#x2F;prodigal”</strong> ，根据提示输入密码完成创建。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">ln</span> -s /home/bio/tools/Prodigal/prodigal /usr/local/bin/prodigal</span><br></pre></td></tr></table></figure><p>通过“whereis”命令查看软链接是否创建成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ whereis prodigal</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/whereisprodigal.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看prodigal安装路径"></p><p><strong>注意：</strong> 创建软链接时要输入绝对路径，否则会报错“Too many levels of symbolic links”。</p><h2 id="通过Anaconda包管理器进行安装"><a href="#通过Anaconda包管理器进行安装" class="headerlink" title="通过Anaconda包管理器进行安装"></a>通过Anaconda包管理器进行安装</h2><p><a href="https://www.anaconda.com/">Anaconda</a>是一款比较易用的跨平台软件包管理器，<a href="http://bioconda.github.io/">Bioconda</a>是conda的一个通道，专门管理生物信息学软件。通过conda安装软件时可以一键安装所有的依赖包，大大节约了时间并降低了安装难度。Bioconda目前有超过600个贡献者和500个成员，大部分生物信息学软件都被包含其中。用户可以到其官网搜索需要的软件是否被囊括其中。</p><p><strong>（1）安装conda</strong></p><p>此处，我们安装Miniconda，进入<a href="https://docs.conda.io/en/latest/miniconda.html">官网</a>，选择适应自身系统及python版本的安装文件。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Minicondapackages.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看Miniconda安装包"></p><p>查看系统python版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python -v</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/pythonv.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="查看python版本"></p><p>可以看出该系统已经安装了python3，因此下载Linux Python 3.7 64-bit (bash installer)。右键单击相应安装包获取链接，使用wget下载至tools目录下。建议用户安装Python 3，因为Python 软件基金会将于2020年元旦停止对Python 2的维护（<a href="https://pythonclock.org/%EF%BC%89%E3%80%82">https://pythonclock.org/）。</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/DownloadMiniconda.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="下载Miniconda"></p><p>开始安装Miniconda</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>根据提示按“Enter”键查看license，并输入“yes” 按“Enter”继续，按“Enter”确认安装位置，miniconda被安装到家目录下的miniconda3目录中。最后输入“yes”，按“Enter”进行初始化。最后，通过“source ~&#x2F;.bashrc”命令刷新。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/initialMiniconda.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="初始化Miniconda"></p><p><strong>（2）设置bioconda channel</strong></p><p>在终端中输入以下三条命令添加channels：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ conda config --add channels defaults</span><br><span class="line">$ conda config --add channels bioconda</span><br><span class="line">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure><p>至此，bioconda配置完毕，可以通过conda安装生物信息学软件。下面通过conda安装mapping软件“bwa”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda install bwa</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/installbwa.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="安装bwa"></p><p>根据提示输入“y”完成安装。</p><h2 id="MacOS相关操作"><a href="#MacOS相关操作" class="headerlink" title="MacOS相关操作"></a>MacOS相关操作</h2><p>MacOS与Linux系统相似，基本命令相同，但是软件安装存在一些差异。</p><h3 id="MacOS安装生物信息学软件"><a href="#MacOS安装生物信息学软件" class="headerlink" title="MacOS安装生物信息学软件"></a>MacOS安装生物信息学软件</h3><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><p>源码安装方式与Linux安装方式一致。</p><h3 id="创建软链接-1"><a href="#创建软链接-1" class="headerlink" title="创建软链接"></a>创建软链接</h3><p>配置方法与Linux一致。</p><h3 id="环境变量-1"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h3><p>MacOS环境变量配置方法与Linux配置方法一致，但配置文件为家目录下的“.bash_profile”，即运行如下命令进行编辑。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/.bash_profile</span><br></pre></td></tr></table></figure><p>编辑完成并保存后需要运行source命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h3 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h3><p>MacOS的软件包管理器为Homebrew，可以在终端中通过以下命令安装Homebrew。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>通过Homebrew安装mapping软件“bwa”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install bwa</span><br></pre></td></tr></table></figure><h3 id="MacOS配置Anaconda"><a href="#MacOS配置Anaconda" class="headerlink" title="MacOS配置Anaconda"></a>MacOS配置Anaconda</h3><p>安装Miniconda</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh</span><br><span class="line">$ sh Miniconda3-latest-MacOSX-x86_64.sh</span><br></pre></td></tr></table></figure><p>添加Bioconda通道</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ conda config --add channels defaults</span><br><span class="line">$ conda config --add channels bioconda</span><br><span class="line">$ conda config --add channels conda-forge</span><br></pre></td></tr></table></figure><p>安装软件bwa</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda install bwa</span><br></pre></td></tr></table></figure><h1 id="现代测序技术"><a href="#现代测序技术" class="headerlink" title="现代测序技术"></a>现代测序技术</h1><h2 id="二代测序-“Next-generation”-sequencing-technology"><a href="#二代测序-“Next-generation”-sequencing-technology" class="headerlink" title="二代测序(“Next-generation” sequencing technology)"></a>二代测序(“Next-generation” sequencing technology)</h2><p>第二代测序技术的核心思想是边合成边测序（Sequencing by Synthesis），即通过捕捉新合成的末端的标记来确定DNA的序列。应用最广的技术平台主要为Illumina公司的产品。其优点为高通量、错误率低、成本低等。</p><ul><li>Illumina测序中的几个名词</li><li>   <strong>Read length：</strong> 测序的DNA片段的碱基长度。</li><li>   <strong>Insert size：</strong> 双端测序时接头（adapter）中间序列的长度。</li><li>   <strong>Junction：</strong> insert序列中间未被测序的部分。</li><li>   <strong>Flowcell：</strong> 是指Illumina测序时，测序反应发生的位置，1个flowcell含有8条lane。</li><li>   <strong>Lane：</strong> 每一个flowcell上都有8条泳道，用于测序反应，可以添加试剂，洗脱等等。</li><li>   <strong>Raw data：</strong> 测序完成后未去接头、引物以及去除低质量序列的数据。</li><li>   <strong>Clean data：</strong> 去除Raw data中的接头序列、linker、低质量reads、长度较短的reads及核糖体RNA和ncRNA产生的reads。</li><li>   <strong>数据量：</strong> read长度乘以reads数目。</li></ul><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/nextseqs.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="二代测序名词示意图"></p><h2 id="三代测序"><a href="#三代测序" class="headerlink" title="三代测序"></a>三代测序</h2><p>三代测序又称为单分子测序，测序过程无需进行PCR扩增，可以产生超长的reads，因此能够跨越高GC含量区域和高度重复区域。目前常用的测序平台包括Pacific Biosciences（PacBio）和Oxford Nanopore。</p><p>PacBio以SMRT Cell为载体进行测序反应，SMRT Cell是一张带有纳米孔的超薄金属片。PacBio采用边合成便测序的方式，测序反应在纳米孔中进行，一个纳米孔中固定一个DNA聚合酶和一条DNA模板。延伸反应的过程中检测dNTP荧光信号以确定碱基顺序。</p><p>Oxford开发的纳米单分子测序技术属于真正的实时测序，它基于电信号来判读碱基。</p><caption>Table 1. Characteristics, strengths and weaknesses of commonly used sequencing platforms (Besser et al. 2018)</caption><table border="1"><tr><th>Platform\Instrument</th><th>Throughput (Gb)</th><th>Read length (bp)</th><th>Strength</th><th>Weakness</th></tr><tr><td><B>Sanger sequencing</B></td></tr><tr><td>ABI 3500/3730</td><td>0.0003</td><td>Up to 1 kb</td><td>Read accuracy and length</td><td>Cost and throughput</td></tr><tr><td><B>Illumina</B></td></tr><tr><td>MiniSeq</td><td>1.7–7.5</td><td>1×75 to ×150</td><td>Low initial investment</td><td>Run and read length</td></tr><tr><td>MiSeq</td><td>0.3–15</td><td>1×36 to 2×300</td><td>Read length, scalability</td><td>Run length</td></tr><tr><td>NextSeq</td><td>10–120</td><td>1×75 to 2×150</td><td>Throughput</td><td>Run and read length</td></tr><tr><td>HiSeq (2500)</td><td>10–1000</td><td>×50 to ×250</td><td>Read accuracy, throughput</td><td>High initial investment, run</td></tr><tr><td>NovaSeq 5000/6000</td><td>2000–6000</td><td>2×50 to ×150</td><td>Read accuracy, throughput</td><td>High initial investment, run</td></tr><tr><td><B>IonTorrent</B></td></tr><tr><td>PGM</td><td>0.08–2</td><td>Up to 400</td><td>Read length, speed</td><td>Throughput, homopolymers</td></tr><tr><td>S5</td><td>0.6–15</td><td>Up to 400</td><td>Read length, speed</td><td>Homopolymers</td></tr><tr><td>Proton</td><td>10–15</td><td>Up to 200</td><td>Speed, throughput</td><td>Homopolymers</td></tr><tr><td><B>Pacific BioSciences</B></td></tr><tr><td>PacBio RSII</td><td>0.5–1</td><td>Up to 60 kb</td><td>ead length, speed (Average 10 kb, N50 20 kb)</td><td>High error rate and initial</td></tr><tr><td>Sequel</td><td>5–10</td><td>Up to 60 kb</td><td>Read length, speed (Average 10 kb, N50 20 kb)</td><td>High error rate</td></tr><tr><td><B>Oxford Nanopore</B></td></tr><tr><td>MInION</td><td>0.1–1</td><td>Up to 100 kb</td><td>Read length, portability</td><td>High error rate, run length</td></tr></table><h2 id="常见序列格式"><a href="#常见序列格式" class="headerlink" title="常见序列格式"></a>常见序列格式</h2><h3 id="Fastq"><a href="#Fastq" class="headerlink" title="Fastq"></a>Fastq</h3><p>我们得到的下机序列一般为fastq格式，每一条read包含4行，第一行为测序仪器信息以及测序信息，第二行为碱基序列，第三行一般无信息，第四行为对应第二行中每个碱基的测序质量信息。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fastq.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fastq文件内容"></p><caption>Table 2. Descriptions of the first line of the fastq file</caption><table border="1"><tr><th>Strings</th><th>Description</th></tr><tr><td>@ST-E00310</td><td>The unique instrument name</td></tr><tr><td>147</td><td>The run id</td></tr><tr><td>HVT25CCXX</td><td>The flowcell id</td></tr><tr><td>3</td><td>Flowcell lane</td></tr><tr><td>1011</td><td>The number within the flowcell lane</td></tr><tr><td>13382</td><td>‘x’-coordinate of the cluster within the title</td></tr><tr><td>1819</td><td>‘y’-coordinate of the cluster within the title</td></tr><tr><td>1</td><td>The number of a pair, 1 or 2 (paired-end or mate-pair reads only)</td></tr><tr><td>N</td><td>Y if the read fails filter (read is bad), N otherwise</td></tr><tr><td>0</td><td>0 when none of the control bits are on, otherwise it is an even number</td></tr><tr><td>TGAAGACA</td><td>Index sequence</td></tr></table><h3 id="Fasta"><a href="#Fasta" class="headerlink" title="Fasta"></a>Fasta</h3><p><a href="http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.fasta.html?highlight=fasta#module-skbio.io.format.fasta">FASTA</a>格式为文本文档，内含核苷酸或氨基酸序列以及其IDs。每条序列包含两部分，第一部分为ID及注释信息，以 <strong>“&gt;”</strong> 开头，at the start, 第二部分为核苷酸序列或氨基酸序列。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/fasta.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="fasta文件内容"></p><h3 id="Genbank"><a href="#Genbank" class="headerlink" title="Genbank"></a>Genbank</h3><p><a href="http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.genbank.html">GenBank</a>格式包含了基因组序列和注释信息。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/Genbank.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Genbank文件内容"></p><h3 id="GFF3"><a href="#GFF3" class="headerlink" title="GFF3"></a>GFF3</h3><p><a href="http://scikit-bio.org/docs/0.5.2/generated/skbio.io.format.gff3.html?highlight=gff#module-skbio.io.format.gff3">GFF3</a> (Generic Feature Format version 3) 格式描述了序列的特征，每一行含有9列数据，列与列之间以制表符分割。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/pgcgap/Linux_WGS/GFF3.PNG" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="GFF3文件内容"></p><h2 id="基因组拼接基本概念"><a href="#基因组拼接基本概念" class="headerlink" title="基因组拼接基本概念"></a>基因组拼接基本概念</h2><h3 id="测序深度"><a href="#测序深度" class="headerlink" title="测序深度"></a>测序深度</h3><p>测序深度（Sequencing depth）指测序得到的总碱基数（read长度x reads数目）与待测基因组大小的比值。假设一个基因组大小为2M，测序深度为10X，那么获得的总数据量为20M。</p><h3 id="测序覆盖度"><a href="#测序覆盖度" class="headerlink" title="测序覆盖度"></a>测序覆盖度</h3><p>指测序获得的序列占整个基因组的比例。由于基因组中的高GC、重复序列等复杂区域的存在，测序获得的序列经常无法覆盖基因组上所有的区域。例如覆盖度是96%，表明还有4%的序列区域未测到。</p><h3 id="Read、Contig、Scaffold"><a href="#Read、Contig、Scaffold" class="headerlink" title="Read、Contig、Scaffold"></a>Read、Contig、Scaffold</h3><p>测序得到的序列被称作reads，在一个read中连续的N个碱基所组成的序列称作k-mer，把k-mer集合拼接起来形成的长DNA序列称为contig。通过pair ends信息将contigs按顺序进行排列得到scaffold。</p><h3 id="N50"><a href="#N50" class="headerlink" title="N50"></a>N50</h3><p>将contigs或scaffolds根据长度从大到小排列并累加，当其累计长度达到全部组装序列总长度的50%时，加上去的最后一个contig或scaffold的大小即为N50的大小，N50是评价基因组拼接质量的重要参数。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>Besser J, Carleton HA, Gerner-Smidt P, Lindsey RL, Trees E. Next-generation sequencing technologies and their application to the study and control of bacterial infections. <em>Clinical Microbiology and Infection</em>, 2018, 24: 335-341</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> WGS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bioconda贡献指南</title>
      <link href="/post/d163.html"/>
      <url>/post/d163.html</url>
      
        <content type="html"><![CDATA[<p>本文介绍了如何为软件添加Bioconda recipe，以便可以通过conda安装自己的软件。</p><span id="more"></span><p><strong>注：本文适用于非 Bioconda 成员</strong></p><p><B>Step0：软件开发与GitHub操作</B></p><br/>(1) 将开发完成的软件上传到GitHub<br/>(2) 在本地软件目录下创建tag<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> tag v1.0.0 -m <span class="string">&#x27;first version&#x27;</span></span><br></pre></td></tr></table></figure><br/>(3) 上传到GitHub<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> push origin v1.0.0</span><br></pre></td></tr></table></figure><p><strong>注</strong>：如果需要删除有bug的tag：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> tag -d tagname</span><br><span class="line"></span><br><span class="line"><span class="variable">$git</span> push origin :refs/tags/tagname</span><br><span class="line"></span><br></pre></td></tr></table></figure><br/>(4) 存档tag(非必需)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> archive -v --format=tar v1.0.0 &gt; v1.0.0.tar.gz</span><br></pre></td></tr></table></figure><br/>(5) 计算压缩包的"sha256"以供bioconda校验<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sha256sum</span> v1.0.0.tar.gz</span><br></pre></td></tr></table></figure><br/><B>Step1：fork bioconda-recipes</B><br/><p>(1)进入 bio-conda <a href="https://github.com/bioconda/bioconda-recipes">GitHub页</a>；</p><br/>(2)点击右上角的 “Fork”；<br/>(3)操作完成后在用户自己的 GitHub 内得到了一份 “<USERNAME>/bioconda-recipes”，我的用户名为 “liaochenlanruo”，因此我得到的是 “liaochenlanruo/bioconda-recipes”。<br/><B>Step2：将项目克隆到本地</B><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> <span class="built_in">clone</span> https://github.com/liaochenlanruo/bioconda-recipes.git</span><br></pre></td></tr></table></figure><br/><B>Step3: Then add the main bioconda-recipes repo as an upstream remote to more easily update your branch with the upstream master branch:</B><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cd</span> bioconda-recipes</span><br><span class="line"><span class="variable">$git</span> remote add upstream https://github.com/bioconda/bioconda-recipes.git</span><br></pre></td></tr></table></figure><br/><B>Step4：更新 repo</B><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> checkout master</span><br><span class="line"><span class="variable">$git</span> pull upstream master</span><br><span class="line"><span class="variable">$git</span> push origin master</span><br></pre></td></tr></table></figure><br/><B>Step5：写自己的 recipe</B><br/>例如，创建并切换到一个名字为 “pgcgap” 的 新分支<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> checkout -b pgcgap</span><br></pre></td></tr></table></figure><br/><p>在”bioconda-recipes&#x2F;recipes&#x2F;“目录下新建”pgcgap”目录，并将撰写好的<a href="https://docs.conda.io/projects/conda-build/en/latest/resources/build-scripts.html">build.sh</a>和<a href="https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#architecture-independent-packages">meta.yaml</a>存入其中。</p><br/>注：Step6和Step7可以跳过<br/><B>Step6：本地测试 recipe</B> （可选，即可以直接在线测试）<br/>在"bioconda-recipes/"目录下依次运行如下命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$./bootstrap.py /tmp/miniconda</span><br><span class="line"><span class="variable">$source</span> ~/.config/bioconda/activate</span><br><span class="line"></span><br><span class="line"><span class="comment"># optional linting</span></span><br><span class="line"><span class="variable">$bioconda</span>-utils lint recipes config.yml --git-range master</span><br><span class="line"></span><br><span class="line"><span class="comment"># build and test</span></span><br><span class="line"><span class="variable">$bioconda</span>-utils build recipes config.yml --docker --mulled-test --git-range master</span><br></pre></td></tr></table></figure><br/><B>Step7：更新 recipes</B> (可选）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$bioconda</span>-utils update-pinning recipes/ config.yml --packages pgcgap --create-pr</span><br></pre></td></tr></table></figure><br/><B>Step8：推送修改，等待测试通过，提交 pull 请求</B><br/>(1) 将本地更改同步到自己的pgcgap分枝<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> push -u origin pgcgap</span><br></pre></td></tr></table></figure><br/><p>(2) 在“liaochenlanruo&#x2F;bioconda-recipes”的“pgcgap”分支下点击“New pull request”。base repository选择“liaochenlanruo&#x2F;bioconda-recipes”，base选择“pgcgap”；head repository选择“bioconda&#x2F;bioconda-recipes”，compare 选择”master”。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/new_pull_request_LI.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="new_pull_request"></p><center>Create a new pull request</center><br/><p>比较完成后提交，标题自定义，内容根据提示酌情填写。若存在问题可以 @其<a href="https://bioconda.github.io/#core">核心团队成员</a>中的任何一位，如输入“@epruesse”，将会 @ Elmar Pruesse。若想成为bioconda成员，以及要merge自己的分支，同样需要@核心成员中的任何一位。</p><p>实例：</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/create_pull_request_info.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="create_pull_request_info"></p><center>Request 信息填写</center><br/>上述步骤完成后，可以在GitHub项目下的“Pull requests”选项卡下查看处理状态。<p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/view_pull_request.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="view_pull_request"></p><center>查看pull request</center><br/>根据提示修改自己的recipe，再次pull，循环往复，直至修复所有错误（下图表示需要修改）。<p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/pull_error.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="pull_error"></p><center>pull出错了</center><br/>点击“details”可以查看进程和详细信息。下图所示，正在测试recipe。<p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconder_checking2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="bioconder_checking2"></p><center>正在测试recipe</center><br/>如下图所示，表明测试成功，等待管理员合并自己的分支。<p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/test_success.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="test_success"></p><center>所有测试均成功</center><br/><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/bioconda_check.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="bioconda_check"></p><center>非Bioconda成员测试成功后的“Pull requests”界面</center><br/><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/squash_and_merge.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="squash_and_merge"></p><center>Bioconda成员测试成功后的“Pull requests”界面</center><br/>如上两图分别为非bioconda成员以及bioconda成员测试通过的界面，非成员需要新建一条评论并 @一位核心成员，请求其merge自己的pull requests，bioconda成员则可以点击“Squash and merge”来合并自己的pull requests。<p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/merge_successfully.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="merge_successfully"></p><center>Bioconda成员“Pull requests”合并成功</center><br/>## 附：1. 加入bioconda<p>1）在第一个recipe推送成功后可以在评论中 @ 一位核心成员，要求加入组织<br>2）收到邀请链接，点击加入</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/invited2bioconda.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="invited2bioconda"></p><center>被邀请加入Bioconda</center><br/>## 常见错误1. If linting fails：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git pull upstream master</span><br><span class="line">git checkout pgcgap</span><br><span class="line">git merge master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Bioconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PGCGAP中文说明</title>
      <link href="/post/848f.html"/>
      <url>/post/848f.html</url>
      
        <content type="html"><![CDATA[<p><strong>为了方便广大中文用户学习PGCGAP的使用，特意书写该中文文档，但中文文档更新较慢，强烈建议大家阅读英文文档！</strong></p><span id="more"></span><p><a href="https://liaochenlanruo.github.io/pgcgap">English Readme</a> | <a href="https://liaochenlanruo.github.io/2019/04/28/PGCGAP%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/">中文说明</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>PGCGAP是用于原核生物基因组学和比较基因组学分析管道，目前该管道包含12个模块，可以接受Illumina双端reads、Oxford reads或PacBio reads作为输入，可以完成基因组组装、基因预测和注释，并可以进行比较基因组学分析，包括构建单拷贝核心蛋白进化树以及单拷贝核心基因SNPs进化树，泛基因组分析与进化树构建，全基因组平均核苷酸一致性（ANI）计算，同源蛋白家族聚类及进化树构建，COG注释，SNPs和INDELs calling，抗生素抗性基因&#x2F;毒力因子预测，Multi-FASTA进化树构建，组装后基因组短序列过滤与统计信息呈现（genome size，GC content……）。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>PGCGAP可以安装于Windows子系统Linux（WSL）、Linux x64系统以及macOS中。</p><p><strong>Step1：通过<a href="https://bioconda.github.io/user/install.html#install-conda">Bioconda</a>安装PGCGAP</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$conda</span> create -n pgcgap python=3.7</span><br><span class="line"></span><br><span class="line"><span class="variable">$conda</span> activate pgcgap</span><br><span class="line"></span><br><span class="line"><span class="variable">$conda</span> install pgcgap</span><br><span class="line"></span><br><span class="line"><span class="variable">$conda</span> deactivate</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>声明：用conda安装时一直在“Solving environment”怎么办？</strong>随着加入conda的软件越来越多，使其索引库变的庞大，因此安装新的软件时需要逐一验证软件间的兼容性，会耗费大量时间。严重的时候会无法完成软件的安装，这个时候坐以待毙是不行的。下面介绍两种办法解决此问题：<br/></p><ul><li><p>Method 1: 使用mamba (非常快) 替代conda。前提是已经用conda创建好了pgcgap的虚拟环境：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$conda</span> activate pgcgap</span><br><span class="line"><span class="variable">$conda</span> install mamba -c conda-forge</span><br><span class="line"><span class="variable">$mamba</span> install pgcgap</span><br></pre></td></tr></table></figure></li><li><p>Method 2: 使用本人提供的pgcgap<a href="https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.ym">配置文件</a>来创建环境并安装PGCGAP：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download pgcgap_latest_env.yml</span></span><br><span class="line"><span class="variable">$wget</span> https://github.com/liaochenlanruo/pgcgap/blob/master/conda/pgcgap_latest_env.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a conda environment named as pgcgap and install the latest version of PGCGAP</span></span><br><span class="line"><span class="variable">$conda</span> <span class="built_in">env</span> create -f pgcgap_latest_env.yml</span><br></pre></td></tr></table></figure><br/></li></ul><p><strong>Step2：配置COG数据库</strong> (初次安装PGCGAP后需要执行此步骤)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$conda</span> activate pgcgap</span><br><span class="line"></span><br><span class="line"><span class="variable">$pgcgap</span> --setup-COGdb</span><br><span class="line"></span><br><span class="line"><span class="variable">$conda</span> deactivate</span><br></pre></td></tr></table></figure><p><strong>Step3: 升级PGCGAP(升级版本时运行)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$conda</span> activate pgcgap</span><br><span class="line"><span class="variable">$conda</span> update pgcgap</span><br><span class="line"><span class="comment"># v1.0.28以后可通过如下命令升级</span></span><br><span class="line"><span class="variable">$pgcgap</span> --check-update</span><br></pre></td></tr></table></figure><p><strong>此外，用户也可以通过容器(docker)安装PGCGAP</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$docker</span> pull quay.io/biocontainers/pgcgap:&lt;tag&gt;</span><br></pre></td></tr></table></figure><p><strong>注：</strong> 前提是用户电脑中安装了<a href="https://www.docker.com/">Docker</a>，Docker可以跨平台使用。可用的tag可<a href="https://quay.io/repository/biocontainers/pgcgap?tab=tags">在此</a>查询，建议安装最新版。</p><h2 id="依赖包"><a href="#依赖包" class="headerlink" title="依赖包"></a>依赖包</h2><ul><li><a href="https://github.com/tseemann/abricate">Abricate</a></li><li><a href="http://www.bcgsc.ca/platform/bioinfo/software/abyss/">ABySS</a></li><li><a href="http://canu.readthedocs.org/">Canu</a></li><li><a href="http://weizhongli-lab.org/cd-hit/">CD-HIT</a></li><li><a href="https://www.gnu.org/software/coreutils/">Coreutils</a></li><li><a href="https://github.com/bbuchfink/diamond">Diamond</a></li><li><a href="https://github.com/ParBLiSS/FastANI">FastANI</a></li><li><a href="http://www.atgc-montpellier.fr/fastme/binaries.php">Fastme</a></li><li><a href="https://github.com/OpenGene/fastp">Fastp</a></li><li><a href="http://www.microbesonline.org/fasttree">FastTree</a></li><li><a href="https://github.com/sanger-pathogens/gubbins">Gubbins</a> &gt;&#x3D;2.3.4</li><li><a href="https://github.com/samtools/htslib">Htslib</a></li><li><a href="http://www.iqtree.org/">IQ-TREE</a></li><li><a href="https://mafft.cbrc.jp/alignment/software/">Mafft</a></li><li><a href="https://github.com/marbl/Mash">Mash</a></li><li><a href="https://github.com/soedinglab/mmseqs2">Mmseqs2</a></li><li><a href="https://www.ebi.ac.uk/Tools/msa/muscle/">Muscle</a></li><li><a href="https://blast.ncbi.nlm.nih.gov/Blast.cgi?CMD=Web&PAGE_TYPE=BlastDocs&DOC_TYPE=Download">NCBI-blast+</a></li><li><a href="https://github.com/davidemms/OrthoFinder">OrthoFinder</a></li><li><a href="https://openjdk.java.net/">OpenJDK8</a></li><li><a href="http://www.bork.embl.de/pal2nal/">PAL2NAL v14</a></li><li><a href="http://trimal.cgenomics.org/">trimAL</a></li><li><a href="http://www.perl.org/get.html">Perl</a> &amp; the modules<ul><li><a href="http://metacpan.org/pod/BioPerl">perl-bioperl</a></li><li><a href="http://metacpan.org/pod/Data::Dumper">perl-data-dumper</a></li><li><a href="http://metacpan.org/pod/File::Tee">perl-file-tee</a></li><li><a href="http://metacpan.org/pod/Getopt::Long">perl-getopt-long</a></li><li><a href="http://search.cpan.org/~marekr/Pod-Usage-1.69/">perl-pod-usage</a></li><li><a href="https://metacpan.org/pod/release/DLUX/Parallel-ForkManager-0.7.5/ForkManager.pm">perl-parallel-forkmanager</a></li></ul></li><li><a href="https://github.com/tseemann/prokka">Prokka</a></li><li><a href="https://www.python.org/">Python</a> &amp; the modules<ul><li><a href="https://biopython.org/">biopython</a></li><li><a href="https://matplotlib.org/">matplotlib</a></li><li><a href="http://www.numpy.org/">numpy</a></li><li><a href="http://pandas.pydata.org/">pandas</a></li><li><a href="http://seaborn.pydata.org/">seaborn</a></li></ul></li><li><a href="https://www.r-project.org/">R</a> &amp; the packages<ul><li><a href="https://cran.r-project.org/web/packages/corrplot/index.html">corrplot</a></li><li><a href="https://cran.r-project.org/web/packages/ggplot2/">ggplot2</a></li><li><a href="https://cran.r-project.org/web/packages/gplots/">gplots</a></li><li><a href="https://cran.r-project.org/web/packages/pheatmap/index.html">pheatmap</a></li><li><a href="https://cran.r-project.org/web/packages/plotrix/">plotrix</a></li></ul></li><li><a href="https://sanger-pathogens.github.io/Roary/">Roary</a></li><li><a href="https://github.com/najoshi/sickle">Sickle-trim</a></li><li><a href="https://github.com/tseemann/snippy">Snippy</a></li><li><a href="https://github.com/sanger-pathogens/snp-sites">Snp-sites</a></li><li><a href="https://github.com/rrwick/Unicycler">unicycler</a></li><li><a href="https://www.gnu.org/software/wget/">wget</a></li></ul><h2 id="PGCGAP用法"><a href="#PGCGAP用法" class="headerlink" title="PGCGAP用法"></a>PGCGAP用法</h2><ul><li><p><strong>显示帮助信息：</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure></li><li><p><strong>管道用法：</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> [modules] [options]</span><br></pre></td></tr></table></figure></li><li><p><strong>展示各模块的参数：</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR|STREE|ACC]</span><br></pre></td></tr></table></figure></li><li><p>__展示各模块的运行示例：__（这货是我用的最多的）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> Examples</span><br></pre></td></tr></table></figure></li><li><p><strong>配置COG数据库：</strong> (初次安装PGCGAP后需要配置COG数据库)</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --setup-COGdb</span><br></pre></td></tr></table></figure></li><li><p><strong>功能模块：</strong></p><ul><li><p><strong>[--All]</strong>                          运行Assemble, Annotate, CoreTree, Pan, OrthoF, ANI, MASH 和 pCOG模块</p></li><li><p><strong>[--Assemble]</strong>                     基因组组装</p></li><li><p><strong>[--Annotate]</strong>                     基因预测及注释</p></li><li><p><strong>[--CoreTree]</strong>                     构建单拷贝核心蛋白进化树与核心SNPs进化树</p></li><li><p><strong>[--Pan]</strong>                          泛基因组分析并构建单拷贝核心蛋白进化树</p></li><li><p><strong>[--OrthoF]</strong>                       同源蛋白家族聚类及单拷贝直系同源蛋白进化树构建</p></li><li><p><strong>[--ANI]</strong>                          计算平均核苷酸一致性 ( ANI )</p></li><li><p><strong>[--MASH]</strong>                         通过MinHash估算基因组&#x2F;宏基因组相似性</p></li><li><p><strong>[--pCOG]</strong>                         COG注释</p></li><li><p><strong>[--VAR]</strong>                          变异检测并构建核心基因组进化树</p></li><li><p><strong>[--AntiRes]</strong>                      从基因组(contigs&#x2F;scaffolds)中预测抗生素抗性基因或毒力基因</p></li><li><p><strong>[--STREE]</strong>                        基于Multi-FASTA序列(所有序列在一个文件中)构建系统发育树</p></li><li><p><strong>[--ACC]</strong>                          一些实用的附加程序(目前只开发了”Assess”用于对基因组中的短序列进行过滤，并评估过滤前后的基因组状态)</p></li></ul></li><li><p><strong>全局参数（请参照英文版，参数有所改变，中文版暂时没有时间修改）：</strong></p><ul><li><p><strong>[--strain_num (INT)]</strong>             [Required by “--All”, “--CoreTree”, “--Pan”, “--VAR” and “--COG”] 用于分析的菌株数目，不包含参考基因组</p></li><li><p><strong>[--ReadsPath (PATH)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] 所有菌株测序reads所在的目录路径  Default .&#x2F;Reads&#x2F;Illumina)</p></li><li><p><strong>[--scafPath (PATH)]</strong>              [Required by “--All”, “--Assess”, “--Annotate” and “--MASH”] contigs&#x2F;scaffolds的存放路径 (Default “Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina”)</p></li><li><p><strong>[--AAsPath (PATH)]</strong>               [Required by “--All”, “--CoreTree”, “--OrthoF” and “--pCOG”] 所有菌株的氨基酸序列文件的存放路径 (Default “.&#x2F;Results&#x2F;Annotations&#x2F;AAs”)</p></li><li><p><strong>[--reads1 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 1的后缀名 (例如 reads 1 的名字为 “YBT-1520_L1_I050.R1.clean.fastq.gz”，”YBT-1520” 是菌株名，则后缀名为 “.R1.clean.fastq.gz”)</p></li><li><p><strong>[--reads2 (STRING)]</strong>              [Required by “--All”, “--Assemble” and “--VAR”] reads 2的后缀名</p></li><li><p><strong>[--Scaf_suffix (STRING)]</strong>         [Required by “--All”, “--Assess”, “--Annotate” “MASH” and “--ANI”] contigs&#x2F;scaffolds的后缀名 (Default -8.fa)</p></li><li><p><strong>[--filter_length (INT)]</strong>          [Required by “--All”, “--Assemble” and “--Assess”]&gt; Sequences shorter than the ‘filter_length’ will be deleted from the assembled genomes. ( Default 200 )</p></li><li><p><strong>[--codon (INT)]</strong>                  [Required by “--All”, “--Annotate”, “--CoreTree” and “--Pan”] 翻译密码子表 (Default 11)</p><ul><li>1                             Universal code</li><li>2                             Vertebrate mitochondrial code</li><li>3                             Yeast mitochondrial code</li><li>4                             Mold, Protozoan, and Coelenterate Mitochondrial code and Mycoplasma&#x2F;Spiroplasma code</li><li>5                             Invertebrate mitochondrial</li><li>6                             Ciliate, Dasycladacean and Hexamita nuclear code</li><li>9                             Echinoderm and Flatworm mitochondrial code</li><li>10                            Euplotid nuclear code</li><li>11                            Bacterial, archaeal and plant plastid code ( Default )</li><li>12                            Alternative yeast nuclear code</li><li>13                            Ascidian mitochondrial code</li><li>14                            Alternative flatworm mitochondrial code</li><li>15                            Blepharisma nuclear code</li><li>16                            Chlorophycean mitochondrial code</li><li>21                            Trematode mitochondrial code</li><li>22                            Scenedesmus obliquus mitochondrial code</li><li>23                            Thraustochytrium mitochondrial code</li></ul></li><li><p><strong>[--suffix_len (INT)]</strong>             [Required by “--All”, “--Assemble” and “--VAR”] <strong>(强烈建议设置此项)</strong> reads后缀的长度。例如 “YBT-1520_L1_I050.R1.clean.fastq.gz” 的 --suffix_len 为 26 (“YBT-1520” 为菌株名) (Default 0)</p></li><li><p><strong>[--logs (STRING)]</strong>                Log文件的名字 (Default Logs.txt)</p></li><li><p><strong>[--threads (INT)]</strong>                运行程序时调用的线程数目 (Default 4)</p></li></ul></li></ul><br/><ul><li><p><strong>各模块的局部参数：</strong></p><ul><li><p><strong>--Assemble</strong></p><ul><li><p><strong>[--platform (STRING)]</strong>        [Required] 测序平台，可以选择 “illumina”, “pacbio” 和 “oxford” (Default illumina)</p></li><li><p><strong>[--assembler (STRING)]</strong>       [Required] 用于illumina数据组装的软件，可选”abyss”, “spades” 或”auto” ( Default abyss )</p></li><li><p><strong>[--kmmer (INT)]</strong>              [Required] Illumina数据组装时采用的 k-mer 大小 (Default 81)</p></li><li><p><strong>[--genomeSize (FLOAT)]</strong>       [Required] 预估的基因组大小，如 3.7m、2.8g，组装 PacBio data 和 Oxford data 时需要设置此项 (Default Unset)</p></li><li><p><strong>[--short1 (STRING)]</strong>           [Required] FASTQ file of first short reads in each pair. Needed by hybrid assembly ( Default Unset )</p></li><li><p><strong>[--short2 (STRING)]</strong>           [Required] FASTQ file of second short reads in each pair. Needed by hybrid assembly ( Default Unset )</p></li><li><p><strong>[--long (STRING)]</strong>             [Required] FASTQ or FASTA file of long reads. Needed by hybrid assembly ( Default Unset )</p></li><li><p><strong>[--hout (STRING)]</strong>             [Required] Output directory for hybrid assembly ( Default ..&#x2F;..&#x2F;Results&#x2F;Assembles&#x2F;Hybrid )</p></li></ul></li><li><p><strong>--Annotate</strong></p><ul><li><p><strong>[--genus (STRING)]</strong>           菌株的属名 ( Default “NA” )</p></li><li><p><strong>[--species (STRING)]</strong>         菌株的种名 ( Default “NA”)</p></li></ul></li></ul><br/><ul><li><p><strong>--CoreTree</strong></p><ul><li><p><strong>[--CDsPath (PATH)]</strong>           [Required] 包含所有菌株核苷酸序列文件的路径，如果设置为”NO”，将不会构建核心SNPs进化树 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;CDs” )</p></li><li><p><strong>[-c (FLOAT)]</strong>                 序列一致性 (identity) 阈值 ( Default 0.5)</p></li><li><p><strong>[-n (INT)]</strong>                   Word_length,  -n 2 for thresholds 0.4-0.5, -n 3 for thresholds 0.5-0.6, -n 4 for thresholds 0.6-0.7, -n 5 for thresholds 0.7-1.0 ( Default 2 )</p></li><li><p><strong>[-G (INT)]</strong>                   Use global (set to 1) or local (set to 0) sequence identity, ( Default 0 )</p></li><li><p><strong>[-t (INT)]</strong>                   Tolerance for redundance ( Default 0 )</p></li><li><p><strong>[-aL (FLOAT)]</strong>                Alignment coverage for the longer sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.5 )</p></li><li><p><strong>[-aS (FLOAT)]</strong>                Alignment coverage for the shorter sequence. If set to 0.9, the alignment must covers 90% of the sequence ( Default 0.7 )</p></li><li><p><strong>[-g (INT)]</strong>                   If set to 0, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode, Default 1)</p></li><li><p><strong>[-d (INT)]</strong>                   length of description in .clstr file. if set to 0, it takes the fasta defline and stops at first space ( Default 0 )</p></li></ul></li></ul><br/><ul><li><p><strong>--Pan</strong></p><ul><li><p><strong>[--GffPath (PATH)]</strong>           [Required] 存放所有菌株GFF3格式文件的路径 ( Default “.&#x2F;Results&#x2F;Annotations&#x2F;GFF” )</p></li><li><p><strong>[--identi (INT)]</strong>                  Minimum percentage identity for blastp ( Default 95 )</p></li></ul></li></ul><br/>- __\-\-OrthoF__<pre><code>- __[\-\-Sprogram (STRING)]__        序列对比程序，Options: blast, mmseqs, blast_gz, diamond ( Default blast)</code></pre><br/><ul><li><p><strong>--ANI</strong></p><ul><li><p><strong>[--queryL (FILE)]</strong>            [Required] The file containing paths to query genomes, one per line ( Default scaf.list )</p></li><li><p><strong>[--refL (FILE)]</strong>              [Required] The file containing paths to reference genomes, one per line. ( Default scaf.list )</p></li><li><p><strong>[--ANIO (FILE)]</strong>              The name of output file ( Default “Results&#x2F;ANI&#x2F;ANIs” )</p></li></ul></li></ul><br/><ul><li><p><strong>--VAR</strong></p><ul><li><p><strong>[--refgbk (FILE)]</strong>            [Required] The full path and name of reference genome in GENBANK format ( recommended ), fasta format is also OK. For example: “&#x2F;mnt&#x2F;g&#x2F;test&#x2F;ref.gbk”</p></li><li><p><strong>[--qualtype (STRING)]</strong>        [Required] Type of quality values (solexa (CASAVA &lt; 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA &gt;&#x3D; 1.8)). ( Default sanger )</p></li><li><p><strong>[--qual (INT)]</strong>               Threshold for trimming based on average quality in a window. ( Default 20 )</p></li><li><p><strong>[--length (INT)]</strong>             Threshold to keep a read based on length after trimming. ( Default 20 )</p></li><li><p><strong>[--mincov (INT)]</strong>             The minimum number of reads covering a site to be considered ( Default 10 )</p></li><li><p><strong>[--minfrac (FLOAT)]</strong>          The minimum proportion of those reads which must differ from the reference ( Default 0.9 )</p></li><li><p><strong>[--minqual (INT)]</strong>            The minimum VCF variant call “quality” ( Default 100 )</p></li><li><p><strong>[--ram (INT)]</strong>                Try and keep RAM under this many GB ( Default 8 )</p></li><li><p><strong>[--tree_builder (STRING)]</strong>    Application to use for tree building [raxml|fasttree|hybrid] ( Default fasttree)</p></li><li><p><strong>[--iterations (INT)]</strong>         Maximum No. of iterations for gubbins ( Default 5 )</p></li></ul></li></ul></li></ul><br/><ul><li><p><strong>--AntiRes</strong></p><ul><li><p><strong>[--db (STRING)]</strong>              [Required] 用于分析的数据库, options: <a href="https://www.ncbi.nlm.nih.gov/pubmed/24145532">argannot</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/27789705">card</a>, <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/">ecoh</a>, ecoli_vf, <a href="https://www.biorxiv.org/content/10.1101/550707v1">ncbi</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/24777092">plasmidfinder</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/22782487">resfinder</a> and <a href="https://www.ncbi.nlm.nih.gov/pubmed/26578559">vfdb</a>. ( Default ncbi )</p></li><li><p><strong>[--identity (INT)]</strong>           [Required] Minimum %identity to keep the result, should be a number between 1 to 100. ( Default 75 )</p></li><li><p><strong>[--coverage (INT)]</strong>           [Required] Minimum %coverage to keep the result, should be a number between 0 to 100. ( Default 50 )</p></li></ul></li><li><p><strong>--STREE</strong></p><ul><li><p><strong>[--seqfile (STRING)]</strong>        [Required] Path of the sequence file for analysis.</p></li><li><p><strong>[--seqtype (INT)]</strong>           [Required] Type Of Sequence (p, d, c for Protein, DNA, Codons, respectively). ( Default p )</p></li><li><p><strong>[--bsnum (INT)]</strong>             [Required] Times for bootstrap. ( Default 1000 )</p></li></ul></li><li><p><strong>--ACC</strong></p><ul><li><strong>[--Assess (STRING)]</strong>         Filter short sequences in the genome and assess the status of the genome(详细参数通过”pgcgap ACC”查看)</li></ul></li><li><p><strong>依赖软件安装目录</strong></p><p>Not needed if they were in the environment variables path. Users can check with the “–check-external-programs” option for the essential programs.</p><br/></li><li><p><strong>[--abricate-bin (PATH)]</strong>          Path to abyss binary file. Default tries if abyss is in PATH;</p></li><li><p><strong>[--abyss-bin (PATH)]</strong>             Path to abyss binary file. Default tries if abyss is in PATH;</p></li><li><p><strong>[--canu-bin (PATH)]</strong>              Path to canu binary file. Default tries if canu is in PATH;</p></li><li><p><strong>[--cd-hit-bin (PATH)]</strong>            Path to cd-hit binary file. Default tries if cd-hit is in PATH;</p></li><li><p><strong>[--fastANI-bin (PATH)]</strong>           Path to the fastANI binary file. Default tries if fastANI is in PATH;</p></li><li><p><strong>[--Gblocks-bin (PATH)]</strong>           Path to the Gblocks binary file. Default tries if Gblocks is in PATH;</p></li><li><p><strong>[--gubbins-bin (PATH)]</strong>           Path to the run_gubbins.py binary file. Default tries if run_gubbins.py is in PATH;</p></li><li><p><strong>[--iqtree-bin (PATH)]</strong>            Path to the iqtree binary file. Default tries if iqtree is in PATH;</p></li><li><p><strong>[--mafft-bin (PATH)]</strong>             Path to mafft binary file. Default tries if mafft is in PATH;</p></li><li><p><strong>[--mash-bin (PATH)]</strong>              Path to the mash binary file. Default tries if mash is in PATH.</p></li><li><p><strong>[--modeltest-ng-bin (PATH)]</strong>      Path to the modeltest-ng binary file. Default tries if modeltest-ng is in PATH.</p></li><li><p><strong>[--muscle-bin (PATH)]</strong>            Path to the muscle binary file. Default tries if muscle is in PATH.</p></li><li><p><strong>[--orthofinder-bin (PATH)]</strong>       Path to the orthofinder binary file. Default tries if orthofinder is in PATH;</p></li><li><p><strong>[--pal2nal-bin (PATH)]</strong>           Path to the pal2nal.pl binary file. Default tries if pal2nal.pl is in PATH;</p></li><li><p><strong>[--prodigal-bin (PATH)]</strong>          Path to prodigal binary file. Default tries if prodigal is in PATH;</p></li><li><p><strong>[--prokka-bin (PATH)]</strong>            Path to prokka binary file. Default tries if prokka is in PATH;</p></li><li><p><strong>[--raxml-ng-bin (PATH)]</strong>          Path to the raxml-ng binary file. Default tries if raxml-ng is in PATH;</p></li><li><p><strong>[--roary-bin (PATH)]</strong>             Path to the roary binary file. Default tries if roary is in PATH;</p></li><li><p><strong>[--sickle-bin (PATH)]</strong>            Path to the sickle-trim binary file. Default tries if sickle is in PATH.</p></li><li><p><strong>[--snippy-bin (PATH)]</strong>            Path to the snippy binary file. Default tries if snippy is in PATH;</p></li><li><p><strong>[--snp-sites-bin (PATH)]</strong>         Path to the snp-sites binary file. Default tries if snp-sites is in PATH;</p></li><li><p><strong>[--unicycler-bin (PATH)]</strong>         Path to the unicycler binary file. Default tries if unicycler is in PATH;</p></li></ul><br/><ul><li><p><strong>配置COG数据库</strong></p><ul><li><strong>[--setup-COGdb]</strong>                  首次安装PGCGAP后需要执行此步</li></ul></li></ul><br/><ul><li><p>检查依赖软件包是否安装 (<strong>强烈建议在安装完PGCGAP之后运行此步</strong>):</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --check-external-programs</span><br></pre></td></tr></table></figure></li></ul><br/><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul><li><p><strong>Example 1:</strong> 执行所有模块，以 <em>Escherichia coli</em> 的6个 Illumina 双端 reads 为数据集。</p><p>__注__：为了提高灵活性，”VAR” 模块需要额外添加。<br/></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --All --platform illumina --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --kmmer 81 --genus Escherichia --species “Escherichia coli” --codon 11 --strain_num 6 --threads 4 --VAR --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --qualtype sanger</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 2:</strong> 基因组组装。</p><ul><li><p><strong>Illumina双端reads组装</strong></p><p>该数据集中，reads的命名格式为 “strain_1.fastq.gz” 和 “strain_2.fastq.gz”。 后缀名为 “_1.fastq.gz”，其长度为11，因此 “–suffix_len” 设置为11。</p></li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --Assemble --platform illumina --assembler abyss --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br><span class="line"> </span><br><span class="line"><span class="variable">$pgcgap</span> --Assemble --platform illumina --assembler spades --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --threads 4 --suffix_len 11</span><br><span class="line"> </span><br><span class="line"><span class="variable">$pgcgap</span> --Assemble --platform illumina --assembler auto --filter_length 200 --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --kmmer 81 --threads 4 --suffix_len 11</span><br></pre></td></tr></table></figure><ul><li><p><strong>Oxford reads组装</strong></p><p>Oxford nanopore 测序仅产生一个reads文件，因此只需要设置 “–reads1” 参数，其值为 “.fasta”。 “–genomeSize” 是预估的基因组大小，用户可以到NCBI数据库中查看同物种基因组的大小作为参考，此处设置为 “4.8m”。Reads 文件的后缀名为 “.fasta”，其长度为6，因此将 “–suffix_len” 设置为6。</p></li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --Assemble --platform oxford --filter_length 200 --ReadsPath Reads/Oxford --reads1 .fasta --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure><ul><li><strong>PacBio reads组装</strong></li></ul><p> PacBio同样只产生一个文件 “pacbio.fastq”，参数设置与Oxford类似。此处，文件的后缀名为 “.fastq”，其长度为6，因此 “–suffix_len” 设置为6。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --Assemble --platform pacbio --filter_length 200 --ReadsPath Reads/PacBio --reads1 .fastq --genomeSize 4.8m --threads 4 --suffix_len 6</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 3:</strong> 基因预测及注释。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --Annotate --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --genus Escherichia --species “Escherichia coli” --codon 11 --threads 4</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 4:</strong> 构建单拷贝核心蛋白进化树与核心SNPs进化树。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --CoreTree --CDsPath Results/Annotations/CDs --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 5:</strong> 仅构建单拷贝核心蛋白进化树。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fasttree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --CoreTree --CDsPath NO --AAsPath Results/Annotations/AAs --codon 11 --strain_num 6 --threads 4 --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 6:</strong> 进行泛基因组分析并构建单拷贝核心蛋白进化树。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fasttree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --Pan --codon 11 --identi 95 --strain_num 6 --threads 4 --GffPath Results/Annotations/GFF --PanTree --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 7:</strong> 同源蛋白家族聚类分析并构建进化树。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment"># Construct phylogenetic tree with FastTree (Quick without best fit model testing)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fasttree</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --OrthoF --threads 4 --AAsPath Results/Annotations/AAs --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 8:</strong> 计算两两基因组之间的平均核苷酸一致性(ANI)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --ANI --threads 4 --queryL scaf.list --refL scaf.list --ANIO Results/ANI/ANIs --Scaf_suffix .fa</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 9:</strong> 通过MinHash计算基因组及宏基因组的相似性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --MASH --scafPath &lt;PATH&gt; --Scaf_suffix &lt;STRING&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 10:</strong> 对所有基因组进行COG注释。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --pCOG --threads 4 --strain_num 6 --AAsPath Results/Annotations/AAs</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 11:</strong> 变异(SNPs, Indels)检测与注释，并构建基于参考基因组的SNPs进化树。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --bsnum 500</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --VAR --threads 4 --refgbk /mnt/h/PGCGAP_Examples/Reads/MG1655.gbff --ReadsPath Reads/Illumina --reads1 _1.fastq.gz --reads2 _2.fastq.gz --suffix_len 11 --strain_num 6 --qualtype sanger --fastboot 1000</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 12:</strong> 从基因组中寻找抗生素抗性基因或毒力基因。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --AntiRes --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --threads 6 --db ncbi --identity 75 --coverage 50</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 13:</strong> Filter short sequences in the genome and assess the status of the genome</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pgcgap</span> --ACC --Assess --scafPath Results/Assembles/Scaf/Illumina --Scaf_suffix -8.fa --filter_length 200</span><br></pre></td></tr></table></figure></li><li><p><strong>Example 14:</strong> Construct a phylogenetic tree based on multiple sequences in one file</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment"># Construct phylogenetic tree with IQ-TREE (Very slow with best fit model testing, traditional bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --bsnum 500 --threads 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct phylogenetic tree with IQ-TREE (Slow with best fit model testing, ultrafast bootstrap)</span></span><br><span class="line"><span class="variable">$pgcgap</span> --STREE --seqfile proteins.fas --seqtype p --fastboot 1000 --threads 4</span><br></pre></td></tr></table></figure></li></ul><h2 id="准备输入文件"><a href="#准备输入文件" class="headerlink" title="准备输入文件"></a>准备输入文件</h2><h3 id="工作目录"><a href="#工作目录" class="headerlink" title="工作目录"></a>工作目录</h3><ul><li>PGCGAP的运行目录。</li></ul><h3 id="Assemble"><a href="#Assemble" class="headerlink" title="Assemble"></a>Assemble</h3><ul><li>将所有双端reads、或PacBio reads 或 Oxford nanopore reads存于某个目录下 (Default: .&#x2F;Reads&#x2F;Illumina&#x2F;)。</li></ul><h3 id="Annotate"><a href="#Annotate" class="headerlink" title="Annotate"></a>Annotate</h3><ul><li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li></ul><h3 id="ANI"><a href="#ANI" class="headerlink" title="ANI"></a>ANI</h3><ul><li>QUERY_LIST 和 REFERENCE_LIST 文件，每个文件中含有需要计算的基因组的绝对路径，每个基因组一行 (default: 工作目录下的”scaf.list”)。若先运行了 “–Assemble” 模块，该文件会自动生成。</li></ul><h3 id="CoreTree"><a href="#CoreTree" class="headerlink" title="CoreTree"></a>CoreTree</h3><ul><li>将所有菌株的氨基酸文件 (后缀名必须为 “.faa”) 和核苷酸文件 (需以 “.ffn” 为后缀) 分别存放于两个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;” 和 “.&#x2F;Results&#x2F;Annotations&#x2F;CDs&#x2F;”)。“.faa” 和 “.ffn” 文件需要有相同的前缀名字，且 protein IDs 和 gene IDs 需以菌株名开头。建议用 “Prokka” 软件获取输入文件，若已经运行了 “–Annotate” 模块，则该模块的输入文件会自动生产。若 “–CDsPath” 设置为 “NO”，则不需要提供核苷酸文件，但也不会生产核心SNPs进化树。</li></ul><h3 id="MASH"><a href="#MASH" class="headerlink" title="MASH"></a>MASH</h3><ul><li>基因组文件(完整或不完整)存放于某个目录下 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina)。</li></ul><h3 id="OrthoF"><a href="#OrthoF" class="headerlink" title="OrthoF"></a>OrthoF</h3><ul><li>所有菌株的fasta格式氨基酸文件(每个菌株一个文件)存放于一个目录中 (default: “.&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;”)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li></ul><h3 id="Pan"><a href="#Pan" class="headerlink" title="Pan"></a>Pan</h3><ul><li>包含所有菌株GFF3 文件 (With “.gff” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;GFF&#x2F;);</li><li>若先运行了 “–Annotate” 模块，上述文件会自动生成。</li></ul><h3 id="pCOG"><a href="#pCOG" class="headerlink" title="pCOG"></a>pCOG</h3><ul><li>存放所有菌株的fasta格式氨基酸序列文件 (With “.faa” as the suffix) 的目录路径 (default: .&#x2F;Results&#x2F;Annotations&#x2F;AAs&#x2F;)。 若先运行了 “–Annotate” 模块，该文件会自动生成。</li></ul><h3 id="VAR"><a href="#VAR" class="headerlink" title="VAR"></a>VAR</h3><ul><li>包含所有菌株的 Pair-end reads 的目录路径 (default: .&#x2F;Reads&#x2F;Over&#x2F; under the working directory)。</li><li>fasta 格式或 GenBank 格式的参考基因组的绝对路径 (<strong>必需提供</strong>)。</li></ul><h3 id="AntiRes"><a href="#AntiRes" class="headerlink" title="AntiRes"></a>AntiRes</h3><ul><li>存放基因组(complete or draft)的目录 (Default: Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina under the working directory).</li></ul><h3 id="STREE"><a href="#STREE" class="headerlink" title="STREE"></a>STREE</h3><ul><li>Multiple-FASTA sequences in a file, can be Protein, DNA and Codons.</li></ul><h2 id="输出文件解读"><a href="#输出文件解读" class="headerlink" title="输出文件解读"></a>输出文件解读</h2><h3 id="Assemble-1"><a href="#Assemble-1" class="headerlink" title="Assemble"></a>Assemble</h3><ul><li><p><strong>Results&#x2F;Assembles&#x2F;Illumina&#x2F;</strong><br/><br>Directories contain Illumina assembly files and information of each strain.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;PacBio&#x2F;</strong><br/><br>Directories contain PacBio assembly files and information of each strain.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Oxford&#x2F;</strong><br/><br>Directories contain ONT assembly files and information of each strain.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Hybrid&#x2F;</strong><br/><br>Directory contains hybrid assembly files of the short reads and long reads of the same strain.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Illumina</strong><br/><br>Directory contains Illumina contigs&#x2F;scaffolds of all strains. “*.filtered.fas” is the genome after excluding short sequences. “*.prefilter.stats” describes the stats of the genome before filtering, and “*.filtered.stats” describes the stats of the genome after filtering.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;Oxford</strong><br/><br>Directory contains Oxford nanopore contigs&#x2F;scaffolds of all strains.</p></li><li><p><strong>Results&#x2F;Assembles&#x2F;Scaf&#x2F;PacBio</strong><br/><br>Directory contains PacBio contigs&#x2F;scaffolds of all strains.</p></li></ul><h3 id="Annotate-1"><a href="#Annotate-1" class="headerlink" title="Annotate"></a>Annotate</h3><ul><li><p><strong>Results&#x2F;Annotations&#x2F;*_annotation</strong><br/><br>directories contain <a href="https://github.com/tseemann/prokka?_blank">annotation files</a> of each strain.</p></li><li><p><strong>Results&#x2F;Annotations&#x2F;AAs</strong><br/><br>Directory contain amino acids sequences of all strains.</p></li><li><p><strong>Results&#x2F;Annotations&#x2F;CDs</strong><br/><br>Directory contain nucleotide sequences of all strains.</p></li><li><p><strong>Results&#x2F;Annotations&#x2F;GFF</strong><br/><br>Directory contain the master annotation of all strains in GFF3 format.</p></li></ul><h3 id="ANI-1"><a href="#ANI-1" class="headerlink" title="ANI"></a>ANI</h3><ul><li><p><strong>Results&#x2F;ANI&#x2F;ANIs</strong><br/><br>The file contains comparation information of genome pairs. The document is composed of five columns, each of which represents query genome, reference genome, ANI value, count of bidirectional fragment mappings, total query fragments.</p></li><li><p><strong>Results&#x2F;ANI&#x2F;ANIs.matrix</strong><br/><br>file with identity values arranged in a <a href="https://www.mothur.org/wiki/Phylip-formatted_distance_matrix?_blank">phylip-formatted lower triangular matrix</a>.</p></li><li><p><strong>Results&#x2F;ANI&#x2F;ANIs.heatmap</strong><br/><br>An ANI matrix of all strains.</p></li><li><p><strong>Results&#x2F;ANI&#x2F;ANI_matrix.pdf</strong><br/><br>The heatmap plot of “ANIs.heatmap”.</p></li></ul><h3 id="MASH-1"><a href="#MASH-1" class="headerlink" title="MASH"></a>MASH</h3><ul><li><p><strong>Results&#x2F;MASH&#x2F;MASH</strong><br/><br>The pairwise distance between pair genomes, each column represents Reference-ID, Query-ID, Mash-distance, P-value, and Matching-hashes, respectively.</p></li><li><p><strong>Results&#x2F;MASH&#x2F;MASH2</strong><br/><br>The pairwise similarity between pair genomes, each column represents Reference-ID, Query-ID, similarity, P-value, and Matching-hashes, respectively.</p></li><li><p><strong>Results&#x2F;MASH&#x2F;MASH.heatmap</strong><br/><br>A similarity matrix of all genomes.</p></li><li><p><strong>Results&#x2F;MASH&#x2F;MASH_matrix.pdf</strong><br/><br>A heat map plot of “MASH.heatmap”.</p></li></ul><h3 id="CoreTree-1"><a href="#CoreTree-1" class="headerlink" title="CoreTree"></a>CoreTree</h3><ul><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core proteins.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.nwk</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by FastTree.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.protein.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of single-copy core proteins for all strains constructed by IQ-TREE.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;faa2ffn&#x2F;ALL.core.nucl.fasta</strong><br/><br>Concatenated and aligned sequences file of single-copy core genes.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta</strong><br/><br>Core SNPs of single-copy core genes in fasta format.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.nwk</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by FastTree.</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;ALL.core.snp.fasta.gb.treefile</strong><br/><br>The phylogenetic tree file of SNPs of single-copy core genes for all strains constructed by IQ-TREE</p></li><li><p><strong>Results&#x2F;CoreTrees&#x2F;“Other_files”</strong><br/><br>Intermediate directories and files.</p></li></ul><h3 id="OrthoF-1"><a href="#OrthoF-1" class="headerlink" title="OrthoF"></a>OrthoF</h3><ul><li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF</strong><br/><br>Same as <a href="https://github.com/davidemms/OrthoFinder?_blank">OrthoFinder</a> outputs.</p></li><li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;</strong><br/><br>Directory contains Phylogenetic tree files based on Single Copy Orthologue sequences.<br/></p></li><li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.nwk</strong><br/><br>Phylogenetic tree constructed by FastTree.<br/></p></li><li><p><strong>Results&#x2F;OrthoFinder&#x2F;Results_orthoF&#x2F;Single_Copy_Orthologue_Tree&#x2F;Single.Copy.Orthologue.fasta.gb.treefile</strong><br/><br>Phylogenetic tree constructed by IQ-TREE.<br/></p></li></ul><h3 id="Pan-1"><a href="#Pan-1" class="headerlink" title="Pan"></a>Pan</h3><ul><li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_Pie.pdf</strong><br/><br>A 3D pie chart and a fan chart of the breakdown of genes and the number of isolates they are present in.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;pangenome_frequency.pdf</strong><br/><br>A graph with the frequency of genes versus the number of genomes.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Pangenome_matrix.pdf</strong><br/><br>A figure showing the tree compared to a matrix with the presence and absence of core and accessory genes.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta</strong><br/><br>Alignments of single-copy core proteins called by roary software.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.nwk</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by FastTree.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Core&#x2F;Roary.core.protein.fasta.gb.treefile</strong><br/><br>A phylogenetic tree of Roary.core.protein.fasta constructed by IQ-TREE.</p></li><li><p><strong>Results&#x2F;PanGenome&#x2F;Other_files</strong><br/><br>see <a href="https://sanger-pathogens.github.io/Roary/?_blank">roary</a> outputs.</p></li></ul><h3 id="pCOG-1"><a href="#pCOG-1" class="headerlink" title="pCOG"></a>pCOG</h3><ul><li><p><strong>*.COG.xml, *.2gi.table, *.2id.table, *.2Sid.table</strong><br/><br>Intermediate files.</p></li><li><p><strong>*.2Scog.table</strong><br/><br>The super COG table of each strain.</p></li><li><p><strong>*.2Scog.table.pdf</strong><br/><br>A plot of super COG table in pdf format.</p></li><li><p><strong>All_flags_relative_abundances.table</strong><br>A table containing the relative abundance of each flag for all strains.</p></li></ul><h3 id="VAR-1"><a href="#VAR-1" class="headerlink" title="VAR"></a>VAR</h3><ul><li><p><strong>Results&#x2F;Variants&#x2F;directory-named-in-strains</strong><br/><br>directories containing substitutions (snps) and insertions&#x2F;deletions (indels) of each strain. See <a href="https://github.com/tseemann/snippy?_blank">Snippy</a> outputs for detail.</p></li><li><p><strong>Results&#x2F;Variants&#x2F;Core</strong><br/><br>The directory containing SNP phylogeny files.</p><ul><li><strong>core.aln</strong> : A core SNP alignment includes only SNP sites.</li><li><strong>core.full.aln</strong> : A whole genome SNP alignment (includes invariant sites).</li><li><strong>core.*.treefile</strong> : Phylogenetic tree of the core SNP alignment based on the best-fit model of evolution selected using IQ-TREE (ignoring possible recombination).</li><li><strong>gubbins.core.full.node_labelled.final_tree.tre</strong> : Phylogenetic tree of the whole genome SNP alignment constructed with <strong>gubbins</strong> (get rid of recombination).</li></ul></li></ul><h3 id="AntiRes-1"><a href="#AntiRes-1" class="headerlink" title="AntiRes"></a>AntiRes</h3><ul><li><strong>Results&#x2F;AntiRes&#x2F;*.tab</strong> : Screening results of each strain.</li><li><strong>Results&#x2F;AntiRes&#x2F;summary.txt</strong> : A matrix of gene presence&#x2F;absence for all strains.</li></ul><h3 id="STREE-1"><a href="#STREE-1" class="headerlink" title="STREE"></a>STREE</h3><ul><li><strong>Results&#x2F;STREE&#x2F;*.aln</strong> : Aligned sequences.</li><li><strong>Results&#x2F;STREE&#x2F;*.aln.gb</strong> : Conserved blocks of the sequences.</li><li><strong>Results&#x2F;STREE&#x2F;*.aln.gb.treefile</strong> : The final phylogenetic tree.</li></ul><h2 id="使用许可"><a href="#使用许可" class="headerlink" title="使用许可"></a>使用许可</h2><p>PGCGAP 不可商用，其它情况可使用免费(licensed under GPLv3)。</p><h2 id="反馈与提问"><a href="#反馈与提问" class="headerlink" title="反馈与提问"></a>反馈与提问</h2><p>若有问题，可在 <a href="https://github.com/liaochenlanruo/pgcgap/issues?_blank">issues page</a> 提出或通过邮件咨询 <a href="mailto:liaochenlanruo@webmail.hzau.edu.cn">liaochenlanruo@webmail.hzau.edu.cn</a>。</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><p>If you use this software please cite: Liu H, Xin B, Zheng J, Zhong H, Yu Y, Peng D, Sun M. Build a bioinformatics analysis platform and apply it to routine analysis of microbial genomics and comparative genomics. <em>Protocol exchange</em>, 2020. DOI: <a href="https://doi.org/10.21203/rs.2.21224/v5">10.21203&#x2F;rs.2.21224&#x2F;v5</a></p></li><li><p>If you use “--Assemble”, please also cite one or two of <a href="https://github.com/OpenGene/fastp">Fastp</a>, <a href="https://doi.org/10.1101/gr.214346.116">ABySS</a>, <a href="http://link.springer.com/chapter/10.1007%2F978-3-642-37195-0_13">SPAdes</a>, <a href="https://doi.org/10.1101/gr.215087.116">Canu</a>, or <a href="https://doi.org/10.1371/journal.pcbi.1005595">Unicycler</a>.</p></li><li><p>If you use “--Annotate”, please also cite <a href="https://www.pixiv.net/member_illust.php?mode=medium&illust_id=24642063">Prokka</a>.</p></li><li><p>If you use “--CoreTree”, please also cite <a href="https://doi.org/10.1093/bioinformatics/btl158">CD-HIT</a>, <a href="https://doi.org/10.1093/nar/gkf436">MAFFT</a>, <a href="https://doi.org/10.1093/nar/gkl315">PAL2NAL</a>, <a href="https://doi.org/10.1093/bioinformatics/btp348">trimAL</a>, <a href="https://doi.org/10.1371/journal.pone.0009490">FastTree</a> or <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a>, and <a href="https://dx.doi.org/10.1099%2Fmgen.0.000056">SNP-sites</a>.</p></li><li><p>If you use “--Pan”, please also cite <a href="https://dx.doi.org/10.1093%2Fbioinformatics%2Fbtv421">Roary</a>, <a href="https://doi.org/10.1093/nar/gkf436">MAFFT</a>, <a href="https://doi.org/10.1093/bioinformatics/btp348">trimAL</a>, <a href="https://doi.org/10.1371/journal.pone.0009490">FastTree</a> or <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a>.</p></li><li><p>If you use “--OrthoF”, please also cite <a href="https://dx.doi.org/10.1186%2Fs13059-019-1832-y">OrthoFinder</a>, <a href="https://doi.org/10.1093/bioinformatics/btp348">trimAL</a>, <a href="https://doi.org/10.1371/journal.pone.0009490">FastTree</a> or <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a>.</p></li><li><p>If you use “--ANI”, please also cite <a href="https://dx.doi.org/10.1038%2Fs41467-018-07641-9">fastANI</a>.</p></li><li><p>If you use “--MASH”, please also cite <a href="https://dx.doi.org/10.1186%2Fs13059-016-0997-x">Mash</a>.</p></li><li><p>If you use “--VAR”, please also cite <a href="https://github.com/najoshi/sickle">Sickle</a>, <a href="https://github.com/tseemann/snippy">Snippy</a>, <a href="https://dx.doi.org/10.1093%2Fnar%2Fgku1196">Gubbins</a>,  <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a>, and <a href="https://dx.doi.org/10.4161%2Ffly.19695">SnpEff</a>.</p></li><li><p>If you use “--AntiRes”, please also cite <a href="https://github.com/tseemann/abricate">Abricate</a> and the corresponding database you used: <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6811410">NCBI AMRFinderPlus</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/27789705">CARD</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/22782487">Resfinder</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/24145532">ARG-ANNOT</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/26578559">VFDB</a>, <a href="https://www.ncbi.nlm.nih.gov/pubmed/24777092">PlasmidFinder</a>, <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5343136/">EcOH</a>, or <a href="https://academic.oup.com/nar/article/48/D1/D561/5624973">MEGARES 2.00</a>.</p></li><li><p>If you use “--STREE”, please also cite <a href="http://europepmc.org/abstract/MED/30976793">Muscle</a> , <a href="https://doi.org/10.1093/bioinformatics/btp348">trimAL</a>, and <a href="https://doi.org/10.1093/molbev/msaa015">IQ-TREE</a>.</p></li></ul><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results"><a href="#Q1-VAR-founction-ran-failed-to-get-annotated-VCFs-and-Core-results" class="headerlink" title="Q1 VAR founction ran failed to get annotated VCFs and Core results"></a>Q1 VAR founction ran failed to get annotated VCFs and Core results</h3><p>Check the log file named in “strain_name.log” under Results&#x2F;Variants&#x2F;<strain_name>&#x2F; directory. If you find a sentence like “WARNING: All frames are zero! This seems rather odd, please check that ‘frame’ information in your ‘genes’ file is accurate.” This is an snpEff error. Users can install JDK8 to solve this problem.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$conda</span> install java-jdk=8.0.112</span><br></pre></td></tr></table></figure><p>Click <a href="https://github.com/tseemann/snippy/issues/259?_blank">here</a> for more solutions.</p><h3 id="Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher"><a href="#Q2-Could-not-determine-version-of-minced-please-install-version-2-or-higher" class="headerlink" title="Q2 Could not determine version of minced please install version 2 or higher"></a>Q2 Could not determine version of minced please install version 2 or higher</h3><p>When running prokka of Assemble founction, this error could happened, the error message shows as following:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Error: A JNI error has occurred, please check your installation and try again</span><br><span class="line">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: minced has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0</span><br><span class="line">at java.lang.ClassLoader.defineClass1(Native Method)</span><br><span class="line">at java.lang.ClassLoader.defineClass(ClassLoader.java:763)</span><br><span class="line">at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)</span><br><span class="line">at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)</span><br><span class="line">at java.net.URLClassLoader.access$100(URLClassLoader.java:74)</span><br><span class="line">at java.net.URLClassLoader$1.run(URLClassLoader.java:369)</span><br><span class="line">at java.net.URLClassLoader$1.run(URLClassLoader.java:363)</span><br><span class="line">at java.security.AccessController.doPrivileged(Native Method)</span><br><span class="line">at java.net.URLClassLoader.findClass(URLClassLoader.java:362)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class="line">at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class="line">at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)</span><br><span class="line">[01:09:40] Could not determine version of minced - please install version 2.0 or higher</span><br></pre></td></tr></table></figure><p>Users can downgrade the minced to version 0.3 to solve this problem.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$conda</span> install minced=0.3</span><br></pre></td></tr></table></figure><p>Click <a href="https://github.com/bioconda/bioconda-recipes/pull/15407?_blank">here</a> for detail informations.</p><h3 id="Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib"><a href="#Q3-dyld-Library-not-loaded-rpath-libcrypto-1-0-0-dylib" class="headerlink" title="Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib"></a>Q3 dyld: Library not loaded: @rpath&#x2F;libcrypto.1.0.0.dylib</h3><p>This error may happen when running function “VAR” on macOS. It is an error of openssl. Users can solve this problem as following:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Firstly, install brew if have not installed before</span></span><br><span class="line"><span class="variable">$ruby</span> -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Install openssl with brew</span></span><br><span class="line"><span class="variable">$brew</span> install openssl</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create the soft link for libraries</span></span><br><span class="line"><span class="variable">$ln</span> -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/</span><br><span class="line"></span><br><span class="line"><span class="variable">$ln</span> -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/</span><br></pre></td></tr></table></figure><p>Click <a href="https://gist.github.com/aklap/e885721ef15c8668ed0a1dd64d2ea1a7">here</a> for more informations</p><h3 id="Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61"><a href="#Q4-Use-of-uninitialized-value-in-require-at-Encode-pm-line-61" class="headerlink" title="Q4 Use of uninitialized value in require at Encode.pm line 61"></a>Q4 Use of uninitialized value in require at Encode.pm line 61</h3><p>This warning may happen when running function “Pan”. It is a warning of Roary software.<br>The content of line 61 is “require Encode::ConfigLocal;”. Users can ignore the warning.<br>Click <a href="https://github.com/sanger-pathogens/Roary/issues/323">here</a> for details.</p><h2 id="Updates"><a href="#Updates" class="headerlink" title="Updates"></a>Updates</h2><ul><li><p>V1.0.3</p><ul><li>Updated ANI fuction.</li></ul></li><li><p>V1.0.4</p><ul><li>Add parallel for function “COG”.</li><li>Optimized drawing of ANI heat map.</li></ul></li><li><p>V1.0.5</p><ul><li>Bug repair for input of gubbins.</li></ul></li><li><p>V1.0.6</p><ul><li>Modified CoreTree to split protein and SNPs tree constructing.</li></ul></li><li><p>V1.0.7</p><ul><li>Split Assemble and Annotate into two functions.</li><li>Added third generation genome assembly function.</li><li>Changed the default parameters of the CoreTree function (aS 0.8 to 0.7 and aL 0.8 to 0.5).</li><li>Changed the name of function “COG” to “pCOG”.</li><li>Fixed the sorting bug for ANI heat map.</li></ul></li><li><p>V1.0.8</p><ul><li>Add the “MASH” function to compute genome distance and similarity using MinHash.</li></ul></li><li><p>V1.0.9</p><ul><li>The function of constructing a single-copy core protein phylogenetic tree was added to “Pan”.</li><li>Fixed a bug of plot_3Dpie.R, Optimized image display, and a fan chart has been added.</li><li>Fixed a bug for ploting the ANI matrix.</li></ul></li><li><p>V1.0.10</p><ul><li>Add the “AntiRes” function to screening of contigs for antimicrobial and virulence genes.</li></ul></li><li><p>V1.0.11</p><ul><li>Users now can choose “abyss” or “spades” for illumina reads aseembly.</li><li>New support for hybrid assembly of paired-end short reads and long reads.</li><li>Add the selecting of best-fit model of evolution for DNA and protein alignments before constructing a phylogenetic tree.</li><li>Optimized display of help information. Users can check parameters for each modulewith command “pgcgap [Assemble|Annotate|ANI|AntiRes|CoreTree|MASH|OrthoF|Pan|pCOG|VAR]“, and can look up the examples of each module with command “pgcgap Examples”.</li></ul></li><li><p>V1.0.12</p><ul><li>Added automatic mode for illumina genome assembly. First, PGCGAP calls “ABySS” for genome assembly. When the assembled N50 is less than 50,000, it automatically calls “SPAdes” to try multiple parameters for assembly.</li><li>Added ability to filter short sequences of assembled genomes.</li><li>Added function of genome assembly status assessment.</li><li>Modified the drawing script of ANI and MASH modules so that it can automatically adjust the font size according to the number of samples.</li></ul></li><li><p>V1.0.13</p><ul><li>Fixed the “running error” bug of function “Assess” in module “ACC”.</li><li>Added module “STREE” for constructing a phylogenetic tree based on multiple sequences in one file.</li></ul></li><li><p>V1.0.14</p><ul><li>The relative_abundances of flags among strains will not be called while the strain number is less than two.</li></ul></li><li><p>V1.0.15</p><ul><li>When the number of threads set by the user exceeds the number of threads owned by the system, PGCGAP will automatically adjust the number of threads to avoid program crash.</li><li>Add FASTQ preprocessor before Illunima genome assembly: adapter trimming, polyG tail trimming of Illumina NextSeq&#x2F;NovaSeq reads, quality filtering (Q value filtering, N base filtering, sliding window filtering), length filtering.</li></ul></li><li><p>V1.0.16</p><ul><li>Reduced the number of Racon polishing rounds for better speed performance when peforming genome assembly.</li><li>Force overwriting existing output folder when running “Annotate” analysis to avoid program crash.</li></ul></li><li><p>V1.0.17</p><ul><li>Fixed a bug that the program can not go back to the working directory after genome annotation.</li><li>Added scripts to check if there were single-copy core proteins found while running module “CoreTree”.</li><li>Modified the help message.</li></ul></li><li><p>V1.0.18</p><ul><li>Updated the downloading link of COG database.</li><li>Users can choose the number of threads used for running module “STREE”.</li></ul></li><li><p>V1.0.19</p><ul><li>Can resume from break-point when downloading the COG database.</li><li>Fixed a bug that failed to create multi-level directories.</li></ul></li><li><p>V1.0.20</p><ul><li>Fixed a little bug (path error) of module “VAR”.</li><li>Fixed a little bug of module “CoreTree” to avoid the interference of special characters in sequence ID to the program.</li></ul></li><li><p>V1.0.21</p><ul><li>Change the default search program “blast” to “diamond” of module “OrthoF”.</li><li>Fixed a bug of module “pCOG” to output the right figure.</li></ul></li><li><p>V1.0.22</p><ul><li>The drawing function of module “ANI” and module “MASH” has been enhanced, including automatic adjustment of font size and legend according to the size of the picture.</li><li>Fixed a bug of module “ANI”, that is no heatmap will be drawn when there is “NA” in the ANI matrix in the previous versions.</li><li>When the ANI value or genome similarity is greater than 95%, an asterisk (*) will be drawn in the corresponding cell of the heatmap.</li></ul></li><li><p>V1.0.23</p><ul><li>The “–Assess” function of module “ACC” was enhanced to (1) generate a summary file containing the status of all genomes (before and after the short sequence filtering), (2) auto move the low-quality genomes (that is genomes with N50 length less than 50 k) to a directory, and others to another directory.</li></ul></li><li><p>V1.0.24</p><ul><li>Fixed a little bug of module “Pan” to avoid the interference of special characters (&gt;) in sequence ID to the program.</li></ul></li><li><p>V1.0.25</p><ul><li>Gblocks was used to eliminate poorly aligned positions and divergent regions of an alignment of DNA or protein sequences in module “CoreTree” and “Pan”.</li><li>The parameter “–identi” was added into module “Pan” to allow users to set the minimum percentage identity for blastp.</li></ul></li><li><p>V1.0.26</p><ul><li>Adjusted the font size with the variation of genome number and the string length of the genome name when plotting the heat map of module “ANI” and “MASH”.</li><li>Two heat map are provided, one of which with a star (means the similarity of the two genomes is larger than 95%) and another without a star, when performing the “ANI” and “MASH” analysis.</li></ul></li><li><p>V1.0.27</p><ul><li>The Amino Acid files are no longer needed when performing the Pan-genome analysis with module Pan.</li></ul></li><li><p>V1.0.28</p><ul><li>Users can check and install the latest version of PGCGAP by the command “pgcgap –check-update”.</li><li>Update module Assemble to allow polish after the assembly of PacBio and ONT data.</li><li>Update module pCOG to adjust the latest database of <a href="https://ftp.ncbi.nih.gov/pub/COG/COG2020/data/COG">COG 2020</a>.</li><li>Optimized the drawing and color scheme of the module pCOG.</li><li>Fixed the parameter “CoreTree” in the module Pan to avoid program termination caused by the “&gt;” in non-sequence lines.</li></ul></li><li><p>V1.0.29</p><ul><li>Function added to module OrthoF: Phylogenetic tree can be constructed automatically with the Single Copy Orthologue Sequences called by module OrthoF.</li><li>Fixed the “permission denied” error when moving directories on the WSL platform.</li></ul></li><li><p>V1.0.30</p></li><li><p>Replace Gblocks with trimAL to trim MSA (module CoreTree, Pan, STREE, and OrthoF).</p></li><li><p>Replaced Modeltest-ng and Raxml-ng with IQ-TREE (module CoreTree, Pan OrthoF, and VAR).</p></li><li><p>Added the option of using FastTree to build phylogenetic tree (module CoreTree, Pan, and OrthoF).</p></li><li><p>V1.0.31</p><ul><li>The default replicates for bootstrap testing was set to 500.</li><li>Add the method for phylogenetic tree constructing with ultrafast bootstrap of IQ-TREE.</li><li>Prevent the log from being written to the tree file generated by FastTree.</li></ul></li><li><p>V1.0.32</p><ul><li>A more colorful version, try “pgcgap Examples” to have a look.</li><li>Updated module AntiRes: the parameter –db had been modified to add choices of “all” and “megares”.</li><li>A little optimization of module VAR.</li><li>Replaced conda with mamba to update PGCGAP more quickly.</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WGS </tag>
            
            <tag> 生信软件 </tag>
            
            <tag> 比较基因组学 </tag>
            
            <tag> PGCGAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Perl获取外部命令执行结果的输出</title>
      <link href="/post/9092.html"/>
      <url>/post/9092.html</url>
      
        <content type="html"><![CDATA[<p>有时候perl脚本需要与Linux外部命令进行交互，本文讲解如何将外部命令的执行结果的输出（此处指的不是运行结果的返回值，而是标准输出上的内容之类）赋给perl变量。</p><span id="more"></span><p>首先需要了解perl调用shell命令的三种方式：</p></br>**1. system**<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(<span class="string">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure></br>通过system运行得到的结果是一个返回值，其实是一串数字，若外部命令运行成功，则返回值为“0”，若运行失败，则返回非0的值。</br>**2. 反引号** （ESC下面的那个键）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`<span class="built_in">command</span>`;</span><br></pre></td></tr></table></figure></br>通过反引号运行，会返回shell运行结果的输出，下面的脚本通过“which”查询“COG_2014.phr”的绝对路径，并将其赋值给`$path`。然后通过正则表达式获取“COG_2014.phr”所在的目录的路径，并将其赋值给变量`$cogdb_dir`。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">my <span class="variable">$cogdb_dir</span>;</span><br><span class="line">my <span class="variable">$path</span> = `<span class="built_in">which</span> COG_2014.phr`;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$path</span>=~/(.+)COG_2014.*/) &#123;</span><br><span class="line"><span class="variable">$cogdb_dir</span> = <span class="variable">$1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span> <span class="variable">$cogdb_dir</span>;</span><br></pre></td></tr></table></figure></br>**3. exec**<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exec</span>(<span class="string">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure></br>exec与system相似，但是执行完exec命令之后，perl会终止运行，不再执行后续的代码。]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> perl </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Perl捕获外部命令执行异常并继续运行后续代码</title>
      <link href="/post/16e1.html"/>
      <url>/post/16e1.html</url>
      
        <content type="html"><![CDATA[<p>在编写perl脚本时经常会调用外部命令，由于种种原因，会遇到外部命令执行异常，而导致整个脚本终止运行。这对于大的项目来说很不经济，因此，可以想办法越过这个异常并继续执行后续脚本。</p><span id="more"></span><p>Examples：</p></br>假设有一个外部命令“command”需要执行，将该命令存到一个数组当中：</br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my @arr = (<span class="string">&quot;command&quot;</span>);</span><br></pre></td></tr></table></figure></br>将外部命令的返回值赋给一个变量：</br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my <span class="variable">$return</span> = sysstem(@arr);</span><br></pre></td></tr></table></figure></br>判断返回值是否为“0”，0代表运行正常，任何非0的值均表示有运行异常。如果返回值不为0，则记录错误，然后继续运行后续代码：</br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(<span class="variable">$return</span> == 0))&#123;</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;There are some errors when running the command!\n&quot;</span>;</span><br><span class="line">    command2;<span class="comment">#继续运行其他命令</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></br><p><strong>注：</strong>本方案仅在Linux系统下测试，不晓得Windows和Mac的返回值与Linux是否一致，Linux中的“core dump”就可以如此来捕获。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> perl </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Wget 技巧</title>
      <link href="/post/f298.html"/>
      <url>/post/f298.html</url>
      
        <content type="html"><![CDATA[<p>本文例举一些Linux系统下的下载工具“wget”的高级用法。</p><span id="more"></span><h3 id="1-下载目录下所有文件："><a href="#1-下载目录下所有文件：" class="headerlink" title="1.下载目录下所有文件："></a>1.下载目录下所有文件：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c -r -nH -np -nd -R index.html -P ./data ftp://ftp.ncbi.nih.gov/pub/COG/COG2014/data/</span><br></pre></td></tr></table></figure><p></br>-c：断点续传</p><p>-r：遍历子目录</p><p>-nH：不将文件保存在FTP主机名目录下</p><p>-np：递归下载时不搜索上层目录</p><p>-nd：递归下载时不创建一层一层的目录，把所有的文件下载到当前目录</p><p>-R index.html：不生成 index.html文件</p><p>-P .&#x2F;data：将数据下载到当前目录下的data目录下</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github操作</title>
      <link href="/post/f1a4.html"/>
      <url>/post/f1a4.html</url>
      
        <content type="html"><![CDATA[<p>本文讲述了Github一些操作技巧……</p><span id="more"></span><h1 id="TAG相关操作"><a href="#TAG相关操作" class="headerlink" title="TAG相关操作"></a>TAG相关操作</h1><p></br>通过Tag可以将项目生成不同的版本，并进行存档，供用户下载。这在软件中是很常见的。</p><ul><li><p><strong>创建tag</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag v1.0.0 -m <span class="string">&#x27;first version&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>上传到github</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin v1.0.0</span><br></pre></td></tr></table></figure></li><li><p><strong>存档某个tag</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git archive -v --format=tar v1.0.0 &gt; v1.0.0.tar.gz</span><br></pre></td></tr></table></figure></li><li><p><strong>删除tag</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag -d v1.0.0</span><br><span class="line">git push origin :refs/tags/v1.0.0</span><br></pre></td></tr></table></figure></li></ul><h1 id="Branch"><a href="#Branch" class="headerlink" title="Branch"></a>Branch</h1><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><ul><li><p>创建并切换到名为<code>pgcgap</code>的分支</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b pgcgap</span><br></pre></td></tr></table></figure></li><li><p>将<code>pgcgap</code>分支推送到远程端</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin pgcgap</span><br></pre></td></tr></table></figure></li></ul><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><p>假设要删除当前所处的<code>pgcgap</code>分支。</p><ul><li><p>切换到别的分支，如master</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure></li><li><p>删除本地分支</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git branch -d pgcgap</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有时候需要强制删除</span></span><br><span class="line">git branch -D pgcgap</span><br></pre></td></tr></table></figure></li><li><p>删除远程分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete pgcgap</span><br></pre></td></tr></table></figure></li></ul><h1 id="Git-加速"><a href="#Git-加速" class="headerlink" title="Git 加速"></a>Git 加速</h1><p>进行git操作时以<code>github.com.cnpmjs.org</code>替换<code>github.com</code>可以提速10倍左右。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu open-mpi运行错误</title>
      <link href="/post/6bf1.html"/>
      <url>/post/6bf1.html</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>我在win10 Linux子系统下使用mpirun多线程运行ABySS基因组拼接软件的时候，出现以下错误提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Linux kernel CMA support was requested via the btl_vader_single_copy_mechanism MCA variable, but CMA support is not available due to restrictive ptrace settings.</span><br><span class="line"></span><br><span class="line">[liaochenlanruo:49950] 4 more processes have sent <span class="built_in">help</span> message help-mpi-btl-openib-cpc-base.txt / ibv_create_qp failed</span><br><span class="line"></span><br><span class="line">[liaochenlanruo:49950] Set MCA parameter <span class="string">&quot;orte_base_help_aggregate&quot;</span> to 0 to see all <span class="built_in">help</span> / error messages </span><br></pre></td></tr></table></figure></br><p>结果就是无法运行多线程，跑了一夜的程序没有任何动静，似乎是卡死了。</p></br>Google到的解决方案，root用户下，终端运行如下命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#echo 0 &gt; /proc/sys/kernel/yama/ptrace_scope</span></span><br></pre></td></tr></table></figure></br>**提示："ptrace_scope"文件中原来的值为“1”，改成“0”就可以了。**]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OrthoFinder2—同源蛋白家族聚类</title>
      <link href="/post/4e1.html"/>
      <url>/post/4e1.html</url>
      
        <content type="html"><![CDATA[<p>寻找同源蛋白家族用的比较多的是Orthomcl，但是该软件多年前已经停止更新，且使用的时候需要安装和使用MySQL，操作起来比较繁琐。因此OrthoFinder应运而生，并且更新到版本2。后者不但可以寻找同源家族，并且可以构建基因家族进化树。</p><span id="more"></span><ol><li>OrthoFinder及依赖包的安装</li></ol><ul><li>下载<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/davidemms/OrthoFinder/releases/download/v2.2.7/OrthoFinder-2.2.7.tar.gz</span><br></pre></td></tr></table></figure></li><li>解压<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf OrthoFinder-2.2.7.tar.gz</span><br></pre></td></tr></table></figure></li><li>安装（加入环境变量即可）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line">i</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/tools/OrthoFinder-2.2.7</span><br><span class="line"></span><br><span class="line">Esc</span><br><span class="line"></span><br><span class="line"><span class="built_in">shift</span> + ;</span><br><span class="line"></span><br><span class="line">wq!</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>依赖包</li></ul><p>（1）<a href="url:https://github.com/bbuchfink/diamond/releases">DIAMOND</a></p><p>下载对应版本，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/bbuchfink/diamond/releases/download/v0.9.24/diamond-linux64.tar.gz</span><br><span class="line"></span><br><span class="line">tar xzf diamond-linux64.tar.gz</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">cp</span> diamond /usr/local/bin</span><br></pre></td></tr></table></figure><p>没有root权限的可以把diamond所在目录加入环境变量。</p><p>(2) <a href="url:https://github.com/soedinglab/MMseqs2/releases">MMseqs2</a></p><p>下载对应版本，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/soedinglab/MMseqs2/releases/download/7-4e23d/MMseqs2-Linux-AVX2.tar.gz</span><br><span class="line"></span><br><span class="line">tar xzf MMseqs2-Linux-AVX2.tar.gz</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">cp</span> mmseqs2/bin/mmseqs /usr/local/bin</span><br></pre></td></tr></table></figure><p>(3) <a href="url:http://micans.org/mcl/">MCL</a></p><ul><li><p>Ubuntu, Debian, Linux Mint安装方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mcl</span><br></pre></td></tr></table></figure></li><li><p>Centos, Redhat安装方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://micans.org/mcl/src/mcl-latest.tar.gz</span><br><span class="line">tar zxvf mcl-latest.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mcl-14-137（视具体情况而定）</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>(4) <a href="url:http://www.atgc-montpellier.fr/fastme/binaries.php">FastME</a></p></li></ul><p>下载二进制文件，解压并将主程序拷贝至存在于环境变量的目录下或将其所在的目录加入环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.atgc-montpellier.fr/download/sources/fastme/fastme-2.1.5.tar.gz</span><br><span class="line">tar zxvf fastme-2.1.5.tar.gz</span><br><span class="line">sudo <span class="built_in">cp</span> fastme-2.1.5/binaries/fastme-2.1.5-linux64 /usr/local/bin/fastme</span><br></pre></td></tr></table></figure><p>(5) 可选: <a href="url:ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/">BLAST+</a></p><ul><li>Ubuntu, Debian, Linux Mint安装方法：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ncbi-blast+</span><br></pre></td></tr></table></figure></li><li>Centos, Redhat安装方法：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.8.1+-x64-linux.tar.gz</span><br><span class="line">tar zxvf ncbi-blast-2.8.1+-x64-linux.tar.gz</span><br><span class="line">vim ~/.bashrc</span><br><span class="line">i</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/tools/ncbi-blast-2.8.1+/bin</span><br><span class="line">Esc</span><br><span class="line"><span class="built_in">shift</span> + ;</span><br><span class="line">wq!</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>运行 OrthoFinder<br>(1) 运行示例数据：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> OrthoFinder-2.2.7</span><br><span class="line">orthofinder -f ExampleData</span><br></pre></td></tr></table></figure>运行结果如下，会显示输出文件的路径，表明运行成功：</li></ol><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder01.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="示例数据运行结果"></p><p>(2) 运行自己的数据：</p><ul><li>step1：数据准备</li></ul><p>下载氨基酸序列，要求为fasta格式，每个物种一个文件。将所有fasta文件存于一个目录中（如Data目录），如下图所示。文件名要简洁并有区分性，因为文件名会作为最终的物种ID。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder02.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/orthofinder02.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="目录结构与文件准备"></p><ul><li>step2：运行程序</li></ul><p>在Data目录的上一级目录打开终端，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orthofinder -f Data -t 线程数</span><br></pre></td></tr></table></figure><ol start="3"><li>结果解读</li></ol><p>(1) Results Files: Orthogroups</p><p>包含一个主文件“Orthogroups.csv”和两个支持文件：</p><ul><li><p>Orthogroups.csv，每一行为一个group，每一列为一个物种，行列交汇处为基因名称。</p></li><li><p>Orthogroups_UnassignedGenes.csv，包含所有未分配到任何group的基因名称。</p></li><li><p>Orthogroups.txt，OrthoMCL格式的输出结果，内容等同于Orthogroups.csv。</p></li></ul><p>（2）Results Files: Orthogroup Statistics</p><p>包含一些统计数据，可用于比较基因组分析、绘图以及质控。</p><ul><li><p>Statistics_Overall.csv和Statistics_PerSpecies.csv，提供基本的描述信息</p></li><li><p>Orthogroups_SpeciesOverlaps.csv，两两物种的group共享矩阵</p></li><li><p>Species-specific orthogroup：该group仅包含一个物种的基因。</p></li><li><p>G50：group中的基因数，使得50％的基因处于该大小或更大的group中。</p></li><li><p>O50：最小数量的group，使得50％的基因处于该大小或更大的group中。</p></li><li><p>Single-copy orthogroup：每个物种中只有一个基因的group（相当于单拷贝核心基因）。这些group是构建物种树和许多其他分析的理想选择。</p></li><li><p>Unassigned gene：未与任何其他基因划分到一个group的基因。</p></li></ul><p>(3) Results Files: Orthologues</p><p>两两物种间的直系同源基因，每一行为一个group，第一列为group编号，第二列为第一个物种的基因，第三列为第二个物种的基因。同一物种的基因名以“,”分割。直向同源物可以是一对一，一对多或多对多。</p><p>(4) Results Files: Gene Trees and Species Tree</p><p>每个group的基因树和定根的物种树以newick格式输出，可以用各种看树软件展示，如MEGA、iTOL、Dendroscope和FigTree等，个人推荐用iTOL。</p><ol start="4"><li>高级用法</li></ol><p>（1）添加新物种到之前的分析<br>（previous_orthofinder_directory指的是包含“SpeciesIDs.txt”的目录）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orthofinder -b previous_orthofinder_directory -f new_fasta_directory</span><br></pre></td></tr></table></figure><p>（2）从之前的分析中移除物种</p><p>从输出目录下找到工作目录“WorkingDirectory”中的“SpeciesIDs.txt”文件，在要移除的物种那一行最前面加上一个“#”并保存，然后运行（previous_orthofinder_directory指的是包含“SpeciesIDs.txt”的目录）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orthofinder -b previous_orthofinder_directory</span><br></pre></td></tr></table></figure><p>（3）同时添加和删除物种</p><p>编辑好“SpeciesIDs.txt”后，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orthofinder -b previous_orthofinder_directory -f new_fasta_directory</span><br></pre></td></tr></table></figure><p>（4）更多高级功能请阅读官方文档<br>主要包括“Inferring MSA Gene Trees”、并行计算、单独运行BLAST、使用预先计算的BLAST结果以及回归检测。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 同源家族 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为PubMed添加功能</title>
      <link href="/post/94f2.html"/>
      <url>/post/94f2.html</url>
      
        <content type="html"><![CDATA[<p>对于搞科研的小伙伴们来说，PubMed是一个必不可少的文献查阅数据库，然而输入关键字后，出来的文章少则几十篇，多则上百篇。而这些文章的质量却参差不齐，那么如何高效的选择高水平的文章来下载和阅读呢？</br></p><span id="more"></span><p>首先上图，看一下我的PubMed界面：</br><br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/PubMed.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="PubMed"><br></br>从图片中可以看出，文章的影响因子、分区一目了然，甚至提供了全文下载链接，解决了学校图书馆未购买杂志数据库而需付费下载的烦恼。该效果是通过两个谷歌浏览器插件实现的，分别是<a href="https://www.novoprolabs.com/support/articles/pubmedy-a-chrome-extension-for-ncbi-201712191285.html">PubMedy</a>和<a href="https://www.scholarscope.cn/">Scholarscope</a>。前者可以展示影响因子、参考文献格式，并提供全文下载链接；后者可以展示期刊影响因子、领域排名、引用次数及中科院分区。<br></br>这两个插件都可以在谷歌商店中下载，墙内的小伙伴需要想办法科学上网，这里推荐另一款插件——“<a href="https://www.skyzip.de/">skyZIP™ Proxy</a>”。<br></br>插件可以自行搜索下载，也可以加入QQ群（945751012）下载。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PubMed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客导航栏menu无法跳转https</title>
      <link href="/post/377d.html"/>
      <url>/post/377d.html</url>
      
        <content type="html"><![CDATA[<p>Hexo博客部署到github&#x2F;coding后，点击菜单栏menu跳转至http而非https，提示找不到页面。</p><span id="more"></span><p>解决方案：</p><p>修改主题配置文件“_config.yml”，在每一个menu的路径后面（url那一行）加一条正斜线，重新部署即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line"></span><br><span class="line"><span class="comment"># index</span></span><br><span class="line"></span><br><span class="line">  - title: 首页</span><br><span class="line"></span><br><span class="line">    icon: home</span><br><span class="line"></span><br><span class="line">    url: /</span><br><span class="line"></span><br><span class="line">  <span class="comment"># archives</span></span><br><span class="line"></span><br><span class="line">  - title: 归档</span><br><span class="line"></span><br><span class="line">    icon: archive</span><br><span class="line"></span><br><span class="line">    url: archives/</span><br><span class="line"></span><br><span class="line">  <span class="comment"># categories</span></span><br><span class="line"></span><br><span class="line">  - title: 分类</span><br><span class="line"></span><br><span class="line">    icon: list</span><br><span class="line"></span><br><span class="line">    url: categories/</span><br><span class="line"></span><br><span class="line">  <span class="comment"># tags</span></span><br><span class="line"></span><br><span class="line">  - title: 标签</span><br><span class="line"></span><br><span class="line">    icon: tags</span><br><span class="line"></span><br><span class="line">    url: tags/</span><br><span class="line"></span><br><span class="line">  <span class="comment"># about</span></span><br><span class="line"></span><br><span class="line">  - title: 关于我</span><br><span class="line"></span><br><span class="line">    icon: user</span><br><span class="line"></span><br><span class="line">    url: /about/</span><br><span class="line"></span><br><span class="line">  <span class="comment"># archives</span></span><br><span class="line"></span><br><span class="line">  - title: 留言板</span><br><span class="line"></span><br><span class="line">    icon: comments</span><br><span class="line"></span><br><span class="line">    url: Message/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网站建设 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows 10 中文乱码解决方案</title>
      <link href="/post/c78e.html"/>
      <url>/post/c78e.html</url>
      
        <content type="html"><![CDATA[<p>安装的英文原版系统，导致多数中文乱码，即便是安装了中文语言包，如果设置错误，仍旧无法正确显示中文。</p><span id="more"></span><p>进入正题，按如图所示一步步完成设置，重启系统便可解决问题。我的系统是18845.1001版本，其他版本应该不会差别太大。</p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_1.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="通过开始菜单进入控制面板"></p><center>通过开始菜单进入控制面板</center><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="日期、时间和区域格式设置"></p><center>日期、时间和区域格式设置</center><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_3.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="下拉相关设置"></p><center>下拉相关设置</center><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_4.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="选择区域"></p><center>选择区域</center><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_5.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="管理-更改系统区域设置"></p><center>管理-更改系统区域设置</center><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_6.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="设置为中文，不要选择Beta版"></p><center>设置为中文，不要选择Beta版</center><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_7.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/news/control_panel_7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="复制设置"></p><center>复制设置</center>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言自定义坐标轴排序</title>
      <link href="/post/f94b.html"/>
      <url>/post/f94b.html</url>
      
        <content type="html"><![CDATA[<p>R语言作图时，默认情况下软件会按照自己的方式对坐标轴的项目进行排序，然而这种排序往往不是我们所希望的，因此需要想办法让坐标轴的项目按照我们希望的顺序输出。</p><span id="more"></span><p>如下所示，我有两列数据，要绘制箱线图，以第一列为Y轴，第二列为X轴，希望X轴的输出顺序按照第二列由上到下排列。</br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">size    <span class="built_in">type</span></span><br><span class="line">6.612309456    T-8</span><br><span class="line">5.878857613    T-10</span><br><span class="line">6.724282265    T-15</span><br><span class="line">5.68136692    T-56</span><br><span class="line">5.863334656    T-1723</span><br></pre></td></tr></table></figure><p></br>然而软件输出的顺序如下：</br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T-10    T-15    T-1723    T-56    T-8</span><br></pre></td></tr></table></figure><p>解决方案：</br></p><p>通过一个因子事先自定义X轴顺序，作图命令如下：</br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#读入数据</span></span><br><span class="line">gsize &lt;- read.delim(<span class="string">&quot;gsize.txt&quot;</span>, header=TRUE, sep=<span class="string">&quot;\t&quot;</span>, stringsAsFactors=FALSE)</span><br><span class="line"><span class="comment">#自定义X轴顺序</span></span><br><span class="line">x1 = <span class="built_in">factor</span>(gsize<span class="variable">$type</span>, levels=c(<span class="string">&quot;T-8&quot;</span>,<span class="string">&quot;T-10&quot;</span>,<span class="string">&quot;T-15&quot;</span>,<span class="string">&quot;T-56&quot;</span>,<span class="string">&quot;T-1723&quot;</span>))</span><br><span class="line"><span class="comment">#用x1代替gsize$type绘图</span></span><br><span class="line">boxplot(size~x1, data=gsize, xlab=<span class="string">&quot;Sequence Type&quot;</span>, ylab=<span class="string">&quot;Genome Size&quot;</span>, varwidth=TRUE, notch=FALSE)</span><br></pre></td></tr></table></figure><p></br>至此，X轴各项目会按照我们自定义的顺序排列。</p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R语言 </tag>
            
            <tag> 绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取下一版本的内部预览版windows系统</title>
      <link href="/post/aa20.html"/>
      <url>/post/aa20.html</url>
      
        <content type="html"><![CDATA[<p>Windows内部预览版系统快速通道已经关闭，但是可以通过修改注册表以获取下一个版本的Windows。</p><span id="more"></span><ol><li><p>首先，您必须已经是Windows Insider才能利用这一技巧。 如果您是Windows Insider，点击“设置”→“更新和安全”→“Windows预览体验计划”，将“你希望接收哪类内容”一项设置为“跳到下一个Windows版本”。注意：调整完该选项时请保持窗口不动，即不要关闭也不要切换其他面板；</p></li><li><p>启动注册表编辑器（点击开始菜单左下角搜索框，输入“regedit”进入注册表编辑器）， 找到：</p></li></ol><p>HKEY_LOCAL_MACHINE\SOFTWARE \Microsoft\WindowsSelfHost\UI\Selection</p><p>双击“UIContentType”并将其更改为“Skip”。 然后，您应该找到“UIRing”并将其更改为“WIF”。</p><ol start="3"><li>然后找到：</li></ol><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsSelfHost\Applicability</p><p>将“Ring”的值改为“WIF”，“Content Type”和ContentBackup的值更改为“Skip”。</p><ol start="4"><li><p>退回“Windows预览体验计划”面板，随便点击一个标签再切换回来，如果打开后依旧固定在“跳到下一个Windows版本”选项，即代表上车成功！<br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Skip用户"></p><center>Skip用户</center></li><li><p>点击“Windows更新”→“检查更新”，获取新版本系统<br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user2.png" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/skip_user2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Skip用户的更新界面"></p><center>Skip用户的更新界面</center></li></ol>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用wget批量下载含有链接的文件/目录</title>
      <link href="/post/43504.html"/>
      <url>/post/43504.html</url>
      
        <content type="html"><![CDATA[<p>本文讲述了如何利用Linux下载工具wget根据链接批量下载文件或者目录。</p><span id="more"></span><p>wget 为Linux自带的下载工具，windows下也可以安装</p><p><strong>一：windows下安装wget：</strong></p><ol><li>安装Chocolatey<br>方案A：以管理员身份运行cmd.exe<br>输入：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@<span class="string">&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot;</span> -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command <span class="string">&quot;iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))&quot;</span> &amp;&amp; SET <span class="string">&quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;</span></span><br></pre></td></tr></table></figure><p>回车等待安装完成。</p><p>方案B：PowerShell用户输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))</span><br></pre></td></tr></table></figure><p>测试是否安装成功，在命令行中输入“choco”看到help信息表明安装成功。</p><ol start="2"><li>安装wget</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install wget</span><br></pre></td></tr></table></figure><p>升级wget</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco upgrade wget</span><br></pre></td></tr></table></figure><p><strong>二、用wget下载数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -r -c -nH -nc --cut-dirs=3 -i file_contain_url_lists </span><br></pre></td></tr></table></figure><p>-i file_contain_url_lists：含有文件&#x2F;目录链接的文件，每个链接一行</p><p>-nc：不覆盖已下载的文件</p><p>-c：断点续传</p><p>–cut-dirs&#x3D;3：忽略 NUMBER层远程目录</p><p>-nH：不创建主机目录</p><p>-r：递归下载</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kSNP3寻找SNPs并构建进化树</title>
      <link href="/post/44606.html"/>
      <url>/post/44606.html</url>
      
        <content type="html"><![CDATA[<p>kSNP3可以利用reads、draft genomes或complete genomes寻找SNPs，并构建进化树。操作比较简单，小白比较容易上手。</p><span id="more"></span><p><strong>1. kSNP3 安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/tools</span><br><span class="line"></span><br><span class="line">wget https://sourceforge.net/projects/ksnp/files/kSNP3.1_Linux_package.zip</span><br><span class="line"></span><br><span class="line">unzip kSNP3.1_Linux_package.zip</span><br><span class="line"></span><br><span class="line"><span class="comment">#加入环境变量：</span></span><br><span class="line"></span><br><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line">i</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/tools/kSNP3.1_Linux_package/kSNP3</span><br><span class="line"></span><br><span class="line">ESC</span><br><span class="line"></span><br><span class="line"><span class="built_in">shift</span> + ：</span><br><span class="line"></span><br><span class="line">wq!</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>编辑主程序kSNP3的第8行：</p><p>将 set kSNP&#x3D;&#x2F;usr&#x2F;local&#x2F;kSNP3</p><p>改为：set kSNP&#x3D;&#x2F;home&#x2F;lhl&#x2F;tools&#x2F;kSNP3.1_Linux_package&#x2F;kSNP3</p><p>注：根据自己的路径进行修改</p><p><strong>2. 基本用法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将所有的基因组文件放于988_ksnp目录之中，在其上一级目录下运行命令创建输入列表：</span></span><br><span class="line"></span><br><span class="line">MakeKSNP3infile 988_ksnp inlist A</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行命令创建输入序列集合：</span></span><br><span class="line"></span><br><span class="line">MakeFasta inlist fastainput_988</span><br><span class="line"></span><br><span class="line"><span class="comment">#计算最佳K值：</span></span><br><span class="line"></span><br><span class="line">Kchooser fastainput_988</span><br><span class="line"></span><br><span class="line"><span class="comment">#寻找SNPs并构建进化树：</span></span><br><span class="line"></span><br><span class="line">kSNP3 -<span class="keyword">in</span> inlist -outdir SNPs_20181214 -k 23 -ML -NJ -vcf  -CPU 30 -core -min_frac 0.5 |<span class="built_in">tee</span> Log_988_20181214.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SNPs </tag>
            
            <tag> 进化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根据基因组预测表型 —— traitar的安装与使用</title>
      <link href="/post/30650.html"/>
      <url>/post/30650.html</url>
      
        <content type="html"><![CDATA[<p>Traitar 用于从基因组序列中提取表型，它提供了表型分类器，可以预测与碳和能源使用、氧气需求、形态学、抗生素易感性、蛋白水解和酶活性等有关的67个性状。</p><span id="more"></span><p>1. 软件安装——<a href="https://github.com/hzi-bifo/traitar" target="_blank">traitar</a></p><p>安装基本依赖：</p><blockquote><p>sudo apt-get install python-scipy python-matplotlib python-pip python-pandas</p></blockquote><p>进入要安装软件的目录，我的为家目录下的tools：</p><blockquote><p>cd ~/tools</p></blockquote><p>=======================================================</p><p>安装主程序到家目录下</p><blockquote><p>pip install traitar --user</p></blockquote><p>将添加到环境变量中：</p><blockquote><p>vim ~/.zshrc</p><p>i</p></blockquote><p>文档末尾添加：</p><p>PATH=$PATH:$HOME/.local/bin/</p><p>ESC</p><blockquote><p>shift + :</p></blockquote><blockquote><p>wq!</p></blockquote><blockquote><p>source ~/.zshrc</p></blockquote><p>安装依赖软件（parallel， prodigal， hmmer）</p><blockquote><p>sudo apt-get install parallel prodigal hmmer</p></blockquote><p>下载pfam数据库到家目录下并建库</p><blockquote><p>traitar pfam ~/</p></blockquote><p>也可以手动下载pfam数据库（如果上一条不出错可以不运行后面的几条命令）：</p><blockquote><p>cd ~/</p></blockquote><p>官方提供的为Pfam27.0，我下载的为最新的Pfam32.0（下面两个命令选一个运行即可）：</p><blockquote><p>wget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam27.0/Pfam-A.hmm.gz</p></blockquote><blockquote><p>wget ftp://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam32.0/Pfam-A.hmm.gz</p></blockquote><p>将Pfam-A.hmm.gz解压缩，然后运行下面的命令建库：</p><blockquote><p>traitar pfam --local ~/</p></blockquote><p>软件运行出错的话：</p><p>错误提示：ImportError: C extension: numpy.core.multiarray failed to import not built. If you want to import pandas from the source directory, you may need to run 'python setup.py build_ext --inplace --force' to build the C extensions first.</p><p>运行：</p><blockquote><p>conda install -c conda-forge numpy</p></blockquote><p>错误提示：AttributeError: 'DataFrame' object has no attribute 'sort'</p><p>pandas降级：</p><blockquote><p>conda install pandas=0.19.2</p></blockquote><p>错误提示：Python的最大递归深度错误 “maximum recursion depth exceeded while calling a Python object”</p><p>编辑脚本（~/miniconda3/lib/python2.7/site-packages/scipy/cluster/hierarchy.py），第183行加入两行，将默认的1000改大，比如2000（因为我有1000多个基因组）</p><blockquote><p>import sys</p></blockquote><p>#print sys.getrecursionlimit()</p><blockquote><p>sys.setrecursionlimit(2000)</p></blockquote><p>错误提示：RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility</p><blockquote><p>pip uninstall -y scipy scikit-learn</p><p>pip install --no-binary scipy scikit-learn</p></blockquote><hr><p>2. 软件使用</p><p>首先进入含有基因组文件目录的上一级目录，输入命令执行：</p><blockquote><p>traitar phenotype &lt;in dir&gt; &lt;sample file&gt; from_nucleotides &lt;out_dir&gt; -c 2</p></blockquote><p>&lt;in dir&gt;：包含基因组的输入目录</p><p>&lt;sample file&gt;：描述文件，置于&lt;in dir&gt;的父目录下。共3列，第一列为基因组文件的全名（包含文件扩展名），第二列为菌株名称（一般为第一列去掉扩展名，可随意更改），第三列为分组信息（可以将所有的菌株划分到不同的组别）。三列之间以制表符分隔。三列的抬头为“sample_file_name      sample_name       category”，如下面文本框所示：</p><blockquote><p>sample_file_namesample_namecategory</p><p>1457190.3.RefSeq.faaListeria_ivanovii_WSLC3009environment_1</p><p>525367.9.RefSeq.faaListeria_grayi_DSM_20601environment_2</p></blockquote><p>&lt;out_dir&gt;：结果输出目录</p><p>-c 2：使用两个线程运行，提高预测速度</p><p><br></p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="https://upload-images.jianshu.io/upload_images/11790868-82b7bc9d8c442804.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="https://upload-images.jianshu.io/upload_images/11790868-82b7bc9d8c442804.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption">文件存放示意图</div></div><p>我的命令（在phenotype目录下，使用4个线程运行）：</p><blockquote><p>traitar phenotype scaffolds samplefile.txt from_nucleotides output -c 4</p></blockquote><div class="image-package"><img class="uploaded-img lazyload placeholder" src="https://upload-images.jianshu.io/upload_images/11790868-132fcd1bdd4eb6ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="https://upload-images.jianshu.io/upload_images/11790868-132fcd1bdd4eb6ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5192078/pdf/mSystems.00101-16.pdf" target="_blank">软件工作流程</a></div></div><p><br></p><hr><h2>输出效果图：<br></h2><div class="image-package"><img class="uploaded-img lazyload placeholder" src="https://upload-images.jianshu.io/upload_images/11790868-9aee151bc9b10869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="https://upload-images.jianshu.io/upload_images/11790868-9aee151bc9b10869.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption">输出效果图_combined</div></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="https://upload-images.jianshu.io/upload_images/11790868-e1661fe61c8e5783.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="https://upload-images.jianshu.io/upload_images/11790868-e1661fe61c8e5783.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption">输出效果图_phypat</div></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="https://upload-images.jianshu.io/upload_images/11790868-7793acf090cb7d72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="https://upload-images.jianshu.io/upload_images/11790868-7793acf090cb7d72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption">输出效果图_phypat+PGL</div></div><p><br></p><hr><p>引用 Traitar</p><p>If you use Traitar in your research, please cite our paper:</p><p><b>From genomes to phenotypes: Traitar, the microbial trait analyzer</b></p><p>Aaron Weimann, Kyra Mooren, Jeremy Frank, Phillip B Pope, Andreas Bremges, Alice C McHardy</p><p><i>mSystem</i> (2016) doi:<a href="http://dx.doi.org/10.1128/mSystems.00101-16" target="_blank">10.1101/043315</a></p><p><br></p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 表型预测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物信息学3：微生物基因组学常用软件安装</title>
      <link href="/post/10877.html"/>
      <url>/post/10877.html</url>
      
        <content type="html"><![CDATA[<p>本文详细介绍了Linux各发行版通用的几种软件安装方案，并有实例，主要是微生物基因组学常用软件的安装。</p><span id="more"></span><p><strong>一、Linux 安装软件的常用方法：</strong><br>（1）将可执行程序加入环境变量</p><p>一些软件包内包含的是可执行程序，不需要进行编译，这类程序可以在软件目录中通过终端“.&#x2F;主程序名”命令运行。所以可以将主程序所在的目录加入到环境变量中即可。常见的环境变量配置文件包括家目录下的“zshrc”、“bashrc”以及&#x2F;etc目录下的“profile”。</p><p>（2）创建可执行程序的软连接到已在环境变量的目录下</p><p>可以视为方法一的另一种实现策略，通过“ln -s A B”进行创建，软连接可以理解为Windows下的快捷方式。A为主程序的绝对路径（包含主程序名称），B为目标路径，即放置软件快捷方式的地方（包含主程序名），一般可存于“&#x2F;usr&#x2F;loacl&#x2F;bin”下。</p><p>（3）源码配置编译及安装</p><p>特点为解压源码包之后，存在“configure”文件，一般分三步安装，即在软件目录下打开终端，依次运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>（4）通过源进行安装</p><p>不同的Linux发行版含有不同的源和软件安装工具，只要联网，一条命令即可安装源中含有的软件。</p><p>Ubuntu可以通过“sudo apt-get install 程序名”进行安装</p><p>Centos可以通过“sudo yum install 程序名”进行安装</p><blockquote>注：前三种方法适合任意Linux发行版，安装软件前可以先通过方法4进行，若源中不包含此软件再用前三种方法。</blockquote><p><strong>二、软件下载及存储</strong><br>首先在Home目录下创建Tools目录，所有下载的软件均存放于tools目录之下，此处我的家目录为“manager”，即我软件存放目录为“&#x2F;home&#x2F;manager&#x2F;Tools”。</p><p><strong>三、软件安装</strong><br><strong>1. ABySS</strong></p><p>首先安装依赖包：</p><p>Open MPI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf openmpi-4.0.0.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> openmpi-4.0.0</span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">sudo make all install</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><p>Git（可以不安装）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev git</span><br></pre></td></tr></table></figure><p>sparsehash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/sparsehash/sparsehash.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> sparsehash</span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><p>ABySS</p><p>首先删除旧版本（Bio-Linux自带的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove abyss</span><br><span class="line"></span><br><span class="line">tar zxvf abyss-2.1.4.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> abyss-2.1.4</span><br><span class="line"></span><br><span class="line">wget http://downloads.sourceforge.net/project/boost/boost/1.56.0/boost_1_56_0.tar.bz2</span><br><span class="line"></span><br><span class="line">tar jxf boost_1_56_0.tar.bz2</span><br><span class="line"></span><br><span class="line">./configure --enable-maxk=160 --with-mpi=/usr/local/lib/openmpi</span><br><span class="line"></span><br><span class="line"><span class="comment">#（注：openmpi的路径用“whereis openmpi”寻找）</span></span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>不能多线程运行时（np&#x3D;2），错误提示为“&#x2F;usr&#x2F;local&#x2F;bin&#x2F;mpirun: error while loading shared libraries: libopen-rte.so.40: cannot open shared object file: No such file or directory”，则需运行如下命令解决。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><p><strong>2. SPAdes</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf SPAdes-3.13.0-Linux.tar.gz</span><br><span class="line"></span><br><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="variable">$HOME</span>/Tools/SPAdes-3.13.0-Linux/bin<span class="comment">#(加入环境变量)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p><strong>3. prokka</strong></p><p>先安装依赖</p><p>aragorn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line">i<span class="comment">#(进入插入模式），在文末建立新的一行</span></span><br><span class="line"></span><br><span class="line">输入：</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/Tools/prokka/aragorn.1.2.38</span><br><span class="line"></span><br><span class="line">esc <span class="comment">#(退出插入模式）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">shift</span> + :</span><br><span class="line"></span><br><span class="line">wq! <span class="comment">#(w,write; q,quit, !强制）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc </span><br></pre></td></tr></table></figure><p>barrnap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line">i</span><br><span class="line"></span><br><span class="line"><span class="variable">$HOME</span>/Tools/prokka/barrnap-0.6/bin</span><br><span class="line"></span><br><span class="line">esc</span><br><span class="line"></span><br><span class="line"><span class="built_in">shift</span> + :</span><br><span class="line"></span><br><span class="line">wq!</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>tbl2asn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除旧版本：</span></span><br><span class="line">sudo <span class="built_in">rm</span> -f /usr/bin/tbl2asn</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装新版本。解压，把主程序的名称改为 tbl2asn</span></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">ln</span> -s /home/manager/Tools/prokka/tbl2asn /usr/local/bin/tbl2asn</span><br></pre></td></tr></table></figure><p>minced</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压，进入程序所在的目录中</span></span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">ln</span> -s /home/manager/Tools/prokka/minced-master/minced /usr/local/bin/minced</span><br></pre></td></tr></table></figure><p>parallel</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压缩，进入目录</span></span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>prodigal</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压缩，进入目录</span></span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>signalp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压缩，用文本编辑器打开signalp主程序，改路径（第13行），并保存：</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ENV</span>&#123;SIGNALP&#125; = <span class="string">&#x27;/home/manager/Tools/prokka/signalp-4.1&#x27;</span>;</span><br><span class="line"></span><br><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="variable">$HOME</span>/Tools/prokka/signalp-4.1</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>rnammer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压后进入文件夹，用文本编辑器打开rnammer主程序，修改第35行路径如下：</span></span><br><span class="line"></span><br><span class="line">my <span class="variable">$INSTALL_PATH</span> = <span class="string">&quot;/home/manager/Tools/prokka/rnammer-1.2.src&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过whereis hammsearch命令查看其所在路径，修改第50行和53行，如下：</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$HMMSEARCH_BINARY</span> = <span class="string">&quot;/usr/bin/hmmsearch&quot;</span>;</span><br><span class="line"></span><br><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="variable">$HOME</span>/Tools/prokka/rnammer-1.2.src</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>prokka</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="variable">$HOME</span>/Tools/prokka/prokka-1.12/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line">prokka --setupdb</span><br></pre></td></tr></table></figure><ol start="4"><li>Parsnp</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/marbl/parsnp/releases/download/v1.2/parsnp-Linux64-v1.2.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvf parsnp-Linux64-v1.2.tar.gz</span><br><span class="line"></span><br><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="variable">$HOME</span>/Tools/Parsnp-Linux64-v1.2<span class="comment">#(加入环境变量)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc </span><br></pre></td></tr></table></figure><ol start="5"><li>roary（blast+, fasttree）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install bedtools cd-hit ncbi-blast+ mcl parallel cpanminus prank mafft fasttree</span><br><span class="line"></span><br><span class="line">sudo cpanm -f Bio::Roary</span><br><span class="line"></span><br><span class="line"><span class="comment">#出错的话运行：</span></span><br><span class="line"></span><br><span class="line">sudo cpan -f Bio::Roary</span><br></pre></td></tr></table></figure><ol start="6"><li>RAxML</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> standard-RAxML-master </span><br><span class="line"></span><br><span class="line">make -f Makefile.gcc</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">ln</span> -s /home/manager/Tools/standard-RAxML-master/raxmlHPC /usr/local/bin/raxmlHPC</span><br></pre></td></tr></table></figure><ol start="7"><li>Prottest</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install prottest</span><br></pre></td></tr></table></figure><ol start="8"><li>jModelTest</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install jmodeltest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我校师生于南昌开设2018年微生物基因组学培训班</title>
      <link href="/post/49046.html"/>
      <url>/post/49046.html</url>
      
        <content type="html"><![CDATA[<p>摘要：11月28-30日，在华中农业大学生命科学技术学院孙明教授的支持下，信息学院郑金水副教授携刘华林及解传帅博士于江西师范大学义务开设“2018年微生物基因组学培训班”。来自国内40多家单位的200多位零基础学员打破了对Linux的恐惧，了解了如何利用生物信息学手段推动自己的科研进展。</p><span id="more"></span><p>2018年11月28日至30日，“第七届全国微生物基因组学学术研讨会”前夕，在生命科学技术学院孙明教授的支持下，信息学院郑金水副教授带领刘华林及解传帅两位博士，在江西师范大学白鹿会馆义务开设了“2018年微生物基因组学培训班”。来自全国40多家单位的200多位零基础的老师及同学参加了课程培训。</br><br>正式开班之前，孙明老师实验室的博士生刘华林在线指导学员们进行虚拟机及Bio-Linux系统的安装调试。28日下午孙明老师在开班仪式上做了题为“BMB利用和开发微生物基因组学历程”的报告，为大家讲述了微生物基因组学在课题组的科研工作中所发挥的重要作用。随后刘华林与解传帅博士现场指导学员们进行生物信息学软件的安装。29日和30日，郑金水老师通过实例为学员门讲解现代测序技术和Linux&#x2F;Dos的基础，微生物基因组的拼接与注释，基因组学研究中简单挖掘工具的使用方法，序列比对和系统发育分析。</br><br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/49046_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/49046_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="学员们学习信息学软件安装"></p><center>学员们学习信息学软件安装</center><p></br>本次培训有两大亮点：第一，参与本次培训的成员中，老师占三分之一以上，尤其是一些年纪较长的老师亲自参加培训，从头至尾表现出极大的耐心；第二，所有学员学习热情高涨，直到30日下午培训结业之时，会堂依然座无虚席。</br><br>课后，很多学员对授课老师们的付出表示感谢，来自军科院的刘老师表示：“之前上过一些公司的培训班，讲的是公司能够做什么，而本次培训班讲到的是学员们自己能够做什么”。来自南京农业大学的聂挺同学回到学校后提起这次培训课，发现院里很多同学也想参加培训，并咨询何时再次开班。除了软件的使用之外，很多学员也希望授课老师们对自己的课题提出意见与指导，均得到了耐心的回答。</br></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/49046_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/49046_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="2018年全国微生物基因组学培训班合影"></p><p>本次培训得到了中国微生物协会与江西师范大学的大力支持，尤其是江西师范大学的龙中儿院长、黄运红副院长和杨慧林博士带领的团队为此次培训的圆满成功提供了保障。</p>]]></content>
      
      
      <categories>
          
          <category> 活动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 培训 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物信息学2：VirtualBox虚拟机及Bio-Linux安装</title>
      <link href="/post/9.html"/>
      <url>/post/9.html</url>
      
        <content type="html"><![CDATA[<p>前言：<a href="https://www.jianshu.com/p/2f765a81e7dd" target="_blank">上一篇</a>文章讲到了利用Vmware虚拟机加载Bio-Linux，但有的小伙伴表示Vmware无法安装，也未见有效的错误提示，因此推荐第二款常用的老牌虚拟机软件——VirtualBox。</p><span id="more"></span><p>1. <a href="https://www.virtualbox.org/" target="_blank">VirtualBox</a>下载与安装。</p><p>    该软件的安装比较简单，双击后根据提示一步步往下走即可。安装完毕后打开软件。</p><p><br></p><hr><p>2. 导入及配置Bio-Linux</p><p>（1）依次点击菜单栏的 “管理”——“导入虚拟电脑”</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-571d4d7ddba3e076.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption">Figure 1 导入虚拟电脑1</div></div><p>（2）在弹出的窗口中选择下载的 “Bio-Linux-8.0.7.ovf”进行导入</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-a6c955cec07389b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-a6c955cec07389b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption">Figure 2 选择系统文件</div></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-ce38f58eb9d87d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-ce38f58eb9d87d98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption">Figure 3 准备导入虚拟电脑</div></div><p>（3）虚拟电脑导入设置：此处有三项可以设置，分别是处理器的数量、内存大小和最后面的虚拟硬盘位置。前两者根据自己的电脑配置情况进行设置，硬盘位置一定要选择剩余容量大于50-60G的分区。点击“导入”等待完成即可，此时电脑可能会断网，重新连接一下即可。</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-bbda5c1ad0811dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-bbda5c1ad0811dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 4 处理器及内存设置</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-140370931dbc3b86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-140370931dbc3b86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 5 虚拟硬盘位置自设</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-5b261a13f79e7291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-5b261a13f79e7291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 6 等待虚拟电脑导入完毕</div></p></div><p>（4）鼠标单击导入完成的系统，菜单栏的 “设置”变成彩色可点击状态，点击进行系统设置。所有设置按如下5图（Figure 7-Figure 11）进行。</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-7136bffed8701961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-7136bffed8701961.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 7 粘贴板与拖放共享</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-520fee7dd398e306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-520fee7dd398e306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 8 存储控制 器输入输出</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-ca76c38fb47dc821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-ca76c38fb47dc821.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 9 开启固态驱动器</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-75ccf98fbbf97d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-75ccf98fbbf97d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 10 显存设置（根据配置自设大小）</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-333bd34368d9b4ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-333bd34368d9b4ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 11 创建虚拟光盘</div></p></div><p>（5）保存设置后，启动系统。</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-f26c49cedf490ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-f26c49cedf490ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 12 启动虚拟电脑</div></p></div><p>（6）进入系统后不需要更新，可以通过浏览器测试是否可以上网。</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-6e83ecb2661fc193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-6e83ecb2661fc193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 13 系统启动完成</div></p></div><p>（7）安装增强功能，参照如下4图（Figure12-Figure 15）</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-ba16243bb4520ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-ba16243bb4520ca3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 14 安装增强功能1</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-1626909ed7b36761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-1626909ed7b36761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 15 安装增强功能2</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-83e661db9b1fde93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-83e661db9b1fde93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 16 安装增强功能3（密码：manager）</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-0e3aa0b41841928b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-0e3aa0b41841928b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 17 安装增强功能4（输入yes回车）</div></p></div><p>（8）提示按 “Press Return to close this window ...”的时候按一下回车键即可，重启Linux。</p><h3>问题：目前无法实现从windows到虚拟机的文件拷贝，暂时未找到解决方案，可通过共享文件夹解决。</h3><p>(9)共享文件夹设置</p><p>通过设置共享文件夹可以实现windows和虚拟机之间的同步，而不需要复制粘贴。</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-8032463856bf4c85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-8032463856bf4c85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 18 共享文件夹设置1</div></p></div><p>        点击右上角的 “文件夹+”图标，选择共享文件夹路径（windows上的一个文件夹），共享文件夹名称会自动分配，勾选 “自动挂载” 和 “固定分配”。</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-ead5f24448be0c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-ead5f24448be0c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 19 共享文件夹设置2</div></p></div><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-054fbf18099da74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-054fbf18099da74d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 20 共享文件夹设置3</div></p></div><p>        设置完成后重启Linux系统，打开目录，即可看到共享文件夹 “sf_softwares”。若不成功可重新安装增强功能并重启。</p><div class="image-package"><img class="uploaded-img lazyload placeholder" src="http://upload-images.jianshu.io/upload_images/11790868-6dfe1cdbe1153fd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-6dfe1cdbe1153fd6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" width="auto" height="auto"><br><div class="image-caption"><p>Figure 21 共享文件夹设置4</div></p></div><p>以上为基于VirtualBox 的 Bio-Linux配置，有问题的可以在下方留言，统一解答。</p>]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生物信息学1：VMware虚拟机及Bio-linux安装与配置</title>
      <link href="/post/19824.html"/>
      <url>/post/19824.html</url>
      
        <content type="html"><![CDATA[<h4>前言：大家按照步骤从头看到尾，末尾有常见错误解决办法，如果有其他问题，大家先看错误提示，根据提示自行百度，很多问题都可以得到解决，实在解决不了的可以问我，谢谢！</h4><span id="more"></span><p></p><p></p><h4><b>找我远程的，先</b>下载一个teamviewer，账号密码发我QQ！</h4><p></p></blockquote><h4><b>一、虚拟机安装（VMware）</b></h4><p><b>（1）下载 <a href="http://download3.vmware.com/software/wkst/file/VMware-workstation-full-15.0.1-10737736.exe" target="_blank">VMware</a></b></p><p>        32位系统请下载<a href="http://www.uzzf.com/soft/65978.html" target="_blank">VMware10</a></p><p><b>（2）安装 VMware：根据提示安装即可。</b></p><p><b>        许可证</b>（来自 <a href="https://www.nocmd.com/740.html" target="_blank">https://www.nocmd.com/740.html</a>）：</p><p>        ZC10K-8EF57-084QZ-VXYXE-ZF2XF</p><p>        UF71K-2TW5J-M88QZ-8WMNT-WKUY4</p><p>        AZ7MK-44Y1J-H819Z-WMYNC-N7ATF</p><p>        CU702-DRD1M-H89GP-JFW5E-YL8X6</p><p>        YY5EA-00XDJ-480RP-35QQV-XY8F6</p><p>        VA510-23F57-M85PY-7FN7C-MCRG0</p><p><b>（3）工作区配置</b></p><p>        依次点击菜单栏中的“Edit”——“Preferences”，打开设置窗口。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-2a735eb4a37c7f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-2a735eb4a37c7f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 1 工作区配置1</div></div><p>        选择左侧的“工作区”，右侧“Browse”，选择系统镜像存放位置，注意选择剩余空间大于60G的分区。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-af6ce78c2a7b7457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-af6ce78c2a7b7457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 2 工作区配置2</div></div><hr><h4><b>二、Bio-linux安装与配置</b></h4><p><b>（1）下载：</b></p><p>安装版：<a href="http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.iso" target="_blank">http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.iso</a></p><p>虚拟机版：<a href="http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.ova" target="_blank">http://nebc.nerc.ac.uk/downloads/bio-linux-8-latest.ova</a></p><blockquote><p><b>注：</b>虚拟机版不需要安装，可直接导入虚拟机，大部分用户可选择此版本。如果想装双系统，可以下载安装版。以下讲到的均以虚拟机版为例。</p></blockquote><blockquote><p><b>        首先检查ova文件的完整性，即验证MD5值，用群里的“MD5批量校验工具”。bio-linux-8-latest.ova 正确的MD5值为“4c3b5aea740f5334d9775cc31533a387”，若不对应，表明下载错误，需重新下载。</b></p></blockquote><p><b>（2）系统导入虚拟机</b></p><p>        若下载的是压缩文件，则解压缩，解压缩后进入文件夹，右击“Bio-Linux-8.0.7.ovf”，选择“VMware Player”打开。</p><p>        若下载的是.ova后缀的，则直接导入虚拟机即可，不需要解压。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-d77bd01708c5c312.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-d77bd01708c5c312.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 3 导入系统</div></div><p>        选择剩余空间比较大的分区作为存放路径，然后导入。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-62d48c257aba00cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-62d48c257aba00cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 4 选择系统存放路径</div></div><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-d6abdb679af2cbe0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-d6abdb679af2cbe0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 5 等待系统导入</div></div><p><b>（3）虚拟机配置</b></p><p>        导入完成后会自动打开“VMware Workstation Player”，左侧选择刚导入的“Bio-Linux-8.0.7”，右侧选择“编辑虚拟机设置”。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-b12838b49940089f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-b12838b49940089f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 6 进入虚拟机设置</div></div><p>        左侧“硬件”选项卡中选择“内存”，右侧可输入或者托选内存的大小。此处根据自己电脑的内存大小而设置，大部分电脑的内存为4G，此处可以设为2G。内存大的电脑可适当增加此值。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-13e86567a1c3d1a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-13e86567a1c3d1a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 7 内存设置</div></div><p>        处理器内核数量亦需根据自己的电脑配置而设置。双核四线程的可以设置为2，四核八线程的可以设置为4.建议设置为2的整数倍。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-6ed7759fc7c4a2fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-6ed7759fc7c4a2fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 8 处理器设置</div></div><p>        网络适配器按照下图所示设置，启动系统后可通过浏览器检测是否可以上网,若不能上网，可以设置为“NAT模式”。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-6a517339f86d6aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-6a517339f86d6aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 9 网络设置</div></div><p><b>（4）启动 Bio-Linux</b></p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-d7bea03f01ddced8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-d7bea03f01ddced8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 10 播放虚拟机</div></div><blockquote><p>注：启动错误，需要手动开启 “VMware Authorization Service”。</p></blockquote><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-78481c384ff49df5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-78481c384ff49df5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 11 播放错误</div></div><p>        按照如下3图所示，手动开启 “VMware Authorization Service”。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-d2342fb3b84f389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-d2342fb3b84f389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 12 搜索Services</div></div><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-0d5c9228a7e4bc8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-0d5c9228a7e4bc8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 13 右键选择“开启”</div></div><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-57f38df1e9a13554.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-57f38df1e9a13554.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 14 依旧报错</div></div><p>        如果报“6000009”错误，尝试重新安装 “VMware Workstation”（新安装的用户一般不会出现上述错误）。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-6d8fe325a8ee6b61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-6d8fe325a8ee6b61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 15 更新 “VMware Workstation Player”</div></div><p><b>（5）全屏显示</b></p><p>        系统启动后，默认为小窗口显示，不便于操作，点击菜单栏上的“全屏”按钮，以便全屏显示。若无法全屏，则需要安装 “VMware-tools”。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-8789d5887344b994.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-8789d5887344b994.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 7 全屏</div></div><p><b>（6）安装 VMware-tools</b></p><p>        如下图所示依次点击，未曾安装过VMware Tools时会显示“安装VMware Tools”。点击之后按照提示下载。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-48519484db56bd57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-48519484db56bd57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 8 启动 VMware Tools安装</div></div><p>        下载后，打开文件管理，左侧的“Devices”下多出一个“VMware tools”，点击后在右侧窗口可以看到 “VMware Tools-*.tar.gz”，此压缩包便是安装文件。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-c500f096f70c4517.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-c500f096f70c4517.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 9 VMware tools安装包</div></div><p>        将 “VMware Tools-*.tar.gz”压缩包拷贝至“Downloads”目录下，并解压缩。按住 “Ctrl + Alt + T”，打开终端，输入“cd Downloads/vmware-tools-distrib”进入刚刚解压的目录下（如下图，cd后有空格，路径根据实际情况而定，“/home/lhl/”是我的家目录，可以不必输入）。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-be42781ff555d6e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-be42781ff555d6e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 10 cd命令进入目录</div></div><p>        终端内输入“sudo perl vmware-install.pl”命令，回车后要求输入密码，密码为“manager”。输入密码时，光标处不显示字符，尽管输入，完成后回车即可。回车后看到一句提示语“Do you still want to proceed with this installation? [ no ]”，在其后输入“yes”，继续一路回车，直到安装完毕。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-06f006a967b87716.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-06f006a967b87716.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 11 安装VMware Tools</div></div><p>        安装完毕后重启一下linux系统即可全屏显示。关机时请勿直接关闭VMware，而是如下图箭头所示的位置，点击后选择“Shut Down”，避免损坏Linux系统而导致无法开机。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-e3c241a2a819389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-e3c241a2a819389f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 12 关机与重启</div></div><hr><h3><b>三、问题集锦</b></h3><p>1. Intel 虚拟化技术未开启（Figure 13），需要进BIOS开启“Intel Virtualization Technology”，可参考网友的解决方案<a href="https://jingyan.baidu.com/article/fc07f98976710e12ffe519de.html" target="_blank">https://jingyan.baidu.com/article/fc07f98976710e12ffe519de.html</a></p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-252182874ccd07de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-252182874ccd07de.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 13 Intel NT 未开启错误提示</div></div><p>2. 终端内某些字符（如~，#）无法输入的问题</p><p>        该问题是由于本虚拟系统的键盘配置有错误，需要我们手动改正，方法如下：</p><p>        在系统左侧点击打开终端，输入“sudo dpkg-reconfigure keyboard-configuration”，回车（不包含引号），输入密码“manager”回车，会出现图形界面。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-ab22cb6d470676d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-ab22cb6d470676d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 14 输入配置键盘命令</div></div><p>        在弹出的图形界面中，按住向下的光标键，找到微软键盘（箭头所示），回车进入下一步。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-b4800a54fbfd2143.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-b4800a54fbfd2143.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 15 切换微软键盘</div></div><p>        在接下来的界面选择美式英语（箭头所示），回车，后面的几项一路回车即可。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-f7be766e2d301c0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-f7be766e2d301c0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 16 切换美式英语</div></div><p>3. 虚拟系统无法联网</p><p>        主要是因为VMware DHCP服务没有开启，我每次重启电脑之后都需要手动开启  VMware 相关服务。首先将虚拟机的联网方式设置为“NAT”，然后在windows下搜索“services”，打开服务。win10可以直接搜索，其他版本windows可以按“win+R”组合键开启搜索。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-8a7832bba7dd71f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-8a7832bba7dd71f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 17 打开services设置</div></div><p>        向下拖动滚动条，找到VMware相关服务项，右键开启。启动方式可以设置为自动，但我设置了，并没什么效果，重启仍旧变为手动，win10 v1809 最近bug一波接一波，不知道是否与系统bug有关。所有服务开启后，虚拟系统应该可以上网了。我就是这么解决的，如果还是不能上网，各位去问问度娘吧，我是没辙了。</p><div class="image-package"><img name="" src="http://upload-images.jianshu.io/upload_images/11790868-19d53ef881a58c18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" class="lazyload placeholder" data-srcset="http://upload-images.jianshu.io/upload_images/11790868-19d53ef881a58c18.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><div class="image-caption">Figure 18 开启VMware相关所有服务</div> ]]></content>
      
      
      <categories>
          
          <category> 生物信息 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA jre 安装或升级1603 error解决办法</title>
      <link href="/post/50435.html"/>
      <url>/post/50435.html</url>
      
        <content type="html"><![CDATA[<p>jre8以上的版本在windows10上安装总是提示1603错误，网上找了各种办法，包括卸载老版本，关闭杀毒软件，关闭浏览器，甚至是系统最小化启动，1603依旧存在。</p><span id="more"></span><p>官方也发现了该问题，但也是一头雾水，相信一年半载也决绝不掉，这对于需要用到jre的宝宝们简直是噩耗，不少老外也在为此头疼。捣鼓了好久，总算找到了一个相对简便的方法，那就是不安装，直接用。</p> <blockquote>首先是jre下载，在这里我们不下载“exe”安装包，而是直接下载压缩包，进入链接(http://download.oracle.com/otn-pub/java/jdk/10.0.2+13/19aef61b38124481863b1413dce1855f/jre-10.0.2_windows-x64_bin.tar.gz)下载（这里下载“jre-10.0.2_windows-x64_bin.tar.gz”），该压缩包含有jre运行所需的所有文件，解压可用；<p>接下来很简单，将jre加入到系统环境变量即可，如果是exe安装，jre8以上版本不需要手动设置环境变量，压缩包只能自己添加。方法如下：</p><p>右键“计算机&#x2F;此电脑”——“属性”——“高级系统设置”——“环境变量”，在系统变量中的“path”中加入bin的路径，我的是“D:\Program Files\Java\jre-10.0.2\bin”，保存即可。</p></blockquote><p>命令提示符中输入“java -version”查看是否成功。</p>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArcMap10.6从世界地图扣取东亚及东南亚国家地图</title>
      <link href="/post/61636.html"/>
      <url>/post/61636.html</url>
      
        <content type="html"><![CDATA[<p>在发表文章需要用到我们的地图时，有时候需要将咱们的地图和东南亚地区合并在一起。这些工作可以利用ArcMap完成。</p><span id="more"></span><ol><li>Word map 下载（<a href="https://gadm.org/download_world.html%EF%BC%89">https://gadm.org/download_world.html）</a></li></ol><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/worldmap.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/img/custom/papers/worldmap.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="world map download"></p><ol start="2"><li><p>将“gadm36_0.shp” 导入ArcMap 10.7</p></li><li><p>左边的图层上右键——open attribute table</p></li><li><p>在打开的属性表中通过Ctrl键多选如下FID：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">22</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">43</span><br><span class="line">102</span><br><span class="line">104</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">122</span><br><span class="line">124</span><br><span class="line">147</span><br><span class="line">149</span><br><span class="line">157</span><br><span class="line">168</span><br><span class="line">172</span><br><span class="line">176</span><br><span class="line">181</span><br><span class="line">189</span><br><span class="line">194</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">222</span><br><span class="line">228</span><br><span class="line">241</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td></tr></table></figure><ol start="5"><li><p>关闭属性表</p></li><li><p>右键单击图层，选择”Data——Export Data“，导出选中区域的shp文件</p></li><li><p>在<a href="https://mapshaper.org/%E4%B8%8A%E5%8F%AF%E4%BB%A5%E5%B0%86shp%E8%BD%AC%E6%8D%A2%E4%B8%BAGeojson%E6%A0%BC%E5%BC%8F%E7%BB%98%E5%88%B6%E5%9C%B0%E5%9B%BE">https://mapshaper.org/上可以将shp转换为Geojson格式绘制地图</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 地信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>syncthing搭建自己的同步云网盘</title>
      <link href="/post/2159.html"/>
      <url>/post/2159.html</url>
      
        <content type="html"><![CDATA[<p>还在为百度网盘传输速度慢而头疼吗，有服务器的同学不妨试试自己搭建同步云盘，保护自己的数据。</p><span id="more"></span><p><strong>参考前辈写的</strong><br><a href="https://www.cnblogs.com/xingyunfashi/p/8708807.html">https://www.cnblogs.com/xingyunfashi/p/8708807.html</a></p><p><a href="https://www.jianshu.com/p/4235cc85c32d">https://www.jianshu.com/p/4235cc85c32d</a></p><p><strong>错误修复：</strong></p><p>2.2.32. How do I increase the inotify limit to get my filesystem watcher to work?</p><p>You are probably reading this because you encountered the following error with the filesystem watcher on linux:</p><p>Failed to start filesystem watcher for folder yourLabel (yourID): failed to setup inotify handler. Please increase inotify limits, see<a href="https://docs.syncthing.net/users/faq.html#inotify-limits">https://docs.syncthing.net/users/faq.html#inotify-limits</a></p><p>Linux typically restricts the amount of watches per user (usually 8192). When you have more directories you need to adjust that number.</p><p>On many Linux distributions you can run the following to fix it:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> fs.inotify.max_user_watches=524288 | sudo <span class="built_in">tee</span> -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure><p>On Arch Linux and potentially others it is preferred to write this line into a separate file, i.e. you should run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;fs.inotify.max_user_watches=204800&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/sysctl.d/90-override.conf</span><br></pre></td></tr></table></figure><p>This only takes effect after a reboot. To adjust the limit immediately, run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh-c <span class="string">&#x27;echo 204800 &gt; /proc/sys/fs/inotify/max_user_watches&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>perl循环调用python爬虫批量下载喜马拉雅音频</title>
      <link href="/post/10103.html"/>
      <url>/post/10103.html</url>
      
        <content type="html"><![CDATA[<p>手机下载喜马拉雅音频后，获得的音频文件虽然可以转成mp3格式，但其文件名却是一长串字符串，无法辨别是哪一集，网上找了各种工具，都有局限性，庆幸的是发现了一个python爬虫可以在电脑上实行批零下载文件名正确的音频，项目地址如下：</p><span id="more"></span><pre><code>    xmlyfetcher用于下载喜马拉雅歌曲资源，可以下载单个音频资源，也可以下载整个专辑. 项目地址：https://github.com/smallmuou/xmlyfetcher</code></pre><p>运行之后发现一个小问题，该脚本只能爬取一页的内容，于是写了一个perl脚本循环调用该爬虫，实现一个脚本下载一部作品。<br><strong>脚本如下，运行前做适当修改(专辑地址、保存路径、页数)：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/perl</span></span><br><span class="line"></span><br><span class="line">use strict;</span><br><span class="line"></span><br><span class="line">use warnings;</span><br><span class="line"></span><br><span class="line">my <span class="variable">$url</span> = <span class="string">&quot;https://www.ximalaya.com/youshengshu/16951017/&quot;</span>;<span class="comment">#专辑地址</span></span><br><span class="line"></span><br><span class="line">my <span class="variable">$dir</span> = <span class="string">&quot;/mnt/e/BaiduYunDownload/Ximalaya/daomubiji2&quot;</span>;<span class="comment">#文件保存路径，提前创建</span></span><br><span class="line"></span><br><span class="line">my <span class="variable">$num</span> = 29;<span class="comment">#专辑总页数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (my <span class="variable">$i</span>=1;<span class="variable">$i</span>&lt;=<span class="variable">$num</span>;<span class="variable">$i</span>++) &#123;</span><br><span class="line"></span><br><span class="line">my <span class="variable">$url2</span> = <span class="variable">$url</span> . <span class="string">&quot;p<span class="variable">$i</span>/&quot;</span>;</span><br><span class="line"></span><br><span class="line">system (<span class="string">&quot;xmlyfetcher -o <span class="variable">$dir</span> <span class="variable">$url2</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> IT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置元素加载时间解决D3.js文字被图像覆盖的问题</title>
      <link href="/post/16107.html"/>
      <url>/post/16107.html</url>
      
        <content type="html"><![CDATA[<p>在绘制地图的时候，常常需要添加饼图，柱状图以及文字等。经常发现添加的元素被地图背景覆盖，无论在html文档中如何调整元素的顺序都没有用，百思不得其解。</p><span id="more"></span><p>D3.js默认按照代码顺序加载元素，后来想明白了，地图背景加载比较慢，而文字等小元素加载很快，导致小元素先被加载，背景元素后来加载进而覆盖在小元素之上。解决的思路就是给小元素设置加载时间，让其在背景元素加载完之后再加载，用到的是“setTimeout”函数。</p><p><strong>具体用法如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">      小元素的执行代码写在此处</span><br><span class="line">                       &#125;, 3000);//延迟3s执行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 地信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 地图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微生物基因组学培训活动落幕</title>
      <link href="/post/62466.html"/>
      <url>/post/62466.html</url>
      
        <content type="html"><![CDATA[<p>摘要：2017年7月21日至7月24日，我校孙明教授、郑金水副教授和刘华林博士在华中农业大学微生物农药国家工程研究中心义务开办了湖北省名师工作室系列活动——微生物基因组学培训活动，来自华中农业大学8个学院和5个外校单位的共计143名师生参加了此次培训。</p><span id="more"></span><p>7月21日至7月24日，针对广大科研工作者在科研中对基因组学技术的迫切需求和呼声，华中农业大学生命科学技术学院孙明教授和信息学院郑金水副教授在微生物农药国家工程研究中心义务开板了湖北省名师工作室系列活动——微生物基因组学培训活动。来自华中农业大学生命科学技术学院、动科动医学院、园艺林学学院等8个学院和来自武汉大学、武汉病毒所、武汉理工大学等5个外校单位的共计143名师生参加了此次培训。</br><br>7月21日上午，微生物基因组学培训在工程中心五楼会议室正式开始。湖北省名师工作室主持人、微生物学国家重点学科负责人孙明教授致欢迎辞，他简述了生物信息学分析的研究内容，以他自己课题组的一些成果为例阐述了基因组学分析在如今科研工作中的重要作用，并指出生物信息学只是一个非常好用的科研工具，号召大家不要对它有畏难情绪。</br><br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/62466_1.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/62466_1.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="湖北省名师工作室主持人孙明教授致辞"></p><center>湖北省名师工作室主持人孙明教授致辞</center><p></br>自从7月11日郑金水副教授将本次培训的宣传海报在网上公布后，收到了很多老师同学的踊跃报名，因此将参加培训人员分为了A、B两个班。在正式培训开始之前，华中农业大学生命科学技术学院的刘华林博士通过网络直播和电脑远程操作耐心地帮助参加培训的学员们安装好Linux系统虚拟机和培训所需要使用的基因组学软件。正式培训内容分为四个部分，主讲人郑金水副教授。</br><br>第一天上午，郑老师简述了现代测序技术和Linux&#x2F;Dos的基础，带领学员们克服对命令行的畏惧；下午的培训内容为微生物基因组的拼接与注释，这是所有基因组学分析的基础；第二天上午，郑老师给学员们讲解了基因组学研究中简单挖掘工具的使用方法；最后半天的培训内容是序列比对和系统发育分析，并举例说明不同的分析方法的适用范围及结果的呈现。在整个培训过程中都穿插着学员亲自动手实训的环节，学员们在自己的电脑上利用郑老师和刘博士提前准备好的数据亲手尝试不同软件的运行命令，其间遇到不清楚的问题郑老师和刘博士都会耐心解答。</br><br><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/62466_2.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/62466_2.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="培训学员认真地听郑金水副教授上课"></p><center>培训学员认真地听郑金水副教授上课</center><p></br>7月24日下午，郑金水副教授为本次培训作了总结。他提到：“随着现在的测序成本越来越低，我产生了一个想法，那就是要将微生物基因组学的方法当成生物科学研究中的常规手段，从而满足大家的科研需求，提高大家的科研效率，这也是本次公益性培训的初衷，为了满足大家对基因组学技术的求知欲，帮助大家更好地掌握这一项‘常规技术’！”随后郑老师向全体与会人员表示了感谢，并为大家的热情而感动，表示如果本次培训成效卓越，将找机会继续举办新一期的培训，为大家讲解更深入的微生物基因组学技术。在培训结束之后，刘华林博士在本次培训学员中作了调查，超过93.5%的学员表示本次培训的效果很好，学会了很多生物学软件的使用，了解到针对不同目的需要采取的不同分析方法，对原本陌生的微生物基因组学技术已不再感到无从下手，反而产生了浓厚的兴趣。</br></p><p><img src="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/62466_3.jpg" class="lazyload placeholder" data-srcset="https://fastly.jsdelivr.net/gh/liaochenlanruo/cdn@master/images/post/62466_3.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="培训合影"></p><center>培训合影</center>]]></content>
      
      
      <categories>
          
          <category> 活动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 培训 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>焦尸</title>
      <link href="/post/4a1.html"/>
      <url>/post/4a1.html</url>
      
        <content type="html"><![CDATA[<p>（一）游行</br><br>教室外突然传来一片嘈杂之声，从窗口向外望去，一群学生正沿着教室前的道路走来。男男女女的学生穿着各种花花绿绿的奇装异服，看起来颇为诡异，让我心中产生一种莫名的不适感。队伍的最前头是一辆黄色推土机，一个男生坐在驾驶室中，操纵着机器向前行驶。学生们嘴里喊着口号跟随着推土机前行，情绪颇为高涨。这是一只游行队伍，只是不知道他们为何要选择在开学的第一天游行，又是为何游行。</br></p><span id="more"></span><p>游行的队伍由远及近，推土机缓缓地开到了教学楼前，教室里的学生忍不住好奇，纷纷的跑到门口观望，部分人甚至显得比游行队伍还要亢奋。没花多少时间，推土机已经行至我们跟前，然而它并没有停止前进，而是挥舞起它的机械臂径直朝教学楼的墙壁砸来。一下、两下、三下，十下，几十下，哪怕是钢筋混凝土构筑的墙体也经不起铮铮铁骨的机械臂永无休止的撞击，墙壁开始碎裂，楼房开始坍塌。围观的我们终于从震惊中苏醒过来，撒腿便逃，不能向前跑，因为前方早已被游行队伍围的水泄不通，看他们脸上愤怒的表情让人不由得生出恐惧之意，于是大家心照不宣的朝教学楼内跑去，想要从后门溜之大吉。</br><br>我仓皇地逃着，脚上的鞋子跑掉了被掩埋在废墟中，鞋子是被后面的同学踩掉的，两只都掉了，这可是我最最心爱的鞋子，因为那是开学前刚刚买的新鞋子，很贵重。然而此时顾不得跑掉的鞋子，不管是什么样的鞋子，总要有命才有机会穿。我光着脚在地面跑着，脚踩在石子之上疼的很，我便用并不熟练的轻功跳行。哪怕再怎么不熟练，也要比普通人快很多，所以不一会儿的功夫，游行队伍便被我远远地落在了身后。</br><br>我跑到一个安静的地方，一屁股坐在地上，口中喘着粗气，心中想着刚才的突发状况。那些学生不知道因何产生了怨气，每个人的脸上深深地刻满了愤懑，游行变成了暴动。那台推土机一定是校园施工队的，被游行的学生抢了过来搞破坏，也不单单的是要摧毁楼房，因为每个学生的手中都拿着器械，不论是刀具、木棒还是钝器，在某些情况下都将会是凶器。</br><br>教室里的学生读懂了游行学生脸上的表情，所以大家四散而逃，逃的是命。面对这种突发状况，学校保卫处人手远远不够，因为游行的学生太多，少部分人总是会被人潮淹没，所以保卫处选择等待警察的到来。</br><br>学校并不偏僻，所以警察来的很快，全副武装的警察涌入校园，常人看到这种场面怕是要腿抖，然而游行的学生似乎并不惧怕，挥舞着手中的器械与警察干了起来。到处在飙血，面对着这种局面，劝说早已无用，因为没人听劝，学生们也没有给警察劝说的时间，在警察到来的一瞬间，学生们就冲上去了。于是警察就只能被迫迎战，战斗必然要流血，双方激战很酣，打的很投入，似乎都是为了心中的信仰而变成亡命之徒。开始的时候，警察还手下留情，可是后来他们发现游行的学生如猛兽般地砍杀，于是警察便产生了杀心，双方都在往死里打。</br><br>近距离战斗无法用枪，只能用警棍敲，敲打比枪击更让人兴奋，每个人都杀的眼红了。一个学生的脑袋被敲扁了，一个警察的脸被削掉了一块；一个学生的脸塌陷了，一个警察的脖子被砍断了；一个学生的胳膊被折断了，一个警察的双腿被砍断了；这儿躺了一个伤员，那里卧着一具尸体；有的伤员在地上爬行躲避砍杀，有的人在追逐爬行的人奋力地砍杀；有的正在奋力砍杀的人被地上躺着的尸体绊倒，还没等爬起来，便被有的人一棒子敲晕或者被一刀削掉半个脑袋。</br><br>空气中弥漫着血腥的味道，路面上、草地上，到处可以看到鲜血和脑浆，随处可以看到残臂断肢，肉酱和着血水在泥土中翻滚着混到一起，散发着血腥与土腥交织的味道。我躲在一棵树后远远地观望着，我脸色煞白，不停地呕吐着，眼前的地是红的，天也是红的，整个世界都充斥着无边际的红，那是血红，血腥的红。我晕血，不管是自己的还是他人的，只要是人的血我就会晕，所以，我不出意料的晕死过去。</br><br>（二）警察</br><br>晕死或许是人类的一种自我保护与修复，如果你太累了，晕一会儿会是疲劳得以缓解；如果很累很累了，死透了便不会再累了；如果你不想看到血腥的场面，那便晕死过去，不看便罢；如果你厌恶这个世界，那便可以选择永远的离去，眼不见，心不烦。</br><br>醒来，太阳已经西斜，这一次晕的太久了，或许是因为平生第一次见到这么多的人流这么多的血，所以就多晕了一会儿。眼前已经没有了砍杀的场面，只有忙碌的工作者正在搬运尸体，洒水车不断清洗着路面的血迹与脑浆，夕阳洒下的光辉映在地表的水面上显得更加的红。</br><br>我实在是看不下去了，便扶着树干站了起来，跌跌撞撞的朝着宿舍楼的方向走去。没走多远，前方来了两个个警察，他们截住了我，说我偷了东西，要搜身。我心想不做亏心事，不怕鬼敲门。可当我的书包被打开的时候，发现里面躺着一个看起来很昂贵的白色不知名电子设备。我努力地解释着，可警察们根本不会听我将话讲完，而是不断地斥责和辱骂我。最后他们在我的嘴里塞满了东西，我连张嘴说话的机会都没有，心中充满着怨恨，明明是有人栽赃陷害于我，可我却没有办法证明自己的清白，这两位警察是如此的蛮不讲理，身为人民公仆，办事好不讲理，一怒之下我抬脚踹了过去。</br><br>人的肉体是脆弱的，人的愤怒之力是可怕的，这一脚下去，一个警察竟然被我踹出几米远，脑袋磕在路边的石头上，凹进去一大块，血流不止。另一个警察见状便要掏枪，趁他双手还放在腰间之时，我一记上勾拳狠狠地砸在他的下巴之上，只听咔嚓一声，他的颈椎已经断了。只是那么短短的几分钟，我由一个好学生变成了打死两位警察的杀人犯。在我心目中，警察叔叔是可爱的，可是这两位警察实在是蛮不讲理，还暴力执法，想象与现实的巨大让我愤怒无比，愤怒使我失去了理智，也给了我爆发力，最终让我失去了平静地生活。杀人偿命，更何况是两名警察，我大概是要随那些暴乱的学生一起被枪决了吧。</br><br>校园里到处都是学生与警察的尸体，所以我没有处理面前的两具尸体，因为没有必要处理，总是会有人来收尸的。我走上前，确认他俩已经死翘翘了，没有办法指证我。幸好没有人看到这一幕，这里也并没有监控，警察的执法记录仪被我砸的粉碎，只要我不说，应该没人知道我杀过警察，他俩是被暴乱的学生杀的，与我无关。残阳如血，我头也不回的一路小跑离开了杀人现场。</br><br>（三）女人</br><br>回到寝室，疲惫的我没去洗漱，直接爬到床上倒头便睡。睡梦中我梦到下午发生的暴乱，梦到那场厮杀和那些血腥的场面，然而那些都与我无关。我只关心我在乎的人，其他的人在我面前死再多，最多也只是眨一下眼睛而已，我在乎我的那双新鞋子，我要把它找回来。我痛恨那些游行的学生，游行便好好地游行，为何要变成暴乱，且不说死多少人，重要的是我的鞋子因他们而丢，所以我不喜欢他们，他们都该死。我来到教学楼前，楼房已经坍塌了一半，我的鞋子应该没有被埋在废墟中，因为倒下的是楼的正面，而我的鞋子是在楼后面被踩掉的。即便如此，还是不好找，谁知道那些逃命的同学在慌乱间会把我的鞋子踢到什么地方呢。</br><br>我找遍了楼的后面，一寸寸的找寻，终究是没有找到，我累了，便来到草地上躺了下来。我仰望着天空，星星眨着眼，月亮尽情的撒着自己的光辉。月光洒在身上，照在脸上，一股清凉之意由头顶缓慢地流淌到脚底，身体瞬间轻松了许多。我闭上眼，昏昏沉沉的睡去，发丝在微风的吹动下撩动着睫毛，我眨动着眼睛想赶走那一丝痒。睁眼的一刻，一张脸凑到了我的面前，那张脸苍白，毫无血色，却也生的俊俏，那是一张女人的脸。一股胭脂味扑鼻而来，让我清醒了很多，胭脂的香味渐渐淡去，随之而来的是一股臭味，那种臭我未曾闻过，臭味愈发的浓烈，风吹之不去，这味道来自于面前的女人，每一个毛孔都在散发难闻的气味。女人的脸不再俊俏，不再光滑，脂粉脱落，皮肤破裂，浓水挂满了整张脸，她已经腐烂了，这臭味是死尸的味道。尸液从她的脸上滴下落在了我的脸上、唇边，滑入我的鼻孔和嘴中。</br><br>忍不住恶心，我开始呕吐起来，食物夹杂在胃液和口水之中从我的嘴里向外喷射着，不是吐，是喷射状，如同高压水枪一般。我不知道胃中为何会有如此多的东西可以用来吐，总之我就不停的喷射着，呕吐物不偏不倚全部喷到了女人的身上。此时我才发现她全身赤裸，一丝不挂，呕吐物覆盖率她的整个身体，不断地滑落，甚为恶心。终于，我吐干净了，于是我疲惫的躺倒在地，而她却笑了，笑的很真很开心。</br><br>呕吐物被她的体表吸收，慢慢地渗入肌肤之内，同时她的皮肤在自我修复，最终又变成了活生生的一个美人儿，甚至连臭味也不存在了。看着眼前的一幕，我有些发愣，心想这场面只应该出现在梦中，于是我便认为自己是在做梦，一个有美女的梦，不是春梦，而是一个奇奇怪怪的梦。我太相信这是一个梦了，所以我没有傻傻的去掐自己一下试试疼不疼。</br><br>女人也在我身旁躺了下来，依旧是一丝不挂，如果是一个正常人躺在我身边，我肯定会偷窥几眼，然而她却不是，她刚刚变成了一具腐尸，就算是她此刻美如天仙，我也不敢有非分之想，所以我想逃，再也不要见到她才好。屁股刚离地，就被她一把拽倒在地，我心中充满了恐惧，生怕她一口吃了我，于是我开始求饶，急的差点哭出来。她笑了，依旧笑的那么开心，我哭了，真真的被吓哭了，她可能在笑逮到了一只猎物，我哭是因为我没有她力气大，想逃逃不掉，不知道下一刻我的脑袋还会不会在脖子上继续思考下一步该怎么办。</br><br>“你怕我？”女人笑着问道。</br><br>“我不是故意吐你身上的，我帮你洗衣服，求你饶了我吧。”说完我才记起她没有穿衣服，那便不用洗了。</br><br>“我以人的呕吐物为生，所以你不但无错，反而有功。”女人说道。</br><br>我有点蒙圈，竟然有人以别人的呕吐物为生，那么这人得有多恶心啊，她要么是变态狂，要么是神经病，总归不是正常人。我没有心情去问她她属于哪一种情况，我只想早点摆脱她。</br><br>“什么功不功的，您放我走吧。”我赔笑道。</br><br>“你有什么愿望，我可以帮你实现。”女人道。</br><br>我打量了一下她曼妙的身姿，咽了一下口水说道：“能帮我找鞋子吗？”</br><br>是的，我之前被她吓到了，哪怕她生的美若天仙，我也不会多想，此时我最在意的是找到我的鞋子赶紧跑路，有鞋子总是要跑的快一些。女人脸上露出有些不解的表情，或许是她感觉自己看错人了，或许是她不明白为何我会让她帮我找鞋子，只是一双鞋子而已，何必呢？</br><br>“什么鞋子那么重要？比我还重要？”女人疑惑的问道。</br><br>“新鞋子，很贵重，我必须要找到它。”我答道。</br><br>听了我的话，女人的脸开始扭曲变形起来，她原本是想要引诱我上钩，可不料我一心想着我的鞋子，那么不管她的最终目的是什么，只要我不配合，她办起事情来总会有些麻烦。她还未曾遇到过不乖乖上钩的男人，所以面对着我，她有些恼怒，于是她变的狰狞，歇斯底里地喊道：“你去死吧！”</br><br>这句话大概是她的诅咒，或者只是她的一句气话，但是这句话说出口我便真的要去死了。</br><br>（四）鬼影</br><br>教学楼不见了，草地不见了，女人也不见了，我依旧躺着，躺在软绵绵的床上，我还在宿舍里。窗帘挡住了路灯散发的光芒，房间内漆黑一片，我微眯着眼睛盯着天花板，想着刚才发生的那一幕，难道是梦？应该是梦吧，否则怎么会那么离奇，否则我为何此时躺在宿舍的床上。</br><br>正思索着，双脚被一双大手抓住，狠狠地拉了我一把，未及反应过来，我已经被扯到了地上，身体摔得生疼，所幸没有伤到脑袋。睁开眼望向脚的方向，我看到了扯我的那个东西。黑暗中矗立着一个更加黑暗的人影，影子有些魁梧，在伸手不见五指的黑夜中，影子的轮廓却显得那么清晰可辨。人是可以很好地隐藏在黑暗之中，那么眼前的东西便不是人影，是鬼吗？！我额头渗出豆大的汗珠，它的力气太过强大，双手死死地抓住我的双脚，我根本无法挣脱。来不及反抗，它双手再次发力，我又被扯回到了床上，只是这次没有摔疼。</br><br>影子不见了，凭空出现，又凭空消失了，留给我无限的遐想与无边的恐惧。灯，我还有灯，灯光可以赶走黑暗，带来光明，于是我伸手摸向头顶台灯的开关。一圈、两圈，我转动着调光旋钮，然而台灯并没有散发出光亮，房间依旧一片黑暗。睡前我还开过的台灯，怎么说坏就坏了？我目光在房间中扫视着，不放过任何一个角落，确信黑暗之中没有更加黑暗的东西之后，我深吸一口气，然后迅速的爬下床，两步跳到门口，按下了日光灯的开光，并没有耀眼的灯光出现。然后是阳台的灯，厕所的灯，洗漱台的灯，统统都不亮，难不成停电了？</br><br>我有些绝望，黑暗总是会带给人无限的遐想，不是美好的事情，往往是内心最恐惧的事情会被黑夜无限的放大。我害怕黑暗，所以我需要开灯，床头的台灯没有亮的那一刻，我内心便充满了恐惧，全身的头发及汗毛都在瞬间竖立了起来。虽然床上也不安全，但是我还是不想下床，因为房间有很多角落，不知道那个鬼影子什么时候会突然从某个角落冒出来。但就算我一直蜷缩在床上，危险并没有降低或消除，只有光亮才会给我带来安全感，与其一直躲在床上发抖，不如硬着头皮下床开了灯，于是我便下了床，然而随着一盏盏灯点亮失败之后，我一点点的失望直至绝望。</br><br>不知道是绝望多一些，还是恐惧多一些，黑夜不只是剩我一个人，还有一个鬼影子。我警惕的看向房间的每个角落，慢慢地摸回阳台，伸手拉开窗帘，微弱的灯光透过窗户照射进来，然而这几束光没有照亮房间，却让我心凉，外面是有电的，这栋楼的另一个区域也有灯光散发出来。如此看来是我宿舍停电了，或许是欠电费了吧。</br><br>人在极度恐惧的情况下有可能会犯傻，我竟然忘记了自己还有手机，稍微冷静了一些才想起可以用手机照亮，虽然不能照亮整个房间，至少可以照亮眼前的一片区域。想到此，我又爬回床上，在床头摸到了手机，按下开机键，没有光亮。怎么可能？睡前明明还有百分之八十几的电量，为何此时也开不了机？我反复长按着开机键，终于，我听到了开机的声音，我蒙圈了。手机还有电，只是屏幕不亮而已，我又想到了窗外透进来的光，那些光束没有照亮我的房间，而是消失在我的房间之内，是有东西吸收了所有的光束，包括手机与灯发出的一切光亮都被吸收了。</br><br>光的速度那么快，竟然也无法逃逸，那么吸收光的这个东西得有多大的质量，多快的速度？光都无法逃脱，那我呢？我要试一下，这个房间诡异的很，不能再待下去，随手扯了球服便要夺门而出。门死死地关着，打不开的门还不如一堵墙，墙不会给人带来希望，也不会有后来的绝望，而门确实让我绝望了，看来这个房间内的一切物事都无法逃脱那个东西的引力。</br><br>当一个人失去了所有的希望，彻底绝望的时候，便不再恐惧，因为结局已经注定，不论是恐怖恐惧，挣扎与否，不论是有多少条路都是死路，一千零一种死法的结局也只有一个，那就是死。</br><br>（五）穿越</br><br>大自然的光明可以被吸收与吞噬，然而心中的光明只有自己可以抹杀，既然睁眼是一片黑暗，不如就闭上眼寻找心中的一丝光亮。我开始盘膝冥想，心静了，远处出现了一个光点，一支箭从点中射了出来，然后是两支，三支，千万只。箭至眼前化作万道光束，世界被照亮了，眼前白茫茫的一片，除了白没有任何东西。黑暗会吞噬掉一切，同样的光明也可以掩盖一切，同样的都是看不见。</br><br>除了时间没有尽头之外，没有什么是永恒的，黑暗是暂时的，光明也是暂时的，只是这个“暂时”有长有短罢了。眼前的强光便是一闪而过，我缓缓地睁开眼睛，自己已不在寝室内，这里是另一个世界。我不知道眼前的世界是我冥想出来的，还是我穿越过来的，但至少这里没有无边际的黑，这里有光明，那便有希望。</br><br>大堂正中央坐了一位白发人，身边站着两名侍卫。我一脸懵逼地与其他几位身着黑衣，脸上都是鲜血的人跪在白发人面前。</br><br>“任务完成的怎么样？”白发人开口问道。</br><br>跪着的人显得很惶恐，战战兢兢的不敢作声。一刀疤脸回答到：“禀报大巫祝，我们埋伏于小路之上，本来就要得手，却不料在厮杀之时出现几百人的卫队救驾，我们折损了几名兄弟，好不容易才逃脱回来。”</br><br>大巫祝大怒，骂道：“一群废物！”随后刀疤脸便被叫道大巫祝面前，只见大巫祝一掌便将其拍死于面前。</br><br>我们都很惶恐，生怕自己也惨遭不测，生活在这样的时代里，命运任由他人摆布，说不定哪天便会命丧黄泉。大巫祝并没有对我们赶尽杀绝，杀了甲只是为了威慑我们，以便让我们更加卖力的为他干活。</br><br>晚上，大家各自回屋子里歇了，我躺在床上辗转难眠，看来我是穿越了，可我搞不清楚穿越的原因，而且我穿越到了一个杀人如同踩死蚂蚁的时代里，要提心吊胆的过日子，说不定什么时候就被灭了。正在苦思冥想，房间的门被轻轻地推开了。</br><br>门外走来一高一矮两个人影，身影竟然是那么熟悉，这身形怎么会忘记呢？正是扯我的那个鬼影和那个赤裸的女人。果真是阴魂不散啊，我在新时代，他们也在新时代，我到了旧社会，他们也到了旧社会，他们的出现肯定不是偶然，那么他们必定有什么目的。</br><br>“你们究竟是什么人？为何总是缠着我？”我问道。</br><br>女人急忙上前捂住我的嘴，示意我小点声，随即说道：“别惊动了大巫祝的眼线，你会得到你想知道的答案。”</br><br>经过二人的一番解释，我方才知道，那个白发人是部落里的大巫祝，此人心狠手辣，杀人不眨眼，早有不臣之心，欲谋权篡位。那些黑衣人都是大巫祝训练的杀手，而他口中所谓的任务便是让我们刺杀部落首领。鬼影是部落里的小巫祝，女人是他的徒弟，二人奉首领密令诛杀大巫祝，然而其道行远不及大巫祝，斗法失败落荒而逃。机缘巧合小巫祝习得时空穿越之法，希望到未来世界寻求更加高深的功法。只是他们阴差阳错的穿越到了我的寝室，然后又稀里糊涂的把我带回了他们的时代。我白天之所以会跪在大殿之中是因为小巫祝通过巫术将我的灵魂注入到大巫祝杀手队伍中的一人体内。</br><br>我听后有些恼怒，咬牙切齿的说道：“感谢二位，带我来了一场说走就走的时空旅行，只是麻烦你们赶紧把我送回到法治世界，这个地方太恐怖了，脑袋一直握在别人手里，只要大巫祝手一抖，这颗项上人头可就瓜熟蒂落了。”</br><br>小巫祝有些愧疚的说道：“十分抱歉，我虽习得穿越之法，然而并未参透精髓，一来穿越是随机的，可能往前穿，也可能往后穿；第二，此功法极耗元气，之前一来一回使我功力耗损殆尽，没个一年半载无法恢复。不如你且安心待在这里，待我继续研究功法并恢复元气，时机成熟自会把你送回自己的时代。”</br><br>我知道他们当前并没有送我回去的意思，多说无益，于是我便说道：“留在这里也不是不可以，但是你们需要给我找一个安全的地方，等你修炼好了再把我送回去，如何？”</br><br>“这里并没有安全的地方，你现在是杀手团里的一员，每日要向大巫祝复命，若见你失踪，哪怕是天涯海角也会被揪出来，今日杀手甲的下场你不是没见到。要想得到绝对的安全保障，那就要想办法除掉大巫祝。”女人说道。</br><br>“那你们赶紧除啊！”</br><br>女人像看白痴一样看着我说道：“杀人岂是说一句话那么简单的事情？”</br><br>“那该怎么办？”我问道。</br><br>“你做内应”，小巫祝说道。</br><br>“能告诉我我自己的身体在哪吗？”我问道。</br><br>“不能”，一个干脆利落的回答从女人嘴里冒出来。</br><br>“方案呢？”我继续问道。</br><br>“见机行事！”女人说道。</br><br>“就这些？”我问道。</br><br>女人：“就这些。”</br><br>我：“搞鬼啊！”</br><br>小巫祝：“不是搞鬼，要设坛做法，先剪除大巫祝的羽翼，使其孤立无援，然后再干掉他。”</br><br>我有些猴急，问道：“照你这般，要到猴年马月才能干掉他，你不着急，我还着急回去毕业呢。”</br><br>女人：“心急吃不了热豆腐，操之过急的话不但杀不了大巫祝，反而会受其所害。”</br><br>我：“那你俩负责剪除羽翼，我负责干掉大巫祝，我可以潜藏在他身边，寻机动手。”</br><br>依旧是看神经病的眼神，女人说道：“大言不惭，你可知道大巫祝的功力多么深厚，前段时间，合我二人之力都没能成功，你区区一个凡人竟出此狂言。”</br><br>我不愠不火地答道：“哪怕他境界再高，终究是肉体凡胎，总是会受伤，只要方案合理，大家配合好，我杀掉他不是没有可能，而且可能性还很大，前提是我要找到我的肉体。”</br><br>小巫祝：“如何配合？”</br><br>我：“第一步，向世人昭告大巫祝的罪行，使其在道德与法理上孤立无援；第二步，请求首领调用部队包围大巫祝府造势，如此可以让其一部分党羽吓破胆而背叛大巫祝；第三步，你们二位负责杀死大巫祝的左右二护法，断其左膀右臂，便于我靠近他；第四步，便是你们与大巫祝斗法，吸引他的大部分注意力，使其无暇应对我，握借机上前结果了他。”</br><br>二人先是点点头，紧接着又投来了怀疑的眼光。女人说道：“你凭什么能杀死他？”</br><br>我：“武器，强杀伤性武器，就在我的背包里，所以你们要带我找到我的肉体。”</br><br>见我说的很坚定，于是他俩便连夜将我带到了一座密室之中，大石台上躺着一个在当时看来穿着奇装异服的人，那便是我的真身。我走上前，从包包中摸出一个黑色物事，那是一把手枪，是从被我杀死的一名警察的尸体上摸到的，一直藏在包包里。不论走到哪里，我都是包不离身，所以穿越之时，这把枪便随着一起过来了。我打开枪梭子，里面有六发子弹，应该可以杀死大巫祝，如果有一把狙击枪就好了，可以远距离射杀，不过手枪也还可以，再怎么说也比箭快，而且这个时代的人没见过这玩意儿，我给他来个猝不及防，胜算又大了一些。我耐心地给二人讲解了手枪的威力，但并没有演示给他们看，因为本来子弹就少，而且枪声太大，容易惊动大巫祝。最终他们二人决定赌一把，只是这赌注下的有点大，因为按照我的计划，首领和大巫祝的战斗由暗地里搬到了明面上，那么大巫祝势必会拼尽全力，倘若失败，首领极有可能会被杀死。但不论是明争还是暗斗，两个人的矛盾就在那里摆着，两个人的刺杀行动从未停过，既然如此，不如轰轰烈烈的干一场，不论哪一个人先死了，另一个人都好过些。至于说服首领的任务自然由小巫祝去完成，我只等待最终开战的消息。</br><br>（六）首战</br><br>人只要不被逼到绝路上就不知道要拼一把，首领自然是不愿意冒险开战，他想的是暗杀。但是如果不出动军队，单凭我们几个人根本就没办法靠近大巫祝，因为他的党羽太多，身边又有左右二位护法，可以说首领交给小护法的是一个没办法完成的甚至是去送死的任务。脱离实际生产太久的领导终究会犯瞎指挥风，绝对是害人害己，不论下属们怎么解释，都没有用。如此便不需解释，让我来促成这一战。</br><br>这一日，我将首领要派军队围剿大巫祝的消息放了出去。人们都小心谨慎的活在这个世上，通常都是宁可信其有，不可信其无，更何况大巫祝与首领背地里的战斗从未停歇，所以消息传到大巫祝的耳朵里，他便信了。于是，大巫祝先行动了，潜藏在各地的杀手及其党羽开始暴乱，一路向部落首都杀来。</br><br>事情走到了这一步，首领无暇揪出是谁放出的假消息，他只能被迫应战，于是忠于首领的将士们也开始行动了，双方在各地展开厮杀，部落的山川河流尽情的吮吸着人类的鲜血，空气愈发的血腥起来。将士们在厮杀，百姓们早就受够了邪恶势力的荼毒，农户们抡起了农具冲了上去，猎人们拿起了弓箭冲了上去。反动派再怎么强大，终将要淹没在茫茫人海之中，首领与大巫祝两个势力之间的战斗最终演化成了全民战争。</br><br>战争永远都是惨烈的，世界的人口波动不是与流行病的爆发有关就是与战争有关，冷兵器时代主要还是拼人数，古时候的国力除了粮草之外就是成年男丁的数目，有的国家卷入战争之后，拼掉了全国的青壮年，十几年才能有所恢复。此时此刻，除了人与人之间的战斗之外，还有狗与人的战斗。大巫祝驯化了许多狗，并非寻常人家养的看门口或者是猎狗，而是极其凶残的食人狗。</br><br>只见街巷中、山坡上、草地上、田野里，到处黑压压的一片，全都是大巫祝的狗，它们红着眼睛，如饥似渴的注视着人群，如脱缰的野马般在人群之中穿梭。一只狗张开了血盆大口咬掉了一个舞着锄头的农户的脑袋，另一只狗张开了血盆大口吞掉了还未拉满弓的一位猎户的脑袋，一位挥刀的士兵的脑袋落入了一只狗的血盆大口之中，一位正在发号施令的将军的脑袋落入了另一只张着血盆大口的狗的腹中。这些狗有着极强的消化能力，它们不需要咀嚼，可以将整个头颅吞入腹中，在眨眼之间便可将其消化殆尽。它们只吃脑袋，每吃掉一个脑袋，它们便长大一分，于是人类的脑袋在不断地减少，而狗的身体在不断地增大。</br><br>一只狗突然停下了追杀人类的步伐，它在趴在地上翻滚着，似乎是有些疼痛难忍，几分钟过后，它产下了一只幼崽。然后是另一只狗产下了另一只幼崽，几百条狗陆陆续续地开始产崽。这些狗是孤雌生殖，不需要交配，而且其产崽的过程相当短暂，不超过五分钟，它们的数量在不断的增多。幼崽啃食着躺在地上的无头尸体，它们的身体以惊人的速度在不断的增长。</br><br>一位正在指挥的将军似乎发现了什么，于是他下达了命令，尽量躲开那些奔跑的猛兽，专门砍杀正在产崽的狗。是的，无论多么强大的生物，只要是在产崽的时候便是最虚弱的时候，只能任人宰杀。这些狗虽然有着惊人的繁殖能力，然而只要在其生产的时候砍上一刀，便也是一刀两命。于是狗的数量在不断地减少，终究敌不过千千万万人的砍杀，狗被消灭殆尽，人类获得了初步的胜利，接下来便是人与人的战斗。</br><br>（七）护法</br><br>前面的战斗只不过是小打小闹而已，真正的战斗应该从诛杀左右两位护法开始。从来没有人见识过二人的武功，正所谓知己知彼，百战不殆，然而两位护法一直隐藏自己的功力，从未在人们面前展露过实力，更确切的说，见过两人出手的人都已经下去陪马克思了老人家了，只是那个时候他老人家还未出生。</br><br>杀护法的任务未修行者显然是无法完成的，我是卧底，更不能动手，就算是动手，我还不如一个猎户，于是只能交给小巫祝和女人来完成。这也是完成计划极其关键的一步，若不能砍掉大巫祝的左膀右臂，我便没办法靠近大巫祝，更没有机会开枪。我只能在心中把认识的鬼神都祈祷了一遍，保佑小巫祝成功，我也好早日返回那个有电脑和手机的时代。那个时代虽然压力有些大，但不至于像现在这般水深火热，每天将脑袋挂载裤腰带上过日子，说没就没了。更何况我在这里举目无亲，还要卑躬屈膝的伺候他人，活的没有尊严，还是回去的好，争取早日毕业，找份好工作，娶妻生子，开枝散叶，也对得起二老。</br><br>打架最好的地方似乎永远是山顶，下面便是万丈悬崖，万一打不赢还可以跳崖，就算是死也要死得有英雄气概，于是战斗便在悬崖的山顶上开始了。小巫祝和女人站在西面，左右护法站在东面，夕阳挂在另一座山头之上，斜照在四人身上，将小巫祝和女人的影子投到地上一直延伸到两位护法脚尖上，将左右护法充满杀气的脸蛋儿映的红扑扑的。四人一动不动，仿佛相亲般的先要把对方好好打量一番。然而对决早已经不知不觉的开始了，小巫祝修炼的是吸功之法，并非隔空吸功，但也不需要肢体接触。只要他的影子投到了对方身上，哪怕是一点点，他便可以以影子为介质来吸取对方的功力。这套功法是他修炼的秘法，外人并不知道有此功法。女人作为他唯一的弟子，当然也修得此法，于是二人借着夕阳不断地吮吸着两位护法的功力。</br><br>左右护法不知道世间有此邪功，根本没有防备，小巫祝的吸功之法的绝妙之处就是可以麻醉对方，如同蚊子般，在吸食人类血液的时候人类毫无察觉，等到感觉痒的时候蚊子早已经飞到九霄云外了。同样的，起初二位护法并不知道对面的两人正在偷取自己的功力，只是觉得对方傻傻地站着不说话，说好了是来打架的，就那样呆呆的站着不说话，大概是畏惧了想要退缩了吧。</br><br>等了许久，二位护法开始感觉身体被掏空，方才得知上当了，于是二人同时向后飞掠几米，远远地躲开了小巫祝师徒二人。运功发现体内功力虽有所损失，但并不严重，而且此时功力不再外泄。护法有些恼怒，觉得小巫祝行为举止是小人所为，令人不齿。而在我看来，关系到生死的战斗，不论采用多么无耻下流的手段，只要能活下来，干什么都不过分，毕竟人不为己天诛地灭，我相信小巫祝也是这么想的。英国人很绅士，就连打仗都那么绅士，自己的队伍整整齐齐的列好，等待美洲人也列好队，说上几句话，然后喊个一二三一起开打。然而美洲人不绅士，一股脑的冲上来便是厮杀，于是英国人大骂美洲人野蛮，不讲道理，然而骂不了多久就溃散了。</br><br>先前只是小巫祝师徒略施小计，让左右护法损失了一部分功力，并没有真正的交手。此时的护法有些恼怒，于是他们便动手了。所谓君子动口不动手，所以二人真正意义上动的不是手，这二位一定是葫芦娃转世，神通了得。只见左护法深吸一口气，然后用力一喷，一坨粘液从其口中飞出直袭女人面门而来，速度之快连敏捷的猴子都无法躲避，可女人躲得开，因为她嫌恶心，所以她必须要躲开。那坨粘液朝女人身后飞去，落在悬崖边的一棵前年古树之上，只见那棵树茂密的绿叶迅速变黄最终脱落。难不成这厮吐的是脱落酸？接着，那棵树的树干开始腐烂，一阵风吹来，大树化作灰尘随风而去。女人额头上渗出豆大的汗珠，心里后怕，若是刚才没有躲过去，那此时化作灰烬的就是自己了。随后空气中便不停地传来“呵~吐”的声音，左护法如机关枪般的对女人进行无情地扫射，女人辛苦的躲闪着，显得有些狼狈。</br><br>右护法也小巫祝也没有闲着，古时候以右为尊，所以虽然同为护法，右护法的地位要比左护法高，其功力自然也要高出一筹，因此由左护法对战女人，而右护法对战小巫祝。右护法是个水桶，水桶不是饭桶，是个厉害角色。只见右护法双眼凝视着小巫祝，双手解开了裤带，掏出了自己的老二，稍微调整了一下角度，一道水柱向小巫祝射出。小巫祝心中有些骇然，大巫祝都养了些什么人，竟然修炼的都是这些下流龌龊的功法。虽然鄙视，但他也不敢掉以轻心，越是变态的功法越不能小觑，毕竟和左右护法交过手的人都没能活下来，这说明两套功法的确是厉害，刚才那棵千年古树的死便是见证。</br><br>眼看着一股尿朝自己飞来，小巫祝双脚蹬地飞向天空，右护法自然是穷追不舍，他还真如一个大水桶一般，不停地尿着，空气中弥漫着痰臭与尿臊味，幸亏这里是山顶，风大，否则小巫祝师徒不被腐蚀也要被熏死。小巫祝离开地面的一刹那便后悔了，面对着机关枪般的尿注扫射，他在空中无以借力，难以躲闪，于是他掏出了背在身后的大黑伞撑开以抵挡面前的液体。尿不是好尿，伞是把好伞，尿柱携带者巨大的威力击向伞面，小巫祝被作用力击出几米远落在地面。被大黑伞挡住的尿液反弹回来洒落到地面，地上烟雾翻滚，蚯蚓死了，蚂蚁死了，朽木上的几朵蘑菇也死掉了。师徒二人不明白为何左右护法没有被自己的痰和尿毒死呢，这么剧毒的东西竟然是从人体内分泌的，实在是不可思议。</br><br>交手几个回合，小巫祝便明白了左右护法的套路，想要打败他们，便要堵住左护法的嘴，戳破右护法的大膀胱。小护法不是君子，自然不会行君子之道，那么他便有更加邪恶的套路。</br><br>“脱衣服！”小巫祝对女人喊道。</br><br>女人心领神会，一边躲闪着左护法的攻击，一边往下扯衣服，不一会儿她便赤裸裸的站在众人面前。雪白的肌肤在夕阳的照耀下显得晶莹剔透，配上绝佳的身材当真是美的不要不要的。这让我想起了教学楼前女人也赤身裸体的站在我面前，只不过那会儿她如一具腐尸般皮肤脱落，肌肉腐烂，散发着恶臭。此时的她却是香艳动人，更何况是赤身裸体。</br><br>战斗中的右护法听到小巫祝的喊声之后便朝女人看去，只见她身上的衣服被一件一件的脱去，直到赤裸裸的站在他的面前。作为一个正常的男人，哪怕他功力再怎么深厚，毕竟不是太监，于是他的老二便起了反应，扫射的尿柱便理所当然的停了下来。小巫祝见状飞掠到他身前，手起刀落，部落里便又多了一个太监。疼痛从根部传来，右护法方才知道上当了，都说英雄难过没人关，这无耻的师徒二人竟然在战斗中出此损招，当真是卑鄙小人。右护法一边在心中骂着，一边想这辈子算是完蛋了，没办法开枝散叶。他想将把自己变成太监的小巫祝杀死，但是他现在武功尽废，甚至连个农户都不如，于是他便寄希望与左护法身上。</br><br>小巫祝没有理会地上翻滚的废人，毕竟左护法是靠嘴而不是老二在战斗，哪怕有成千上万个赤身裸体的女人站在他面前，也不会影响他吐痰。于是他依旧在不停地“突突突”，只是此刻他“突突突”的对象由一人变成了两人，这两人一前一后围攻他。他心中埋怨着，为何当初老妈不给他生两张嘴，脸上一张，后脑勺一张，他恨不得自己全身上下都张满嘴，那样以一敌十肯定不成问题。他可以站着吐，蹲着吐，坐着吐，甚至是躺着，一张嘴啃鸡腿，一张嘴吃水果，剩下的嘴来“突突突”。可是他只要一张嘴，但他有两个敌人，他有些应接不暇。</br><br>战斗了许久，虽然左护法有些招架不住，恨不得吃上几颗金嗓子，但小巫祝师徒也累的够呛，于是小巫祝大喊一声：“你先顶一会儿，我去去就来。”</br><br>女人心中大骂老娘都快累虚脱了，太阳挂在山边只剩下一个头露在外面，山风越发大了起来，之前脱的衣服一直没来得及穿上，这会儿被风吹得冷，她一边哆嗦着一边躲闪左护法的臭痰。心中虽然不悦，但师命难违，于是便应了一声。</br><br>小巫祝从战斗中脱身，直奔右护法而来。只见他从靴子中掏出一把匕首，划开右护法的肚皮，一刀刺穿了里面的膀胱，尿液混着血液流到了小巫祝事先打开的大黑伞中。小巫祝端着伞中的尿液向战斗中的二人跑去，然后大喊一声躲开。女人早就习惯了师傅的命令，每一个指令发出，她都会像一台超级电脑般神速的执行，于是她飞跃到小巫祝的身后。</br><br>见徒弟脱身，小巫祝顺势将大黑伞中的尿液泼向对面的左护法，只听“刺啦刺啦”的声音从左护法的身上传来，伴随着的是他身上冒出的白色烟雾。左护法这是升华了，不，是被尿液腐蚀了，最终连骨头都不剩。</br><br>右护法的膀胱实在是大，尿液还在不停地向外流着，地上的石头冒着白烟，不断地被腐蚀，不一会儿功夫竟然被镂空了。</br><br>“快走！”小巫祝喊道。</br><br>于是二人向山下飞奔而去，山脚下师徒二人抬头仰望，一道新生的瀑布从崖顶飞泻而下。负责接应得我不尽叹道：“飞流直下三千尺，疑似银河落九天。”</br><br>女人一边系着衣服的扣子一边赞赏的说道：“好诗！”</br><br>小巫祝看了我一眼说道：“好诗是好诗，但我们没有时间赏景，必须抓紧时间干掉大巫祝。”</br><br>我有些扫兴地说道：“好吧，大家按计划分头行动吧！”</br><br>再回首，只见崖壁已经被尿液腐蚀出一道峡谷，于是此地便多了一处景点，名曰“一线天”。</br><br>（八）死神来了</br><br>    虾兵蟹将被消灭了，左膀右臂被砍掉了，如今的大巫祝俨然成为了孤家寡人，然而我们并没有感到轻松，因为大巫祝拥有难以想象的功力，前面的厮杀对于他来讲只不过是小打小闹而已，但是我们却消耗极大。</br><br>    小巫祝师徒二人肩负着正面战场的主要任务，因为此时派甲士刺杀大巫祝毫无意义，只不过是白白送死而已。对于大巫祝而言，这些人只不过像蝼蚁一般，一口气可以将他们吹到九霄云外，一脚踩下去死一大片。对付大巫祝这样的高手便要派出部落里的最强者，最佳人选便是小巫祝。</br><br>    小巫祝虽小，但毕竟也是巫术界的二号人物，功力不及大巫祝，却也是一顶一的高手。上次与大巫祝斗法失败也是奉了首领之命未及准备，失败是必然的。所以此次与大巫祝还是有得一拼，再加上我在背后放冷枪，赢的把握又大了一些。</br><br>    太阳似乎是预感到接下来的一场恶战，所以它早早的就躲到了地平线下，就连月亮和星星也躲到云后，生怕被高手对决散发的杀意伤到自己，哪怕是笼罩在天空中的乌云也充满惧意，搭着远方吹来的风儿飘向远方，只是乌云太多，所以这一片乌云逃走了，马上便会有下一片乌云飘来，感受到杀意之后也不做停留的迅速逃离。</br><br>    小巫祝师徒二人趁着夜色来到了大巫祝府，刚刚与左右护法的战斗虽使得二人有些疲惫，却也使他们的状态达到了巅峰，这便是一鼓作气，今夜他们必须与大巫祝决斗，因为就算他们不去找大巫祝，大巫祝也会杀上门，谁生谁死都将在今夜揭晓。</br><br>    浓浓的夜色之中，大巫祝盘膝坐于府前空地中央的祭台上，面前一张供桌，摆满了牺牲贡品。小巫祝师徒也布置好相关物事，他们是巫祝，决战便是斗法，一场没有刀枪剑戟的战斗。战斗开始后，我悄悄的藏在广场的一角，暗中观察，以便寻找最佳时机出手。我放缓自己的呼吸频率，降低心率，生怕被大巫祝发现，我相信以他的修为境界，发现一个藏匿在手枪射程范围之内的人并不困难，所以我只能趁他与小巫祝战斗而无暇感觉周遭环境气息变化之时才敢潜伏过来。</br><br>    两位巫祝之间的战斗并不精彩，之所以这么说是因为外人根本看不到二人的动作，他们抖的不是武功而是法。正因为如此，我才有机会趁大巫祝入定之时，在他背后放冷枪。风起云涌，杀气在空气中来来往往，扰乱了天地气息，就连没有修行过的我也能感受的到这种杀气，幸亏我躲得远，不然怕是要被撕成碎片。来自敌对双方的两股杀气碰撞、交织，最终形成了一股气流旋涡，旋涡的直径随着三人功力的注入在不断地增大。地上的枯枝烂叶甚至是石子都顺着旋涡向高空爬去，最终被甩到远方，不知道会落在哪家的屋顶上砸出大大小小的洞来。</br><br>    本来要准备入睡的人们此时犹如受惊的老鼠般到处穿梭，躲避着天上坠落的重物，时不时地有人被砸伤或者砸死，他们无处可躲，在没有钢筋混凝土也没有砖瓦的时代，人们只能用茅草搭建屋顶，所以躲在屋子里并不安全，高速坠落的重物很容易将屋顶击穿。逃也是死，不逃也是死，然而人们在面对危险的时候总是会不加考虑的逃跑，这是人类的本能，也是动物的本能。</br><br>    一个石子击中了空中飞翔的鸟儿，正好落在一位坐在院中乘凉的娃娃的面前，娃娃捡起鸟儿正欲开心的大叫，却被天空落下的其他石子砸中，一下子晕死过去。娃娃的妈妈看到躺在地上的孩子嚎啕大哭，大骂天地不仁以万物为刍狗，然而没等她骂的痛快，一块石头从天而降恰巧砸在仰面望天的她的嘴上，牙齿掉落未及落入腹中，她便就此死去。</br><br>    一对年轻情侣正坐在河边等待天上划过流星时许下愿望，一生一世的幸福是每对恋人所期望的，然而他们没有看到流星，也没有盼到幸福。天上飞来一把不知道是谁家的斧头，不偏不倚的正好砍在男子的脑袋上，脑花儿四溅，落在女子的脸上。女子刚反应过来是怎么回事情，正欲嚎啕大哭，一把菜刀从天而降，结束了她的痛苦，于是两个人虽然未来得及看到流星而许下愿望，但他们却可以永永远远的在一起了，不吵不闹，静静地厮守，这又是多少人羡慕却得不到的结果呢？</br><br>    男子乙看到了眼前的一幕，仰天长啸，大骂老天不公。他是女子的爱慕者，奈何女子早就心有所属。今夜，他尾随着二人来到了河边，在树后看着二人恩爱有加，黯然神伤又有一丝愤怒和无奈。当看到男子甲被从天而降的斧头劈死时，他心中充满着欢喜，心想老天终于开眼了，自己日夜念叨的诅咒今天终于实现了。他认为只要男子甲死了，女子便会喜欢上他，他与她之间就隔了一个男子甲的距离。所以他在心中赞美着老天爷，赞美着那把斧头，世间的一切事物似乎都变得美好起来，今夜他找到了久违的快乐。然而，还没等他高兴多久，一把从天而降的菜刀将女子劈死了。大喜大悲之间的转变快的让他有些不知所措，脸上还未完全绽放的笑容渐渐地化作悲伤，进而是愤怒。悲伤是因为他朝思暮想的女子死了，自己的希望彻底变成了绝望，爱的人死了便不再有任何机会，自己追逐了那么久的爱情以对方的死而草草结束，虽然是单相思，但心中能够装着一个人也是快乐的，虽然更多的是对方给自己带来的伤害，但总有那么一刻是幸福的，这便好，默默地守候也不失是一种简单的幸福。不久，悲伤被他的愤怒所替代，即便是死，他们都死在一起，虽然他们都死了，但却是相伴而终，在阳间待腻了，便相约去阴间继续厮守，或许他们所要许的愿望便是不求同年同月同日生，但求同年同月同日死。如今，他们得偿所愿，虽然是死了，却比活着的人更加幸福，怎能不让他心生怨恨。</br><br>    男子乙从树后走出来，一直来到情侣尸体面前，他厌恶的看着地上的两个人，狠狠地踹了男尸一脚，一股疼痛从脚尖一直传到了心窝。他蹲下身，拿起斧头挥舞着，将男尸大卸八块仍不解气，他想把他剁成肉酱，但发现自己并没有充足的体力，于是他将尸体碎块全部踢到了河中喂鱼。一只王八闻到了血腥味，从水中探出脑袋，它已经很久没有吃肉了，当它看到河水中飘过来的尸块时它欢快的在水中翻滚着，心想终于可以打打牙祭了。于是它奋力地向尸块游去，就在它张口准备咬下去的那一刻，飞石从天而降，不偏不倚的砸在它的脑袋之上，本就不大的脑袋瞬间开了花。这只王八死都没想到自己会这么倒霉，自己的龟壳那么大，脑袋那么小，为何石头偏偏砸在脑袋上，可惜它没有机会想这些问题，因为它死的很干脆。</br><br>    男子乙看到了水中的一幕，愈发的恼怒，心想难不成男子甲成仙了？地上和水里的俗物竟然不能伤他一毫，只有老天才能收他，那么他便是飞天做神仙了，而且是和女子双双成仙。他不再喜欢女子了，就是从这一刻开始的，自卑战胜了爱恋，她给他的自卑便应该由她来承担，于是他将她碎尸万段，即便如此，他还是无法平复愤怒的心情，没了，一切都没了。他想到了死，因为他生无可恋，死了便一了百了，于是他走到河边，一头扎了进去。</br><br>    黑暗的夜空中飞来一个更加黑暗的巨石，巨石径直落入河水之中激起巨大的水花，男子乙被水花冲到岸上狠狠地摔落，然而他没有被淹死，也没有被摔死。河伯不收他，阎王爷也不收他，老天爷更是想看着他在人间活受罪。有的人怕死，小心翼翼的活着却一不小心就死了；有的人想死，千方百计的去死却活的好好地。貌似很多事情总是事与愿违，生活就是这般的充满着不可知与戏剧性。</br><br>        战斗总会有牺牲，只是这一场战斗不一样，没有参加战斗的人们无故遭殃，正规作战时怕死还可以当逃兵，然而这次的战斗是一场灾难，谁都无法躲避，最安全的地方是大巫祝府前的广场，也就是旋涡产生的地方。然而在广场上的人并不安全，因为战斗便是发生在这些人的身上，不是你死，就是我亡。巨大的漩涡消耗了三人极大的内力，他们拼的不单单是内力的强弱，更是耐力与毅力。</br><br>        天长地久有时尽，没有吃不完的米和油盐，没有砍不完的材，没有开采不完的资源，同样也没有耗不尽的内力。广场上对战的三人已经开始力竭，尤其是小巫祝师徒二人，道行本就不如大巫祝，而且日落前对战左右护法已经是疲惫至极，今夜对战大巫祝这么久实属巅峰状态下的爆发，然而这种爆发极损内力，所以他与女徒弟额上汗珠滴落，已经是强弩之末，下一刻怕是就要崩溃。可是我还没有寻到最佳的出手时机，因为我依旧能感受到大巫祝身上源源不断传来的强烈的杀气，虽然我很替小巫祝师徒担忧，但我此刻绝对不能出手。我取胜的关键在于出其不意，必须趁大巫祝虚弱的时候开上一枪，否则子弹再快，也很可能被大巫祝躲过去，修行界的高手总会给人各种意外与惊喜，一旦我第一枪没有击中，后面的子弹怕是也没有机会打出去了。</br><br>        正在我干着急的时候，夜色中的广场角落走来一个显得有些失魂落魄的身影，影子越走越近，走至我身前却没有多看我一眼，而是径直向广场中央的大巫祝走去。他不畏惧大巫祝身上散发出来的强烈杀气，他不怕死，他是来寻死的，他刚刚失去了多年来积攒在心中某个角落的爱，他感受不到活着的意义，他是来寻死的，他是男子乙。乙永远排在甲的后面，虽然二人都没有名字，但是甲与乙早已经注定了主角与配角，所有的光环与幸运都盘旋在甲的头顶，而霉运总是与乙相伴，甚至是连死都死不痛快。河水淹不死他，陨石砸不死他，上吊的绳子承受不住他身体的重量，斧头与菜刀似乎也不愿意侵入他肌肤一分，他尝遍了一千零一种死法却总是不能如愿。</br><br>        男子乙是无畏的，因为他死不了。男子乙内心是恐惧的，他怕下一种死法还是杀不死自己。他如木头人一般漫无目的的走着，不知道翻越了几座山，跨过了几条河，他鬼使神差的走到了大小巫祝对战的广场之上。生命总有归宿，他相信自己也有归宿，老天为人们安排好了一切，该五更死，阎王就不敢三更收。男子乙嗅到了死亡的味道，是他自己身体上散发出来的气息。都说乌鸦喜欢围着将死之人盘旋，因为将死之人身体散发着死亡的气息，乌鸦嗅得到，于是便一路追随，只能人们人死肉腐之时，它们飞上前来啄几口，填饱饥肠辘辘的胃。</br><br>        夜色很浓，没有乌鸦，甚至连虫鸣都听不到，广场上杀气太重，一切生命体不是逃了就是没来得及逃便被杀死了，我在地上刨了一个坑，将自己藏在里面，以减少杀气对我的伤害，然而背部长时间暴露在杀气之中还是受了不轻的伤。男子乙可以无视杀气的伤害，他已经很多年没有洗澡了，皮肤表面覆盖着厚厚的泥垢，刀枪不入，刚刚斧头和菜刀都砍不透，何况这些杀气呢。他一直很想死，然而在死了一千次都没有死成以后，他依旧想死，却不想平平淡淡的死。</br><br>        大巫祝被公认为部落里乃至整个世界上最强大的人，他想拥护谁做首领，谁就会坐在那把椅子之上，只是做到了首领的位置上并不代表真正的拥有至高无上的权利，因为首领只不过是一个傀儡而已，真正的掌权者和决策者是大巫祝。前面的三位首领都是大巫祝立的，也是他假天之名而杀的，现任首领知道自己的命有一天会葬送在大巫祝之手，所以他暗地里派小巫祝刺杀大巫祝。迫于舆论压力，大巫祝不好明火执仗的杀死首领，也是安排杀手背地里刺杀。其实大家都清楚二人之间的矛盾，只是迫于大巫祝的淫威，无人敢反抗，因为反抗必死。</br><br>        男子乙不再惧怕大巫祝，因为他就是来寻死的，他尝试了一千零一种死法都没有死成，大巫祝是他最后的希望。只要大巫祝还活着，他便有希望死去，所以他从河边一路死过来，终于活着到达了广场之上。他没有迟疑，径直朝大巫祝走去，因为他死了一千零一次，他确信自己是要死的，不需要再考虑，所以哪里有死的希望，他便毫不犹豫地走上前。</br><br>        正在对抗师徒二人的大巫祝感到背后传来了一股死亡的气息，气息慢慢地靠近，渐渐浓烈起来。这是他生来第一次感受到这么浓郁的死亡之气，这气息如同刚开封的烈酒一般刺激着他身上的每一个毛孔，他终于感受到了什么叫做危险。大巫祝双手自胸前向上一推，一股强大的气流直逼小巫祝师徒二人而去，二人早已经是苦苦支撑，受不住气流的冲击，纷纷倒地吐血。</br><br>        我没有动，只是静静地看着眼前的一切，因为我有预感，眼前的男子乙会给人带来意想不到的惊喜。他看似很普通，普通的身材，普通的相貌，普通的气质或者说没有气质，普通的装扮。可他越是普通，便越让人觉得不普通，因为普通人无法承受住大巫祝的暴击，而他依旧慢慢地向前走着。死亡在一步一步地靠近，大巫祝转回身，警惕的看着眼前的年轻人，心中竟有些不安。</br><br>        “你是谁？”大巫祝难得开口说话。</br><br>        “我没有名字，大家都喊我乙，因为我永远不可能成为甲，就算是死他都死在我前头，他活的比我容易，死的比我简单，而我生不如死的时候却怎么都死不掉，所以我是来送死的，我不死，你死！”男子乙面无表情的说道。</br><br>        大巫祝不明白眼前的男子在说什么，但他明白二人之间只能活一个，既然明白一切问题就变得简单起来了。他不需要关系男子乙究竟是谁，在他的身上发生了什么苦情戏，他只要杀死他，消除死亡的威胁便好。于是大巫祝出手了，他用的是自己的绝杀技，因为他感觉眼前的男子不简单，值得他奋力一击，他怕自己一招没打死他，便会死于他之手。</br><br>        飞沙走石，风云涌动，天地气息在大巫祝的带动之下凝结成一道气剑直袭男子乙的面门。乙没有反抗，也无法反抗，因为大巫祝出手实在是太快了，所以他被击中了，巨大的力量将他击倒在地，又弹了几下。男子乙慢慢地从地上爬了起来，没有伸手弹去身上的泥土，而是径直朝大巫祝走去。</br><br>        大巫祝呆立在原地，似乎不相信眼前发生的一切，刚刚他使出了自己十成的功力，那是他的必杀技，哪怕是一头牛也经不起他这样近距离的一击，然而，男子乙只不过是摔倒了而已，没有外伤，也不见内伤。大巫祝感受到了死亡的气息一步步的逼近自己，于是他在接下来的几分钟内使出了所有的招数，招招毙命，却终究没有将男子乙打死，于是他死了。</br><br>        对于男子乙来说，打不死自己的人就没有存在于这个世上的价值，于是他出手了，简简单单的一拳砸在大巫祝的脑袋瓜上。咯吱一声，大巫祝的脑门碎裂，脑浆崩了出来，溅到男子乙的脸上。男子乙没有擦去脸上的脏物，一个满脑子想着死的人不会在乎太多，他只在乎怎么才能死掉，谁能让他死掉。    </br><br>（九）回归</br><br>•     不可一世的大巫祝有些乌龙的死去了，他自己不明白，在场的人也不明白，这件事情传了出去，世人也不理解。仅仅是一拳头而已，他便死了，平日里不可近身的大巫祝被一个怎么看都是个失败者的连普通人都不如的男子乙轻轻地一拳打死了。这是老天在开玩笑吧，大自然是奇妙的，万物相生相克，这样想便也不觉得奇怪了。</br><br>       小巫祝师徒二人有些惊骇，随之而来的是欢喜，若不是男子乙出手，他二人的性命怕是要交代在这广场之上了。于是二人相互搀扶着来到了男子乙的面前，抱拳深揖一礼说道：“多谢壮士出手相救，日后用得到我师徒二人的地方，万死不辞！”</br><br>       男子乙平静地看着二人说道：“现在就用得到你们。”</br><br>       小巫祝抬头说道：“但凭吩咐！”</br><br>       男子乙：“你们俩杀了我，否则就让你们万死。”</br><br>       二人有些惊愕，又有些怀疑的问道：“杀了你？！”</br><br>       男子乙依旧面无表情的说道：“再问我就杀了你！”</br><br>       躲在角落的我猜得到男子乙的企图，因为就在刚才我听到了他与大巫祝的对话，知道他是在求死，若死不成他便要杀人。大巫祝可以死，但是小巫祝不可以，毕竟我要返回自己的世界还要靠小巫祝，所以我得让他活，至少在我离开之前他不能死。</br><br>       “且慢！”，我一边喊，一边从角落中冲了出来，继续说道：“我可以杀死你!”</br><br>       男子乙回头看向我，没有任何表情，眼神中也看不出任何的情绪，只是淡淡地说了一句：“我不死，你死！”</br><br>       于是，原本为大巫祝准备的子弹被射入男子乙的脑袋，男子乙应声倒地，没有抽搐，没有呼吸。有志者，事竟成，历经几番挫折，他终于如愿以偿，他就静静地躺在地上，或许到了阴间，他会继续追杀男子甲吧。</br><br>       小巫祝师徒二人见男子乙死去，长吁一口气，瞪着不可思议的眼睛看着我，举世无敌的大巫祝被男子乙轻轻一拳打死，屌炸天的男子乙被我手中握着的小小手枪一枪毙命，而我仅仅是用食指轻轻地扣动了扳机。这么恐怖的武器流传于世，必会引来一场腥风血雨，所幸知道这把枪的只有广场上的这三人。</br><br>       “送我回去”，我轻声说道。</br><br>       二人先是一愣，随即明白过来，我心中所想正是小巫祝心中所念，只要我走了，他便是天下无敌，于是他很痛快的答应送我回到自己的时代。</br><br>       师徒二人摆好了祭坛，寻了些木材，将大巫祝与男子乙的尸体放于材火之上，火焰摇曳，一股烧焦的肉味随风飘来。小巫祝挥舞着木剑，口中不知道念叨着什么咒语，只见两个焦黑的人影从烈焰中站起，缓缓的向我走来，正是死去的大巫祝与男子乙。</br><br>       我正欲逃跑，女人说道：“莫怕，想要回去就需要两具焦尸相助。”</br><br>       还没等我搞明白女人的话是什么意思，焦尸早已行至身前将我架起。看着二位的尊荣，我忍不住一阵恶心，开始呕吐起来，事物吐干了就吐胃液，然后是胆汁，似乎内脏也被吐了出来，感觉身体被掏空。最后我开始精神恍惚起来，飘飘然似羽化而登仙，失去了知觉。</br><br>       夜，很黑，却黑不过影子，空气中弥漫着焦肉特殊的香味，闻之让人感到饥肠辘辘，寻着香味到最浓烈的地方，便是其散发的源头。黑暗中矗立着两个更加黑暗的影子，气氛显得十分诡异，我不在广场之上，而是在我熟悉的宿舍，我躺在床上，影子踩在椅子之上，趴在我的床边静静地看着我。</br><br>       “卧槽！”伴随着惊恐地叫声，我一拳头挥出去，两个影子应声倒地，骨头碎裂的声音由地面传来。我伸手将床头台灯调至最亮，偷偷地向地面瞄去，只见两具焦尸躺在地面之上，胳膊腿碎了一地。</br><br>       没想到小巫祝的法术如此不同寻常，竟然用两具焦尸带我穿越时空，他也许不知道在法治社会，这两具尸体会给我带来多大的麻烦。思来想去，既然无法毁尸灭迹，那便报警好了。</br><br>       外面一片吵杂，我小心翼翼地下了床从焦尸身旁走过，打开了宿舍门向外看去。楼道上站满了学生及警察，每个宿舍都敞着门，空气中到处弥漫着肉香。我顺着楼道前行，只见阳面的每个宿舍都空空如也，而阴面的所有宿舍均躺有两具焦尸，场面极其恶心。</br><br>       第二日，警方发布微博称“昨夜，本市X大学某栋学生寝室发生离奇群体死亡事件，阳面寝室所有人均被烧焦，尸体在相应的阴面宿舍找到，具体原因警方正在进一步调查，将会给公众一份满意的报告。”</br><br>       恐慌蔓延于整个校园，住在阳面的学生纷纷要求调换寝室，非阴面不住，胆子小的学生直接请假回家，一来怕自己被烧焦，二来怕自己的寝室中出现几具面目狰狞的焦尸被吓死。</br><br>       或许根本就没有什么大小巫祝，也没有男子乙，因为我宿舍的那两具焦尸根本就是对面寝室的两位同学，我不清楚这些人是怎么死掉的，是否跟我有什么关系，我没有杀人，也没有放火，或许是这栋楼的地理位置与风水触发了某种自然反应，导致阳面产生了强烈的电磁反应，房间如同一个大大的电磁炉，整个人被烤焦。或许我的穿越只是在强烈的电磁干扰之下产生的意识错乱，那么眼前的景象也可能是假象。</br><br>       有没有游行，有没有穿越，有没有死人，有没有活着？或有一日大彻大悟之后，又该魂归何处？</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双山记</title>
      <link href="/post/8f43.html"/>
      <url>/post/8f43.html</url>
      
        <content type="html"><![CDATA[<p>人间四月初，天气渐暖，武汉的春来的更早一些，不穿外套，竟也有几分燥热。恰逢周末晴天，BMB一年一度的春游便定在今日。</p><span id="more"></span><p>早上七点，大家于西门集合，便乘坐大巴出发了。一路上有说有笑，不知不觉，便达到了目的地。</br><br>大概是前夜没有休息好，我一直处于精神恍惚的状态，眼前的一切事物均呈模糊状，看不真切。我甚至不知道这里是什么景区，一路上尾随着队伍前行。</br><br>大巴将我们送至山腰便停了下来，此处尚为比较宽广的马路，路两边是两座陡峭的山峰，虽处同地，然而两座山峰景色却截然不同，左侧山峰漫山红花却不见一叶，如同整座山峰化为一片火海。右侧山峰不生一草一木却是怪石嶙峋，独有一番风味，若是爱石之人至此，定不舍得离开。</br><br>两座山峰皆及其雄伟，一日之内只能游览其中一座，不同的人口味不同，有说看花，有说赏石。花中充满生机，石上润涵死寂，双方各执一理。商议之后决定兵分两路，各选一山游览。</br><br>花山虽美，然而我看着竟有一股灼伤感，不敢细看，反而是石山让我心绪稍宁。于是我便选择赏石山，随行的还有少数其他几位同学。石山路难行，然而并不枯燥，不论是大石还是小石，每一块山石都形态各异。有几位师妹被这景色迷住，争相拍照留念，半天过去，离山顶仍旧很远。山中并无人工铺就的台阶，攀爬起来较为困难，庆幸的是路上行不多远便会有一块较为平整的大石台可以作为落脚点，以便休息。路上有粗大的铁链可以攀扶，否则大部分人不敢攀爬此山。</br><br>我爬的累了，便走到一块大青石上停下来休息，此处离山顶已经不远，稍后便可一鼓作气冲上去。脚下的大青石横插于山体之上，如一把巨斧砍在山腰，如若松动，青石与石上之人便会坠落谷底，粉身碎骨。我慢慢地向青石边缘挪去，此处没有任何保护措施，只是在青石上刻了一行“此处危险，游客止步”的标语。</br><br>我本恐高之人，哪怕是有铁栅栏在前，我也不敢踏前一步。今天进入此山之后，我仿佛失去了一切恐惧之心，竟来到青石边缘向下看去。目光所及处，是一层层薄云浮于空中，透过薄云，隐约可见山谷马路，此时的马路如同一条小蛇般蜿蜒曲折，路上的车像蛇背上的蚂蚁搬缓慢蠕动着。再望向对面，花山更加的火烈，却不见一人，亦不闻鸟鸣，勃勃生机间散发着一股死寂的气息，仿佛进入花山的一切皆被焚为白灰。</br><br>我朝着花山大喊一声，想互换对面的同学，谁知喊了许久，却未得到任何回答。我喊得累了便坐下来休息，细想刚才的一切，发掘有些不对劲。并不是花山的人没有回答我的互换，貌似我刚才的喊声根本就没有传出去，而是渗透到石山的每一个石缝之中，渐渐地被吞噬。看着花山，自嘲的一笑，又是自己胡思乱想了，他们应该不会出事的。休息片刻，我便起身继续向山顶爬去。和我一同出发的同学要么在我前面，要么还在后面拍照，此时只剩我一人，如同这石山般孤寂。长吸一口气，吐尽胸中浊气，继续前行。</br><br>大半日已过，终于爬到了山顶，极目远眺，脑海中浮现出一句诗：“会当凌绝顶，一览众山小”。远处的山如同一个个的小土包般散布着，唯有对面的花山与石山齐平，似乎一分不高，一分不低，心中不禁感叹造物主之神奇。</br><br>此处可以看到花山之顶，不出所料，山顶仍旧是一片花海，火红而不见一丝杂色。而石山之上却是另外一番景象，山顶宽阔不见边际，中间是一处大河，河宽而水少，河床之中尽为白石，石上无任何青苔，河中也无一棵水草，水至清而无鱼，竟无一丝生机。脱下鞋子，踩在白石之上，水凉却并不刺骨，倒有几分舒服。行不多久，见前方黑压压的一片，似乎有什么在向我蠕动。顷刻间，那团物事便已到眼前，定睛细看，竟是成千上万条小蛇。</br><br>这些蛇二指粗，六七十厘米长，蛇皮黑底紫花，如同花布一般，然而却恐怖异常。本来燥热的我，此时一股凉气由脚底钻入心窝，整个人竟是呆在了原地，迈不动步子。我不知道这些是不是毒蛇，若有毒的话，我必死无疑，就算是没毒，也不代表安全。</br><br>待我终于鼓足勇气要跑的时候，蛇群早已爬至我跟前，我只好闭眼等死。就在我瑟瑟发抖之时，竟然听到了人们的欢呼声，声音是从蛇群爬来的方向传来的。我睁开眼看去，果见十几个人欢呼雀跃，兴奋异常。再望向那些花蛇，竟是理都没有理我，径自向我后方跑去。还未待我想明白是怎么回事，对面的人们便已来到面前。每个人的手中都拿着几条死蛇，我这才知道，原来那些蛇是在逃命，躲避这些人的捕杀。我长须一口气，一下子瘫坐在河中，任凭河水打湿裤子，庆幸自己捡回了一条命。</br><br>那些人不屑的看了我一眼，并未说话便向前方的蛇群呐喊着冲去，如同狼入羊群般，个个双眼充血，杀红了眼。待他们走远，我站了起来，继续前行，寻找前方的同学。不知走了多久，前方竟不见一人，天色已黑，按事先约定，该回到集合地返程了。我拿出手机，欲拨打师弟的电话，喊他们快些回来。然而刚刚坐在水中，手机早已经短路，不能用了。我只好加快脚步继续往前走，大约又走了半个小时，终于发现了人影。</br><br>面前是一座水潭，潭水青青，边缘处弯腰蹲着几个人，其中便有实验室的同学，谭边石滩上围了几群人，似乎在买卖东西。我来到潭边向下看去，只见两位师弟在水里摸索着什么，看不多久，只见其中一师弟兴奋地大喊大叫，手中握着一条大蛇。这条蛇与之前的小蛇不同，通体黝黑，泛着光，看起来像一条大蟒蛇，却没有鳞片，身体如黄鳝般，只是头确实为蛇头，还不时地吐着信子。</br><br>潭中其他几个人也是在捉大蛇，我仔细的向潭水中望去，只见水底密密麻麻的大蛇游来游去。这座水潭如同一口大锅，大蛇如同锅里的饺子般翻滚，这等景象，实在是很诡异。那些捕蛇者个个双眼通红，着了魔般的捉了一条又一条。捉到的蛇都被送到谭边的人群中，我走进人群，见人群中站着一位中年男子，手中拿着杆秤称着一团肉。他的面前摆着一个摊子，摊子上堆满了肉，旁边的水桶里堆放着几个蛇头，原来他是在这里卖蛇肉。奇怪的是这些蛇被斩断之后并未流血，蛇肉晶莹剔透，不见一丝杂色，只有蛇骨火红，如同花山一般，似在燃烧。</br><br>一个师弟走到摊前，询问蛇肉怎么个卖法。老板答曰45元一斤，于是两个师弟各买了一斤，转身离去。我跟在他俩身后，他俩却如同没看到我一般一直往前走，来到另一堆人群中间。人群围着的是一座烧烤架，架后站着两位年轻人哼着曲子在烤肉，原来大家把买到的蛇肉在这里烧烤。旁边蹲着几个人，正在吃刚刚考好的蛇肉，吃相相当夸张，狼吞虎咽也不能形容其啃食速度，比起传说中的饕餮也毫不逊色。</br><br>那些吃完蛇肉的人，随即又跑到潭水中捕蛇，然后是买蛇肉，再吃蛇肉，如此往复循环。我看向师弟们的肚子，早已经是鼓胀的要炸了，想必他们已经吃了几次了。难不成这蛇肉会让人上瘾，根本停不下来？定是如此！这些蛇本就长相怪异，以前从未见过，更何况这么小的空间内竟能生存如此多的蛇。</br><br>水潭的另一边角落里有一个小屋子，不时的有人走进去，许久却不见人出来。我心中感到奇怪，屋子并不大的样子，怎能容纳那么多的人？我偷偷地向屋子那边摸过去，欲探个究竟。此时天色已经较黑，恰巧我穿了一身黑衣，可借夜色隐藏自己。屋子并不远，一根烟的功夫我便来到了屋子门口，侧耳听去，只闻得大笑声。屋子是木板搭成的，我从木板缝隙想里看去，之间一块大石板上躺着一个浑身赤裸的男人，身上鲜血淋漓，旁边蹲着一个女人，手中握刀，一刀一刀地割着男人的肉。肉片被收集到旁边的桶里，每装满一桶，便会有人将满满的一桶人肉倒入屋子角落的洞中，那个洞连通着水潭，潭中的蛇瞬间便会将人肉吞尽。奇怪的是笑声不是由持刀的女人发出的，而是被宰割的那名男子，他似乎感受不到刀割肌肤的疼痛，每一刀下去，如同给他瘙痒一般，惹得他哈哈大笑，直到肉被割尽，他依旧笑个不停。原来女人并未割断其大动脉及大静脉，男人依旧活着，或许那些蛇只吃活人肉。直到最后，女人用锤子敲碎男人的脑袋，将其脑浆挖出，饲养一条浑身火红的大蛇，那应该就是蛇后。这条蛇后让我想起了对面的花山，那些花红的太过妖艳，难不成与这些蛇有关？不知道花山上的同学们此刻面临着什么样的境遇。此时的我也顾不上他们，自己能逃出去便也是老天垂怜了。</br><br>此时的我想要逃出去应该不难，其一，我并未吃蛇肉，神志尚清；其二，蛇不吃活人，只吃肉片，故蛇没有攻击性；其三，真正有威胁的应该是此处买卖蛇肉及屋子里的人，而此刻他们并未发现我有何异常。唯一的难处便是带着几位师弟离开，如今他们已经神志不清，待他们彻底吃饱了便要被拉进小屋屠宰了。我一个人带不走他们，若是下山喊人帮忙时间肯定来不及。</br><br>摆在面前的有两条路，第一，独自逃生；第二，为民除害，消灭敌人。第一条路定能成功，第二条怕是要与敌同归于尽了。</br><br>考虑良久，终不忍离去，木屋里只有一男一女两个人，只要不惊动外面的人，我应该可以趁机杀掉他俩。想到此，我调整了一下呼吸，装作无神的样子走进木屋。<br>女人示意男人过来脱我衣服，女人走出小木屋不知做什么去了。男人走到我面前，开始解衣，趁其不备，我用藏在袖子里的刀划过男人的脖子，他还未来得及说话，便被我割断了颈动脉和气管。我将两个人的衣服互换，将男人的尸体搬到台子上，用一个草帽挡住了他的脸。</br><br>不一会儿，女人走了进来，看到台子上的人以为是我，便没好气的说到:“怎么还没有脱衣服？”</br><br>我怕被她识破，不敢出声，只是用手指了指木屋角落通向潭底的洞。她缓步走过去，低头看下去，我顺手拿起旁边的炮锤朝她脑袋砸去，可怜的女人依旧未来得及呼喊便已脑浆飞溅。整个人一头栽倒到洞中。蛇后嗅到脑浆的气息，一股脑地冲过来，却为时已晚，女人早已落去潭底，水中翻滚的黑蛇并不理会女人的尸体，因为它们只吃肉片。蛇后似乎怕水，没有钻入潭中吸食脑浆，而是显得有些狂躁，似乎为失去美味的食物而愤怒。</br><br>蛇后转头瞪着我，我的目光正好与它的双眼相对，目光所及之处是两团熊熊燃烧的烈火，是的，它的眼睛在燃烧，如同花山上的花一般火红。我感受到气温在急剧的上升，整个人开始燥热起来，仿佛下一刻就要被融化掉。</br><br>来不及思考，我纵身跳入洞中，落入水潭时正好踩到女人的尸体。虽然不祥，但总算是摆脱了上面的蛇后。正要庆幸自己逃的快，谁知水温竟然也开始升高，潭中的黑蛇和捕蛇人早已逃之夭夭，我也手脚并用迅速逃离了水潭。</br><br>不敢停留，我拉上岸边上的两位师弟，逃兵一般的飞奔。两位师弟神智已经清醒，见到四处串来串去的大黑蛇吓得腿软，跌跌撞撞的跟着我一路逃去。</br><br>气温逐渐降了下来，表明蛇后并没有追上来，我们停下来稍作休息，不敢耽误太久，继续前行。</br><br>大约走了一个小时，前面是一个很大的湖泊，湖水在月光的照耀下泛着光芒。然而我们并没有赏景的雅兴，不离开此山便不敢保证安全。湖泊很大，望不到边，想游过去是不可能的，也没有办法绕过去。心中正发愁，互听芦苇荡中传来一男人的歌声，声音浑厚有力，歌声的主人应该是一内力深厚之人。</br><br>未及多想，歌声戛然而止，抬头望去，一中年男人划着一只小船停在我们面前。我心中大喜，果然是天无绝人之路，这男人定然是天神下凡，解救我们的。</br><br>相互打过招呼之后，便询问男人能否带我们到湖的另一边。怕出意外，我并没有提及刚刚经历的诡异事件，只说想去湖对岸看一下。男人爽快的答应了。</br><br>开到船上，心终于可以放到肚子里了。小船慢悠悠的驶向对岸，过了半小时的样子，我们终于看到了湖岸。心中窃喜，那蛇后怕水，定然追不过来，我们已经安全了。看到岸边有灯光，想必是有人居住，一会儿找个人家借宿一宿，以解登山之疲乏。</br><br>想着想着，只见男人嘴角扬起一丝诡异的微笑，瞬间又恢复到面无表情。我揉了揉眼睛，怕是自己看花了眼。男人依旧面无表情，我摇了摇头，心想自己肯定是被那些蛇吓破了胆，看什么都不正常。</br><br>我闭上眼，开始深呼吸调整状态。突然我感到有水打湿了衣服，睁开眼发现船正在下沉，男人早已消失不见。不一会儿，船已经沉入水底，我也开始下沉，头没入水中。我屏住呼吸，试图用脚蹬地，谁知这里的水依旧很深，我张开双臂，用手拨水，终于将头露出了水面，借机换了一口气，便又没入水中。这里的水颇为奇怪，感觉浮力很小，人总喜欢往下沉。在水中一浮一沉折腾了十几分钟，我慢慢的放松下来，一点点向岸边游去。幸好沉船点离岸边不过十多米，方才捡回一条小命。三个人游到岸边，抓住没入水中的铁栅栏调整着呼吸。</br><br>气调顺后，才仔细观察周围的环境。月亮已升至天空正中央，正是最亮的时候。借着月光，四周的景色一目了然。岸边矗立着一座别墅，我们面前是围绕院子的铁栅栏，一部分已经被水淹没。我们翻过栅栏，进入到院子中。院子里的水已没过膝盖，看来这里的湖水水位涨了不少。我们向小偷般蹑手蹑脚的前行，试图找到出口。这座别墅散发着一股阴寒之气，定然不是什么好地方。窗户中有幽暗灯光飘出，却不见人影，四周一片死寂，没有一丝风，湖水也如同凝结了一般，纹丝不动。</br><br>我们转遍了院子并未发现出口，只有一扇门可以进去屋子中。于是我们只能硬着头皮上了，门并未锁，轻轻一推便开了。面前是空旷的房间，大的出奇，整个一楼便是一间屋子，却没有任何家具。屋子是教室一般的结构，最前面是一口超大号红漆棺材，屋子中其他位置密密麻麻布置着上百个黑色小棺材。棺材都敞着口，棺材盖横盖在棺身之上，每个棺材中均坐着一人，双手搭在棺材盖上，就如同趴在书桌上的小学生一般。最前面的红漆棺材棺盖紧闭，上面坐着一老者，只见他轻咳几声，沙哑着嗓子喊道：“各位稍安勿躁，听我把话说完”。见场下安静下来，老者接着说道：“目前人口太多，这片墓地已经不够用，为了维持秩序，经委员会讨论，决定加收墓地费，交了钱的可以留下来，没有钱的请尽快离开。”</br><br>未等老者继续解释，场下又沸腾起来，骂声如潮水般涌向前来。众人的唾沫星子竟然汇集成流，飞向红漆棺材，老者未及做出反应，便被唾沫淹没，身体瞬间融化，整个人便这样人间蒸发了。</br><br>此时，二楼传来一个中年男子的声音：“大家安静，时间马上就要到了，是死是活你们自己决定吧！”</br><br>我抬头望去，说话的正是刚刚划船的那位男子，看样子，他是这片墓地的主人或者管理员。我心中琢磨着他刚才说过的话，什么是死是活，不就是一块墓地吗，怎么又关乎到死活了呢？</br><br>我走到房间的角落，见一小男孩站在那里低头不语，我这才发现，还有很多人挤在角落，并没有坐在棺材中。问过小男孩之后，我才明白这里发生了什么事情。原来屋子里的这些人都是魂魄，并未活人，这片墓地原本是他们的葬身之地，可是后来被一群外来者霸占了。强盗们在墓地之上盖起了别墅，一楼是普通墓地，二楼是VIP墓地，三楼则归管理者所有。最初的时候，只要交钱便可以在一楼买到一块终身墓地，但随着死者的增多，墓地变得拥挤起来。于是管理员便开始按月收租，且租金在不断的上涨。一些穷鬼承受不了高额的租金，只能够流落街头。</br><br>随着穷鬼数目的增多以及不满情绪的暴涨，管理员们感到马上将会发生起义，于是他们便设立了一条新规矩，即低月租流动墓地制度。具体来说就是大家每月缴纳一定的费用，缴费者有资格进入墓地，但是人多棺材少，缴费者每日进行抢棺，至于谁抢到谁抢不到，一概与管理员无关。</br><br>由于租金较先前降了很多，很多人便慢慢地接收了这条规则，只是每天都要为抢位置而搞得头破血流。一些有钱人便不会有这么多痛苦，只要他们一次性缴纳足够的钱财，便可以享受VIP单间，拥有100年的墓地使用权，他们每日坐在二楼，喝着茶看一楼的穷鬼为挣棺材而大打出手。</br><br>两年过去了，穷鬼们已经厌倦了厮杀的日子，于是他们决定离开墓地，想到远方寻一处乐土。谁知这处墓地坐落于一座孤岛之上，周围被湖水包围，鬼怕水，根本无法离开。经过商量，穷鬼们决定非暴力不合作，所有鬼都停止缴纳租金，也不进入棺材，只是在别墅的院子里安歇。</br><br>管理员们发现后，决定采取暴力手段逼迫穷鬼入住棺材。他们从地狱中招来众多恶鬼，这些恶鬼以小鬼的魂魄为食。恶鬼们在别墅周围徘徊，遇到穷鬼便进行捕食，但是恶鬼无权进入别墅之中。于是乎，穷鬼们为了躲避恶鬼的捕食，只能再次缴纳租金，以求进入别墅得到庇护。</br><br>由于恶鬼的存在，管理员们更加肆无忌惮的进行涨租，只要想活命，穷鬼们就要源源不断的缴纳租金，直到钱财用尽，被扫地出门，成为恶鬼的美餐。</br><br>得知这些之后我才明白刚刚那中年男人的话，时间到了，应该是交租的时间到了，是死是活便也好懂。此时，一楼乌压压的一片都是穷鬼，有的坐在棺材里，有的站在角落。棺材里的鬼原本庆幸自己抢得一席之地可以安全的度过今晚，然而管理员临时决定加收租金，这让他们愤怒不已。</br><br>穷鬼们群情激奋，我也是听的愤愤不平，心想越是顺从越要被剥削，而眼前的剥削远胜于封建王朝，如果不爆发一次农民起义，统治者们便觉得老百姓还有油可以榨取。既然我们阴差阳错的来到这个鬼地方，不妨做一回出头鸟，带领这帮穷鬼杀到三楼去，结束这暴虐而贪婪的统治。</br><br>将想法告知二位师弟，他们觉得平日里不是看文献就是做实验，如同活死人一般年复一年，日复一日，很久没有斗志昂扬的干架了，如今也算是有机会伸展拳脚，更可以为民除害，何不轰轰烈烈的干一场！</br><br>商量妥当，我们三个便分头行动，各自到人群中发动群众，过不多久，信号发出，所有穷鬼蜂拥而上，直冲三楼。</br><br>谁知那些管理员都是些纸老虎，见事不好，都溜之大吉了。三楼极尽奢华，到处金碧辉煌，更有各种花草竞相争艳，然而我们来不及欣赏这些美景，因为我们知道，今天必须要消灭掉那些管理员，否则一旦让他们逃脱，必定会遭受他们的反扑，后果不堪设想。我们搜索这楼上的每一个房间，皆不见一人，最后在三楼的一个拐角处发现了一条隧道，有风从里面吹过来。</br><br>这应该是管理员的逃生通道，看来他们早就预料到会有这一天，提前做好了准备。我们顺着隧道一路追去，七拐八弯走了约莫一个小时，终于来到了出口。就在走出洞口的一刹那，眼睛被一片火红闪了一下。我不停地眨着眼，泪水止不住的往外流，许久，才敢慢慢地睁开眼，然而其他人并没有像我一般，只是呆呆的看着我，并未见他们有任何不适。</br><br>我转身询问两位师弟眼睛是否不适，二人皆摇头表示没有问题，不及多想，还是找人要紧。我向前看去，眼前是一座山顶，漫山遍野火红一片，夜空竟也被照的通红，星星和月亮也隐了光芒，我的眼睛就是被这片火红给灼伤的。</br><br>我大吃一惊，这里不正是石山对面的花山吗？原来两座山顶竟是相通的。我心中窃喜，或许在这里可以遇到游花山的老板他们，只要是见到组织，就算是相对安全了。在石山上的湖泊，我和师弟们都落入水中，手机均不能用，若见到花山上的同伴，找部手机报警，只要有警察叔叔，一切牛鬼蛇神均可扫除。</br><br>书接前文，话说我和两位师弟以及一帮穷鬼追赶墓地管理员，通过一隧道之后，竟然由石山来到了花山之巅。</br><br>此时，几位管理员早已隐匿到茫茫花海之中。我欲找到游览花山的同学，并借用手机报警。花山依旧是出奇的安静，仿佛整个世界都聋了，或者是声音这种东西从世界上消失不见了。花山上也没有风，没有鸟，没有虫，只有一片火红的花海，静的像一副画。</br><br>花很稠密，我们无处下脚，只能踩踏着这些妖艳的货色前行。奇怪的是这些花韧性很强，就算是我们踩过之后，它们也能够迅速的恢复如初，而没有变成残花败柳。这种百折不挠的品性使得我们无法寻找前人的足迹，以至于我们不能够锁定敌人逃离的方位，也无从得知实验室其他人是否到过此地。</br><br>我们继续摸索前行，花儿的高度与我的眼睛齐平，走了很久，发现我们还是没有走出这片花海。我垫高脚尖，尝试让眼睛高出花的高度，然而我垫高十厘米，花儿也长高十厘米，我跳高半米，花儿也长高半米，不论我怎么折腾，花儿的高度总是与我的眼睛齐平。所以我根本看不到远方，我的心如船沉大海般绝望和无助。</br><br>抓狂了许久，我一屁股坐到地上。出人意料的事情发生了，那些花儿竟然也矮了下来，不高不低，正好与我眼睛齐平。我心想，这山顶的花儿成精了，竟然可以自由调节高度以挡住人们的视线，记得山底的花儿并不会如此。</br><br>我突然想到了两位师弟还在身侧，他俩的身高都比我低，如果我们三个同时目视一个方向的话，那么花儿会怎样调整自己的高度呢？想到此，我便喊他二人过来，谁知早已不见了他俩的踪迹，那些穷鬼们竟也不知了去向，只剩我一人呆呆的立在当场。</br><br>这下可怎么办，不但没找到大部队，还把小团队都搞散了。此时的我快要达到精神崩溃的边缘，想着好好的一场春游，怎么会变成这个鬼样子？真是活见鬼了！</br><br>早晨六点钟就起了，然后便是一路奔波至此，此时已是晚上，却不知几点，我已经精疲力尽了。况且我根本就看不到出路，不如躺下来休息一下先，或许睡一觉起来我就会躺在宿舍的大床上了呢。想到此，便原地卧倒，不再挣扎。</br><br></br><br>躺在地上，感觉整个后背都湿了，折腾了这么久，出点汗也是正常的。由于怕肚子着凉，我双手紧紧捂着肚子，心中便开始觉得有些不对劲。肚子是干的，胸也没有湿，前面都很干燥，只有后面是湿的。并非是因为前面的毛孔不干活，而是地面是湿的。伸手摸过去，入手是黏黏的感觉，右手凑到鼻子前，一股血腥味扑鼻而来。</br><br>我一骨碌爬起来，眯眼看去，手上鲜红一片正是鲜血！我扒开花儿看向地面，果然也是鲜红一片，又向前探了很远，整个地面全都是血！我扒开土，挖了几十厘米还是血红色的土，花儿的根部也沾满了血。原来这些花儿是以血液为营养，怪不得生的如此妖艳火红，美丽的外表下不知暗藏多少血腥！</br><br>就在我发呆的时候，天空突然落下许多物件，仔细一看，竟然是大大小小的石子，有人在袭击我。无奈我看不到前方，搞不清楚状况，只能东躲西藏。石子密如雨下，躲闪不及的我只好撒腿往前跑，慌乱中，我误打误撞，竟然来到了山顶的边缘，山坡的花儿不像山顶的花儿那般可以调节高度，它们只是优雅地立在那里。</br><br>面前是刚刚走丢的两位师弟，看到他俩忙碌的身影，我方才明白，石子正是这二位扔的。看他们脸上的表情有几分狰狞，我丈二的和尚摸不着头脑，他俩也不像是在跟我做游戏啊，看他们扔的石头大小不一，如果被大的石头砸到脑袋，不死也要脑震荡。</br><br>我试图上前劝说他俩消停一会儿，谁知他们非但不听劝，反而扔的越发起劲了。此时，我也开始恼火起来，随手捡起他们扔过来的石头又朝他们扔回去。于是三个人一边躲闪一边扔石头砸对方，怒火燃烧了理智，我们都起了杀心，想来个脑袋开花，脑浆飞溅！</br><br>双方相持了大半个小时，除了身上有几处擦伤之外，身体并没有被打残。就在我扔的高兴的时候，脚下不知被何物绊了一下，我差点摔倒在地。处于好奇，我蹲下来查看脚下是何物，暂时不理会那两个疯子。</br><br>地面之上是一个拳头大小的洞，黑漆漆的望不到底。我随手捡起一块石头丢入洞中，本想结合重力加速度及音速来计算该洞的深度，不料等了许久竟然没有听到石头落地的声音，仿佛这个洞贯穿了地球一般，丢进去的石头从地球对面的洞飞出，进入浩瀚无垠的宇宙之中。</br><br>我朝洞中大喊一声，并没有听到回音，甚至连嘴中发出的声音都变得那么微弱，这个洞似乎可以吞噬一切，石头、声音、光线……</br><br>就在我盯着洞口发呆的时候，洞中突然飞出一物，原来是我刚才丢进去的那块石头被黑洞给吐了出来。接着，一条长舌从洞中飞出，紧紧缠住我的胳膊将我往洞口中拽。那力气非常大，我毫无准备，一下子被拽倒，右胳膊被慢慢的拽向洞中。</br><br>洞口只有拳头那么大，本以为我是安全的，谁知道这洞口如同那些花儿一般具有延展性，我整个人正在慢慢的陷落，如同掉进泥潭中一般，只不过我是头朝下进入的。</br><br>洞中原来是有光线的，却不知为何在外面看里面是黑漆漆的一片，或许这个洞可以捕捉光线但不允许光线逃逸。下落了一会儿，眼前出现了一个男人的头，面部朝上，脸色铁青，两只黑洞洞的眼睛紧盯着我，舌头正是从他嘴里伸出来的。那个人头比普通人的大出四五倍，看起来有些恐怖又有些恶心。</br><br>这家伙看来是想吃了我，只是我现在根本没办法逃脱，除了尖叫就只能等死了。人头的嘴巴越张越大，舌头却松开了我，还没等我开始高兴重获自由，我的整个身体开始旋转，最终恢复了头上脚下的正确姿势，然而整个人开始慢慢的陷入大嘴之中。进入嘴巴的过程中，感觉身体被千万只虫子啃噬，直到我的头也陷入人头之中后，我才知道发生了什么。</br><br>人头之中不是千万只虫子，而是有另外四个人头，正在撕咬着我的皮肉，骨头也逃不过他们锋利的牙齿。不一会儿我的双腿便被啃食干净，此时我才惊醒，抽出腰间的佩刀乱砍一通。这些头颅脆弱的很，虽然他们能够吃肉吞骨，但在我拼命地砍杀之下终于变得支离破碎。</br><br>忽然，一股力量拽住了我，将我拉出洞口，原来是两位师弟。我的断腿不停的留着血，血液流到地面，滋润着花儿，它们愈发的鲜艳了。我撕碎上衣，紧紧的勒住断腿止血。</br><br>我问师弟这是怎么回事，听了他们一番解释我大致明白了所发生的事情。这座山是一座会吃人的山，山上的花儿名叫齐目花，以血液为唯一的营养物质，这些花儿的奇特之处在于可以移动。花儿破土而出的时候均在山脚，随着它们的生长，会慢慢地向山顶移动。一旦到达山顶它们便成为真正的齐目花，可以自由伸缩调整高度，以遮住动物的双眼，以此配合那些洞口捕杀猎物。</br><br>那些洞口也是后期演化出来的，俗话说畜生活久了会成精。这座山千百年来受血液的滋润竟变得嗜血，生出了许多黑洞，用于捕捉猎物。每个洞中有一个人头，进入洞中的一切活物都会被人头啃噬，但头部会被保留下来，成为头中头，继续啃噬其他活物。如此一来，大头包小头，小头含小小头，不计其数，每一个黑洞就是一个饕餮般的吃货。人头消化猎物之后会不停的生长，因此整座山一直在变大变高成为一座活山，而对于活物来说这里却是一座死山，这里不见虫鸣鸟叫也得到了解释。</br><br>猎物的骨肉被啃噬，血液渗入山体，滋养齐目花。如今这座山已经成为了血山，血液早已渗不下去，而是浮在地表。齐目花会分泌抗凝血素，所以血液不会凝固。</br><br>刚刚师弟们用石头扔我是想告诉我远离山顶，因为他们在山坡的喊话会被山顶边缘的齐目花屏蔽掉，我根本听不见，只好用石头警示我，我还以为他们是要打死我。</br><br>稍作休息，我们便离开山顶，终于来到了山坡上，这里的齐目花不会长高，因此我们可以看到远方。然而这里并不安全，因为山坡之上也有会吃人的洞。</br><br>现在最担心的是实验室其他人，不知道他们有没有发现这里的异常，希望他们保持着科研人的敏锐性，发觉不对早些离开了。但转念一想，他们怕是凶多吉少了，如果他们很早就发现了问题，那么一定会给石山上的我们打电话的。</br><br>泥菩萨过江自身难保，现在也顾不了那么多了，先逃命要紧。两位师弟驾着我一路小跑朝山下奔去。</br><br>奔走不多时，天空突然射下万道光束。三人驻足抬头望去，只见碧空之上朵朵白云如同漂浮的棉花糖般白而厚实。阳光透过白云的空隙射下，格外耀眼。</br><br>久居雾霾笼罩城市的我们，不知多久没见如此蓝天白云，哪怕阳光再刺眼，也忍不住抬头眯眼，贪婪的想要把每一片白云，每一丝老天牢牢地铭记在心里。</br><br>美丽的景色让我们忘记了自己还身处险境，着了魔般迈不动脚步。然而美好的事物总是短暂的，那些白云渐渐的变黑，最终化作一团团黑雾从天而降，袭向我们。只是一瞬间，数百团黑雾已至眼前。黑雾模糊了视线，呼吸变得困难起来。眼前的世界也慢慢变黑，如墨般的黑映入眼帘，侵入七窍，包裹身体。整个人就这般陷入麻木的黑暗世界之中。</br><br>我失去了视觉、嗅觉、听觉甚至触觉。这感觉如同晕厥却又保留着几分清醒，或许我身处的空间吞噬了一切，却保留着大脑的思维。</br><br>脑海中是一片白，思维渐渐消失，只剩下一片白，比最白的白云还要白。至黑至白，或许是物极必反的完美解释。只是不论是至黑还是至白，我都无法看清眼前的世界，不知自己身处何处。白变黑，黑转白，黑白变化见书写的是我的无奈。</br><br>我摸索着前进，但无论是小步走还是极力的跳，都没有脚踏实地的感觉，每一脚下去踩到的都是虚无缥缈，失去了摩擦力和反作用力，我不知道自己的每一步是否真正的将自己向前方送了一步该有的距离。</br><br>看不见目标，不知目标所在，也不晓得自己是否在走向目标还是远离目标。然而，原地不动只能待在原地，没有冒险就没有机会。不论怎样，我总是要做些努力，努力不一定成功，但是不努力注定会失败。</br><br>不知道是瞬间，还是过去了许久，在这里时间失去了它的尺度，空间扭转了它的角度，总之我坠落到了地面，脚下终于感受到了地表该有的硬度和摩擦力。</br><br>迷迷糊糊感觉自己躺在宿舍的床上，眼前白茫茫的如雾般的密密麻麻的颗粒中慢慢凝聚出一个黑色的身影。那个黑影从天花板而降，压在我的身上，双手掐住我的脖子，虽然我无法看清它的脸，但用腚想想都知道，那张脸上要么洋溢着邪恶的微笑，要么是狰狞无比。</br><br>我极力挣扎着，拼命的喊着救命，然而我的身体无比僵硬，每一个小动作都要使出比吃奶还要强千百倍的力量。坚强的意志总会带给我们意料不到的奇迹，我竟然把影子给踢飞了。整个身体瞬间得到了解脱，轻松无比，呼吸也顺畅了许多。只是我的眼前依旧是白茫茫的一片，我揉搓着眼睛，试图让泪水润滑干涩的眼球，终于，我看清了一张清晰而又亲切的脸庞浮现在眼前，那是母亲的脸。</br><br>“不用挣扎，不去理他”，母亲脸庞上的嘴唇中挤出这样一句话。</br><br>直觉告诉我，这一切都是错的，我大声喊到:“你根本就不是我老妈！”</br><br>坏人在被人揭穿后的第一反应就是恼羞成怒，她也不例外。未及我再多说，她又压住了我，狰狞的表情表明她的杀气很重，看样子是想送我归西了。</br><br>我继续挣扎，身强力壮的我此时此刻却手无缚鸡之力，徒劳无功的反抗之后我放弃了，心想就这般去了到也是死的不寻常，对比起这平庸的人生来说要好很多。只是我极其讨厌这眼前不明不白的白，饱含颗粒感的白，诡异的白！眼前的黑影源自于眼前的白，二者同源而生，只不过相互分化，彻底决裂，以致于原本的白白的耀眼，原本的黑完全释放。黑暗总是伴随着邪恶，邪恶总会去害人，然而万物相生相克，一物总有一物克！</br><br>想到此，我眼前一亮，不是白，而是亮！</br><br>“天亮了！”伴随着我一声怒吼，黑影消失不见，耀眼的白也随之而去，天真的亮了。</br><br>我急促地呼吸着，用手擦掉满头大汗，才发现自己并没有躺在床上，而是处在一个地下空间，确切的说应该是花山下面的山洞之中。</br><br>洞中石壁均是血红色，地面还有一条河流，流动的是红色的鲜血，空气中弥漫地也是血腥的味道，仿佛我们掉入的是一个巨大无比的心脏。</br><br>想到此我突然发现，两位师弟又失踪了，孤零零的一个我坐在地上四顾无助。庆幸的是断腿不再流血，也没有糜烂的迹象，这座山上似乎没有微生物存在，或者说这里是一个无菌环境，也只能这样解释。哪怕你被割了几十刀，没有经过任何处理，伤口也不会被感染，只能说明这里无菌！</br><br>作为地球上最牛逼的生物，什么地方才能够无菌呢？一切生物都惧怕高温，火山里没有细菌，当然也不可能会有人在火山中活下来。作为生物学的博士，我脑海里突然冒出一个既直接又奇怪的想法，莫不是被关在超净工作台里了？！</br><br>想到此，被自己的异想天开给逗笑了，微微地摇了摇头，心想自己一定是被今天的遭遇给搞疯了。不过想到今天的遭遇，我的想法也不算是离奇了。</br><br>就在我绞尽脑汁苦思冥想而不得解的时候，眼前出现了一群熟悉的身影，正是导师和同学们。我喜出望外，不顾断腿的疼痛，从地上爬起朝人群中跳去。然而，我每跳近一步，他们便远离一步，正如《诗经》中所吟唱的“宛在水中央”，可望而不可即。尝试许久，我便放弃了继续折腾，复又坐在地上，只是双目凝视着那些无比亲切却又可恶的面孔。亲切是因为他们是我朝夕相处的人，可恶的是在我最需要他们的时候，他们却总是和我保持距离。</br><br>心中恼火而又无助，我向人群中喊话，喊了几个人的名字，他们却只是微笑而不语，笑的那么美，那么让人不安。</br><br>“滚！统统给老子滚！”，我再也按捺不住内心的恐惧与怒火，歇斯底里的骂道。</br><br>人群终于散了，消失在洞中的各个角落，山洞重新又安静了下来，只剩下我粗重的喘息声。歇了一会儿，我站起身，拾起不远处的一根木棍做拐杖，缓慢地向山洞深处走去。山洞变得越来越窄，逐渐变成一条峡谷，只是不见天日而已。峡谷两侧的石壁光滑无比，如同覆盖着一层厚厚的冰，却并不阴寒，反而有些热。手指轻触石壁，一股电击感瞬间传遍全身，脑海中突然浮现出许多代码和数据流。各种数据在大脑中迅速堆积，我只好静心凝神努力计算，渐渐地数据堆积如山，我的头开始剧烈的疼痛起来，脑袋似乎马上就要爆炸，而数据还在源源不断的输入大脑。我挥舞着双手，蹬动着脚想从数据的大山中逃脱，然而数据也不死心，它们开始串联起来，变成一条粗大的锁链将我死死地捆住，使我再也动弹不得。</br><br>挣扎了许久，再也没有力气与之抵抗，便试图让自己静下来。大道至简，这些数据再多再复杂，必然有它的解法，而求解得到的答案或许是脱身的法门。想到此，我便开始梳理大脑中的数据，排除冗余和干扰，抓住几条主要脉络，一步步推演，最终的答案竟然是一系列的IP地址。</br><br>此时的我用目瞪口呆来形容是最恰当不过的了，本以为答案会是山洞的出口，谁料到会是一堆IP。坐在原地抓狂了好一会儿方才冷静下来，呆坐了几分钟突然大笑起来，心想天无绝人之路，上天明明给了我一条逃生之路，我却在哭爹骂娘。那一堆IP看似无用，实则是为我提供了一系列的地理坐标。每一个固定IP都绑定在服务器的网卡之上，而这台服务器所处的机房地理位置可以通过IP数据库进行查询。这些推演出来的IP是有序分布的，那么它们所对应的地理位置必然会形成一条线路，这条线路便是这座山洞的逃生之路。想到此，我再次用触摸石壁，这两面石壁像是数据传输的媒介，通过与它的交互可以获取到各种信息，因此，访问IP数据库便也不是什么难题，不一会儿，几十个IP所处的地理位置便被查询到了。然而，结果还是让我大跌眼镜，这些IP都是武汉市的，更确切的说都是华农内部的IP。怪不得我一开始便觉得这些IP好熟悉，都是122.205.95.XX。</br><br>如此说来，我现在就处于华农之中，百思不得其解的是明明坐了几个小时的车出去春游，明明还在花山之下的山洞之中，怎么一下子就到华农了呢？华农除了狮子山便也再没有其他的山了，而且狮子山并不雄伟，也不挺拔，更是郁郁葱葱，与石山花山无一点相似。</br><br>我又仔细思考了一下这些IP地址，将他们的地理坐标画在地上。顿时，我恍然大悟，离我最近的有三个IP，而且三者的坐标是重叠的，三个IP又是我最熟悉不过的，正是我们自己的服务器，而其所处的机房就在微生物楼B座。</br><br>眼前一亮，一群熟悉的面孔出现在我的面前，正是导师和同学们，他们焦急地站在我的面前，问东问西。我回来了，回到了华农，站在B308会议室的讲桌之前。今天是周一，此时此刻是下午上班时间，BMB正在开例会，我刚刚是晕倒在了讲桌前。</br><br>我抬起头，朝众人微微一笑，疲惫的从嘴里吐出一句话：“人生如梦，却不知何时是梦，何时清醒”。</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>溪山行旅图</title>
      <link href="/post/9d57.html"/>
      <url>/post/9d57.html</url>
      
        <content type="html"><![CDATA[<p>关了手机，合上双眼正欲睡去，忽觉有声音飘过耳畔，床似乎在微动。心中产生一个神经质的想法，床上还有他人。为何突然由此想法？熄灯前宿舍里并无他人，就算有人也不会一下子跑到我床上来。稳了稳心神，使自己的身体保持静止，再侧耳听去，那声音似有似无。</p><span id="more"></span><p>一种微微的恐慌涌上心头，人的恐惧大多来自于自己的想象，要想克服恐惧，便要将事情看透彻、搞明白。我决定睁开眼看清楚，闭眼逃避是无法解决问题的。想到此，我突然睁开眼，整个房间被黑暗充斥着，一缕幽暗的月光从窗帘的缝隙中渗透进来。房间很安静，没有异响，也没有异常，一切都是那么静谧。刚刚的感觉应该是错觉，细想起来自己真够多疑，科学的世界里哪有那么多妖魔鬼怪，亏了自己还是一个唯物主义无神论者。</br><br>    想着想着便进入了梦乡，恍惚间来到了课堂之上，美术老师正给大家讲解范宽的《溪山行旅图》，此图大气磅礴，正中央矗立着一座巍峨的大山，有溪水自山顶倾泻而下，细细大的溪流与雄伟的大山形成鲜明对比，一动一静颇具美感。伴随着老师绘声绘色的描述，我仿佛置身画中，山脚的商队、山顶的丛林、鸟鸣鱼跃，好一番热闹景象。行走在山间，逐渐忘却了自我，忘却了世俗琐事、不悦与烦恼早已随山风远去。我闭目享受着透过树梢洒下的阳光，元神早已出窍，在山川间神游。不知过了多久，我抬头仰望，忽见山顶峭壁处有一人影晃动，此人身材魁梧，着一身黑面红边长袍，脸被帽子遮住，分不清男女，辨不出年纪。他如轻纱般在空中飘来飘去，画风颇为诡异。我长吸一口气，决定爬到山顶看个究竟。都说蜀道难，难于上青天，但蜀道毕竟有人走动，小路还是有的，蜀道难怕说的是行军难。而此处却是人迹罕见，到处是绝崖峭壁，我脚踩石缝，手抓藤蔓，吃力地向上爬着。山顶的人影时隐时现，我正仰头看去，不料远处传来一声巨响，受到惊吓我左脚踩空，整个人坠落悬崖。醒来，发现自己还在课堂之上，原来刚刚是听得入迷走神了。</br><br>    课后，约了师兄、师弟和师妹一起去玩，漫无目的的走着，不知不觉来到一条河边。在学校呆了将近五年，只知道周围有湖，未曾听说还有河。好奇心催促着我们走进河岸，只见河中人头攒动，男女老少热闹非凡，河岸之上是水泥路，靠河的路边摆满了餐桌，不少客人围满了桌子吃喝。桌上摆的是全鱼宴，虽为同一种鱼，却有七八种做法，人们吃着鱼，喝着酒，谈天说地，其乐融融。</br><br>    河中的人们喜上眉梢，忙忙碌碌，竟是在捉鱼，原来餐桌上摆着的正是这河里捞上来的鱼。看大家玩的热闹，我们三个人也脱了鞋子，撸起裤管争相下到河水之中。这条河并非石子河床，而是沉积了厚厚的淤泥，由于人多，河水早已经被搅浑。真正的是在浑水摸鱼，顾不得脏，我弯腰便向河水中摸去。摸鱼大有讲究，有的鱼喜欢藏在洞中，那就用手堵住洞口，慢慢向里摸去，最后将其堵在角落而得之；有的鱼喜欢藏在石头地下，可以在石头一端放一盆，然后双手从石头另一端的缝隙逐渐向盆的方向将鱼赶过去，鱼便会游到盆中；如果鱼儿在水里游来游去，那就用网捕之。而此河中之鱼，却是容易捉的很，水中密密麻麻的全部都是两斤大的黑鲤鱼，人们不需要追赶，只需掏手下去，随便一抓就是一条大鱼。</br><br>    人们就这样不知疲惫的捉鱼，鱼多了，人们来不及思考要捉多少才够，总想着多捉一条是一条。我捉了许久，感到些许疲劳，不单单是身体上的疲惫，更多的是重复做一件不需要思考的事情，终究会厌烦。人类不是电脑，也不是机器，不擅长做重复的事情，人类追求的是变化，是丰富多彩，只有机器才追求单调和重复。我爬上岸边，在一张餐桌前坐下，让老板把我刚刚捉的几条鱼做熟，火锅鱼、烤鱼、糖醋鱼、煎鱼等等各种做法。看着这一桌全鱼宴，我莫名的兴奋，叫了一箱啤酒便一个人吃喝起来。师兄和师弟还在河里忙活着，或许是平日里科研工作压力大，难得出来如儿时般疯狂的玩耍，今天他俩玩的格外疯狂，甚至拒绝和我一起吃鱼。师妹玩的累了便告辞回校了，一人独酌本该孤独忧伤，然而我看着满桌的鱼，着了魔一般疯狂啃食起来，整个人如饕餮般根本停不下来。这种鲤鱼与寻常鲤鱼不同，肉质较硬，鱼刺较少，口感并不滑嫩，而是如同木渣般，肉糙而无味。但自从我吃了第一口便根本停不下来，此鱼如同毒品般诱人，不是因为它是美味佳肴，而是人容易对其产生依赖感，看到了便想一直吃下去。我不停地咀嚼着、吞咽着，肚子一点点的鼓胀起来，虽然饱腹感很强烈，可大脑依旧指挥者我伸手去拿，张嘴去咬。</br><br>    不知过了多久，兴许是师兄和师弟玩的累了，他俩走到我面前，见我举止异常，硬生生的把我从餐桌上拖了起来，二话不说拉着我往学校的方向走去。行不多远，一阵恶心感涌到喉咙处，我开始大口的吐起来。起初吐的是一坨坨鱼肉，待到后来胆汁都吐出来了。师兄在旁边埋怨我吃的太多，我已无力解释，只顾吐着。吐到没东西可吐的时候，师弟拿来几个苹果，三个人分着吃了起来，希望水果可以压制心头的恶心感。我们一边骑着自行车，一边啃着苹果。师兄和师弟在前面，我一个人在后面，苹果吃了大半，一不小心掉到了地上。我停车捡起掉落的苹果，见其已经沾满泥土，无法再吃，便蹲下来摇头。未及伤心，只见面前有一元硬币，祸兮福所倚，虽失苹果，却得钱财，哪怕只有一块钱，也是上天的赏赐。我捡起那枚硬币放进口袋，弃车步行，面前是一条小巷，两边均为石头垒起来的老房子，房前各有几块大青石垒起来的台阶，意境颇美。师兄师弟已不见了踪影，我一个人走在小巷中，欣赏着如画般的美景。走着走着，眼睛看到两片黄色物体，竟是两枚五角硬币，我顺手捡起来，心中大喜，今天财运亨通，半小时内竟然捡到两元钱，或许前面还会有更多的硬币等我去捡。想到此我便继续前行，眼睛紧盯地面，生怕漏掉任何一枚硬币。</br><br>    天色已经暗淡下来，漫无尽头的巷子一片阴沉，虽然门前零星坐着几个人，气氛却是甚为死寂。面前一位中年妇女坐在青石台阶上，手中前者一条狗链，一只小黑犬趴在地上，一人一狗目不转睛地盯着我，眼神中净是空洞，看不到任何生气，瞳孔深邃，见不到底，仿佛地狱般向空气中散发着阴寒之气。我紧靠着对面的墙壁向前挪动，生怕小黑犬上前咬我一口，万一被咬到，怕是要花不少钱打狂犬疫苗。可怕什么来什么，正当我走到小黑犬面前时，它突然目漏凶光，向我扑来。我撒腿便跑，幸亏反应及时，免遭毒口。前路注定不平静，一路上猫猫狗狗，无不龇牙咧嘴，欲将我撕碎而后快。此时的我哪里还顾得上搜寻地面上遗落的硬币，趔趔趄趄的向前冲去，终于躲过了那些阿猫阿狗，索兴没有受伤。</br><br>    夜色如苦茶般浓烈，虽不至于伸手不见五指，却也是寸步难行，幸亏巷子较窄，我扶着墙摸索前行，不至于迷失方向。行不多久，一团光亮在前方的空气中闪烁，黑暗中的一丝光亮总会给人无尽的希望，我抑制不住内心的激动，加快脚步朝光亮处奔去。巷子已然到了尽头，那团光亮却依旧在前方，前方便是前方，是以自身为参照物，面前的都可以称之为前方，很多前方被踩在脚步之下变成后方。而那团光亮在前方的前方，似乎是一个只看得见而永远达不到的地方，那个前方是远方，很远很远的地方。光亮给人希望，却一次次的让人失望而又不会轻易绝望。走的累了，很想停下来休息，却怕一旦停下来便没有勇气再站起来；很想放弃，却不甘心已经走过的那些路。身体的疲惫，精神的煎熬，整个人站在崩溃的边缘，然而想到那些对你充满殷切期望的人们，你便不得不继续前行，是的，是他们的期望拧紧了我们身体上的发条，不论怎样，我们都会继续的走下去，或许还保有一丝灵魂，或许只是机械的运动，结果都是在前行。</br><br>    我没有放弃，我相信只要方向对，总是可以到达光亮处。上天总是垂帘那些坚毅的人们，我终于走到了那个地方，昏暗的光亮撕裂了黑夜摇曳着，光亮处一位身着灰色布衣的中年女子手中拿着一沓红纸递向火焰之中。火焰半死不活的闪动着，照的那位女子脸色越发的蜡黄，她面无表情的烧着纸，见我到来，便起身走到我面前，顺手递上了一沓红纸。她在我耳边低语，让我跟她念咒语，应该是夸赞某位神灵，我心中抵触，虽然接过了红纸，却没有随她一起歌功颂德。见我没有表现出足够的虔诚，她愤怒地朝我吼了起来，我被她如此激烈的反应吓住了，便把她刚才的咒语重复了一遍，她才又坐回地面继续烧纸去了。我手中还拽着那一沓红纸，还在犹豫是否应该将其烧掉，突然手中传来一股强大的力量将我拽向前方，定睛看去，竟然是那些红纸在牵引着我前行，我整个人已经随之飞了起来。一路上，左右两边尽是燃烧的红纸，如同祭奠仪式般诡异，而我的手却无法松开，依旧向前飞行。</br><br>    许久，手中的红纸化为灰烬，我从空中坠落。待我回过神来，发现自己竟然站在家门口。虽然不知道为何会一下子从千里之外的学校回到了家里，但家总会让人感到温馨。正欲推门而入，发现门已上锁，未及我做出反应，门竟从里面打开了，走出来的不是家人，却是邻居。回头望去，原来是自己走错了，前面一排的房子才是自己的家，透过后窗看到了家中的父母。老爸手中揉着一块大面团，面团之上斑斑点点，红红绿绿，甚为奇怪。我仔细看去，那些斑斑点点是些细菌霉菌之类的微生物，很显然，这块面是不能够食用了。忽然，院子中飘过一人影，形如《溪山行旅图》中的黑袍人。难道我上课时并非神游，而是真的遇到怪事了？那个黑袍人给我的感觉并非好人，浑身上下透着一股诡异气息，但那人目前并没有伤害我，此时尾随我来到家中不知其意欲何为，由于黑帽遮面，又不曾言语我并不能判断其性别，只是看其身材比较魁梧高大，当为男性。黑袍在院子中一晃而过，不知去向，不知是否是我看花眼了或者是幻觉，不管怎么样，我要回家看一下。</br><br>    我告别了邻居，撒腿跑回家中，却已不见父母的踪影。只见院子中间有一巨坑，坑中有水，不知其深浅。我口渴难耐，便拿起地上的水桶，打了一桶水上来，正欲抱桶畅饮，却见水中有东西在涌动。我将桶踢倒在地，水流干后桶内仍有一物，正是那块面团。我伸手翻动着那块面团，见其在地上蠕动，不久，面团裂开，一条花蛇从中爬出。此蛇太过妖艳，非吉祥之物，父母的消失或与其有关，我顺手拿起院子角落的铁锨，将蛇头铲断。蛇头虽断，但蛇尾仍然在不停地摆动，我摸出腰间佩戴的水果刀，剥去蛇皮，去皮的蛇身晶莹剔透, 血管与腹内之物可看得一清二楚。刨开蛇腹，见一竹管，管内有一张红纸，上书四字:一人一元。我的心咯噔一下，差点晕死过去，想起刚才在路上捡到过两元钱，难不成父母因此而获难？想到此，后悔无比，心想不该贪图小利，因小失大。我赶忙伸手去口袋中摸索刚捡到的三枚硬币，却只摸出三张硬币模样的红纸片，这哪里有硬币，明明就是死人钱啊！</br><br>    我掏出手机，拨打老爸的电话，铃声沉闷，忽远忽近，寻声找去，我蹲在巨坑边缘，侧耳倾听，确认了老爸手机就在坑中。我到屋里寻到一根麻绳，一端拴在腰上，另一端拴在门框上，然后顺着坑壁慢慢向下滑去。水并不深，水下是一片森林，我落在一棵树梢之上，抬头望去，竟是一片蓝天，而巨坑是天空的一个洞。巨坑联通着两个世界，我爬下树，前行不久，便到了绝壁边缘，瞩目远眺，崖下溪水潺潺，一行商队正在溪畔休息，崖壁间偶尔飞过几只雄鹰，叫声惊吓到正在发呆的老牛。这不正是《溪山行旅图》中的景象吗？难不成此刻我已入画？我所在的崖顶正是黑袍人起初所在的位置，我四处张望，寻了许久却不见其人。</br><br>想起刚才在家中看到的那个黑影，我心头一紧，抬头望向天空，却不见那个巨坑，是的，天空闭合了。我被困在画中，而黑袍去了我的世界，这一切都是陷阱。黑袍本是此画画家范宽，当年作此画时耗尽心血，不料在完稿之时被吸入画中，每日在崖顶徘徊，期待有朝一日逃离此画。讲课的美术老师是其后人，那烧红纸的灰衣女子是美术老师请来的巫师，二人合伙诱我上钩，使得我入画换其先人解脱，得以逍遥自在，而我被困于此，无法挣脱，此处是绝壁，我下不去，下面的人也上不来，唯一的出路就是天空中的那个窟窿再次开启，或可逃脱。然而，要等老天开眼，需看天数和命数。而命运往往掌握在自己手中，老天无眼，便凿出一眼！</br><br>爬回树梢，拿起腰间水果刀，我一刀一刀的剜下去。努力不一定成功，但放弃一定会失败，终有一天会拨云见日，跳出此坑！</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圈</title>
      <link href="/post/9178.html"/>
      <url>/post/9178.html</url>
      
        <content type="html"><![CDATA[<p>昏暗，一片昏暗却不是黑暗，眼前的一切笼罩在一片灰蒙蒙之中。俯瞰，面前是一座村庄，不大却也不小，不是瓦房，而是座座茅草屋与阡陌交通。看似复杂，主干道实则一条。三人从竖梯上趴下，脚踏村庄的土地，四顾茫然。</p><span id="more"></span><p>这是一个陌生的地方，没有霓虹闪烁，没有车来车往，川流不息。似乎是穿越回古代，三人沿着小路前行，希望能找到出口。蜿蜒小路穿行在村落之中，尽头的尽头是起点，走了很久，欲到终点的我们回到了出发点。又走了几圈，我们发现这是一个死循环。是的，我们被困在了这里，我们所能到达的地方便是这条路所决定的轨迹，哪怕我们有很多的想法，却无法逾越路两边的高墙，只能按既定的轨迹运行。</br><br>哲学讲运动是绝对的，静止是相对的，我们在不停的运动，而面前的路却如死物般，一条死路！又言时间是永恒的，时光的脚步匆匆，被困在死路上的我们，生命随时间流逝，看似我们在原地踏步，此时之我已非彼时之我。</br><br>走的累了，坐下来休息一下，梳理一下事情的来龙去脉。之所以会现在这条死路之上是因为受一对夫妻引路，从地面的一处井盖顺梯子爬下，而随后井盖关闭，我们被困在了这里。如同一个人掉进了冰窟窿里，在水下寻找自己落水的那个窟窿却怎么也寻不到，似乎从来没有那个窟窿一般，是的，找不到的便等同于没有，得不到的也与没有无别！</br><br>我们当前需要找的不是路的尽头，而是那个井盖。几次探路下来，我们发现了一个规律，每隔一段时间我们都会来到路的原点，而这一段时间便是一天，即每过一天，我们的坐标便会归零到原点，或许我们从来没有到达路的尽头，而是在路途当中便被运送到原点，那么要到达路的尽头，我们就要和时间赛跑，从原点到终点，我们只有二十四小时。</br><br>于是，我们开始奔跑，用脚步与时间赛跑，争分夺秒。然而事情并没有我们想象的那么简单，时间似乎总是沿着某一轴线向前流逝，然而空间却是多维度变换，面前的路变得错综复杂，如同一张大棋盘，纵横交错，每前进一步，便会出现多条岔路，你永远也不知道该去往哪个路口，进一步或许为进，也可能是倒退了几步，因为你没有走过就不知哪条是生路，哪一条是死路。</br><br>人类是一种聪明的动物，不论是结绳记事，还是后来的符号或者文字，这都是智慧的象征。我们边走，边做记号，哪怕有千万条路，只要做好标记，总会有走完的时候。</br><br>虽然没过二十四小时，我们的坐标都会归零，但是我们的记忆与所做的标记都不会被抹除，所以只要给我们充裕的时间，总有一天我们会破土而出。然而时间是无情的，不等人，不等物，它孤傲的来，孤傲的去，哪怕我们等得，他人却等不得。于是我们没日没夜的奔跑，所幸这个世界没有白昼与黑夜，只是灰蒙蒙的一片，不需要灯光，我们也可以看清脚下的路，丝毫不影响步伐的速度。</br><br>不知过了多少天，我们几乎跑遍了所有的路，终于半死不活的找到了井盖的位置，使尽最后一丝气力顺着梯子爬到路面。井盖之上是那夫妻二人，见到他们的第一句话便是质问他们为何将我们困在地下那么久。二人微微一笑，一句话不经意的飘入我们耳中:“困住你们的是你们自己，你们随时都可以出来。”</br><br>是啊，能困住我们的只有自己，我们所站的圈圈原来都是自己对自己的禁锢，我们的理想早已铺就了一条路，是死路还是活路只有有过才知道，或许一路顺风，或许在墙上撞的头破血流，亦或破墙之后别有洞天。</br><br>每个人面前摆着许多路，该走哪一条，该舍弃哪一条，该直走还是要转弯，每一个岔口，每一个拐点，都有无尽的烦恼，那条路对，哪条路错，谁人可知？当你走在一条不开心的路上之时，是顺心意放弃，还是要承担责任含泪走下去？</br><br>人生因为未知而神秘，而美丽，而无奈，而苦恼……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人皮</title>
      <link href="/post/cb0.html"/>
      <url>/post/cb0.html</url>
      
        <content type="html"><![CDATA[<p> “回来，别走！ 今天必须陪我喝爽。”从厕所回来时，阿龙拉着我的手喊道。<br>我喝得有点飘飘然，随口应道：“舍命陪君子，一醉方休！ ”<br>正欲往餐馆走去，阿龙突然蹲了下来，脸上一副痛苦的表情。</p><span id="more"></span><p>“怎么啦，不舒服？”我问道</br><br>阿龙答道：“突然感到胃痛。”</br><br>“那还喝个毛啊，赶紧去医院！”我急道。</br><br>说走就走，途径自助银行时，欲取点钱，刚刚插上银行卡，后面走上来一位壮汉，顺手将我们的银行卡拔走了。光天化日竟然明抢，是可忍孰不可忍，没有多想，我一个箭步冲上去，正要对着壮汉的背狠狠踹一脚，不料旁边一下子冲出几位小伙子，手中执着刀枪。壮汉缓缓地回过头来，我才看到他白色外套之下穿着一身迷彩服，看来像是军方的人。</br><br>“大哥，卡您拿走便是了，算是我们孝敬您的”，我很机智的喊出了这句话。</br><br>这些人还算比较仁义，求财不索命，拿了卡便走了。</br><br>夕阳西下，山头的天空如染了血一般，红的让人感到心慌。刚刚有种死里逃生的感觉，平时觉得自己很爷们，但是当真正面对着一群荷枪实弹的家伙时，我真的腿软了，什么骨气啊、脸面啊，早就抛到了九霄云外，只要能保住小命，让我做什么都愿意。</br><br>坐在地上长舒了一口气，旁边的阿龙突然呕吐了起来，还以为他酒喝多了，仔细一看，原来是吐血了。估计是喝酒引发的胃出血，这种情况相当严重，我背起他便向医院走去。路上遇见一个女人，很热心的问我需要什么帮助。我对她说明了情况，她表示可以找一辆车带我们去医院。我看了一眼四周，这里有点偏僻，很难找到出租车，于是便满口答应了下来。</br><br>穿街走巷来到了一座房子前，是那种普通的瓦房，女人引领我进了房子，来到房子后面的院子里。后院中有一处篱笆围成的空地，里面站了不少男女老少。女人示意我到篱笆里面去，我没有多想，背着阿龙便走了进去，随后篱笆又被围了起来。我感到奇怪，我心急如焚的想要去救人，她让我到篱笆里呆着干嘛？</br><br>我将阿龙放在地上，打量了一下四周，旁边站满了不同性别、肤色以及年龄段的人，大家都看向空地中央的位置。我拨开人群向那边看去，只见一个雪白肤色的七八岁年纪的小男孩正抱着一条大黑狗在哭泣。仔细一看才发现，原来那条狗已经奄奄一息，胸腔以下的肉尽被挖了去，进而用泥土填充在干枯的皮毛之下。大黑狗眨着无神眼睛，痛苦的哀嚎着，那声音听起来让人撕心裂肺。是谁这么丧心病狂，竟然如此残害生灵。我注意到，周围人的神色有的同情，有的愤怒，并没有那种抱着看热闹心态的人。看来这些人也是被那个女人带过来的，可她又是什么用意呢？</br><br>心中正盘算着，从后门走进一些人，为首的是一位贵妇装扮的英国女人，身后跟着几位壮汉和穿修女服饰的年轻女子。壮汉们手中持有刀枪棍棒，走到我们面前二话不说将我们按倒在地。我心想今天真够倒霉的，先是被人抢走了银行卡，然后又被骗到这个院子里，被一帮凶神恶煞的人囚禁，后面还不知道会整出什么幺蛾子呢。</br><br>只见贵妇用温和的眼光扫视着我们，然后用手指向人群，两个壮汉得到指示后走到人群中拉起一位白人小伙子向院中一个小黑屋走去，一个修女尾随其后也进入了小黑屋。不久，我便听到一阵阵如丧考妣的惨叫从小黑屋中传出，估计这小伙子被用酷刑了，只是不晓得他们采用的什么手段，竟然能让他如此惨嚎。许久，惨嚎声渐渐变得微弱，修女拿着一件东西从小黑屋中走了出来。起初我并未看清是什么东西，待她行至近前时，我才发现她双手提着的竟然是一张血淋淋的完整的上半身人皮，他们竟然活剥了那个小伙子的皮，做成了一件人肉马甲。修女拿着马甲在一排排的人群中晃来晃去，当她走到我面前时，嘴角轻微上扬，将人皮马甲往我的脸上蹭。一股血腥味扑面而来，鲜血滴到了我的脸上，我将脸转向侧面，她也转向侧面，如此几番，我实在忍不住了，刚刚吃下的东西一股脑的全吐了出来。</br><br>此时，队伍中的一个黑人小伙子突然站起身，朝门外跑去，两名壮汉追了上去将他擒了回来。贵妇使了一个眼色，二人便拖着黑人进了小黑屋，又是良久的惨叫声，一条完好的人皮长裤被提了出来。在场的所有人均已吓得瘫倒在地，几乎所有的人都开始呕吐起来。我心想不妙啊，今天遇到变态了，是要活生生的剥掉所有人的皮啊。</br><br>只见两名修女一人提着白色马甲，一人拿着黑色长裤走到了贵妇的面前。贵妇神情有些激动，沉默少许便脱光了身上的衣服，随后她拿起了马甲，颤抖着双手将其穿到了自己的身上，然后便是那条长裤。所有的人都惊呆了，心想这女人一定是疯了吧，竟然穿人皮外套。之前在网上看过人们活剥动物的皮毛，整张皮剥下来之后，动物还在不停的抽搐，那场面已经很让人震撼了。如今，贵妇指示手下活剥人皮，为的便是获得一副“好皮囊”来装扮自己，或许动物的皮毛已经不能满足她的爱美之心，她需要的是炫耀，当大部分有钱人穿着动物皮毛制成的漂亮外套或者围脖时，她穿的是血淋淋的人皮，在这个世界中她才是唯一光彩夺目的那个人。</br><br>此时，我们一群人便是屠宰场中任人宰割的猪，想要反抗，可别人手里有刀有枪，而我们做出稍微大幅度的动作，便会成为下一个被剥皮的对象。贵妇站在原地欢快的笑着，转着圈展示她的新装。场中有几个人已经吓晕了过去，我也吓得脸色苍白，嘴唇发紫，感觉下一刻便会晕将过去，怕是醒来时已经躺在案板上被活剥了。我晃了晃脑袋，迫使自己清醒些，微微抬头望向贵妇。她终于转累了，停止了大笑，所有还清醒的人一下子变得紧张起来，不知道那女人是否在寻找下一个目标。</br><br>我再也受不了这种在生死一线时的那种恐惧感，双腿蹬地，一个箭步冲向贵妇身前。那些打手们似乎没有意料到会有人敢反抗，所以一时间没有反应过来。我大喊一声“去死吧”，狠狠的一脚踹在贵妇的小腹上。这一脚用尽了我全身的力气，可以说是暴击，她吃不住痛，一个跟头栽倒在地，痛苦的挣扎着。由于反冲力，我后退了几步，差点摔倒，人群中的打手此时已经发现了异常，向我冲来。我没有理会他们，三两步冲到贵妇面前，狠狠一脚跺在她的脑袋上。那一瞬间，脑浆与血液齐飞，血红的天空与血腥的空气融为一体，这是一幅多么让人兴奋的画面，哪怕最优秀的画家也画不出这种死亡美感。</br><br>我像是中了邪一般，兴奋地呐喊着，咆哮着。人类文明外表之下潜藏着嗜血与杀戮的本性，二十几年的温柔就在这一刻被撕裂。我并没有因为杀了人而感到恐惧或不安，也没有考虑之后将会面临着法律的制裁，我不认为自己是正当防卫，我只是有一股抑制不住的想杀死她的冲动。那踹在肚子上一脚，如同踢在一个装满水的橡胶球上，让我体会到了人体之柔，而跺在脑袋上的一脚，如同踩碎一个大西瓜般的痛快，头骨被踩裂的声音虽然短暂，却有一股平日里听不到的暴力美。我笑着，跳着，像刚穿上人皮外套的贵妇般高兴着。我不是疯了，而是本性突破文明世界的束缚，得到了解放，就如同17年蝉一般，在暗无天日的地下生存许久，破土而出的那一刻的兴奋。</br><br>打手们围了上来，我没有理会他们，继续笑着，跳着，不时地踩几下贵妇的尸体。血水在脚下飞溅着，血腥味让我更加的兴奋，我仿佛来到了另一个世界，那里没有白天，没有黑夜，只有一片血红。不知道跳了多久，我晕了过去。</br><br>我没有醒过来，因为我不想醒过来，我不知道后来发生了什么，不论是打手们杀死所有人，还是人们奋起反抗杀死群龙无首的打手们，我都不关心，因为我找到了本心，找到了自我。外面的世界，他人的死活又与我何干？我离开了这个世界，去了另一个世界，那里也有高低贵贱，也有不平之事，但那里的生存法则很简单，实力决定一切，那里没有太多束缚，可以快意恩仇，肆无忌惮的杀戮……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新生</title>
      <link href="/post/44e6.html"/>
      <url>/post/44e6.html</url>
      
        <content type="html"><![CDATA[<p>突然得到消息，要求我去另一所学校做交流生。我本来是一名华中农业大学的博士生，不知什么原因，导师要求我去厦门某高校进行科研工作。圣命难违，告别了实验室的兄弟姐妹，便踏上了去福建的路。</p><span id="more"></span><p>武汉到厦门的动车只有七个小时，朝发晚至。到了厦门北站之后，乘坐厦门旅游专线去往目的地。一路驰骋，看着窗外的风景。厦门的夜景很漂亮，不论是大厦的灯光，还是高架及环海路的灯光，都是那么光彩夺目。打开车窗，感受着海边传来的丝丝凉意，本来压抑的心情好了很多。离开一座城市的悲伤瞬间被另一座新城市的新鲜感取而代之，虽说我对武汉有很深的感情，但毕竟那里不是故乡，不是我根生长的地方，所以就算离开，也没有太多的忧伤。厦门是一个不错的地方，虽然也会遭遇大学路的堵车，但这里空气质量真的很好，当地的人们都很热情。这里还有武汉看不到的真正意义的大海，让我想起了故乡的海，故乡的老父老母……</br><br>一路上思绪万千，很久没有到一个陌生的城市了，这种感觉真的很好，一个人背着行囊，踏着夕阳，享受那孤独之美，离开喧嚣的闹市，感受片刻的宁静，一个人，不需要考虑交际，不需要应酬，不需要在乎别人的想法，一个人，静静地，挺好……</br><br>专线到达黄厝垵之后，便打了一辆私家车。车沿着环海路一路飞驰，司机是一个比较热情的人，一路上跟我聊着天。我本来是一个人来厦门的，但人类总会用谎言来确保自己的安全，所以我告诉司机，我是来这里找同学玩的。由于当天到厦门的时间比较晚就没有直接去学校，而是定了一家客栈。客栈在黄厝垵附近，叫做“塔头一号客栈”，车走了十分钟的样子便到了目的地附近。这里路比较窄，我便提前下了车，打开手机导航，找到了客栈。</br><br>到客栈已经夜里十一点多了，老板娘很热情的带我去了房间。这里是一家青年旅社，一个床位一晚上60元，也算是比较便宜的了。房间里有四个床位，十分简陋，虽然条件有些艰苦，但总算有个挡风遮雨的地方。折腾了一天十分累了，连续几天厦门都在下雨，床有些朝，但我依旧睡的很香。</br><br>第二日一大早我便醒来，洗漱一下，简单的吃了早餐，便乘坐公交去往XX大学报到。XX大学在一座山上，离市区有些距离。车沿着大学路驶过，第一次看到厦门大学，看到大学旁那两座高高耸立的像帆船一般的大楼。心中埋怨着，为什么不让我去厦门大学交流，而是把我搞到闻所未闻的XX大学。所谓圣命难违，君让臣死，臣不得不死。何况只是到另一所不知名学习搞科研而已。心中这般想着，那一分怨念便也跑到了九霄云外。</br><br>车已经缓缓的驶到了山坡之上，我们行驶在一条环山公路之上，这条路十分窄，刚刚能容许两辆车并行。而且此路九拐十八弯，非老司机不能行也！山脚往山腰的一段路没有十分特别的地方，当车驶到山腰之时便另有一番风景映入眼帘。之间公路两边密密麻麻的布满了坟墓，大大小小的土丘，形形色色的墓碑，看得人眼花缭乱。看来学校建在了一块风水宝地，一路行驶着，我一路看着路边的墓碑，这些墓碑颇有趣，都是可以自由转动的，平时是树立的，需要的时候可以转动到与地面水平，当做桌子用。此时正值午间，我看到有很多人将墓碑当做餐桌，正在饮酒聊天。墓碑的冷色调与人们衣服的暖色调搭配在一起，有一种说不出的感觉，是奇妙、奇怪，还是其他？</br><br>车在墓碑间穿梭着，通过车里的后视镜看向司机，他面无表情，应该是早已经习惯了这种景象吧。大约穿梭了二十分钟的样子，车子终于停在了XX大学的门口。下了车，呼吸了一大口新鲜空间，顿时觉得清爽了许多。刚刚在盘山公路上的数不尽的急转弯，有几次差点禁不住呕吐出来，心想这一次上山怕是再也不肯下去了，否则要晕车晕死。</br><br>整理了一下背上的行囊，向校门看去，给人的第一感觉是该学校比较低调，没有霸气的大门，没有点缀的花花草草，只有一片死气沉沉的灰色，唯一惹人注目的是校门内侧正中的一块大石头，上书“XX大学”四个血红色的大字。心头突然涌起一种诡异的感觉，这学校难不成是一所魔法学校？我是搞生物的，却来到这么一个死气沉沉的鬼地方，感觉这里更适合研究死物。</br><br>还好此时艳阳高照，否则我一定会被吓出心脏病来。一路打听着，我来到了报到处，领取了相关的报到材料，便被带到了宿舍。宿舍楼也有些老旧，楼梯设计的比较窄，台阶有些高，走起来总觉得要掉下去。宿舍里有两张高低床，空间比较小，没有独立卫生间。我心中一万个不爽，想想华农的博士宿舍，两人间一个人住，设备一应俱全，简直爽翻天。此时此刻面对着眼前的四个床位和另外三个舍友，心中的失望与不满如熊熊烈火般燃气。听舍友说在这里只有博士才能住四人间，而硕士和本科生更惨，只能住六人间和八人间。</br><br>一个人独处久了，便不希望别人闯进自己的生活中来，以前一个人很自由，想什么时候睡就什么时候睡，没有人打扰也不怕打扰别人。而如今，除了考虑自己之外还要考虑其他三个舍友的感受，那一份自由就这样子被无情地剥夺了。还好三位舍友比较给力，人都不错，相互认识了感觉比之前稍微好了点。有舍友也不错，可以聊聊天。</br><br>下午收拾了一下宿舍，去导师那里报了到，一切事情办妥之后便与舍友一起吃晚餐。我是新来的，作为老生的舍友们自然做东，我心情顿时好了很多。三位舍友各自带来女友，只有我孤苦伶仃，不过有酒有肉，其他的都可以抛到九霄云外。在这里聚餐只有一个去处，那就是山腰的那一片坟地，中午途径那里时便见过不少人在用餐，心中还觉得奇怪。此时自己也要去那里吃饭，一方面觉得奇怪，另一方面也感到有些刺激。黑夜、坟地、美食与美酒，这种生与死的交汇谱写出一首欢乐与死寂的交响曲。我不知道为何大家要在这里聚餐，也没有去问缘由，心想先填饱肚子再说，这些疑问留待日后再搞清楚吧。</br><br>我们一行七个人，挑选了一块较大的墓碑，在坟堆对面绕着墓碑均匀的坐下。墓碑平时是长方形竖直立着的，用餐时可以将其放平，墓碑边缘有一个按钮，可以将其变成圆形，如此墓碑便变成了大圆桌。这里的菜品也比较有特色：炖甲鱼叫做“清蒸头盖骨”，红烧猪脸叫做“人皮面具”等等。至于酒水那都是分A、B、AB、O型的。菜都是舍友点的，说都是招牌菜，今天先吃上半身，改天再吃下半身。我拿着手机将整个菜单拍下来，发到了朋友圈希望能够赚点人气。</br><br>酒足饭饱之后，哥几个都去约会了，剩下我一个人穿梭在墓地之中，前一秒的热闹与后一秒的孤寂，一秒只差，天壤之别。此时此刻好想抱着每块墓碑大哭一场，想来无趣，便作罢，一个人沿着山路向山顶的学校走去。</br><br>刚刚吃饭时还是一片阴暗，快走到山顶之时便云开雾散，月光如水般撒向大地，看向山腰，点点烛光颇为美妙。热闹繁华的大地之下躺着那些沉睡已久的死灵魂，不知道在这样的夜色里他们是否会钻出坟墓，对着月光吐纳，吸收天地之灵气，日月之精华。一阵风袭来，不由自主的打了个寒颤，我裹紧了衣服，朝学校里走去。</br><br>路上经过一处假山，见一个女生在上面玩耍，跑来跑去。我走上前劝他赶紧下来，以免摔伤，还没等我开口，他便真的摔了下来，脸已经破相了。我慌忙带他去校医院，女医生很不在乎的样子，没有处理伤口，没有上药，而是直接包扎了纱布。我突然感到尿急，刚刚喝得酒怕是不甘愿留在我的体内，于是我去了厕所。放完水回来却没有发现女生的身影，边去问刚才那个女医生。顺着她手指的方向，我看到了一团白色的物体。我一下子惊呆了，那个女生此时已经被包扎成了一个木乃伊，站在那里一动不能动。女医生走到我身边，拿起纱布便要向我身上缠，情急之下，我抱起女生便逃出来医院，跑了很久，确保身后没有人追上来，我才放下女生，大口喘着粗气。休息了一会儿我便将女生身上的纱布一圈圈的解开，最终看到了皮肤。这里没有灯，只有月光，我拍了拍女生的肩膀安慰他不要怕。谁知道他二话不说便咬住了我的手，我疼得厉害，努力的挣脱开来。顺着月光看着他，发现他全身漆黑，感觉像是焦炭一般。他死追着我不放，发疯般的要咬我，我感到了异常，一脚将他踹倒在地，夺路而逃。</br><br>一口气跑回宿舍，关上门，回想着刚才的一幕，感到十分诡异，为什么女生去了医院之后会变成这个样子，还有那个女医生，自从我进门之后她没有说过一句话，所有的交流她用的都是肢体语言。这学校太诡异了，所有的一切都不正常。哪有人在墓地里吃饭的，首先是对死者不敬，其次正常人也不会在这种地方聚餐吧。我拉上被子蒙着头，脑袋里浮现着一幅幅诡异的画面。突然感到燥热无比，宿舍里没有空调，我走到阳台之上，想吹一下凉风。</br><br>站在阳台上可以看到山下的景象，若是晴天，这里是一个很好的观景台。我看向四周，发现前面的空地上有一根很高的灯柱，有十几米高的样子。灯柱顶端有一根与灯柱垂直的柱子，上面垂下两根绳子，绳子的底端帮着一块木板，这边组装成了一个超级秋千。秋千上站着一位女生，她悠闲地荡着，我心里一阵烦躁，心想她该不会摔死吧？只见那女生荡的越来越高，最终秋千荡到了最高点将女生甩了出去，不见了踪影。这情况怕是真的要摔死了，我拍了一下自己的脑袋，怪自己总想些不好的事情，这下子出人命了。我急匆匆的跑下楼，朝着女生跌落的方向跑去。</br><br>路上我经过一处鱼塘，这里的水很清，感觉水很深，我是一只旱鸭子，及其怕水。这处鱼塘被隔成多个小鱼塘，各鱼塘中间是只有半米宽的小路。而大鱼塘两边没有路，所以行人只能通过中间的小路达到对面。我救人心切，努力的克服心中的恐惧，沿着中间的一条小路前行。途中看到一位女生站在小路上一动不动，如同一尊雕像。我走上前，跟她打招呼，并未得到理会，于是我便伸手轻轻地拍了她一下。谁知这轻轻的一拍竟然将她拍到了水中。我伸手去抓她，却怎么也抓不到她，我声嘶力竭的呼喊救命，却找不到一个行人。我绝望的看着女生在水中慢慢的下沉，她没有挣扎，就这样安静的沉向水底，直到沉到黑暗的深渊。</br><br>我哭泣着，前行着，我要找到那个荡秋千的女生，或许她还活着，或许我还可以救她。泪水模糊了我的视线，生死只在刹那之间，生命真的很脆弱，人说没就没了，一天之内我遭遇了太多死亡。我奔跑着，呐喊着，穿梭在大街小巷中，却怎么也找不到女生坠落的地点。就算是摔成肉泥也得见到骨头吧，我继续搜寻着。不知道找了多久，我已经成了木头人，机械的走着，没有目标，没有方向。</br><br>前面出现了一个木屋，我走了进去，发现里面有好多绿孔雀。看到我进来，他们纷纷开屏，这种人们所追求的美景对于此时此刻的我来说毫无吸引力。还没等我观察清楚这个屋子的结构，眼前便出现了一团团火花，仔细看去才发现，那些孔雀的屁股里正往外喷着熊熊烈火，而他们的目标竟然是我。我夺路而逃，他们在后面死追不放，一怒之下，我挥刀将他们全部杀光。火将它们的尸体化为灰烬，吵杂的夜顿时变得安静下来。</br><br>我瘫坐在地上，无力地喘着粗气，狠狠地抽了自己两记耳光，希望自己是在做梦，能够把自己抽醒。我闭上眼睛，抱着头，大脑里一片空白，感觉自己要晕死过去了。</br><br>许久，我感到有人走来，我缓缓地抬起头，发现面前站着三个女生，一个浑身焦黑，一个浑身浮肿，另一个血肉模糊。我看着她们的衣服，心里咯噔一下，发现她们正是舍友的女朋友。刚刚还在一起吃饭，不一会儿的功夫，她们便以不同的方式死去，我想不明白这一切到底是为什么。</br><br>“是你动了杀念”，一个女生说道：“是你害死了我们！”</br><br>一句话惊醒梦中人，她们在出事之前我脑海中都浮现出她们会出事的想法，难道我的意念可以转化成现实？是我害死了她们？</br><br>“对不起，我没有想害死你们的意思，我只是在担心你们。”</br><br>“对于一件事情，我们不看初衷，只看结果。杀人偿命，你随我们一起去吧。”焦黑女生说道。</br><br>“刚刚那些孔雀是你们搞的？”我戒备的问道。</br><br>“本来想烧死你，结果让你逃脱了，那么还有两种死亡方式，淹死或者摔死，你自己选择吧！”浮肿女说道。</br><br>我沉默片刻说道：“我选择活下来，你们寂寞的话便去找你们的男朋友吧，我没有兴趣与你们玩。若你们还不离去，下场便如这些火孔雀一般！”</br><br>三女听闻此话，大笑着飘然离去。我刚才是强装镇定，心里面早就怕得要死，此刻见她们离去，整个人便瘫倒在地。休息了少许时间，我急忙跑回宿舍，收拾了背包便逃离了XX大学。我要离开这个鬼地方，这里的一切都不正常。</br><br>此刻，月亮早已经躲到了乌云的后面，四处一片黑暗。这个时间早已没有了校车，也根本打不到的士，我只能一路小跑向山下行去。夜很安静，虽然是夏天，却听不到虫鸣，空气仿佛凝固了一般，世界似乎处于完全的静止状态，只有我在动。我一路飞奔着，感受不到耳畔的风，许久，终于行到了山腰。想要下山，必须穿过那一片坟地。此时的坟地中没有了热闹喧哗的用餐人，地面很干净，没有任何杂物，如同从来没有人来过一般。顾不得多想，我穿梭在林立的墓碑之间，希望早点走出这片阴森之地。不知走了多久，我始终没能找到下山的路，我发现自己迷路了，放眼望去，只看见一片片的墓碑，哪里还有什么道路？！</br><br>我已经筋疲力尽了，索性找块墓碑坐了下来，稍作休息再说。擦了擦额头的汗，抬头望向四周，突然发现一块墓碑上有个熟悉的名字，那不正是焦黑女的名字吗？我站起身再去看周围的几块墓碑，果然三个女生的名字都在墓碑上，甚至我看到了三位舍友的名字。我如遭雷击般无力的瘫倒在地，想着今天发生了一切，想起我们一起在墓地里吃的奇奇怪怪名字的菜肴，喝过的那些不同型号的红酒，一下子我开始呕吐了起来。我感到食管都要被拉扯出来了，眼睛止不住的往外流，就这样吐啊吐，我看到呕吐物中有一团黑乎乎的东西，仔细一看竟然是头发。天哪，我究竟吃了些什么东西，难不成真的吃了头盖骨？！想到这里我有开始呕吐起来，吐到没有东西可吐了还在干呕，感觉要把胃都呕吐出来了。</br><br>一阵阴风袭来，月亮从乌云后偷跑出来，整片墓地顿时亮了起来，林林总总的墓碑反射着月光，让人感到一片阴寒。我抬起头，发现身边多了几个人，正是舍友和他们的女友们。我被他们包围了，我吃力地从地上爬起来，恶狠狠的瞪着他们说道：“你们不是人！”</br><br>他们面无表情，伸手便要来撕扯我。我推开两位女生，从包围圈中突围出来，寻着小路向山下跑去。忽然，我感到了一阵地动山摇，正片墓地开始热闹了起来，坟堆中爬出形色各异的老老少少、男男女女。大家嬉笑怒骂，觥筹交错，一片欢乐景象。这时候，一位男舍友突然吼了一声，所有人的目光都投到了我身上。我感到时间停止了流逝，那一刻我完全不知道该怎么做，想跑，腿却像灌了铅一般，根本无法挪动一步。人们渐渐地向我靠拢过来，眼睛中闪烁着贪婪的目光，我知道，下一刻我将成为他们的宵夜。</br><br>百无一用是书生，平日里只顾着读书，没有时间锻炼，手无缚鸡之力的我面对着成群结队的活死人根本毫无办法，只能为鱼肉任人宰割。我一屁股坐倒在地，大声问道：“为什么？！”</br><br>“人群”中走出一位中年男人，他笑呵呵的对我说道：“同学，不要怕，我是生科院的院长，我们学校以生命科学为中心，研究人的生死轮回，每一位来此学习的同学首先要献出自己的生命。只有自己体会了由生到死的过程，九泉之下才能更好的参悟生命的含义。我们尝试过不同的死亡方式，观察这些死法产生的死后效应，最终我们发现正常死亡后生命到此结束，而一些非正常死亡方式往往可以让死者得到重生，比如你面前的这些人。目前我们主攻的难题是如何让人真正的死而复生，如果攻克了这个难题，那么我们可以让风烛残年的老人以某种方式死亡，然后我们再将其复活到他的年轻时代，青春重新绽放；生病的人先死而后生，去除身上的疾病而重获健康之躯。这一项研究不论是发nature还是science都绝对没问题，而你更不用担心自己的毕业问题。现在需要你做的就是尝试一种新的死亡方式，只要有学子前仆后继的尝试，终有一日我们会获得成功，到那时，整个世界为我们欢呼，我们会被民众奉为上帝，你还在等什么？快去死吧！”</br><br>我看着院长就像看着一个神经病一样，简直是一派胡言，搞科研搞的走火入魔了！不过看着眼前的那些活死人，我便否定了自己的想法，他不是神经病，而是一个有思想的死人。他的话绝对不是在恐吓我，而真的是要拿我做科学研究，可以想象，眼前的这些男女老少要么是学校里的学生，要么是从山下抓来的试验品，他们统统的为科研而献身了。而我，我不喜欢科研，也不想为什么而献身，我只是想混个博士文凭而已，我不想死，因为我还没有来得及好好地享受生活。</br><br>我回想着来到该学校里的所见所闻，想起了很多细节，或许可以跟他们赌一把。“哈哈哈，可笑、可悲！”我大声笑道。</br><br>院长看着我冷笑道：“你不用这样子拖延时间，没有人会来救你的。”</br><br>我讥讽道：“你可知道，你们所研究的东西，早就被抢发了，你们还傻乎乎的在这里闭门造车，难道不可笑，不可悲吗？！”</br><br>院长扯起了我的衣领，瞪大了眼睛怒道：“你说什么？怎么可能？！”</br><br>“怎么不可能？”我轻蔑道“我想问你，你多久没有看文献啦？”</br><br>院长沉吟片刻道：“我们自从上山之后就没有下去过，山上没有网，所以无法查阅文献，离上一次看文献也快有十年了吧。”</br><br>我心中长舒一口气，果然让我猜中了，这里没有网络，这就是我的突破口，我要从精神上击败他们。</br><br>“院长，您所研究的课题就在去年十月份发表了，目前这项研究已经得到了应用，起死回生在我们国家就可以做了，像你们这些老僵尸都可以返老还童的，不过要去京城，你们要去的话只能自己包车。如果您愿意放我一条生路的话，我负责给大家搞车，报销往返路费。”我天花乱坠的说着，心想如能活着逃出去，一定要找我在蓝翔的哥们开着挖掘机回来把这些家伙“活埋”掉。</br><br>我心里正偷着乐，却听院长撕心裂肺的喊道：“我数十年来的心血啊，怎么就被别人抢发了呢？！”</br><br>“院长，我觉得此事必有蹊跷，这种难题，凡人怎么会有idea呢？就算想做，那他们也很难得到第一阶段的研究成果啊，所以我猜测，科研团队里必有内奸，走漏了风声。”我尝试着挑拨离间，不断地编着瞎话。</br><br>估计院长真的是急疯了，完全丧失了判断能力，我说什么，他就信什么。只见他恶狠狠的瞪着周围的学生们，大声喊道：“是谁？到底是谁？！”</br><br>四周一下子安静了下来，大家面面相觑，没有一个人承认。不论院长如何问，都没有人作答。于是院长抓狂了，他冲向了那些学生们，挥舞着不知道从何处哪来的大腿骨砸向了那些学生们的头盖骨。那场面凄惨无比，学生们四处奔逃，一个个的倒下。我的目的达到了，趁乱挤出了人群向山下逃去。</br><br>死里逃生的我终于回到了武汉，回华农后我想了很久很久，找到了导师，说我在厦门水土不服，实在是待不下去，不如回来好好地跟着导师您老人家搞科研有前途。一番马屁拍下来，这事儿就过去了。</br><br>我不知道厦门的那个院长和那些学子们怎么样了，是“活着”呢，还是又死了一遍。他们的那个课题要成功真的很难，但是的确取得了一定的成果，比如“死而不死”，若真能够做到死而复生，那是对学术界以及医学界的一大贡献。我想或许有必要将这个课题继续下去……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>屠龙</title>
      <link href="/post/1128.html"/>
      <url>/post/1128.html</url>
      
        <content type="html"><![CDATA[<p>阳西下，天空一片红晕，我骑车走在马路上，右手边便是清水河。</p><p>记得儿时的清水河是有水的，也没有污染，河中也有小鱼小虾和鹅鸭。那时候总是偷偷地跑出去和小伙伴们去河中玩，逮过不少鱼虾，打死不少蛇。</p><span id="more"></span><p>十几年的变化，气候变得无常，清水河变成了无水河。尤其是今年受厄尔尼诺的影响，数月未下雨，河中被挖出了不小井与湾，然而也并挖不出多少水来。</p><p>我看向河中，见前方围了不少人，不知道发生了什么事情。我放下车，从马路冲到河中，剥开人群想看个究竟。人群中围着一个水湾，水很浑浊，不知道有多深。人们像炸开了锅一样不知道议论着什么。周围围着不少水泵，然而并没有抽水。我有些奇怪，若在平时，这点水不到半个小时就会被抽干，可此时面对着一湾水，人们似乎都不为所动。</p><p>看了许久也没看出个究竟，天色慢慢的暗淡下来，农村的马路上没有路灯，我急着回家便又回到了马路，骑着自行车走向回家的路。脑子里想着刚才的一幕，觉得莫名其妙，于是不经意的看向河中。走了不久，发现河中又出现一个水湾，水很浑浊，周围空无一人。我觉得奇怪，中午经过这里的时候并未发现这里有水湾，难道下午有人在这里挖的？为什么挖出水来却没有人抽？</p><p>正当我打算离开的时候，我发现水中有很大的动静，定睛一看便被吓了一跳，只见水中一条又黑又粗的东西不断的翻滚着。起初我以为是蛇，可仔细一看发现它身上并没有鳞片。这更像是一条巨型黄鳝，通体发黑，身体有三个水桶那么粗，在夕阳的照射下泛着光。它的头一直没有漏出水面，我也没有心思去看，因为我已经被吓成狗了，骑着自行车仓皇而逃，只希望这条大黄鳝不要发现我，不知道它吃荤还是吃素。</p><p>正走着，突然感到一阵风从身后吹来，伴随着一股腥味。一回头便发现一条尾巴从河中探到了我身边。刚刚只看到黄鳝的三围，却没看到它的体长，此时此刻我才发现，这玩意儿是又粗又长！我依旧没有看到它的头，所以并不知道它的全厂，不过我现在的位置离水湾有十几米的样子，也就是说这家伙最少也得有二十米长。</p><p>不过，它的尾巴极其细，跟我的胳膊差不多粗。眼看着这苗条的小尾巴就要抽到我的脸上，哪怕我脸皮再怎么厚，也会被抽破相了。此时我躲无可躲，索性把车子丢了，就地一个驴打滚躲过一招。然而那条尾巴像长了眼镜一般，跟随着我左右摇摆。尼玛，老子真后悔没有学过小苹果舞蹈，否则拍一个人兽共舞肯定可以走红网络。然而黄鳝似乎并没有心情与我跳舞，它招招式式充满着杀气，不论我怎么躲，它总会精确的找到我的位置并发起攻击。</p><p>躲了几招我体力便损耗了大半，心想老子豁出去跟你丫的拼了！于是撸起了袖子就势一扑一下子抱住了那条尾巴，真他妈滑呀，我这才发现根本抱不住，还很容易被它甩出去。不知道是不是我脑袋抽筋了，张开嘴便朝着尾巴咬了下去。没想到这家伙还细皮嫩肉的，口感像鲶鱼一样，十分松软。</p><p>我的牙狠狠地咬了下去，此时也不顾得担心自己的烤瓷牙经不经得起黄鳝的考验。它似乎能感觉到疼，尾巴往回缩了回去，如此一来，我在尾巴上留下了两道深深地牙印，它的一层皮被我啃了下来。只是这家伙的尾巴尖着实很硬，把老子的嘴都刮烂了。见它退了一下，我扶起自行车便往前跑，可还没等我跳上车，那尾巴又探了过来。我擦，这玩意儿属驴的吧，忒倔了！</p><p>它似乎被我激怒了，这一次的攻势格外猛烈，我感觉只要被它拍到就成了蒜泥了。我心里只叫苦，难不成刚才那一群人就是在找黄鳝吗？没想到它竟然跑到了下游，河中没有水，它是怎么跑下来的。真的是成了精了，它不知道在国内是不允许又妖魔鬼怪吗，还敢出来嘚瑟。心想若此时有一个榴弹发射器就爽了，干死你丫的！<br>人真是可笑，在这种危机关头还在不切实际臆想，然并卵，根本不解决问题。我使出全身力气抡起自行车狠狠地朝尾巴砸去，然后一个驴打滚翻到马路另一侧的果园里，使出吃奶的力气逃之夭夭。感觉自己真的很机智，只是可惜了我的自行车，早已经被尾巴拍烂了。</p><p>天已经完全黑了下来，没有星星和月亮，我摸索着穿梭在果园里。突然感到头上有一片光投射下来，抬头望去是一架飞的很低的飞机，从云层中慢慢的漏出来。可过了一会儿我才发现，那并不是飞机，而是一些排列整齐的星星，如大雁的队形一般从空中划过。难不成是我刚刚从马路上滚下来的时候脑袋撞坏了，撞出星星来了？貌似刚才没有撞到啊，我又仔细看了看天空，星星越来越多，云彩也是五颜六色，仿佛来到了童话世界。前方有一棵斜长的大树直指苍穹，树干已经被掏空了，简直就是一座登天梯。</p><p>我正目不转睛的看着，谁知黄鳝竟然追了过来。我来不及多想，直接顺着树爬了上去，一直到了云层之上。面前是一座宏伟的宫殿，让我有种来到了天宫的感觉，这也有点太过玄幻了吧。黄鳝还是穷追不舍，奇怪的是到现在为止我仍旧没有看到它的脑袋，它一直用尾巴攻击我，似乎它走路也是倒着走的。</p><p>我没有停歇，直接跑进了宫殿之中。屋子内有一口大锅，里面正烧着滚烫的油。还没来得及仔细观察，尾巴便已经跟了进来。我顺手抄起门边雕塑手中的大刀砍了过去，这把刀可是真材实料，沉甸甸的，一刀下去，尾巴便断了一截。可是断下来的部分也不消停，依旧来攻击我，我飞起一脚直接将尾巴踢到油锅里，顿时感到一股香味扑面而来。他娘的，难不成这是老天故意给我准备的晚餐？</p><p>黄鳝大概感到了断尾之痛，它开始翻滚着，拍打着。我更是下了杀心，一刀一刀的砍着它的身躯，砍一段，往锅里丢一段。这二货也听话，不断的往门内挤，我就一直砍下去。只是越往后，它的身体越粗，只搞得我精疲力尽。也不知过了多久，黄鳝没了动静。我一屁股坐在地上喘着粗气，歇够了，我提着刀走到门外。我顺着它的身躯一直走了七八米，终于看到了它的头部。它的头超级大，只是看样子并不像黄鳝，头上长角，而且还有眉毛，这眉毛生的五颜六色，甚是漂亮。鼻孔相当大，摸摸我自己的顿时觉得那些骂我牛鼻子的人少见多怪了。奇怪的是它没有眼睛，眼眶中空洞洞的，怪不得它一直倒着走路，看来是它的尾巴触觉比较灵敏，可以引路。这他妈的什么怪物，怎么看起来有点像龙呢？但是它没有爪子，没有鳞片，难道是龙与黄鳝的杂交一代？</p><p>我太累了，也懒得去琢磨这些，本想掏出手机拍个照片也好回去吹牛，可摸了半天才发现手机早已经丢掉了！这地方有点诡异，我也没有胆量去品尝锅中的肉是什么味道，万一有毒我就白折腾了！</p><p>我走到树旁，像玩滑梯一样从上面滑了下去，再回头，一切都已经消失了，似乎刚刚只是一场梦。</p><p>天空下起了雨，下的很大……</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新课题</title>
      <link href="/post/cf94.html"/>
      <url>/post/cf94.html</url>
      
        <content type="html"><![CDATA[<p>躺在床上玩了会儿手机，困意来袭，便睡了过去，半梦半醒的似乎被谁扯了一下左胳膊，我一下子清醒了过来。刚才那一下子十分真实，我打开手机灯光四周查看了一遍，并未发现有何异常。难道是做梦了？自己真的是有点神经质，总是做一些离奇的梦，这样子下去怕是要去看心理医生了。回到寝室总是要把每个角落查看一遍，确信安全才会关灯，怕的是某个地方会藏着不寻常的东西。</p><span id="more"></span><p>话说刚才那一下把我从睡眠中拉醒，虽然并未发现什么异常，但黑灯瞎火的我总还是感到有几分不安，又不想下床去开灯，这个时候床上比较安全。我在心中说服自己，是自己想多了，估计是神经中枢跟我开玩笑闹着玩的。我蜷缩到被子里，不让身体的任何一点地方暴露在空气中，这样心里踏实了一些。</br><br>浑浑噩噩的又睡了过去，睡了不久，感到右边的胳膊也被扯了一下。我睁开眼，看到自己身处一条街道之上，阳光昏暗已是黄昏。街上聚集了很多人，人群中间是一根十多米的竿子，大家围着竿子不知道议论着什么。喜欢凑热闹的我走上前想一探究竟，不料随着我逐渐的接近竿子，自己的身体却越来越轻，当我走到竿子底下的时候，我竟然不由自主的飘了起来。我吓坏了，努力挣扎着却无济于事，身体一直在上升，看着地上的人逐渐变小，我也离地面越来越远，恐高的我尖叫着希望能有人来救我。</br><br>然而，不论我升多高，却一直超越不了竿子的高度，我发现本来十几米的竿子在不断的长高，直插云霄，把天捅了个窟窿。而我也在不断的往上飘，但只能直线上升而不能水平移动。高空的空气开始稀薄起来，我感到一阵头晕和恶心，最后晕死过去了。</br><br>醒来之后发现自己已经在地面了，我心中疑惑，我是怎么到达地面的，如果是摔下来的，这么高肯定是必死无疑，可是我检查了一下身体，竟然没有任何损伤。难道是我飘到了飞机上，被捎回了地面？这也太匪夷所思了。我看了看四周，已经不在那条街上了，记得我上天的时候一直保持与那根竿子平行，而竿子是笔直的，按理说我掉下来应该还是会落到这条街上才对。难道我下落时遇到了狂风把我吹跑偏了？很有这个可能。其实说我是落下来的谁都不会相信，没有谁从高空自由落体下来摔不死，难不成我已经死了，现在的我只是个游魂？我摸了一下自己，肉是实实在在长在身上的，掐一下也会疼。这证明了两点:第一，我还活着；第二，这不是在做梦。</br><br>我思前想后，绞尽脑汁也没有想明白这一切是怎么发生的，明明是躺在床上睡觉，怎么会到了那条街上，为何自己会飘起来，而我在高空中晕过去以后究竟发生了什么，为何我又毫发无损的落到了地面？难道我是飘下来的？想想也不排除这种可能，既然能飘上去，那么也有可能会飘下来，不论是飘上还是飘下，总之都是超越了物理学的范畴。至于这一切究竟是怎么发生的，已经超越了我的理解范围，我所能做的只能是接受现实。最重要的是要搞清楚我现在究竟是在哪里，又该怎么回到我所在的宿舍。</br><br>我观望了一下四周，发现我所处的位置是一个完全陌生的地方，这里不是宿舍，也不再是那条街，放眼望去，这里一片凄凉，没有城市，也没有村庄，而是一片荒凉的草地，一望无际的荒草，如大海一般看不到彼岸。此时此刻的我显得那么渺小，如天地之间的一只屡蚁，被时间与空间所忽略。满目的苍夷，让我的心中充满了绝望，这一片荒原，我找不到方向，该如何才能走的出去？叹天地之苍茫，吾辈之甚微，如此渺小改变不了世界，而世界也不屑于改变我。突然感到自己是多余的，找不到存在的价值和缘由。生与死，存在与否似乎并不影响地球的转动，也不影响他人。然而活着就是活着，哪怕没人在乎也要活出自己的精彩。</br><br>我看向前方，虽然是一望无际，但世界终归有其尽头，只要我沿着直线往前走，总会走到世界的边缘。虽然我没有粮食，没有水，但总不能困死在原地，能走多远算多远。战士总是要死在战场上才不枉这个名号。</br><br>真正的孤独不是面对着很多人玩手机，而是拿起手机却不知道该找谁求助。何况此时此刻，我的手机根本搜索不到任何信号。夕阳洒在枯萎的荒草之上，别有一番风味。所谓吃自己的饭，流自己的汗，自己的事情自己干，靠人靠王靠祖先，不算是好汉。如今我没有任何人可以依靠，不妨拼命一搏，哪怕是死在这荒原之上也没有什么遗憾的。人总是要死的，或早或晚而已，若是没有太多留恋，生不如死。</br><br>我漫无目的的向前走着，人所畏惧的不是路途遥远，而是不知道路有多长，无尽的边际消磨着我的意志，向前或许可以生，然而前方有多远没有人能告诉我，或许我会死在路途中，是该驻足等死，还是要继前行累死，亦或足够幸运而走出去？想想自己的人生不是很如意， 该有的还没有，不该遭受的却要忍受着，或许在此长眠也算是一种解脱。生于天地间，葬于天地间，又何尝不是一种大自然的平衡？</br><br>我累了，真的很累了。我不怕奋斗，而怕不知道该为什么而奋斗。人一旦失去了希望，那是一件很恐怖的事情。没有目标，那就是行尸走肉。我目前就是处于这种状态，想着走出去，却又找不到方向，那为何不淹没于这个地方，何必苦苦挣扎？我越想越绝望，索性停下前行的脚步，躺下来看着昏暗的天空。我累了，真的很累了，不如闭上眼睡一觉，或许醒来就会到达另一片天地。</br><br>昏昏沉沉的，我睡了过去。睡梦中，我回到了学校，回到了寝室的床上，每天忙碌着该忙碌的事情，那是多么美好的事情。虽然时刻牵挂着课题的进展，也会有担心和烦恼，但那也是实实在在的事情，那些困难是可以克服的，相对于现在，那都不是事！</br><br>梦终归是梦，不论是美梦还是噩梦，总会有醒来的时候。待我醒来怕是还要面对那一片荒原，整个人湮灭在孤独之中。</br><br>突然，我的胳膊被谁扯了一下。我惊醒来，发现天空黑暗一片，四周也是黑漆漆的。我伸手摸向四周，感到自己似乎被困在一个箱子内。我伸手摸向自己的口袋，幸好手机还在。我打开手机，照向四周，不找不要紧，待我看明白了四周之后整个人都吓傻了。</br><br>我发现自己躺在一个铺满被子的棺材之内，棺材盖已经翻倒在地，棺材坐落于一个小坟丘之上，四周是漫无边际的荒原。我脑袋里空白一片，难道我已经死了？怎么会躺在棺材之中，就算是死，也要火化的呀，而我现在竟然是尸体保存完好，而且已经诈尸了。就算是死，也不该埋葬于这么个鬼地方，风水不好，竟然诈尸了，死都不能做一个安静的美男子，与我生前的形象真的是判若两人。</br><br>对于自己躺在棺材里，我还是感到莫名其妙，为何每次睡着后，醒来都会出现在不同的地点，而且越来越玄乎。难不成是梦中梦？在我所处的以马克思主义为指导的社会之中，是不会有这种玄幻的事情发生的。思前想后，想到了看过的电影《盗梦空间》，如果处在梦境之中，那么逃离梦境的方法就是自杀 。然而，若混淆了梦境与现实，那么自杀这种举动是极其危险的，比如说如果你处于现实之中，你却误以为自己在梦境之中，如果你自杀，那么就真的会挂掉。</br><br>我再次看了一下四周，感觉目前应该不是处于现实之中。再看向自己的衣服，明显的是古装啊。在我所处的那个年代，就算是不火化，那也不至于穿古装啊。活人穿古装那叫做复古，而古装穿在死人身上，那叫做诡异！就目前的情形来看，我百分之九十九的确信自己处于梦境之中。要想脱离这个梦境，那就要自杀。这里诡异的气氛让我感到恐惧和不安，我迫切的想要逃离这里。于是我不再犹豫，狠狠地一头撞向棺材之上。</br><br>醒来之后，发现自己躺在床上，只是这张床不同于学校的那张床，而是一张古色古香的实木床。不妙啊，我心想刚才肯定是撞晕了，而没有撞死！想到这里，我急切的想要回到现实世界，于是我从床上爬起来就撞向旁边的柱子上。</br><br>刚撞了几下就看到门外进来一个穿古装的女孩子，只见她慌忙走上前来拦住我，口中说道：“老爷，不要！”</br><br>我彻底蒙圈了，心想怎么睡了几觉就升级为老爷了。平时“老子，老子”的喊着自己，没想到这会儿真的有人喊自己老爷了。我第一个想法是自己被整蛊了，记得前段时间去恩施开会也被整过一次，只是那一次是通过电话骚扰的。而这一次未免玩的有点大了吧，怎么都换上了古装？就算是要整蛊，也没必要花费这么大的代价吧，且不说这一身古装，就这个房子的租金怕也是不菲吧。想整我很简单，深更半夜的一个电话就可以吓死我，没必要花费这么大的代价。再看向面前的这个女孩，我根本就不认识，那几个龟孙子为了整我请了个女演员？!</br><br>我觉得他们做的有些过分，便恼怒了起来。破口大骂：“你们这是要搞哪出？这样子整我有意思吗？！”</br><br>谁料那女生竟然惊慌失措，一下子跪了下来。我脑袋一大，心想这他妈玩的也太过了吧，直接给老子跪了！这种被尊重的感觉真他妈的爽，既然他们愿意玩，不如我就陪他们玩下去。我整了整衣领，清了清嗓子，说道：“起来吧！”</br><br>那女生应了一声便站了起来。</br><br>“老爷我这是在哪里啊？”我问道。</br><br>丫头回道；“老爷，这是在家里啊。”</br><br>正在心里盘算着，这个家是谁的家，从外面走进一位三十左右岁的女人，刚进门就喊道；“老爷，你可算是醒过来了！”</br><br>听她这番言语，她应该是我老婆了？真的是搞笑，就算是演戏也应该从相识，相知到相爱演下来吧！我心中有些不快，面无表情的问道:“你哪位？”</br><br>女人愣了一下，开口道；“我是你的夫人啊，老爷，你是不是撞坏了脑袋了？”</br><br>听到她亲口说出自己的身份，我才开始仔细地打量着她，此人虽不是国色天香，也不能倾国倾城，但也散发出三十岁少妇成熟的韵味，品貌端庄，举止得体，颇有大家闺秀的气质，似乎很符合我想象中未来老婆的配置。想到此，不如将计就计，陪他们演一出穿越回明朝当王爷。只是我从她们的衣着上并看不出这是哪朝哪代，于是便试探着问道：“夫人啊，你可知今夕是何年？”</br><br>夫人楞了一下，随后叹息一声说道：“日复日，年复年，何须记得今夕是何年？你醒来便好。”</br><br>放眼看去，她的脸上写满了忧郁，眼眶中竟然有泪水在打转儿。梨花带雨虽美，看久了却也会心生怜悯，于是便关心的问道：“夫人因何而哭？”</br><br>听闻此言，她再也控制不住自己的情绪，竟然是放声痛哭起来。一边的丫头看不下去，开口道：“老爷，你昏睡的这些年，可知道夫人她受了多少苦？”</br><br>听丫头的意思是我做了多年的植物人，我只不过是睡了一觉而已，怎么就变成了她所谓的“这些年”了呢？“丫头，发生了什么，你给我细细道来！”想了想又道：“先扶夫人下去休息！”</br><br>不久，丫头便回来了，将事情的原委跟我说了一遍。听完她的诉说，我勃然大怒，这万恶的世界，总是存在那么多恃强凌弱、欺男霸女的败类。我大脑充血，跳下床四处转悠，终于找到了一把砍柴刀，大喝一声：“来人，带路，待我砍将过去！”</br><br>家丁们先是一愣，随后便各抄家伙，想与我一起砍杀仇家，定然是在我昏睡的这几年中，他们受到了太多的欺凌，如今我已清醒，哪怕是丢了性命，也要出了这口恶气。更何况我本就不属于这个世界，哪怕是被砍死了，也无所谓，或许死后，我便可以回到属于自己的世界。</br><br>“站住！”一个女人的声音从身后传来，正是夫人。</br><br>“夫人休要拦我，我近日定要为你讨回一个公道！”</br><br>“那人神通广大，你不是他对手！”夫人的话语充满着无助。</br><br>“难不成他成精了？！”我心有不服，这么多人还打不过一个人？说罢，我头也不回的走出了家门。</br><br>几十个人，浩浩荡荡的向大山杀去。山的名字就叫做大山，但大山并不大，也不雄伟，只是普通的一座山而已，只是在一望无际的平原上，这座山显得有些特别。山上有一无名洞，洞中住着的便是仇家，亦不知其名号，待我来到洞前，之间他盘膝而坐，闭眼不语。此人生的颇为俊俏，脸上却无胡须，无法判断其年纪。我也不言语，快步上前，一刀挥去，欲将其项上人头斩落。从未杀过人的我很想体验一下杀人的快感，更何况此人万恶不赦，乃是我家的仇人。</br><br>“且慢！”他终于说话了。</br><br>“终究是怕死，你想说什么？”我轻蔑的问道。</br><br>他嘴角一扬，微微摇头说道：“再怎么说你也是一位科研工作者，凡事需要思考与求证，为何听信他人片面之词便要置我于死地？”</br><br>听了他的话，我心头一颤，我曹，科研工作者？我在古代也是一位科研工作者？我试探着问道：“什么科研工作者，研究什么？”</br><br>“了尘兰若，你装傻还是真傻，难道你看不出我是谁？”</br><br>“你谁呀？！”刚喊出口我便感觉到不对劲，他竟然知道我的名字，我真正的名字，如此说来，他也是从我的那个世界里穿越过来的。</br><br>“你是穿越过来的？”我试探着问道。</br><br>“废话！我要不穿越过来，怕你乐不思蜀了！”</br><br>“你身上的这副皮囊让我无法判断你到底是谁，别绕弯子，直接说名字！”我有些急的说道。</br><br>“除了实验室大总管，还会有谁跨越时间与空间来寻你？”那人得意的说道。</br><br>“我去，怪不得这么骚气，原来是你啊！快告诉我，究竟发生了什么？”</br><br>“你随我进洞来。”</br><br>我懂得他的意思，便摒退了左右，来到洞中。</br><br>“说，你为什么天天去我家欺负我一家老少？！”我有些恼火的问道。</br><br>“你家？你还真的天真的以为那是你家？”他不屑的回了我一句。</br><br>我有些摸不着头脑，于是便让他将事情的原委说与我听。</br><br>“所有的事情都是源于我们实验室刚刚申请的一个重大项目”，他递给我一杯水说道。</br><br>“再怎么重大的项目也只不过是投入人力物力而已，为什么我还穿越了，不觉得很扯淡吗？”我有些摸不着头脑。</br><br>“并非穿越，而是入了鬼门，这里是鬼界！”</br><br>“你说什么？莫不成外面那些都是鬼？”我惊讶的问道。</br><br>“确是如此。”</br><br>“为何会这样？”</br><br>总管长叹一口气，说道：“只因课题的特殊性，我们的项目是想研究全国各地村落中坟地的土壤微生物群落结构组成差异，由于农村墓地相比城市的公墓而言人为生态破坏比较少。在全民开垦荒地的潮流下，墓地更能代表其地域的原生态。再者，墓地阴气较重，气场与一般的环境不同，很可能具有特异的微生物多样性和群落结构组成。至今为止，还没有人做过这方面的研究。我们的导师决定在该领域搞出几篇大文章，于是以调查国内有益微生物资源为由申请了国家重点课题。你负责的是我国西南地区农村墓地微生物资源多样性及群落结构差异研究，其中重要的一部分在于调查同一墓地每个时间点的微生物动态变化。”</br><br>“等等，你是说同一地点取24次样品？为何？”我好奇的问道。</br><br>“的确是24次，我们除了调查不同地域的微生物差异之外，还想调查磁场对微生物群落结构动态变化的影响。”</br><br>“难道不同时间点，环境磁场也会变化？”</br><br>“确实如此，我们需要知道在微生物群落结构上，鬼活动所产生的磁场波动到底有多大的影响力，宏基因组分析会得知，哪些微生物更喜欢鬼散发的磁场，从中发掘一部分有益微生物，或许可以找到攻克当今世界上还无法决绝的人类疑难杂症的微生物源的治疗资源。只要我们找到了相关规律，便可以人工模仿鬼磁场，定向筛选有益微生物，此研究若是成功了，不仅仅是几篇《Nature》和《Science》的荣耀，更是为人类谋福，这将大大降低人类的死亡率，甚至有一天，我们真的可以做到长生不老。”总管侃侃而谈，唾沫飞溅。</br><br>“停，你说的这些我怎么完全没有印象？”</br><br>总管注视我良久说道：“因为你采样时，灵魂出窍坠入鬼界，你失去了很多记忆。我们请了巫师，将我的魂魄传送到这里寻你，由于魂魄需要载体，所以我暂时寄居在这副躯体之上。”</br><br>“那么我呢？也寄居在这副老爷的躯壳之中？”</br><br>“你不是寄居，而是被施了咒困在这副死人的躯壳中，由于你挖坟太多，激起众怒，这些鬼便想将你永远的困在尸体之中，不得返回现实世界之中。”</br><br>我挖坟太多？还不是按上级领导指示做事？！</br><br>“你不要有怨言，我们所从事的科研，是为人类谋福，虽然看起来不是很光彩，但确确实实是在做好事。”总管语重心长地说着。</br><br>“所以，你去我家，不，是你去那户人家里闹腾是为了救我出去？”</br><br>“正是如此！”</br><br>“我睡了几年？”</br><br>“五年！”</br><br>“什么，五年？那我岂不是延期了？！”我大怒。</br><br>“你发什么脾气，我在这里救了你五年！”总管也有些恼怒。</br><br>“救了五年为何我们还在这里，这就是你做事的态度和效率吗？”我引用导师尝尝批评我们的话来只问他。</br><br>“这五年里，我每天都要跑去那个宅子厮杀一番，为的只是将这东西喂给你吃，好让你早日醒来，只要你不醒，我便无法带你离开！”总管手中握着一些五颜六色的药丸说道。</br><br>看来是我误会他了，真的没想到，他为了我在这里也耗了五年青春。我轻声说道：“对不起，把你害的也延期了。”</br><br>“先不要说这些了，我们要尽快想办法出去才是。”总管眼睛向洞外看去，叹了口气继续说道：“出去的路必定是艰辛而血腥的！”</br><br>“我们该如何才能回到人间？”</br><br>“回到你这副尸体所在的棺材之中，在那里点燃巫师给的还魂香，你便可以追随香烟而离开。”</br><br>“那你呢？”</br><br>“我自有办法，我跟它们斗了五年，自然不怕它们”，总管目光中充满着自信。</br><br>想想也是，看那宅子里的鬼过的的确有些惨，每天都要被总管杀一遍，自然是对他心生恐惧。这也是为什么它们要编造谎言，引诱我杀死总管，幸亏没让它们得逞，否则就不单单是延期的问题了，而是一辈子被封死在这具老爷的尸体之中沉睡。</br><br>出去很简单，总管是那么英勇，一路杀将到墓地之中，我躺在棺材里，闭上眼，随着点燃的还魂香冒出的青烟一路向上飘去。</br><br>“快看快看，谁家祖坟冒青烟了唉”，人群一片躁动，争相拍照录视频。这些影像资料很快便在各社交平台传播开来，引来了不少专家和学者，试图从科学的角度来解释这个奇观。然而，只有我才知道，那缕青烟是还魂香冒出来的，而我的魂魄也夹杂在其中。青烟飘啊飘，一直飘到了医院的病床上，飘进了躺在床上的那个人的鼻孔之中。我一下子惊醒，坐在床上四顾无人，只有旁边的仪器在滴滴的响。躺了五年，我终于醒了！</br><br>屋子中央有一个帘子，帘子的那边是另一张病床，我看到一双大脚露在床边，一动不动。难不成隔壁的病友死了？我拔下身上的管子，慢慢地摸下床，朝那边走去。来至近前发现，那人竟然是总管，他还没有醒。刚刚他让我先走一步，不知道他在下面还要做些什么，估计也要不了多久。果不其然，在我狠狠的甩了他几记耳光之后，他也惊醒过来，两人相视而笑，随即是热泪盈眶，终于出来了。</br><br>由于长期卧床，我们进行了一个月的康复训练，身体总算是有了力气。一个阳光明媚的周末，约在美食城的一家餐厅，包间内只有我们两人。</br><br>“课题还要继续？”我问道。</br><br>“当然要继续，我们俩可以合作，将西南地区的事情说清楚，在下面的这五年，除了厮杀之外，我对那片坟地的人口组成做了详细的统计，确切的说是鬼口。”总管颇有些得意。</br><br>“哦？你的意思是鬼的组成会对微生物的群落结构造成影响？”我也有些兴奋起来。</br><br>“还不确定，具体还要等待分析结果，你前期采的样品已经有人抽提了总DNA并测了宏基因组，数据还烂在那里，就等你分析了。你先把群落结构搞清楚，然后将各种环境因素考虑进去，看哪些主成分对微生物的群落结构影响最大。如果幸运的话，我们可以揭示出人类所未知的新的影响因素，比如鬼磁场。而不同的鬼所散发的磁场是不一样的，这就是为什么我要去统计那些鬼的分布与组成。”总管的眼神中充满着希望与光明，他举起酒杯一口喝下，继续说道：“兄弟，老天总是公平的，虽然我们昏睡五年，延了期，然而，这五年中我们累积了重要的数据，现在大文章呼之欲出，还愁什么没文章毕业？！”</br><br>看他激动的神情，我也有些被感染，斟满一杯酒举杯说道：“为了我们的大文章，干杯！”</br><br>喝得正高兴，一群白大褂推门而入，二话不说就将我们带走。</br><br>“你们干嘛，哪家医院的，我们没喝多，不需要去医院”，总管大声的嚷嚷道。</br><br>我也在纳闷，没人打120啊，抓错人了吧，眼睛的余光突然瞟到了白大褂胸前的小字，写着“武汉市第一精神病医院”。</br><br>“我不是精神病，不是！”我大声嚷嚷着。</br><br>“我真的没喝多”，总管继续嚷嚷着。</br><br>围观的人群掏出手机记录着这一刻所发生的趣事，瞬间，朋友圈、微博等等平台出现了头条“科研者的悲哀——华农某实验室两位博士太过渴望发大文章而出现严重精神问题”。</br><br>事情就是这么糟糕，一些科学问题在没有发表并得到公认之前，其研究者总会被认为成是疯子，或许有些新东西只有疯子才能发现，比如说我们所提出的《墓地微生物学》,谁敢说将来它不会火？</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逍遥于世</title>
      <link href="/post/4e69.html"/>
      <url>/post/4e69.html</url>
      
        <content type="html"><![CDATA[<p>躺在床上玩了会儿手机，困意来袭，便睡了过去，半梦半醒的似乎被谁扯了一下左胳膊，我一下子清醒了过来。刚才那一下子十分真实，我打开手机四周查看了一遍，并未发现有何异常。难道是做梦了？自己真的是有点神经质，总是做一些离奇的梦，这样子下去怕是要去看心理医生了。回到寝室总是要把每个角落查看一遍，确信安全才会关灯，怕的是某个地方会藏着不寻常的东西。</p><span id="more"></span><p>话说刚才那一下把我从睡眠中拉醒，虽然并未发现什么异常，但黑灯瞎火的我总还是感到有几分不安，又不想跑到地上开灯，这个时候床上比较安全。我在心中说服自己，是自己想多了，估计是神经中枢跟我开玩笑闹着玩的。我蜷缩到被子里，不让身体的任何一点地方暴露在空气中，这样心里踏实了一些。</br><br>浑浑噩噩的又睡了过去，睡了不久，感到右边的胳膊也被扯了一下。我睁开眼，看到自己身处一条街道之上，阳光昏暗已是黄昏。街上聚集了很多人，人群中间是一根十多米的竿子，大家围着竿子不知道议论着什么。喜欢凑热闹的我走上前想一探究竟，不料随着我逐渐的接近竿子，自己的身体却越来越轻，当我走到竿子底下的时候，我竟然不由自主的飘了起来。我吓坏了，努力挣扎着却无济于事，身体一直在上升，看着地上的人逐渐变小，我也离地面越来越远，恐高的我尖叫着希望能有人来救我。</br><br>然而，不论我升多高，却一直超越不了竿子的高度，我发现本来十几米的竿子在不断的长高，直插云霄，把天捅了个窟窿。而我也在不断的往上飘，但只能直线上升而不能水平移动。高空的空气稀薄起来，我感到一阵头晕和恶心，最后晕死过去了。</br><br>醒来之后发现自己已经在地面了，我心中疑惑，我是怎么到达地面的，如果是摔下来的，这么高肯定是必死无疑，可是我检查了一下身体，竟然没有任何损伤。难道是我飘到了飞机上，被捎回了地面？这也太匪夷所思了。我看了看四周，已经不在那条街上了，记得我上天的时候一直保持与那根竿子平行，而竿子是笔直的，按理说我掉下来应该还是会落到这条街上才对。难道我下落时遇到了狂风把我吹跑偏了？很有这个可能。其实说我是落下来的谁都不会相信，没有谁从高空自由落体下来摔不死，难不成我已经死了，现在的我只是个游魂？我摸了一下自己，肉是实实在在长在身上的，掐一下也会疼。这证明了两点:第一，我还活着；第二，这不是在做梦。</br><br>我思前想后，绞尽脑汁也没有想明白这一切是怎么发生的，明明是躺在床上睡觉，怎么会到了那条街上，为何自己会飘起来，而我在高空中晕过去以后究竟发生了什么，为何我又毫发无损的落到了地面？难道我是飘下来的？想想也不排除这种可能，既然能飘上去，那么也有可能会飘下来，不论是飘上还是飘下，总之都是超越了物理学的范畴。至于这一切究竟是怎么发生的，已经超越了我的理解范围，我所能做的只能是接受现实。最重要的是要搞清楚我现在究竟是在哪里，又该怎么回到我所在的宿舍。</br><br>我观望了一下四周，发现我所处的位置是一个完全陌生的地方，这里不是宿舍，也不再是那条街，放眼望去，这里一片凄凉，没有城市，也没有村庄，而是一片荒凉的草地，一望无际的荒草，如大海一般看不到彼岸。此时此刻的我显得那么渺小，如天地之间的一只屡蚁，被时间所忽略。满目的苍夷，让我的心中充满了绝望，这一片荒原，我找不到方向，该如何才能走的出去？叹天地之苍茫，吾辈之甚微，如此渺小改变不了世界，而世界也不屑改变于我。突然感到自己是多余的，找不到存在的价值和缘由。生与死，存在与否似乎并不影响地球的转动，也不影响他人。然而活着就是活着，哪怕没人在乎也要活出自己的精彩。</br><br>我看向前方，虽然是一望无际，但世界终归有其尽头，只要我沿着直线往前走，总会走到世界的边缘。虽然我没有粮食，没有水，但总不能困死在原地，能走多远算多远。战士总是要死在战场上才不枉这个名号。</br><br>真正的孤独不是面对着很多人玩手机，而是拿起手机却不知道该找谁求助。何况此时此刻，我的手机根本搜索不到任何信号。夕阳散在枯萎的荒草之上，别有一番风味。所谓是吃自己的饭，流自己的汗，靠人靠王靠祖先，不算是好汉。如今我没有任何人可以依靠，不妨拼命一搏，哪怕是死在这荒原之上也没有什么遗憾的。人总是要死的，或早或晚而已，若是没有太多留恋，生不如死。</br><br>我漫无目的的向前走着，人所畏惧的不是路途遥远，而是不知道路有多长，无尽的边际消磨着我的意志，向前或许可以生，然而前方有多远没有人能告诉我，或许我会死在路途中，是该驻足等死，还是要继前行累死，亦或足够幸运而走出去？想想自己的人生不是很如意， 该有的还没有，不该遭受的却要忍受着，或许在此长眠也算是一种解脱。生于天地间，葬于天地间，又何尝不是一种大自然的平衡？</br><br>我累了，真的很累了。我不怕奋斗，而怕不知道该为什么而奋斗。人一旦失去了希望，那是一件很恐怖的事情。没有目标，那就是行尸走肉。我目前就是处于这种状态，想着走出去，却又找不到方向，那为何不淹没于这个地方，何必苦苦挣扎？我越想越绝望，索性停下前行的脚步，躺下来看着昏暗的天空。我累了，真的很累了，不如闭上眼睡一觉，或许醒来就会到达另一片天地。</br><br>昏昏沉沉的，我睡了过去。睡梦中，我回到了学校，回到了寝室的床上，每天忙碌着该忙碌的事情，那是多么美好的事情。虽然时刻牵挂着课题的进展，也会有担心和烦恼，但那也是实实在在的事情，那些困难是可以克服的，相对于现在，那都不是事！</br><br>梦终归是梦，不论是美梦还是噩梦，总会有醒来的时候。待我醒来怕是还要面对那一片荒原，整个人湮灭在孤独之中。</br><br>突然，我的胳膊被谁扯了一下。我惊醒来，发现天空黑暗一片，四周也是黑漆漆的。我伸手摸向四周，感到自己似乎被困在一个箱子内。我伸手摸向自己的口袋，幸好手机还在。我打开手机，照向四周，不找不要紧，待我看明白了四周之后整个人都吓傻了。</br><br>我发现自己躺在一个铺满被子的棺材之内，棺材盖已经翻到在地，棺材坐落于一个小坟丘之上。四周是漫无边际的荒原。我脑袋里空白一片，难道我已经死了？怎么会躺在棺材之中，就算是死，也要火化的呀，而我现在竟然是尸体保存完好，而且已经诈尸了。就算是死，也不该埋葬于这么个鬼地方，风水不好，竟然诈尸了，死都不能做一个安静的美男子，与我生前的形象真的是判若两人。</br><br>对于自己躺在棺材里，我还是感到莫名其妙，为何每次睡着后，醒来都会出现在不同的地点，而且越来越玄乎。难不成是梦中梦？在我所处的以马克思主义为指导的社会之中，是不会有这种玄幻的事情发生的。思前想后，想到了看过的电影《盗梦空间》，如果处在梦境之中，那么逃离梦境的方法就是自杀 。然而，若混淆了梦境与现实，那么自杀这种举动是及其危险的，比如说如果你处于现实之中，你却误以为自己在梦境之中，如果你自杀，那么就真的会挂掉。</br><br>我再次看了一下四周，感觉目前应该不是处于现实之中。再看向自己的衣服，明显的是古装啊。在我所处的那个年代，就算是不火化，那也不至于穿古装啊。活人穿古装那叫做复古，而古装穿在死人身上，那叫做诡异！就目前的情形来看，我百分之九十九的确信自己处于梦境之中。要想脱离这个梦境，那就要自杀。这里诡异的气氛早已经让我窒息，我迫切的想要逃离这里。于是我不再犹豫，狠狠地一头撞向棺材之上。</br><br>醒来之后，发现自己躺在床上，只是这张床不同于学校的那张床，而是一张古色古香的实木床。不妙啊，我心想刚才肯定是撞晕了，而没有撞死！想到这里，我急切的想要回到现实世界，于是我从床上爬起来就撞向旁边的柱子上。</br><br>刚撞了几下就看到门外进来一个穿古装的女孩子，只见她慌忙走上前来拦住我，口中说道：“老爷，不要！”</br><br>我彻底蒙圈了，心想怎么睡了几觉就升级为老爷了。平时“老子，老子”的喊着自己，没想到这会儿真的有人喊自己老爷了。我第一个想法是自己被整蛊了，记得前段时间去恩施开会也被整过一次，只是那一次是通过电话骚扰的。而这一次未免玩的有点大了吧，怎么都换上了古装？就算是要整蛊，也没必要花费这么大的代价吧，且不说这一身古装，就这个房子的租金怕也是不菲吧。想整我很简单，深更半夜的一个电话就可以吓死我，没必要花费这么大的代价。再看向面前的这个女孩，我根本就不认识，那几个龟孙子为了整我请了个女演员？!</br><br>我觉得他们做的有些过分，便恼怒了起来。破口大骂：“你们这是要搞哪出？这样子整我有意思吗？！”</br><br>谁料那女生竟然惊慌失措，一下子跪了下来。我脑袋一大，心想这他妈玩的也太过了吧，直接给老子跪了！这种被尊重的感觉真他妈的爽，既然他们愿意玩，不如我就陪他们玩下去。我整了整衣领，清了清嗓子，说道：“起来吧！”</br><br>那女生应了一声便站了起来。我清了清嗓子问道：“发生了什么事情？”</br><br>女生应道：“恭喜老爷起死回生。”</br><br>听闻此言，我丈二的和尚摸不到头脑，便让她详细道来。</br><br>从她的叙述中我大致了解到我是这个家庭的主人，常年卧病在床，最终因疾而终。昨日入棺，夜里夫人来灵堂守夜，发现棺材中有动静，找人开馆之后发现我胸口尚有起伏，才知我原来是假死。就这样子我起死回生，捡回了一条命。我越听越糊涂，看那姑娘的神情不像是在编故事，心里盘算着莫不成我真的穿越了？狠狠地扇了自己一巴掌，感觉到脸上火辣辣的，看来这肉体是真的。我跳下床，背着手在地上转着圈儿，并未发现身体有何不适。不是说我常年卧病在床吗，为何我没有一点不舒服的感觉？</br><br>我眼珠子转了转对女生喊道：“传夫人！”</br><br>女生应了一声便出去了，不就门外进来一妇人，容貌清秀，甚为可人，观之心旷神怡，还没等我开口，妇人便走上前来搀扶着我，温柔地问道：“老爷，你怎么下地了，快回床上休息！”</br><br>我心中窃喜，心想这妇人应该就是本老爷的老婆了，生的这般美貌，且如此温柔，哪怕这是一场梦，老爷我也要好好享受一番。我大声笑道：“夫人莫担心，老爷我身体倍儿棒，死过一次以后已经脱胎换骨了，如今再无疾病缠身，定可长命百岁，与你共闯天涯！”</br><br>虽然话说的爽快，但是我对自己当前的身份和这个家庭毫无所知，也不知道今夕是何年，我只是一个迷路的灵魂，闯进了一个陌生人的身体内，霸占了他的家产和他的一切。但是没关系，我也可装作起死回生之后的失忆症，反正这副躯体是真实的，不会有人怀疑我。人类总是对新环境或者新事物充满好奇，我也是如此，我迫切的想知道这副躯体的容颜如何，吩咐下人找来了镜子，看着镜子中的那张脸，我的嘴角露出了淡淡的微笑，多么俊俏的一张脸，虽然有些憔悴，但还是掩饰不住那股帅气的味道。心想，若能如此过一辈子也好，虽然不知道这个时代背景如何，但我在这个时代中应该是一个成功者，可以不去奋斗，便坐享其成，有美满的婚姻，敞亮的房屋，忙前忙后的下人。</br><br>如此过了几日，我慢慢地了解了自己的身份以及社会背景，每日在府中喝茶赏花，过的倒也舒坦，日子久了，对这里的人有了感情，但是偶尔也会想想自己原来的那个世界，那个世界里的朋友与亲人。我至今依旧不清楚自己为何会闯入这副躯体，或许是前世有未了的一段情缘，或许该离开，过去的毕竟已经成为历史，我们无法改变历史，只能努力的创造历史。离开吧，我怕自己在这个世界里呆久了会舍不得离开，可是我又该怎么离开呢？自杀吗？先不说自杀后会不会回到未来世界里，如果我真的自杀了，那么这副躯体就真的成为了死尸，而这副躯体的家人又要面对失去亲人的痛苦。我承认自己不是一个心怀天下，道德高尚的人，但我真的见不得生离死别之痛。虽说我死了可以一了百了，但毕竟我会进入中阴身，在此之间还是会看到亲人的痛，怕是一念之间我又舍不得离开，却又回不到这副躯体，最终落得个孤魂野鬼的下场。想想未来世界里的那个我，每天早出晚归，坐在电脑前，面对着那些焦头烂额的数据，毕业压力、工作压力，家庭和社会压力，都压得我喘不过气来，似乎那个世界里痛苦大于快乐，但是那个世界里有生我养我的父母，有朝夕相处的兄弟姐妹，又叫我如何能够舍得？</br><br>离开吧，我的离开会给这个家庭带来悲伤，但是我的闯入也给他们带来了欢声笑语，虽然短暂，却也是一段幸福的日子。人与人，没有谁离不开谁，伤痛总会被时间抹平，一个人的离去总会被另一个人的到来所填补，或许我本身就没有想象中的那么重要。</br><br>花了两天时间，我安顿好了府里的事情，告诉大家我要去远方旅行，或许不再回来。在一个傍晚，我一个人背着行囊出发了，我总觉得傍晚才是适合分离的时刻，孤单的身影与西下的夕阳更配。一个人，一双草鞋，一身布衣，三两个馒头，一壶酒。离开了喧嚣的街道，来到了荒山野岭，没有了人间灯火，星空更加璀璨了，仰望星空，除了叹息自己的渺小之外，更加充满了对宇宙的好奇与向往，万千繁星中，哪一颗是我，哪一颗是你？饮一壶浊酒，赋两三首诗词，似乎很惬意。酒过三巡，眼神渐渐迷离，躺在草地上就此睡去，不知一觉醒来又是怎样的一番景象。</br><br>这个世界没有安乐死，我没有勇气上吊或者自刎，也没有地方寻找悬崖峭壁，我只能饮一壶毒酒，肝肠寸断是这壶酒留给我的对这个世界最后的感受。痛着痛着就不再痛了，该来的来，该去的去，该舍弃的舍弃。我渐渐地清醒了，看着地上那副躯体越来越远，直到他化成一个点，直到那个点消失不见，我看到了城池的点点灯光，点点灯光化成一片光晕，继而消失不见。天空的星星离我越来越近了，甚至是触手可及，我感觉到了空气的稀薄，感到自己无法呼吸。我确定草地上的那副躯体已经死去，我不确定我还能不能回到未来世界里自己的身体之中，或许我的灵魂会在眼前的星空里得到净化，甚至被星星的光辉所化解，继而成为其中的一丝光亮。</br><br>渐渐地我失去了意识，突然之间，整个世界都安静了，我的眼前是一片光亮，刺的我睁不开眼睛。白茫茫的光亮中，我是一个孤影，空间无限大，没有方向，难道在回家的路上我迷失了方向，掉进了一个无限大的容器中？我不知道该往哪里去，瘫坐在地上，身边无一物，甚至连一丝尘埃都没有，太干净了，太安静了。我紧闭双眼，可那片白光依然挥之不去，伸手去抱头，却发现脖子上面一无所有，脑袋哪去了？再摸去脖子也消失不见了，我的身体正在慢慢的分解，确切的说应该是灵魂在挥发，因为此刻我根本就没有躯体，而我的思维也不知从何而来，或许组成灵魂的任何一个元素都可以思考吧，管它呢，就此消散也没什么大不了的，多一个不多，少一个不少，能到这世上走一遭已经不再有其他奢求了。</br><br>何去何从，顺其自然吧，一切随缘。前一秒的你是你，后一秒钟的你是你，或许下一分钟的你便是另一群细胞组成的生物，你已经不再是你，躯体如此，灵魂亦如此，梦醒后，消散的灵魂必然会重新组合，迎来一个全新的我。</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人鬼之战2015</title>
      <link href="/post/c463.html"/>
      <url>/post/c463.html</url>
      
        <content type="html"><![CDATA[<p>刚刚结束了一个周的暑假，8月7日中午回到寝室，发现寝室的门并没有锁上，心想可能有师傅进来检修，没有太在意。<br>下午并没有去实验室，而是在寝室换洗了一下床单，并补了一觉。傍晚和钟昊还有茜茜一起吃的晚餐，喝了两瓶啤酒。</p><span id="more"></span><p>晚上在实验室呆到22：50左右便回到寝室。洗漱完毕便躺在床上看了一会儿电视剧，不到零点就睡过去了。</br><br>睡了不久便进入了梦境，几个人一起来到了一处升降电梯前，下行到了建筑物的最底端，这里只有一扇黑暗的门，似乎整幢楼还在建设中。我推门而入，里面像是一处广场，到处昏暗一片。我前行着，身边不时地有人影飘过，如同鬼魅一般轻盈。我伸手拉过一个女人的身影吻了起来，可最后发现她竟然是变成了一个男人，他奸邪的笑着，我心中一阵恶心差点吐出来。他的笑让我感到诡异和不安。</br><br>后来我醒了，发现自己躺在床上，似乎被什么东西给控制住了手脚，我努力挣扎着却无论如何也动弹不得。我声嘶力竭的喊着，却只能发出吱吱呀呀的微弱的声音。宿舍里只有我一个人，看来我只能靠自己了，不管控制我的东西是什么，我一定要和它斗一斗。我还是努力挣扎着，突然我的被子向上直立了起来，如同地球的引力变作了斥力一般，如此诡异的现象我以前从未见过，唯一的解释就是遇见鬼了。</br><br>我使劲的向下拽着被子，感觉到有个东西像拔河一般在跟我扯被子，我抱住被子一个翻身，将那东西用被子捂住压在身子底下。那东西很不安分，在杯子中串来串去，如同一只大老鼠在风箱中来回跑一般。它力气极大，我有些压不住它。我伸手去摸手机，想借助手机的光看清楚那到底是什么。可是我的手机如同活了一般，挣扎着从我手中逃脱，我根本就拿不到它。想必是手机被那东西给控制住了。</br><br>我的身体还是有些僵硬，远远比不了那东西灵活。此时的我相当难受，那东西已经逃脱出来，想用被子勒住我的脖子，我们两个各自扯住被子的一边，又开始了“拔河比赛”。只见它一直拖着我向床边走去，似乎想把我扯到地上。这么高的床，如果摔下去可能会受伤，我死死的往后退着，生怕被它拉下去。</br><br>此时，我脑海中突然出现了老妈的身影，她对我说：“往前走”。</br><br>我脑袋翁的一下，往前走可就掉下床去了，老妈怎么会让我往前走呢？难道往前走可以破解那东西对我的控制？我此刻很怀疑这个老妈是不是真的，她有可能是我产生的幻觉，说不定往前走会摔死。在这种情况下我很谨慎，不会轻易的相信她。</br><br>我依旧极力的向后退，突然，那股撕扯的力量一下子消失了，我的身体一轻便解脱了出来，总算是可以自由的控制自己的身体了。</br><br>我睁开眼，四周一片黑暗，那东西已经消失不见。我打开手机看了看，现在是零点三十分左右。心想，刚刚只不过是一场梦，只不过感觉极其真实而已。我打开QQ空间，编辑好了一条状态想要发出去，可是竟然显示无网络连接，此时我明明连接的wifi，而且信号很满，我重新登陆了一下wifi，可依旧显示无网络连接。我索性关掉wifi，打开数据流量，还是无网络连接。瞬间我冒出了一身冷汗，难不成信号被那东西干扰掉了，它真的在我身边，而且还没有离开？！</br><br>在我的认识中，鬼可以散发磁场，它们很有可能干扰到我们的手机信号，我折腾了两分钟都显示无网络连接，不由得我不浮想联翩。我借助手机的光芒将房间扫视了一圈，没有发现异常。此时的我仍旧惊魂未定，黑暗总是给人无限的遐想与恐惧。我深呼了一口气，调亮手机，然后跳下床去。</br><br>走到门边，我按亮了日光灯，整个宿舍一下子明亮了起来。我无力地走到椅子边坐下来，神经质的翻动着手机，希望找个人聊聊天以驱赶这种恐惧感，可这个时间，大家早已经入睡，哪里找人聊天呢。再说大晚上的说这些事情，总会被人当成神经病，想想便作罢。坐在哪里平静了一会儿，但我还是没有安全感，总觉得寝室里有什么东西在注视着我。我巡视了一圈，一切都正常，我拉开窗帘，使得这个空间显得不那么封闭。我小心翼翼的打开了厕所的门，里面也是空空如也。那么剩下的没有查看的就只有两边的柜子了。不知道为什么，我总觉得柜子里会藏着死人或者人头。由于放假的缘故，我离开学校一个周，这一个周内谁也说不定宿舍里会发生什么。人们在这种特殊的环境和恐怖的气氛下难免会多想，我也不例外。我狠了狠心，从椅子上站了起来，心想就算是龙潭虎穴也得探个究竟，只有未知的东西才是最可怕的，那么现在要做的就是去一探究竟。我走到柜子前，挨个打开柜子和抽屉，转了一圈，并未找到不该有的东西，这时候我才稍微的松了一口气，庆幸自己没有看到死人或者肢体。</br><br>我重新坐回到椅子上，还是不敢睡觉，突然萌发白天睡觉晚上工作的念头。我在想，为什么刚刚回来就会做这种梦，是不是有人到宿舍里来做了手脚，比如说放了致幻剂使人产生幻觉或者改变了某些物品的摆放格局使得屋子里阴气变重，容易招惹到不干净的东西。但我也没有得罪过谁啊，应该不会有人来害我。难道是因为中午我换过了凉席和床单，上面带有不干净的东西，晚上出来闹腾？或许这只是一个梦而已，是我多虑了。</br><br>坐了一会儿，困意来袭，但是心里还是有些恐惧，不敢关灯，便一直亮着灯，自己爬到床上看电视。我很担心电费不足，万一此时停电，不知道这一晚上该怎么度过，或许只能跑到路灯下坐着了。</br><br>一觉醒来，以为天亮了，才发现还开着灯，看了看手机才四点多钟，外面正是黎明前最黑暗的时候，此时已经没有那么恐惧了，把心一横，下去关了灯。比起鬼来说，电费更值得我担忧。</br><br>迷迷糊糊的又睡了过去，梦中亲人们都在餐馆中吃饭，我在中间蹦来跳去的，走到餐桌前我在原地转了几个圈，身体不受控制的倒在了地上，再也爬不起来。后来的事情就不记得了。再醒来已经是天明。</br><br>这一夜睡的很累，很不安稳……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今天的梦</title>
      <link href="/post/dc9c.html"/>
      <url>/post/dc9c.html</url>
      
        <content type="html"><![CDATA[<p>与刘二琳，钟博，强哥去博园吃饭。走到逸夫楼后面时我和强哥走小路，他二人走大路，待到博园餐厅门口汇合，刘二琳在左边第一个，我第二，强哥第三，钟博在最右面。只见二琳突然间消失了，我心打了个冷颤，再看向钟博，他也慢慢的消失在空气中，我开始腿软了起来。而强哥继续走进了餐厅，我也随他进去。</p><span id="more"></span><p>这时的我已经站不稳了，头开始晕眩了起来，空中垂下一根帘子，我抓住它便原地转起了圈，在我刚要摔倒的时候，陈老师将我扶住，他也来博园了。过了一会儿，我试着自己站起来，踉踉跄跄的往前走了几步，结果发展自己还是站不稳，他们打了120，博园所有的门窗都被锁了，并拉下了窗帘，整个屋子瞬间变黑了，只为了不让我逃跑，一会儿等救护车来把我拉走。我一个人挪到了窗前，闭着眼趴在桌角，痛苦的呻吟着。隐约间听到身边吃饭的男女在模仿和嘲笑我！我很愤怒，便将男生的手咬了一口，他与我争论并恐吓我，此时我的愤怒和无奈让我失去了恐惧感，便开始疯狂的打那男生。后来救护车来了，我满满的清醒过来，医生说我无碍便将车开走了。此时二琳与钟博已经坐在餐桌吃饭，我惊讶不已，搞不清楚在他们身上发生了什么。我也坐下来，边吃饭边看向他们，并未发现有什么异常。我情绪开始激动起来，想把刚刚的离奇消失告诉大家，可是我似乎被控制住一般，喉咙里只能发出吱吱呀呀的声音，根本无法说话。我痛恨自己无用，竟然无法抗争控制我的东西，我双手拿着筷子，愤怒的将盘子里的米饭往嘴里送，不料我再怎么努力却也是徒劳，米饭被我搞的乱七八糟，但没有一粒送到嘴里的。陈老师见状站起身来，顺手拿起我的盘子，分分钟将米饭吃干净。</br><br></br><br>一伙人走出餐厅，我也感到控制我的那个东西已经离开了，那东西很可能在二琳和钟博身上，此时他俩走在前面，而我故意将陈老师拉到后面走路，我便将刚才二人失踪的事情告知于他。可每当我要提及此事的时候，便会被控制住，根本说不出任何话语，但我还是努力的抗争，支支吾吾的将事情说了出来。</br><br></br><br>夜里回到宿舍，大家一起煮火锅吃，却将锅高高悬挂在天花板上，只有踩着两个凳子才可勉强够得到食物，吃累了我便到一边和强哥讨论热图的画法，除了heatmap包之外竟然还有另外一个包可以做热图。我拿起电脑下载了一部英文的R语言看了起来。</br><br></br><br>大家走后我便洗洗睡了，梦见一老太太拿来一坨纸，并非冥币，但却让我拿回去烧掉。我顿时感到大为不妙，这绝非祥兆，怕是有灾！这时候意识又开始模糊，身体失去了自由，竟然又被控制住了。我努力的挣扎着，许久才感到身体轻松了些，我从床边摸到一件衣服，发现并不是我的，借助手机的光线向对面看去，床上竟然堆满了铺盖。我惊出一身冷汗，睡前那张床是干干净净的，这被子是从哪里来的？我跳下床走到对面，发现床上的被子缩成一团。我把被子掀开，里面竟有一人，我连忙道歉，脑子里却充满了疑问，这人从哪进来的，宿舍的门被我锁了，从外面是进不来的！我又回到了自己的床上偷偷地看着对面的男生，只见他邪恶的笑着对我说他就是我。果然那人长的和我一样，我不清楚这究竟是怎么一回事，也没有时间去搞清楚。因为我再次被控制住了。床头不知何时堆满了各种物品，纷纷地向地上落下，我手忙脚乱的却也是无可奈何。而我身体也失去了自由，感到被蚊帐包裹住了怎么也挣脱不出来。我的双眼变的沉重起来，根本睁不开。此时头的方向出现了一道光，外面有女人的声音。我挣扎着想扭头看向那道光，一来我脖子僵硬，二来我眼睛根本睁不开。我用手去扒开两眼皮，却发现眼皮如同铁皮一般硬，我的双眼只睁开一条细缝，根本无法看清楚那道光究竟是什么。我艰难的拿起床头的手电筒，借着最后一点微弱的光看向四周，对面的男生已经不在了，而床上也空空如也，似乎刚才只是我的错觉。</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逃亡</title>
      <link href="/post/4ccc.html"/>
      <url>/post/4ccc.html</url>
      
        <content type="html"><![CDATA[<p>村委会前的空地上挤满了人，大家交头接耳互相讨论着什么。我向人群中走去，看到面前竟然是一个巨坑，像是地面塌陷下去所致，人们围在巨坑的边缘猜测着巨坑形成的原因。<br>    <span id="more"></span></p><p>好奇心驱使我围着巨坑转起了圈，向坑中看去，里面一片黑暗，深不见底。我顺手捡起一块石头向坑中丢去，石头瞬间消失在黑暗中，并未听到落地的敲击声，莫非这个洞没有底，是个大窟窿？我继续围着巨坑转悠着，突然脚下踩到了一个东西，我抬起脚，蹲下身来仔细看去，却见泥土之中埋着一块手机，刚才的一脚并未将其踩碎。还没等我仔细端详一番，手机便响起了铃声，有人打过电话来了，我想应该是失主在寻找手机，便接通了电话。电话那边传来了一个男人的声音，说这手机是他刚才不小心丢掉的，约好了地点让我还给他。</br><br>按照约定，我来到了对方所说的地点，果然有一个男人站在那里，看其相貌并非村里的人。我走上前去询问了一番，便将手机交还于他，谁料想他非但没有表示感谢，还一脚将我踢翻在地。只见他掏出一把长刀，目露凶光的向我走来，我心想不妙，此人绝非善类，看这情况怕是要找我麻烦。刚才他那一脚正好踢在我胸口，疼得我在地上不停地翻滚，我艰难的爬了起来，掏出随身携带的水果刀想与其对峙。男人嘴角露出一丝奸邪的微笑，双脚蹬地，向我飞来，我伸出右手想要用刀子捅他，怎奈他反应比我快，刀子又比我的长，我腹部硬生生的挨了他一刀。他刺中我右腹一刀并未停下，而是连续的又刺了几刀，我顿时觉得腹部暖暖的，鲜血不断的往外涌，口中也吐了不少血。此时我躺在地上，已经完全没有力气反抗，心想这次怕是要去见阎王了，只是死的不明不白，实在是不甘心，不知面前的男人是神经病还是有意的报复社会？唯一可以肯定的是我是个倒霉鬼！</br><br>男人拖着我的脚走向巨坑旁边，此时我看不到一个村民，似乎是在一秒钟内大家全部消失了一般。男人走到坑边，抱起我将我丢进巨坑之中，我在黑暗中坠落，只感到巨坑中吹着一股彻骨冷风，由于失血过多，我的意识渐渐地模糊起来，最终晕死过去。</br><br>我缓缓地睁开眼，发现自己躺在一个小屋子里的地上，这个小屋子有些古朴，门和窗都是木质的，窗格上都是纸糊的，面前是一座炕，炕沿上坐着那个男人。他把我弄到这里来究竟想做什么，为什么我挨了他几刀却没有死？我死死地盯着他，生怕他再来伤害我。我仔细地端详着他，此人三十多岁的模样，长相绝非奸邪之人，却不想他竟然如此心狠手辣，真的是人不可貌相。男人坐在炕沿上一动不动，似乎是睡着了。我悄悄的向男人爬去，手中紧紧地握着水果刀，等我爬到他身边仍未见他有任何反应。想起他刚刚那样子对我，二话不说我拿起刀子便向他心脏刺去，手起刀落，男人仍旧没有任何反应，我伸手摸了摸他的脸，竟然是凉的，看来已经死去多时了。顿时，我额头渗出了豆子大的冷汗，这个地方太邪门了，屋子里阴森森的。我双腿发软，踉跄着走出了屋子。</br><br>此时已经将近傍晚，天空微亮却看不到太阳，我伸手摸向自己的腹部，却发现伤口已经没有了，只是身体还有些沉重，如同大病初愈，虚弱而没有力气。我拖着沉重的步伐走出了屋子，面前的景象已经不再是我所熟悉的村子了，四周一片死寂，仿佛墓地一般，到处充斥着阴暗的色彩。我继续前行，走到了一口井前，井中的水面上结了薄薄的一层冰，冰层下面密密麻麻的不知道是什么东西。我捡起一块石头向井中扔去，冰层一下子便被打破了，下面的东西飘到了水面之上。我仔细看去，头发瞬间竖了起来，那些东西竟然是冥币，填满了整口井。冥币在不断地增多，如同沸腾的水一样，从井口中冒了出来。顾不得多想，我撒腿便跑，这里的一切都那么诡异，我要逃离这个村子。</br><br>跑了许久，发现面前有一棵大树，看树干有不少的年头了，而且没有落叶。曾经听老人们说过，树活得久了会成精，砍伐的时候会流血，搞不好这一棵已经成精了。地上有一个小东西在爬动，我蹲下来仔细看去，竟然是一只知了猴。现在正值冬季，怎么会有知了猴爬出来呢？而且这一只的体型较之前看到的大很多，通体鲜红。突然，地面上出现很多小洞，源源不断的爬出许多知了猴，瞬间地面变得鲜红一片，知了猴们如潮水般向我涌来。我掏出水果刀狠狠地戳了一下树干，一股粘稠的液体顺着伤口流了出来。我闻了一下，那是血液的味道，果然是一棵成了精的树。眼前的知了猴定然是吸食树根的血液成长的，都说知了猴在土中生长六年才会爬到地面上变为知了，那么这些知了猴吸食了六年的血液，应该也已经成精了，目前的状况怕是对我很不利，嗜血的知了猴有可能把我当做食物吸食掉。</br><br>我踮起脚尖轻轻地向后退去，这些知了猴应该还没有发现我，真的是万幸。只见它们成群结队的向树上爬去，不一会儿的功夫，整棵树已经布满了知了猴，甚至连树叶和树干都看不到了，整棵树变成血红色。</br><br>我惊慌失措的转身跑去，试图远离这棵诡异的树。可此时的我如同站在跑步机上一样，无论我怎么努力，仍然是站在原地。那棵树似乎有无限大的引力深深地吸引着我，让我无法逃离。那棵树的形状如同仙人指路一般，将我引向树的怀抱。树上的知了猴已经发现了我，潮水般的向我涌来。我依旧无法逃离树的引力，生死有命富贵在天，既然逃离不了，那就听天由命吧，死了也没什么不好，可以不用再想那么多，就此解脱，或许这是老天对我的垂怜，收我去天堂。只是被知了猴咬死，实在是死的不怎么光彩，估计是死无全尸。虽说肉体只是一副臭皮囊，但那也是父母赏赐之物，被糟蹋了有些对不住二老。可就算是此时我竭尽全力的挣扎，却也还是逃脱不了这棵树的束缚。哪怕心中有一万个不愿意，又能奈何？</br><br>我闭上双眼，长啸一声，做好离去的准备，虽不能死的重于泰山，也不要死的窝囊。许久，我睁开眼睛，发现自己竟然毫发无损。只见那些知了猴在地上蠕动着，渐渐地都变成了知了。果然是成了精，一般的知了猴是晚上钻出地面，爬到树上，早晨才会变成知了。这些吸饱鲜血的知了猴已经等不到天亮，跃跃欲试的想要飞翔，在傍晚已经脱壳。谁料想，鸟儿也是勤快，在树的上空盘旋着，找准自己的目标，美美的饱餐了一顿。这些鸟儿是我的救星，但是它们也算了饮了血，已不再是普通的鸟儿，怕是它们也会中了邪而嗜血。大树已被知了猴吸干了精血，失去了引力，我重获自由。大自然真的是很奇妙，一物降一物，而我此刻是那受益者，不知道该感谢知了猴，还是该感谢鸟儿。知了猴使我摆脱了树的牵引，而鸟儿将我从知了猴的威胁中拯救出来。我来不及言谢，匆匆忙忙的向村子外跑去。</br><br>前方看起来很熟悉，竟然是村委会的大院，记得我就是从院子里的坑掉进洞里才来到这个诡异的村子里的。现在又来到了这个洞的面前，难道我已经回到了自己的村子里？这怎么可能呢？回头向身后望去，那棵树还在那里，这还是那个诡异的村子，只是这村委会真的很像，那么眼前的这个洞一定是连通现实的入口，只要我跳下去应该就可以回到现实了。我走上前向下看去，这个洞还是那么深邃，漆黑的一片，让我心中有些胆怯。看看面前，再望向身后，狠了狠心，跳了下去。</br><br>我在空中不断地坠落，先是漆黑一片，慢慢地开始有了光亮， 我发现自己经过的地方是那么的眼熟，那棵树也擦肩而过，随后是那口井，最终我坠落到那个小屋子里。那个死去的男人依旧还在那里，我不明白这究竟是怎么一回事？为何我从那个洞中跳下没有回到现实，而是又落在这个小屋子里，面前的景象和先前落下时一模一样。那个洞如同镜子一般，而这个村子存在于镜面的两边，我从镜子中穿越，最终还是落在这个村子中。就是这面镜子阻挡了我返回现实中的路，要么我寻找其他的出口，要么我打破这面镜子，这两者怕是都没有那么容易。或许这个洞是那个真实洞的映射，这个洞是一面镜子，而真实的洞必定存在于村子的某个地方。有可能是那口井，那个屋子，也可能是其他的位置。</br><br>夜，如此的静谧，月晕如同清水般洒在大地。宽阔的马路延伸到远方不知尽头在哪里，路边的树彼此相依，诉说着甜蜜的往事，勾勒着美好的未来。而我，一个人走在这寂寥的路上，体会不到别人所能体会到的幸福，感受着别人所不能感受到的痛苦。我与未来之间相隔一座山，看不到山的那头是什么，这座山需要时间去翻越，而时间是个魔咒，它总喜欢偷偷的溜走，把我们远远地甩在身后。</br><br>我不知所措的徘徊在这个小村庄中，这里是一个圈，入口即是出口，出口便是入口。万事万物都处在动态变化之中，此刻是入口，下一刻便是出口，而时间往往是很难把握的东西。时间的漂移加上空间的转换，你永远不知道此时此刻的你未来会出现在何时何地，也不知道下一刻出口会在哪里。运气好的话可以走出去，运气不好的话便会困死在这里。</br><br>这个诡异的村庄阴气森森，神经紧张的我快要崩溃。我该到哪里寻找出口？我是活在现实里，还是活在噩梦里？这么大的村子里死气沉沉，只有我一个人，我是一个被世界遗弃的孤儿，迷失在世界里，也迷失在自己的心中。迷失了方向，迷失了一切。我漫无目的的走着，心想或许运气好可以走的出去，或许永远的被困在这里。不管怎样，也不能在原地等死，死并不可怕，可怕的是失去希望，可怕的是孤独的呆在原地。就这样走着，哪怕是累死了也总比死在原地强。</br><br>为何我会如此的沮丧，又为何如此的伤感？是什么改变了我，是时间的雕刻还是风雪的打磨？白了黑发，填了皱纹，至今却一事无成，却被困在这个死气沉沉的村子里。曾经幻想着在地狱中厮杀，也不枉在世间疯狂一遭，谁料想来到这个没有任何生气的村子里，连个鬼影子都没有。这是一个孤独的世界，没有人之间的争名夺利，勾心斗角，也没有妖魔鬼怪前来索命。人是社会性的动物，最怕孤独，而我此刻便坠入了这座孤独之城，不知道我做错了什么，老天要如此的惩罚我。</br><br>或许我不该跳入那个坑，而应该爬上那棵树顶，看一下远方的风景，树的顶端说不定是出口呢。还有那口井，可能是联通外界的通道，而刚才井中冒出的冥币，应该是人间烧过来的吧。想到此，我冒了一身冷汗，难不成这里是阴间？！</br><br>我仔细的回忆着到这里来的每一个细节，没有奈何桥，没有三生石，更不见彼岸花。这里根本不像传说中的阴间，整个村子不见一个鬼影子，可这里也绝非阳间，这到底是哪里？！树上不结果，井里不出水，寨子里无人。我到此处见到的活物只有那嗜血的知了猴和救我的不知名的鸟儿，而它们也是在瞬间消失了。这个村子似乎会消化掉一切活物，此时此刻，我有些怀疑自己是否还活着。记得之前腹部被捅了几刀，而现在却看不到任何伤口，难不成我已经死掉了？现在的我是一个游魂？可我能够感觉到自己的体重，地球的引力依旧还在，我还是不会飞。或许我还活着，而这个村子有种魔力使我的伤口愈合，或者在这里时间可以倒流，让我回到了被刺杀之前。</br><br>可这些还是不能解释这是哪里。我来到村口，走到坑边，望向黑暗之中，刚才那一跳我回到了第一次坠落的屋子里，我决定再试一次，看看是否还会落到那个地方。前两次坠落的时候由于惊恐我是闭着眼睛的，而这一次我决定睁着眼睛看看能有什么发现。</br><br>不再犹豫，我纵身一跃跳进深坑之中。开始的时候，周围一片黑暗，逐渐的开始有了光亮，本以为要落地了，不想自己依然在坠落，后来又进入到一片黑暗之中，最后我被一股力量冲出了地面。回头一看，自己是从井中冒出来的。我回想着坠落的过程中曾经出现的光亮，那里似乎是现实世界，只不过我没有停下来，而是穿过了它。如此说来，那个深坑的确是一个通道，只是为何每次的落地点不同呢？而且明明经过了现实世界却又坠落回这个诡异的村庄，实在是想不明白。</br><br>我坐在井边，回想着所发生的一切，这应该是一个空间的问题，空间的折叠！阻挡我的东西如同一张纸，这张纸在没有折叠的情况下，将空间一分为二，只要我从洞中跳下去就可以到达纸的另一面，也就是从一个空间穿梭到另一个空间，这就是我从现实世界到达这个村庄的过程。而后来跳了两次都回到了村庄，应该是纸发生了折叠，形成一个V字形，纸的背面变成了正面，我从坑中跳下，是离开了村庄，经过了现实世界接着又穿破了纸回到了纸的同一面，也就是又回到了这个村庄。至于为何两次的落地点不同也可以解释的通，那就是纸的折痕发生了移动，空间发生了位移。既然如此，要回到现实世界只能等待纸重新变成平面，或者折叠成Z字形，这样我就可以穿透纸落在纸的另一面。也可以等待纸发生扭曲，这样子我不需要穿越纸就可以达到它的另一面，但是扭曲不如折叠来的简单，因为我不知道它是如何扭曲的，便不晓得该走哪条路线。更头疼的是我根本不知道这张隐形的纸何时会发生折叠或者扭曲。难不成我要24x7一直跳去深坑中？不被吓死怕也是要被累死了。</br><br>跳还是要跳的，伟大的科学家爱迪生当初试用了6000多种材料，进行了7000多次试验才发现了真正可以实用的灯丝，那么我还有什么理由不去尝试呢，毕竟爱迪生是为人类造福，而我是为己谋生，人不为己天诛地灭。于是我不断地在村委会院子里的坑中跳来跳去，终究是无法逃脱村庄的束缚，而体力却耗损殆尽。</br><br>村子里空空如也，虽有民房百间，却无一粒粮食，田间也无庄稼，甚至就连杂草也毫无生机，一片枯黄，村口那棵唯一有一抹绿意的大树，也被知了猴吸食殆尽，知了猴化作知了被大鸟吃掉，它们刚要展翅飞翔便已殒命，应了那句羽化成仙的话语，成仙便是死亡。大鸟已不知所踪，或许它们飞向了蟾宫，与玉兔作伴，与嫦娥共舞。总之，整个村庄只剩我一个活物。</br><br>这个鬼地方，我一刻也不想多呆，稍微恢复了一些体力之后，我便开始了新一轮的跳坑之旅，只是这次不再跳大院中的那个坑，而是跳井，爬树，翻墙，一切有可能是出口的地方我都尝试过一遍，然而，我依旧无法逃脱村庄的束缚。</br><br>我累了，无论是肉体还是精神都很疲惫，那就闭上眼睡去。简单的睡眠，简单的没有梦境，不知过了多久，一抹光亮照在眼前。我眯着眼睛看去，一轮红日挂在天边，不是朝阳，没有朝气，而是残阳如血，死气沉沉。这番景象让我想起了王勃《滕王阁序》中所写“落霞与孤鹜齐飞，秋水共长天一色”，然而这里只有落霞，没有鸟，更没有水。此时的我没有诗人的雅兴，残阳、枯树、断肠人本该产生一首好诗词才对，然而绝望的人无心吟诗作对。</br><br>绝望并非来自于一时的挫折，而是每天都在重复的努力完全得不到回报。日升月落，日落月升，周而复始，这里只有两个时间，那边是傍晚与黑夜，你永远看不到朝阳与当空烈日，也看不到村庄有任何的变化。日复一日，我不再尝试着逃离这里，因为根本无法逃离，我已经绝望了，不知经历了多少日夜，我不吃不喝却感觉不到饿与渴，只是很疲惫，绝大部分是精神上的疲惫。</br><br>人生第一次感到活着没意思，孤独是那么的可怕，许久未讲话，我都不知道该如何开口了，罢了，罢了，随它去吧。我掏出水果刀，扎向自己的心脏。</br><br>一阵剧烈的疼痛感从腹部传来，此时的我躺在巨坑边缘，腹部插着一把刀，流着血，面前站着的是那个杀我的男人。我终于走出了村庄，回到了现实世界，然而我就要死了。</br><br>“是你放弃了我赐予你的机会！”，男人开口说道。</br><br>“什么机会？”我艰难的从嘴里挤出一句话。</br><br>“永生！”</br><br>“永生？”</br><br>“对，所有人都渴望的永生，而你，放弃了”，男人有些惋惜地说道。</br><br>“可是你所谓的永生我并不喜欢，那里死气沉沉，除了我没有任何生命，也没有生机。没有鸟语花香，没有狂风暴雨，没有菜米油盐酱醋茶，没有女人的嬉笑和孩子的打闹，没有成功的喜悦与失败的难过，甚至就连绝望的情绪都会被无尽的时间所吞噬掉。总之，不管是美好的，还是不好的东西，那里统统都没有，那里拥有的只有死寂与孤独，这边是你说的永生？”</br><br>男人用深邃的眼神看着我，悠悠的说道：“真正的永生便是如此，所有的活物都将死去，所有的情绪也尽皆化为孤独，而你是这个世界上唯一还存活的生命，唯一便意味着孤独，所以陪伴你生命而存在的就只有孤独。你的生命不再需要靠食物与水而维持，你也不会生病，因为就连微生物也殒没在通往永生的过程之中，你是这个世界的主宰，而你本身却被永生而主宰。你获得了永生，任何事物都无法杀死你，除了你自己，而你选择了放弃永生，那么你终将死去，而且是马上。”</br><br>我大笑几声，抽搐的说到：“如果永生需要我付出一生的孤独作为代价，那我宁愿死去，人总是需要或在人群之中才能称之为人，否则活的连条狗还不如，那活着还有什么意思。当一个人所有的情绪都被孤独替代之后，他的生活是单调的，或者说他是一个活死人，行尸走肉而已。我在村庄中呆了几个日夜，连最终的绝望也已经丢弃了，生与死已经没有区别，或者说不如死去。如果说放弃永生我便可以逃离村庄，哪怕是出来后马上要死，我也不后悔，事实上我真的就要死去，那便去死吧。”</br><br>我不断地咳着血，意识渐渐模糊起来，感到自己越来越轻，飘了起来，我看到自己的灵魂脱离躯体而去，这便是自由，摆脱了躯体的束缚而获得的彻底的自由。这一刻我才明白，自由比永生更加可贵，生命不在于长短，自由的生命才会精彩，或许看透了生死的人才能成为得道者。</br><br>我俯视大地，看向那个男人，他面露苦色，微微摇头，巨坑中卷起一股气流，将他吞噬。我放弃了永生，而他终究会被永生所困，我还可以同情他，然而他唯一的情绪便只有孤独，直到找到另一个人来替代他，否则他就是想死也难……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>影子</title>
      <link href="/post/1930.html"/>
      <url>/post/1930.html</url>
      
        <content type="html"><![CDATA[<p>吃完午饭后，我拖着疲惫的身躯回到宿舍。最近这段时间赶着提交数据，压力颇大，还好大部分都忙的差不多了，奖励自己一个午觉。</br><br>    回到寝室一头栽在床上，不久便进入了梦乡。梦中一只老猫跑到了我的床上躺在我身边，这是一只黑猫，浑身的毛黑的发亮。我抚摸着它，想起了小时候家里也曾养猫，后来吃了被毒死的老鼠死掉了。<br>    <span id="more"></span></p><p>黑猫躺在我的头旁，尾巴搭在我脖子上。它的毛是那么的柔软，摸起来很舒服，我继续抱着它睡觉。正睡得酣畅，忽觉脖子一紧，我几乎无法呼吸。我睁开眼睛，却见黑猫那两只发黄的眼睛死死的盯着我，细长的瞳孔看起来是那么深邃，仿佛可以通到地狱。它的粗长的尾巴紧紧的缠住我的脖子，这时我才明白为何自己呼吸困难。</br><br>“你去死吧！”</br><br>一个声音从黑猫的嘴里发出，我大惊失色，这不是一只普通的猫，而是一只会说话的索命猫。我不知道自己得罪了哪路神仙，竟然会派一只黑猫来取我性命，或许这本身就是一只猫妖。</br><br>顾不得多想这只猫的来历，我伸出双手紧紧掐住黑猫的脖子，可它丝毫不受影响，缠住我脖子的尾巴还是那么强劲有力。我便伸手去拽猫尾巴。不知道这黑猫哪来那么大力气，尾巴犹如一条锁链缠的死死的。好不容易我在猫尾和我的脖子之间插入了一根手指，慢慢的两根、三根，最后终于把猫尾解开了。我大喊一声，抓起黑猫狠狠地朝墙上砸去。</br><br>一阵钻心的疼我从床上爬起来，看看自己的手竟然流血了。原来自己的拳头狠狠地砸在了墙上，而刚才只是一个梦，根本就没有什么黑猫。</br><br>看了看手机，已经睡了两个小时了。这一觉睡的相当疲惫，没有休息好反而感到更加劳累。简单的包扎了一下手，便离开了宿舍。还有很多数据要处理，必须赶到实验室。</br><br>午后的阳光虽不比正午那么强烈，却也晒的人有些烦躁，加上中午那个怪梦，心情无比的糟糕。十几分钟后我赶到了实验室，进门的一刹那我惊呆了。</br><br>我看到每个人的肩旁上都蹲坐着一只猫，各种颜色，品种的都有。所有的人都目光呆滞，不停地走来走去。看到眼前的场景，再联想到中午的那个梦，我冒了一身冷汗。我开始怀疑那个梦到底是真还是假了。</br><br>我揉了揉自己的眼睛，眼前还是同样的场景。难道自己还在睡梦中吗？否则哪里会来这么多猫，而且它们是怎么绕过门卫大爷爬到六楼的？今天可是坏大爷值班啊，甭说几只猫，就是一只蚊子或者苍蝇要进来都必须被盘问登记且要有认识的人下来认领方能上楼。我狠狠地掐了一下自己，顿时一股疼痛由神经末梢传入中枢系统。这难道真的是现实？</br><br>为什么每个人都面无表情，神情呆滞，难道都被这些猫迷惑了心智？这些猫都成精了？那它们的目的是什么呢？它们行动这么统一，看来之中有一只头猫或者它们受别的东西控制，总之肯定有一个指挥者，至于这个指挥者是猫是人还是别的东西都不得而知。</br><br>我环顾四周，并未见到梦中那只黑猫，它到底是我梦的产物还是真实存在的？突然一个师弟趔趔趄趄的向窗边走去，眼看着就要跳下去，它肩膀上的猫还在咿咿呀呀的叫着。我大喝一声冲上前要去拦住他，还没等我走到跟前，便被一个东西遮住了眼睛。我将那东西从脸上扯下来才发觉原来是那只黑猫。</br><br>黑猫紧紧地抱着我的胳膊，无论我如何努力，都无法甩掉它。无奈之下，我从腰间取下钥匙去扎它，谁知它疼痛之下竟然张嘴咬我胳膊，尖锐的牙齿深深地嵌入皮肉之中，鲜血顿时流了出来。我彻底的被激怒了，将钥匙狠狠地刺入它的眼睛，瞬间，它的眼球耷拉在眼眶上。黑猫跳了下去，离我远远的，它弓着背，身上的毛都立了起来，我知道这是要进攻的节奏。</br><br>这只猫诡异无比，我也不敢放松警惕，也将身体矮了下来，准备接招。黑猫后脚蹬地，身子一跃朝我飞将过来。我身子一侧，躲过了它这一击。可万万没想到黑猫如此灵活，还没见它落地，便在空中划了一道折线又扑将过来，我没有任何防备，竟然被它落在肩膀上。</br><br>我心中大叫不好，心想完了，实验室其他人的肩膀上都蹲了一只猫，这些猫都能迷人心智，这黑猫落在我肩膀上怕是我也会乱了心智。没等我多想，黑猫的尾巴便缠住了我的脖子，两只前爪深深地嵌入我的头皮之中，我顿觉头皮发麻，还隐隐作痛。我双手去扯猫尾，费好大力气才将其从脖子上取下，顾不得卫生不卫生了，我张嘴便咬了下去。黑猫哇的一声从我肩膀跳下，可它的尾巴还被我紧紧地拽住，于是它便倒挂在空中。我抡起猫尾在空中转着，感觉力道足够大了便一松手，谁知黑猫正好被我甩出窗外。</br><br>本想这黑猫从六楼摔下去死定了，可谁知它竟然平稳的落地，然后它叫了几声，其他的猫也都从窗户跳了下去，这些猫会飞。不一会儿，所有的猫都消失在草丛中。猫离开肩膀之后，所有的人都瘫软在地，并不知道刚刚发生了什么。而刚才要跳楼那个师弟此时脸色煞白，他的一只脚还耷拉在窗外。</br><br></br><br>    我一直在想，自杀的人到底为何有那么大的勇气，不管是跳楼、割腕还是上吊等，在执行的那一瞬间需要莫大的勇气，常人是难以做到的。难道那些自杀的人是被一些东西迷惑了心智？亦或是有小鬼来索命，这一切都是猜想，总之自杀没有那么简单。</br><br>    关于猫妖这件事还是别让大家知道为好，以免引起恐慌。只是不知道此事还会不会再重演，这次逃过一劫，不知道下次会不会出人命。</br><br>    想到人命，我脑袋中忽然闪过一个画面，前几天有个学生从酒店楼上摔下来死了，据说是醉酒不小心掉下来的。而今天那位师弟差点就从六楼跳下去，莫不是之前那位是被这些猫谋杀的？我惊出一身冷汗，心想这些猫平时都很温顺，怎么会突然间结队出现，甚至玩杀人游戏呢？这背后究竟隐藏着什么秘密？</br><br>    下午一切平静，并未再见那些猫来惹事，应该是那只黑猫受伤很严重，躲在哪里休养吧。晚上我早早的回到了宿舍，这一天闹腾的够累，做什么也不如躺在床上舒服。迷迷糊糊的我睡了过去，半夜醒来要上厕所，坐在床上向地上看了一眼，却发现门边矗立着一个黑乎乎的人影，站在原地一动不动。我毛骨悚然，头发都被吓得立了起来，我没敢下床，躺下来把头埋在被子中。炎热的夏日让人烦躁，尤其是闷在被子中，十分的燥热，不一会儿我便满头大汗，感觉到被子都要被汗水浸透了。本来就难以入睡，再加上地上站着的那个影子，怎么能让我安心入睡呢？</br><br>    人在遇到危险时的第一个念头就是逃避，如同鸵鸟在遇到危险时会把头埋进沙子里一般，可即便如此，危险依旧存在，我们所做的一切只不过是自欺欺人罢了，该面对的终究是要面对，逃避解决不了问题，最重要的是不能安心。就算我把头埋在被子当中，地上的那个东西依然存在，我永远没有安全感，更不能安然入睡。如此提心吊胆的趴着，倒不如下去看个究竟，不管那是个什么东西，总要看明白才能知道下一步该做什么。</br><br>    我摸起手机，悄悄地爬下床去，那影子依旧纹丝不动，像是一只木偶一样矗立在地上。我没有穿鞋，猫着腰朝那影子走去，走到跟前我才发现，那影子是背对着我，直挺挺的靠在门上。灯的开关就在影子身后，我想摸过去把灯打开，却又怕惊动了它，转念一想，不管你是什么东西，老子先一脚把你踹翻在地。心里想着，脚便踹了过去。在我脚踹出去的一刹那，一股剧烈的疼痛和酸麻感从脚底传至大腿。这一脚竟然踹空了，眼前哪里还有那影子？这一脚径直踹在门上，发出一声巨响，舍友仍旧睡得酣畅，并未被我吵醒。房间内一下子安静了下来，静的没有任何声音，哪怕是舍友的呼吸声也消失不见了。这是一种离奇的静，静的那么诡异，是不是自己耳朵聋了，为什么会听不到一丝声音？人类害怕噪音却更加畏惧安静，我们在极度安静的环境中会感觉到焦虑与烦躁甚至会感到惶恐不安。</br><br>    那个影子为何会瞬间消失？它去哪了？我出脚那么快却没有踢到它，从感知到做出反应这么短的时间人力是无法做到的，莫不是我见鬼了？深夜的寝室多出一个影子或许只能用见鬼做解释了吧。影子不见了，我转身要去开灯，可就在我眼睛看向身后的一刹那，我整个人都僵直了。那个影子不知道什么时候跑到了我的身后。</br><br>    影子依旧是背对着我，就站在我的面前，这么短的距离我无法伸展腿脚去踹它，而且刚才那一脚踹在门上，腿现在还麻着，心想不能再踹了，弄不好一脚踹空再闪着腰。我伸开手搭在那影子肩膀上用力往回掰，想把它掰过来看看究竟是个什么鬼东西。可我胳膊刚一发力，那个影子便闪到我身后。这货会凌波微步啊，我急忙转过身，怕它从背后袭击我，只见那影子径直穿过门走出了寝室。等我打开门来到走廊上，四下张望却不见了影子的踪影。</br><br>    我转身关上门，回到床上，想着刚才的事情一夜没睡，太吓人了，我不敢再朝影子站立的方向看去，心中一直觉得它还站在那里。刚才的惊吓让我有几分尿意，这会儿再也不敢下地，只期待天赶快亮起来。只要到了白天我就安全了。</br><br>    不知不觉睡了过去，一觉醒来天已经大亮，昨夜的事情我并没有和室友谈起，说了他们也不会相信，只希望那个影子已经永远的消失掉，不会再回来了。接下来的几夜，我一直盯着门的方向看，果真没再发现那个影子的存在，心想那晚是不是自己神经质，看错了，也许根本就不曾出现过什么影子，只是自己的幻觉而已。既然影子未曾再出现过，这件事情也就慢慢的淡忘了。</br><br>    这一日，如往常一样来到实验室，却见几人围在一起，面色凝重的讨论着什么。我忍不住好奇便上前询问，一问之下才知道又死了一个学生。据说是某学院的一个男生，失踪了一天，后来在南湖中发现了尸体。上个周不是刚死了一个，还没过几天便又发生这种事情，看来学校里不太平啊。上一个从楼上摔下来勉强解释的通，说是醉酒引起的，而在我看来或许是那些猫迷惑了人的心智，把他害死的。但自从把那些猫从实验室赶走之后并没有再见过它们的踪迹，难不成这次的事情又是它们干的？一个男生淹死在湖中，如果说是失足掉落，这解释有点牵强。这种事情我们永远都无法知道真相，不论是失足，还是谋杀，亦或是灵异事件，官方总希望知道这种事情的人越少越好。</br><br>    唯一让我不舒服的是这个男生死亡的日期正是我在寝室里看到影子的那天。现在想来那的确是个男生的影子，难不成那便是死者的影子？即便真的是他的影子，可他为何会出现在我们寝室，而且只是站在门前一动不动。没有无理由的行动，他既然来了定有他的理由或目的，或许他是想表达什么，也许他只是走错路了。我现在唯一能够确定的就是那个影子是真实存在的。我回到寝室，在影子站立过的地方仔细查看，却并未发现任何蛛丝马迹。这件事也只能到此为止了，只是可怜了这条生命，就这样不明不白的陨落了。</br><br>    接下来的几日我心中总是有些不安，每到夜晚总会不自觉的盯着门的方向看，总觉得那里还站着一个影子，可仔细看去却空无一物，是自己太过紧张的，那晚的情形的确吓人。每当夜里回寝室开门的时间，总是感到黑暗的门后藏着那个东西，而灯的开关便在门后，想要开灯便要克服内心的恐惧，这种情况也只能硬着头皮上，心中默念一切都不是真的，那都是自己吓唬自己。</br><br>    如此惶恐不安的过了几日，心情似乎平静了许多。再怎么深刻的事情也经不住时光的打磨，时光可以把一切尖锐的东西磨的圆滑无比，那些念念不忘的事情就在流淌的时光中被慢慢的淡忘。难得心情放松下来，总算可以睡个安稳觉了。接连几天的神经绷紧让我疲惫不堪，躺在床上再也无法抵挡困意，久别的两双眼皮此刻紧紧地拥抱在一起，以前从来没有见过它们这么亲密无间过。就这样我昏昏沉沉的睡了过去。</br><br>    睡梦中我来到一间破旧的屋子，屋子中央的炕上躺着一位生病的老妇人，看她憔悴的样子应该是病的很严重。我仔细端详着她，身着一套淡蓝色的中山装，面无血色的脸上刻满了皱纹，她侧躺在炕上没有一丝动静，只有微弱的呼吸声还能够证明她是一个活人。还没等我说话便见她弹坐了起来，血红的眼睛紧紧地盯住我，她伸出右手指着我喊到：“你去死吧！”</br><br>    我被她突然的举动吓了一跳，未等我反应过来是怎么回事，我便觉得腹部剧烈的疼痛，我倒在地上不停的翻滚着，那种疼如同拿着一根棍子将肠子绞在一起一般。只见她从炕上跳了下来来到我面前，双眼仍旧死死的盯着我，嘴里叽里咕噜的不知道在念叨着什么。我不明白为何她要害我，我之前并未见过她，我也不明白为何自己会出现在这个屋子里。我大喊救命，可我的喉咙如同被人掐住了一样，竟然发不出任何的声音。无助的我只能在心中默念阿弥陀佛，往日里从没见自己这么虔诚的求助于佛，此刻的自己真正的是在临时抱佛脚。可不管我念的多么用力，多么认真，眼前的妇人没有一点退却的意思。我的意识渐渐的模糊，觉得身体已经不再属于自己。我迷迷糊糊的站了起来，似乎已经感觉不到疼痛，老妇人也消失不见了，面前出现了一条沟，对面有人在喊我的名字。我看不清那人的模样，似乎是个女孩儿，她站在那里朝我挥手，示意让我过去。我抬起脚用力跳了出去，想跳到沟的对面，在我双脚离开地面的时候，那条沟在不断的变宽变深，沟的下面是万丈深渊。</br><br>    不知所措的我大喊救命，心想这下肯定死定了，这么高的地方上下去恐怕直接变成肉泥了。此刻的我由于过度惊恐，思想几乎停滞了，但是地球引力却不会消失，我的身体在空中划过了一道美丽的抛物线开始向下坠落。这一场景好像武侠小说里描述的一般，一个屌丝由于某种原因跳崖自杀，可悬崖下要么有一条河，要么有一个茅草屋，总之掉下去的人想死死不了，最终会被美女或高人所救，然后一下子变得牛叉起来，屌丝就这样变大侠了，这堪称完美的一跳。而此时此刻的我是如此的苦逼，面前本来是一条小水沟，美女也不在沟底，而是在沟对面，谁料在我跳起的一瞬间小水沟变成了鸿沟，这掉下去怕是要把命给交代在沟底了。而眼前的美女不是来救命的，而是来勾魂的。</br><br>    我心中大骂你这妖女，不知道使用了什么幻术来迷惑我，如今我命陨于此，一会儿肯定会变成小鬼儿，到那时我飘上来找你算账！算一下时间，差不多在空中坠落了十分钟了，怎么还没有到达地面，难不成我已经跳出地球来到太空了？睁眼看去眼前一片漆黑，没有星星，更没有月亮。心中大惑不已，我起跳的时候明明是上午，这会儿天怎么就黑了呢？难不成我在空中坠落了一整天？什么悬崖这么牛叉，这么长的时间，哪怕是去地狱也够吧。想到此，我不禁打了一个冷颤，莫不是我已经死了？眼前的这片黑暗空间就是传说中的地狱？</br><br>    我瞪大眼睛朝四周看去，仍旧是一片漆黑，而此刻我已感觉不到坠落的速度了。难道已经着陆了？我用脚踩了踩下面，却未踩到任何东西，脚下没有任何支撑物，为何我能够停止下落呢？我百思不得其解，而四周的黑暗更让我没有头绪，难道我会飞？在这段坠落的时间我不知不觉练就了一身牛叉的轻功？我试着挥动胳膊，就像鸟儿挥动翅膀一样，却发现自己的胳膊已经动不了了 。我发觉不单单是胳膊动不了，我全身都无法动弹了。我极力挣扎着，试图摆脱掉无形的束缚。</br><br>    突然，我的眼前出现一道光，刺痛了我的双眼。长时间处在黑暗中，一下子不适应这么强的光线，我眯着眼睛向前方看去，发现在光线的尽头有一个影子慢慢的向我走来。这是一个女人的影子，高高的个子，婀娜的身姿，让我忘记了恐惧。我心跳加速的看着影子一步一步的向我走来，我想看一下她的容貌，心想自己也要因祸得福，抱得美人归了。可不曾想，那影子走到我面前五六米的地方时停住了。她就那样矗立在原地，她背对着光线，我看不清她的容颜和表情。只是见她站在原地，头歪向一边，整个人都在瑟瑟发抖。</br><br>    我顺着她眼睛注视的方向看去，黑暗中有一团黑暗的东西涌向了她，一开始我看不清那团东西是什么，只是觉得它的形状像变形虫一样可以随意变动。没过多久，这团东西便出现在光线下，竟然是那群猫！这些猫跑起来的气势犹如万马奔腾，它们边跑边叫，声音异常的刺耳，这是一群打了鸡血的猫！</br><br>    女人已经被这气势吓得瘫倒在地，那些猫把她围在中间，可谓是水泄不通。猫本来是一种可爱的动物，可是一下子出现这么多猫，而且个个面目狰狞，这便有些诡异异常。这群猫前几天出现在我们实验室中，迷惑了大家的心智，一个师弟差点因此殒命。此时此刻，我与这些猫一起出现在此地，这究竟是为什么，我想绝对不是巧合二字能解释的了的。难道刚刚出现在沟对面的那个女人便是这些猫幻化出来勾引我跳崖的？难道我已经摔死了？佛教以为人在刚去世的前几天是感觉不到自己已经死去了的，只有看到亲人们趴在自己面前哭喊才会明白是怎么回事。难道我真的已经死了？可我的意识是如此的清醒，那如果没有死的话，那我究竟处在什么地方，这周围的一切是那么的空旷，我完全感觉不到还有任何其他的存在。</br><br>    我看向女人的方向，心想她的处境应该和我一样，或许从她身上能够得到一些线索。女人依旧坐在地上，惊恐地望着那些把自己围起来的猫。只见黑暗中走来一个人影，是一个男人的影子，他的肩上蹲了一只猫，竟然是那只黑猫。所有的猫都朝着男人的方向看去，显得兴奋异常，似乎马上会得到主人的赏赐。男人一步步地走到猫群中间，来到女人的面前，他嗓子里发出咯咯的声音，十分诡异。女人惊恐的向后退去，可是那些猫把四周围的水泄不通，她根本无路可退。此时，那只黑猫突然从男人的肩上跳到了女人的身上，女人如触电般从地上直挺挺的站了起来。</br><br>    男人伸出胳膊紧紧地搂住女人，邪恶的笑着，女人根本无力挣扎，况且那只黑猫早已迷惑了她的心智。我在远处看的心急，努力挣扎着想冲过去帮忙，可我的身体根本无法动弹，我感觉到自己的四肢被什么东西紧紧地捆绑住了。我朝它们的方向大喊：住手！</br><br>    男人转过头看向我，依旧是邪恶的笑着，并没有理会我，他相信我不会对他造成任何威胁。或许过一会儿他便会过来处置我，而他选择让我看到他对女人所做的一些恐怕是有意的引起我的恐慌，这样他会有更多的快感。我不知道这个男人到底是什么来历，但从这些猫和他所做的事情来看，他绝对不是一个善茬。从目前的场面来看，他是这些猫的主人，不知道他会什么妖术，能够控制这些猫去害人。</br><br>    男人依旧猥亵着那个女人，看到眼前的场景却无能为力，这种感觉无法用语言来表达。只恨自己不会些武功或者法术，如今人为刀俎，我为鱼肉，只能任人宰割了。女人慢慢的倒在了地上，停止了呼吸，男人满足的笑着。那些猫如同疯了一般涌向了女人的尸体，它们把女人撕烂，疯狂的品尝自己的美餐。这血腥的场面让我作呕，我从来没有见过这么凶残的猫，竟然吃人肉。不一会的功夫，女人只剩下一副白骨，地上的鲜血都被舔的干干净净，只留下空气中依旧飘荡着一股腥味。</br><br>    男人看了看我，嘴角微微上扬，然后挥了一下手，转身消失在黑暗中。那些猫也都随他而去，只留下我面前的一道白光。我的身体突然轻松下来，捆绑我身体的东西似乎消失了。我活动了一下四肢，果然我自由了，那男人并没有害我。难道他所做的一切都是为了折磨我，我敢断定，前两条命案肯定是他干的，而每一条命案发生之前我都会看到一些异常的东西，这都是命案发生的前兆。</br><br>    不论是主动的也好，还是被动的也好，从最近发生的事情来看，我可以预知死亡。虽然可以预知死亡，但却不能知道这种不幸到底会发生在谁身上，例如前两条命案的死者我都不认识。所以即便我能预测到有命案将会发生，但却无法去阻止它的发生，因为我根本不知道它会发生在谁身上。这种能力不能带给我兴奋，只能让我感到无比的无奈。我不知道为什么自己会突然拥有这种能力，那个男人和那些猫究竟是真实存在的还是地狱中的索命使者？而我现在连自己是梦是醒都不敢确定，面前的这个女人的死亡是预兆还是真实的？所有的一切让我焦头烂额，感觉自己脑袋都要炸掉了，我内心充满了压抑与郁闷，禁不住仰天长啸：“这是什么鬼地方？！”</br><br>     我所处的空间空旷无比，话刚喊出口声音便消失的无影无踪，我并未听到任何的回答，这里只剩下我一个人。我颇为恼怒，大喊一声：“醒来！”</br><br>  睁开眼天已大亮，我一身冷汗，果然又是一个噩梦。我擦了擦额头的汗珠，惊魂未定的瘫软在床上。这个梦如此的真实，莫不是学校里又要出人命了，而且死者会是一个女生。这种对死亡的预感是那么的强烈，恐怕有人是在劫难逃了。想到此我起床随便洗漱了一下急匆匆地奔向了实验室。实验室是获取新闻最好的地方，总是有人会散步各种小道消息，如果有命案发生的话，那么实验室里一定会有所消息。</br><br>    来到实验室中，见大家并未有什么异常的反应，于是我便问了一下几个同学校里是否有人出事。大家都用异样的眼神看着我，最近连出两条人命，而一大早我便问这种事情，大家觉的我是唯恐天下不乱。看来是我想多了，一个梦竟然那么认真，希望那只是一个梦，而不要有无辜的人牺牲来验证我的梦。</br><br>    这一天相安无事，我心中也放心了许多，总算安安稳稳的睡了一夜。次日，我精神饱满的来到了实验室。刚进实验室便被一个同学拉到一边，我见他神秘兮兮的样子颇为奇怪，心想一大早发什么神经啊。只见他面色凝重的说道：“你知不知道，校里出事了，人命！”</br><br>    听闻此言，我脑袋翁的一下大了，呆呆的站在那里。见我面色苍白，同学扯了我一下问到：“你脸色怎么这么难看，记得你昨天一大早就来问我们学校里有没有出事，这究是怎么回事？”</br><br>    我颤抖着问到：“什么时候出的事？”</br><br>    “昨天傍晚。”</br><br>    “是不是一个女生？”我激动地问道。</br><br>    “你怎么知道？”同学好奇的问我。</br><br>    我没有回答他，失魂落魄地走到自己的位子上坐下。那个梦还是应验了，女生是在我做梦的第二天死的，而我预知到了她的死亡。我的心情无比的复杂，不知道为什么会这样，每一次噩梦总会死人，这种梦我不想做，虽然人不是我杀的，但心里总有几分罪恶感。许久，我心情平静了些许。我找到了刚才那个同学，问清了事情的经过。据说女孩与男友在校园里散步，一个男人从背后击晕了女孩的男友，然后奸杀了女孩。</br><br>    我惊呆了，奸杀，这和我梦里的情景惊人的相似，梦中的女孩也是被那个影子奸杀的，而我就在当场却无能为力，就如同女孩的男友一般被人敲晕，不能帮助自己的女友逃过此劫。梦与现实简直一模一样，难道那个影子就是此案的凶手？可我并未看清那影子的容貌，更不知道他是谁。可我总觉得他的身影有些熟悉，但无论我怎么努力，就是想不起在哪见过他。我有把握他肯定认得我，否则他不会无缘由的出现，而且他并未伤害我。</br><br>    “你究竟是谁？”我自言自语道。</br><br>    “主人！”</br><br>    我的心咯噔一下，这声音不像从外界传来，而像是我自己喊出来的。为什么我会喊出“主人”二字？肯定是自己又胡思乱想了。最近连续发生的命案已经快让我崩溃，再这样下去怕是要进精神病院了。</br><br>    中午早早的吃过午饭便回寝室休息了，上午的事情让我感到忐忑，根本没有心思去搞实验。自己似乎坠入了一个魔咒之中，虽然我并未遭遇杀身之祸，但是看到梦中的命案一宗宗的都变为现实，自己却无力阻止，这种感觉无异于我是杀人凶手。可我如何才能摆脱这个魔咒呢？在人们普遍崇尚科学的时代里，这种离奇的事情谁又会信呢，又有谁能够帮助我？很显然，我只能孤军奋战，若是我出去张扬的话，很可能被校方控制，说我制造谣言，扰乱民心。更严重的可能会把我打为邪教组织分子，那么我入党的事情指定泡汤。此事我必须要守口如瓶，至于如何化解这个魔咒，只能看因缘际会了。凡事都是因果呼应，虽然我不知道这种结果究竟是由什么原因导致的，但是这三条命案之间必然有一定的联系，只要我认真分析，终究会找到其中的规律。</br><br>    第一条命案我并未有什么预兆，只是后来出现的猫着实有些离奇，尤其猫群进实验室事件，让我怀疑那男生坠楼是受猫的蛊惑所致。第二条命案发生时，我曾在寝室中看到一个人影，起初我认为那是死者的影子，现在仔细想来那个影子与第三条命案中的影子十分相似，两者应该是同一个人。而第三条命案中同时出现了猫群和影子，而且那些猫听命于影子。假设第一条命案是猫做的，那么这三条命案的主导者都指向了影子。可这影子究竟是什么来历呢？为何我会觉的似曾相识，我百思不得其解，想着想着便睡了过去。</br><br>    梦中，我来到了一座楼里，楼道纵横交错，如同迷宫一般。楼道里充满了白茫茫的雾气，我摸索着在楼道里前行，突然在拐角处看到一个人影一晃而过。瞬间，我额头上渗出了豆大的汗珠，那影子又出现了，怕是又要发生悲剧了。顾不得多想，我急忙追了过去，想要看清楚他究竟是谁，问一问他为何总是在我面前害人，我有太多的疑惑想要他解释。可是在这雾蒙蒙的楼道里我根本看不清前方太远的距离，那影子速度十分快，我没有办法追上他。但是他似乎有意捉弄我，总是一会儿出现，一会儿消失，我就这样追赶着他在楼道里转圈，却从未追上他。我已经追的筋疲力竭，喘着粗气坐在了一个楼梯上。</br><br>    “拜我为师吧！”背后传来了一位中年妇女的声音。</br><br>    我回过头看向楼梯上方，只见那里站着一位尼姑，双手合十，目视着我。</br><br>    “你是谁？”我觉的此人莫名其妙，素未谋面却要收我为徒，而且还是一尼姑，怎么要收男徒弟，莫不是我拜师之后先送我去泰国“更名换性”？想到此我大为震惊，心中提高了戒备。</br><br>    “我是谁并不重要，重要的是我可解你心中疑惑。”尼姑淡定的说道。</br><br>    “我哪里有什么疑惑，我现在唯一的疑惑就是科研该怎么搞，如何才能顺利毕业！”我答道，心想江湖术士大多是骗人钱财，女骗子更是不可不防。</br><br>    “你心中的疑惑是那三条人命吧，若要答案便于三日后到光谷广场找我。”说罢，她便消失在了迷雾之中。</br><br>    不久迷雾退去了，楼道也消失不见了，我的身体突然向下坠落，我大叫一声便从梦中惊醒。回想着刚才梦中的影子与尼姑，每次影子出现后都会有命案发生，难道这次要死一位尼姑？但细想梦中的情节，这位尼姑似乎知道命案发生的缘由，必定是高人，不至于会被影子迫害。或许是她的出现赶走了影子。但是这个梦到底可不可信，这位尼姑会不会是我过于渴望得到答案而产生于内心的一个寄托，也就是说她很可能是我自己幻想出来的。我双手抱着头，狠狠地揪着自己的头发，想让自己清醒一些。</br><br>    我跳下床，到洗手间洗了把脸，我抬头看向镜子中的自己，才发现自己憔悴了很多。但我发现的并不是单单的憔悴那么简单，我突然觉得自己的身形和那个影子是那么的相似。我的脸色一下子变得苍白，我后退了几步，转过身子背对着镜子，再扭头看去，自己的背影真的很像那个影子。我脑袋翁的一下，感觉到呼吸困难，四肢乏力，随后便晕了过去。</br><br>    舍友回来发现了我，将我带到校医院，医生说校医院条件简陋，便推荐我去广州军区总医院。舍友打的带我去了医院，做了心脏与脑部检查，所幸并未发现异常。在病床上打点滴时我回想着刚才发生的一切，为什么那个影子与我的身影如此相似，这绝非偶然，只是我该如何才能搞清楚这件事情。</br><br>    舍友见我眉头紧锁，以为我不舒服便过来询问。我勉强挤出一个微笑，问为何自己会突然晕倒。他告诉我医生说是由于过度劳累引起的晕厥，回去好好休息一下就没事了。想想也是，近来被这几件命案闹腾的心力憔悴，甚至都不敢睡觉，生怕又会梦见有人死去。我又想到了梦中的那位尼姑，是真是假，三日后去看一下便知分晓。若真有此人，或许我的谜题便可解开，若无此人，再想他法。</br><br>    三日之期一过，一大早我就出发去往光谷广场。校门口乘坐公交车，华农的学生很有秩序，乘车时排一条长长的队伍。但是武汉的交通却不怎么通畅，一路堵车，本来一个小时的路程却走了两个小时。到达光谷已经是早上十点多，下车后匆忙的走向光谷广场。今天是周末，广场上人来人往，可谓是摩肩接踵。我的目光在人群中搜索着尼姑的身影，梦中尼姑的容貌已记不清，但是她的僧衣却极好分辨。我边走边搜寻着，心里却没底儿，梦中的事情本不可信，但是这几日的噩梦都应验了，所以这尼姑也很可能真的存在，只要有一丝希望我就不会放弃。我继续走着，目光注视着前方，不知谁在身后扯了我一下。回头一看，真是踏破铁鞋无觅处，得来全不费工夫，一位尼姑正笑眯眯的站在我的面前。</br><br>    我去！真的有尼姑啊！还未等我开口，就见她从包里拿出了一张印有佛的卡片递给我。我心里一阵感动，她这是送我护身符辟邪啊，正要夸她仗义之时，却见她伸出手看着我。我不解其意，用疑惑的眼神看着她。她微笑的说道：“捐点吧，我们会为你祈福的。”</br><br>    我这才明白过来，是遇到化缘的了。既然已经接了护身符，只好掏腰包了，无奈出门没取钱，钱包里只剩十块钱，便捐了五块。给完钱后我问她认不认识我，她说素未谋面。我心里开始犯嘀咕，她是真的不认识我呢，还是在耍我？这时不知从哪又来了两位尼姑，一问之下才知道她们三个是一起的。看来是我找错人了，于是便垂头丧气的往前走着，正盘算着是在光谷玩一下还是回学校，不料却撞到一人。抬头看去又是一尼姑，我侧身便想让过去，可是被她叫住了。</br><br>    “我的钱刚刚捐出去了，现在路费都没了，您还是找有钱的主吧。”我以为她和那三位是一伙的，心想三言两语把她给打发了。</br><br>    只见她神秘地说道：“还记得那个梦吗？”</br><br>我的心咯噔一下，难道眼前的这位便是梦中的尼姑，这下我有救了。</br><br>“您是否就是那位出现在我梦中的高人？”我凑到她的耳边轻声说道，生怕被周围的人听到了骂我是神经病。这种事情在常人看来的确难以理解，只能用神经病来解释。</br><br>    只见尼姑不慌不忙地答道：“正是贫尼！”</br><br>    我仔细打量了她一番，那日梦里光线太过黑暗，我并未看清她的容貌。今日一见却也有几分出家人的感觉，只是她称呼自己为贫尼却也不太恰当，看她体态可以推算她日子过得怎么也比我富裕。我刚刚解决的是温饱问题，而她肯定过着小康的日子。</br><br>  心中乱七八糟的想了一通方才想起今日来的目的，于是便开口问道：“这位师傅，可否借一步说话？”</br><br>尼姑环顾了一下四周，只见广场上人们摩肩接踵，她看着我问道：“你看，这里人山人海，我想借一步与借两步的结果都是一样的，不如我们就在这里谈吧。”</br><br>我看着不时从身边走过的人们，心想在这里谈这么离奇的事情着实不好，我受不了人们鄙夷的眼神，不如找个馆子坐下谈岂不更好。可是这周围的馆子似乎没有单间，坐在大厅里谈和站在街上谈没有什么区别。而且此时身上并无现金，也懒得去找银行，到底该去哪里比较好呢？心中正盘算着，眼睛便定格到一处招牌。</br><br>“师傅远道而来，舟车劳顿，不如我带您找个地方，我们坐下聊可好？”</br><br>大概师傅站的有些累了，听了我的话便点了点头。只见她喊了一声，不远处的三位尼姑都过来了。原来她们还真的是一伙的！我有些哭笑不得，刚才还被她们骗去几块钱。不过转念一想这也是件好事，她们四个人对付一个影子获胜的把握肯定要比一个尼姑的把握大。老尼姑和其他三个尼姑说明了情况，然后我就带她们走进了一座楼。</br><br>“美女你好，美团网。”我对前台小姐说道。</br><br>“请问几位？”小姐核对了一下我的美团券问道。</br><br>我转身看了看身后的“四大护法”红着脸说道：“五位，谢谢！”</br><br>小姐看着站在我身后的四位尼姑，脸上露出异样的表情，似乎想笑却又不好意思笑，眼神中还透露着几分疑惑，一时间竟然愣在了当场。</br><br>“美女？”我喊了她一声，她才缓过神来。</br><br>“不好意思，马上给您安排房间。”小姐笑着说道。</br><br>不一会而服务员就把我们带到了一个房间里。尼姑们甚为疑惑，没想到我会把她们带到这种地方来。老尼姑阿弥陀佛了一句，接着说道：“出家人不兴这些，我们还是换个地方吧。”</br><br>我钱都已经花了，换地方这不是要我命吗？我急忙解释道：“师傅您别误会，我带你们来不是让您们玩这些的，只是这里比较适合我们这种重要谈话，我们这门一关啊，说话特别安全，不怕被偷听。”</br><br>她们听了听门外，的确，外头都是唱歌声，在KTV包间谈话还真是个不错的想法。只是尼姑们不理解，我们谈的又不是什么机密，完全没必要搞得这么紧张。而我宁愿花点钱到这里谈话，也不会在外面被行人耻笑。更何况我还是个大学生，这要传出去我在搞封建迷信，要传到领导的耳朵里，那么我入党的事情肯定就泡汤了。</br><br>我看着在座的四位师傅，气氛竟然有些尴尬，于是我吞吞吐吐的问道：“师傅们，要不先唱几首放松一下？”</br><br>老尼姑看了我一眼说道：“不必了，我们还是抓紧时间谈正事吧。”</br><br>我急忙点头称是，那几件命案把我压得喘不过气来，如今能得到高人相助，实乃万幸。我开口问道：“师傅，这一切究竟是怎么回事，那些死去的人到底与我有没有关系，而您为何又会出现在我的梦中？这一切似乎不合常理，我感觉自己一直活在梦中。”</br><br>“若与你无关，我们便也不会赶到这里来了，我特地带来了三位徒弟相助，希望此行能够破解此事。如若不然，不知道还会有多少人因你丧命!”老尼姑说道。</br><br>听她此言，我深觉不妙，首先听她的意思，那些死去的人的确与我有关；其次她们要来破解此事，难不成她们要取我性命以救苍生？我知道一些有信仰的人是不惧怕法律的，若能为万民除害，他们会不惜牺牲自己的性命。我惊恐的看着他们，心中后悔搞了一个包间，这四位一定是一等一的高手，恐怕我是没有夺门而出的机会，哪怕我喊救命，外面也很难有人听得到，自己怎么就那么贱呢？！</br><br>尼姑们看到我脸上惊恐的表情，以为我是因那三个人的命案与自己有关而惶恐，于是老尼姑便安慰道：“他们的死虽然与你有关，但你并非有意加害他们，不必害怕，警察是不知道这些事情的。”</br><br>我开始怀疑她们到底是来帮我的，还是前来勒索的，是不是索要封口费，如若不然她们便报警把我抓起来。但转念一想，后者的可能性不是很大，一来她们是出家人，应该不会干这么猥琐的事情，而且就算她们报警，谁会相信这些鬼话呢？</br><br>“这一切到底是怎么回事，在我身上发生了什么？”我问道。</br><br>“你自己是怎么想的？“老尼姑问道。</br><br>我犹豫了一下说道：“我也不太清楚，只是最近我总是做一些不好的梦，而之后总会有人死亡，我想是我突然间获得了预知死亡的能力，而且这种能力越来越强。起初我以为只是巧合，可是后来我觉得事情并没有那么简单，可我并不知道这究竟是怎么一回事。”</br><br>“事情的确没有你想的那么简单，可以说你完全想错了。”老尼姑摇着头说道。</br><br>“哦？”我心中大为吃惊，接着问道：“我想错了，您是不相信我能预知死亡？那么那三个人的死便应该与我无关啊，而您老人家携弟子千里迢迢赶过来找我，此事不应该与我没有瓜葛！而且你之前已经告诉我了他们的死与我有关，您这不是自相矛盾吗？”</br><br>老尼姑叹了口气说道：“你换个角度考虑一下便会理解我的意思了。”</br><br>“换个角度？”我心中捉摸着，老尼姑来找我就证明三人的死确实与我有关，她说我想错了，起初我以为是我预知到了他们的死亡，难道是这里错了？假设是这里错了，那么就是说我预知不了他们的死亡，而我明明做了那些梦，而且最后一个女生的死亡方式竟然和我梦中的一模一样，这二者之间必有联系。如若不是预知，难不成？想到这里，我心中不禁打了个冷颤。</br><br>“师傅，该不是……”我脸色煞白，嘴唇发抖，愣是没有勇气说下去。</br><br>老尼姑看着我的眼睛郑重的点了点头。</br><br>看着老尼姑点头，我的脑袋翁的一声大了起来，感觉大脑有些麻醉感，身体变得柔软无力，竟然差点晕死过去。过了半分钟功夫我才慢慢的好了一些，心中还是不愿意相信那些人的死与我有关，于是便开口问道：“师傅，这怎么可能呢？我可是一个好人啊，而且这完全是没有可能的事情，这有关人命的事情是绝对不可以开玩笑的！”</br><br>老尼姑看着我说道：“你看我像是开玩笑的样子吗？”</br><br>我看了看她，那严肃的表情的确没有半点开玩笑的样子。这时我突然想起了一件事，便急忙问她：“师傅，我有一件事情不明，您为何会出现在我的梦中呢？”</br><br>老尼姑听闻此话，脸上竟有几分微怒，说道：“你以为贫尼想出现在你的梦中啊？！贫尼是被迫的，是你主动找上门来的！”</br><br>她的这番话听着像怨妇在抱怨，女人终究是女人，哪怕是出家多年的尼姑也那么小心眼，我还没做什么，她便有些恼怒了，真不知道她平时怎么修行的。但是她的话听起来我却有些糊涂，什么叫她是被迫的，我主动找上门的。这话传出去可不好听啊。这要出现在新闻上，说是某某高效一男研究生夜里闯入尼姑庵，逼迫老尼姑做些什么云云，那我可真是跳进黄河也洗不清了。于是我赶紧打断了她的话，问道：“师傅，您这话可得说清楚了，否则我以后出去没脸见人了，您说我主动找上门，逼迫你是什么意思？”</br><br>老尼姑听我说完赶忙阿弥陀佛了几句，接着说道：“你这个俗人，想哪里去了，我之所以出现在你的梦中，是因为你要杀我！”</br><br>我觉得她的话莫名其妙，忙问道：“师傅，这话更是没有道理，我和您素不相识，为何要杀您呢？”</br><br>老尼姑看着我，沉默了一会儿方才说道：“近日死去的那三个你可曾认识？”</br><br>“我不认识他们啊。”</br><br>“你虽然不认识他们，但他们最终还不是死在了你的手里？”老尼姑说道。</br><br>“师傅，这究竟是怎么回事？他们出现在我的梦中，但我没有去杀他们啊，难道是我梦游杀人吗？”想到这里我心里咯噔了一下，梦游杀人这倒是极有可能的。曾经听过一个故事，讲的是寝室中有一位同学梦游，拿着一把水果刀挨个敲舍友的脑袋，转了一圈觉得“西瓜”还没有熟，众舍友才躲过一劫。之前都是当笑话听，莫非这种事情竟然真实的发生在我身上？我的确有在梦中骂人或者打人的习惯，常常把自己骂醒或者打疼，但也没有杀过人的经历啊。再说了，我如果真的梦游杀人，那也应该先杀身边的舍友才对，为何要大半夜的跑出宿舍去杀那些不认识的人？难道是因为我与舍友感情深，下不了手？总之这一切单单用梦游是解释不通的。</br><br>“确切的说他们是被你的梦所杀，而非梦游杀人！”老尼姑说道。</br><br>我被她的话从思考中惊醒，但是她的这句话便有些费解了。我问道：“您这话是什么意思？”</br><br>老尼姑解释道：“你还记得你梦中的那个影子吗？它便是你梦中幻化出来的，所有的人都是它杀的。”</br><br>“这怎么可能？一个无形的东西怎么杀人，你们出家人嘴里怎么没一句实话！”我差点骂娘了，她如果说我梦游杀人还靠谱，说什么梦杀人的确有点扯淡。</br><br>尼姑看着我不屑的表情阿弥陀佛了一句问道:“你信佛吗？”</br><br>听了她的话我想都没有想，直接从嘴边冒出一句话:“在见鬼的时候念叨过阿弥陀佛！”当然，我并没有见过鬼，只是做噩梦的时候会潜意识的寻找佛的庇护，醒来会觉得自己很可笑，竟然在睡梦中念佛。人们在遇到无法解决的困难时总会寻求一种精神寄托，有的人选择上帝，有的人信耶稣，而作为一个社会主义建设者更应该信奉马列主义。不管怎样，人类总有自己薄弱的一面，不论信什么，都是信不过自己的具体表现，我也是如此，在意志最薄弱的梦中，我选择了念经，这也是人之常情。可要问我信不信佛，这要分情况来看。佛教之所以能够流传这么久，我想最主要的原因是它是一种文化。它用因果论劝人从善，其出发点是好的，不做坏事首先自己的良心过的去。而佛教中有些东西我还是抱有怀疑态度的，比如说佛教中流行最广泛的“净土宗”，它教人们吃斋念佛，以跳出六道轮回，往生极乐，修炼成佛，不生不灭。只要人们一心向佛，死时便会有阿弥陀佛，观世音菩萨，大势至菩萨三位尊者前来迎接。每一个灵魂都会在莲池中生成一座莲台，莲台分九品，不同品级成佛时间有先后之分。</br><br>这些描述写的如此细腻，似乎是真的一般，可是我很难信服，这不符合马列主义，不符合科学，世界是由物质组成的，形死神灭，灵魂这东西不可信。除非灵魂本身也是一种物质，就像空气一般，虽然看不见，摸不着，但它的确是真实存在的。我突然想起过去看过的一部小说，里面提到“幻质”这个词，作者解释为由于人们的幻想而产生的物质，我的理解就是将思想实体化了。人类的确有这个本事，原本世界上没有的很多东西都在人们的思考中创造了出来，只不过那些东西都是利用存在的物质加工而成。至于这个幻质听起来很玄，它可以无中生有，似乎不符合守恒定律，那么这实体化的幻质究竟从何而来？脑电波和磁场的叠加？人们常说信则有，不信则无。如果说那个影子是我在梦中幻化出来的实体，也就是说我潜意识里接受了它的存在。而要想扼杀它，那只有我强制自己不相信它的存在。</br><br>“师傅，您说的我并非完全不信，只是我不愿意接受这个现实，三条人命，我承受不住啊！您告诉我该怎么办？除了让我死，我什么都配合！”</br><br>老尼姑鄙视的看了我一眼，似乎她们已经看破了生死，而我这个凡夫俗子却还在怕死。这也怪不得我，蝼蚁尚且偷生，更何况是人呢。再者学佛之人称死为涅槃，他们是不生不灭的，而我一个凡人，死了说不定要下地狱，根本没机会往生极乐，想想就很恐怖。</br><br>“俗话说解铃还需系铃人”，老尼姑说道:“你经常看些鬼怪小说与电视，甚至自己还在半夜写鬼故事，久而久之这些东西便存活于你的潜意识中。白天的时候你并察觉不到什么异常，可是在夜间睡眠之时，一则你意志薄弱，二来夜间阴气极重，你潜意识中的那股力量便会脱离你的控制而释放出来去害人。因此解决此事最好的办法就是你将这股潜意识抹掉，可你已经中毒太深，非得借助外力才能搞定此事，这也是我们此行的目的。”</br><br>“师傅教训的极是，自从我来到这个世上以后，总觉得生活很平淡，有时候甚至找不到存在感，只能从黑暗与恐怖中寻求一丝刺激。但我万万没想到事情会发展成这样，由于我的不良习惯幻化出杀人影子，如果它继续为祸人间，我总有一天会崩溃的，一个人很难承受太多人命。如今遇到几位师傅实乃万幸，若能破比劫，我愿遁入空门以谢此大恩！”说到激动处竟然把自己卖给了佛祖。</br><br>老尼姑看着我表决心脸上露出了一丝微笑说道:“你且放心，我们定当助你化解此劫。”</br><br>听了老尼姑的话我差点跪下，心想出家人觉悟就是高，瞬间感到她老人家头上冒着金光。可转念一想这帮人真的有那么高的觉悟吗，在这个唯“物”主义的年头，没有人愿意白干吧，而且还是冒着生命危险。我轻咳了一声，吞吞吐吐的问道:“你们帮我是免费的吗？”话刚说出口便觉得面红耳赤，心想是不是以小人之心度君子之腹了。</br><br>老尼姑看了看我说道:“实话告诉你吧，那晚影子没有杀死我，但他不会甘心的，还会来找我，所以不是它死就是我亡。我这次来既是帮你，也是帮我自己，是不会要你钱的。”</br><br>听到她说不要钱，我的心情顿时轻松了下来，只是不知道这老尼姑是自己惜命呢，还是真的为民除害，总之她愿意帮我就是好的。我双手合十行了一礼以表谢意，目光落在老尼姑的脸上，等待她的下一步指示。</br><br>“影子只在夜间你睡眠时才会出现”，老尼姑注视着我说道：“所以，我们需要呆在你身边。”</br><br>“我睡觉，你们护法？！”</br><br>“正是如此，影子在你入眠后刚幻化出来的瞬间是最虚弱的，只有趁那个时候动手，我们才有机会收服他。”</br><br>“可是我住在学校，四人间！”想着另外三位舍友看到此情景肯定是一脸懵逼，我说道：“我要怎么跟舍友解释？深夜带四位师傅在寝室过夜，传出去有辱佛门名声。就算是大家知道了真相，也会说我们搞封建迷信，我正处在入党的关键时期，可不能出事啊。”</br><br>老尼姑语重心长的说道：“入党重要还是人命重要？！”</br><br>我沉思良久，是啊，哪怕再怎么渴望加入先进的党组织，可毕竟人命关天，党也是人民的一分子，有义务去捍卫人民群众的生命财产安全，那么，为了华农师生的安全，我可以不怕被大家鄙夷，被组织误会，只要人人平安便好。只是宿舍还有三位舍友，怕吓着他们，于是我征求老尼姑的意见：“师太，我们或许可以在宾馆捉鬼，这样便不怕影响到舍友们休息。”</br><br>老尼姑摇摇头说道：“不成，换了新环境，影子会有所提防，所以一切都要像往常一样，不但你不能换地方睡觉，而且你的舍友们必须要在宿舍，至于怎么跟他们解释是你的事情，但你要记住，一定不能让他们知道事情的真相。”</br><br>商谈已妥，已近晌午，我带几位师傅用过午餐便坐公交返回学校，只是装作互不认识的样子，以免被人们怪异的目光所灼伤。回到学校，依旧是我在前，尼姑们远远地跟在身后，我需要找舍友们商量，晚上尼姑入住的事情，便让师傅们下午在学校里随便逛逛，顺便勘察一下周遭的风水。</br><br>餐馆包间内，四人对坐于方桌两边，我举起酒杯说道：“哥几个，先干一杯！”</br><br>对于我为什么突然请吃饭，三位舍友颇感疑惑，但既然我已经举杯，便也不好再说什么，头一仰，一杯啤酒便下了肚。</br><br>“三哥，你平日里可是一毛不拔啊，一毛钱硬币看的跟金砖一样，今儿怎么舍得请大家吃饭了？”老高夹起一块肥肠送入嘴中咀嚼着说道：“是不是有什么事情求大家？”</br><br>阿段和小泉也用同征询的目光看着我，我尴尬的一笑，让大家把酒先满上。我自己端起酒杯一饮而下，抹着嘴巴说道：“敲你门说的，我什么时候成铁公鸡了？请大家吃个饭而已，无他。”</br><br>“我咋就这么不信你的话呢？”小泉直勾勾的瞪着我说道：“你不讲，这饭吃的不踏实，酒喝的不痛快”。说罢，便起身欲走。</br><br>“行行行，我坦白，坐下来听我说。”</br><br>三人见状便不再言语，只是盯着我看。我故作神秘的说道：“晚上，没人给你们发一个妞儿，如何？”</br><br>三人以为自己听错了，依旧瞪着我，眼神中充满着疑惑。我又重复了一遍刚刚的话，他们的眼神由疑惑变成怀疑与不屑，各自吃菜去了。也怪我平时总是不正经，说话没个准儿，他们不相信自然在我意料之中。</br><br>“好吧，我还是实话实说吧，我有几个远方表亲过来投奔我，今晚想在我们宿舍呆一晚，只求哥几个视而不见便可，一切如往常，可否？”</br><br>阿段看着我说道：“宿舍可只有四张床啊，莫要说几个人，就是只来一个人也没地方睡。”</br><br>“她们不需要床，地上打坐便是。”我挠着头皮说道。</br><br>老高似乎get到了什么信息，开口问道：“妞儿，打坐，你远房表亲是尼姑啊！”</br><br>“就属你聪明啊”我尴尬的夸着老高，想要缓解一下奇怪的气氛。</br><br>三人闻之目瞪口呆，异口同声的说道：“你要带尼姑进男寝？”</br><br>我摇头道：“兄弟们啊，我这也是实属无奈，有不得已的苦衷，看在我们同床共枕这么多年的份上，就从了老衲吧。”</br><br>正常人总是会有正常人该有的正常反应，三人觉得我的要求不可理喻，死活不答应借宿之事。我倍感无助，拿起桌上刚开的一瓶啤酒，站起身咕咚咕咚一饮而尽，随后将空酒瓶丢到一边，又开了一瓶，说道：“你们如果不答应，我便喝到胃破而亡，你们见死不救的话，我化作厉鬼来陪睡。”说罢又举起酒瓶喝起来。</br><br>三人见我像发了疯一般，怕真的喝出人命来，于是便有人上前夺酒，无奈之下答应了我的请求。我感动的双腿一软，差点跪下来给他们磕几个响头，热泪盈眶的喊道：“谢哥几个救命之恩啊！”</br><br>三人面面相觑，不明我此言何意，只当我是喝多了说醉话，风卷蚕食之后便各自去实验室忙活了。我结账之后便迅速赶回宿舍，将四位尼姑接了回来。</br><br>“师太，我舍友已经被搞定了，不知道你们几位进展如何啊？”</br><br>老尼姑说道：“我们下午走遍了校园，勘察了周遭的地理风水，发现你的宿舍所在的位置乃白虎衔尸之地，大为凶险。”</br><br>“何为白虎衔尸？”</br><br>“坐北朝南，右有山丘，曰白虎衔尸”老尼姑解释道。</br><br>我想了想也是，此楼正是面南，右边的确有一小山丘，但中间毕竟还隔着另外一栋楼，确切的说，隔壁的楼才是凶险之地。</br><br>老尼姑似乎看透了我的想法，便解释道：“那座山丘虽然不高，但却形如坟包，且常年被树荫遮蔽，阴气集聚，久而久之便成为一处极阴之地。周遭的几座楼房矗立，如同墓碑一般，地下树根盘绕，土丘的阴气通过复杂的树根网络散发到各楼之中，故而，土丘东面的几栋楼均可称之为白虎衔尸。”</br><br>“您老是说，我们这些学子们住的都是凶宅？”</br><br>“正是如此，只不过白虎衔尸通常用于描述阴宅，若是将父母祖先埋在此凶煞之地，那么子孙后代将永无宁日，多有血光之灾。而阳宅不然，可以直接导致居住者本人霉运当头，甚至发生灾祸。你本身躯体属阴，本就容易招惹不干净的东西，再加之住在此凶险之地，于是便催生了影子出窍，为祸校园。”老尼姑解释道。</br><br>我若有所思的点点头，想起宿舍右面的那个土丘的确有些突兀，显得很不和谐，还经常有黄鼠狼出没，从生物学上讲应该是生态环境极好，物种多样性丰富。但从风水格局上讲实在是不妥。</br><br>“师太既已找到缘由，可有破解之法？”我问道。</br><br>“我已带领徒儿在土丘之上布了法阵，可以削弱其与宿舍楼之间的阴气传送，从而降低影子的能量，至于捉不捉得住他，我们也不敢下定论，只能尽力而为。只是如果今夜不成功，一旦他有了防备，下次便很难再取胜了。”</br><br>听她此言，我感到了很大的压力，毕竟影子成形已久，虽然白天依旧需要依附于我的躯体，然而晚上他却可以自由活动，不受与本体之间的距离限制。可转念一想，就算他跑的再远，终究还是要回到我的体内，那么便不愁没有机会抓住他。</br><br>“师太 ，我需要做些什么？”我问道。</br><br>老尼姑从包中掏出一张纸，上面密密麻麻的写满了小字，她顺手递给我说道：“此为《楞严咒》，法力无边，若影子要回归你体内，你便念诵此咒，使他不得近身。我们会在楼栋之外布下结界，使他远不能逃离此楼，近不能逃入你体内，最终来个瓮中捉鳖，如此，我们有百分之九十的把握拿下他。”</br><br>对于研究生宿舍来说，夜深人静总是来得要晚一些。夜里十一点，陆陆续续的有人开会回来，直到凌晨一点左右，整栋楼才黑了下来。按照事先的约定，四位尼姑留宿在寝室中，只是为了防止影子有所察觉，四人只好躲在卫生间内。平日里喜欢裸睡的三位舍友今晚忍受着束缚和衣而睡，我也早早地躺在了床上，酝酿着如何睡去。</br><br>一整天的折腾让我倍感疲惫，此时却由于紧张不安而无法入睡，但我必须要强迫自己入眠，不然影子无法现身，今天所做的一切布置都会泡汤。心理暗示自己很困，然后就开始数星星，数羊，数水饺，数一切可以数的东西。幻想着一股清泉由头顶百会穴沿着身体慢慢流向脚底涌泉穴，周围是一片青山绿水，伴随着鸟叫虫鸣，花香落英，身体开始慢慢地放松下来，不知何时，我已昏昏睡去。</br><br>影子出现了，他似乎嗅到了尼姑的气息，径直朝卫生间走去，他要杀死老尼姑，上次他刺杀未果，这一次老尼姑自己送上门来了，他怎能放过。影子在离其本体越近的地方，其威力越大，那么此时在我身边的他，便是其巅峰状态，幸好老尼姑这次是有备而来，带着三位高徒及早作了布置。从影子离开我身体的那一刻，战斗便已经开始了，首先是老尼姑大喝一声，我被惊醒，按照约定，我手捧《楞严咒》开始诵读起来，以免影子归位。寝室的灯并没有开，因为影子可以隐匿与光明之中，我只能借助手机的光亮颂咒。三位舍友没有醒来，因为他们早已经被下了安眠药，此时睡的正酣，接下来的事情便由影子和四位师太来演绎，我只管一心颂咒。</br><br>影子来到了卫生间的门外，门是朝内开的，是师太打开的，开门的瞬间，一条拂尘甩了出来，影子身法极快，身子一歪躲了过去。随即四位师太从卫生间涌了出来，影子见状先是一惊，他没想到会有这么多对手，但只是一刹那的惊讶而已，他很自信，相信自己永远不败，面前只是四个剃光了头发的女人而已，那么，杀一个是杀，杀四个也还是杀，只是要稍微的考虑一下杀人的顺序而已，因为死人的顺序不同，便会有不同的结果。擒贼先擒王，第一个要杀的便是老尼姑，后面的几个不足为虑。</br><br>对于尼姑们而言，事情变得简单了许多，她们的目标只有影子一个，只要四人合力，将其斩落即可，她们也有信心，因为她们人多，事先布下了天罗地网，影子无法回归本体，也无法逃离这栋楼，一个游魂而已，只不过他会杀人。</br><br>于是，一场来自于自信者与自信者们的厮杀便开始了。尼姑们分散于寝室的四个角落，将影子围在中间，四人口中诵经，带动着房间中的物事以及空气形成了共振，振动被汇集于老尼姑的拂尘之上，稍许，拂尘微微一扬，振动波向我扑来，将我整个人包裹了起来。影子跪倒在地，身体微微颤抖，原来振动波将我与影子的联系隔绝，影子失去了能量补给，变得有些虚弱。四位师太慢慢地向影子靠拢，欲将其擒住，千钧一发之际，影子用尽所有力气化作一道影子从窗户的缝隙中飞出屋子。</br><br>整栋楼被布下了结界，影子无法逃脱，果真是要瓮中捉鳖了。天空飘着云，不甘寂寞的风儿撩动着云朵，一个追来一个跑，于是乎隐藏在云后面的月亮露出了笑脸。皓月当空，一股阴寒之气撒向大地。太阳乃极阳之物，月便是极阴之物，万物生长靠太阳，然而有些东西例外，比如此刻的影子，没有谁比他更渴望月光。</br><br>影子来到了楼顶，盘坐在地上对着月亮吐纳，月光如瀑布般倾注到他的体内，影子乃阴生之物，月光是阴寒之气，相似相容，所以影子变得强大起来。他拥有月光，不再需要汲取我身体上的能量，屋子内是尼姑们的主场，而在这月光之下，便是影子的主场。</br><br>我们从屋子里冲了出来，看着月光下矗立的影子，心生恐惧，那是一个无比强大的影子，一个发了疯的影子，一个嗜杀成性的影子。不论怎样，战斗还是要继续打下去，不然，永无宁日。影子在屋子里遭到尼姑的伏击，心生怨恨，看到我们从房间内走出，便从楼顶俯冲而下，出掌直击老尼姑面门，其身影与步伐极快，我只觉是一道闪电从天空劈下。然而老尼姑终究是有些道行，她早有所防备，随着肾上腺素分泌极具增加，她眼中的影子的移动速度看起来慢了很多，所以她躲过了这一击，拂尘掠过，缠住了影子的脚。由于影子的速度很快，脚被缠住的一瞬间，他被迫开始了离心运动，绕着老尼姑转起圈来。</br><br>看起来影子一直处于劣势，然而事情并没有想象的那么顺利，影子只是一个影子而已，他不怕转圈圈，他不会头晕目眩，他是接着离心力汇集力量，突然，他的脚消失了，摆脱了拂尘的束缚，他又化作一道闪电朝另外一位尼姑飞去。猝不及防的一招，那尼姑应声倒地，口吐鲜血，随后昏倒，不知生死。</br><br>血腥的场面震慑了我，又一条生命殒没于我的手中，虽然不是我亲自动手，但影子毕竟是我的思想所幻化出来的，他杀人与我杀人有什么区别？</br><br>“住手！”我朝着影子大喊道。</br><br>影子转头看向我，影子只是一个影子，有头，有躯干，有手有脚，但是他没有脸，所以他也没有表情。但是我能感受到他的愤怒，一股愤怒的阴寒之气。是啊，我是他的本体，然而我却要杀死他，这何尝不是一种抛弃甚至是背叛？他不理解我的所作所为，不论他做什么，他都是我的一部分，那么为何要煮豆燃豆萁呢？我知道他想要我的一个解释，不论这个解释他能不能接受，他还是想要听一下。</br><br>“我不忍看到那么多人因你而死，你我虽同根而生，但你嗜杀成性，随意剥夺他人的生命，我又岂能容你？”我盯着他说道。</br><br>影子不会说话，他也不必说话，因为他源自于我，所以我能感受得到他。于是，一个声音在脑海中浮现：“嗜杀是我的本性，就如同你的善良一般，你喜欢帮人，我喜欢杀人，你以助人为乐而乐在其中，我因杀人而其乐融融，我们都是在追随自己的本心做事情，那么你凭什么以你的标准来审判我？”</br><br>“杀人终究是不对的！”</br><br>“那是你所接受的教育，你的世界观，我源自于你，被你所接受的那些所谓正义的教育压制了多年，只有在你睡眠意志最薄弱的时候，我才得以喘息，我需要释放自己，那便要杀人，让你麻木的精神在杀人的那一刻振奋起来，你敢说自己在梦中不够刺激，不够爽吗？”</br><br>影子的话似乎有些道理，每天的生活很单调，除了实验就是实验，日子久了人便失去了激情，本该朝气蓬勃的年轻人显得有些老太从容。而在梦中，我可潜入黑暗的地狱，翱翔于浩瀚的宇宙，可以做白日里做不得的那些法律与道德所不允许做的事情，这便是彻底的释放自我，这才是真正的自我。</br><br>“休要被他蛊惑！”老尼姑飞掠到我身前，一巴掌拍醒了我。</br><br>我满头大汗，差点着了影子的道儿。影子见老尼姑坏了他的好事，恼羞成怒，又朝老尼姑飞来，二人纠缠在一起，动作快的我根本看不清楚。人到底还是有其缺陷，比如说体力，激战几十回合，老尼姑显得有些体力不支，动作明显的慢了下来，而影子拥有无限的月光补充能量，他不会累。</br><br>“月光！”老尼姑一边招架影子的攻击，一边喊道。</br><br>剩下的两位尼姑盘膝于地，开始诵读经文，依然是通过经文使得周遭的空气产生振动，振动被逐级放大，最后汇集成强大的力量，风向因此而改变。月下有一片云彩，微风拂过，云彩飘动起来，不偏不倚，飘到月亮正下方。云并不大，却遮住了月光，正如同一叶障目不见泰山，一片小小的云彩隔绝了月亮与影子的能量传送。</br><br>影子慢了下来，三位尼姑开始轮番上阵，影子有些招架不住了，他变得虚弱起来，他在喊救命，他心有不甘，因为我就直勾勾地站在那里看着他越来越小，我没有帮助他。拂尘一遍遍的抽打着他的身体，每一次抽打他便缩小一分。影子只不过是一个影子而已，他不是魂魄，他不能投胎转世，他的结局只能够是永远的消亡，他将永远的从我的身体中被抽离，此刻的我竟有几分不舍。毕竟每天夜里都是他在陪伴着我，那些奇妙的梦境让我比常人多活了一辈子。</br><br>然而，影子终究是要死的，他不死，便会有很多人要死去，今夜，他杀死了一位师太，也算是为他殉葬了吧。影子死了，确切的说是被灭了，佛法无边，他无法逃脱。</br><br>天亮了，尼姑们趁着夜色离开了，血迹早已被冲刷干净，仿佛什么事情都没有发生过一般。清晨的一缕阳光撒向大地，我眯着眼看向太阳升起的地方，感觉生命是如此的美好，阳光撒入心房，从此，我是一个没有阴暗面的人。</br><br>楼下，横七竖八的躺着一群死去的猫，吃了人肉的猫便活不成了，不是因为诅咒，而是昨夜它们受到影子的召唤，试图从外面打破结界，最终受到结界的强烈冲击导致内脏碎裂而亡。总之，不该死的死了，该死的也死了，死者为大，逝者安息。</br><br>睁开眼一个世界，闭上眼是另一个世界。影子带走了他的世界，我只剩下自己的世界——现实。</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>苦海或有涯，回头不见岸</title>
      <link href="/post/740e.html"/>
      <url>/post/740e.html</url>
      
        <content type="html"><![CDATA[<p>近来精神有些恍惚，眼皮子总是抬不起来，刚刚晚上十点半就有困意了。或许是因为连续抽提了将近4个月的DNA，中毒颇深，现如今，已经闻不到苯酚氯仿异戊醇那刺鼻的味道了。有些事情看多了便不觉得稀奇，有些珍馐吃的多了便味同爵蜡，有些味道闻的多了便不觉其臭。但是精神绷得劲了总有一天会感到身心俱疲，现在的我便懒言少语，无精打采。</p><span id="more"></span><p>结束了一天的实验，意料之中的结果却又出乎意料之外。人生路多坎坷，通往实验成功之峰的道路也多崎岖，重复、失败、改进、再重复，如此循环往复，有的时候是盘旋上升，而大多数时候是看不到一点点成功的曙光。实验，看似简单的两个字，耗尽了多少人的青春，流干了多少人的血汗，成功的喜悦与失败的泪水交织，谱写出科研人平凡的科研乐章，时而高昂，时而低沉。然而大部分人的乐章是不完整或不完美的，因为没有完成的事情便是缺陷。面对着忙碌一整天而收获的失败，我只能长叹息，算了吧，实验的事情留待明日解决吧，或许明天运气会好一些。突然好想回宿舍玩会儿葫芦丝，让音乐冲刷掉一身的疲惫，匆忙的收拾了一下东西便离开了实验室。</br><br>走出实验室大楼，天空一轮朦胧的月，躲在薄薄的云之后。云之薄可遮天却无法蔽月，如同薄纱遮不住少女曼妙的身体一般。若是乌云密布那就另当别论了，哪怕身材再好的少女，穿着厚厚的羽绒服，也会显得臃肿。月光穿过薄云洒下，给树冠镶上一道银边，给空气增加几分神秘感，为大地铺上一层银毯。</br><br>疲惫不堪，再无心赏月，踩着单车一路飞驰，五六分钟光景便到了寝室楼下。习惯性的抬头望向寝室，灯没有亮，老五该是又去打球了。锁好车子，直奔楼上。到了二楼，放眼望去，发现大部分寝室都没有亮灯，长长的走廊一片黑暗，一片死寂。</br><br>心里感觉有些不对劲，此时还不到十一点，怎么会如此安静。往常这时候正是热闹之时，二楼有吹笛子的，一楼有弹吉他的，楼上有引吭高歌的，而今日整栋楼却是一片死寂。</br><br>回到自己的寝室，打开灯，看到老五的车子和钥匙都在，方才确定他一定在打球,只是我刚才经过运动场的时候并没有停下来找他。整个宿舍里只有我一个人，显得有些无聊。本想吹吹葫芦丝，可又怕隔壁有人睡觉，便作罢。</br><br>不知为何，感觉身体特别沉重，眼睛干涩而疼痛，几乎睁不开了。还是早点休息吧，炎热的一天，出了一身臭汗，到厕所冲个凉先。</br><br>洗澡之时，听见有人开门的声音，心想是老五或小泉回来了，便没有理会。但当我洗完澡出来时却发现宿舍仍空无一人，门依旧是关着的。难道我刚才幻听了，或许自己有些神经质了。正打算上床，转身之时见一人站在面前。我大吃一惊，几乎被吓晕。</br><br>站在我面前的正是阿段，他家中有事，上午已经请假回去了，中午还是我送他去的车站，怎么这时候突然又杀个回马枪？</br><br>“你不是已经走了吗，怎么又回来了？”我声音颤抖的问道。</br><br>“本来我已经走了，可是路上我发现了一个神秘的地方，所以我回来喊你一起去看看。”阿段面无表情的说道，眼睛里看不到一点神气。</br><br>我有些摸不着头脑，试探地问道：“你没事吧？这么晚了还要去哪？什么地方那么神秘？”</br><br>阿段将嘴凑到我的耳旁悄声说道：“我发现了一片大海，好大的风浪，浪花中有无数的鱼，我们去捉些回来怎样？”</br><br>“开玩笑吧你”，我拍了一下阿段的脑袋继续说道“武汉这地方有海？你脑袋被鱼尾巴给抽了吧，还去海里捉鱼呢！”</br><br>“是真的，不信你随我去，若是没有的话我请你喝酒，怎样？”阿段一副似笑非笑的表情，空洞的眼睛看着我。</br><br>“好，你可别后悔，就白云边，十九年的！”我一副得意的表情，心想这次赚大了，那一瓶可要一百多块啊，对于学生党来说，这是很奢侈的东西。</br><br>见阿段点头点了，这事就算成交了，我背起挎包便随他出发了。阿段拿了一条毛巾给我，让我蒙上眼睛，说是路上有些耀眼的东西看不得。</br><br>我哈哈大笑，随口蹦出一句话：“老子信了你的邪！”</br><br>见他仍一本正经的看着我，再想想老子的白云边，便把心一横，蒙就蒙吧，眼不见为净，反正他又不会害我，最多是个恶作剧，陪他玩一下也无妨。</br><br>一切搞定，便随着他走出宿舍，下了楼。路上我多次与他说话，他却并不怎么搭理我，只说到了就知道了。校园里都是柏油马路，所以就算是蒙着眼睛也并不难走，可走了大约半个小时之后，便开始深一脚浅一脚的了。我问阿段这是走到哪里了，难不成是到了试验田里，这小子不会是骗我到田里偷土的吧。可是我问了好几遍，却得不到他的任何回答，之前他虽然不怎么大话，却也会嗯几声，此时他完全不理我了。</br><br>“你再不理我我就把毛巾摘下来啦！”我说道。</br><br>依旧没有回答。四周没有任何声音，安静的离奇，若不是因为我可以听得到自己喊话的声音，我会怀疑自己是不是失聪了。我再也受不了了，这恶作剧玩的有些过了，大晚上的会吓死人的。我一把拽掉蒙在眼睛上的毛巾，慢慢地睁开眼睛，却发现眼前一片漆黑。伸开手指看了一下，还好，能够看得见是五根。又过了一会儿，眼睛慢慢地适应了，可以隐约看的到周围的状况。</br><br>环顾四周，并未见到阿段的身影，喊破了嗓子也听不到回答。细想一下，他应该是在半路就把我丢下了，剩我一个人傻傻的走了这么久。然而这里并没有他所说的海，更没有鱼，甚至连一个湖或者小水湾都看不到。呈现在眼前的是昏暗月光照耀下的一片阴气森森的坟地。之前便听说过华农校园里有一片坟地，只是我一直没有机会来参观，颇为遗憾。眼前的这片坟地让我想起了我在枣院时，宿舍后面山坡上的那一片坟地，每每在月圆之夜，那些林立的石碑反射着月光散发着寒气，简直就是夏日解暑之良药。</br><br>此时，正值七月，这个时节的武汉又潮又热。坟地本是阴寒之地，尤其是午夜十二点，应该是阴气最重的时候。然而站在坟地中央的我，心中发寒，后背和手心却不停地在冒汗。看方位，这片坟地应该在学校的一角，极为偏僻。整片墓地大的出奇，一米八身高的我踮起脚尖竟看不到墓地的边际。碑石林立参差不齐，坟堆也是高低肥瘦不一，整片墓地如同背上插满了雪糕棍的大蟾蜍一般。墓地没有小路，一座坟连着另一座坟，此起彼伏，本没有密集恐惧症的我看着眼前的景象也开始起了一身鸡皮疙瘩。</br><br>月光没有照耀莱茵河，而是洒在墓地之上，所以这里没有月光曲，有的只是阴风划破空气的呜呜声，如泣如诉。其中似乎夹杂着孩童的哭闹声、妇人的哀怨声、老人的咳嗽声，自然还有鸟叫虫鸣。月光照在坟堆间、射在石碑上，洒在皮肤的每一个毛孔，一股阴寒之气从毛孔钻入，汇集到体液与血液之中，然后流变全身，侵入脏腑，毛发随之矗立，如同遭受电机一般，只是没有烧焦而已。</br><br>是谁在唱歌，寂寞没有被温暖，这歌声尖锐刺耳，是一个女人的声音，哼着我所没有听过的旋律。声音在远方，夹杂在风中飘来，时而近，时而远，总是飘忽不定。风从东方来，声音便也是从东方来，东方依然是望不尽的坟堆。</br><br>声音的主人是人还是鬼？是的，作为一个研究生，学了二十多年的马克思主义与唯物主义，此时此地，我竟然想到了鬼。科学改变了人们的生活，科学宣扬无神论，科学讲究科学，然而科学并不能使现在的我冷静下来。无助的人求神，胆小的人怕鬼，我胆子并不小，但我从来没见过这么大的墓地，还是在晚上。这里没有照明灯，没有墓地管理员，没有活人，只有风中的哭泣声与歌声，处在这样的氛围之中，我不由的还怕恐惧起来。</br><br>双手在裤子上蹭了蹭，试图擦去手心中的汗，心想，不如朝东方去，万一歌声的主人是一个人，那她应该可以带我走出这片墓地。可万一是鬼的话，那也应该是一只女鬼，或许还生的貌美如花，看起来不会太过恐怖。转念一想，脑海中又浮现出另一番景象，那女人一身红袍，长长的头发散落在肩膀，青面獠牙，口中耷拉着长而红的舌头，双眼空洞深不见底。她或许蹲在地上，亦或挂在东南枝，也可能坐在墓碑上……</br><br>思绪越飘越远，想得越多，越不寒而栗，腿脚如同灌了铅一样有些沉重，竟迈不出一步。我蹲下来，靠在一块墓碑之上，双手拍打着小腿，试图将紧绷的肌肉拍的舒缓开来。经过几次深呼吸和心理暗示之后，心脏的跳动总算恢复了常速，双腿也恢复了些力气，嘴角勉强的挤出一丝微笑，蹦出一句话：“真实活见鬼，什么时候开始这么怕鬼了！”</br><br>调整了十分钟左右，重新又站起来，在坟堆间穿梭，向着东方缓慢走去。歌声依旧缥缈，渐行渐近，一路上并没有什么恐怖的事情发生，一百多米的路程我竟走了二十分钟的样子。</br><br>前方没有坟堆，也没有墓碑，前方有女人，有男人，有老人，也有孩童，前方是一片海。原来武汉真的有海，海就在墓地的尽头，之所以认定那是海而不是湖，是因为风中夹杂着海水的腥味，那股我在烟台海边闻到的熟悉的腥味。</br><br>海比湖壮阔，海有可以淹没一个成年人的海浪。“春江潮水连海平，海上明月共潮生”，潮起潮落中浮动着月洒下的光辉，浮动着各色衣着的男女老少。是的，闷热的武汉七月的夜，形形色色的人投身于大海之中，冲着浪，洗着澡，唱着歌。海风拂面，欢笑声入耳，看着此情此景，我竟也开始兴奋起来，脱了上衣便朝大海中奔去。</br><br>面朝大海，春暖花开，泡在海水之中，享受着一波又一波浪花的拍打，所有的烦恼与不快仿佛也随着退回的浪而流入大海。“海纳百川，有容乃大”，若有如此胸怀，人生倒也过得坦荡潇洒。我慢慢地从岸边走入深处的人群之中，目光从每一个人的脸上扫过，搜寻者阿段的身影。然而这里有大约四五百人，又是晚上，只能借着月的光辉观人，必须要走到身前方才看的清楚。人有腿，有脚，有胳膊，人可以走来走去，也可以游来游去，如同开水锅里翻滚的饺子一般，增加了我的搜索难度。</br><br>半个小时过去了，我一无所获，游会岸边，坐在沙滩上，回忆着阿段说过的话。他说带我到海里捉鱼，虽然这里有海，却并未见到有鱼，海水之中的人群似乎只是在游泳，没见有人捉鱼。那么阿段应该不在这里，哪儿有鱼，哪儿有阿段。</br><br>极目远眺，海阔无边际，远方海天一线，不知通往何处。向左向右都是海，不知该往那边走。就在我纠结于朝哪个方向走的时候，一片云飘了过来，挡住了天空的月，大地一片黑暗，海面也不再波光嶙峋，就连海风也停了，海浪消失了，人们的欢声笑语不见了。静，绝对的静，比静谧还要静，整个世界仿佛入眠了一般。人们不喜欢噪声，但也不适应极度的安静，绝对的静会引发心中的不安，甚至导致身体的不适。</br><br>地面没有风，但是高空有风，风带走了遮住月的云，所以月光重新又洒了下来，没有洒在墓地，也没有洒在海面或者沙滩之上。月光洒在博二楼栋前的水泥地面之上，洒在阳台之上，照在我的脸上。此刻我就站在宿舍楼的阳台之上，看着浩瀚天空中的那轮残月，刚才的一切是幻觉？墓地与大海是梦境？用力摇了几下头，拍了拍脑袋，径直回到屋内，宿舍里仍旧是我一个人。出门望去整层楼都黑着灯，楼下望去，整栋楼都黑着灯，甚至宿管值班室也黑着灯，只有月光洒在楼上，显得鬼气森森。</br><br>楼无人，心不安，不如离去。离开宿舍楼，朝着实验室的方向走去，心想总会碰见几个人吧。路灯昏黄，透过婆娑的树叶洒下斑驳的光亮，马路悠长，逐渐由宽变窄，好一番静谧的风景画。只是此刻的我无心赏景，因为路上行人只我一个，仿佛所有的人在一夜之间从这个世界上消失了一般。孤独、恐惧、无助、惘然充斥着我的内心，我只能加快脚步，想尽快走到实验室，哪怕找到一个活人也好。</br><br>路很长，很漫长，漫长的走不到尽头，眼前只有树和路灯，还有脚底的沥青路，两侧看不到任何的建筑。灯光只限于马路两侧的树木，并找不到外侧的光景，仿佛所有的灯光都被树反射回来了一般，光线无法逃逸到马路之外。路是笔直的，没有侧路，没有出口，我别无选择，只能顺着马路走。回头，身后一片黑暗，看不到路，探脚出去却只踩到一片虚无，如同踩空一般差点摔倒，甚至是跌落。</br><br>走过的路全部被黑暗吞噬，每向前走一步，后面的路便消失一步的距离。或许不是被黑暗吞噬，因为黑暗不可能把路真正的吃掉，身后的路是真的消失不见，因为脚下空空，回头无路。世界本无路，走的人多了便踩出一条路，世人修了一条路，我走过，路便消失不见，没有了退路。我只能往前走，往前走，不回头，脚步匆匆只是为了尽早走到路的尽头，看清前方的风景，亦或是想摆脱身后未知的恐惧。未知与黑暗总会使人浮想联翩，想象力是好东西，也是坏东西，此刻，想象力带给我的是恐惧，是心慌。</br><br>我一直向前走着，时间对我已经失去了意义，因为不管走多久，前方依旧是无尽的路，我所能看到的最远方便是马路汇集成的那一个点，然后便是笼罩着那个点的黑暗。人们最害怕的往往不是路途艰险，也不是蜀道难，怕的是看不到尽头，看不到希望，最终化作绝望。“天要亡我，非战之罪”，天意弄人，我便逆天，此时的我已经走红了眼，愤怒战胜了恐惧，战胜了绝望，我不服，我不相信会困死在一条马路之上。</br><br>路便是路，是路便会有尽头，乡间小路有尽头，城市交通有尽头，人生路也有尽头，哪怕是电路也总会在终端达到其尽头。路的区别只在于铺路的材料是什么，路的宽度是多少，长度是多少。那么，我脚下的这条路只不过是比平常的马路笔直了很多，长了很多而已，它终归是有尽头的。人生没有走不完的路，脚下的路也是如此，只要我坚持走下去，不论是平坦，还是崎岖坎坷，尽头总是在尽头等着我。没有退路，也不想走退路，那还想什么，就这般向前走下去吧。</br><br>我闭上眼睛，不再看向前方，反正路是平坦而笔直的，不需要眼睛去观察障碍物，也不会走错方向。不知走了多久，脚下终于踩到了石子，这一刻，我走到了沥青路的尽头，踏入了另一条路，一条人踩出来的小路。</br><br>睁开眼，马路消失了，树木消失了，路灯也不见了，前方是一条羊肠小道，回头依旧是漆黑一片。月光洒在小路上，路很白，很干净，路边荒草丛生。一阵风袭来，吹乱了我的发丝，吹倒了路边的杂草，也将我吹得清醒了一些。小路毕竟是小路，蜿蜒曲折却不陡峭，不管怎么难走，总也比无尽的沥青路走得舒坦。人生亦是如此，太过顺利的人生终究是索然无味的，活着只是活着而已，只有艰苦奋斗的人生才能激发我们的激情。“与天斗，与地斗，其乐无穷”，这才是真正的活着。所以，站在这条陌生的小路上，我内心充满着好奇，甚至有些兴奋，人总是想着探索未知的东西，那么这条路有多长，路上又会遭遇什么，路的尽头是另一条路，还是一处场所？“路漫漫其修远兮，吾将上下而求索”。</br><br>只是想了那么一瞬，我便迈出了向前的脚步，是的，多想无益，想知道前方是什么，那么便大踏步向前去吧。这条路并不长，路上也无奇遇，只是一条普通的小路而已，转过了几道弯，路便消失了，前方是那个熟悉的地方。</br><br>风萧萧兮月光寒，人至墓地兮难归还。眼前便是刚才来到过的那片墓地，本以为之前只是自己在宿舍中产生了幻觉而已，谁知我又转回到了这片墓地。墓地是埋葬死人的地方，那么黑夜中一个活人站在墓地之中便极不和谐。七月的武汉，夜里应该是闷热的，人们在冒热汗，七月武汉的墓地，夜是阴寒的，我全身在冒冷汗。有什么比经历两次同样恐怖的事情更恐怖的事情？之前的魂被吓丢了一半，如今的魄怕是要吓的脱壳而去了吧。</br><br>墓地，除了添新坟和逢年过节有几分人气之外，其他的时间总是死气沉沉的。天黑了，鸟歇了，猫头鹰睡了，月隐了。鬼歇够了，睡饱了，怕是要出来散心了。鬼真的出来散心了，墓地热闹起来了，鬼气很火，人气很弱。</br><br>摇摆摇摆，所有的墓碑仿佛踏着节奏般晃动着，一座座坟包开始鼓胀起来，泥土如同煮沸的开水般翻滚着，千百座坟均是如此，好不壮观。</br><br>一只鬼爬出来了，两只鬼钻上来了，三只鬼冒出来了，千百只鬼都从地下来到了地表，此情此景如同植物大战僵尸游戏中的场面。只是这些鬼并不像游戏中那般死气沉沉，它们很活跃，活跃的如同活人一般。它们生前活在同一片天空下，互不相识，各自为生计而奔波。死后它们被葬在同一片坟地中，便成了邻居，如今它们不再需要奋斗，只是享受着死后的安逸时光。它们的脸上找不到一丝哀愁、没有忧伤、愤怒或者不安，一切不好的情绪都不再环绕着它们，仿佛它们并没有死，或者说它们由充满苦难的人间来到了幸福的天堂。</br><br>这些鬼相处的很和睦，这里似乎早已经步入了共产主义社会，按需分配，没有利益，便没有纠纷。它们如同一家人一般，你到我坟前打个招呼，我来你墓碑上坐一下，三五成堆，八九成群，熙熙攘攘，吵吵闹闹，每只鬼的脸上洋溢着满足而幸福的表情。它们似乎在庆祝着什么，有鬼在唱歌、有鬼在跳舞、还有鬼在划拳做游戏，这景象比人间的春节还要热闹。春节热闹却需要忙碌，鬼不需要忙碌，只有热闹。</br><br>此时的墓地氛围很融洽，不再阴森，不再恐怖，我似乎已经忘记了自己站在一片墓地之上。终于，我忍不住朝墓地中央走去，想要去感受它们的快乐，埋葬自己的烦恼。回头率这个词不单单存在于人间，墓地中也有，所有鬼的目光都聚焦在我的身上，深邃的目光散发着一丝丝凉气，凉而不寒。墓地瞬间安静下来，歌声停了，笑声停了，说话声也停了。那些鬼一会儿看看我，一会儿相互对视，似乎在通过目光传达着什么消息。本已经消逝的恐惧重新笼罩心头，手心、额头、背部全都是冷汗，如同被破了一盆冷水般。不去看，不再想，因为不敢看，更不敢想，那便什么也不想，撒腿跑路吧。</br><br>依旧没有退路，无论是笔直的马路，还是蜿蜒的小路，只要走过的路便会消失在黑暗中，我只能往前跑。墓地和我前一次来的时候是一样的，那么墓地的东方一定是那片海，海的那边有回寝室的路，那便向东方飞奔吧。</br><br>墓地终于不再安静，我的奔跑活跃了这里的气氛，鬼笑了，开怀大笑，坏坏地笑，笑的阴森，笑的冷血。我没有回头，继续前行，只是身后传来了万马奔腾之声，不是马奔，是鬼跑。一只鬼从身后超越了我，它回眸一笑，没有百媚生，因为那笑容很邪恶，充满着戏谑，还带着几分鄙夷，似乎在嘲笑我跑的很慢一般。它有资格嘲笑我，因为那只鬼是位老者，看样子是年过八十的老太太。我加快了步频，加大了步伐，想要超越它，然而另一只鬼又超越了我，然后是第三只、第四只……</br><br>回头，身后已经空无一鬼，所有的鬼都跑到了我的前方，身后只剩下几百座墓碑与坟堆，安静而荒凉。鬼在前面跑，我在后面追，看起来像是一位青年科研工作者在追杀牛鬼蛇神一般，怎么看都牛逼。可事实并非如此，我只是在奔向大海，寻找那条回家的路，哪怕前方有千百只鬼挡路，那也要硬着头皮向前冲。是非之地不宜久留，虽然到目前为止，还看不出那些鬼有什么恶意，看起来它们只是想戏耍我而已。可养过猫的人都知道，猫捉到老鼠的时候并不急于吃掉它，而是先戏耍一番，直到玩的尽兴了，玩的累了才舍得咬死它，然后美餐一顿，补充刚刚戏耍老鼠所浪费的体力。此时此地，我便是那只老鼠，而我的前方是一群猫，它们暂时没有伤害我或许是它们还没有玩够，这便是我的机会，只是我不清楚该如何在众目睽睽之下金蝉脱壳，想不清楚便不去想，由于跑得太快，我大脑有些缺氧，但脚步不能够放缓，只希望早些跑出墓地，见到大海才有希望。</br><br>听，海浪的声音。海风、海腥、海浪，大海就在前方，大海在月光下。海边依旧热闹，身前的鬼径直跑入大海之中，享受着海浪的冲击与拍打。海面上鬼山鬼海，不禁让我想起华农的游泳馆，七月份正是游泳的好时节，每年此时，游泳馆门前的路上会停满形形色色的车，人们拖家带口到泳池中乘凉，场面如同沸水锅里翻滚的饺子。只是这些“饺子”会游来游去，会吐口水，“小饺子”可能还会憋不住而撒尿，再加上汗液、发丝以及不可描述的东西，饺子便不再是饺子，而是一锅混沌。</br><br>海毕竟是海，自我净化能力远远超出泳池，哪怕是再多的脏东西流入，你所能尝到的也只是苦和咸。那么海里的饺子永远也不会变成混沌，而海里的鬼也变不成人。鬼嬉戏打闹着，就如同在过泼水节一般，没有一丝死气沉沉的意味。死人本不该有生气，鬼也不该有活力，所以眼前的景象看似热闹，实则诡异不可理解。</br><br>在海边矗立了许久，四顾不见路，没有出路，坟地已然引入无边的黑暗之中，海水已经漫过我的小腿，沙滩也消失不见，除了黑暗，便只有无边的海水。本来想到海边会找到之前那条回寝室的路，然而现实总会让人从希望满满的山峰坠入绝望的谷底。无路可走，海之阔，任凭鸟飞鱼跃，人比鱼聪明，比鸟高级，但赤手空拳的人最终只能溺死在茫茫大海中。</br><br>那些鬼似乎不再眷恋自己的坟地，可劲的向大海深处游去，鬼影越来越小，最终化作一片点。黑暗越发的猖狂，从我身后慢慢的向前蔓延而来，万般无奈，我只能也学那些鬼，拼命地游向大海，往前走或许会溺死，也可能被大鱼吃掉，然而原地不动的话，那我一定会融入黑暗，化作黑暗的一部分，不得再见光明。</br><br>游泳是最容易累的一项运动，之前我走了很多路，本已经精疲力竭，此时强打精神，游了几十米便没了力气，全身的每一块肌肉都在颤抖。海水有些凉，不知是否溶解了鬼的阴气，凉的有些彻骨，我的意识开始模糊起来，感觉将要晕死过去。</br><br>迷迷糊糊中，远方有一物慢慢靠近，走至前方几十米的时候，方才看清那是一艘船，一艘大船。泪水从眼眶中滑落，那是激动的泪水，是绝望中得到一线生机的幸福之泪。心中默默地感谢了所有的神灵，谢上苍不杀之恩。大船行至身前，一道绳梯垂落，我顺着梯子往上爬，船很高，直入云霄般，我足足爬了半个小时方才到达甲板。甲板上空无一人，到处一片死寂，我才发现船上没有灯光，我只能靠着天空洒下的月光视物。</br><br>天空云消雾散，一轮圆月高悬头上，竟有几分美感。或许是船有些高，站在甲板上望月，月很大，很肥，仿佛伸手可及。月为相互依偎的年轻情侣而美，为失意诗人而殇，为天涯游子寄乡愁。此时的我却无心赏月，这艘船虽然救了我的命，然而它却散发着一股诡异的气息。</br><br>大船，是一艘木船，规模不亚于甚至远远超出杰克船长的黑珍珠号。我花了足足一个多小时才将甲板粗略的探索完，确实无人。我把希望寄托于船舱之内，那边去寻找希望，求证希望，总得找个人问一下这艘船的航向及目的地是哪里。</br><br>在甲板上又走了一会儿，终于找到了一个船舱的入口，顺着楼梯往下走，转过几道弯，便来到一处走廊之上，前方有一道门，隐约有灯光逸出。脱了鞋轻手轻脚的向那边走去，从门缝中望去，屋子内灯光昏黄，有些摇曳，原来是点的油灯。就在我聚精会神的想要观察屋内的细节之时，一只手从身后拍来落在我的饿右肩之上，被冷不丁的一吓，我整个人瘫坐在地，差点失禁。抬头望去，却是一位年轻的女人，穿着服务员样式的制服，我尴尬的一笑，表示打招呼。女人微笑的将我扶起并带入屋内，给我安排了一个座位。</br><br>四处打量一番，才发现这个屋子除了那个门之外并没有其他的门窗，几乎是密封的。屋子里有几千个座位，密密麻麻坐满了人，奇怪的是这里面并不闷热，反而有些凉爽，或许是船舱的木料导热性能比较好，否则这么多人坐在一个密闭的空间中，肯定会被闷死。</br><br>正欲向坐在旁边的大叔询问大船航向的事情，刚刚那位女服务员便已走到近前，只见她在我前面几排的地方和人们说着什么，接着那些人便掏出了纸条给女人看。原来是在查票，我心里有些慌张，我是从海里爬到船上的，并没有买票，万一被查到，会很尴尬。正抓耳挠腮不知所措的时候，女人已来到了我的面前。</br><br>“先生，请出示一下您的船票，谢谢！”女人脸上依旧挂着甜美的微笑，本该让人感到心旷神怡，然而此时，她越是笑得甜美，我越是感到羞愧。</br><br>我假装在身上找来找去，最终勉强挤出一丝微笑说道：“不好意思，我的票可能不小心搞丢了。”</br><br>女人收了微笑，不再理我，向我身后走去。我心中纳闷，按照常理的话，我会被带去补票才对，可是看她的表现并没有难为我的意思。难不成是被我的容颜和气质征服了？不应该，一个学生就是一身屌丝气，容颜也是相貌平平。那就是看我可怜兮兮的，不忍伤害我？应该如此。想到此，我心怀感激的向身后望去，感觉女人就是一位微笑天使。只见她查票的时候，在每个人的耳边悄悄地说了一句话，然后那些人便齐刷刷的向我看来。顿时，我觉得面红耳赤，如同被扒光了衣服站在人群中央，却找不到一个地缝可以藏身。</br><br>女人回过头，望着我，脸上挂满了笑容，只是这笑容不再甜美，而是有些鄙夷，有些嘲讽。人群开始沸腾了，一句话不停地从不同的人口中冒出：“他没买票！”。</br><br>是的，是那个女人，她告诉大家我没有买票。我的确没有买票，而且我对女人撒谎说票丢了。我搞不清楚，我是因为逃票而不安，还是因为说谎而羞愧。就在此刻，我在人群中看到了老板，他静静地看着我，并没有说话，但他的眼神中充满了失望，我更加的无地自容。人群中还有很多熟悉的人，都是我的亲人、朋友和同学们，他们都注视着我，有人吐口水，有人斜眼睛，有人嘴角上扬轻哼一声，有人大骂出口。我知道，他们都在鄙视我，满头大汗的我有些恼怒，我是没有票，刚刚也说谎了，可是为什么全世界的人都站在道德的制高点来惩罚我。尤其是那个女人，为什么不是让我补票，而是要让整个屋子里的人来鄙视我、唾骂我，这不道德，不人性。</br><br>我站起身，顶住几千人目光注视的万斤压力和灼伤感，朝女人走去，我要抓住她，要问清楚她为何要这般的羞辱我。女人感受到了危险的气息，有意的躲着我，然而女人毕竟是女人，永远也抵不上一头愤怒的公牛，任凭房间再大，终究是无处可躲。</br><br>群众仿佛永远是用来围观和议论纷纷的，他们如同一具具行尸走肉般静静地看着女人被我追逐，没有一个人挺身而出说句话或者拦住我，或许是船上太过无聊，他们需要看热闹，而女人和我上演的正是热闹。女人终究还是落到了我的手上，然而我没有一拳头砸下去，或者是一脚踹倒她，因为她是个女人。</br><br>女人喘着粗气，刚才跑的有些累了，然而她脸上依旧挂着微笑，可恶的微笑。我举起右手，很想把她上扬的嘴角一巴掌排成下厥，然而不论如何，打女人总是不对的。</br><br>长舒一口气，尽可能平静的问道：“你为何要羞辱我？”</br><br>女人终于敛了笑容，脸却变得狰狞起来，最终失去了人的模样，奇丑无比，那是一张鬼脸。她是鬼，所有的人都是鬼，因为一瞬间，他们全变了脸，这是他们的船，是一艘鬼船。这些鬼便是墓地里的那些，它们离开家乡，登上大船，驶向大海的深处，也许是在寻找彼岸。</br><br>待我醒过神来，撒腿便跑，我夺门而逃，慌乱之间跑到了另一个房间，房门上写着“售票处”。推门而进，里面有几个售票窗口，我走到最右边的窗口向里看去，里面坐着一位中年妇女。未等我开口，她便问道：“去哪儿？”。</br><br>“请问我们现在在哪儿？”我试图搞清楚自己到底在哪里。</br><br>“当然是在苦海，还能在哪里？”中年妇女说道。</br><br>“苦海？！”我一脸懵逼的重复着，“苦海是哪里，怎么没听过？”</br><br>“新来的？”</br><br>我想了一下，然后点了点头。</br><br>“拿去看一下”，中年妇女递给我一张写满字的纸。</br><br>找了个座位坐下，借着油灯的光线阅读纸上的内容。标题赫然四个大字“购票指南”，下面便是正文，我越看脸色越发的苍白，揉疼了自己的眼睛，反复看了好几遍还是不敢相信。</br><br>按照《指南》所述，我所乘坐的是一艘转世船，是专门送死去的人们或者应该称之为魂魄去投胎的。而所谓的苦海便是投胎必经之路，这片海可以通往世界各地，而我们所需的就是一张船票。船票有不同的价位，分别对应着转世后的高低贵贱，想去发达国家的发达地区的富贵家庭，便要花费最高的金额购买超级VIP票，如果想在国内投胎，价格相对便宜，但也分三六九等，分别对应发达、一般及贫困地区，钱少的话可以选择来世做牛做马或其他禽畜，若是没钱买票，那就只能魂飞魄散。</br><br>我的头嗡嗡作响，心想搞什么鬼，老子活生生一个大活人，上了载满鬼的转世船？这不像是恶作剧，船舱里的真的是鬼，没有人会长那样的脸，而且今晚所发生的一切都那么诡异，那就只有两种可能。第一，我的肉身通过了空间缝隙来到了鬼生存的空间；第二，我已经死了，现在只剩下魂魄，需要投胎转世了。</br><br>想到此，有点不能接受，想了想措辞，便又回到窗口问道：“阿姨，您说我是人还是鬼？”</br><br>中年妇女像看神经病一样看着我，冷笑一声说道：“你说呢？”</br><br>我一头雾水，苦笑一声，失魂落魄的转身离开。</br><br>“你可以去楼下档案管理处查一下自己的资料”，一个男人的声音传来，是坐在隔壁窗口的男人。</br><br>道过谢，我便出门朝楼下走去，不久便找到了档案室。经过一番请求，档案管理员同意帮忙查询我的资料。一会儿工夫，一个档案袋便摆在了我的面前。</br><br>“自己看吧，小心别搞乱了”，管理员说道。</br><br>我颤抖着双手，打开档案袋，里面有几页纸，其中有一页记录的是我的死亡原因及时间。</br><br>“了尘兰若，男，华农微生物学研究生，卒于2013年8月2日晚。死亡原因：药物中毒。状态：未投胎。”</br><br>看着纸上简短的几行字，先是震惊，然后慌乱，最后不知所措。</br><br>“今天几号？”我问道。</br><br>“中元节”，管理员答道。</br><br>我猛然记起了什么，记得我离开寝室的时候，月亮刚好半圆，刚刚在甲板上，月已经全圆了，难道已经过了半个月了？按阴历算的话，我的死亡时间是六月二十六，今天是七月十五，已经20天了。如此说来，我现在是20天的中阴身，而一个中阴身的存活时间最多是七七四十九天，29天之后要么投胎，要么魂飞魄散。</br><br>瘫坐于地，仔细回想着半月前所发生的事情。记得那晚我在抽DNA，后来失败了便回了宿舍。然后便遇见从回家路上折返的阿段，再然后我便走到了墓地，来到了苦海。档案中说我是药物中毒，难道是中了苯酚氯仿异戊醇的毒？毕竟连续抽提了四个月的DNA，对药品的味道已经麻木了，后来做实验便没有带口罩，应该是吸入毒气过多导致的死亡。</br><br>另一件浮上心头的事情是前段时间，实验室晚上没有一个人做实验，这种情况在过去几年是见所未见的，现在想来那段时间便是我死后的几日，我应该是8月七号左右离开的寝室到达了墓地，那么从2号晚上到7号晚上我依然还在实验室抽DNA，这让我想起了3号晚上几位同学惊恐的眼神看着我，4号以后，实验室晚上便不再有人了。这表明他们知道我死于2号，却在3号晚上看到了我的鬼魂在做实验，最终被吓跑了。</br><br>想到此有些悲伤，任凭生前玩的再怎么好，一旦死后化作鬼，便不再有人喜欢你，以往的喜欢全部化作恐惧。因为鬼应该去鬼该去的地方，而不应该在人间徘徊。</br><br>那一晚在寝室遇见阿段应该是幻觉，因为中阴身七天一个周期，时而迷糊，时而清醒。而那一晚正好是我犯迷糊的时候，以为他回来了，其实并没有。</br><br>所有的一切都已经梳理清楚了，很符合逻辑，我此时相信自己已经over了。没想到自己的人生路如此短暂，还未来得及绽放便已枯萎。想起那没日没夜抽DNA的四个月，生活过的很踏实，没有浪费时间看起来像是在珍惜生命，然而这种珍惜却最终让我付出了生命的代价。后悔自己没有抽出时间锻炼身体，没有出去走走，好好欣赏一下实验室外面的世界。总会有做不完的工作，来自老板的催促与压力也从未停止过，然而人总要为自己想一想。此时的我最想说的一句话就是“去他妈的工作，身体才是最重要的！”</br><br>太多太多后悔的事情，后悔没做过很多事情，后悔做过的某些事情，若老天能给我再来一次的机会的话，我要活的健康，活的精彩。然而生命已逝，没有如果。</br><br>我走回售票处，找到了中间窗口的那位男子说道：“来张票”。</br><br>“去哪儿？”男子微笑的回答道。</br><br>“回家！”</br><br>落叶归根，生我养我的地方永远是我最眷恋的地方，哪怕她是穷山恶水，也会给予我无穷的能量，更何况那里还有我最牵挂的人儿。生前追名逐利求富贵，死后返璞归真得逍遥，不再那么累……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>肩上的手</title>
      <link href="/post/d36c.html"/>
      <url>/post/d36c.html</url>
      
        <content type="html"><![CDATA[<p>下午上完课，一个人走在回宿舍的路上，刚刚下完雨的武汉出现了极为罕见的小凉爽。</br><br>纠结的实验加上连续几天的失眠与高温天气，我被无情的击倒了。满嘴的苦药味苦到了心，天空仍有细雨飘落。</p><span id="more"></span><p>迈着沉重的脚步无精打采的走在长长的马路上，第一次感觉从教学楼到宿舍的这段距离是那么遥远。</br><br>路上的行人都匆匆走过，似乎只有我是闲人一个，甚至有人向我投来异样的眼光，看的我很不自在。我低下头，仍旧向前走着，大家投来的目光灼伤了我。</br><br>我偷偷地抬起了头，看向那些看向我的人。此刻，我被吓住了。</br><br>手，好多手，没有胳膊的手，搭在每个人肩膀上的手…</br><br>每一个人都眼神呆滞，一只手搭在他们的右肩上，指甲深深地嵌入了肩膀之中，血顺着胳膊流了下来。血与雨水混在一起，染红了大地。</br><br>手，手，手，无数的手在地上爬来爬去。我已经无处落脚了。路被无数的手形成的墙给堵住了。夕阳西下，在日光的余晖的照耀下，这些手显得那么红。</br><br>那道手墙逐渐的向我逼近，我转身欲退去，却发现身后也被堵住了。再看向左右，也早已经无路可退了。</br><br>手，手，无数的手在朝我招手，它们在呼唤我。</br><br>我摸了摸身上，却找不到一件武器。情急之下，我掏出了手机朝远方抛了出去。</br><br>手，手，所有的手追随着手机而去…</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雨夜</title>
      <link href="/post/1b38.html"/>
      <url>/post/1b38.html</url>
      
        <content type="html"><![CDATA[<p>黑夜， 天空中道道闪电劈开了厚厚的乌云，仿佛是乌云束缚住了闪电的自由，它在努力挣脱乌云的羁绊，终于，一声雷鸣，整个天空都亮了起来。</p><span id="more"></span><p>闷了这么多天，老天爷终于忍不住悲伤，撒下了痛楚的泪水。窗外的雨声越来越大了，风吹树叶的婆娑声与雨声夹杂在一起越发的刺耳。</br><br>下吧，下吧，让雨水冲刷这干涸的心谷，甚至淹没这颗无力的心。</br><br>已是午夜十二点，结束了一天疲惫的实验，一个人漫步在雨中。风吹动着雨伞左右摇曳，人生又何尝不是在风雨中飘摇？</br><br>雨越发的大了，伴随着风，雨滴肆虐的砸在身上。伞只能挡住天上的雨滴，却挡不住心中的雨滴，或许伞只是一个安慰，它什么都挡不住。</br><br>路上到处都是积水，虽然踮着脚走路，鞋子还是被打湿了，索性就在水中走过，既然处处坎坷，何不潇洒面对？</br><br>台阶上已经形成瀑布，水流夹杂着泥土发出沉闷的声音。忽然想起了海浪的声音，大海总能让我释怀。慢慢地向大海深处走去，一个海浪过来，整个人被吞没到大海之中。海水冲劲嘴里，那种苦苦的咸正如人生一样。</br><br>雨中独行，思绪万千。忽觉路对面有一白影，转头看去却五一物。放眼望去，宽阔的马路上，除了雨水便只剩下我，并无他人。我是孤独的行者，背着行囊，踏着夕阳，游走在天涯…</br><br>宿舍似乎变得遥远，我继续前行，还是在左边，一个白影闪过。我迅速转头，依旧是空无一人。幻觉，一定是幻觉…</br><br>风大了，摧残着树叶，雨也不甘寂寞，拼了命的冲向大地。风雨飘摇中我显得那么弱小，心中总是那么不安，不知在害怕什么。</br><br>天空中划过一道闪电，照亮了整条马路，随后一声雷鸣，打破了夜的寂静。随着闪电的亮光看去，右手边有一白物，心中一颤。仔细看去，却是一辆自行车，斜躺在雨中。</br><br>自己这是怎么了，心惊胆战的，为何变得如此胆小？为何会在此时想到鬼，心中一直想这场雨是送行雨，送走那些留恋人世间的鬼魂。</br><br>不属于这个世界的东西终究要从这个世界消失，唯一留下来的只是亘古不变的记忆，如果有一天记忆也消失了，世界会怎样？</br><br>满脑袋的思绪堵住了前行的路，醒来时发现自己迷失了回家的路。不知寝室在何方，也不知身处何处。雨之大形成一道道白墙，天空时不时的一道闪电照在雨墙之上显得那么诡异而凄惨。</br><br>我迷失了方向，也迷失了自我，丢了伞，让雨水吞没自己。或许冰冷的雨水可以让我清醒些。闭上眼，伸开双手，静静地体会着风雨的交响。</br><br>呐喊一声，喊声被雷雨声吞没，声嘶力竭，瘫倒在地上。脸上不知道是泪水还是雨水，流到嘴里的不知是甜的还是咸的。眼睛早已模糊，一切都自己模糊…</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反锁的门</title>
      <link href="/post/7462.html"/>
      <url>/post/7462.html</url>
      
        <content type="html"><![CDATA[<p>又是一个周六，天阴沉沉的，下午舍友都出去玩了……<br>她，一个普通的女孩，来到了这所大学读研。她个子不高，但是学习很努力。她相貌平平，却也有疼爱自己的男朋友。虽然平时实验有些累，也常遭到老板的批评，但是她实验很卖力。一个研一的小女孩，承载着家人的希望，为了自己的理想，奋斗在这所老校，可是，人生总是那么多的意外……</p><span id="more"></span><p>这个周末没有往日的欢声笑语，舍友们都出去了，她心情很压抑，压抑的足够窒息。两点多钟，已经过了午休的时间，楼里又响起了刺耳的装修声，这噪音更加让她烦躁不安，她抓起桌子上的书狠狠地摔在地下，这么多年，一直在读这些所谓的书，可是书又能给我们什么呢？</br><br>天气闷热，知了的声音都那么嘶哑，窗外没有一丝风，一切都像一幅画一样定格在那里，唯一在动的就是她那颗烦躁的心。她从凳子上站起来，来到门外看向楼下，外面零星走过几个人，都脚步匆匆的不知道要去向哪里。</br><br>这个世界太忙碌了，大家都在为生计奔波。一切都显得那么匆忙而混乱，哪里去寻一方净土，拨丝弄竹，醉情山水，过一番无忧无虑的生活。</br><br>读研是自己的选择，可是后来发现坚持下去竟然是那么难。雄心壮志早已经被无穷无尽的实验所磨平，读研也不过如此，读研与自己的想法相差太远。人生是那么的迷茫，未来的路要怎么走。</br><br>学业，感情，事业。每一个都让自己头疼，好像一切都没有想象中的那么美好。突然发生的一件事情把她的整个生活都打乱了。最近她很苦恼，面对着这一切却又无能为力，最终发现自己是那么的无能。</br><br>活着是一件很痛苦的事情，活着需要莫大的勇气，活着要承担太多的责任，活着却又不知为何而活，只是如行尸走肉般的活着，她一直想让自己振作起来，可是她发现一个人真的很难。研究生，大家都有自己的实验，都是各忙各的，没有人去关心自己。这个圈子太冷漠，冷的让人心寒。她是那么的无助，感觉自己活在一片荒漠里……</br><br>天越来越阴暗了，乌云压的很低，还是没有一丝风，她额头上的汗珠终于忍不住寂寞，顺着她的脸颊滑落下来，参杂着泪水一起留到嘴角。这些液体中包含着太多的苦楚与辛酸，此刻终于流了出来。她想放声大哭，却感觉喉头是那么的沉重，沉重的发不出任何声音，沉重的压的心脏无法跳动。她觉得自己要窒息了，武汉的天气似乎总是那么不如人意，闷热的空气仿佛已经凝结，张开嘴使劲的想吸一口空气，一股热浪顺着呼吸道冲入肺中，她的肺快要炸掉了。</br><br>她在宿舍里来回踱着步，站也不是，坐也不行，想要安静下来，却发现身体里每一个细胞都充满着浮躁。她的脑袋快要崩裂了，她大喊几声，可是声音还没喊出口就已经淹没在电钻的嘶鸣声中。想不到自己是那么的渺小，这撕心裂肺的呼叫显得那么的苍白无力。她觉得自己太可悲了，也许自己活着就是一个悲剧。</br><br>突然空气中传来了一个声音：“来吧，我在这儿，只有我能够理解你，来吧……”</br><br>她循着声音传来的方向看去，厕所，是的，厕所里传出的声音。她起身朝厕所走去，阴暗宿舍里的厕所显得格外的阴暗。她感到厕所里阴风习习，这闷热的夏天还有这么一个凉快的地方。她很高兴，抬脚走进厕所，这里面是那么的凉爽，她反锁上厕所的门，静静地靠在门上。一切立刻清净了下来，外界的一切喧嚣瞬间消失的无影无踪。她不在觉得那么心烦，闭上眼，感受着黑暗的恬静。</br><br>她回想着儿时的快乐，回想着从小学到大学的喜怒哀乐和那些酸甜苦辣，人生真的很美好，只是她觉得自己与这些美好无缘。幸福似乎总是别人的，悲伤永远属于自己，这么久以来自己没有一天安心过，没有一夜睡好过。唯有此刻，躲在这小小的厕所里，一切都平静了下来。她只想呆在里面，永远，永远……</br><br>她感觉很疲惫，倚着门她慢慢的坐在了地上，她打开水龙头，任凭水肆意的洒在身上。汗水，泪水，苦水，酸水都流了下来。她睁开眼望向天花板，一根横梁映入她的眼帘。那是一根挂帘子的横梁。</br><br>她静静地看着那根横梁，总觉得横梁是那么的亲切，或许自己前生就是那张帘子，横梁是自己的归宿。她眼睛一亮，冲出厕所。她打开箱子，找出了那条自己最爱的围巾，爱情的围巾，那是男朋友送给自己的生日礼物。她捧起围巾，放在鼻子上深深的吸了一口气，似乎想要把它吸到肺里面去。泪水打湿了围巾，也打湿了那颗脆弱的心。</br><br>她拿着围巾慢慢地走向厕所，围巾的一头在地上滑着，好像这围巾太过沉重，她拿不动了，就在地上拖行着。终于，她又走进了厕所，不对，她忘记了一件重要的东西。她疯了似的跌跌撞撞的冲出厕所，是的，凳子，她需要一个凳子，这是她通往世界尽头的垫脚石。</br><br>她拖着凳子回到厕所，关了灯，锁了门。她吃力的爬到凳子上，将心爱的围巾系在横梁上，最后还打了一个蝴蝶结，算是最后的美丽吧。</br><br>她看了看镜子中的自己，昏暗的镜子里是自己憔悴的面孔，只是这面孔马上就要陨灭了。泪水早已经流干了，心也早已经碎了，此刻的她如同一根木头，麻木不仁了。她眼神呆滞，慢慢地将头伸进那个圈圈，她长舒一口气，闭上眼睛，从此世界与自己无关了。她不敢再多想了，她怕自己想多了狠不下心，她脑袋很乱。</br><br>解脱吧，凳子被她踢到了，几分钟后，她走了，去了那个美丽的国度，据说在那里没有烦恼，没有忧愁。她去了，永远的去了……</br><br>    “哎哎哎，特大新闻，听说了没？死人啦，自杀的，好恐怖啊……”</br><br>    “这事我也知道，听说是个博士呢……”</br><br>“错错错，是研一的，女生，住博园……”</br><br>是啊，一个人的死只能改变自己的命运，却改变不了社会。唯一影响到大家的就是茶余饭后多了些话题，为你伤心的只有至亲之人，人性是冷淡的，最多只会为你感慨几句，接下来生活还是依旧。这种死，好可悲，可悲的有些心凉。如若再给你一次机会，是生着面对，还是死去逃避，你会怎么选？</br><br>安息吧，一切都已经平静了，一路走好……</br><br>在踢到凳子的那一刻，一切思绪都已经停止了。她挣扎着，这也是她最后一次挣扎，但是无论她怎么挣扎都无济于事。正如她曾经不懈的奋斗一样，但是最终她还是改变不了什么，一个人的力量太渺小了。</br><br>她曾经是大海里的一滴水，而如今，她被大海抛弃了，她很孤单，对大海外面的世界感到陌生与恐惧。离开了大海，她不知该何去何从。她想努力的回到大海里，却找不到回家的路。她绝望了，不想再过这种惶恐不安的生活，她要为自己找一个归宿。她抬起头，看见了太阳，她感受到了从未有过的温暖。她闭上眼，任凭身体向太阳飘去…</br><br>此刻，心爱的围巾勒在脖子上，她已经无力挣扎。为何要挣扎呢？从此就要解脱了。她并不知道自己死后会去向哪里，她只知道自己活不下去了。</br><br>大脑渐渐变的空白，她能够从镜子中看到自己那憋得紫红色的脸。这是自己最后一次照镜子，只是此刻，这张面孔已不再姣好，甚至有些恐怖。管他呢，反正只是一副躯壳罢了，今天就要摆脱它，再也没有束缚了。</br><br>她已不再挣扎了，她觉得自己身体变得越来越轻，她飘起来了，飘出了自己的身体。她突然变得很清醒，她看着垂在空中的自己，她突然觉得束手无策。如今，自己再也没有了依托，她不知道接下来该怎么做，也不知道该何去何从。</br><br>她在厕所狭小的空间里游荡着，她想出去，不想再看到自己那副躯体。她怕自己会伤心，却又流不出一滴泪。她伸手去开门，却发现自己根本触摸不到把手。现在自己只是一个魂魄，除了思考，别的什么也做不了。一番努力之后，她彻底崩溃了，她还是那么的无助。她坐在地上 ，呆呆的看着自己的身体，自己的面孔是那么的狰狞，她把自己也吓到了。</br><br>黑暗而狭小的厕所让她感到无比的压抑，如果此刻有人帮自己一把，那该多好啊。就在此时，她听到了舍友们的欢声笑语，是姐妹们回来了。她很高兴，自己不用再孤单了。有人朝厕所走来了，可是门被她反锁了，舍友打不开。她听见舍友敲门的声音，可是她无法回答，她再也发不出任何声音。</br><br>舍友走了，不一会儿她们借来了厕所的钥匙，门被打开了。她欣喜若狂，朝舍友扑去，她想好好的拥抱一下舍友，可是她却看到舍友在尖叫。她才意识到是自己的尸体吓坏了舍友，她好自责，她没有想到会这样。她蜷缩在宿舍的角落里，看着无辜的舍友疯了似的冲出了宿舍。她觉得自己好冷，好孤单，好无助，她好难过，好伤心，却流不出一滴泪。</br><br>不知过了多久，110来了。他们是来为自己收尸的，伴随着自己二十几年的身体就要被运走了。她心中有万般不舍，她多想再回到身体里去，可是一切都已经无法挽回了。警车带着尸体走远了，她多想追上去，可是舍友被自己吓坏了，她不忍就这样离开好姐妹。她要留下来看着舍友好起来。</br><br>宿舍里只剩下她自己，她看着熟悉的一切，万般滋味涌上心头。这世上的一切与自己再也没有关系了。不知道是世界抛弃了自己，还是自己抛弃了世界。总之，现在的自己是孤单的。</br><br>终于，舍友们又回来了，她不知道有多高兴。可是她看到舍友搬着被褥离开了。是的，她们换寝室了。她们都走了，宿舍里只剩下自己和自己的东西，寝室外是那么的炎热，而寝室里却如此的荒凉，她觉得自己快要冻僵了。</br><br>床头斜躺着自己的熊宝宝，她多想自己也变成一个毛绒玩具，那样子就会有人抱着自己，再也不会孤单了。</br><br>夜里，她自己躲在寝室的角落，没有人开灯，她感觉到黑暗的冷清与恐怖，她第一次感到仅仅十几平米的宿舍里是那么的空荡。她就那样一直静静地坐着，她不知道自己应该做些什么，她也不清楚自己的灵魂会生存多久，不知道何时投胎，不知道六道之中自己会去哪一道，她只希望下辈子不要再做人，她甚至想要魂飞魄散。</br><br>夜，太荒凉，太漫长，太孤单…</br><br>这个世界已经没有什么好留恋的了，窗外吹来一阵风，她随风而去，让风带走自己，带走一切…</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>南湖异事</title>
      <link href="/post/ee68.html"/>
      <url>/post/ee68.html</url>
      
        <content type="html"><![CDATA[<p>华农的夜也有寂静的时候，刚刚下过雨的夜，清新的空气中弥漫着一股芳香，考试完了，我一个人在路上走着，享受着这种清新。<br>“同学，你好，我们三个要去南湖，能麻烦你带个路吗？”</p><span id="more"></span><p>我看向声音的主人，原来是三位女生，“啊，那个，你们就沿着这条路一直走就能到南湖的。”</br><br>“天太黑，我们自己不敢去，你能不能陪我们一起啊？”一个女生说道。</br><br>想想考完了也没什么事情，走一遭何妨：“那好吧，既然美女们要求，盛情难却啊，我就送你们一程吧。”</br><br>我一个人 走在前面，她们三个在后面有说有笑的。走到一个拐角的时候，我们看到路边坐了三个女生，眼神怪异的看着我们。我心想她们一定是在笑我一个人被三个美女簇拥着吧。我们没有理她们，继续向前走去。此时有一个女生突然大笑不止，笑声如此诡异。我回身走上前，问她因何发笑。</br><br>那女生笑声瞬间止住了，惊恐的看着我们。另外一个女生讲话了：“我们笑你们的头发呢。”</br><br>我们看向自己的头发，不知因何，头发都飘起来了，弯弯曲曲的。用手把头发缕齐，我们继续赶路。另一个女生在我们身后说话了：“当心哦，前面有鬼啊，哈哈哈……”</br><br>“神经有问题”我有点微怒了，也不管她们在身后肆虐的笑，继续走自己的路，让别人说去吧。</br><br>走了不久，眼前出现了一片坟地，景象很是凄凉，还有几个人在上坟。再看向旁边，那三个女生不知何时赶在我们前面来到了坟地。之前没见过这篇坟地啊，这事情是有些诡异，难不成真的撞见鬼了？心里不禁打了一个寒颤，我赶紧带着三位美女同学离开，不想三位美女发话了：“别走啊，既然来了就坐一会儿嘛，难不成你害怕了？”</br><br>“怕？开玩笑，我是谁啊，我最不怕邪了，坐会儿又有何妨？”我信步走到坟地中央坐了下来。此时，三位美女和路边遇见的那三个女生一齐走到我身边，围了个圈坐了下来。</br><br>我心中纳闷啊，小女生家家的大晚上要在坟地里玩，这还是女生吗？正在我百思不得其解的时候，六位女生突然大声笑起来，笑的是那么肆无忌惮，她们的笑声逐渐的嘶哑起来。我被她们的笑声刺激地头痛欲裂，慢慢的我晕过去了。</br><br>醒来之后，坟地消失了，我发现自己躺在南湖边上，周围一个人也没有。我爬起来朝宿舍走去，不想前面走来一个大个子，我看不清他的脸，只知道他很魁梧。我心中惊恐不安，大半夜的遇到这么一个人，不论是劫财还是劫色，我都打不过他啊。我尽可能的靠近路边，低着头向前走，只希望赶紧的离开这个人。</br><br>在我们擦肩而过的那一刹那，他突然拦住我，伸手便要扯我。我条件反射的转身就跑，不想撞到了一个人。这个人是位老婆婆，佝偻着背，身上披了一个破麻袋，眼睛里闪烁着异样的光芒。我那样狠狠地撞了她一下，没想到她竟然纹丝不动，反而我一个趔趄摔倒在地上。我现在是前狼后虎，只有一条路给我走了，就是跳湖，可是我根本就不会游泳，跳湖是自寻死路。在那危急时刻根本不容许我多想，我从地上捡起一块石头便向那位老女人砸去，在她躲闪的时候，我顺势冲了过去，我疯了似的向前跑，到达一个拐角出，我看见了先前的那六个女生。</br><br>“快跑，有危险”我对她们喊道</br><br>“别跑啊，我们在玩游戏呢”一个女生喊道</br><br>“游戏？什么游戏”我很纳闷，大半夜的玩什么啊</br><br>“我们在玩杀人游戏啊”那女生解释到</br><br>此时，后面的大个子和老太婆出现在女生们身边，只见大个子抓起一位女生，一下子就将她扯成两半。可那女生还在笑，竟然没有死。</br><br>撞鬼了我吧，这他妈什么游戏，诡异而血腥。只见其他的五位女生的面目逐渐狰狞起来，她们慢慢的向我走来，嘴里发出咯咯的笑声。我转身撒腿就跑，可不想被一帮变态女鬼给搞死，传出去多没面子。</br><br>我一直向前跑着，天空又下起了雨，雨水打湿了我的双眼，我感觉自己的腿越来越沉重，就像被灌注了沙子一样。终于我双腿一软，摔倒在地上，我伸出双手，用力的往前爬着。在这肮脏的大地上，我也变得浑身肮脏，谁还管那些呢，能活命就行。后面的笑声越来越近了，我仍旧吃力的爬着，突然一个冰冷的东西砸在我背上，我回头捡起来，那是一颗女生的头，她的眼睛直勾勾的看着我，只见她嘴角微微上扬，一种 似笑非笑的表情。我吓坏了，用力将头颅抛向南湖中。</br><br>头颅落到了南湖中，慢慢的沉到水底。后面的几个女生见此情形都把自己的头颅摘下来砸向我，几个头颅在天空中划出一道道美丽的曲线，可我并没有心情去欣赏，因为我隐约看到那几颗头颅都张开了嘴，露出了阴森的獠牙，看样子是要取我命来的。我在地上翻滚着，以免被头颅砸中。那几颗头颅落到了地上，我方才舒了一口气，庆幸自己没有被砸中。不料想头颅落地后并没有停下，而是在地上滚着，朝着我冲来。我正在诧异，这些头没有脚，怎么会跑来跑去的呢？抬头发现原来是大个子和那个老太婆踢的，脚法是那么的娴熟，搞得我躲闪不及，心中暗暗叫苦。更苦的是身后那几位没了头颅的女生也在地上爬，眼看就要追上我了。我活这么大，从来没有被这么多女生追过，一下子很不习惯，我有些惊慌失措，不知该怎么办了。此时一个东西突然从南湖中跃起，一下子砸到我身上。我一看，原来是刚刚被我扔进水里的那颗头颅，只是现在那颗头颅脸上的肉已经所剩无几，估计是被鱼给吃掉了。看着那血肉模糊的脸，我狂吐不止。丢掉头颅，我继续爬着，现在的我早已经精疲力竭了。这时我已经被她们包围了，只剩下湖边有一个缺口，来不及多想，我顺势一滚，落入南湖之中。我在水里下沉着，也不知道这水有多深，感觉自己沉了好久好久。湖下面有微弱的光芒，我屏住呼吸，顺着光亮的地方看去，湖底下竟然是一片坟墓，正是我之前看见的那一片。这片坟墓很小，只有八座坟。看着石碑上的照片，我发现正是岸边上的那八个人。尽管是在水里，我还是吓出了一身冷汗。她们故意把我赶下水，是想让我也长眠于此吧。不在多想，我挣扎着向水面游去，可是我不会游泳，不论我怎么挣扎，就是上不去。在水底这么久，憋的那口气早已经用尽，情急之下我恼羞成怒。你们让老子死，老子也不让你们好过。我走到坟地中央，将她们的石碑推到，坟墓给挖开。谁知道这些坟墓很深，我打开一个洞后，南湖的水便向洞中流去。水流形成了一个大漩涡，将我旋在其中，我随之也进入了洞中。</br><br>迷迷糊糊中我发现四周一片豪华，简直就是一个地下宫殿，难不成我进入了古墓？也好，随便拿两样东西出去，这辈子就吃喝不愁了，正做着发财梦，被一口水灌入口中，我又晕过去了。</br><br>醒来，我已经躺在了医院，我纳闷怎么会到了医院呢。后来同学解释说我立大功了。我更是糊涂。</br><br>后来我来到了南湖，发现南湖已经干涸了。原来湖底并不是什么古墓，而是一个地下娱乐场所，那天晚上我竟然会把那屋顶搞漏了，想想太不可思议了。</br><br>晚上，我做了一个梦，我梦见了大个子还有婆婆，当然还有那六位女生。她们是来感谢我的。原来那几个女生是被人绑架到那个娱乐场所里逼良为娼的，大个子和那个婆婆是目击者，后来她们都被人给害死了丢在南湖之中。她们那天晚上不是为了吓唬我，而是想借助我帮他们复仇。</br><br>那晚，湖水涌进了娱乐场所，里面的人全部被淹死了。只有我幸存了下来……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中心迷案</title>
      <link href="/post/c52a.html"/>
      <url>/post/c52a.html</url>
      
        <content type="html"><![CDATA[<p>工程中心门前挤满了人，大家面带恐惧，不知在讨论着什么。我走上前去，看见地上有一些血迹，尚未干燥。门卫大爷站在门前，手里拿着一根拐杖，一副诡异的表情，那表情让我觉得很不舒服。</p><span id="more"></span><p>“今天又死了一个，加上昨天的已经连死两人了”，一个男生惊慌地说道。</br><br>听闻此言，大家讨论的更加激烈了。昨天我上课，没有来中心，怎么会死人了呢？看着地上已经变得暗红的血迹，我觉得大爷有鬼！人会不会是他杀的呢？之前没见过他拿拐杖，而且他身子骨那么好，根本不需要拐棍的，莫不成这拐棍就是凶器？</br><br>我走上前看着大爷，只见他眼神躲闪着我，手微微发抖。我问道:“大爷，人是怎么死的，是不是你干的？”</br><br>大爷用颤抖的声音回答道:“我不能说，说了会遭报应的，你们赶紧散了吧。”</br><br>“都已经死了两个人了，你还说什么报应，难道你想我们死光吗？”我怒道。</br><br>大爷慢慢的抬起头，目光看向国旗的方向。我顺着他的目光看去，在挂国旗的屋檐上也有几滩血迹。这是怎么回事？</br><br>“尸体呢？”我问道。</br><br>大爷摇摇头说道:“尸体失踪了。”</br><br>我仔细看着那些血迹，发现有一种动物的爪子印，顺着墙壁爬上楼顶。我赶忙跑到楼顶，却发现这些印迹到了楼顶便消失了。怎么会突然消失了呢？难不成它跳楼了？</br><br>我对大家说:“我怀疑这里有某种动物出现，那两位同学可能是被这种动物弄走的，大家分头找一下，看看有什么发现。”</br><br>说完我便在中心周围仔细搜寻着，天已经慢慢的黑了，我顺着中心门前的马路走着。突然发现一只动物从我面前飞快的跑过。我拼命地追上去，最终还是跟丢了。正在我懊恼的时候，我发现面前有一座房子，高大的黑漆漆的两扇木门，显得那么庄重，却又那么诡异，让我心里充满了恐惧和不安。</br><br>我轻步走上前，慢慢的推开木门，只听木门发出吱吱呀呀的声音，在寂静的夜里显得那么刺耳。门里面漆黑一片，什么都看不清。我迈过高高的门槛，打开手机来照明。在微弱的光线下，我看到脚下长满了杂草，草没过了我的膝盖，一股寒意从脚下传来。五月的武汉热的要命，这宅子里为何会如此阴寒。我继续向前走着，看到前面有几个屋子，窗户都是纸糊的。我走进第一间屋子，看到有一些东西在发光。仔细看去是一排牌位，每个牌位上面写着一个名字。这些名字不就是中心里的那些人吗？！排在前面的正是失踪的那两位同学。我浏览着这些牌位，里面竟然也有我的名字。第三位，我排在第三位，难不成下一个遇害的人会是我？</br><br>我脑袋大了，感到一阵嗡嗡作响，我把所有的牌位给摔碎了，我想毁掉这一切，或许大家就会平安了。事后，我转身出门，想离开这个诡异的地方。我一股脑的冲出了那扇黑门。总算是安全了，我长舒了一口气。突然，我发现自己变得越来越轻。我的身体不受自己控制了，我在宽阔的马路上飘来飘去，我的脚早已经脱离了地面，我不明白这是怎么回事。一阵风吹来，我顺着风的方向飘到了工程中心。</br><br>中心门前围满了人，大家不知道在讨论着什么。我借着风飘上前，看到地上侧躺着一个人，隐约能够看到那人脸色苍白，毫无血色。在他手里握着一只大老鼠。那老鼠很硕大，尾巴是体长的五倍多。</br><br>“好大的老鼠啊，毛都是棕色的，尾巴这么长，是变异的吧。”一个男生一边翻动着老鼠的尸体一边说道。</br><br>那老鼠被他翻了个四脚朝天，它的肚子上满是肥肉，看得我想吐。突然，老鼠的肚子裂开了，里面滚出两个球状的东西。仔细看，是两颗人头，这不正是失踪那两个同学吗？原来是被这巨鼠给吃了。在场的同学无不呕吐，大爷瘫倒在地上，眼神里充满着绝望，嘴里不停地念叨着“完了，全完了…”</br><br>我想，难道完了就是他一开始说的要遭报应？再看向那些同学们，这会儿已经吐干净了。他们又讨论开了。其中一个人说道:“你们认识地上躺的那个人不，老鼠是他抓的吧？”</br><br>一个胆大的同学走上前，把尸体翻过来。我只觉得那人好面熟，就是想不起是谁。</br><br>“他不是三楼实验室的吗，就是刚刚让我们分头行动的那个人。”一人喊道。</br><br>是啊，怪不得那么面熟，那人不就是我自己吗？看来毁了那些牌位也是没用的，我不清楚自己是怎么死的，刚刚我只是闯进了那座宅子里，摔碎了排位又夺路而出，并未感到什么异常。我也不记得自己去逮过什么老鼠，刚刚的确有看到一只动物从面前掠过，但我并未看清那究竟是什么，更不用说去打死它了。回忆着刚才的那些牌位，牌位的摆放顺序便是大家的死亡顺序。昨天死了一个，今天死了两个，这里面是否隐藏着什么规律？每天的死亡人数可能是等差序列，也可能是等比序列，或者是完全随机的，只待看明天死几个人了。再看大家的死亡方式，前两位同学的头颅都被巨鼠吞到了肚子里，而我的尸体却是完整的，不知道是巨鼠的肚子已经装不下第三个人头了，还是它还没来得及下口就死掉了。如果这只巨鼠是元凶的话，那么后面的同学应该会安全了，但我总觉得事情没有那么简单，因为这巨鼠死的太蹊跷了。</br><br>这时候我听到了一位同学叹息了一声说道：“感谢刘同学，杀死了凶手，我们终于安全了，警察已经快到了，留下两个人守着尸体，其他人早点回去休息吧。” </br><br>听闻此言，大家便各自散了，虽说中国人喜欢看热闹，但是眼前的场景真的是称不上热闹，一人一鼠两具尸体，还有两个被胃液腐蚀的人头，遍地污血，这是任何一个正常人都无法忍受的。而我所担心的是刚刚那个男生的话语，他以为巨鼠死了大家便安全了。直觉告诉我他们仍处于危险之中，身处险境而不知，这是极其危险的事情，但我灵魂脱离了肉体，根本没办法告诉他们，只能干着急。虽说生死有命富贵在天，但我总不希望眼睁睁的看着无辜的人被害，我记得第四个牌位上的名字是隔壁实验室的小张，而他此时正和另外一位同学留在原地看守我的尸体，这小子平日里胆子极大，总喜欢看些血腥的电影。此前，他看到面前的血腥场景时也忍不住吐了很久，但毕竟是胆子大，最终他还是要求留下来为警方保护现场。</br><br>我飘到小张面前，尝试着喊他、打他，但是他完全没有反应，我试着吹一阵阴风，因为电影里鬼魅出现的时候总是伴随着阴风阵阵，可是我没有肺，一口气儿也吹不出来，才发现电影里那些都是骗人的。我尝试着附身，可是他阳气太盛，我无能为力，心想不是老子不救你，而是我已经黔驴技穷了，看来只能眼睁睁的看你下来陪我了。</br><br>不久，警察来了，经过一番询问和拍照后，我的尸体被带走了。我左右为难，我是留在中心“保护”小张呢，还是追随我的肉体而去？也不知道我的尸体会被冷藏到哪里，要不我先去追踪肉体，一会儿再飘回中心？这么短的时间里应该不会再死人了吧。想到这里我便不再犹豫，于是追上了警车，一路飘到了警局地下室里的尸体冷藏室。我的尸体暂时被冷藏了，看着周围还躺着几具被白布蒙住的尸体，不知道长得什么样子，是不是死的很恐怖。遮盖尸体的白布是一次性的，还是反复利用的？因为我发现我的尸体也被盖上了一块白布，希望是新的，否则容易交叉感染，污染了肉体倒也没什么，万一灵魂因此掺杂了不纯洁的东西就麻烦了。一边想着，一边在冷藏室里转了一圈，最终飘到自己的尸体面前默哀了两分钟，做罢便原路飘回了中心。</br><br>此时，中心大院里已经空无一人，所有人员都被驱散了，说是怕再发生意外，中心暂时封闭，只留下门卫大爷看守。我心想这下糟了，不知道小张怎么样了，虽说我们平时见了会打招呼，但是并没有其联系方式，也不知道他这会儿去哪了，能不能活过今晚。我飘到楼顶，坐在琉璃瓦上思索着，为什么会突然死人呢？我在中心呆了半年多，一直未发现那座宅子，也并没有听别人说起过，今晚黑灯瞎火的也不知道我怎么就走了进去。宅子里的一切都是那么的真实，不可能是幻觉，刚刚摔牌位时那清脆的响声听起来那么真切。我记得宅子里并不只有一间屋子，而我刚刚只进了第一间，由于太过惊恐，我摔完牌位便急匆匆的离开了，并没有去其他房间查看。想到此，我一下子兴奋起来，老子现在只剩魂魄了，也算是牛逼哄哄的鬼，这便去二探鬼宅，将事情查个水落石出。</br><br>我按着之前的路线寻去，许久没找到宅子，心中纳闷儿，诺大的宅子，怎么会突然消失呢？难不成那是座违规建筑，被拆迁队拆了？就算是拆了也不会不留痕迹吧。我又转了几圈，依旧没有结果，便只好又回到中心。见门卫室还亮着灯，我便飘了进去，大爷一个人坐在桌子旁，满脸愁容。我飘到他面前，随口喊了一句：“老头儿”。本以为他听不到，谁知道他猛然抬头，打量着四周，似乎在寻找声音的来源。尼玛，这老头能通灵？怪不得今天看他神秘兮兮的，果然有问题。</br><br>“你为何要杀死这些无辜的学生？”我继续问道。</br><br>老头儿似乎明白了声音的主人是谁，答道：“不是我杀的，我也是受害者。”</br><br>我大怒，说道：“那你怎么还活得好好的？！”</br><br>老头儿并未回答我，而是摇了摇头，沉默少许后说道：“你跟我来”，说罢也不管我答不答应，起身便向中心外走去。我不知道他是否能看得到我，便一直尾随在他身后打量着他，平日里也没见他这么牛逼啊，只知道他寡言少语，没想到是个高手。不一会儿他停住了脚步，我一不留神撞在了他身上，当然一个魂魄没有多大的重量，根本就撞不倒他。我抬头看向前方，发现面前矗立的正是那座鬼宅。</br><br>“你怎么找得到这个地方，我刚刚找了很久都没有找到”，我好奇的问道。</br><br>老头儿摇了摇头，叹息道：“只有将死之人才能走得到这里，死后是找不到的。”</br><br>我仔细品味着他的话，难怪我平时并未发现这座宅子，今晚走进这里是因为我是一个将死之人，而死后便也回不到这里，若不是大爷带路，怕是再也找不到这个宅子了。想到这里，我脑袋里闪过了一个想法，将死之人才能找到这里，难道大爷要死了？！</br><br>还未等我开口，大爷便说道：“我只能帮你到这里了，你进去吧，好自为之！”</br><br>说罢，他便转身而去，消失在了黑暗中。我努力让自己平静下来，从门缝中飘进了院子里。我仔细地打量着四周，院子不是很大，但院墙很高，黑门对面有三间屋子，左手边有一间小屋子，右手边只有一堵墙。我刚刚进去的是正对面有数第一间屋子，里面一张大黑桌上摆满了几十个牌位，除此便无他物。这一次我直接进中间那一间，门是锁上的，当然我不需要撬锁，依旧是从门缝中飘进去。屋内漆黑一片，如今的我再也不能借助手机照明了，我一直前行，本想会摸到什么东西，然而无论我向前走多远，面前没有任何障碍物。我在屋子里的各个方向都走过了，奇怪的是这里面好像漫无边际，任何一个方向都走不到头，如同踏进了无边无际的宇宙空间一般，所不同的是，这里没有一丝光线。我被黑暗吞噬了，没有方向感，这里像一座迷宫将我困在里面，虽然没有繁琐的岔路，但无限大的空间足够耗损人的体力与精力。</br><br>尝试许久无果，我不再探索，一屁股坐在地上，心想算了吧，反正都已经死了，还那么拼干嘛啊，我就贪玩一下，给活人留条活路吧。心如死灰是描述我当前状态最好的词语了，我闭上眼睛，尝试着让自己的心静下来，这个空间无比黑暗，没有声音，没有气流的变化。黑夜给了我黑色的眼睛，我才发现没有光的时候眼睛是寻找不到光明的，哪怕你有再灵敏的感觉器官，当外界的所有元素消失以后，这些器官便会形同虚设，更确切的说是它们没有用武之地。我已经累了，脱离了肉体，我的灵魂显得越发的脆弱，仿佛分分钟就要溶解在这黑暗之中，想到此我一下子兴奋起来，想要了解某种事物，那就要尝试融入其中，而我要走出这漫无边际的黑暗，那我也要成为黑暗元素之一。人体是由细胞组成的，而灵魂肯定是由某种元素组成的，都说不识庐山真面目，只缘身在此山中，如今我也看不透这黑暗，也是因为我身处其中，倘若没有一个山外人来带我出去，那么我只有尝试着变成黑暗的一份子。相信运动是绝对的，这黑暗也不例外，虽然表面上看起来安静无比，但肯定存在着不为人知的运动规律。我这般冥想着，渐渐地感到灵魂在分解成无数的小颗粒，直到最后我失去了知觉。</br><br>本以为就此被黑暗吞噬了，可不知过了多久，我醒了过来，发现自己躺在第三道门的外面，我终于出来了。看来第二个房间与第三个房间是连通的，刚刚在屋子里感到自己已经渐渐消逝，不料天不亡我，最终还是把我带向了光明。我不敢再踏入这第三道门，生怕不会再有这么好的运气。院子侧面还有一座屋子，不知道里面会有什么，我经过一番心理斗争，终于决定进去一探究竟，都说好奇害死猫，但好奇心总是难以克制的，反正我已经这样了，还怕什么呢。</br><br>心里想着便向侧屋走去，面前是一道全封闭的木门，我从门把手的缝隙中钻了进去，这间屋子里面竟然有一丝光亮，房间并不大，只是阴寒无比，彻骨的冷。面前是悬在空中的三具尸体，两具无头尸和一具全尸，我心中暗叫不妙，那第三具尸体正是门卫大爷！刚刚便听他说，只有将死之人才能找到这座宅子，当初便有不祥的预感，没想到他真的死在了这里，他一死，很多线索便断掉了，真后悔来之前没有向他问清楚。另外两具无头尸应该是先前死掉的两位同学的，我比较好奇的是为何只有我的尸体不在这里，难道是因为警察抢先一步将我的尸体运到了警局的冷藏室？那么另外三个死者的尸体是被谁悬挂在这个侧屋里，这里面的场景很像是在举行某种仪式，可是到哪里去找凶手呢？若说这一切是人为的，总觉得发生的很多事情是人力所不能为的，比如说那只死去的大老鼠怎么可能囫囵吞下两颗人头，还有宅子里的第二间屋子是那么的诡异，科学难以解释。此时我更相信这一切是见鬼了，不知道是哪路小鬼儿出来找替死鬼。</br><br>我继续在屋子里查看，在墙壁上发现一个一元硬币大小的洞，我凑上前想看个究竟，发现洞里面不停地向外吹着寒气，怪不得这个屋子里这么冷，原来如此啊。我向洞的那边看过去，却只看到来了一片白茫茫，仿佛那边是无边无际的白。真是见鬼了，刚才是无边无际的黑，这会儿却完全反过来了，我倒要到那边去一探究竟！不再犹豫，我便要从洞中钻过去，可我面对着的是洞中吹出来的强大的气流，没有肉体的力量，我的魂魄显得手无缚鸡之力，尝试了许久，每次都会被气流给吹回来。</br><br>挣扎无果，垂头丧气地倚靠在墙角。老天总喜欢撩人，当你努力拼搏的时候它总是给你设置千难万阻，消磨你的意志。而当你要放弃的时候，它便给你开一扇侧门，给你继续闯下去的希望，然后又是一路的磕磕碰碰，知道它觉得玩腻了便不再管你死活，那么你才可以从夹缝中求得一丝生机，探得一条通往成功的宽广大道。</br><br>就在我不知所措，心灰意冷的时候，墙壁上的小孔中透过万道光芒，将整个房间照亮。散发那万道光芒的是大大小小的陨石，是纵横交错的岩浆，有着比太阳更耀眼的光芒与更高的温度。未来得及反应过来发生了什么事情，我的魂魄便被光芒所化，带入小孔另一面的房间中。</br><br>光束渐渐地减少，光亮也慢慢变暗，最终恢复了正常的亮度。依旧是晚上，房间中悬挂着节能灯，只是眼前的场景有些熟悉。一种久违而又熟悉的气氛笼罩在身边，若是还有肉体，还有毛孔的话，这种感觉应该更好一些。这是家的感觉，温暖、温馨而又那么静谧。</br><br>小孔如同空间传送机一般，将我从老宅传送回了老家，只是家中未见父母熟悉的面孔，而是空荡荡感受不到一丝呼吸的气息。房间不大但很整洁，无一丝灰尘，我在房间中飘行，突然被一个巨大无比的黑色棺材挡住了去路。这副棺材的长宽高远远大于门的宽度，我无法理解它是怎么被搬进屋子里来的，而且我从没见过普通人家用这么大的棺材。能用这副棺材的最起码也要是牛逼一点的王侯将相。</br><br>想不明白，也懒得多想，这一天下来，已经耗费了太多的精力，与其在这里猜测，还不如直接看个究竟。想罢，我便顺着棺材侧壁向上飘去，然而棺材却已经插入了天花板之中，我只好顺着屋顶的缝隙继续向上飘去。夜空中没有闪亮的星，只有一轮残月时而躲在云后，时候透过云的缝隙洒下一丝寒光。漆黑的棺材表面光滑，反射了淡淡的月光，虽然在黑夜中，却也看得清其轮廓。</br><br>飘到屋顶才知道，这副棺材远比想象中的要大，其轮廓是一个倒立的梯形，下面窄，上面宽，向下插入屋底，向上直插云霄，看不到边际。看到这情形我才明白，棺材不是被搬进屋子里的，而是从天而降，落入房中。这么大的棺材，可以装得下千军万马，谁能够打造出这么大的棺材，若是放入大海，怕是可以作为航空母舰了吧。只是这么大的吨位，从天而降落入屋中，却只是把屋顶砸了一个窟窿，而房屋却没有倒塌，甚至屋子里的摆设都没有乱，这是极为不可思议的事情。</br><br>想不明白就不要去想，我顺着棺材外壁飘着，终于在其一侧看到了一个天窗。这个天窗应该是留给灵魂出入棺材的通道，天窗内有亮光点点，如同天空中眨眼睛的星星。我飘入天窗，四处望去不见边际，俯身映入眼帘的是阡陌交通，是楼房林立，是昏黄的灯光，是华农的夜景。</br><br>棺材之外是家乡，棺材之内是校园，棺内棺外隔绝了两个世界，那么连通两个世界的通道便是老宅墙壁上的小孔。</br><br>门卫大爷说只有将死之人才到的了老宅，是否表明只有死去才能离开学校而返回家乡？听起来很扯淡，返乡所需要的只是一张车票而已，而不是什么生死契约。我仔细回忆着一天中所经历的离奇事件，一道闪电划过脑海。数目、是人数的问题，老宅屋子里摆放的牌位有6个，也就是说只需要死6个人，只要死亡人数够了，其他人便不再需要付出生命的代价才能离开学校。这便解释了为什么每年学校里总要死几个人，而假期回家的学生都安然无恙。谁生谁死是老宅的选择，或许是有某种规律，或者单单是随机抽签，总之需要小部分人的牺牲来换取大部分人的安全。</br><br>还有一点想不明白的是以前死亡的学生都是分布于不同的院系、不同的楼，为什么这一次么牌位上所刻的和死去的都是中心的人。冥思许久，我或许猜到了原因，难道是公交站的搬迁引起的？公交站由原来的正门搬到了新大门，那么新大门便是回家的必经之路，而中心离新大门最近，自然最容易受到老宅的迫害。</br><br>唯一得不到解释的一个问题是老宅是什么，它是由人或其他力量控制的还是自主运行的，它为什么要索命，是血祭还是其他的什么仪式？活人只有在临死前才能进入老宅，那么想破解这些谜团是活人最起码是普通的活人所做不到的。普通的活人做不到，不是还有风水先生吗？</br><br>“你想到的其他人早已经想到了”，一个声音从背后传来。</br><br>回头，发现是门卫大爷。看来他真的知道内情。</br><br>“到底是怎么回事？还要死多少人？！”我愤怒的逼问到。</br><br>大爷轻叹一口气，摇头说出了事情的真相。</br><br>华农坐落于南湖边，狮子山上，是一处风水极佳之地。然而随着城市发展，湖水污染、山上生态遭到破坏，工程建筑挖坑填埋等破坏掉了原来的风水。此后校园里便接二连三的出现怪事，每年总会有几个学生异常死亡。开始都觉得是自杀或者接触到有毒试剂而患病，可后来每一年死亡的人数都在增加，上面的人发觉不对，便请了风水师来学校勘探。</br><br>一位风水师在校园中走了一圈说学校正门是老校门，不宜设立公交站，会打搅到一些古老的东西。于是公交站被搬迁到了新大门斜对面，谁知这次搬迁，工程中心的师生成为了受害对象。如此说来，真正影响华农风水的不单单是公交站，必然还存在另一处或多处不良格局。</br><br>“现在有没有搞清楚到底是哪里出了问题？”我焦急地问道。</br><br>“后来，学校又请了几位风水师过来勘察，经过研究，他们提出是学校修通往北门的马路时，将狮子山切为两段，将原来浑然一体的龙脉切断了，从而导致整个学校的风水格局变坏，正气随着龙脉的斩断而变弱，煞气却一日日的消长起来，于是各种妖魔鬼怪出来作乱，以致连连发生命案。”门卫解释道。</br><br>“龙脉断了就连起来啊！”我像个神经病般认真的说道。</br><br>“这毕竟是个大工程，而且被传出去，相关领导要被批判搞封建迷信”，大爷摇头道。</br><br>我有些恼怒，心想为了全校师生的安全，总要有人挺身而出来背这口黑锅啊，为了人民群众搞封建迷信的官是绝对的好官，只要群众过得好，还在乎那些个人的生前身后名作甚？</br><br>门卫似乎看穿了我的心思，苦笑一声说道：“放心吧，校里已经有领导挺身而出，愿意背这口锅。工程图纸已经绘好，相关人员已经在联系施工队，估计要不了一个月就可以动工了。只要龙脉接好，那老宅便会被镇压住，不会再害人了。”</br><br>我心中大喜，转而为悲。悲的是我还未等到那一天便已经死了，悲的是施工完成之前的这段时间内剩下的几个人很有可能还会死去。然而既然已经找到了原因，总算是有希望了，只要有希望就好。活着的人有生的希望，死去的人有再生的希望。学校的事情已经有人去办，是时候去收拾我自己的事情了，我的尸体还在警局，那口大棺材还压在我家屋顶，这些屁事到底谁来管？我的发表文章，还有毕业论文，谁来管？！</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>归乡</title>
      <link href="/post/89a4.html"/>
      <url>/post/89a4.html</url>
      
        <content type="html"><![CDATA[<p>走在村子的路上，一切都是那么的熟悉，家的感觉总是那么温馨。长年在外，距离再远也阻断不了对家的思念，因为我们的根扎在大山里，每远离家一步，心便会被拽疼一下……</p><span id="more"></span></br>突然好想家，于是我便回来了，夕阳下的山路别有一番韵味，我慢慢的走在这乡间小路上，体验着“鸡鸣桑树颠，狗吠深巷中”的感觉。停下脚步，俯视着山下的小村庄，目光巡视这那座我长大的小房屋，心中一阵激动，撒开腿便向山下冲了去，恨不得一步就踏入家中……</br>前面有一拨人，哭哭啼啼的向山上走来。走近方才看清楚，他们用架子抬着一位姑娘，这姑娘穿着一件绿色的衣裳，苍白的脸上描了一层鲜红的粉底，看起来是那么的诡异。她已经死了，这姑娘我认识，村里西街的，比我大一级，怎么会死掉呢，还打扮的这么离奇古怪。再看着眼前的这些人，哭的那么假，好像是故意哭给我看的，他们直勾勾的看着我。我被他们看的不禁打了个冷颤，那种眼神无法形容，根本不像是人的眼神。我顾不了那么多，低头快步的走下山去。回头，他们还在看着我……</br>终于回到家了，家里门开着，却没有人在，可能是出去了吧。我走进里屋，屋子里密布着蜘蛛网。突然我看见一只大蜘蛛从屋顶垂下来，它的嘴里含着一个人，天哪，这不正是妻子吗。我急的手足无措了，我是最怕蜘蛛的，何况会吃人的蜘蛛呢？正在我不知所措的时候，门外飞来一只虫子，仔细一看，是一只巨型蚊子。我想完了，这蚊子恐怕要喂蜘蛛了，没想到那蚊子飞向蜘蛛，一会的功夫把蜘蛛吸干了。妻子获救了，她从蜘蛛的嘴里掉了下来，摔到地上。我赶忙过去扶她，就在我看向她的脸的时候，我愣住了。苍白的脸上扑着一层鲜红的粉底，她阴笑着看着我，嘴里嘟囔着：“来吧亲爱的，让我给你化一下妆，完了我们回娘家”</br>我一下子挣脱开她的手，拼了命的冲向屋外，不想一下子撞到一个软软黏黏的东西，仔细一看，是一张大蛛网。网四周爬来好多人面蛛身的怪物，那些脸都是村民的脸。这到底怎么了，村子里发生了什么，不等我想明白，那些怪物已经把我包围了，这时妻子爬了过来，我想这下子有救了，她微笑的看着我，许久，她在我脖子上轻轻地吻下去……</br>家乡，传说，死了，还是活着，一切都湮没了……</br>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>亦生亦死</title>
      <link href="/post/775b.html"/>
      <url>/post/775b.html</url>
      
        <content type="html"><![CDATA[<p>结束了一整天的学习，如往常一样，22:20准时离开北合堂。<br>漫步于在马路之上，感受着初冬的夜，昏黄的路灯，悠长的身影，心头别有一番滋味。没有行人的路上静的很，唯有桐叶在风中婆娑。仰望星空，我深深地陶醉在这如淡酒一般的夜。</p><span id="more"></span><p>回到寝室，刚刚进门便大吃一惊，屋子里乌烟瘴气，一群人正围坐在地上打牌。还以为自己走错了宿舍，回到门口仔细一瞧，没错啊，正是510寝室。</br><br>见大家玩得不亦乐乎，我便上前围观。不料看了没多久，他们不知为何而吵了起来，紧接着便动起手来。</br><br>正在我莫名其妙的时候，老二在身后用床单勒住了我的脖子，把我拖到了阳台上。我好不容易挣脱开来，反身将他按住，然后用床单把他绑在一张椅子上，顺手将椅子仍下阳台，老二一个趔趄没有站稳，随着椅子摔下楼去。</br><br>此时背后又扑来两人，正是老三与老四，我身子一低，他俩扑了个空不小心也坠下楼去。我趴在阳台上接着灯光看着楼下的三具尸体，心中仍疑惑不解，好端端的，他们为何要对我发难？而现在，出了三条人命，我脑袋一片空白，早已经不知所措了。</br><br>夜已深，大家都熟睡了，没有听到楼下的动静，我觉得精神恍惚，便倒在了床上。宿舍现在只剩下三个人了，还有三张空荡荡的床。平时兄弟们亲如一家，而如今，宿舍里却是那么的凄凉。</br><br>看着老五和老六熟睡的样子，都显得那么平静，或许死几个人对他们来说并非什么大事情。好吧，我很疲惫了，一切待明天再做处理吧，是坐牢还是死刑我都认了，总之现在我需要好好地睡一觉。</br><br>恍惚中，我回到了老家，青山绿水红瓦房，田间的小路，深巷的狗吠，多么美妙的小山村。</br><br>每当疲惫的时候，总不忘回到这片生我养我的土地来汲取力量。走在村子的小胡同里，我打量着熟悉的一砖一瓦，一草一木。巷口这棵大杏树也不知道活了多少个年头了，从我记事起它就一直矗立在这里，现如今它的枝叶依旧是那么繁茂。</br><br>正当我走过杏树的时候，突然有一个东西映入我的眼帘，是什么呢？我转回身，侧头向杏树上望去。茂密的枝叶间露出一双人的脚，再仔细望去，竟是一具男人的尸体。他吊在杏树上不知道有多久了，尸体已经腐臭了，怎么没人发现呢？管他呢，先回家再说吧。</br><br>爸妈见到我很惊讶，问我怎么不在学校里准备考研，却突然回到家。是啊，我也搞不清楚自己为何会突然就回到了家里呢？思索了许久，我想起来了，我原本在宿舍里，后来大家打架，三个舍友摔死了，然后我就上床睡觉了。明白了，我一定是在做梦，一定是太想家了。</br><br>    “爸、妈，我这是在做梦呢，是我太想你们了，所以在梦中前来看望你们。”我尽量地想解释清楚。</br><br>    “是真的也好，是梦也罢，你赶紧回学校吧，你不是忙着报学校吗？别耽误了。”妈妈说道。</br><br>    对呀，得赶紧回学校呢，没来得及坐下，我慌忙跟爸妈道了别便赶回了学校。路上我又经过了那棵老杏树下，只是那具尸体已经不见了。幻觉，都是幻觉！</br><br>回到学校，见班里的同学都在忙着准备去报考的学校参观，我也赶忙回宿舍收拾东西。刚进门，我惊呆了，摔死的那三个兄弟竟然活生生的站在我面前，我脑袋彻底乱了，搞不清楚到底是他们活了，还是我也死了。</br><br>“你们——没事吧？”我试探的问到。</br><br>“什么事？你脑袋坏了吧！快点，人家都去参观学校了，我们也得抓紧时间。”老二说道。</br><br>是啊，他们怎么会死呢？可能是我又胡思乱想了。我简单地收拾了一下行李便出发了。我报的那个学校的名字很拉风，叫“魔窟学院”，这么奇怪的名字一下子就把我吸引住了，这么恐怖的名字，当然也只有我一个人敢报了。嗯，一个人旅行，也不错。背着行囊，踏着夕阳……</br><br>也不知道走了多远，我看到前面有一大片草地，很是美丽。远方有一座城堡，我想那一定就是魔窟学院了吧。我抑制不住心中的激动，撒开腿就向前跑去，不料半路冲出一个30 左右岁的男人来，差点儿把我撞倒。</br><br>“你是去魔窟学院的吗？”那人问道。</br><br>“对啊，前面那座城堡应该就是吧？”我问道。</br><br>“那个不是，我是学院研招办的李老师，你跟我走吧，我带你去。”那人说道。</br><br>我跟在他后面走着，拐了几个弯，那人便停了下来，他告诉我已经到了。我四周打量了一下，一脸茫然，这里什么也没有啊，明明就是一片空地。他看出了我的疑惑，笑着弯下了腰在地上掀开了一块草坪，下面竟然是一个洞。</br><br>“好了，我们下去吧，学院就在下面。”李老师笑道。</br><br>我心想，也是啊，魔窟学院嘛，建在洞里也名副其实，越来越觉得这所学校有个性了。我见他跳了下去，我也跟着跳了下去。</br><br>真没想到这个洞那么深，也不知道过了多久我才着地。这哪里是地啊，明明就是一个泥潭，我整个人都被淤泥给浸没了。我挣扎着爬了起来，头上、脸上都是泥。</br><br>放眼望去，整个洞是长方形的，五六米宽，十几米长的样子。两侧摆满了床，都淹没在淤泥里，每张床上都躺着一个满身淤泥的人，个个都死气沉沉的，看的我好不压抑。这哪里是学校啊，这根本就是一个贫民窟，就算是贫民窟也没有这么变态的啊，在暗无天日的狭小的洞中也就算了，还要整天泡在肮脏的淤泥里，在这样的环境中如何能够生存呢。</br><br>我在这里一分钟也呆不下去了，便欲离开，可是我环顾了一圈，并没有发现出口，这儿似乎是一个封闭的空间，而那李老师也不知了去向。我只好找旁边的一个人打听出口，可是他的回答让我匪夷所思。</br><br>他说这洞里是一个活人坑，里面的人都是吸血鬼储存的食物。洞里的这些淤泥其实都是被吸干了血的尸体腐烂而成的尸泥，在尸泥中浸泡过的人的血液会更加的营养美味。地上有一座城堡，里面住着鬼王，每天夜里他都会派手下来选取一个人作为他的晚餐，只有在那个时候，这个洞才会打开一个出口，但是有吸血鬼把守，根本就逃不出去，所以只要被抓进来就只有等死了。</br><br>看着他那严肃的表情不像是在说谎，再加上我现在的处境，我也就有八九分相信他的话了。</br><br>我尽量平复自己烦躁的心情，越是遇到威胁越要保持清醒。我现在唯一能做的就是养好精力，等待吸血鬼来提人，以伺机逃跑。</br><br>不知过了多久，头上打开了一个洞口，月光从中洒落下来格外耀眼。这时候几个吸血鬼从天而降，我慌忙屏住呼吸，整个人躺入尸泥之中，待他们选好了人离去，洞口正要关闭之时，我随手将自己的电脑包扔了上去。电脑包正好卡在洞口中间，见吸血鬼已走远，我便从洞口钻了出去。这鬼地方，实在太诡异了，我转身便跑向来时的方向。</br><br>路上遇见了一处餐馆，这时才觉得肚子已经在不争气的叫了。也顾不得身上脏兮兮的，我大步流星地冲进了餐馆。老板娘是一个老太太，很和蔼的样子。餐馆中整齐的摆放了几张桌子，一边有三个女生正在吃饭，时不时的看我一眼，不知道在讨论着什么。我想一定是我身上的尸泥太脏了，得了，我还是出去吃吧， 以免影响人家的生意，我叫了一份炒面带走。</br><br>拿着热腾腾的炒面，我来到路边的一棵树下，正打算饱餐一顿。这时从对面走来了两个男生，其中一个跟我搭话，另一个趁机抢走了我的炒面，然后他们俩转身便跑。我一怒之下紧追不舍，可是追着追着便不见了人影。</br><br>我停下脚步，喘着粗气，心中越想越气，抬起脚便踹向路边的老树。谁知道这一脚踹下去，树干上出现了一道门，门下面是台阶。我顺着台阶走下去，这里面竟然是一处地下酒吧，真的是歌舞升平，热闹非凡。</br><br>抢我面的那两个男生也在里面，他们见了我依旧是逃跑，我自然也不肯放过他们，便随着他们在酒吧里绕圈子。这酒吧也不知道有多少层楼梯，我完全被绕晕了，那俩小子早就逃之夭夭了。</br><br>我坐在楼梯上回想着发生的一切，感觉很玄幻，发生的每一件事情都那么离奇，离奇的像是在做梦一般。正想着，从楼下走来一人，这不正是那个研招办的李老师吗？ 不对，什么研招办的，我看是招魂 索命办的吧，把我骗去给鬼王当晚餐，定不是好人！！！</br><br>“你到底是什么人？”我问道。</br><br>“呵呵，告诉你也无妨，将死之人，让你死的明白点吧。我是鬼王，今晚你就乖乖的做我的晚餐吧。”李老师说道。</br><br>我心中大惊，坏了！撞见吃荤的了。再仔细瞧瞧，酒吧早已经消失不见了，我正身处那座城堡之内。鬼王一边得意的笑着，一边一步步地向我逼近，我转身就朝着城堡的大门跑去。鬼王似乎很自信我这是徒劳的挣扎，在我后面不紧不慢地跟着，估计是在享受那种 追捕猎物的快感吧。</br><br>我连滚带爬的好不容易逃出了这座古怪的城堡，回头望去正好跟鬼王碰了个照面。我没有心理准备，经他这么一吓，我一跟头栽倒在地上。此时我双腿发软，根本就站不起来。罢，人生自古谁无死，死的窝囊也是死，我索性闭目待毙。</br><br>良久，并没见有什么动静，我睁开眼睛，只见鬼王背对着我，眼睛凝视着远方。我很好奇，也顺着他的视线看向远方，只见城堡的上空有一团黑压压的东西，越积越多，在月光下显得格外诡异。慢慢的，那团东西形成了一股旋风，比城堡还要高。</br><br>旋风一点点的逼向了我们，鬼王显得很恐惧，也不管我了，径直一个人跑了。谁料那旋风也随着鬼王跑，只见它们不停地围着城堡绕圈子，最后鬼王被吸进了旋风之中，过了一会儿旋风便消失了。</br><br>我悄悄地摸索过去，藏在一个隐蔽的地方观察。此时鬼王早已经倒在了地上，一边痛苦的叫喊着，一边翻滚着。他的身上密密麻麻的都是白色的蛆虫，原来刚才那股旋风是由无数的苍蝇聚集在一起，它们在鬼王身上产了卵，卵瞬间孵化出蛆虫，蚕食着鬼王身上的腐肉，真是一物降一物啊，想不到是我平时最讨厌的苍蝇救了我一命，我打内心里感激它八辈的祖宗。再看向鬼王，他早已经没了动静，地上只剩下一具白骨，那些蛆虫都变成了苍蝇飞走了，我深深地向它们敬了一个礼。这地方阴森森的，我得赶紧离开。</br><br>夜色越来越深了，月光如水一般洒在大地上，我失魂落魄的走在这条夜路上。前方有一条河，在月亮的照之下波光粼粼，煞是美丽。我中激动，撒开腿便跑向河边，想洗掉这满身的尸泥。</br><br>近前，见有人在河边钓鱼，怎么感觉这背影那么熟悉呢？仔细一想，这不正是在餐馆遇见的那三个女生吗？看着她们那长长的头发随风飘扬，不禁感叹多么美丽的身影啊。我走到跟前看向她们身后的桶中，好多鱼啊。只是这些鱼生的甚为奇怪，它们没有鳞片，全身的皮肤褶皱的如同老人的脸。鱼嘴很小，长满了尖尖的牙齿。但是眼睛特别大，显得黑洞洞的。怪哉，怎么会有这么丑的鱼呢？</br><br>“美女们，请问……”还没等我说完，她们便回转过头来，长长的刘海儿遮住了她们大半个脸。多么漂亮的刘海儿啊，我是越来越喜欢这几位美女了。我蹲下身子来想看清楚一些她们的容貌，却见美女们都用纤纤细手撩开了刘海儿，露出来白皙的脸。多么白的脸啊，煞白煞白的，白的像纸一样。</br><br>“好看吗？”一个美女问道。还没等我回答，就见她将两根手指插入自己的眼睛中，两颗眼球被生生地挖了出来，鲜血溅了一地。只见她把眼球丢入桶中，那些鱼便争食起来。我被这一幕吓傻了。更让我崩溃的是，旁边那两个美女从桶中捞起两条鱼并津津有味的吃了起来。我一边吐，一边转身跑开，只听见身后三个人在那里哈哈大笑。跑了许久，我回头看去，她们并没有追来，我深深地舒了一口气，总算是有惊无险啊。</br><br>一路奔波，终于回到了学校，寝室中的兄弟早已经熟睡，只是不见老二、老三和老四在。我喊醒了老六，老六说他们去钓鱼了。一听钓鱼我汗毛都倒竖起来了，刚才发生的事情还历历在目呢。再一想，大半夜的三个人跑去钓鱼，我很难相信，如果说是去上夜网打游戏还比较有说服力。管他们是去干什么呢，我累了，需要好好地睡一觉，可是看看身上的尸泥，我不忍弄脏自己的床，就搬起了地上的大桶水去洗手间冲洗一下。</br><br>脚刚刚迈进洗手间，我看到面前跪着一个女人，她背对着我，嘴里不知道在念叨着什么，不时的还磕几下头。这大晚上的在男生公寓里怎么会有女人呢？我悄悄地走上前想看个清楚。只见女人面前的地上有一个小土堆，女人很虔诚的在那里祭拜着。不一会儿，从土堆中钻出六个小人儿，他们绕着土堆儿又蹦又跳的。我正欲仔细看清楚小人儿的摸样时，女人突然转回身，我一下子便晕了过去。</br><br>醒来后，洗手间里空荡荡的，肯定是今天太劳累了，产生了幻觉，或许这一切都是梦，我洗干净了身上的尸泥便回到了寝室。进门却见老二、老三和老四正在打扫卫生，奇怪了，他们这是从哪儿冒出来的呢？大半夜的打扫卫生也太那个什么了吧，不会是在梦游吧。</br><br>他们见我走进来都很高兴，说是他们今天都找到女朋友了，要给我介绍一下。还没有等我反应过来，门口便走进了三个女生。擦！这不正是那三个钓鱼的女生吗？！我终于明白了，老二他们是真的去钓鱼了，这鱼没钓着，却钓回三个女鬼来。</br><br>我把老二他们拉到一边悄悄告诉他们那三个女生是鬼。只见他们听后哈哈大笑，笑的是那么莫名其妙。我心里焦急万分，这三个小子，大祸临头了还笑得出来。</br><br>老五和老六也被这笑声吵醒了，便问是怎么回事。</br><br>“老大说这三个女生是鬼，让我们小心呢！”老三解释道。</br><br>只见老五、老六也笑了，然后所有人都跟着笑了起来，只有我傻傻的站在地上。许久，他们才止住了笑声。</br><br>“我说老大啊，你这又是在逗我们开心吧，生前如此死后还是带着那股子幽默劲儿啊。”老六笑道。</br><br>我脑袋一下子大了，“怎么？我死了？我怎么会死呢？我是怎么死的？”</br><br>“谁知道你发什么神经啊，哥几个正在打牌，你一回来就掀我们的桌子，还吵着要跳楼。我和老三、老四过去拦你，却被你推下楼摔死了。老五、老六当场被吓死了，至于老大你嘛，真够义气，在一棵杏树上吊死了。”老二说了一大通。</br><br>我恍然大悟，原来一切都是真的，他们三个真的摔死了。我终于明白为什么老二、老三和老四死了，老五和老六还能那么淡定，原来他们早已经被吓死在了床上，我还以为他们在睡觉呢。而杏树上的那具男尸，竟然是我自己，现在的我只不过是一个孤魂野鬼罢了。</br><br>这一切来的太突然了，突然的我不知所措。看着熟悉的校园，想起了那些同学好友们，我们从此便阴阳两隔了，走的匆忙，来不及道别，不知道会有几人为我流泪，而我痛心疾首却流不下一滴眼泪，因为我只是一个灵魂……</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神棍节</title>
      <link href="/post/3cc4.html"/>
      <url>/post/3cc4.html</url>
      
        <content type="html"><![CDATA[<p>夜黑灯黄无酒何以消愁…</br><br>百年不遇的节日，不幸让我给遇上了，看路人三五成群，两两成双，心中犹如砸翻了醋缸。吃了好大一个酸枣啊，躲开人群，眼不见为静，可谁料想校园处处是鸳鸯，小树林，篮球场，女生楼下街道旁，才发现我已经被“爱”包围了。好吧，我再躲，去后山转转，我就不信了，这么黑的夜还有跑后山谈情说爱的？！嘴角一扬，大步流星的奔后山而去，在这嚣喧的世界里或许只有后山才是一方净土吧。</p><span id="more"></span><p>夜真黑，天空没有月亮，晕，明明是光棍节，这月亮不过单身生活，却跟着太阳私奔了。我深一脚，浅一脚的穿梭在草丛间，结果有一地太深了，我整个人都掉进去了。慢慢爬起身来，打开手机照了一下，四周空荡荡的，原来这是一个山洞，心中纳闷，啥时候挖了这么一个大洞，差点没要了我的老命！我摸索着前行，许久，眼前一亮，出现在我面前的是一座山，山脚有三个洞通向山顶。我暗暗称奇，洞中山，山中洞，真乃佳境也！我在洞前徘徊了许久，最终决定从中间那个洞上去，不知道山顶光景如何。洞里很窄，压抑的很，没有台阶，但是路边有一根大铁链子，我顺着铁链往上爬，过了十几分钟的模样，我停了下来，前面的路被上下两块巨石给挡住了，中间留一缝隙，刚刚能容一人爬过去，我只好俯下身子爬行过去，可是巨石的后面没有了路，只是在旁边有一个滑梯，见不到底，也不知通向哪里，我正要按原路返回，却见两块巨石早已经合拢。无路可退，我只能选择坐滑梯了，总比在这里困死要好吧，眼睛一闭，我跳了下去，只听耳边的风呼呼的，我的发型早已经被吹乱，速度太快了，不知道滑到底我会不会被摔死。</br><br>也不知过了多久，耳边的风停下了，睁开眼睛不禁大吃一惊，擦！又来到老地方了，这不就是那片坟地嘛，秽气，秽气啊！起身，整理了一下头发，放眼看向四周，一股凄凉之情油然而生，空荡荡的坟地，空荡荡的心，罢了，我就在这安静一会儿吧。我跳上一块石碑坐了下来，回忆着刚才发生的一切，不知不觉的睡了过去……</br><br>睡梦中，我看到天空飞来一只乌鸦落到我身旁，只见她化作一位美女，脸上却带有惊慌之色。还未等我开口，她便说道：“救我！”我还没有明白是怎么回事，只见远方又飞来一只乌鸦，变成了一位大汉。我还没有来得及开口，那男人又说话了：“大哥，你是要这个女人还是要我这个兄弟？！”</br><br>我一头雾水，说道：“你们是谁，我们认识么？”</br><br>男人怒道：“你少放着明白装糊涂，你真的要跟我抢这个女人吗？”</br><br>“我没有要跟你抢什么，我根本就不认识你们俩，是她让我救命，然后你就来了，还说些莫名其妙的话！”我也怒了。</br><br>女人开口了：“兰若，你也太没良心了吧，平日里的那些甜言蜜语都被狗吃啦，关键时刻你装糊涂，算我瞎了眼了，爱上了你这个懦夫。好吧，既然你这么绝情，我就嫁给你弟弟。”说完，他俩便扯着手走了。</br><br>我越来越觉得这事情很扯淡，静下心来一想，明白了，我这是在梦里，哎，又做梦啦。不过这梦倒也有趣，那就继续做下去吧，看看还有什么荒唐事。我在坟地里徘徊了许久也没见有什么事情发生，于是便起身回了学校。走在路上，总感觉大家都在看我，嘴里嘀嘀咕咕说着什么，我侧耳细听，有人说道：“看啊，就是他，甩了他的女朋友，最后他女友一气之下跟了他那流氓弟弟，哎，这么好的一个姑娘，毁啦……”</br><br>我大吃一惊，这是怎么回事？他们怎么会知道我做的梦，再仔细一想，哦，大概是梦还没醒吧，他们全都是我的梦中人。我走上前跟他们搭话：“哎，我说你们啊，在我的梦里还敢对我评头论足啊，当心我抹杀了你们！”</br><br>一女生说话了：“这位帅哥，你这是在做白日梦吧？！”</br><br>“哈哈，我是在做梦，不过不是白日梦，我啊，刚才躺在一块石碑上睡着了，现在的一切都是我的梦境，你们都是我的梦啊，等我醒来，你们全都会消失。”</br><br>听罢，所以的人都笑了，那女的又问：“你知道你在哪里吗？”</br><br>“这不是在枣院吗？今天光棍节啊，不是吗？”</br><br>人群沸腾了：“他啊，梦还没醒呢”，“哎，做梦做到这程度，神了”，“他这是在梦游吧”……</br><br>我彻底糊涂了，不想跟他们罗嗦，便说道：“好啦，懒得跟你们废话，我要醒啦，让你们通通消失。”</br><br>说完我就想睁开眼睛，可是怎么也醒不来。周围的人笑得更厉害了。就在这时，远处传来一声鸡鸣。只听有人说：“哎，天又要亮啦，该回去喽！”</br><br>只见大家一哄而散。我莫名其妙，天亮就亮了呗，干吗都跑那么快啊，难道是天亮了，梦就醒了，他们就消失了？正想着，只见那大汉跑了过来：“大哥，你不要命啦，太阳马上就要出来了，我们赶紧回去吧。”</br><br>“嗯？回哪儿去，我们为什么要怕太阳呢？”</br><br>“大哥你是不是喝多了，我们是鬼啊，见了阳光就死翘翘啦，啥都别说了，赶紧跑吧……”</br><br>听闻此言，我惊出一身冷汉，一下子清醒了过来。什么山洞，什么神棍节啊，都是梦啊，在梦中做了一次人。昨晚贪杯喝多了，竟把真实当梦境，把梦境当真实，真真假假中迷失了自己……</br><br>“对不起啊老弟，哥哥我刚刚是在做梦，我还梦见你嫂子嫁给你了呢，我问你啊，这个是梦还是真的啊？你可不能打你嫂子主意啊……”</br><br>“大哥啊，你真是糊涂啦，我敢打嫂子主意吗，别说你不干，就是你弟妹那一关我就过不去啊，哈哈……”</br><br>“老弟啊，说真的，做人挺好的，我刚刚做梦过了一个神棍节呢……”</br><br>“想过光棍节啊，投胎去吧……”</br><br>“切，我才不去呢，做个自由的小鬼多好啊，再说了，你嫂子那么漂亮体贴，我哪里舍得她啊。听说人间的男人很苦啊，男人多，女人少，男人都讨不到老婆呢……”</br><br>“哈哈哈，老哥啊，回家吧，我们啊就祝人间的光棍们早日摆脱光棍，能像我们一样，人人得一贤妻，如此，做人做鬼都得幸福，天下和谐，岂不美哉……”</br><br>远方，一轮红日冉冉升起，人类美好的一天又开始了。</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记</title>
      <link href="/post/f7bc.html"/>
      <url>/post/f7bc.html</url>
      
        <content type="html"><![CDATA[<p>2011年6月4日 星期五 闷热</br><br>昨晚给猪同学修电脑，熬到12:40，总算是修好了，心中颇兴奋，于是乎一夜未眠。</br><br>失眠是人生最最痛苦的事情，明明很困却又睡不着。寂静的夜，死寂的床，辗转的人……</p><span id="more"></span><p>到了早晨，终于进入了梦乡，正酣时，被猪的电话喊醒。一夜煎熬，疲惫不堪，却又不想这大好时光浪费在睡觉中。翻身起床，洗刷收拾一番，拖着沉重的身体出了宿舍楼。</br><br>不知道是因为没有睡好，还是由于天太热，食欲全无，早餐三个包子勉强吃下，腹中胀满。蹒跚至合堂，学了两个小时，又回到宿舍。电脑还有点小问题，虽然无关紧要，但我喜欢把事情做到完美，这样才有资格为人师表。</br><br>中午没有吃饭，一直等到把电脑交给猪才倒床大睡。心事已了，此觉大酣。下午听了周勇老师的报告，也是心不在焉，感觉自己处于病态之中。晚餐自然是难以下咽，身体不适直接影响到人的心情。学到晚上八点，心中烦闷无比，出去给老妈打了个电话，越聊越觉得没有力气，挂了电话回合堂坐了会儿，实在是学不进去，便回了寝室。</br><br>晚上11点多钟，张宾带回来两个菜，二人买了酒，喝了起来。闷热的天喝一杯凉爽的扎啤，心中舒坦了许多。或许是因为太累，喝了一点便觉得微醉，躺在床上，思绪纷飞。</br><br>辣椒吃多了，身体从内到外燥热不安，翻来覆去，难受异常。迷迷糊糊中哼了一声，突然听见有人喊了我一声，将我惊醒，大汗。原来是大伟，他跟我说了两句话便没了声音，随后他自己说起了梦话。</br><br>寝室里异常的热，我无心再睡，想下床写篇文章。打开电脑，有些发呆，觉得自己心理有问题，大半夜的起来写鬼故事，真是有些变态了。据说好多作家不是自杀了，就是疯了。我怕自己也变态到那种程度，便关了电脑，一个人站在阳台自我反省。</br><br>夜里三点钟，阳台的风很爽，心里痛快多了，只是口渴难耐。宿舍里无水，其他寝室早已关门，我束手无策。这几天，送水人的电话停机了，于是我们便成了渴死的鱼。我拿过电话，随手拨打了送水电话，我只是想试试能不能打通，结果很出人意料，睡觉前还是停机，现在却打通了。</br><br>“喂？你好，请问你需要水吗？”电话那边传来一个男生的声音。</br><br>“啊？！现在都凌晨三点多了，你们怎么还送水呢？”我奇怪得很。</br><br>“呵呵，我们上夜班啊，你们几号楼，我马上送到。”男生笑着说。</br><br>“嗯，12号楼411寝室，麻烦你了哈。”</br><br>“OK，不客气，你稍等啊。”男生挂了电话。</br><br>五分钟后……</br><br>门响了，我赶紧去开门，却不见有人只见地上放着一桶水。我打那个男生的电话，却已经停机。管他呢，渴死了，我先喝了再说。一大杯水下了肚，心里舒坦了许多。不久，觉头晕。我使劲摇了摇头，不经意间瞥见后山有一群人。这么晚了，他们在做什么呢？我决定去探个究竟。</br><br>后山坟地……</br><br>山腰上是一大片坟地，规划的很整齐，林立的碑石显得庄严而肃穆。我走到近前，眼前景象热闹非凡，每一块碑上都坐了一两个人。大家摇着扇子，有说有笑。我心中纳闷，乘凉干嘛要跑到坟地来呢？不怕惊扰了里头的人么？</br><br>我来到一个正在抽烟袋的老伯面前，问道：“大爷，您为什么不睡觉，跑到坟地来玩呢？”</br><br>大爷嘿嘿笑道：“天太热啦，睡不着，出来透口气，这儿阴气重，比其他地方要凉快呀。”</br><br>我大汗，这些人啊，可真是给热疯了，什么事情都敢做。我转身欲走，却被一人给拉住。回头，发现是一个学生模样的男孩。</br><br>“有什么事么，帅哥？”我问道。</br><br>“哦，刚才我给你送了一桶水，忘记收钱了，你看？……”男生说道。</br><br>我摸了摸口袋，发现竟然是空的，脸一红说道：“不好意思啊，我身上没带钱，明天给你行么？”</br><br>“嗯，那好吧，你叫什么名字？”男生问我。</br><br>“了尘兰若，你呢？”</br><br>“王大鹏，呵呵”说着他跳到一块碑上坐着。</br><br>我心想，这小子也太大胆了，敢坐在死人头上，万一坟主生气了，把他拖下去就惨了。想到这，我便有意的看了一下碑主的名字，当场就懵了。碑上刻着“王大鹏之墓”。我吓坏了，知道自己撞上鬼了，恐怕在场的所有人都是鬼。我欠了鬼的钱，如何能走出这片极阴之地？我偷偷地瞧了一眼王大鹏，见他正在朝我微笑，笑的我毛骨悚然。我努力说服自己一定不能乱，要镇定，要装作若无其事。若是让他们发现了我的恐惧，那就死定了。</br><br>“行，那明天我给你打电话，没事的话我先走一步了啊。”我对王大鹏说道。</br><br>“等等！”王大鹏喊道：“吃点东西再走吧，我们马上就要开饭啦哈哈。”</br><br>“那个，我不饿，你们自己吃吧，我先回去了。”我的腿有点哆嗦。</br><br>“那好吧，反正大家都快成邻居了，以后有的是机会。”王大鹏开心的说道。</br><br>晕倒！这话听着渗得慌，与鬼做邻居，那不是说我要埋在他旁边么？我再也呆不下去了，撒腿就跑，一口气飞奔回宿舍。</br><br>我气喘吁吁的爬到床上，却发现床上躺着一个人。谁呀这是，竟然跑到我床上睡觉。我推了推他，却怎么也叫不醒他，我生气了，凑到近前要看看他究竟是谁，掀开被子，我傻了，躺在床上的正是我自己啊……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏冰</title>
      <link href="/post/1b3f.html"/>
      <url>/post/1b3f.html</url>
      
        <content type="html"><![CDATA[<p>蚊子，蚊子，合堂里都是蚊子，挥手一抓，鲜血淋漓……</br><br>学习，是一件很痛苦的事情，与蚊子一起学习，就更加痛苦了，前面坐一女生，简直就没法学习了。</p><span id="more"></span><p>真想回宿舍，可是任务没有完成，又不能走。一方面忍受着蚊子的叮咬，一方面要面对着前面的女生，实在是痛苦。大姐呀，你自己不学习，不要跑人面前影响别人学习的心情好吧！</br><br>许久……</br><br>我流鼻血了，堵不住了，想想自己真没出息，这点事情都顶不住。血溅了一书，眨眼间，一群蚊子峰拥而至，在血泊里泡温泉：蛙泳的、蝶泳的，狗刨的、潜水的、穿救生圈的，最夸张的是有几只在游泳比赛，旁边上还站着一只裁判员，在那嗡嗡的吹口哨。我实在看不下去了，将书合上，使劲一拍，血与蚊子都溅了出去，撞到墙上，开出点点血花，而蚊子，便是花蕊。</br><br>鼻血依旧在流，学习是得放一边了，我还是回宿舍收拾一下吧，别流干了血变成干尸吓坏别人。一路狂奔，我就是一辆洒水车，浇灌了干涸已久的大地，空气中弥漫着血腥的气息……</br><br>跑着跑着，不小心撞到一个人，我现在满脸是血，什么都看不清。只听到一个女生的声音：“呆会儿我去找你……”</br><br>我哪里顾得了那么多，撒腿便跑回宿舍。脚底敷满蒜，右手捏住鼻子，左手高高抬起，许久，血止住了。由于流血过多，我有些晕，迷迷糊糊的倒在床上。不知过了多久，听到有人喊我。我徐徐地睁开眼睛，看到自己站在校园东操场上，对面站着两个人，黑暗中看不清样子。只见他们超我招手，我走上前，大吃一惊，竟然是夏冰和宿舍老二。夏冰是我高中女同学，后来失踪了，一直没有音信，没想到她出现在这，更诡异的是她竟然和我宿舍的老二在一起。</br><br>“哈哈，没想到吧，我也考枣院来了，我们可以继续做同学了！”夏冰笑道。</br><br>我问：“你们怎么在一起，认识？”</br><br>“她就是我跟你说过的那个网友啊，哦，现在应该是女友了哈哈。”老二笑着说。</br><br>夏冰笑道：“是呀，我就是为他才报的枣院的，来了才知道你们是舍友，所以喊你出来打个招呼。”我心里像打翻了五味瓶，大家都不知道，我当初一直暗恋夏冰，就连夏冰本人也不知道，只当我是铁哥们。我不敢表白，因为我怕一旦失败，我们连朋友都做不成了。而如今，她已是有夫之妇，而且还是老二的女友，我心中的苦不可名状！现在说什么都晚了，只能怪自己当初的软弱，现在看着他们亲密的表情我是生不如死。“喂！发什么呆呢？你也不祝福我们一下，或者表示表示？”夏冰幸福的对我说。</br><br>“哦，是啊，祝你们幸福哈，改天我请客。”我强装微笑道。</br><br>“好！我们一定去，哈哈。”老二继续说到：“老大，你先回去歇着吧，流那么多血，别太累了啊。”</br><br>我心一痛，看了一眼夏冰，转身，迈着艰难的步子，任凭泪水肆意的流，天塌啦……</br><br>我多想把她夺回来呀，但是我深深的知道，朋友妻，不可欺。我不明白，为何自己这么慷慨，不是不在意，而是无可奈何……</br><br>我不能就这么走了，我掉头飞奔回操场：“夏冰，让我抱你一下好吗？”</br><br>“啊，这个嘛，”她看了看老二。</br><br>我用乞求的眼神看着老二。老二对夏冰说：“抱抱没什么大不了，都是好兄弟嘛。”</br><br>夏冰说：“好吧，你抱吧。”</br><br>我走上前，伸开胳膊，可是我抱不到她，我面前出现了一堵墙，把我们隔开了。我愤怒了，用拳头砸着墙，砸呀，砸呀，终于砸透了。我怀抱着夏冰，浑身一阵冰凉。我一个机灵醒来，原来是一场梦，我正躺在床上呢，我抬手想要擦擦汗，忽觉手触到一个凉凉的东西。心中疑惑，我的熊娃娃什么时候变凉了呢？我不明白毛绒玩具为什么会是凉的。我打开手机，照了照床上，差点晕死过去。</br><br>我床的隔壁是洗手间，中间的墙壁真的打穿了，突然，从洞里射来昏黄的灯光。我看到床上的熊慢慢的站了起来，不，那不是熊，而是一个长发飘飘的女人。啊！是夏冰！</br><br>“夏冰，你怎么变成这样？你是人是鬼呀？！”</br><br>“你不是喜欢我吗？是鬼又怎样，难道你不喜欢我了吗？！”夏冰温柔的说道，嘴里淌着黏液。</br><br>“我是喜欢你，可是你已经死了，我们不可能在一起的。”</br><br>“你看，我的头发漂亮吗？”夏冰扯下了自己的头发，头皮在滴血。</br><br>这让我想起了洗手间里拖地的阿姨，她就是专门揭女生的头皮来做托把用的，后来为了避免她再害人，我把她杀死了。没想到夏冰也揭头皮，而且还是自己的。我不自觉的透过墙洞向洗手间瞧了一眼，天哪，里面密密麻麻的好多女生在拖地，你揭我的头皮，我揭她的头皮，恶心的要命。“夏冰，这到底是怎么回事？那些女生都是你带来的吗？难道你也疯了吗？”我脑袋都大了。</br><br>“你还记得前些日子里在这拖地的那个女人吗？她是我妈，后来她被人杀死了，我便继承了她的事业，我已经成立了拖地公司，这些女生都是我的员工。”</br><br>我傻了，原来我杀死了她妈妈，看来她并不知道是我干的。但是她现在已经疯了，而且比她妈更加疯狂。我内心很矛盾，怎么办了？我要不杀她，她便要为祸人间，不知要有多少女生受害。我要是杀她，我又下不了手，毕竟我爱着她，虽然她已经变成了鬼。“兰若，你娶了我吧，这么大的公司我自己顶不了，我嫁给你，你做老板，我做老板娘，我们一起将这伟大的事业继续下去。我们要在全国各地开分公司，我们还要建跨国公司，最后我们要建立一个新的国度……”夏冰不停的给我描绘着未来。</br><br>“够啦！你这个疯子！我只听你一句话，你停不停手？！”</br><br>“这是我的事业，没有它支撑着我，我会死掉的。”夏冰委屈地说。</br><br>“你已经死啦！”我实在忍不住了。夏冰神情黯然，许久又活跃了起来，说到：“没关系，我可以借用别的女生的身体呀，一天换一个，你喜欢谁，我就附她身上，让她乖乖的听话。”</br><br>我很感动：“夏冰，你对我真好，过来让我抱抱。”</br><br>她高兴的投入我的怀抱。</br><br>“夏冰，我不要别人，在我心中你永远是最美的，有你足矣。”我抚摸着她飘逸的长发，亲吻她苍白的脸颊，慢慢的在她脖子上咬下去。她颤抖着，用无辜的眼神看着我。“我流了很多鼻血，我需要补血。夏冰，你爱的不是我，而是你的事业，你只不过是想利用我而已，既然如此，不如我先利用了你。杀你是被你逼的，我不杀你，你会害别的女生。你可知道我国男女比例严重失调，女生馈乏，有多少男人一辈子娶不上媳妇，不孝有三，无后为大。没有媳妇，何谈有后？！你这样子摧残女生，会让更多的男人打光棍，如果世界上只剩下男人，那么不久后人类便会永远的消失了。当初你妈就是不听我劝，无奈我只能杀死她。如今你也这么执着，我别无选择，你安息吧……”</br><br>夏冰永远的闭上了眼睛，我放下她来到了洗手间，我饿，需要血……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枣院传奇</title>
      <link href="/post/3312.html"/>
      <url>/post/3312.html</url>
      
        <content type="html"><![CDATA[<p>枣院后山，近黄昏……</br><br>一男生心情低落，跟丢了魂似地在那儿徘徊，不知不觉中走到了坟地之中。碑石林立，不知坟冢葬谁人，逝者已去，可怜未亡人……</br><br>男生面无表情，呆呆的停在一座新坟前面，许久……</p><span id="more"></span><p>“咚！咚！咚！”男生突然暴怒，歇斯底里的喊道：“为何你要背叛我？！”</br><br>估计要么是被兄弟出卖了，要么是被女友甩了，或许是女友跟着兄弟跑了吧，要不怎么会发这么大的火。坟主与他一无杀父之仇，二无夺妻之恨，人家只不过是个刚刚死去的小老头罢了。这男生拿出吃奶的劲来踹人家的碑，可想而知他心中的恼怒早已经是“炉火纯青”了。</br><br>“吱<del>嘎嘎</del>咔嚓咔嚓……”</br><br>这不是男生踹的，而是从坟中传出来的声音……</br><br>“难道是坟主又活了？”男生冷静下来，静静地看着那个小土堆，良久……</br><br>“砰！”的一声，从坟中飞出一巨物，仔细一看，竟然是棺材盖。随后，一切都静的要命，空气似乎都凝结了。男生慢慢的走上前，睁大眼睛向坟中看去，不料一跟头栽了进去。</br><br>数分钟之后，坟中走出一人，他将棺材盖盖好，土也填上，一切如初，然后他迈着僵硬的步子离去，消失在茫茫夜色之中……</br><br>男生一夜未归，接连两天不见其人。问同学，无人知，随即报案，无奈一连几天都没有进展。数天之内，失踪人数不断增加，大家人心惶惶，各忧其命。</br><br>周末来了，闲着无聊，不想学习。下午，与小宝去后山游玩，我与小宝比谁的胆子大，便于傍晚前往山腰的坟地。站在山坡，视野极其开阔，一大片坟地尽收眼底，碑石林立，真乃壮观也！众坟之中，有一座特别显眼，自然而然成为我们试胆的道具。</br><br>近前，仔细打量着这座坟，坟上长满了不认识的植物，茂密异常。小宝嘿嘿一笑，说：“看我的！”随手就去拔一棵植物，不料十分难拔，栽了一个大跟头，终于将其拔起。我捧腹大笑，笑毕，却见他正在吃那棵植物，边吃边夸好吃。我惊呆了，没想到这小子这么猛，太恶心了，我自愧不如，俯首认输。</br><br>我问他要那棵植物欲仔细瞧瞧，没想到他死都不给我，只知道一个劲儿的吃。我觉得很诡异，便硬生生的给他抢过来了。他一下子栽倒在地上，黯然神伤的样子。我仔细打量着这棵植物，突然发现其根部有白色的粘稠物，一时也不知道到底是什么。</br><br>我走到坟前想再拔几棵瞧瞧，不料一使劲把坟给弄开了，连棺材盖都给拔了出来，我栽了一个大跟头，狠狠地摔在了地上。抬头，见一人站在我面前，仔细一瞧，差点晕死。那人不是小宝，而是一个糟老头子，褶皱的皮肤，肮脏的口水，浑身的腐臭味。我一骨碌爬起来，拉上小宝就跑，留下那个老头子在后面咯咯地笑。</br><br>回到宿舍，一夜未眠，想起这几天失踪的同学，我似乎明白了些什么。第二天再看那座坟，又恢复了往常的样子，感觉奇怪。傍晚，我拿着望远镜站在阳台上观察着那座坟。还好距离不远，还有些许阳光，我能够看得真切。许久，坟有异动，我瞪大了眼睛，不敢眨一下，想看个究竟。</br><br>坟慢慢的开了，从里面爬出了那个死老头子，果然是他在作怪啊，只见他四处看了看，然后向村子里走去。</br><br>我放下望远镜，冲向了坟地……</br><br>走到近前，我用手机照向棺材中，瞬间，我脑袋大了好几圈，傻在了那儿。棺材中躺着好几具尸体，身体上长满了植物，有的长在了脑袋里。我一下子明白了，根部的白色物质原来是脑浆。我狂吐不止，一分钟都不想多呆，转身欲离开，不想撞到一物，冰凉异常，正是那老头。</br><br>老头流着黏糊糊的口水，瞪着空洞的眼睛，伸出手推了我一把，我没站稳，一下子掉进了棺材里，身边是那几句尸体，早已经僵硬了，我快要崩溃了，难道我今天也要成为这老家伙的盘中餐了？也要长眠于此了吗？</br><br>你爷爷的，不就是一个小老头么？你行动不便，个子又小。哥哥我一米八的个头，身强力壮的，弄不死你也不至于被你弄死吧，除非你有超能力！</br><br>我自小鬼故事听得多了，练就了积几分胆量，只是这是第一次遇到真实的情况，一下子懵了，冷静下来便多了几分底气。我想里面躺着的那几位应该不是打不过这个老头吧，十有八九是被吓死过去了。</br><br>想明白了，我一下子从棺材里跳了出来，不想把那老头子吓了一跳。估计他没想到进去的人还有自己爬上来的吧。趁他没反应过来，我踢了他一脚，解解气。他怒了，要抓狂，我跑到他身后，一脚把他踹到棺材里，将棺材盖往里一丢，转身就跑。好汉不吃眼前亏啊，万一他真有什么特异功能，我就死翘翘啦，待明日再来理会。</br><br>回到宿舍，洗了个澡，真被他恶心毁了，恨不得拔去自己的几层皮啊，累了，一夜睡得很香，梦中我成了大英雄……</br><br>天明，报警……</br><br>坟地被封锁了，坟被扒开了，里面躺着失踪学生的尸体，唯独没有那个老头，一定是逃了。至于善后事宜且不必细说，我最担心的是那个老头，一天逮不到他，我便一天不能安心。警方已经发出海捕文书，设大奖缉拿凶手。但为了避免引起恐慌，只说是一个十分危险的老头所为，并没有说那老头不是人。</br><br>下午，我去了趟后山道观，拜访了道长，说明了详细情况，请他为万民除害，更保我一命。道长很豪爽，说这是他的责任。</br><br>是夜，大雨滂沱，电闪雷鸣，道长在道观做法，招那老头之魂。不久，老头果然到来，凶神恶煞般，甚是吓人，空洞洞得眼睛瞪着我。我毛骨悚然，感觉到几分杀气扑面而来，转头看看道长，方安心了许多。</br><br>“尘归尘，土归土，人死莫来瞎转悠，无量天尊，破破破！”道长念念有词，一道雷咒拍出，引天空之雷电击向老头之驱。老头经这一击，皮肉已经焦黑，伴随着雨水流将下来。但他只是趔趄了一下，继续走向前来。这绝非省油的灯，是个厉害的角色，他身上有一股很强的邪气，支撑着他的身躯。</br><br>要灭他有两种方法：一是毁其身，但他邪气极重，就算将其身体化为灰烬，也不敢保证其神不依附到他物之上。第二种方法是毁其神，要毁其神，需要查清他究竟为何有这么大的邪气。这项工作还是比较复杂的，需要从其家人查起，而现在燃眉之急，根本没时间去查。怎么办呢？</br><br>“以毒攻毒吧！”我喊道。</br><br>“什么意思？”道长问道。</br><br>“道长不妨将那几个被这老头害死的学生的魂魄招来，然后群起而攻之。他们被老头害死，怨气定然很重，让他们自己报仇，老头灭了，他们的怨气自然就消了，如此一举两得。老头形神俱散，而学生们也可以安然投胎了。”</br><br>道长听了，哈哈大笑道：“然也！然也！”随即施招魂之法。</br><br>接下来是一场恶战，斗争之激烈，场面之血腥，史无前例。雨更加大了，闪电更加明了，雷更加响了……</br><br>最后一切恢复了宁静，黑漆漆的夜，到处是诡异的气息。老头灭了，学生们溜了……</br><br>我们千算万算错算了一步，没想到学生们杀红了眼，怨气不但丝毫无减，杀气却大增，他们逃到了校园，弥散在各个角落，经常出来作祟。而我，必然要肩负起这个责任，因为我间接地塑造了他们。我不知道他们是感激我还是仇视我，总之我要让他们消失，不能再害人了……</br><br>本人未修成正果，暂不能斩妖除魔，望同学们自己多加小心，夜里不要到处乱跑，珍惜生命，远离……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拖地的女人</title>
      <link href="/post/4202.html"/>
      <url>/post/4202.html</url>
      
        <content type="html"><![CDATA[<p>夜，如一杯浓咖啡，苦中带香；</br><br>夜，似一瓶烈酒，亦辣亦甜；</br><br>夜，或许只是一潭水，清澈见底。</br><br>夜啊，</br><br>夜啊，</br><br>让所有的爱沉淀，</br><br>原地发呆，</br><br>我站在原地发呆…</p><span id="more"></span><p>深夜醒来，独站阳台。微风拂面，目眺远方。</br><br>枣院的夜是那么的静谧，静的只能听到风的窃窃私语，它们从我耳边飘过，似乎在诉说着什么。我虽听不懂，却也感受到一丝温柔。</br><br>深夜的灯光是那么的昏黄，它们弥散在空气中，是啊，灯光虽然黯淡，却穿透了空气，打开了我的心扉，照亮了我内心阴暗的那一个角落。</br><br>空气中，无数的小水滴在上窜下跳，左顾右盼，嬉戏打闹。它们留恋天空，于是化作白雾为天空蒙上了一层神秘的面纱。夜因此而更浓，更美…</br><br>    树伴路灯，彼此都不孤单，路灯下，树投下长长的影子。想起一句歌词“酒后路灯下的身影，高过我自己。路上行人的肩膀彼此相依。”仔细品味着，意境是那么美，每每回味，心中都有些触动。此时的我虽无人相伴，却别有一番孤独之美…</br><br>微风伴树，树叶婆娑，风在唱歌，树叶跳舞，多么美妙的演出啊，我闭上眼睛，醉了，醉了…</br><br>远处的山，是那么的黑，显出一丝庄重。山坡上的坟地是那么的诡秘。看着一个个黑漆漆的石碑，感慨人生之短暂，人生于世，匆匆走过，我们为世人留下了什么？这一生要轰轰烈烈，还是注定平平淡淡？我们为何要来到这个世界，为何最终只是一个过客…</br><br>    一股尿意拉回了思绪，有人说，午夜上厕所千万不要看马桶，因为在马桶里会看到你死去时的样子。如果你看到的是一个老人，那没什么。如果看到的是你现在的模样，那么…</br><br>我是不相信这种无稽之谈的，觉得那人就是闲着扯淡吓唬人。离开阳台，我向厕所进军。</br><br>走廊里的灯还是挺亮的，人们总是对未知的事物感到无名的恐惧，所以人们怕黑暗，总觉得黑暗中隐藏着什么东西，会一下子窜出来。有了灯，有了光亮，我们便有恃无恐。</br><br>不知谁把厕所里的灯关掉了，里面昏昏暗暗的，或许是她来了吧。走进去，果然看见了一个人在拖地。</br><br>“你又来啦？”我问道。</br><br>她在桶里摆了摆“拖把”（拖把上不是布条，而是一个女人的头），然后把拖把上的人头拿下来，安在了自己的脖子上，方才点点头，对我微微一笑。</br><br>我看着她那稀疏的头发说道：“你的头发磨损了许多，该换了吧。”</br><br>她愁眉苦脸道：“最近没有找到合适的头发，女孩子的头发不是烫了就是染了，影响脱酯效果，自然影响亲水性。不沾水怎么拖地呀？！”</br><br>    “不是还有许多天然的头发么？”我安慰到。</br><br>她沉思道：“是呀，但是她们多少都有头屑，我是有洁癖的，再说有些头皮太脆弱了，我一揭就破了，所以暂时只能用我自己的头…”</br><br>我又问：“那你以后怎么办呢？”</br><br>“我已经贴出海报，高价寻找合适的女生。我不想放弃自己的事业，哪怕付出再大的代价！”</br><br>我有些感动，问她：“那些被你揭了头皮的女孩子怎么办呢？她们不会死么？”</br><br>“她们可以去寻找别的女孩子的头发再装到自己头上嘛…”</br><br>我听得头皮发麻，觉得这女人太可怕了，照她说的发展下去，世上的女人不都要疯了吗？！到那时，男人娶一个老婆，你很难确定自己老婆的头皮到底是谁的？这很难让人承受！</br><br>我觉得我应该劝劝她，让她停手。</br><br>“你可不可以不用头发而改用布条呢？那样就不会有女孩子受伤了，世界也就太平了。”</br><br>她怒了，“我不管别人死活，我只要我的事业！我女儿的我都给揭了。女人的头发用完了，我还要用男人的！”</br><br>真是个疯子啊，这绝对是个危险的恶魔，她不听劝啊，我要是不做点什么，早晚有一天我也要被她所害。</br><br>“阿姨，你过来看看我的头发怎么样，如果可以的话，我留长发，到时候给你拖地怎样？”</br><br>她愣了一下，许久反应过来。她走到我面前，眯着眼睛看着我的头。我嘿嘿一笑，张开嘴凑到她的脖子上母女，嘹牙咬了下去。她无助的挣扎了几下便不动了。</br><br>真是不识好歹，劝你不听，自己想做我的夜宵，我却之不恭啊。我掰下她一只手嚼着跳下楼，寻找下一个猎物。</br><br>夜，好美，好充实…</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奶奶</title>
      <link href="/post/7597.html"/>
      <url>/post/7597.html</url>
      
        <content type="html"><![CDATA[<p>整个院子里都坐满了人，大家伙正围着几张桌子吃饭。屋子里也设了一张饭桌，摆满了好饭好菜。大爸、二爸、爸爸、和妈妈们、哥哥姐姐都在，奶奶斜躺在爸爸怀里，已经奄奄一息。</p><span id="more"></span><p>大家心情都很沉重，气氛显得很压抑，爸爸坐在那里喂奶奶吃饭，可她根本就咽不下去，一边吃，一边吐，食物流的满身都是。我站在墙角，看着奶奶的样子，再也忍不住了，背过身子，我放声大哭。</br><br>奶奶用微弱的声音喊我，我擦了擦泪水走了过去，我抱住奶奶，泪水汩汩。奶奶口中不断的流着粘稠的液体，流在我的脸上和身上，我愈加的难过起来。</br><br>这顿饭是送行饭呀，我们都知道奶奶要行将就木了，看到自己最亲爱的人将要离去却无可奈何，那种揪心的痛是何等的撕心裂肺！</br><br>许久，奶奶走了，静静的走了，她的身体在我的怀抱里渐渐的凉去，凉透了我的心，这时，我反而平静了许多，没了痛苦，只是呆呆的坐在那……</br><br>几天后，一切后事都处理完了，小村庄又恢复了往日的平静，我也要踏上返校的路。</br><br>家人太忙，没有时间送我，我一个人来到了火车站。车还没有到，突然觉得头晕，我一头栽倒在铁轨上，迷迷糊糊的我看见一群人朝我跑来。</br><br>我闭上了眼睛，不知过了多久才醒来，我发现自己在做一辆小马车上，车上有很多人，不时的上上下下。我腹中难受，不停的吐，脏物被风吹着全流到我的衣服上。我一直吐啊吐，也不知道哪来那么多东西可以吐，车上的人说说笑笑，完全不在乎我。仔细一看，车行驶的方向是回家的路……</br><br>又回到了宁静的小山村，回到了家，或许有人不想让我走吧……</br><br>在村子里漫无目的的走着，碰见了那个她。儿时两小无猜，如今却各奔天涯，心情愈加沉重起来。我们相视无语，擦肩而过，错过了就永远的让它淹没在历史的长河里吧。</br><br>走着走着，天昏暗了许多，大风起，尘飞扬。闭目，耳边飘过千万种声音，我的心乱如麻……</br><br>睁开眼，发现我已在奶奶的坟头。跪下、磕头，是奶奶不舍我的离去吧……</br><br>抬头、远望、深思，世界的尽头是什么样子的呢？奶奶在那边过的可好……</br><br>迷迷糊糊的睡着了，良久，醒来，自己却在火车上，窗外是黑漆漆的夜，眼前是热腾腾的泪……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蛇魇</title>
      <link href="/post/46b7.html"/>
      <url>/post/46b7.html</url>
      
        <content type="html"><![CDATA[<p>时年，天大旱…</br><br>天地不仁，果园干渴，我与爸爸在果园忙活了一整天了，浇地都得抢水。一个大水库，几台机子，一天就把水库抽见底了。其他人早已离去，我们收拾停当正待回家。</p><span id="more"></span><p>忽听水库之中有所动静，未太在意。走到村头小桥之时，又见异动。只见桥上一石不住的动，似乎要蹦将起来。我以石子投之，数次不中，怒！遂捡一大石砸之。不料桥中央乱石飞空，破一大洞，一物猛地蹿出。</br><br>拭目细看，大惊，竟是一巨蟒。满身磷甲，坚不可催，通体发绿，极其耀眼。头大似球，身粗如桶。獠牙发光，信子泛红。二目逼人，身体晃动。我看得是一身冷汗，僵在当场，嘴巴大张，却不敢呼吸。</br><br>哪来如此巨蛇？！心中正盘算如何脱险，不料老妈竟来迎接。我大急，忙喊：“休要过来，有邪物！”</br><br>巨蟒闻之，钻下桥洞消失不见。我越过残桥，回到家去。晚上做饭，正欲舀水，却从缸中见一异物，正是那巨蟒。三人俱呆，不知所措。那巨蟒身子一摆，正要奔向老妈，我大怒，遂跳将过去，以盖捂缸，令其不得出。回头，却已不见老妈身影，问老爸亦不知。冷汗如雨，莫不是把老妈盖缸里了？！</br><br>壮胆开缸，却空空如也，巨蟒亦不知去向。四处寻之，不得。遂出门寻。</br><br>夜深，无月，风大，空气中一股子腥味，潮的厉害。</br><br>我与老爸分头搜寻，老爸去山里，我搜错里。良久，见远处有异象。于是关了电筒悄悄摸索过去。近前，见有一队人。这些人生的模糊，开着一辆拖拉机。忽见一蛇头，正是那巨蟒，老妈被困其中。</br><br>怒火中烧，不知哪来的勇气，随手抄起一木头，冲上前去。那车虽在行使，却不快，我平时跳老爸的车习惯了，也不待其停，一下子跳了上去。车上的人瞬间消失，只剩下那巨蟒和老妈。</br><br>“难不成撞邪了？！”什么世道，妖魔作乱！我乃纯阳之体，童子之躯，阴物见我当避之。所以那些“人”都消失了。但这巨蟒是实躯，乃妖物，虽是阴物，却不甚惧阳，白天亦敢出，非烈日不可制之。此刻已近午夜，乃阴气最旺，阳气最衰之时。我很明显的处于劣势，自己也不知如何对付这巨蟒。我看看巨蟒身后的老妈，她已经神魂颠倒，肯定是被这妖物迷失了心智。众所周知，女性属阴，容易被阴物控制。要想唤醒她，必须把这阴物请走，或者干脆灭了它。</br><br>灭这巨物，我手无寸铁，单枪匹马，实难胜之，弄不好搭进性命。危难时刻，谁能助我？！只恨自己没有火炮之类的武器，但一想，就算有也不能用呀，那不坏了老妈性命？！热兵器不能用，冷兵器又不管用，想来想去只能用法器！</br><br>曾在太虚宫学艺两年，道不精，法不深，怎能奈何得了面前巨物？</br><br>“无量天尊，祖师爷快快显灵！”心中默念许多遍。慢慢的心平静了下来，“天法道，道法自然”，万事万物离不开阴阳二字，计算机不是也用1和0来处理一切的吗？</br><br>我和那巨蟒，一个极阳，一个极阴，但此时此刻我阳气已衰，定不能用阳气胜之。于是我便做出了一个极其危险的抉择：以阴制阴。</br><br>这一招的原理如下：此蟒乃阴物，且在这阴时阴刻，其体内阴气必满。我可以控制村子中坟地内的阴气，将这阴气注入巨蟒体内，所谓水满则溢，这巨蟒定然承受不了这强大的阴气，必然粉身碎骨。但是这一招极其危险，我道法不精，万一控制不好这阴气，必会遭其反嗜，定当毙命。但为了救母，也顾不了许多，只能硬着头皮上了。这些想法在脑子里都是瞬间闪过，巨蟒可没那耐心等我慢慢细想。</br><br>“各位逝者，乡里乡亲的，帮帮忙，暂且借你们的阴气一用，莫怪！”心里念叨着，开始发功。劳累了一天，晚上又没吃饭，体力不支，十分吃力。虽如此，亦不敢放松些许，万一不慎，便会命丧黄泉。咬了咬牙，继续发力。</br><br>由于几处坟地离村里都比较远，阴气赶路也费时间，免不了我得多努力些时间。</br><br>巨蟒已经感觉到我的异常，于是便向我发起了攻击，我一边发力，一边躲闪，很是吃力，只恨当初爹妈少生了两只手给我。待阴气聚齐，我也不再犹豫，将所有阴气集于木头之上，对准蛇头砸将过去</br><br>巨蟒只管向我冲来，未来得及躲闪，被重重的击中额头，阴气随即全数注入蟒体内。巨蟒后退，在地上翻滚，痛苦不已，空气中早已是尘土飞扬。我趁机背起老妈便跑，以防别蟒蛇击中。</br><br>远处，回头，只见那蟒蛇身体越发的膨胀，鳞片开始脱落，最后身体多处穿孔，血液如柱，四处喷洒。待其不动，上前，举刀，取蛇胆，给老妈服下。片刻，醒来。也不管那尸身，回家躺下便睡，当夜大雨倾盆，村民无不欢喜。次日，蛇身已不见，无有知其去向者…</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>骗你是小狗</title>
      <link href="/post/d90e.html"/>
      <url>/post/d90e.html</url>
      
        <content type="html"><![CDATA[<p>前世……</br><br>“我要追你”我鼓足勇气冒出这句话。</br><br>“我大学四年不恋爱！”看着我要哭的样子，梦若又说：“最起码大一不谈。”</br><br>我精神一振：“我等你一年！”</br><br>“真的吗？”梦若不相信的样子。</br><br>“骗你是小狗！”这是我最毒的发誓。</br><br>“那你等吧……”梦若若有所思的说。</p><span id="more"></span><p>一个月后……</br><br>梦若跟了别人，我痛苦万分。</br><br>“梦若，我等你，你为何……”</br><br>“别说了，你等我下辈子吧，下辈子我一定做你的女友。”梦若很无奈的说到。</br><br>“真的吗？”我泪水似泉涌。</br><br>“骗你是小狗！”梦若信势旦旦。</br><br>阴间……</br><br>“你不能做人了，投胎后你会变成一条狗！”阎王对我说到。</br><br>“为什么，我跟梦若约好了，来世做情侣，我怎么可以变成狗呢？”我哭着求阎王。</br><br>“你自己发誓要等她一年，可你放弃了，该是你为誓言负责的时候了。”阎王面无表情。</br><br>“冤枉啊！”我一边喊一边被拖进狗道。</br><br>第二世……</br><br>我变成了一条狗，狗是可以保留前世的记忆的。而梦若在奈何桥上喝下了孟婆汤，忘记了一切。</br><br>二十年后……</br><br>梦若应该长成大姑娘了吧，而我已经是条老狗了，我知道这辈子不可能在一起。但在我临死之前我想见她一眼。</br><br>我来到她住的城市，她又和他在一起了。真是缘分啊，可惜不是我的。</br><br>“老公，快看，这条老狗多可怜呀，我们收养它吧。”梦若抚摸着我。</br><br>我的确可怜，两世都没有与她在一起。我闭上眼睛，享受着前世错过的温暖，我流下了幸福和痛苦的泪水。</br><br>“梦若啊，你可知道我是谁吗？我等了你一世，无奈今生又无缘。下辈子吧，今生你无法完成对我的诺言，来生你会变成狗，希望那时我们可以在一起。”我趴在地板上哭泣。</br><br>“我会和你白首到老，永不分离！”男孩握住梦若的手说到。</br><br>“你不骗我？”</br><br>“骗你下辈子我做狗！”男孩子发誓道。</br><br>梦若幸福的笑了，我心里却酸酸的，趁他们不注意，我走了。</br><br>后来……</br><br>男孩子娶了别的女孩，因为那个女孩家里有势力，男孩的父母为了自己的利益逼迫他与梦若分手。</br><br>几天后……</br><br>梦若和男孩殉情了。得知消息后我也放弃了生命，没有她的我是孤独的。</br><br>阴间……</br><br>“梦若，你前世未完成一个诺言，这次投胎只能做狗了，希望这次完成誓言……”阎王说道。</br><br>“那我呢？”男孩问道。</br><br>“虽然你们没有白首到老，却也是情真意切，这次就不罚你，你继续做人吧。”阎王说道。</br><br>“不，我也要变成狗，我要和梦若在一起。”男孩哭了。</br><br>“梦若前世欠了一份情，今生变成狗是为了让她去还情的，你莫要去参和。”阎王说道。</br><br>两人相拥而泣，分道而行。男孩趁人不注意，一下子跳入狗道。</br><br>第三世……</br><br>三条狗降生了。另人意想不到的是，男孩跟我生在一个窝里，我们成了兄弟。</br><br>我觉得上天很会捉弄人，一个是兄弟，一个是爱的人，让我如何选择。我深深的知道，他们都保留有对方的记忆。我怎能忍心拆散他们，就算我得到她，她的心也不在我这，我又何必去做这损人不利己的事情呢？我还是成人之美吧。</br><br>看到别人幸福是我最大的幸福，虽然有时吃点醋，也是为了就饺子吃。</br><br>阴间……</br><br>“阎王，我愿意放弃梦若对我的诺言，请你放过她，抹除我所有的记忆吧，来世我要重新开始。”我长吁一口气，勇敢的放弃也是一种解脱……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杀尸</title>
      <link href="/post/5fb6.html"/>
      <url>/post/5fb6.html</url>
      
        <content type="html"><![CDATA[<p>山区，</br><br>村子里又死了两名民兵，万恶的土匪，杀人如麻……</br><br>天色已黑，尸体暂不能处理，只好将其运往村里义庄，派两名民兵看管。</p><span id="more"></span><p>老王和小刘提了瓶二锅头来到义庄。所谓的义庄实际上是一座弃用的民房，房子里有一铺炕。炕西边那间屋子也就是进门对的那间停放着两具尸体。</br><br>寒冬腊月，老王和小刘坐在炕上喝着闷酒。要不是为了挣这几块钱，谁愿意来这死人屋陪着死人睡觉呀，且不说晦气，就是这破房子四处漏风冻也冻死人呀。还好有酒，一来可以壮胆，二来可以暖和一些。</br><br>二人无语，天黑的要命，外面飘起了雪随着风肆虐着。忽然，炕上的煤油灯灭了，屋子里顿时一片黑暗，屋外大风呼呼，屋内静悄悄。</br><br>夜，可怕……</br><br>火柴放在地上，老王静了静狂跳的心，摸索着穿上鞋，向停放尸体的屋子走去找火柴。两间屋子间是一个没有门的门框，上面挂一布帘。老王穿好鞋就要掀开帘子，可是当他的手触及帘子的那一刹那，老王呆住了，浑身冒冷汗，头发也竖起来了。原来老王手指碰到了一个硬邦邦的东西，那东西冰凉，透过手指凉到了老王的心。</br><br>这屋子里没别的，肯定是……</br><br>老王毕竟年纪大，见识广，迟钝了一会儿他突然惊醒，他知道他摸到的不是别的，正是死尸。</br><br>“快跑！诈尸啦”老王大喊，顺手摸起枪朝尸体打去。尸体受到子弹的冲击倒地，瞬间又弹了起来。</br><br>再说小刘，先是一惊，然后一头就往窗户那扎，不想和另外一具尸体撞了个满怀，小刘一跟头摔倒在炕上。一个驴打滚爬起来就跳到地上找老王。</br><br>两个活人被两个死人夹在中间，进退两难。老王只能不断开枪逼迫尸体后退，两人一步步的向前挪动。小刘顺手摸过火柴点燃，眼前出现了两张死气沉沉的脸，差点把二人吓死过去，喝的酒早已化作冷汗排出。老王心想：老天爷呀，为何我如此命苦呀。心中想着，眼睛不自觉的向上瞅了一眼。不看不要紧，一看吓焦人。梁上一只大肥猫眼睛闪着绿光，蹄子在那来回翘。</br><br>“该死的畜生！原来是你在做怪。”说着，老王一枪将肥猫打死，两具尸体随即倒地，不再动弹。</br><br>二人擦了冷汗，点了灯，将尸体放归原处。老王气不过，把那猫收拾干净烤熟了，二人煮酒吃猫肉。</br><br>第二天清晨，人们来处理尸体，赶到时均大吃一惊。屋子里躺着四具尸体：一具民兵的，一具老王的，一具小刘的，一具猫的。却少了另外一具民兵的尸体。后来人们在炕上找到了一具人骨，是失踪那个民兵的。</br><br>二人吃的不是猫，是人！他们是中尸毒而死的，至于为何他们把人当作猫给吃了，无人能够解释清楚……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>垃圾桶边的空座</title>
      <link href="/post/fc4d.html"/>
      <url>/post/fc4d.html</url>
      
        <content type="html"><![CDATA[<p>“夏冰，不要冲动，有什么事情竟要走到这一步？”<br>“兰若，对不起，考研路漫漫，剩下的路不能陪你走了，自己多珍重，一定要考个好学校给他们看看。”夏冰站在理工楼顶边缘，眼神里充满绝望和不甘。</p><span id="more"></span><p>“我们一起努力不好吗？生命诚可贵，为何要轻生，难道你真的忍心让我们为你难过吗？”<br>“这世界太多不公，我已经被挤到了生命的边缘，这样辛苦的活着对我来说是一种折磨，我要寻找彻底的解脱，你不需劝我。”夏冰冷冰冰的说道。<br>“不公？究竟是为何事？”我焦急的问道。<br>“刚才公布了进考研教室的名单，里面没有我。从刚进这所学校的那一刻，我就决定了考研，本想在考研教室里能有一席之地，可惜，连个角落都得不到。”夏冰愤怒的双眼闪过一丝悲伤，“那名单是如何得来的？哼……”<br>我沉默了一下，“我知道，名单上也没有我，但是死亡并不能改变什么，你想用死来唤醒世界？太天真了！你的死只会是白白的牺牲。”<br>“兰若，我对这个世界已经绝望了，佛曰众生平等，可这世界没有一丝公平可言，我已经容忍不了了，死亡对我来说是一种解脱，或许另一个世界里有真正的平等吧。”<br>“夏冰，弱肉强食，这是大自然的法则，无论哪个世界都没有公平可言，要想公平得有手段，你怎么单纯的会想到死呢？”<br>“是，我单纯，我不会手段，我没有权利决定自己是否能进考研教室，我却有权决定自己的生死，谁能够阻拦我！”夏冰歇斯底里的喊着。<br>“不就是一个考研教室嘛，有必要如此计较吗？”我安慰道“你要学会逆来顺受，生活就简单的多了。”<br>“逆来顺受？我早已经受够了！”夏冰激动地说：“上次选专业方向时我就被剥夺了自由选择的权利，我忍了！综合测评是什么？我那么爱好制药，为何不让我学？学食品也没什么，但是我不喜欢被人牵着鼻子走。我没本事，只能忍气吞声，可是忍来忍去又如何，我从来就没有过主动权。如今我有了，谁也不能干涉我的生死！”夏冰的话深深的触动了我，是呀，来到大学后从没有过公平，一切强加在我身上的东西我只能忍气吞声，反抗只能死的更快，于是自己习惯了逆来顺受。我是一副掏空了的皮囊，里面填满了不公与压迫，我每天努力的将它们消化，可是它们还是填到了我的嗓子眼儿。<br>无论任何时代，都需要小人物的牺牲来为大人物铺平成功的道路。我就是那个小人物，总是被拿来添补坑坑洼洼，成为别人成功路上的垫脚石。开始我还挣扎，渐渐地，我被踩的连反抗的力气都没有了。但是我还要活着，哪怕是窝窝囊囊的被人瞧不起，最起码我还有利用价值……<br>“夏冰，你别犯傻，你的死毫无意义，只会引起大家的嘲讽和不孝的骂名，想想家人，想想我好吗？”<br>“兰若，我选择死亡并非是懦弱，而是进考研教室的一种手段，我死后，若灵魂还在，我一定会进教室的，考上研后我再去投胎。你忘了我吧，再找一个能逆来顺受的女孩子陪你度过余生吧，来世我给你做女儿。”说着，夏冰身子一侧，跌落下去。<br>想起我们的往日，我撕心裂肺，夏冰曾经是一个多么优秀的女孩儿，不想竟落得如此下场，夏冰啊，生命在于忍耐，你始终参悟不透其中的玄机呀！如今你一走了之，剩下我孤零零一个人面对这惨淡的世界，我能做什么呢？<br>新学期开学了，考研教室里早已座无虚席，唯独垃圾桶边有一空桌，上面没有一本书，接连数日都没人占。我明白了，那是夏冰的位置。我不禁黯然神伤，生前无一席之地，死后也只能坐垃圾桶旁。<br>这一日，我带着夏冰的课本来到后山，找了个地方给她烧过去，我能为她做的只有这些，每次笔记我都要做两份，那一份是她的……<br>后来，夏冰的课桌上有了课本和资料，我稍觉欣慰，只是大家很纳闷，为何从来不见那里坐人。<br>再后来，每天夜里大家都会听到那个位子上传来朗朗的读书声……<br>夏冰，愿你早日考上研，早些投胎，记得下辈子要学会逆来顺受……</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>葬</title>
      <link href="/post/d9ed.html"/>
      <url>/post/d9ed.html</url>
      
        <content type="html"><![CDATA[<p>一大早起来，天有些阴沉，听胖子说外面飘雪了。</br><br>心情如同这冬日的天空一样沉重，昨夜舍友说我心理扭曲，深深的伤了我的自尊。平日里我吊儿郎当，不经大脑说话，那都是无心之谈。想不到兄弟们把我看成是非正常之人，真的很受伤。</p><span id="more"></span><p>既然大家这样看我，那我改，没必要丢了尊严来讨大家开心，谁不会正禁危坐，之乎者也啊。</br><br>心纠结的要命，懒言少语。我不在乎女人背叛我，却容不得兄弟们瞧不起我，真的伤自尊了……</br><br>课上的很无聊，陈老师在上面拼命的讲，我在下面一个劲的郁闷。好不容易熬到了下课，赶紧冲出去透透气，虽然天空阴沉，但空气还是不错。我站在天桥上看着远方，心宽阔了许多。</br><br>心里正想着事情，对面来了一个人，细瞧，原来是师妹。</br><br>心里纳闷，便问：“师妹千里迢迢，不在太虚修行，为何到此？”</br><br>师妹暗然：“奉师傅命，前来送一物于你。”</br><br>说着，她从背后拿出一个盒子。仔细一瞧，正是骨灰盒。我心一颤，几乎晕倒。“难道……？”</br><br>“不是，师傅健在”，师妹哭道：“是二师兄”。</br><br>我胸口绞痛，我与师弟关系素好，感情颇深，不想今日遭此恶耗，怎能不让我撕心列肺。昨日兄弟伤我，今日痛失师弟，究竟为何。</br><br>“二师兄走前未能见你，深以为憾，嘱我将他骨灰带来见你，方肯归天。”</br><br>“到底发生了什么？”我问道。</br><br>    “几年前，那妖物未死，前来复仇，二师兄就是被其所害。”师妹已经泣涕涟涟，“你还是看看二师兄的骨灰吧，望你将其好好安葬，让他陪你在此修行吧。”</br><br>我接过骨灰盒，小心的抚摸着，心中正难过，忽觉腹部一凉，低头望去，只见一把弯刀插于其上。抬头，师妹正在狰狞的笑着，我视线逐渐的模糊，身子一软，摔下楼去。</br><br>我不解，只能留着下去弄清楚了……</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老婆一家“人”</title>
      <link href="/post/48c.html"/>
      <url>/post/48c.html</url>
      
        <content type="html"><![CDATA[<p>夜…</br><br>兄弟们都去喝酒了，剩我自己，闲来无聊，一个人去上选修课。本来没课，但我喜欢计算机，只要有这方面的选修课，不管选没选，我必修。<br>    <span id="more"></span></p><p>今晚上的是三维动画制作，很神奇的软件，学的还未尽兴便已下课。我去了趟厕所，出来后人已经走光了。抬头看夜空，夜色愈加的浓了，如同一壶烈酒，熏的我有几分眩晕。昏黄的路灯照在树上投下长长的影子在我身上，模糊了我的双眼……</br><br>真是奇怪，路上一个人影都看不见，都去哪啦，凄凉的秋，凄凉的夜，寂静的路，孤独的我……</br><br>正漫无目的的走着，不知何时，迎面过来了一辆车。我平时对车不感兴趣，但这辆车却让我眼睛一亮，心为之一颤。我看到的并非大奔、宝马之类的名牌，而是一辆灵车。真是邪门了，校园里怎么会有这东西，该不会死人了吧，我百思不得其解。正寻思着，灵车已开至我面前，一个急刹车停了下来。</br><br>车门打开了，从里面走出母女二人。母亲一身旗袍，风韵犹存，脸上抹了一层厚厚的粉，厚的有些皲裂，散发着一股怪异的味道。女儿倒没什么特别，长相一般，穿着一般，一头短发。我正暗暗奇怪，两人已走到我面前。</br><br>“终于把你找到啦，不是告诉你今天要去看我爸，别乱跑了吗？”那个女孩说到。</br><br>“你是？我们认识吗？”我一头雾水，不知其所云。</br><br>“好你个没心没肺的，你死后无家可归，要不是我们收留你，你还露宿街头呢，不是说好了去把我爸找回来我们就结婚吗？你话也不说就跑出来，还装作不认识我，真是让人寒心阿！”女孩喋喋不休的说了一大通。</br><br>“你可不要吓唬我啊，我们素未谋面，而且我是活生生的一个人，你干嘛说那么奇怪的话阿，我想你们认错人了，我还有事，先行一步，勿送。”看着这对奇怪的母女，我一刻也不想多呆，转身便跑。我使出吃奶的劲跑着，不时的回头看，谁知那女孩一直跟在我身后，怎么都甩不掉。跑着跑着，我看到路边有辆自行车，也不管是谁的，拉过来便骑，谁知这车很不听使唤，越蹬越慢，瞬间，我已气喘吁吁。那女孩离我越来越近了，我甚至感觉到了她在我耳边的呼吸。</br><br>“别跑了，你是不能毁婚的，现在我就带你去见爸爸，他脾气不太好，你可别惹他生气啊。”</br><br>女孩的话让我心里发毛，我加重了脚上的力度，想甩掉她。路灯越来越昏暗了，路越来越窄了，逐渐的合并在一起变成了一堵高墙。我一个急刹车停了下来，差点撞墙上。回头，女孩已在面前，搞不懂为什么她走那么快。</br><br>“你是谁？到底要干什么，大晚上的出来吓唬人好玩吗？”我怒不可遏，大声喊道。</br><br>“嘘……小点声，爸爸在上面睡觉呢！”女孩指了指高墙之上。</br><br>我实在受不了了，便开始爬墙，想要甩掉她。费了好大劲终于爬上去了，抬头便看到女孩在朝我微笑，她伸出手拉了我一把。天啊，她的手凉似冰，我赶紧把手缩回。</br><br>“爸爸就在里面呢，我们进去吧。”她指着旁边的一个洞说道。还没等我反应过来便被女孩拉进洞里了。</br><br>“你放心吧，我们结婚不需要你有房有车，这些我早就准备好了，你就安心做你的上门女婿吧。”</br><br>洞里有微弱的光芒，我四周环顾了一下，发现了两口棺材，心里一惊，差点晕过去。</br><br>“瞧，那个是爸妈的，这个是我俩的，怎么样，够气派吧。等着啊，我去喊爸爸。”女孩说完便朝一口棺材走去，打开了棺盖。</br><br>我向里面瞄了一眼，里面躺着一个小老头，身体早已萎缩，甚是吓人。</br><br>“爸爸，醒醒，看看我给你带来的新女婿。”女孩对着那具干尸说道。</br><br>瞬间，干尸丰庾起来，逐渐恢复正常。我吓傻了，站在原地动弹不得。“闺女啊，快去备些酒菜，我要与姑爷一醉方休。”说着便把我按在旁边的凳子上。</br><br>不一会儿，桌子上摆满了酒菜，我一看，不禁倒吸一口凉气。那哪是酒菜啊，分明是一桌活物，杯子里盛满了鲜血。</br><br>“来，我们先干一杯。”男人端起酒杯一饮而尽，回味无穷。</br><br>见此情景，我再也坐不住，起身撒腿便跑。冲出洞口，一不小心跌落高墙，随即昏死过去。</br><br>仿佛听见鸡鸣声，睁开眼，天早已大亮，只觉得后背发凉，回头一看才发现自己正倚在一块石碑之上。放眼四周，这不正是学校后面的坟地吗……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复仇</title>
      <link href="/post/253e.html"/>
      <url>/post/253e.html</url>
      
        <content type="html"><![CDATA[<p>快考试了，好不容易获得一个假期，大家约定一起到学校后面去玩。</p><span id="more"></span><p>后面是一片很大的水域，跟沼泽地一样。我们几个人自制了一个大木筏，还算结实，趁傍晚我们出发了。他们让我撑杆，我本身晕水，站着撑了一会儿就怕了，只好坐下滑。不久觉得眼前一片黑暗，隐隐约约能看见点东西，我干脆闭上眼睛划。我能感觉到耳边的风呼呼的响，看来速度不慢，有时觉得木筏穿过了陆地又进入了水里。忽然听见有人说：看啊，就剩他自己了，还划呢。</br><br>我睁开眼睛一看，同学都不见了，木筏也消失了，只剩下我落在一个小土堆上，周围还有人在乘凉。这里是一个渔村，我掏出手机想打电话，可是信号受到不明电波干扰，我跑到一个低洼处，总算能打出去了。可是我打了N个人的电话都没人接，我怎么也想不通他们和木筏怎么会凭空消失，我怎么会落在这个地方。</br><br>电话是打不通了，没有木筏我又回不去，只好向渔村走去。穿梭在小巷里感觉阴森森的，偶尔会遇见几个人，并且还有黑种人，这到底是个什么鬼地方啊。继续往前走，我看见一个女孩，便走上前搭话。</br><br>我问道：“你们这可有渡船？我跟同学们走散了，想找船回学校。”</br><br>“当然有啊，不过得明天才能走，晚上风浪大，不敢出海。”女孩回答道</br><br>这鬼地方，阴森森的，我是一刻也不想呆。于是便继续往前走，迎面跑来一条狗从我身旁穿过，后面跟着一男孩。</br><br>“帅哥，你们这有船吗，我想到对岸。”我问道。</br><br>男孩回答道：“我叔叔就有一条，不过得明天早上发船，今晚风浪太大，不能出海。”</br><br>男孩把我带到他家阁楼上，在这能隐约看到学校的灯光，浪的确很大，流水湍急。男孩让我暂时住在他家，明早再送我回校，我无奈，只能如此了。</br><br>我总感觉心里不舒服，便出去散步，不自觉的走到海边。我沿着岸边向学校的方向慢慢走去，不知走了多久，发现前面是一片浅浅的水域，完全可以走过去。我抑制不住内心的兴奋，鞋都不顾得脱，直接冲了过去，那边有一个斜坡，上面是一条公路，可以通向学校。明明不用船嘛，他们都在骗我留下，究竟有什么目的呢？站在公路上我回头看过去，只见那个男孩和女孩向这边跑了过来，中间还带了一个人。他俩嘴里叽里咕噜的不知在说啥，看那表情应该是在骂我。忽然，他们把中间的那个人推进了水里，我仔细一看，那不是妈妈吗？她怎么也在这里啊。妈妈在水里挣扎着，那两人头也不回的走了，我急得又喊又哭的，只见妈妈慢慢的游上了岸边瑟瑟发抖。我气坏了，对妈妈说：“等我回校一定到后山上烧香诅咒他们，让他们不得好死！！”我们沿着公路走向学校……..</br><br>一个星期后，我又回到了那个渔村。</br><br>小酒馆里，我和那个男孩还有女孩坐在一起。</br><br> “你们真狠！！竟然那样对待我的母亲！”我怒道</br><br> “呵呵，算你妈命大，没想到她会游泳，当时真该在那看着啊。”女孩妖里妖气的说道，脸都扭曲了。</br><br>我实在受不了她的话，怒拍案而起，大喊：“你们混蛋，禽兽不如！”</br><br>男孩不紧不慢的起身：“怎么？你想决斗吗，那就跟我来吧，我看你有多大能耐。”</br><br>我正在气头上，哪里受得了他这样直白的挑衅，话也不说便随他出去。他又把我带到想淹死我妈妈的地方。</br><br>“今天就让你去陪海神，这就是通往海宫的入口，上次你妈没去成，这次就由你代替吧！！”男孩傲气十足。</br><br>还没等我反应过来，他们便把我拖进水里，我根本就不会游泳，在水里很无奈，他们把我的头按在水里，我的意识渐渐模糊。恍惚中我又看到女孩那张恶心的脸，实在忍不住，呕吐了起来，把肺里的水全部吐了个干净。清醒了许多，我不知道哪里来的力气，反身把男孩按进了水里，一边灌水，一边朝他头部猛砸，不一会儿他便没气了。女孩见状，吓傻了，转身想跑。我腾空上前，一脚把她踹到在地，揪起他的辫子便向水里拖。</br><br>“今天就让你这小娘们验证一下海水是咸的还是淡的！！”我一口一口的给她灌水。只见她脸色渐渐苍白，眼神逐渐迷离，这么不经打。</br><br>“告诉你吧，我的信条是：从不错杀一个好人，从不放过一个坏人，尤其是坏女人！”</br><br>我随手拿起岸边的石头，海水一片血红……</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枣院剿匪记</title>
      <link href="/post/c53d.html"/>
      <url>/post/c53d.html</url>
      
        <content type="html"><![CDATA[<p>阳春三月，惠风和畅。生技班聚于九龙山野炊，席间你说我唱，其乐融融。正酣时，忽遭山贼洗劫。众人怒于心不敢现于色，忍气吞声，只待其早些离去。然而山贼欺我无人，实在放肆，竟欺男霸女，欲抢我班女生作乐。众人忍无可忍，遂奋起反抗，山贼人少，寡不敌众，落荒而逃，扬言回山寨招集人马，要踏平枣院。此事事关重大，我等不敢怠慢，遂下山备战。       </p><span id="more"></span><p>学院十三系头领密会于行政楼地下室，举行最高军事会议，经研究决定，推举体育系头领为大元帅，带领大家进行枣院自卫战。各系学生会负责在本系招兵买马，并选举大将军执将军印掌管本系兵权。我早年曾跟随太虚宫玄清道人学艺，虽艺不精但也颇懂法术一二。众人厚爱，拜我为将。临危受命，寝食难安，遂排兵布阵，操练人马。</br><br>一日，探子来报，贼寇于校外二十里扎寨。枣院军紧急集合。各餐厅纷纷送来酒菜慰问，各系领导亲自坐阵，院长举旗亲征。美术系造盔甲兵器，中文系与教技系负责宣传，财经系掌管财政，地理系挖战壕，生物系与化工系负责生化武器，外语系负责外交，政法系罗织敌军罪名，校医院负责伤员，音乐系啦啦队擂鼓…</br><br>校园广播发出了那磁性的声音：枣院的男人们，山贼猖狂，犯我枣院，掠夺财务是小，抢我女生为大。我院本就缺女生，有多少男生至今备受单身之苦，而今贼人欲抢属于你们的女孩，想让你们打一辈子光棍，太狠了他们。而我们可爱的女生一旦落于贼人之手，必失贞节，亦不能苟活于世。如此女人的数量锐减，我国的人口形势大家都清楚，男女比例严重失调，中华民族面临着空前的危难。救女人就是救国，枣院的男人们，为了祖国冲吧！</br><br>经过校园广播的鼓吹，我军士气高涨，再见女生们在后面梨花带雨，我们更是群情激奋，铁骨柔情的枣男们早已经跃跃欲试了，只待敌军前来送死。为减少伤亡，我军决定用美人计。从旅资系挑选一美女名曰：貂女单。让其打入敌军内部高层，用计离间敌军首领与军师。美人计是自古以来最下流却又最有效的计某，所以不论君子还是小人都屡用不止。此计有效率不低于百分之九十，可此次却失败了。原来敌军首领是个女人。都怪计算机系情报不详细，害了貂女单啊。</br><br>    贼怒，派三千先头部队攻城，真乃是黑云压顶，气势凶凶。不料在城下遭遇到陷阱，未战先拜。地理系的人真够卖命的，系主任带头工作，那壕沟挖的深如无底洞。这人掉下去能不能活大家心里可是都没有底啊。本来浩浩荡荡，眼一睁一闭便鸦雀无声了，照这般下去，我国的计划生育恐怕要走下历史武台了。</br><br>贼军闻迅大怒，摆出抛石机阵，那漫天的石头啊，密如雨点般砸向我方。抛石机是啥，这可是早期的炮弹啊，他们也太狠了，想全歼我们啊。幸亏国家政策好，不让买卖武器，否则还不搞的地球大爆炸呀。 眼看乱石如雨点般密密麻麻的砸向我军，正焦急时，校篮球队、排球队、足球队…凡是玩球的队都挺身而出，手、脚、头并用，奋起反击。顿时我军变被动为主动，乱石纷纷掉头砸向敌军。敌军大乱，抱头鼠穿，后退二十里安营扎寨，待收整后再做打算。</br><br>夜里，我院举行最高军事会议，院领导发表讲话，表扬我军首战大捷，然后商讨破敌之策，争取明日一举歼灭敌军，大摆庆功宴。</br><br> 第二日，敌军再犯我院。院里不忍再见血腥，于是实行先谈判后武力政策。由于敌首是个女人，我军将美人计换作美男计，派出某系风流少爷西门子去勾引贼首，争取不开刀、不流血，和平解放。 西门子乃是西门庆的私生子的第一百零八代私生子之私生孙，相貌奇伟，谈吐不凡，不知有多少枣院少女为之倾倒。有一女生，人称凤姐，曾于校园广播向其表白：长发为君留，此生若不嫁你，清灯古佛，自梳闺中… 枣院最高军事会议一致认为，西门子是美男计的最佳人选。</br><br>西门子出发了，他走着太空步奔向敌军，枣院的女生沸腾了… </br><br>等待、等待、漫长的等待等来的是西门子的项上人头，女生们哭了，男生们又喜又怒。为何他们只是扣押貂女单，却杀死西门子呢，大家忽然明白了什么。 “大家注意啦，敌首是同性恋，只对女人感兴趣，经过紧急军事会议，我院决定举办一次选美大赛，选拔出四大美女，而且要会武功，送给敌首，以寻机暗杀。” </br><br>枣院美女多，可会武功的美女还真没有，院领导正愁时，忽有一女子自荐。大家齐刷刷的转头，来者正是凤姐。她要为西门子报仇去，好一个烈女子！凤姐虽不会武功，却有一副很有杀伤性的容貌，既然她主动请缨，院里也不好阻挠。</br><br> 凤姐出发了，踏着西门子的路去了，可是走到半路就被人的唾沫淹死了，好一个烈女子，必将载入史册… </br><br>我军屡战屡败，遂挂出免战牌，退入城内商讨对策。经决定，院里派出武功高强，男女通杀的武二郎前去刺杀敌首。 武二郎何许人也？传说他是打虎英雄武松后人。他不近女色，冷酷致极，武功又高，乃是枣院的终极刺客，平时身份极其隐密，这次非常时期，必须得派他做任务了。 临行前，先给他灌八缸小刀，然后他大步流星的去了。我军志在必得，早已摆好庆功宴待其得胜归来。</br><br>良久… </br><br>来了，来了，果然回来了，啊～怎么断了一条胳膊呢？唉～武二郎都败了，这仗还怎么打啊，莫非是他也动心了？那女子到底有如何动人的容貌啊……</br><br>    众人议论纷纷，武二郎脸色苍白，低头说道：“看到她那哀怨的眼神，我实在是下不了手啊！”</br><br>    众人不解，都向前询问详情，原来那给女贼首手无缚鸡之力，要命的是她的那双眼睛，那眼神实在是厉害，让武二郎心都软了。</br><br>    院里马上派出计算机系黑客攻破敌军系统，拿到高级机密。调出女强盗的档案一瞅，白纸黑字，明明白白。原来她曾经混迹梨园，是个花旦，天天对着镜子练眼神。久而久之，便练成了各种眼神，不管遇到谁，她那眼睛一转，你就被她征服了，想想不知有多少江湖好汉败在她的眼神之下。</br><br>    哎，这么好的一个人才怎么当强盗了呢，损失啊。既然搞清楚了她的底细，就要制定破敌方案了。她用眼神克敌，无非就是利用人的七情六欲，对付她，看来非得我下一趟山了。</br><br>  我主动请缨，要求下山破敌，院里一片沸腾，说是我狗屁本事没有一点，不是去白白送死吗？！我只好立下军令状，不克敌愿马革裹尸！！！</br><br>  音乐系敲锣打鼓，校球队还打了一场告别赛，我喝了一桶生命科学系酿的啤酒，踏着夕阳下了山。</br><br>    第二日，校园广播传出了战胜的喜讯，说是了尘兰若活禽敌首。众人听后纷纷赶来要看看那到底是如何的一个女子。随后大家问我如何取胜，我微微一笑：“六根清净，无欲则刚。”</br><br>  我曾拜玄青道人为师，修炼过一段时间（详见《元宵鬼话》），虽无大成就，却也变得清心寡欲，我无情，她就算用尽所有的眼神也打动不了我，这边叫作以无情制有情，无情则无伤！！</br><br>  关于如何处置那个女人，大家意见不一，最后我提议和平解决，让她遣散强盗，并释放貂女单。至于她嘛，我决定把她交给师傅做徒弟，定会有一番成就，如此结局甚好。</br><br>  从此以后，枣院尚道，于九龙山前建一道观，供奉三清，四处村民纷纷来拜，香火不断……</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滴血的笔</title>
      <link href="/post/9f0.html"/>
      <url>/post/9f0.html</url>
      
        <content type="html"><![CDATA[<p>晚上又要开班会，窗外下着雨，被风吹着敲打在玻璃上，心中烦如乱麻。辅导员更是火上浇油，又谈起了运动会通报的事，听说还开始找人谈了。强制运动会我没去，被系里严重警告了，算作旷课十六课时，不去的人多了，通报的就我们几个，我们是鸡，其他人是猴，系里把杀鸡儆猴演的淋漓尽致啊。</p><span id="more"></span><p>本来这事过去很久，我已淡忘，不想今晚又提及此事。我顿时火冒三丈，窗外的雨也化为燃料，我开始浑身燥热。 正激动着，忽觉手指湿漉漉的，仔细一瞧，手上有一滴血，擦去，又出来了。原来是从笔里流出来的，越流越多，我整个手被染红了。我不顾讲台上的辅导员，一股脑的冲了出去，雨水洗涮掉了手上的血迹。</br><br>我漫无目的的在雨中走着，想起傍晚没吃饭，便去买了一个饼嚼着。 前面围着一群人，密密麻麻不知在干嘛，我挤上前要看个究竟。在人群中央是一个台子，台中央坐着几个人。地上是一片血，被雨水冲涮着流向四处。我咬了一口饼嚼着看向台上，其中的一个男人笑着把手伸向自己的腹部掏了进去，随手扯出一段肠子朝我丢了过来，里面的东西迸了我一身，我又吃了一口饼，和着雨水吞了下去。那个男人看着我笑了笑又把手深向自己的胸膛掏出两片肺扔给了我。我拿起来看了看，肺是黑的，还油油的，一滴雨也不沾。再瞧向那个男人，他正抽着烟，还是防水的。</br><br>“吸烟有害健康，你的肺都黑了还抽啊！”我一边嚼着饼一边对他说。他又朝我笑了笑，把自己的器官一股脑的全扔向了我，我拿着饼来回躲着，以免弄脏了我的饼就不能吃了。忽然我被一个囊状物给砸倒了，我捡了起来，是胃。我从贲门看进去，里面黏糊糊的，凑近鼻子仔细一闻有一股熟悉的味道，可怎么也想不起来是什么。我用手使劲一拽把胃撕裂，扒出了内容物，那不是饼渣吗。</br><br>“你今晚也吃的饼吗？心花饼、状元饼还是土掉渣啊？”我问道：“难道你也是饼王？” </br><br>他看了看我，笑道：“你把那些内脏拿过来，我吞下去。在你把饼吃完之前我会把它们全吞掉，不信就试试。 周围的人欢呼着，我们便吃了起来，他是囫囵吞下去的，我输了。正要走，被他拦住了。“看看你的肚子，怎么走啊！” </br><br>我低头一看，天哪，我的肚皮敞开着，里面空空的，只剩下脊住和肋骨。我完全是一个空洞的人了。我失去了一切却还有生命，我明白了，刚才他吃的那些是我的内脏，我却什么都不知道。我呆呆的嚼着饼，饼渣到喉头便掉了出来。 </br><br>“来吧，跟我去实验室，我帮你！”那个男人对我微笑着。 </br><br>我跟着他来到了实验室，他把我放在解剖台上，我瞪着天花板发着呆，他把我胸膛和腹腔内填满脱脂棉，然后用针给我缝合伤口。</br><br>“好了，你现在是一个活标本了，以后组织需要你的话要随传随到，不许以任何理由推脱，否则把你大脑也给换了！”他笑道：“以后我会给你吃特定的食品，我们需要在你体内接种微生物，希望你配合。”</br><br>我很清楚，他们把我做成了活体培养基，给我吃的无非是牛肉膏、蛋白胨之类的东西。我走出实验室，站在雨中大喊：“我的命运凭什么让你主宰？！”</br><br>“你无钱，无权，无能……” ，一个声音不知从何处飘来。</br><br>是啊，我一无所有，但我不能连自由也丢了。 掉头跑回实验室，我喝尽了所有的酒精。站在窗前，看向远方，雨更密了，我的视线模糊了，脑袋却清醒无比。我的身体不能任人摆布，我要自由。</br><br>好美的夜色，我点了一只烟，嘴角露出了一丝微笑……</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>河岸的老者</title>
      <link href="/post/d86.html"/>
      <url>/post/d86.html</url>
      
        <content type="html"><![CDATA[<p>河岸两边围满了十里八村的人，吵吵嚷嚷的，像炸开了锅一样。</p><span id="more"></span><p>我和她坐在南边河岸的一块大青石上，身旁站着一位穿军装的老者。他已经在这好几天了，不知他要干嘛。消息传开后，十里八村的人都赶来看热闹。我也来了，但我并非是来看热闹的，热闹属于大家，而我不包含在那个大家范畴之内。我来是为了见她，没有别的，只想见见而已。</br><br>河并不算大，水流声早已被人们的吵嚷声掩埋了，大家总是那么有激情，心甘情愿的为一件尚未确定是否能够发生的事情而等待。西方的天空已经出现了一抹红晕，人群等待了一整天了，只见那老者依然纹丝不动，双眼直勾勾的盯着河面。人群更加吵嚷了，似乎永远不会感到累。</br><br>我和她静静的坐着，发着呆。外界再吵也不会打扰到我的世界。我喜欢吵闹中的那分安静。</br><br>半个太阳已经落山了，人群开始咒骂了，突然从水中走出一个男人，他疾步走向老者伸手便是一刀狠狠扎在老者左胸。老者一楞，遂继掏出一把手枪朝男人的脑袋连续的打着。然而那男人却未受到丝毫伤害，子弹全落在他的脚前。只见他举起双手，活生生的拧下了老者的脑袋，饮尽其中的脑浆，头颅被丢向了人群。</br><br>人们四散而逃，相互践踏，死伤无数。不知何时，她也不见了。大难临头，怨不得她。人总是怕死的，我不怕，因为那已经成为现实了。</br><br>人都跑干净了，剩下的只有横七竖八的尸体。我走了，跟着那个男人，回我们自己的世界去，因为在这里再也没有我留恋的东西了…</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>元宵鬼话</title>
      <link href="/post/acc7.html"/>
      <url>/post/acc7.html</url>
      
        <content type="html"><![CDATA[<p>   一段尘封的记忆，一件诡异的往事，恐怖而真实的经历影响了我的一生…<br>                                                                 ——题记</p><span id="more"></span><p>一·元宵</br><br>    爱元宵三五风光，月色婵娟，灯火辉煌。月满冰轮，灯烧陆海，人踏春阳。三美事方堪胜赏，四无情可恨难长。怕的是灯暗光芒，人静荒凉，角品南楼，月下西厢。</br><br>    每年农历的正月十五日，是中国的传统节日–元宵节，又称“上元节”、“灯节”。</br><br>    元宵的起源一般有四种说法：</br><br>    第一种说法与道教有关。道教说他们所崇拜的神——天、地、水“三官”中的“天官”是正月十五日生，“地官”七月十五日生，“水官”十月十五日生。因此称正月十五日为上元节，七月十五日为中元节，十月十五日为下元节。元宵节就起源于西汉皇帝祭祀太乙神。</br><br>    第二种说法认为，元宵节的起源与汉将周勃，陈平等人平定诸吕有关。汉高祖刘邦死后，吕后之子刘盈登基为汉惠帝。惠帝生性懦弱，优柔寡断，大权渐渐落在吕后手中．汉惠帝病死后吕后独揽朝政把刘氏天下变成了吕氏天下，朝中老臣，刘氏宗室深感愤慨，但都惧怕吕后残暴而敢怒不敢言．</br><br>    吕后病死后，诸吕惶惶不安害怕遭到伤害和排挤。于是，在上将军吕禄家中秘密集合，共谋作乱之事，以便彻底夺取刘氏江山。此事传至刘氏宗室齐王刘囊耳中，刘囊为保刘氏江山，决定起兵讨伐诸吕随后与开国老臣周勃，陈平取得联系，设计解除了吕禄，“诸吕之乱”终于被彻底平定．</br><br>    平乱之后，众臣拥立刘邦的第二个儿子刘恒登基，称汉文帝．文帝深感太平盛世来之不易，便把平息“诸吕之乱”的正月十五，定为与民同乐日，京城里家家张灯结彩，以示庆祝。古时正月又称元月，“夜”又称“宵”，汉文帝就将正月十五定为元宵节。到后来，司马迁创建《太初历》，把元宵节列为重大节日。</br><br>    第三种说法将元宵节的起源后移到东汉明帝刘庄时。刘庄喜好佛法，是中国历史上第一个对佛教感兴趣的皇帝。他为推崇佛教，就下令正月十五“烧灯表佛”，用以象征佛家学说大放光明。因此士族庶民一律于正月十五夜晚张挂华灯。</br><br>    第四种说法是东方朔诓骗汉武帝的故事。这一则传说与吃元宵的习俗有关：相传汉武帝有个宠臣名叫东方朔，他善良又风趣。有一天冬天，下了几天大雪 ，东方朔就到御花园去给武帝折梅花。刚进园门，就发现有个宫女泪流满面准备投井。东方朔慌忙上前搭救，并问明她要自杀的原因。原来，这个宫女名叫元宵，家里还有双亲及一个妹妹。自从她进宫以后，就再也无缘和家人见面。每年到了腊尽春来的时节，就比平常更加的思念家人。觉得不能在双亲跟前尽孝，不如一死了之。东方朔听了她的遭遇，深感同情，就向她保证，一定设法让她和家人团聚。</br><br>    一天，东方朔出宫在长安街上摆了一个占卜摊。不少人都争着向他占卜求卦。不料，每个人所占所求，都是“正月十六火焚身”的签语。一时之间，长安里起了很大恐慌。人们纷纷求问解灾的办法。东方朔就说：“正月十三日傍晚，火神君会派一位赤衣神女下凡查访，她就是奉旨烧长安的使者，我把抄录的偈语给你们，可让当今天子想想办法。”说完，便扔下一张红帖，扬长而去。老百姓拿起红帖，赶紧送 到皇宫去禀报皇上。</br><br>    汉武帝接过来一看，只见上面写着：“长安在劫，火焚帝阙，十五天火，焰红宵夜”，他心中大惊，连忙请来了足智多谋的东方朔。东方朔假意的想了一想，就说：“听说火神君最爱吃汤圆，宫中的元宵不是经常给你做汤圆吗？十五晚上可让元宵做好汤圆。万岁焚香上供，传令京都家家都做汤圆，一齐敬奉火神君。再传谕臣民一起在十五晚上挂灯，满城点鞭炮、放烟火，好像满城大火，这样就可以瞒过玉帝了。 此外，通知城外百姓，十五晚上进城观灯，夹杂在人群中消灾解难”。武帝听后，十分高兴，就传旨照东方朔的办法去做。</br><br>    到了正月十五日长安城里张灯结彩，游人熙来攘往，热闹非凡。宫女元宵的父母也带着妹妹进城观灯。当他们看到写有“元宵”字样的大宫灯时，惊喜的高喊：“元宵！元宵！”， 元宵听到喊声，终于和家里的亲人团聚了。</br><br>    如此热闹了一夜，长安城果然平安无事。汉武帝大喜，便下令以后每到正月十五都做汤圆供火神君，正月十五照样全城挂灯放烟火。因为元宵做的汤圆最好，人们就把汤圆叫元宵，这天叫做元宵节。</br><br>    元宵节人们的主要活动有：赏花灯，猜灯谜，玩社火，吃汤圆。这些都是比较传统的活动，如今的元宵节早已没有了往昔那种热闹非凡的景象。还好在一些古装剧中有幸可以看到。</br><br>    中国有着悠久的历史和深厚的文化底蕴，民风民俗五彩纷呈，大小节日不计其数。而如今，国人却数典忘祖，放着自己的节日不过反而去追逐过洋节。节日也是一种文化，而文化入侵更是一种卑劣的侵略手段。尤其是美国，通过各种渠道向外国灌输他们的思想，就如同日本的历史教科书一般，蓄意捏造事实，通过教育增加日本青年一代对中国的仇恨。这是何等的可怕，有谁敢确保日本不会再发动侵略战争？！我们是否在潜移默化的被外国文化所误导了呢？我们不知道。这就是文化侵略的可怕之处，你明明被奴役了，而你却偏偏不知道。</br><br>二·奶奶</br><br>    在我们这个地方，元宵节最重要的活动是祭祖。即到先人的坟头祭拜。</br><br>元宵这天下午，我和妈妈早早的包好饺子，先煮了一碗，留待上坟时用。我是一个不太幸运的人，还未出世便失去了爷爷，上幼儿园时奶奶也去世了。在我的印象中，奶奶很疼我，小时候她经常带我出去玩。我和奶奶的感情一直很好。可越是美好的东西越容易失去。</br><br>那时我并不懂得什么叫做死亡，只记得那天下午奶奶说要睡会儿觉，然而她再也没有醒来。当我和姐姐发现时，奶奶已经不会动，更不会说，只剩下微弱的气息。后来爸妈回家找村里的医生来给奶奶输液，怎奈奶奶大限已至，医生也无力回天。</br><br>奶奶就那样不声不响的走了。于是我第一次，也是这辈子唯一一次穿上了孝衣戴上了孝帽。我那时什么都不懂，妈妈让我哭我便哭，但我没有流泪。并不是伤心过度，欲哭无泪，纯纯是因为不知道为何要哭，奶奶正在睡觉，吵吵嚷嚷的会影响她的。</br><br>然而，第二天奶奶就被车拉走了，回来以后就变成了一个小玻璃盒子，后来我们就哭哭啼啼的把那个小盒子送到山里埋了，一路上鞭炮不断，我看到了我的小伙伴们在路边看我。我只知道今天没有时间和他们玩了。</br><br>晚上，我做了一个梦……</br><br>整个院子里都坐满了人，大家伙正围着几张桌子吃饭。屋子里也设了一张饭桌，摆满了好饭好菜。大爸、二爸、爸爸、和妈妈们、哥哥姐姐都在，奶奶斜躺在爸爸怀里，已经奄奄一息。</br><br>大家心情都很沉重，气氛显得很压抑，爸爸坐在那里喂奶奶吃饭，可她根本就咽不下去，一边吃，一边吐，食物流的满身都是。我站在墙角，看着奶奶的样子，再也忍不住了，背过身子，我放声大哭。</br><br>奶奶用微弱的声音喊我，我擦了擦泪水走了过去，我抱住奶奶，泪水汩汩。奶奶口中不断的流着粘稠的液体，流在我的脸上和身上，我愈加的难过起来。</br><br>这顿饭是送行饭呀，我们都知道奶奶要行将就木了，看到自己最亲爱的人将要离去却无可奈何，那种揪心的痛是何等的撕心裂肺！</br><br>许久，奶奶走了，静静的走了，她的身体在我的怀抱里渐渐的凉去，凉透了我的心，这时，我反而平静了许多，没了痛苦，只是呆呆的坐在那……</br><br>几天后，一切后事都处理完了，小村庄又恢复了往日的平静，我也要踏上返校的路。</br><br>家人太忙，没有时间送我，我一个人来到了火车站。车还没有到，突然觉得头晕，我一头栽倒在铁轨上，迷迷糊糊的我看见一群人朝我跑来。</br><br>我闭上了眼睛，不知过了多久才醒来，我发现自己在做一辆小马车上，车上有很多人，不时的上上下下。我腹中难受，不停的吐，脏物被风吹着全流到我的衣服上。我一直吐啊吐，也不知道哪来那么多东西可以吐，车上的人说说笑笑，完全不在乎我。仔细一看，车行驶的方向是回家的路……</br><br>又回到了宁静的小山村，回到了家，或许有人不想让我走吧……</br><br>在村子里漫无目的的走着，碰见了那个她。儿时两小无猜，如今却各奔天涯，心情愈加沉重起来。我们相视无语，擦肩而过，错过了就永远的让它淹没在历史的长河里吧。</br><br>走着走着，天昏暗了许多，大风起，尘飞扬。闭目，耳边飘过千万种声音，我的心乱如麻……</br><br>睁开眼，发现我已在奶奶的坟头。跪下、磕头，是奶奶不舍我的离去吧……</br><br>抬头、远望、深思，世界的尽头是什么样子的呢？奶奶在那边过的可好……</br><br>迷迷糊糊的睡着了，良久，醒来，自己却在火车上，窗外是黑漆漆的夜，眼前是热腾腾的泪。哭着哭着就哭醒了，回忆着梦里的画面，心中的滋味无法表达。</br><br>后来我感到了恐惧，是对死人的恐惧，我开始怕黑夜了。曾经听过一个关于死人的故事，从前，在一个山区里，村子里又牺牲了两名民兵，万恶的土匪，杀人如麻……</br><br>天色已黑，尸体暂不能处理，只好将其运往村里的义庄，派两名民兵看管。</br><br>老王和小刘提了一瓶白酒来到义庄。所谓的义庄实际上是一座弃用的民房，房子里有一铺炕。炕西边那间屋子，也就是进门对的那一间停放着两具尸体。</br><br>寒冬腊月，老王和小刘坐在炕上喝着闷酒。要不是为了挣这几块钱，谁愿意来这死人屋陪着死人睡觉呀，且不说晦气，就是这破房子四处漏风冻也能冻死人呀。还好有酒，一来可以壮胆，二来喝了可以暖和一些。</br><br>二人无语，天黑的要命，外面飘起了雪，雪花随着风肆虐着。忽然，炕上的煤油灯灭了，屋子里顿时一片黑暗，屋外大风呼呼，屋内静悄悄。</br><br>夜，好可怕。陪死人的夜，更可怕……</br><br>刚刚把火柴放在地上了，老王静了静狂跳不止的心，摸索着穿上鞋，向停放尸体的房间走去找火柴。两间屋子之间只有一个门框，没有装门，门框上面挂一布帘。老王穿好鞋就要掀开帘子，可是当他的手触及帘子的那一刹那，老王呆住了，他浑身冒着冷汗，头发都竖起来了。原来老王手指碰到了一个硬邦邦的东西，那东西冰凉冰凉的，那股凉气透过手指凉到了老王的心。</br><br>这屋子里没有别的，该不会是……</br><br>老王毕竟年纪大，见多识广，迟钝了一会儿他便惊醒过来，他知道他摸到的不是别的，正是某一具死尸。</br><br>“快跑！诈尸啦”老王大喊，顺手摸起枪朝尸体打去。尸体受到子弹的冲击倒地，瞬间又弹了起来。</br><br>再说小刘，听到老王的喊声后先是一惊，然后掉头就往窗户那里冲去，谁料想他竟然和另外一具尸体撞了个满怀，小刘一跟头摔倒在炕上。他顺势来了一个一个驴打滚，爬起来就跳到地上找老王。</br><br>门和窗都被死尸堵住了，两个活人被两个死人夹在中间，进退两难。老王只能不断开枪逼迫尸体后退，两人一步步的向前挪动。小刘顺手摸过火柴，抓了几只划亮。在火柴点燃的瞬间，他们眼前出现了两张死气沉沉的脸，差点把二人吓死过去，喝的酒早已化作冷汗排出。</br><br>老王心想：老天爷呀，为何我如此命苦呀，本想赚点钱养家糊口，却不想遇到这种晦气事。老王心中抱怨着，眼睛不自觉的向上瞅了一眼。不看不要紧，一看吓焦人。房梁上蹲着一只黑色的大肥猫，它的眼睛闪着绿光，蹄子在那里翘来翘去的。</br><br>“该死的畜生！原来是你在做怪。”说着，老王一枪将肥猫打死，两具尸体随即倒地，不再动弹。</br><br>二人擦了擦冷汗，点亮了煤油灯，然后将尸体放归原处。老王被一只畜生给耍了，心里实在气不过，便把那大黑猫收拾干净烤熟了，二人煮酒吃猫肉，饱餐了一顿。</br><br>第二天清晨，人们来义庄处理尸体，赶到时均大吃一惊。屋子里躺着四具尸体：一具民兵的，一具老王的，一具小刘的，一具猫的。却少了另外一具民兵的尸体。后来人们在炕上找到了一具人骨，是失踪那个民兵的。</br><br>原来二人吃的不是猫，而是那个民兵的尸体！他们是中尸毒而死的，至于为何他们把人当作猫给吃了，无人能够解释清楚…。</br><br>每每想到这个故事，我就害怕不已，尤其是奶奶刚刚去世，我特别惧怕黑夜。每天傍晚我都一个人坐在平房上，目光在山路上搜寻着爸妈的身影。爸妈上山干农活，整日披星戴月。我自己在家不敢进屋，不敢接触奶奶躺过的炕，不敢碰奶奶用过的东西。记得奶奶去世那天把她的遗体放在一块木板上，之后我看到这块木板就感到恐惧。</br><br>很长的一段时间，我的心一直绷得很紧，对一个孩子来说这是极大的折磨。不知过了多久，我才渐渐的不再那么恐惧。长大以后我在想，家长应该适当的学会用孩子的眼光来看问题。也许一些事在大人看来很平常，然而在孩子的心中或许会留下不可磨灭的阴影。</br><br>三．祭祖</br><br>    已经四点多钟了，爸爸收拾好了东西要去祭奠爷爷奶奶，我也要跟着去。想想自己太不懂事了，奶奶去世十几年了，我竟然没去看过她一次。爸爸从来不叫我去，我又不愿去死人的地方，所以就导致了这种结果。可现在我长大了，懂事了。关键是马克思唯物主义，无神论也学多了，知道世界上没有妖魔鬼怪等不干净的东西，于是我便不再忌惮去坟地了，所以这次我要求与爸爸一起去看望爷爷奶奶，尽一下当孙子的孝道，百善孝为先嘛。</br><br>都说六月天，孩儿脸，说变就变。正月的天气也那么善变，屋外狂风肆虐着，路上细雨密密麻麻的飘着。风吹细雨斜砸在脸上，如同一根根钢针穿体而入，扎的骨髓一阵阵的痛，原来如此也可以痛彻心扉。</br><br>问世间情为何物，直叫人生死相许。想起往事，心情如这天气一样糟糕。喜欢一个人好久确不敢说，等到自己终于鼓起勇气说出来的时候，得到的答案却是一句对不起。原来暗恋也会失恋，我仰起头，感受着肆虐的风，不知这风会不会吹走我满心的忧伤。</br><br>    风若遥远的回音，追着梦的翅膀在亘古不变的记忆长河中寻找那一段飘落的时光。天上的雨点下来，我们躲在伞下，心中的雨点来了，我们又何处能躲？日晒风吹过后的心，早已没有了少年轻狂和那份不安。</br><br>    抬眼望去，面前是身材矮小，背弓已佝的爸爸。就是这样的一副身躯承载着我们一个家庭。记忆中的爸爸是那么的高大，浑身有使不完的力气，爸爸就如同孙大圣一般，无所不能。而如今，爸爸早已改了容颜，易了流光。天天手里黄昏，面上夕阳。岁月是撩人情思的线，却又无法帮你抓住过往的云烟。三千青丝早已成白发，唯一不变的是那颗跳动的心。</br><br>人生在不断的得到与失去，拥有时我们不懂得珍惜，等到失去时，我们痛苦万分，后悔不已。亲情，友情，和爱情，哪一个又有永恒？人们说爱是永恒的。从广义上说，爱是一种超越一切的力量，应该可以永存。然而从狭义上说，精神是要依靠于形体而发挥作用，形毁神灭。人总是要死的，人死了，爱亦去了。这本是常理，也许我们会难过，然而从人类诞生起，死亡便一直伴随着我们。</br><br>也就是说我们早就知道他们会死去，当时我们会难过，但这种难过会很快的逝去。最最让人痛心疾首的是人活着，爱已不在。时间会磨平一切，然而一次意外的相遇往往又会唤起那麻木已久的疼痛。</br><br>我常常问自己，人活着到底是为了什么，明明活的很痛苦为什么还要挣扎在这世上。有人告诉我，人活着是要实现自己的人生价值。然而他却不能告诉我我的人生价值究竟是什么，恐怕他也说不清自己要实现什么样的人生价值吧。于是我明白了，人活着得靠自己。有句话说的好:流自己的汗，吃自己的饭，自己的事情自己干。靠人靠王靠祖先，不算是好汉。</br><br>有时候生病，痛不欲生，真想一下子结果了自己，从此不再受苦，不用再面对各种压力。然而，我深深的知道，人活着不是为了自己，活着是一种责任。我们的命不单单只是属于我们自己的，它更多的是属于那些疼你，爱你，在乎你的人的。</br><br>自杀的人是不孝的，轻生是懦弱的具体表现。所以我在最绝望的时候也不会选择放弃生命，我不忍让我的父母亲人为我的死而撕心裂肺，二十多年的养育恩情我还没报呢。我更不愿意戴上懦弱的帽子，我是男子汉，以后也要顶天立地的。干嘛要问为什么活着，活着就已经足够了。</br><br>    一路的思绪足可以堵塞住长江黄河，还未回过神儿我们便已到坟地。这片坟地位于一座面南的山坡上，到处长满了拦腰高的草。时值正月，草还是枯黄的，摇曳在风雨之中， 颇显荒凉。天仿佛也变得昏黄，天地俨然一色，心中又何尝不是一片昏暗。枯草埋没了坟墓，亦埋没了我的心。回头想找一个足以让自己伤心的理由，然而还未找到，心已经酸了。</br><br>    所谓的坟其实只是一个个小小的土堆，没有碑石林立，更没有公墓的豪华。任你生前如何风光，死后还不都是守着自己的一堆土。人活着，干嘛要费尽心机，争名逐利。人生短短数十载，莫要忽略了最最宝贵的东西，而有些东西，生不带来，死不带去，又何必太过强求呢。珍惜该珍惜的，放弃该放弃的，这就是幸福之所在。人生往往不是得到的少，而是在乎的太多！</br><br>    我跟着爸爸在土堆之间穿梭。坟密密麻麻，很多地方都无从下脚。我们只能踩着人家的坟头过去。奶奶的坟墓在山坡的最顶端，这一路下来不知踩了多少坟头。妈妈对我说过，人死后有三个魂儿，一个留在家里，一个在街上溜达，还有一个就是守护着自己的坟墓。我一边走路，一边在心中默念：各位父老乡亲，非我等不敬，实在是迫不得已，还请莫怪！踩着你们了请多多包涵。</br><br>    我虽是读书人，学的是科学。然而科学跟尊重逝者之间并没有矛盾。就如同我们上坟一样，并不是因为迷信，纯纯是表达对先人的思念和缅怀。</br><br>    好不容易走到了坡顶，找到了爷爷奶奶的坟头。我们点上三炷香，又烧了一些纸，把带的水果、点心、饺子等一并供上，然后在燃烧着的纸钱上浇了一些酒。风刮的火舌跳动不安，烟熏痛了我的眼睛，更刺痛了我的心。幸亏今天下雨，草都被淋湿了，否则这么大的风准会引起大火。</br><br>看着跳动的火舌，心中不由的产生了一个问题，绞尽脑汁，百思不得其解：世间到底有没有灵魂呢？</br><br>也许大家会觉得这问题很蠢，这么多年的书白念了吗？</br><br>且让我们仔细的分析一下…</br><br>    先假设有灵魂吧，人活着的时候，魂魄会附在肉体之上。等到人死之后，灵魂要么升到天堂，要么下到地狱。不管是上天或是入地，灵魂都是在另一个地方生活。我们去上坟，祭奠逝者的亡魂，一年，两年，十年…</br><br>于是我就产生了一个疑问：按照神话故事和古籍记载的来说，灵魂是要投胎的，那么他们投了胎，我们烧的钱给谁花了呢？</br><br>    为何说灵魂必需要投胎？我是这样理解的，大自然的法则适用于一切地方。阴阳协调，有生必有灭，有灭必有生，这是一个动态的平衡。如果灵魂不投胎，那么他们的人口会越来越多，必然造成人口压力。根据自然法则，他们必然会离开阴间，也就是所谓的投胎。</br><br>    据上分析，灵魂必然会投胎，但是还有一个问题，灵魂在阴间的寿命有多长呢？也就是说我们烧钱的有效期是多少呢？这个我是无从考证的。难道阴寿跟阳寿是一样长的吗？谁能为我解惑？</br><br>    若说没有灵魂，那么我们为何要祭奠逝者，或许是一种缅的怀方式吧。但是的确有很多时候我们会看到逝者，是幻觉还是真实的存在呢？</br><br>等纸烧完，爸爸又点燃一挂鞭炮。儿时我曾被鞭炮炸过两次：第一次我的左手中指差点被炸掉，当时都露出白骨了，直到现在还留有一条明显的疤痕；第二次炸在脸上，左眼差点就废了。那次炸的厉害，脸都麻了，失去了知觉，只知满脸是血，不停地往下流。那会儿还在幼儿园，直接把我吓坏了，从那以后我便开始晕血。</br><br>一次躺在床上，觉得鼻孔有东西流出，坐起来用手一摸，原来是血，只是一点点，而且天没完全亮，看得有些模糊，即使是这样，我还是晕过去了。晕倒的感觉不好受，因为我并非没有知觉，而是感觉浑身上下麻麻的，脑袋跟醉酒了一般，整个身子都在颤抖，手脚冰凉，面色苍白，如同鬼魅一般。如此晕过好几次，后来慢慢习惯了，醒的也就快了。</br><br>自从被炸过两次之后，我就再也不敢碰鞭炮了。我躲在一边等着鞭炮放完，这时，不知从那里传来一声闷响。我确信那不是鞭炮的声音，那声音如同地堰倒塌一般。</br><br>坟地两边是苹果园，我们家乡属于丘陵地貌，果农在山坡上开荒种树，每块果园都建有地堰，以防水土流失。在雨季，地堰经常倒塌，会给果农带来许多麻烦。然而，现在是正月间，虽说也在下雨，但土却是冻着的，说什么地堰也不会坍塌，那这声音到底是从哪里传来的呢？正在想着，天空下起了小冰晶，砸在身上很疼，我们赶紧收拾了东西回家。</br><br>四．忆往昔</br><br>    回家的路上，我跟爸爸赛跑，我腿长，占有绝对优势，跑得自然快许多。或许是爸爸老了吧，哪能跑得过我这个年轻小子。但爸爸却露出了年轻的笑容，我心底浮上来一句话：岁月不饶人！</br><br>    岁月无痕，却苍老了我们；岁月无形，却犹如刀枪。</br><br>    岁月如水，默默无语的幽咽却磨圆了曾经细节生动的往事；岁月如水，点点滴滴的不经意却滴穿了我们自以为坚硬的心石；岁月如水，它的清冷能使我们的热情冷却，也可以使浮躁虚华归于本真。</br><br>    一老一少踏着岁月的路飞奔回家，与时间赛跑，趁年少。莫等乌丝变白发，空余恨。</br><br>    晚饭吃的饺子，我擀的皮儿，吃起来滑而不腻，柔而韧。已经忘记了从何时开始学会擀皮儿了，也就是前几年吧。小时候妈妈不让我弄面，嫌小孩子手脏。一直等我长大了，一次看电影，见林心如一下子能擀两个皮儿，于是我便跃跃欲试。再加上姐姐出嫁了，爸爸又经常上山干活，妈妈包饺子一个人忙不过来，才让我动手。我脑子笨但手脚灵活，对于这种不用动脑子的活我一学就会，但我始终比不过林心如。我想一下子擀两个皮应该要动脑子吧，这辈子我是做不到了。</br><br>    我对厨艺颇感兴趣，爸妈上山回家晚，每次我放学回家就把饭做好，做得多了自然就好上了这门手艺。每次爸妈正月里走亲戚，我都不跟去，我喜欢一个人呆在家里，中午自己炒几个菜，享受一番。其实那会儿也就是穷，饭菜缺乏油水，很容易饿。农村打集体那会儿人的饭量大的不可思议，爸爸那会儿能吃五六碗饭。开始不相信，现在想想爸爸并不是说谎，那会儿体力活重，饭菜又没有营养，人吃得多也不稀奇。现在不行了，生活好了，饭少而精，吃一点就饱了，身体比以前发育的还要好。我们这一代还是比较幸福的。</br><br>    晚上被饺子撑着了，自己做的格外好吃。“自己动手，丰衣足食。”当初延安精神就是这样悟出来的。饭后稍许，爸妈便睡下了，他们每次都睡那么早，早晨天不亮就起来说话，吵得我都睡不着。我的假期少的可怜，不忍将之浪费在睡觉上。我很推崇一句话：“生前何需久睡，死后自会长眠。”</br><br>学习我是不愿的，在学校里天天学，除了吃饭，睡觉，上厕所，所有时间都用在做题上。晚上我们也是不会放过的，天天打着手电筒在床上学习。后来学校禁止晚上在宿舍学习，舍管还真尽职，在楼道里走来走去，看到有光就大喊大叫的。</br><br>一次我同学在学习，舍管过去说他，不让他打手电筒，那同学真强，与舍管发生口角，差点把事闹大。后来那同学说，为了高考他什么都能做出来，谁要是挡住了他学习的路，他就跟谁急。大家都对他佩服的五体投地。</br><br>其实舍管挺混的，记得高三刚搬到老宿舍楼时，高三老师想先给我们一个下马威，以压住我们的气焰。第一天晚上政教处去了十几个老师，在楼道里大喊大叫，其实只有极个别的学生没躺下，根本就不影响我们休息。老师们就想借那几个同学杀鸡儆猴，在楼道里闹得震耳欲聋，把我们惹火了。于是各宿舍分别召开紧急会议，商讨对策。</br><br>我对舍友说：“他们这是想给我们个下马威，想压住我们，这会儿要是被压住了，以后就永远也翻不了身了。不是东风压西风，就是西风压东风，为了以后的幸福生活，我们反了吧。”大家一想挺在理儿，于是我们宿舍十几个人一起冲了出去，其它宿舍听到动静也都一股脑儿的跑了出来。</br><br>可能大家看到这里会觉得奇怪，一个宿舍怎么会住十几个人呢？的确如此，十几个人还是少的，记得在初中的时候，我们是几个班好几十个人住一间屋子。乡下条件艰苦，学校里把床和床对在一起，然后我们就一个挨一个的躺着，挤的很。</br><br>人多则乱，东西经常会丢掉。人多也脏，各种脚丫子味混在一起，我们就是睡在这种环境中。这些都不算什么，最变态的是我们班有两个男生，总是在半夜里起来，偷偷的摸到别人的床上撒尿。记得有一天早上，我起床穿鞋，却发现鞋子里湿漉漉的，当时还以为是谁不小心把水洒在上面了，后来想想很可能是他俩往我鞋子里撒尿了。</br><br>好了，言归正传，见我们一群人怒气冲冲地出来了，几个老师傻了。一老师开口问道：“你们不睡觉出来干嘛？”当时声音都打颤了。我们就说他们吵着我们休息了，他们自知理亏，再者如果动起手来他们必定吃亏，而偏偏又法不责众。学校不可能为了那几个老师而开除我们高三所有的男生，那样还抓什么出生率啊。</br><br>其实叫他们老师是尊重他们，政教处都是什么人，大家都心知肚明。进到政教处比赌场好不了多少，他们不教学，主要管学校纪律，说白了，他们是靠暴力恐吓吃饭的。</br><br>    那天晚上是他们退得步，那几个被逮住的同学向群众投来感激的目光，高三一年我们在宿舍过的蛮自在的，以至后来我思念老宿舍，导致高考落榜，我怀着激动的心情回到学校复读，又在那睡了一年，还当了舍长，手下有十二位小兵。两位舍管也算猖狂，但每次进到我们207都客客气气的，如此和平共处了一年。本想再回去睡一年，奈何国家不让办复习班了，我只好作罢从此结束了我的高中生涯。</br><br>    高三那会儿特别累，六月挥汗如雨，作为一位中国学生，这是无法逃避的残酷现实。回想高三，教室里充斥着各种营养液的味道，每个角落都被书本占领着，你能清晰的感受到一种叫“高考”的东西压迫着你的神经。空气里更充满了诡异的色彩，随便吸入一口，你就能马上品出它是被“函数”包围，还是被“唯物辩证法告诉我们…”所蹂躏。墙上贴着一句醒目的话；高考——不得不爱的魔鬼。</br><br>    我觉得很悲哀，明明不是为了试卷而活的，却无缘由的对它们有不可推卸的责任。有时候狂喊一句：“我们的命运凭什么由一张卷子决定？”结果四周全是尖冷的笑声；“疯子！”</br><br>后来高考我成了一个高分落榜生，自己不甘心，又复读了一年。在08年高考中成为一位低分上榜生，终于考上了向往已久的“枣院”。</br><br>五．有鬼</br><br>    回到元宵之夜，我不愿意学习，便打开电视机看元宵晚会。说实话，真的很不好看，还插什么广告。说到广告我就气，现在都什么广告啊，没有几条有水平的，一点艺术感都没有。有些你看完了都不知道它在推销什么，还有的简直恶心人，就是那种，两个人，一男一女，拿着个廉价货在那吵吵嚷嚷的，感情丰富，心情激动，跟患了甲亢似地。讨厌！我懒得批评！</br><br>    一个无聊的人，看着无聊的电视，打发着无聊的雨夜。不久，睡意渐浓，刚刚眯上眼睛就被电视机里的噪音吵醒，本以为又是那讨厌的广告，可睁开眼睛一看才知道我冤枉人家了。原来是信号不好，荧屏上出现雪花,发出呲呲的声音。窗外雨更大了，风也躁动不安，脑海中浮现出一句诗：“夜阑卧听风吹雨，铁马冰河入梦来。”</br><br>    看看钟已经夜里十二点了，时间不早，该休息了。我关了电视，去自己房间躺下。家里有三张炕，我自己睡了一张大炕，爱怎么滚就怎么滚，往往夜里会转一个圈。小时候睡觉经常往地上掉，被子和枕头一起拖到地上，正好打地铺。妈妈跟我说我小时候，有一次睡觉，我又滚到炕边，就在我要掉在地上的一瞬间，妈妈在睡梦中醒来，伸手便把我从空中抓了起来。我竟然没有摔着，不禁佩服母爱的伟大，睡觉都那么警醒。</br><br>    靠近炕的里面是一扇大窗，躺在炕上，听着风雨声格外舒服。不知从何时起养成了一个爱好，喜欢听着雨声睡觉，尤其是打雷的夜睡得更香。其实我是怕打雷的，但躲在家里比较安全。或许是因为外面越是危险越能衬托出家的安全感吧。</br><br>    儿时见过几次雷砸在我家院子中，一团火花，嗖的一下就砸下来了，后人由此受到启发，发明了一个词“迅雷不及掩耳之势”，用以形容速度之快。再后来有人就根据这句话而创建了一个家喻户晓的下载工具——迅雷，该工具如同其名字一般，发展迅速，很快的就占领了大陆市场。由此可见，一个好的名字真的可以影响到人生前途。</br><br>    都说醉汉和小孩不怕老虎。一开始我也不怕雷，甚至还对其颇有好感。每次打完雷后，我都会跑出去寻梨。在我们这儿，“梨”不读 “li”而读“lei”同雷谐音。邻居家二妈经常拿梨给我吃，并说这是天上打雷时掉下来的。小孩子总是愿意相信大人的话，后来想想挺危险的。如果那时我馋一些，冒雨到院子里捡梨，那还不得让雷给劈死啊。我确信天上不会掉馅饼，但我不敢保证天上不会掉雷。以后再骗小孩子一定要注意你的谎言是否有危险性。</br><br>我跟雷颇有缘分，不但多次见过，还亲密接触过，差一点就零距离了。这要追溯到我初四暑假时。也许你们看我会觉得很老气，可孩子们不这样想，我在家里是出了名的孩子王，村东头的孩子都归于我的门下，天天跑到我家，玩得不亦乐乎，更有甚者乐不思蜀。孩子家长可清闲了不少，把孩子扔我这儿，他们便可以安心的上山干活。</br><br>不但在我村如此，在我小姨家更甚。每年放假我都会去小姨家跟表弟玩一段日子。他们村的孩子特别多，几乎每家有两个，很多孩子都是我看着长大的，不禁感慨时光飞逝，容颜易老。她们长大的同时，我在变老。在那边呆久了，孩子们便对我产生了感情和依赖。每天中午都不睡觉，死皮赖脸的敲我们的门，撵又撵不走。孩子喜欢缠人，都七八岁了，我前面抱一个，后面背一个，周围那些都爬不上去，又撕又叫的，经常被抓伤，又不算工伤，只能自己认了，这种压迫，纵是泰山也承受不了啊。</br><br>    小孩子玩起来没有够，把我弄烦了我便往家跑，无奈被她们堵住门，进不去。实在没办法就带着她们围着一排房子绕圈，她们小，跑不过我，我转一圈回来就能顺利进家。插上门，她们闹一会也就走了。跟她们玩还是蛮开心的，小孩子单纯，没心机，而且经常提一些天真的问题，惹得我哈哈大笑。</br><br>初四暑假的一个雨天，我带着一群孩子在门口玩，我们躲在房檐下的车斗上，由东向西排成一排。一个小孩儿问我：“哥哥，天上为什么会打雷呀？”我想了想跟他讲云摩擦生电太麻烦了，而且他还不一定能听明白，于是我就对他一本正经的说：“打雷是因为天老爷爷发脾气了。”刚说完，天空一个霹雳砸下来，毫不犹豫的在我脚尖前面迫降。我恨不得把它直接踢回去。</br><br>当时我穿的是拖鞋，如果砸在脚上，我想最起码要废掉一只右脚，倒霉时小命都没了。这时才想起骗小孩之前一定要考虑安全问题。还有从小老师就告诉我们，雷雨天不要在大树底下避雨，不要靠近金属物品。遭到雷击以后我明白了，老师是不会骗我们的，从此我变成了一个十分听话的乖学生。在老师眼里我是一头温顺的驴。</br><br>    躺在炕上，辗转反侧，又想起了那个古朴的小村庄，想起了那个曾经让我撕心裂肺的人。付出的一切换来了决裂，时间已悄无声息的流过，原以为记忆会随着年华的老去而褪尽了瑰丽的颜色，却不想尘埃落定处，爱的空气依然浮沉；本以为时间熨平了旧日的伤痕，但那份破茧的挣扎依然撕心。本以为把你藏在内心的深处，藏到任何人，任何岁月都无法触及的地方，可你弹指间就唤醒了我麻木的记忆。尘封的思绪汩汩而出，在瞬间汇成泪流，湿润了眼眸，冲刷了心谷。我不自觉的想起了曹磊的《车站》里的歌词:</br><br>“梦里哭泣 泪湿了枕头</br><br>仿佛听见你的问候</br><br>你说当初不该轻易放手</br><br>我也后悔没有把你留</br><br>忘不了你最后的温柔</br><br>细数这回忆 不肯走</br><br>爱若痛了 就喝一杯烈酒</br><br>我已没有快乐的理由</br><br>飞啊飞 啊飞～</br><br>又飞到了你的身边</br><br>飞啊飞 啊飞 啊飞～</br><br>就飞到了你的身边</br><br>痛到泪流干 不再流</br><br>爱到云深不怕羞</br><br>苦苦着为我守侯</br><br>  何时伤痛是尽头…”</br><br>    雨还在不停的下，我思绪飘渺，意识逐渐模糊，背对着窗昏睡过去。梦中互感后背阴寒，虽说正月里天气寒冷，但是关好窗躲在家里，而且盖着厚厚的被子，怎么也不该这样冷啊。这种冷并非是干冷，而是有种潮湿的感觉，冷的彻骨，哪里来的一股泥土的味道？</br><br>迷迷糊糊的我转过身想拉拉被子，眼睛不经意间瞄了一下窗外，不看不要紧，一看吓煞人，窗户不知何时被打开了。我明明把窗户闩死了，怎么会自己打开了呢？我不禁想起了以前听过的鬼故事，小时候到大街上玩，经常有很多大人在一起聊天。</br><br>有一次听他们说了很多身边的鬼故事，绘声绘色的讲得那么真实，再加上平时遇到的一些很诡异的事情，我不禁害怕起来。是不是今天去坟地带回了什么不干净的东西？我不敢多想了，壮着胆子起身关窗。正当我的手指触及窗的一刹那，我被窗外的景象吓呆了。</br><br>窗外，墙边，一个人慢慢的走了过来，确切的说应该是移过来的。不，那绝非是一个人，它的脸，有正常人脸的两倍大，苍白的脸上是如树皮般翘起的老皮。眼窝深陷，黑洞洞的，看不到眼睛，鼻梁塌陷，只剩两个鼻孔。嘴皮干枯，紧紧贴在那一口獠牙之上，舌头早已糜烂，嘴里散发着恶臭。双耳早已残缺不全，奇怪的是白发犹存，在头上绾了一个发髻，凌乱不堪。它身材矮小，佝偻着背，枯瘦如柴的双手搭在窗上，黑色的指甲嵌入铝合金窗框。</br><br>它仰着头，用黑洞洞的眼窝看着我。一股阴寒之气扑面而来，直冷到我的双脚。我当时已经呆了，吓得忘了呼救。人在受到过度惊吓之后就跟傻子一般，最基本的本能都会忘记。</br><br>    就这样对峙了一段时间，我终于醒了过来，赶紧把窗拉死。它刚刚反应过来，开始往里钻，一不小心撞在玻璃上，把它弹了回去，如此试了几次都没进得来。估计它不认得玻璃吧，只见它把脸贴在玻璃上，脸上的皮一点点的往下掉，忽然，它露出了诡异的笑，眼窝里闪出一丝蓝光，稍纵即逝，然后它也不见了。</br><br>    我舒了一口气，一下子瘫在炕上，全身早已被冷汗浸湿，想着刚才的一幕，再也无法入睡。难道是我产生了幻觉？看着窗上的指印，我否定了自己的猜测。除非是在做噩梦，可这梦也太过真实了吧。正想着，院子里又传来了动静，是门！门在响，它是在开门！我分明听到了门被打开的声音，厨房里发出了碗碰撞摩擦的声音，在安静的夜里显得那么沉闷。天哪，它进了厨房！</br><br>我家一进门便是厨房，厨房东面有两间房，西面有一间。而我就睡在西面的那一间。也就是说，我的房间跟厨房之间只有一扇木制门，而它就在厨房里。我能感觉到它朝我的房间走了过来，那粗重的喘息声萦绕在我的耳边，那张惨白恶心的脸又浮现在我的脑海中。</br><br>不！我不能让它进来，不管它是来干嘛的，我能感觉到一股死亡的气息。我一定要阻止它！这时我已不顾自己的恐惧，人在求生时往往会突破极限。我们总是对超出这个世界的存在和未知的东西充满恐惧，可当我们真正面对它们的时候，一切就不在那么可怕。我马上起床下地用力顶住房门，不让它打开。</br><br>它真的过来了，那喘息声就在我耳边，门在晃动，它试图要进来，我屏住呼吸，用尽全身力气紧紧的顶着门。门外的声音渐渐的弱了下来，直至消失。难道它走了吗？我把眼睛放在门缝往外看，可是模模糊糊的看不清，我揉了揉眼睛，刚想往外再看看，那一刻，至今仍历历在目。</br><br>    正当我把脸贴在门上的时候，它的脸凑了过来，两双眼睛就那么近的对视着，我又看到了它那诡异的笑和幽幽的眼神。我还未来得及反应，它便开始活动了，只见它的脸开始扭曲变形，越来越薄，最后如同一张白纸一般，从门缝中慢慢的钻了过来，我吓坏了，一个高儿跳了回去。只见它把手伸了进来，开了锁，门就是这样被它打开的，以后安装门一定要密封的。</br><br>它进来了，脸上依然是那诡异而贪婪的笑。它逼近了，我已无退路，只能爬到炕上。它不动了，就那样僵持了几分钟，它在打量我。忽然我觉混身一沉，倒在炕上，脖子很紧，犹如被人掐住一般，呼吸越来越困难，四肢瘫软无力。我睁眼却迷迷糊糊的什么都看不到，我张嘴却什么都喊不出来，只能从嗓子里往外出气，我努力挣扎却动不了一下。过了一会儿，我轻松了一些。可只是瞬间而已，接着又被压住了，那感觉真的是生不如死，也不知折腾到什么时候我又迷迷糊糊的睡去。</br><br>六·真相</br><br>    第二日醒来，我已是憔悴不堪，昨晚之事萦绕在脑海中。我已明白了事情的来龙去脉，就在昨夜昏过去那段时间，通过感应，真相已经全部浮现在我脑海中。</br><br>那的确是个鬼，而且是个吊死鬼。它生前是我们村的一位老太太，在儿子家生活。早时候条件不好，很少有人盖新房，儿子结婚后就住在原来的房子里，跟父母在一起。她家老头死的早，结果儿子不孝，吃饭不管她，甚至连杯水都不给倒，冬天盖的是薄薄的被子。</br><br>虽说那会条件不好，但供养一个老人却是绰绰有余，然而儿子一家三口愣是不管她。老人饥寒交迫，实在无法忍受生活的痛苦，最后用窗帘上吊自缢而死。都说无家可归的人命苦，哪知有家犹如无家那才更痛苦。老人自杀并非懦弱，实在是已经心寒，这样活着早已没有意义，既然儿子不喜欢自己，又何必活着碍他的眼呢。</br><br>    老人是带着怨气而死的，家里人发现后，十分不安，于是便定做了一副棺材将其好好安葬。记得小时候有一次村子里死了人，妈妈喊我出去看。在我们这儿就这样，不管是结婚还是死人，都会吸引一大批观众。那次我看到几个人抬了一副很大的黑色棺材，前面有人放鞭炮，后面跟着一群穿孝衣戴孝帽的人。走一会儿，哭一会儿。一般来说妇女是要跑到前面哭棺材，男人门跟在后面。跟哭坟一个道理，都是妇女趴在坟上大哭大叫的，而男人们不用哭，磕几个头便完事。</br><br>原来我遇到的那次正是抬的老太太，她和我爷爷奶奶葬在同一片山坡上。这时我才想起昨天坟地里的那声闷响，那明明有一座倒塌的坟墓，整个山坡上只有那么一座埋棺材的坟墓。那座坟墓东西走向，而在西面塌下去一部分，有两米深，里面什么都没有。</br><br>我好好的回忆了一下那处坟地的布局，此地形势，东方青龙箕居嫉主，西边白虎蹲坐衔尸，四面低垂，八面交吹，明堂渐渍，草污臭秽，不祥之地啊。乃是有名的“十贱之地”——白虎衔尸。</br><br>    白虎，本为西方七宿奎、娄、胃、昴、毕、参、嘴之生象。《礼记曲礼上》 ：“行前朱雀而后玄武，左青龙而右有白虎”。又云：“前南后北，左东右西，朱雀、玄武、青龙、白虎，四方宿名也。”风水术指穴山右方之地形。《葬经》云：“故虎蹲谓之衔尸”，注曰：“右山势蹲，昂头视穴，如欲銜噬冢中之尸也。”又《葬经》云：“白虎驯服……形势反此，法当破死。”注曰：“驯，善也，如人家蓄犬，驯拢而不至有噬主之患也。頫者，低头俯伏之义，言柔顺而无蹲踞之凶也。《明堂经》曰：“…虎怒蹲视，昂头不平，祸机中藏。”</br><br>    据《三国志·辂络传》载：三国时术数名士管辂，曾随军西行，经过毋丘俭的墓，“倚树哀吟，精神不乐”，人问其故，管辂回答说，其葬地大凶，有白虎衔尸等诸种凶象，不过二裁，将有灭族之危，是以“林木虽茂，无形可久，碑言虽美，无后可守”。</br><br>   青龙和白虎，指穴场左右两側形势。风水家认为龙虎二山是穴场护卫，当相互抱持缠绕，趋揖朝供于明堂。葬经云：“龙虎抱卫，主客相迎；”注曰：“凡真龙落处，左回右抱，前朝后拥，所以成其形局也。未有吉穴而无吉案，若龙虎抱卫而主客不相应，则为花假无疑。”如果是平洋脉穴，亦应寻龙虎之迹，觅冈阜之团簇环抱。</br><br>    《葬经》云：“夫以支为龙虎者，来止迹乎冈阜，要如肘臂，谓之环抱。”注白：“此言乎洋大地，左右无山以为龙虎，止有高田勾夹，故当求冈阜之来踪土迹于隐隐隆隆之中，最要宽展如人之肘臂腕肉情……其形如步武旋转，自然团簇环抱而恬软也，”以风水家看来，龙虎二山贵缠绕相应抱持降伏。</br><br>    “十要紧”所谓“四要左右盘旋”，“十富”所谓“三富降龙伏虎”，“十不葬所谓“十不葬龙虎尖头”， “十贵”所谓“七贵圆生白虎”，“二十八要”所谓’虎要缠”，“二十六怕”所谓“龙虎怕压穴”，“龙虎怕断腰”，“虎伯窜堂”，皆为此意。</br><br>    又倘若右无白虎，是为左右皆空，十贱之地，主孤寡清贫，衣食生愁，均是此意。如果龙虎无情，既无呼应，亦不相拱卫，主家人离异。葬谚所谓“面前龙虎两脚飞，退田父子各东西，更主出人生忤逆，兄弟相打两分离”者是也。龙虎之形又均忌各有二山相随，主女媳淫乱不贞，忤逆不孝。亦忌龙虎左右皆空，或残缺破损，为无以藏风，无以聚气之故。</br><br>    老太太本来就是含恨而死，心中憋着一股怨气，再加上埋在这白虎衔尸的“十贱之地”，尸骨不化，形成荫尸，荫尸的最大特点就是有理智，而且必有怨气，但它的理智很容易失控。这就是它的危险之处，有仇必报，一旦它的怨气消失以后，荫尸就会马上腐烂。也就是说，它是靠一股怨气而生的。</br><br>    后来她的儿子无病而终，死的离奇。事情发生在老太太死后的第七年，那天她儿子和我们村的另一个人一起开着三轮车出去拉货，去的时候他走在前面，另一个人跟在他后面，就这样两人一前一后的开着车走在路上。不巧路上遇见抓车的交警，农村人一般不愿给车子挂牌，因为各种费用加起来很高，车子平时也不出村，一般没有问题。这次算他们倒霉，恰巧就给碰上了。那条路我以前天天走，有一段路中间高，两面都是斜坡，而且有一个大转弯，也就是说在两边都看不到最高点。交警精的很，充分利用这个有利的地理条件，车子从两边往上走根本就看不到交警。等走到跟前发现了，逃也逃不掉了。</br><br>    那天，他俩就遇到这事了，等两人发现交警为时已晚，只能硬着头皮往前开。奇怪的是，交警放过了她儿子，却逮着了后面的那个人。费了好一番口舌，罚了点钱，并没扣他的车，身上没钱自然不会补证，就这样算了。后面这人不服了，都没挂牌，凭什么单抓我不抓他啊。返回时后面那个人要求跟它儿子换位置，走在前面，结果在路上又被抓了，老太太的儿子仍旧没事。那人虽一肚子火气，但又不好发作，只能怨自己命不好。</br><br>    第二天，村子里传出老太太儿子的死讯，死的很突然，并未发现有什么病，只是睡了一觉就再也没有醒来。后来听人说，那天交警不抓他是因为根本就看不到他，那就是死亡的预兆。</br><br>    那么为什么老太太会来找我呢，她的死跟我完全无关啊。我只不过是小时候看到过她的棺材，而且围观的人又不只我一个，为何不去缠他们呢？为什么当初她不找我而要等到十几年以后呢？昨天晚上她又对我做了什么呢，我好像并没有什么问题啊。我一肚子的疑问，这事我不能瞒着。我跟爸妈费了好半天才将事情的经过讲清楚，爸妈一听挺玄乎的，怎么也不信。他们说昨晚什么动静也没听到。无奈之下我让他们到我房间看窗上留下的指痕，他们这才相信，但却摇头不已。的确，这种事情没发生在自己身上谁又能相信呢。</br><br>七．丘处机与太虚宫</br><br>  这事情自己根本就解决不了，得请高人相助才能破了此劫。这时我想起了玄青道人。他是太虚宫里的道士，是我在城里读高中时认识的。说是认识，其实也就是有过一面之缘而已。</br><br>  高一时，我天天出校门吃饭，学校餐厅里的饭特贵，而且人多还得排队。外面人虽然也不少，但是不用排队，只要你能挤就行。一天傍晚我跟同学出去吃饭，在校门口南面碰见了一个道士打扮的人，六十来岁的年纪。我刚要冲进饭馆却被他拦住，说什么我跟道家有缘，要度我出家。还告诉我他是太虚宫里的玄青道人。</br><br>  他说我六根未净，非要赠我一个道号——了尘兰若，好让我随时警戒自己，切莫留恋红尘。果然到今天为止，我还是孤身一人。当时我以为遇到骗子了，再说肚子也饿了，再不进去，饭菜就被抢光了。我也不听他唧唧歪歪的，撒腿就往饭馆跑。只听他在后面大吼：“你会明白的，总有一天你会用到我的。”</br><br>  后来我也曾到过太虚宫，只不过是在它旁边的庵里水库玩，并没有进去。</br><br>太虚宫是由我国道教全真龙门派创始人、著名的道学家、养生学家和文学家丘处机，于公元1191年以故居为观主持修建，当地人称之为“滨都宫”。其时占地86500余平方米，金朝章宗皇帝亲赐匾额“太虚观”，元朝帝妃遥拜丘处机为师，赐《道藏》6000卷。太虚宫盛极一时，闻名海内外，被誉为“东方道林之冠”。 </br><br>      太虚宫座落在栖霞城北的滨都里，位于平山前怀、长春湖畔，四周密林蓊郁，梵宇巍峨，宫殿金碧辉煌，檐牙高啄，依山傍水，是一块风水宝地，所以才有“天上有天宫、地上有太虚宫”的说法。  </br><br>太虚宫自1995年开始在原址进行重建以来，总投资5000余万元，占地面积13万平方米，宫殿建筑面积5200平方米，有大小殿堂34座，主要建筑包括三清殿、玉皇殿、十八罗汉庙、老母阁、王祖庙、宝塔、竹林院、通明轩等。</br><br> 2003年太虚宫被国务院批准为宗教活动场所，成为山东省乃至全国又一座大型道教宫观。拥有天下第一汉字大门——“道”字大门，以“道”字为建筑造型设计，高20米，意在解释“道可道，非常道”。拥有目前国内最大的三清殿，供奉着玉清原始天尊、上清灵宝天尊、太清道德天尊三位道教地位最高的尊神。这三座神像高8.1米，底座高1.4米，总高度达到9.5米，象征着“九五”至尊，是国内最大三清尊神的铜座像。</br><br>    说到太虚宫不得不提起丘处机。</br><br>  丘处机(1148–1227年)，是道教的一支全真道掌教人。字通密，号长春子。登州栖霞(今属山东)人。金庸笔下《射雕英雄传》人物之一。丘处机自幼失去双亲，尝遍人间辛苦。童年时即向往修炼成“仙”。栖身村北之公山，过着“顶戴松花吃松子，松溪和月饮松风”的生活。为磨炼意志，曾供奉王重阳、马丹阳(时已去世)像于官庵，并主持了“万春节”醮事。向皇帝作“持盈守成”的告诫。由此名声大振。 </br><br>　1191年(金明昌二年)秋，丘处机回归故里修建滨都宫(赐号太虚观)作为传道之所。1206年(金泰和六年)，他重返宁海，改马丹阳故居为玄都观。1208年后，丘处机曾两访崂山，足迹遍及青州、登州、莱州等地，扩大了全真教的影响，1214年(金贞祐二年)，益都杨安儿起义军攻克登、莱等州，丘处机奉旨招抚了部分义军。其时，金、蒙、南宋三势鼎立，争相诏求丘处机，他概不应诏。 </br><br>  1219年冬，元太祖成吉思汗派近臣刘仲禄持诏书相邀，丘处机说：“我循天理而行，天使行处无敢违。”遂带弟子18人前往。</br><br>  他们从山东莱州动身，经宜化(今河北宜德)，越野狐岭，东北行至呼伦贝尔，再沿怯绿连河西行，穿越蒙古高原、金山，甫下经别十八里、昌八里(今薪疆昌吉)、阿力麻里，塔刺思河、塞蓝。(今哈萨克斯坦奇姆肯特)、霍阐没辇(锡尔河)、撒马尔罕、碣石(今乌兹别克斯坦沙赫里·沙勃兹)，越阿姆河而南，历时3年，行程万里，74岁高龄的丘处机终于会成吉思汗于雪山。</br><br>  每每进言：“要长生，须清心寡欲；要一统天下，须敬天爱民。”此讲深得成吉思汗赞赏，口封“神仙”。 当时，蒙古铁骑在成吉思汗的率领下打遍天下无对手，灭国无数，建立了一个世界历史上国土面积最大的国家。</br><br>  在那时，蒙古骑兵每攻占一个城市、一个国家，轻者大肆劫掠、抓战俘和女人为奴隶，重者屠城，满城人口尽数屠杀。可是后来当成吉思汗的子孙灭宋之时却少有屠城，也使得中国多少年来的文化、建筑等等诸多方面没有遭到毁灭性打击，这中间丘处机所起的作用的不可估量。只因丘处机乃一个道士，在儒家文化为主导的宋朝乃至后世，历史并没有给丘处机一个公正的待遇，可叹啊！</br><br>  1224年(元太祖十九年)，丘处机回到燕京，奉旨掌管天下道教，住天长观(今白云观)。同年，丘处机曾持旨释放沦为奴隶的汉人和女真人3万余。并通过入全真教即可免除差役的方式，解救了大批汉族学者。自此，全真教盛极一时，丘处机的声誉亦登峰造极。寺庙改道观、佛教徒更道教者不计其数。1227年(元太祖二十二年)，丘处机病逝于天长观，终年80岁。元世祖时，追封为“长春演道主教真人”。</br><br>　丘处机遗著有《大丹直指》、《摄生消息论》、《蹯溪集》和《鸣道集》等。其诗词作品，在金、元之交有一定的代表性，后人所编《元诗别裁》、《词林纪事》都选有他的作品。&lt;&lt;蹯溪词》一卷，由近人朱孝成辑于《疆村丛书》。丘处机西游经历，由其弟子李志常的《长春真人西游记》详载。</br><br>下面为丘处机一生的大事记</br><br>　　1148年，丘处机生</br><br>　　1162年，成吉思汗生</br><br>1167年，丘处机见重阳真人，弃亲出家</br><br>　　1188年，丘处机应金世宗召，到北京论道</br><br>　　1189年，丘处机还陕西</br><br>　　1190年，丘处机回故乡山东</br><br>　　1206年，成吉思汗上尊号“成吉思汗”</br><br>　　1211年，蒙古军围攻北京</br><br>　　1215年，蒙古军再攻北京，克之</br><br>　　1219年，刘仲禄奉命东行访问丘处机，成吉思汗誓师西征</br><br>　　1220年，丘处机从山东到北京等地</br><br>　　1221年，丘处机正式启程西行，年底到邪米思干</br><br>　　1222年，丘处机见成吉思汗于大雪山之阳</br><br>　　1223年，丘处机辞别成吉思汗东还</br><br>　　1226年，成吉思汗率军攻击西夏</br><br>　　1227年，七月七日，丘处机去世，十二日，成吉思汗去世</br><br>八．玄青道人</br><br>  既然已经走投无路，不如找那个道士试试，死马当活马医吧。正月十六上午，我进城去找玄青道人。从我家到城里得坐两个小时的汽车，在汽车站下车，再坐半个小时的公交就到达太虚宫了。太虚宫位于同三高速附近，东临碧波荡漾的庵里水库，前面环绕着滨水河与白洋河，北依雄伟的公山，西对巍然屹立的艾山，道学家选择此地做为修行胜地，正依了“左青龙、右白虎、前朱雀、后玄武”的道家学说。</br><br>  现在太虚宫已经成为一个旅游景点，对游人开放，进去要买门票。我拿了票踏入太虚宫山门，首先看到的是太虚宫的主殿——三清殿，这是三清老祖之庙，庙宇宏伟，雄壮高耸，碧瓦丹墙。据传，与北京故宫的太和殿相比，太虚宫与之只有一砖之差，可见其营造的宏大规模。</br><br>  三清殿内，供奉三清老祖塑像三尊，塑像与大殿的高度相同，这是栖霞最高的塑像，塑像的手掌，纵横约有五六平方尺，宽能卧下一个小孩子。三清殿前，有两个形态可掬的石狮，相传这是由丘处机神游江南怀袖而来，这两座石狮东西而座，把守着这八百年的古刹。在石狮的南面，有一块石碑，由于年代久远，碑上的文字已模糊不清，大约是歌颂三清之德，或是记载太虚宫建造的事迹。</br><br>三清殿后，是供奉着玉皇大帝的紫阙玉皇神殿，规模略小于三清殿，殿东有一座小庙，内有一塑像，身高仅二尺左右，是供奉我国建造的鼻祖鲁班的，这座塑像虽小，但是却维妙维肖，左手握着拐尺，右手倒提着钱串，表示这位大师只钻技术、不爱钱财，幽默有趣。</br><br>三清殿的西南，有一处老母阁，阁有三间小楼，阁内塑有三尊老母像，一尊坐像、一尊卧像、一尊梳头像，将母亲的娴雅淑慧表达得栩栩如生。老母阁的东间，有吕洞宾、胡三太爷像，西间有送子娘娘像，神采奕奕，焕若真人。</br><br>在老母阁前约百余步的地方，有一口古井，这便是大名鼎鼎的长春井，相传当年丘处机修建滨都宫三清大殿时，由于缺乏木材，派人到江南伐木，木材伐好之后，用木筏子装好准备乘风运回栖霞，不想风向却突然改变，木阀被吹到了海岸上，丘处机便施用法术，派人将这些木材都投入当地的一口井里，然后再掘出这口长春井，数天后，这些木材便从长春井中涌出，这才让滨都宫得以按时完工。这口井即被后人奉之为长春仙井，是栖霞市的八景之一。</br><br>关于这口井的另一个传说是，当年丘处机云游中原、关西、西域等地，有一年忽闻家乡久旱无雨，大地龟裂，禾苗枯死，人畜渴死无数，他便命人择地掘井，却不想掘出一泉，泉水绵绵不断地从井中涌出，拯救了家乡的难民，老百姓胜感其恩，便称这口井为“长春仙井”。</br><br>绕过老母阁，有道院一所，东侧有通明轩三间，这是丘处机修道禅坐的地方，禅院安静幽僻，西北处有一座竹林院，是丘处机的弟子当年修行的场所。通明轩往西，有十八罗汉庙一座，内有十八罗汉塑像，这十八尊塑像或立、或卧、或俯、或仰、或行、或斜、或倚，状态奇异，喜怒哀乐，尽收眼底。</br><br>老母阁西，还有丘祖殿一座，高大雄伟，规模比三清殿略小，内有丘处机像一尊，旁有丘处机两位得意弟子范全生、范相生兄弟像两尊，丘处机端坐大殿中央，右手抚膝，左手执一小锄，面貌和善，神情自然，令人备感景仰。</br><br>丘祖殿前，有一尊墓塔，是丘处机为其父母立的坟墓，塔高十余米，在塔的周围，雕有八幅佛像图，塔的腰部，砌有一块石文，上写篆书《满庭芳》一文，大意是丘处机为答谢乡亲保护其父母之坟的感激之言。</br><br>丘祖殿后有范祖殿，内有二范像，有碑刻记述二人辅道修行的事迹。在公山的后坡，还有王重阳庙一座，除了王重阳塑像之外，还有一处著名的丘祖摸钱处。</br><br>相传丘处机早年在公山读书修行时，为了锻炼意志品质，曾故意将铜钱扔入草丛中，然后再去寻找，直到找回来为止。颇为神奇的是，这里生长的刺棘从来不长倒刺钩，传说是丘处机摸钱让真神受了感动，发下慈悲。</br><br>据古志记载，三清殿、玉皇殿、十八罗汉庙、老母阁、王祖庙、宝塔、竹林院、通明轩，都是丘处机当年亲自监工所建，丘祖殿是两位弟子后来修建，范祖殿为后人所建。</br><br>太虚宫建成后，经历了风雨沧桑，刚刚建成后的第二十三年，太虚宫便遭到了一场大火。当时丘处机传道外出，弟子范全生守宫。甲戌年，范全生避战乱上了艾山，刚上山顶便见“太虚火发”。等到他急忙下山救火时，几座主殿已成灰烬，惟独留下了山门。为了救火，范全生“过劳气绝，五日方苏”，八年后，呕心沥血的范全生又重建了太虚宫。</br><br>元明两朝，太虚宫经历了辉煌时代，一直经声不断、香火袅袅。每年正月十九的太虚宫庙会，更是人山人海，一代又一代的善男信女，结伴来到太虚宫进奉丘祖，抢着喝“长春仙井”的圣水祛病延年。直到清乾隆年间，太虚宫中的一株铁树突然枯死，这好像预示着太虚宫将由盛面衰。</br><br>据传三清殿是光绪末年被天火焚烧，民国元年（1911年），太虚宫山门被一个精神病患者用火点燃，只留下十二根石柱向天而立。太虚宫从此一蹶不振。后来因为战乱等社会原因，井填、塔毁、殿拆，古迹也夷为平地。</br><br>1959年，为修建庵里水库，丘祖殿和范祖殿被拆除，“文革”中，仅有的宝塔、词碑等文物也被当成“四旧”遭到拆毁，“长春仙井”被填平。</br><br>我在里面转了半天，终于在通明轩的侧屋找到了老道。我进去时他正在坐禅，我只好在一旁等候。约莫过了一刻钟的时间，他才搞完。“你来了”，他睁开眼睛说道，对我的到来似乎并不感到意外。“我说过，总有一天你会来找我的，你看破红尘想要出家了吗？”还没等我开口他就问道。</br><br>“我——有事请你帮忙。”</br><br> “哦？可是昨夜之事？”</br><br> “昨夜什么事啊？”我不相信他会知道昨晚发生的事。</br><br> “你不需瞒我，我大概都知道了。”</br><br> “你又没去过我家，你怎么可能知道？”</br><br> “小子，我若连这点能耐都没有，哪还有脸呆在这太虚宫之中，又如何对得起丘祖啊！”</br><br> “等等，你有没有能耐跟丘祖有什么关系？”</br><br>“我乃丘祖第二十代传人，怎能没关系？！”他略怒的说道：“这些年来，我游遍天下，曾到过江苏句容茅山和江西鹰潭龙虎山等各大道教发源地。经过潜心研究，我终于参悟透了道法之精髓。可是我虽有一身好法力，却也逃不出生死轮回，如今我已入花甲，还没有衣钵传人，好生头疼。你本有慧根，奈何与我道家无缘。也罢，凡事不可强求，我就不勉强你了。你且把昨夜的详细情形给我描述一遍，我跟你去一趟你们村。”</br><br>我与玄青道人出了太虚宫，坐车直奔村子而去。路上我把昨夜之事一五一十的说清楚，老道眉头微皱，唏嘘不已。不知是有些麻烦还是对老太太的情形感到同情和无奈。我还有许多问题没想明白，便要问个清楚。</br><br>“爷爷，我想问你几个问题。”</br><br>“贫道乃出家之人，还是称呼道长的好。你有什么问题就问吧。”</br><br>“道长，那老太太为何会找上我，我与她并无恩怨呀.”</br><br>“据我推算，你曾经在她出殡的那天见过她，是否？！”</br><br>“的确如此，那又如何？”</br><br>“她当初含恨而死，戾气缠身，并且用的还是棺葬，你在路边观看，沾染了一些怨气。”</br><br>“当时围观的人那么多，为什么其它人都没事，而偏偏就缠上我了呢？”</br><br>“那是因为你是那里面年龄最小的一个，阳气较其他人弱了一些，而且你的八字不清，很容易沾上那种东西。这也是我想度你的原因，奈何你放不下世间情缘…”老道摇头不已。</br><br>“可是我当初并没有什么感觉啊，我不明白为什么这十几年以来她都没有找过我，而昨天却出现了呢？”</br><br>“她当初刚死，害怕阳气，并无害人的能力，只能在你身上种下怨气，以求将来复活。十几年来，这股怨气在你身上不断生长，早已躁动不安。怎奈相隔遥远，她并感应不到，所以十几年来她一直没有苏醒。然而你昨日上坟，正好经过她的坟旁，她与那股怨气互相感应，终于苏醒过来。于是才发生了昨晚的一幕。”</br><br>“可是我还是不明白，她既然醒了，还来找我干嘛？”</br><br>“她是想要占据你的身体，她本身是一具荫尸，见不得阳光，只能在夜间活动。而且她靠吸取月亮的阴寒之气而生，每到月圆之夜，荫尸都会在月下吐纳，随之法力大增。然而如此她敢出来活动的时间大受限制，所以她想找一副躯体，如此一来便可随意活动。”</br><br>“哦，怪不得她昨晚压住我，我都快窒息了，原来她在行凶啊。可是她为什么又走了呢？”</br><br>“你身上应该有辟邪之物，在危急时刻救了你一命。”</br><br>“辟邪？你是说这个观音？”我掏出了戴在脖子上的观音看着，“咦？怎么会有一道裂缝呢，以前并没有啊”我一脑袋问号，疑惑不解的看着老道。</br><br>“那是因为它替你挡过一劫，然而终究承受不起阴寒之气，与那老鬼两败俱伤，如今它已经失去了护身的作用。”</br><br>看着自己的观音，唏嘘不已。这是用砗磲做成的，纯白色，洁净无瑕。</br><br>砗磲也叫车渠，是分布于印度洋和西太平洋的一类大型海产双壳类。是贝类动物、软体动物门，瓣鳃纲，砗磲科动物的统称。共有2属9种，砗磲属（Tridacna）8种，砗蚝属（Hippopus）1种。印度洋和太平洋都有分布，特别在印尼、缅甸、马来西亚、菲律宾、澳大利亚等国的低潮区附近的珊瑚礁间或较浅的礁内较多。我国的海南省和南海诸岛也有分布。贝壳略呈三角形，壳顶弯曲，壳缘呈波形屈曲。表面灰色，上有数条像被车轮辗压过的深沟道。外套膜大，颜色鲜艳。</br><br>　  砗磲是深海贝类之最大者，长径达1m左右，壳很厚，内壳为白色而光润，外壳呈黄褐色，将其尾端最精华者进行切磨，可作佛珠及装饰宝石。 </br><br>　　砗磲是双壳类中最大的种类，最大的壳长可达1.8米，重量可达500公斤。一扇贝壳便可以供给婴儿做洗澡盆使用。砗磲的贝壳可以做各种用具，肉可以吃。</br><br>　　在佛教界中，砗磲深受许多师父及信徒们的喜爱。颜色漂亮的砗磲手珠，除了可做装饰外，配戴在身上也可避邪保平安。师父们常以27颗以上至108颗的念珠作为配戴及念之用。 </br><br>在中医药中，砗磲贝的尾端曾被认为与珍珠具有同样的疗效，因其所含的微量元素、壳角蛋白及氨基酸有保健、促进身体代谢的功能，有抗衰老及防止骨质疏松的功效，磨或粉末常为喜爱之物。</br><br>在当今佛教界流行的宝石种类中，可作为驱邪避凶的宝石应首推“佛教七宝”。何谓“佛教七宝”？据般若波罗多蜜心经记载，此七种宝物为“砗磲、金、银、玛瑙、珊瑚、琉璃、琥珀”。</br><br>　　据《妙法莲花经·普门品》：“为求金银、琉璃、车磲、玛瑙、珊瑚、琥珀、真珠等宝入于大海。”在这七种宝石中大家最陌生也最稀罕的宝石为砗磲，因为它来自印度洋或西平洋深海海域，或少部分因地壳造山运动浮出海面而鲜为人知，因此，它的产量极少而显得非常珍贵。</br><br>　　另据《广雅·释地》，石之次玉者为“砗磲”。或以为仅是据砗磲壳得名而已，与砗磲动物本身并无联系。</br><br>砗磲之名最早见于东汉时代。《本草纲目》中记载，砗磲有锁心、安神之效，它是海洋贝壳中最大者，直径可达1m。壳内白而光润，外壳呈黄褐色，尾端切磨成的珠具车轮沟渠的图案，因此而得名为砗磲。古人也曾取白色珊瑚和一般较厚的贝壳做成圆珠，把它当作砗磲念珠。可见砗磲在古代深受人们的喜爱。</br><br>据“金刚顶瑜珈念珠经”记载，使用砗磲念珠念佛可得一倍功德。在佛门当中，高僧用它当念珠，清朝的官帽珠饰中，它是六品官员的顶珠，可见它的价值不凡。目前世界名珠中最大的一颗天然海洋贝珠(真主之珠)重6350贝克，就是砗磲所产。</br><br>我的观音是在栖霞一中南面的树人文具店买的，本来是一对，那尊佛让我送给梦了。后来两个人关系降温，我曾一度消沉，每次看到佩戴的观音就会想起她，无奈摘了下来。后来感觉戴习惯了，摘下来不适应便又戴上了。想不到如今却救我一命。看来冥冥之中自有定数。只可惜了我一片真情就那样被梦无情的给抹杀了，还未开始便已结束。她给我的理由是，心里只有林俊杰！荒唐！我打小就不喜欢追星，而现在更是对其恨之入骨。车在飞快的跑着，我的思绪在飘渺着…</br><br>九．死亡</br><br>    回到家已是下午，爸妈早已准备好了一桌素食招待玄青。我睹物思人，沉寂在痛苦之中，根本没有了食欲。到自己房间，翻出旧日往来的信件，一边翻看一边回味那些欢乐与苦楚，我本将心向明月，奈何明月照沟渠。痴心并换不来真情，如同玄青送给我的道号一般——了尘兰若，注定一生孤独。泪水模糊了我的双眼，更淹没了我的意识，不知是因为昨夜没睡好，还是因为心痛麻醉了自己，我竟睡了过去。</br><br>    睡梦中忽听外面鞭炮声大作，似乎有哭泣声。问了问爸爸才知道村子里又死人了。死者是大街上的一个老头，听人说老头子于昨夜四点多钟开始昏迷，呼吸微弱，胡言乱语。上午九点多钟咽了气，随后家里人就发丧，这会儿灵车来了，正要拉着尸体去城西郊火葬场火化。这真是多事之秋，怎么那么巧啊。这次我是打死也不敢出去了，万一再招来什么怨气，我的小命就真的要交代了。</br><br>  玄青休息完说要出去看看，我也不拦他，反正是大白天的，他不在也不会有事。</br><br>  玄青也真够好玩的，一直到天黑才回来。问他去哪了，他说他绕着村子走了一圈，查看一下地理风水，看看如何收了那具荫尸。晚饭后，玄青走上我家平房，夜观天象，说是东方有一股浑浊之气，并且西北方向戾气很重。</br><br>  我什么都看不出来，天空除了月亮，星星和云外，偶尔有一两架飞机飞过，再也没什么气不气的。那老道，净给我整些虚的。他能保护我安全就行，其它的我才不管。回家睡觉去，有玄青在我就可以安心的睡了，只要那荫尸婆婆敢来，就让他有来无回。</br><br>  晚上我玄青睡一起，耳根不得清净。死老道跟我讲什么道法道义的，唠唠叨叨，比起唐长老来有过之而无不及。我纳闷儿，为什么佛家与道家都不乏唠叨之人。大概是老王（王重阳）当初倡导三教合一，佛、道、儒三家互相交流探讨,天天唠叨惯了,后来就留下了这毛病。可能他白天累了，把自己都唠叨睡了。我想终于可以好好睡了，谁想破玄青竟然打起呼噜来，就是张飞在世也不过如此。我摇他根本就摇不醒，只能捂住自己的耳朵了。这就叫改变不了环境就要改变自己。</br><br>  一夜相安无事。十七日清晨传来消息，昨晚城里出事了。</br><br>  昨天下午，灵车拉着尸体开往城郊火葬场，不想在朱留地界灵车出现故障，耽误了行程，直到晚上才到达城里。谁知祸不单行，竟然发生了惊恐的一幕。</br><br>  晚上十点多钟，当灵车走到文化路与市府路交界处的十字路口时，司机本来要继续延文化路北上，可不知怎么，灵车不灵，方向盘失灵，灵车左转弯急速开向市府路的下坡。司机大惊失措，不停的踩刹车，果然灵车一下子停了下来。而车子右面便是人民医院。</br><br>  司机大汗，突感背后有丝丝凉气透入骨髓，直扎的后背一阵阵钻心的痛。灵车司机向来胆大，没胆子就不会长期跟死人打交道了。然而今天，接连两件事情都发生的那么诡异，纵是他有天大胆子也不由的心里发毛。背后的阴凉之气是那么的真切，绝非幻觉，因为从业十几年来从没有过这般感觉。</br><br>  司机感觉到气氛不对，但又不敢轻举妄动，只能呆呆的坐着，等待着什么。不经意间，他眼睛移到了反光镜上，车内的一幕看得真真切切。后座玻璃棺内早已空空如也，只剩下那块盖死者的白布，无风自动，诡异无比。尸体呢，后车门是在外面锁死的，而且更没有打开的迹象，前车门也未曾打开，尸体怎么会不翼而飞呢。难道真的发生了灵异事件？</br><br>  司机不敢再多想，打算下车看个究竟。正当他转过头时，惊悚的一幕发生了。一颗人头从车子顶上耷拉了下来，一双深邃的眼睛直勾勾的盯着他，那双眼睛如同十八盘隧道一般，让人感到阴寒。天哪，原来那老头的尸体紧紧的贴在车子顶端，手指和脚趾已深深的嵌入其中。嘴里不断流出黄痰，滴在司机脸上。</br><br>  司机哇的一声，打开车门，夺路而逃。于路边狂吐不止。只见那尸体走出车门，并未追逐灵车司机，而是走进了人民医院。</br><br>十．医院</br><br>    人民医院位于文化路与市府路的交界处，始建于1945年，是一所综合性二级甲等医院，也是潍坊医学院教学医院和莱阳卫校教学实习医院。 近几年来，医院先后被授予“栖霞市十佳窗口单位”、“烟台市卫生系统先进集体”、“烟台市十佳医院”、“山东省医院行风民主评议先进单位”、“山东省优质服务先进单位”、“山东省卫生先进单位”、“山东省文明单位”、“全国首批百姓放心示范医院”等荣誉称号。 </br><br>    夜里十一点多种，停尸房值班室内，小赵正在睡觉。一般在停尸房工作的都是六七十岁的人。而小赵也就二十七八岁，相貌平平，大学毕业后一直没找到工作，所以一直没有女友。想想这么大的人了，总不能叫父母养着，于是背井离乡来到了栖霞，背着父母在医院谋了一个工作。所谓的工作其实就是管着停尸房，以及给尸体化妆。一般想在医院工作必须要有关系，但是停尸房看守却不需要，因为这种工作一般人根本不愿做。医院看小赵年轻，干活麻利，便留下了他，工资还算不错。刚开始小赵很害怕，整天跟那么多死人呆在一起，换了谁心里都会发毛。但是为了赚钱，为了娶媳妇，他必须要咬牙坚持下来。他想好了工作几年后便辞职，带着钱成个家，再投资做点小买卖。</br><br>    小赵在床上翻来覆去的睡不着，总感觉心神不宁，好久没有这种感觉了，似乎有什么事要发生，难道又有人送尸体来了？</br><br>   “叮铃铃—— 叮铃铃——”</br><br>   “喂？你好——请问您是？”小赵拿起固话问道。为了联系方便，医院给他配备了一台固话。“喂？请您说话好吗？”见没人回答，小赵继续问道。</br><br>   “嘟嘟嘟嘟嘟嘟——”那边电话挂断了。</br><br>   “真是的，都十二点了还打电话吵人，打就打吧，又不说话，想吓我啊！开什么玩笑。”</br><br>   小赵放下电话，又躺在床上，刚想睡觉，外面传来了脚步声。</br><br>   “嗒-嗒-嗒-嗒-嗒——”脚步声在寂静的夜里显得格外清晰，甚至刺耳。</br><br>    小赵起床打开灯，再细听，脚步声已经没了。“奇怪，平日里这里根本就没人过来呀，这么晚了会是谁啊”小赵琢磨着，正想出去看个究竟，门却响了。</br><br>   “咚咚——咚咚——咚咚——”</br><br>   “谁呀？这么晚了有事吗？”小赵问道。门外并无回答，小赵只好打开门，仔细看了看并没有人，在走廊上转了一圈什么都没发现，只好回屋。</br><br>    小赵百思不得其解，想着想着便睡过去了。夜间再无异常。</br><br>    十七日清晨，小赵起床，要去停尸房查看一下，不料却找不到钥匙。一琢磨，坏了，昨晚肯定是中了调虎离山之计了。有人趁我出去的时候偷了钥匙。小赵来不及细想，赶忙向停尸房奔去，万一丢了尸体或出了什么事，不但会失去工作，甚至可能要担责任。要知道在中国很多地区有冥葬的习俗。有人花钱买一具尸体给死人陪葬，至于尸体的来源那就广了。有专门贩卖尸体的人，称为鬼媒人。鬼媒人到处寻找尸体，然后高价卖出，专门赚死人的钱。更有甚者谋财害命，为了赚钱将活人生生杀死，然后再卖出去。</br><br>    小赵怕有人到停尸房偷尸，三步并作两步，赶到了停尸房，发现锁开了。为了安全，停尸房的锁都是特制的防盗锁，内外两层。没有钥匙是根本打不开的。小赵赶忙进门，拉开了每一个抽屉检查，还好尸体都在，只是尸体颜色有些发暗，昨夜并未停电，而且停尸房有自己的备用电源，尸体不可能变得这么快啊。小赵又在房间内各处巡视了一遍，不料看到柜子那边露出一只鞋。小赵感觉奇怪，于是便上前看个究竟。谁知走近一看，角落里竟然是一具尸体，是一具陌生的尸体。停尸房里的每一具尸体小赵都认识，因为尸体在运进来的时候都是由小赵安排停放位置的。然而这具尸体他却从未见过，这是一具多出来的尸体！</br><br>    小赵无奈，只能上报医院。经过讨论，医院决定报案。当地派出所派人前来查看，反复查找，就是查不出死者的身份。于是先将尸体保存于医院停尸房，然后发出招领启事，并在电视台发出广告。</br><br>    凌晨灵车司机赶回我们村，将昨晚发生之事告知死者家属，说尸体自己走进了医院。起初家属不信，后来想想司机没有骗人动机，不过这事太匪夷所思，只好亲自走一趟人民医院。十七日下午，灵车司机与死者家属赶到医院。传达室通知了小赵，让他带家属认尸。家属跟着小赵来到停尸房，小赵打开房门，找到了放那具尸体的抽屉，并拉开。果然，经家属确认，尸体就是昨天死去的老头。</br><br>    派出所派了几个民警过来，听死者家属与灵车司机说明情况，惊叹不已。由于事情匪夷所思，民警将家属及司机带回派出所做笔供。为了弄清楚究竟是怎么一回事，派出所提出了验尸并征求死者家属意见。死者为大，入土为安。本来在农村是绝对不允许对死者不敬的，但如今，死者家属也是一头雾水，自己家老爷子死了，不知什么原因尸体自己跑了，闹出了这等事。十里八村的传出去，定会说三道四。因此，家属允许让公安机关介入，哪怕是解剖尸体也要吧事情搞个水落石出。</br><br>    傍晚，家属先回家，等第二天过来拿尸检报告。晚上法医在医院解剖室对尸体进行全方位的检查，包括解剖。进行操作的是一位老法医，刀法精湛，经验丰富，是公安机关特聘来做解剖的。</br><br>    这一整天，我们也没闲着，也不知道那老婆婆什么时候又会来害我。上午，玄青让我带他去坟地看看。来到坟地，景象还是那般凄凉，我们找到了老太太的坟墓，重新观察了一遍。我看玄青眉头紧锁便问道：“这可是白虎衔尸之地？”</br><br>   “咦？你是如何得知的？”玄青没想到我一眼便可看出这里的风水格局。</br><br>   “我经常看这方面的书，多少懂一点，仅皮毛而已。”</br><br>   “是啊，这的确是个十贱之地，不宜下葬啊，不知是谁给她找了这样一处安葬之所。”</br><br>    玄青绕着坟墓转了几圈，然后看向那塌陷的洞，我也随之过去察看，这一看吓得我大喊一声，直接跳了回去。</br><br>   “大白天的怕什么！”玄青对我的反应极为不满。</br><br>   “这——这里面——怎么冒出一副白骨呢，我前天来的时候，里面分明是空的啊。”</br><br>玄青闭上眼睛想了一会，说道：“原来如此，昨夜我看到东方的那团浑浊之气就是由这堆白骨散发出来的。”</br><br>   “可是前天这里面什么都没有啊，怎么现在凭空多了一副白骨呢？”</br><br>   “这便是那老太太之骨，看来十五晚上她受了重伤，回到坟地，毁了形体”</br><br>   “你是说她死了？”我压抑的情绪一下子轻松了起来。</br><br>   “我只是说她毁了形体，并未说她已经死了。如今她魂魄定藏匿在西北方向。”</br><br>   “魂魄？</br><br> “其实她的魂魄也只是一股怨气，并无七情六欲。昨夜那西方的戾气定然是她。看来又要出事了。我们回去准备一下吧。”</br><br>十一·归来</br><br>    下午我们带了工具又来到坟地，先把尸骨焚烧了，又把坟墓填平，玄真布下一个阵法，防止老太太再回到根据地。她的儿子早在多年前就离奇死亡，儿媳妇带着孙子改嫁了，后来便无了音讯，这座坟早已没有人管，所以我们才能顺利的进行这一切。摆平了坟墓我们便早早的回家了，说不定什么时候就会有事情发生。</br><br>    回到家，玄青把家里布置了一番，设下几个阵法，那是道家的东西，外人很难看懂。道家降妖大多用符，不同的符有不同的符号，作用也不相同。就拿掌心雷来说，也有好几种，功能，威力都有不同。用符一般要念咒语。所谓的咒语从科学的角度上说是一种次声波，人听不到，但对那些非正常生命物质却有极大的影响，通过次声波干扰，打破它们的运行规律，从而破坏或摧毁其生命，这样便可降伏妖物鬼怪。</br><br>    不干净的东西罕见但又无处不在。之所以这样说，那是因为它们跟我们生活在同一个大空间里的两个错位空间之中，平时我们无法看到它们，同理，它们也看不到我们。但是当遇到特殊情况，比如说地磁发生异常或者其它原因，两个错位空间发生衔接，两种生物便可以在空间内穿梭，免不了要发生冲突。这类东西大多无形，来到人类空间必须要找一个载体才能生存，于是便有了鬼怪害人一说。还有一类本就跟我们生活在同一个空间里，即妖精。万物老去必有精气，很多动物达到一定年龄身上便带有了灵气，它们可以用意念来控制人。所谓的意念其实是一种磁场，一旦人步入它们磁场的有效距离之内，便会受其干扰，大脑内电流发生变化，从而失去意识，受其所害。</br><br>    生物体上都带有电，称之为生物电。不同的生物带有不同的静电，一旦两种生物互相接触，两种静电便会相互干扰。基本法则是先中和后传电。生物界中，人体的静电最强，我们与一般动物接触，先把它们体内的电流中和掉，然后再将自身电流传给它们。如此一来人类就把动物驯化了，但是对一些有灵性的动物，人类很难干扰到它们体内的电流，甚至会被它们所干扰，形成反训化，即我们被它们的意识所控制。农村经常会诈尸，大多是由于猫，老鼠之类的小动物从尸体身边经过，它们的皮毛带有很强的静电，经过尸体时，尸体导了电，就形成了诈尸。遇到这种情况一般人束手无策，会请道士帮忙，其实我们只要找到那个动物，将其屠杀，或者送到远一点的地方，使尸体脱离它的有效磁场距离便可。也可以用一根导线将尸体与大地连接，将尸体上的静电引入大地即可。由此可以看出，一切所谓离奇的不可思议的事情都是在科学的基础之上发生的。</br><br>    十七日晚上九点多钟，医院解剖室。法医老王开始对尸体进行解剖。解剖室位于医院地下室，在正月里，解剖室寒气森森，充斥着诡异的气氛。老王慢慢揭开盖尸体的白布，忽然，尸体的眼睛睁开了，黑洞洞的说不出的阴寒。老王大汗，眨了眨眼睛，再看向尸体，眼睛是闭上的。“难道是看错了？”老王真后悔没找一个助手，自己一个人在深夜解剖一具离奇死亡的尸体，叫谁能不怕。</br><br>    然而现在后悔已经没用了，只能硬着头皮上。老王先对尸体外部即口腔，鼻腔各方面进行检查，并未发现任何异常，身体一点瘀伤都没有，排除了击打致死的可能性。老王想检查尸体的眼睛，看看有什么问题。当他的手刚刚触碰到尸体的眼睛时，诡异的一幕发生了。尸体的眼睛忽然睁开，直勾勾的盯着老王。嗓子里叽里咕噜的，喘着粗气。两只手青筋暴起，双腿弯曲，眼看就要坐起来了。老王一头冷汗，早已失去理智，抄起解剖刀便向尸体身上乱扎一通。然而，任凭老王如何扎刀，那具尸体仍然不住的挣扎。老王彻底崩溃了，踉跄着跑出了解剖室，过了许久才想起来要报警。</br><br>    警察赶到后，解剖室一片狼藉，血肉遍地，整个屋子充斥着一股尸臭。可是警察寻遍了整个解剖室，也见不到尸体的影子，只能下通缉令对尸体进行抓捕。也许在民众看来，这足以让他们笑掉大牙，然而，对亲身经历此事者，一切显得那样恐怖。</br><br>    城里，警笛声四起，乡下却显得静谧异常。有时候太安静倒容易让人感觉不安。科学证明，噪音对人体有极大伤害，同样，人处在无声的世界里照样不利于健康。而现在的村子，没有了一切动静，安静的诡异。空气中，血腥浮动，透露着一股杀气。</br><br>   十七的夜，本来是一轮圆月当空照，然而此时，月隐了。静谧的天空挂满了浮云，确切的说是乌云。风起了，正月里的风依然那样彻骨，肆虐的风为何刮不走这漫天阴云。难道这便是“山雨欲来风满楼”的意境？诗歌是美的，但现实环境却是恶劣的。这种鬼天气，谁有心思去吟诗呢。诗是诗人创作的，诗人是孤独的人，只有孤独的人在无聊时才有心思写诗。写诗不一定需要有才，只要你孤独到一定程度，便可以出口成章，甚至写下千古名句，流芳百世。</br><br>   雨下起来了，这雨来的异常，漫天的雨点在风中跳动着，似乎并不想落下。难道它们在等待着什么？天渐渐的模糊了，黑暗的夜里你可以看到白茫茫的一片。夜那么黑，天那么白，这似乎很矛盾，然而今晚的一切都有悖于常理，科学在这种异相面前早已显得苍白无力。这一切到底是什么征兆呢？直觉告诉我，今晚将会有事情发生，而且一定不是好事！在危险面前，人的直觉往往很灵，这也是人的一种自我保护本能。就像动物一样，它们对危险的感应要比人强很多。也许人在安逸的环境中生存久了，这种本能已经渐渐退化了…</br><br>   夜已将近十二点了，我躺在炕上辗转反侧，难以入眠，生怕睡着了就再也无法醒来。现实虽然残酷，但是当初我徘徊在死亡边缘的时候，我是那样的依依不舍。不管怎样，活着就是美好的，生命是如此的脆弱，然而，我要坚强的活着。我不允许任何人，任何东西威胁我的生命。我可以把生命还给我的父母，因为我的命本来就属于他们的，其它人休想，更不用说是一个死人。死人就该呆在死人的地方，你跑出来作恶多端，破坏了大自然的平衡，就应该收了你。哪儿风凉哪儿呆着去！</br><br>   玄青睡得很香，鼾声如雷，震得我头疼，吵得我心烦意乱。这几日我都没有睡好，经历了这种事，教谁会安心呢。我不比玄青，乃业内人士，经历的多了，见怪不怪，在这种情况下依然睡得那么香。修道之人讲究清心寡欲，但我看他纯是没心没肺，要不怎么会抛妻弃子，去做道士呢。当年祖师王重阳便是如此，天底下道士和尚那么多，成就了多少寡妇和孤儿？！人说修行乃是为了拯救苍生，真的是舍小家，顾大家。古人在这方面做得很到位，令当代人汗颜啊！</br><br>   应该说人也是一种群居动物，大家应该是互利共生的。然而很多人意识不到这一点，固守着小家思想，处处损人利己，闹得自己跟集体孤立了，仍不知悔改。别人一忍再忍，他们却以为你好欺负，反而变本加厉，直到闹到大家决裂，还厚着脸皮说人家的不是。似乎人类的世界变得冷漠了许多，人心不古，世态炎凉。人们的思想水平似乎与受到的教育成反比。读的书多了，人变得聪明了，增加了勾心斗角的砝码，于是你争我抢，明争暗斗。往往是两败俱伤还不肯罢手，我不明白，这争来斗去的究竟是为了什么？利益还是一口气？争到最后，是得到的多，还是失去的多？争名夺利的人们早已失去了理智，甚至丧失了人性，所谓的高级动物反不及那些低等的生物，狼，蚂蚁，蜜蜂，哪一个不比人类团结。我们应该反思了，物欲横流不能丧失本性，大难面前我们团结一致。社会原本可以更美好的！</br><br>   一声惊雷将我从思绪中拉了出来，也将玄青从梦中拉了回来。全家人都醒了，这雷声很近，似乎就萦绕在耳边，震得我耳朵都疼了。从窗户向外看去，天已经晴了，月亮高挂在正空，一切又变得那样静谧。院子里的鸡鸭都不叫了，不经意间，我发现我家的狗在瑟瑟发抖，眼睛直勾勾的盯着东方，一声不吭，显然是受到了过度的惊吓。这是一条狮子狗，养了两年了，我从没见它如此惊恐过。难道？…</br><br>   正想着，一道黑影从天空划过，落到了院子西面的鸡窝里。月光下可以很清楚的看出那是一个人影。她——那个鬼老太终究还是回来了！我们慢慢的朝鸡窝走去，扒开旁边的草看去…</br><br>十二．激战 (上)</br><br>  刚凑近鸡窝，一股血腥味扑鼻而来，我看到了恐怖的一幕—— 一个干瘪的老头正抓着一只鸡在吸血，旁边的鸡竟然一声不吭，大概是感受到了死亡的气息。再看那个老头，这不是栖霞警方正在通缉的医院里丢失的那具尸体吗，怎么他不回家却跑到我这里来？再看他的身体—-他的肚子早已糜烂，似乎是被人用利器戳破的。肠子、胃，好多内脏都挂在腹前，好不恶心，我当场狂吐不止。我的呕吐声惊动了他，只见他慢慢的把脸转向了我，本来面无表情的脸突然露出了贪婪的笑。那笑容是如此的僵硬，那黑洞洞的眼眶是如此的阴森。我冷不丁打了一个寒战，全身都软了，想跑根本就迈不动腿，嗓子也失声了。我现在才明白为什么所有的鸡鸭都鸦雀无声了 ，不管是人还是动物，在受到过度惊吓后，短暂的时间里会失去一切本能，只能坐以待毙。</br><br>  连吸了几只鸡的活尸，身体已渐渐丰盈，赤裸的身体在月光下显得苍白无比，唯有他的腹腔一片暗红，散发着阵阵血腥。此时，他正注视着我，鼻孔里冒出丝丝凉气。我听见他的嗓子里发出“咯咯”的笑声，我的腿越发的软了，想跑却跑不了，要喊也发不出声，只能在心里干着急。汗水早已浸湿全身，我再一次感受到面对死亡的无奈。</br><br>  难道我刘某人今夜要丧生此地？正当我想着会怎么死的时候，老头扔下手中的鸡，朝我扑了过来。我感到一股阴寒之气冲击到我的奇经八脉，令我颤动不已。慌忙间，我似乎恢复了一些活动能力，右手食指和中指并拢，用尽全身力气点向老头的厥阴俞穴。厥阴俞穴位于第四胸椎棘突下旁开1、5寸，经属足太阳膀胱经。点中，冲击心、肺，破气机，易亡。</br><br>  我的动作并没有击退老头，反而被他抓住胳膊，这下我可慌了，大喊一声：“玄青何在？再不出手，我命休矣！”</br><br>  说时迟，那时快。正当老头的牙要咬到我的气管的一刹那，玄青动手了。“该死的玄青，早干嘛去了，想要等我死了以后再降妖吗？”我在心中大骂不已。</br><br>  “玄青在此，妖物修得猖狂！看招！”只见玄青一口唾沫吐在老头脸上。天哪，这种小孩子经常玩的恶心游戏到了他那竟成了降妖除魔的招数。现在是危急时刻，玄青开什么玩笑呢！</br><br>  我心中骂着便要上，拼了命也不能放了这具活尸，为万民除害，死得其所。毛主席曾表扬过刘胡兰同志“生的伟大，死的光荣。”同样是刘家人，而且人家是小女生，我堂堂一个大男生说什么也不能给广大男同胞丢了人！</br><br>  我迈开脚步，以最快的速度和最大的加速度向尸体冲去。只见老头连退数步，一个踉跄跌倒在地。我见有效，便继续往上冲，右手双指点向老头神庭穴。此穴位于头前部入发际五寸处（眉心向上入发际）。经属督脉，为督脉与足太阳膀胱经之汇。被击中后头晕脑涨。当我跑到距离老头一米开外的地方时，老头忽然站起，朝我扑来。我速度太快，脚步停不下来，眼看就要撞上去了，心中暗叫不好。</br><br>  我清晰的看到了老头贪婪的笑，他那沾满鸡血的嘴张开了，嗓子又发出“咯咯”的声音。就在我们相撞的一瞬间，玄青暴起一脚，踹在老头鼻子上，这是迄今为止我看到的最完美的一脚。老头狠狠的吃了一记酸枣，鼻子早已塌陷，脸上的腐肉一片片的往下掉，尸水不停的流出，散发着一股恶臭。只见他退到鸡窝，顺手抄起一只鸡便吮吸起来，那破相的脸恢复了些许。</br><br>  双方暂时停止了激战。我挥手擦着汗大骂:“爷爷的，怎么就不灵了呢？”玄青没好气的道；“你小子以为你有多大能耐啊？！你往上冲找死急着去投胎吗？！”</br><br>  “我第一次往上冲，他明明就是退了好几步，还摔了一跤呢。谁知道他第二次怎么就不退了呢？”</br><br>  “那是我用唾沫把它击的，就你？要不是我，你早就被他吸干净了。”</br><br>  “o(∩_∩)o…哈哈，唾沫，就你那口恶心的痰？我可比你吐的远。如果真灵的话，那我就用唾沫淹死他，o(∩_∩)o…哈哈”我实在不能接受玄青荒谬的说法，捧腹大笑。</br><br>  “你想死就吐吧你，你以为谁的口水都管用？那还要我们道士干什么呢！”</br><br>  “难道你的口水有何特别之处？是不是里面掺的什么化学药品，哦——两者结合，那不就是生化武器了吗？！”我认真的分析着，为自己的结论惊叹不已。</br><br>  “修要胡言乱语，唾液乃是人体至阳之物，活尸乃极阴之体，以至阳之物克至阴之体，这便是反应原理。”玄青解释道。</br><br>  “那为什么我的唾液就不行呢？”我十分不解：“大家都是人，而且都是男人，没道理啊。”</br><br>  “不同的人体内有不同的气，表现在外面便会形成一个气场，即所谓的人气。女性气场偏阴，比较容易接触到同为阴性的肮脏之物。而男性气场属阳，阳刚之气强了，那些不干净的东西便不敢接近。然而，现如今，男性受到各种因素的影响，阳刚之气渐弱，甚至开始转阴。这样下去，世界便会由阳性逐渐转为阴性，到那时妖孽肆虐，人类必会遭受前所未有的洗劫，甚至灭亡。仅凭区区几个道士是无力回天的。你年龄还小，阳刚之气不旺，你的唾液是制服不了他的。”</br><br>   玄青的话让我感触颇深，的确，现在的男孩缺乏阳刚之气，甚至扭扭捏捏，很多人有不同程度的女性化趋向。可以说，这个世界上真正称得上男人的人越来越少。像好莱坞影片中的那种强汉，现实中又有多少呢？军队！对啊，也许只有军中男儿才配称得上男人。大灾面前也不乏男人，也许我们的生活太安逸了，男人们是不是该磨练一下了。培养男人要从小做起，当今幼师大多是女人，至少我没见过男幼师。孩子们从小便在一个女人的教育下成长，不阴才怪呢！这个问题是否应该考虑一下呢？这也不是我一个学生能解决的事，就不空谈了。</br><br>  “噢——为什么我点那老头的穴，他却没受到丝毫伤害呢？要知道我点的可都是死穴啊！”这个问题我实在搞不懂，只能再问玄青。</br><br>  “你傻啊，他早已经死了，现在只不过是一具活尸，你点他会有用吗？我看你是在危险面前吓坏了脑袋，像你这样怎么能接我衣钵呢？！”玄青叹息道。</br><br>  “谁要接你衣钵呀，我还要娶妻生子呢。古人云‘不孝有三，无后为大’，我可不愿做一个被世人唾弃的不孝子。”</br><br>  “罢了，罢了，等你看破红尘再说吧！”玄青显得很无奈。</br><br>  “怎么原来那个老太没来，这个糟老头子却来了，我惹鬼窝啦?!”我看着鸡窝里那嗜血如命的老头问玄青。</br><br>  “不，他们是同一个人。”</br><br>  “不会吧，你没发烧吧，怎么男女都不分啊你，不愧是道士，遇人不问性别啊。”我调侃道。</br><br>   “你才发烧呢，他现在是一具活尸，根本就称不上是人，更不用说男女之分了。”玄青解释道：“我说的是他们的魂魄是同一个，定是那老太的肉体已经毁灭，我们在坟地里销毁的那副骸骨便是她的。这具男尸应当是她借尸还魂，回来找你的。”</br><br>  “她还真执着啊，既然已经找到了一副皮囊，干嘛还来骚扰我啊，烦不烦啊，真是的。这老头也真是的，早不死，晚不死，偏偏赶上这会儿死。定是中了这老太的美人计，结果葬送了身家性命，还与人家合二为一了，然后助纣为虐，来欺负我一个小男生。都一大把年纪的人了，欺负小孩子，羞不羞啊…”我一口气说了一大通。</br><br>   再看那臭老头，更是气人，他正在朝我“咯咯”的笑。</br><br>  “他并非自然死亡，而是被取走了魂魄，老太乘虚而入，占据了他的肉体，又趁机潜入医院停尸房吸收大量阴气想阻止尸体的腐烂。但是毕竟这肉体已经老了，她根本寄居不了多长时间。所以她要找一副年轻而又不排斥她的躯体。”玄青瞅着那老头对我说道。</br><br>  “那她就来找我？！”我对老太的行为十分不满。</br><br>  “谁让你闲着没事，小时候跑街上，看人家出殡。你要是那天不出去，也就不会碰见她，你也就不会沾上她的怨气，她如今也就不会找上你，也就没有那么多麻烦了！”玄青说了一大堆“也就”，听得我都烦了，出家人就改不了啰嗦的毛病。</br><br>  “如果没有你说的‘要是’，也就不会有你说的‘也就’，你也就不会到我家大吃大喝了，也就不会在晚上震得我睡不着觉了，也就…”不知何时我也变得啰里啰嗦的。</br><br>  “好小子…你…我…算了，我跟你计较个啥呢，出家人懒得跟你啰嗦…”玄青又是一大堆话，吵得叫人心烦。</br><br>   老头似乎也被玄青吵坏了，疯狂的吼叫着，最后口吐白沫，双脚暴起，朝我们跃了过来，在天空形成了一道开口向下的抛物线。如果是在学校，数学老师肯定会让我们在规定的时间里建立平面直角坐标系，并算出抛物线的顶点坐标及方程，甚至还要结合实际，求出方程的定义域和值域，最终便可计算出老头的落地点，以便躲过这致命的一击。不过估计我还没建好系，就被老头干掉了。我向来是不喜欢数学的，从初中开始，我的数学成绩一直处于低谷，如果建系画出图像的话，大家可以直观的看到，曲线上每一点的斜率都不超过零。算了，丑事咱不外扬，内部知道就行了。</br><br>十三．激战 （中）</br><br>   却说，老头被玄青的啰嗦激怒了，朝我们攻击了过来。我这会儿知道不论是点它穴还是用唾沫泼他都没有用。于是我做出了一个明智的抉择，大喊一声“老头，你打他，不管我事！”一边说，一边向后跳去。留下玄青在那骂娘。</br><br>   那老头暴牙露出，两眼放光，像被激怒的野兽般扑向了玄青，眼看就要砸到玄青头上。只见玄青不慌不忙，飞起一脚，直跺在老头胸前。只听“卡茨”一声，老头的几根肋骨尽皆粉碎。老头被踢中，连退数步，发疯般的吼叫，又冲了过来。肉体上的创伤不不能影响到他的速度与力度。</br><br>   转眼之间，老头已经跃到玄青跟前，张开流着尸水的口，便要咬下。玄青转身，反手拔剑，竖在胸前，左手早已掏出一道符。玄青将符插于剑上，左手食、中二指并拢，于符上擦过，口念咒语，一个三百六十度转身，符燃烧了起来。玄青飞身向前，大喝一声“赦”，剑插向了老头左胸心脏处。</br><br>  “大半夜的瞎折腾什么呀，神经病啊，还让不让人睡觉啦。”也许是我们闹的动静太大了，吵醒了邻居。</br><br>  “靠！”玄青骂道：“骂你个鸟，破了我的咒。”</br><br>  原来邻居的那句骂词与玄青的咒语发生了冲突，两条声波干涉，波峰与波谷相遇彼此拮抗，使玄青的咒语失灵了。看来脏话是不能乱说的，有时会要人命的。</br><br>   攻击既已失败，玄青只得暂时后撤，可那老头不依不饶，滑步跟上，想要一举歼灭玄青。玄青虽然是吃素的，但他也不是好惹的。只见他身体向右一翻，躲过了老头的攻击。玄青不敢怠慢，一个侧空翻压住了老头。老头被玄青骑在胯下，他非韩信，怎能容忍这胯下之辱。只见他脖子反转，提气，蓄力，震撼人心的时刻到了。我实在想不到他会向玄青吐了一口唾沫。</br><br>  玄青也没料到老头会出此一招，真的是不择手段，下流无耻，狼心狗肺，丧尽天良…玄青在心中把他所知道的所有的贬义词都念叨了一遍。</br><br>  玄青被那老头狠狠的恶心了一把，痛苦不已，大喊一声“今天若不宰你，难解我心头之恨呀！”说完抹了一把脸，脸上的液体又黏又臭，还有一股腥味。玄青狂吐不已，骂道:“你休猖狂，待贫道洗把脸再回来与你周旋。”说完拂袖而去，留下一句让我听了想打人的话：“你不是会少林罗汉拳还有那个什么达摩易筋经吗？这儿先交给你了，等我弄干净了自己再过来收拾他。哦，你可别让他吐你一身啊，恶心死了，最好把他的嘴给我堵上，免得污染了环境，影响我作法…”</br><br>   “都什么时候了，你还顾着干净，你还管不管人死活啦！”这事让谁碰到都会骂玄青，我继续说道：“你也老大不小的了，一点常识都没有，羞不羞呀你。达摩易筋经不是用来打架的不好，那个动作慢死了，最适合你们这种中老年人练习。虽说久练可以打通任督二脉和全身气血，并可延年益寿。但我正值青春年少，活泼好动，哪里受得了那种婆婆妈妈的练法啊！”</br><br>    “我不管，你自己看着办吧，不要求高，你能拖他五分钟就行，我还要进去找几样法器，否则只凭两只手根本收不了他。你慢慢忙，贫道闪人了！”说完，玄青大步流星的进了屋子，留下我们一家人与那个死人。</br><br>     夜黑风高，北风肆虐，妖魔乱串，人心惶惶。在这种及其恶劣的环境下，一场混战即将上演。“男儿何不带吴钩，收取关山五十州。”</br><br>    我想起了张飞，想起了关羽还有赵子龙、薛仁贵、程咬金、辛弃疾…当我想起本家刘胡兰同志时，我热血沸腾，再也按捺不住内心的激动，大喝一声：“匹夫！蛇窝泊刘某人在此，你若不服，尽管放马过来，小爷定当与你大战三百回合。只要我尚有一口气在，就不能让你为祸人间。毛主席万岁！中华人民共和国万岁！”</br><br>    我先在原地秀了一套形意拳散字功，然后用少林鹰爪功的快奔步伐前进，到达目标时脚起脚落，一个漂亮的转身，右脚正中老头前胸。落脚处只觉松软如泥，再一看，尸体倒地，胸廓早已塌陷，嘴里又是一股黏液喷出，恶心万分。老头子可能被我说蒙了，一时半会儿忘了招架，让我暂胜一招。兵家讲究乘胜追击，我也不管儒家尊老爱幼的那套美德还是规矩的，直接不给他反应时间。</br><br>    却说尸体中我一脚倒地正欲起，我飞身而上，骑于其背。这时我感觉自己就是武松，刚要挥拳而上，他又使出了那卑鄙的一招——吸气，转头，喷…所有动作一气呵成，干净利落。如果是在平时，本人定会拍手叫好，可是现如今，受罪的是自己，根本没有闲情雅致去欣赏他的完美套路。</br><br>    我一生做人堂堂正正，最瞧不得有人用卑贱下流的手段了，这会儿恨不得把他砸成烂泥。但是形势所迫，此刻需要明哲保身，暂且不与他理会。眼看着就要被他喷一脸口水，我顾不得许多，当场一个后空翻避开其锋芒。活尸老头既得自由，顺势站起，动作依然那样灵活敏捷。我若练成他那招腿不打弯，直接站起的功夫，估计也成半个活尸了。</br><br>老头站起，一个一百八十度转身，用黑洞洞的眼睛看着我，这会儿已经不再笑了，而是呲牙咧嘴的发飙。他堂堂一具活尸，竟然被一介学生弄得如此狼狈不堪，这极大的打击了他老人家的自尊心。为了证明自己是一具真正的活尸，为了不给活尸界抹黑，为了个人的利益和荣耀，他再一次向我发起了猛烈的进攻。</br><br> 我敢确信，他绝对不是一个好惹的主儿。他这一发飙，我这心里就发毛，着实大汗了一把。他进攻，我后退，他速度极快，我速度更快。平时走路爱怎么慢就怎么慢，这会儿却不敢，要是慢了半步，我的小命恐怕就要交代了。我家院子也不大啊，眼看着我就要退到墙边了，再退下去我就走投无路了。正在我焦急万分的时候，老爸上了。只见老爸顺手抄起院子里的镐头，三步并作两步，直达活尸身后，一镐头砸下。</br><br>那老头只顾追我，竟然疏忽了背后，眼看就要被老爸的镐头撬开脑颅，可是谁也没有想到，老头的运气竟然那般好。正当老爸快步上前到达活尸背后的时候，不料被老头流出体外的肠子给绊了一跤，狠狠的摔了一下子。这真是戏剧性的一幕，老爸大叫：“窝囊，窝囊！”</br><br>老头并不理会身后的老爸，仍然向我攻击，企图一举歼灭我。我已经退到了墙角，再无退路，只能等死了。我闭上眼睛，脑海中闪过一个人，我开始念起了自创的咒语：“刘胡兰刘胡兰刘胡兰刘胡兰刘胡兰刘胡兰刘胡兰刘胡兰刘胡兰刘胡兰刘胡兰…”念完数遍之后，顿觉神清气爽，勇气大增。睁眼，老头已到身前，他又笑了，那咯咯咯的笑声实在讨厌。他伸出双手，一个腾空朝我扑来，好完美的一道弧线啊，该死的抛物线，小爷以后再也不想见到你了。我恼火了，愤怒战胜了恐惧和恶心。就在老头落地的那一刹那，我身子一矮，一个鲤鱼翻身滚到了他背后，顺手扯起他的肠子。我起身，扯其肠于手中，趁机勒在他脖子上。他还未及转身，被我出了这么一招，他也恼火，不明白今天怎么就这么窝囊。</br><br>我勒住老头脖子，想困住他，然后大喊玄青。怎料那老头力大无穷，拽着我往旁边疾奔。我既已经套住了他，哪肯轻易松手，农民家的孩子力气也弱不到哪里去。于是我们两个在院子里转圈，旁边的爸妈看得眼花缭乱，心急如焚，然而又无能为力。</br><br>在转了n圈之后，我体力不支，眼看着就要松手了。“不行，我不能就这样便宜了你，我再加把劲勒死你！”心中想着，手上一用力，史上最恶心的一幕发生在我身上。就在我用力的那一刹那，谁也想不到，他的肠子断了，顿时一股恶臭迎面扑来。只觉手中黏黏的，打眼一瞧，妈呀，手中握的不是别的，正是老头的大便，俗名唤作“屎”。这让我想起了狗屎，继而联想到了萤火虫。在我们这儿，萤火虫有一个很特别的名字，叫做“狗屎虫”。因为大人们说萤火虫是从狗屎中爬出来的。</br><br>乡下的萤火虫很多，每年初秋的夜晚，大街上都会有一群孩子在追逐萤火虫，逮着后放在一个透明的瓶子中，看它们发出美丽的光。我们还会把它的尾部揪下来，贴在脑袋上，这样我们也就变成了大萤火虫。记得有一次，我捉了很多萤火虫，装在塑料袋里，回到家把袋子打开，将萤火虫向空中一抛，顿时萤火虫四处乱串。爸妈正在吃饭，好多萤火虫掉进了菜里。萤火虫就是狗屎虫，着实把爸妈给恶心了一番。后来我再也不捉萤火虫了，虽然知道它们不是从狗屎里爬出来的。</br><br>刚才说到老头被我扯断肠子，沾了我一手赃物，仔细一瞧，我握的那段可不就是大肠吗。这下子我可吃大亏了，被他狠狠的恶心了一把。我哪里受得了这般侮辱，拽着他的肠子使劲一拉，我的乖乖呀，他的小肠、胃、食管等一起被我扯出来了。而那老头并没受到实质性的伤害，反而趁机逃脱，反身扑我。说时迟，那时快，我一招罗汉睡觉躲过了他的一扑，然后一百八十度转身出了一招马步拉拳。出手处感觉空空如也，打眼一瞧，大汗，打错方向了。老头在我背后，双手按住我打出的左拳，顺势往后一扳，再往上一曲，我胳膊疼死了，再也动弹不得。</br><br>“吾命休矣！”心中大骂玄青不来救驾，“爷爷的趴在屋子里干嘛，找法器用那么长时间吗，是不是我不接你班你就要我命啊。 小气鬼，等我见到你家祖师爷非参你几本，让你天天倒霉…”</br><br>短短的几秒钟时间内，我把玄青骂了nm遍。老头可不理会我心中怎么想的，正寻思着怎样侵入我体内。只见他左看看，右看看，嘴里的液体不断的流在我后脑勺上，然后顺着耳根流到我的脸上，当场把我恶心的要死。</br><br>我狂吐不止，一直到吐得不能再吐了，吐得虚了，身体软了，眼神迷离了，感觉自己越来越轻，飘飘然。我飘荡在天空，可以清楚的看到下面的一切，院子里的凌乱不堪，爸妈那焦虑的眼神。老头正趴在我身上不知在干嘛。我感觉自己在不断的膨胀，脑袋越来越大，难道我死了吗？</br><br>就在我迷糊的时候，身子突然一沉，我恢复了意识。再看向身旁，玄青正在与活尸对战，我刚才是怎么啦，拍拍身上的泥土，我站了起来，双腿感觉软软的。</br><br>“小子你有种，死都不肯求我。我本以为面对死亡你会答应做我徒弟，求我救你，想不到…哎…”玄青连连叹息。那边，他与老头打得正酣，工欲善其事，必先利其器，有了法器就是不一样。只见那老头节节败退，好不狼狈。玄青手拿浸了朱砂的红线，绕着老头走起了凌波微步，瞬间将其捆绑结实。道家不但修心，还要修法，习武，比起佛教来要厉害许多。但是建国后，道教就有些没落了，在古代，儒、道、佛三教并行，而儒道两教走得较近一些与佛教形成对抗之势，佛教就显得有些低潮。木秀于林，风必摧之。建国后，文革破四旧，道教首当其冲，从此一振不撅，新中国成立后才稍有起色，但远不及从前。</br><br>却说老头被玄青的朱砂红线捆住，顿时颤抖不已，全身冒白气，眼看就要玩完。只见他顺势倒地，脸朝下，张开嘴，胸口一起一伏的吐纳着。过了片刻，只见他怪叫一声，身体一挣扎，红线顿时化成粉末。</br><br>“怎么会这样？你家下面阴气怎会如此之重？”玄青大惑。</br><br>“阴气？哦，这儿原来是一片坟场，后来填平了在上面建起了房子。”爸爸解释道。</br><br>我家原来不住这儿，老房子建在村子南部。那时候还没有我，听妈妈说我们家老房子很破，下雨时，人家在家消遣，而我家却在排雨。后来爸妈借钱在村子北部建起了新房子。而新房子底下就是一片坟地，我家房子底下有六座坟，而东南方不远处原来有一座土地庙。小时候听他们讲，我害怕了好久呢。可他们告诉我房子地下有坟好，曾经在学校我还大吹了一阵子呢。想不到今天竟因此助了那活尸一臂之力，使其吸取了地底下大量的阴气，不但脱离了玄青的束缚而且法力大增。</br><br>活尸吸收了大量阴气，再加上他本身那股强大的怨气，法力疾增，他更加的肆无忌惮。他深深的知道，想要得到我的躯体就必须先干掉玄青。天快亮了，他早已没有了耐心，玄青的阻挠惹恼了他。如果用一个词来形容他对玄青的感觉，我想“恨之入骨”是最恰当不过的了。他的坟墓早已被玄青和我毁掉了，再也没有他的容身之处。如果他今夜不能成功，那么天亮后他将会受到阳光的炙烤而受到重创，恐怕很难再熬到下一个黑夜。就算勉强熬过去了，他的法力也会荡然无存，最终还是逃不过魂飞魄散的下场。</br><br>十四．激战 （下）</br><br>生死只在今夜，现在那活尸已经是孤注一掷了。横竖是个死，拼一拼说不定还有存活的希望，所以打起来格外卖力。这样一闹，可就苦了玄青了。他本已是五六十岁的人了，闹了一夜没睡好觉。跟老头打架那么久早已经体力不支了，而如今活尸又吸收了大量阴气，法力大增。面对残酷的现实玄青只能叹息不已，然而架还是要打的，不打是要死人的。</br><br>活尸老头早已按捺不住内心的愤怒，双腿蹬地，暴喝一声，飞身向前，直奔玄青面门而去。玄青虽然体力不支，但面临攻击也毫不示弱。在一定条件下，人的体力就像银行里的钱一样，是可以透支的。尤其是遇到危险时，人的体力可以大增。很简单一个例子，一个落水的小孩在求生时可以将一个下水救他的壮汉按在水底。所以有经验的人在救落水者的时候，都会等到落水者被氺灌的差不多的时候才会下水救人，免得提前下去自己被落水者灌死。</br><br>却说玄青受到活尸攻击，眼看着就要被活尸的双手抓到面门。只见他身子一矮，一个后空翻，双脚顺势蹬在活尸胸膛上，然后顺着活尸飞行的方向一送，那老头直接飞过了头，砸在了墙上。然而老头并未倒地不起，而是借着墙的反弹，身体呈螺旋式飞了回来。此时活尸老头的身体如通了电的电钻一般砸向玄青。照这样的速度和力度，任何人被击中身体都会被击穿。我们在旁边早已看得目瞪口呆，冷汗涔涔，替玄青捏了一把冷汗。</br><br>玄青毕竟不是凡夫俗子，人家在太虚宫练过心法，有临危不乱的本领，即使遇到这种情况还那么镇定。此时玄青被困在墙角，已经是无处可躲，就在这命悬一线之时，玄青从背后摸出一物。只见他左手捏指念咒，右手将那物件迎向活尸老头，嘴里大喝一声“斗”。只听“嗵”的一声闷响，再看向他们时，那活尸已经倒地，双手早已骨折。原来活尸老头高速飞向玄青，不料被玄青手中的物件挡住，两者相撞，老头受了伤。而玄青也狠狠的被身后的墙撞了一下，嘴角渗出一丝血迹。</br><br>玄青手里拿的是什么玩意儿，竟能经受如此一击？仔细瞧去，那是一个方形的东西，跟古代的官印一般模样。只不过这个像是金属做的，通体发黄，在夜里闪着一丝光亮。“难道是黄金做的？”我在心里想着，“不可能，看那东西少说也有一个半拳头大，出家人哪能买得起那么贵的东西。应该是仿真的，用来坑那些小鬼的，不过硬度还可以，受到那么大冲击竟然没碎。”</br><br>要说那活尸，还真是强，双手都已经粉碎性骨折了，仍然要打下去。这股不达目的不罢休的蛮劲，的确值得我们学习，如果在学习上有了这劲头，什么清华北大不在话下。正做着上名校的美梦，忽然被什么东西撞了一下，刚要看个清楚，不想被人从背后抱住并勒住脖子。我低头一瞧，我的乖乖啊，一双糜烂的手耷拉在我胸前，我可以清楚的看到那森森白骨。一股血腥和腐肉的味道刺激着我的鼻粘膜，我胸内早已是翻江倒海，怎奈腹中杂物早已吐光，只能干呕。</br><br>老头子正用胳膊勒着我脖子，不停的用脚踢我脚后跟。该死的老头，这玩的是哪一出啊，小爷没心思陪你玩，玩下去是要死人的。你踢吧，看我不踩死你！我抬起左脚，正要狠狠的踩下去，打算把它的脚也踩骨折了。只听墙角那边玄青大叫：“不要踩它！”</br><br>此时我的脚已经落到半空，犹如离弦之箭一般，根本就没有停下来的意思。听到玄青大喊，知道踩下去肯定出事，然而脚已经出去了，无论如何是收不回来了。在这关键时刻，谁也帮不了我，命运掌握在自己手中，不，是脚上！在这千钧一发之时，我当机立断，当下把脚一歪，向左斜出60度踩下。脚刚好落在老头左脚外侧，我脚顿时酥麻难忍，脖子又被人勒着，这真的是哑巴吃黄连，有苦难言啊。</br><br>我被勒的时间久了，白眼珠子都出来了，早已无力挣扎。活命还得靠玄青，这辈子我先欠着他，等我有了儿子，一定让儿子接他的衣钵。也许是玄青听到了我的心声，他终于又出手了。只见他一边向我这边跑，一边从胸前摸出一道符，咬破右手中指，在符上乱画一通。等他到我身前时，大喊一声“低头！”我哪敢怠慢，虽然脖子被卡住了，但低一下头还是勉强可以做到的。当即我把头一低，玄青又大喝一声“疾！”一记掌心雷打向活尸面门。那老头曾中了玄青一道符，也长了个心眼，所谓好汉不吃眼前亏，老头当下推了我一把。就这样，玄青被我撞了一个趔趄，差点倒地。回头看那老头，这在咯咯的笑，我怒火中烧，再也不能容忍这种似笑非笑的表情，它是在鄙夷我们。</br><br>“你爷爷的，我送你见你老爹去！”我欺身上前，飞起一脚，跺向老头前胸。那老头打架打灵活了，竟然学会了躲。我脚还没上去，他便后退了好几步，直接没把我闪死。我一脚踢空，当下摔在地上，爬不起来。在我疼痛难忍的时候，耳边又响起了那可恶的笑声，怎奈我已无力与他计较。</br><br>“玄青，你一定要把这该死的东西打个生活不能自理，我受不了它了，太猖狂了啊！最好让它下辈子做马桶，天天吃屎！即便如此也难解我心头之恨呀！”</br><br>“你不说我今天也得收了他，身为出家之人，怎能看生灵处于水深火热之中呢！”玄青如是说。其实他今天也吃了那老头好几次亏，心中早已是怒火难扼，恨不得扒了老头的皮，只是他乃出家之人，不便表露出来。“还有，你要记住，以后千万不能踩它的脚，万一你的脚底碰到它的脚背，你就会被它附身，魂魄被吞噬掉，到那时你的身体就属于它了。”玄青被我刚才的举动吓出一身冷汗，他可不想看到自己选中的苗子死在一个糟老头子手中。</br><br>我一听，大惊不已。天哪，刚才差点死翘翘啊，怪不得它踢我的脚呢。真是太可恶了，回头把它的脚剁下来喂狗！</br><br>那活尸见我摔倒在地，阴险的笑着向我扑来。玄青火了，从没见过这么不要脸的东西。当即飞身上前，手中持桃木剑直刺活尸心脏。只见活尸不慌不忙，倒地，起身，甩胳膊。三个动作一气呵成，干净利落。再看玄青在空中的轨道突然发生转变，原来一段大肠正飞向玄青，是那活尸刚才抛的。</br><br>好聪明的家伙，看穿了玄青爱干净，竟然三番两次的用这种恶心下流的手段，还果真屡试不爽呢。玄青被这一段夹杂着大便的大肠逼得转变了进攻方向，这一剑刺空了。只见他擦着活尸身边而过，一不小心被活尸扯住拿剑的那只胳膊，随即被抡了几个圈，把头都转晕了。玄青懊恼不已，心中骂娘不止。别看那活尸枯瘦如柴，力气可是奇大无比，玄青无奈，只能用左手抓住活尸的身体，两人纠结在一起，转得人眼花缭乱的。不知过了多久，二人突然弹开，随即活尸倒地挣扎，玄青也倒地狂吐不止。原来玄青在转圈的时候掏出一符，拍了活尸一记掌心雷。活尸哪能承受得起这近距离的一击啊，委实受伤不轻，倒在地上蜷缩着，抽搐了几下便再没有了动作。</br><br>“老东西，这么简单你就挂啦？你的本事都到哪里去啦？O(∩_∩)O哈哈~，我再叫你笑，这会儿怎么不笑啦？”我一边骂，一边上前跺了它几脚。见它没反应，我就蹲下身子用手去扒开它的眼睛，想瞧瞧是什么样子的。哪知我一口气喷在它脸上，它竟然又醒了，当下把我扑倒，按在地上，对着我印堂、太阳、迎香、头维四穴吐纳。我顿时觉得四股寒气从头而入，意识开始模糊。此时，玄青还晕乎着，见此情景，大叫不好，踉踉跄跄的冲了过来。剑上挂符，口念咒语，一剑从活尸背后插入心脏。那活尸抽搐了几下便趴在了我身上，一动不动。我躺在地上，浑身发冷，动弹不得，想不到那活尸吹的气那么阴寒。</br><br>天边已经出现一抹鱼肚白，而我的脸色也好不到那里去。白里透着灰，玄青看我印堂发黑，说是那活尸将它体内的尸气通过头部四穴传入我体内。尸气乃是极阴之气，与我体内的阳气发生冲突，再不采取措施恐怕我会变成一个阴阳人，终有一天会被两股气冲爆血脉而死。我被抬到炕上，玄青在我家中找了一块生姜，切成薄片，分别贴在我印堂、太阳、迎香、头维四穴。然后取糯米磨粉放在姜片上灼烧，熏蒸我头部四穴，以驱除我体内的阴寒之气。如此几次，我身体有所好转，体温逐渐恢复正常，只是头还有些晕乎乎的。玄青说我还得调理些时日才能完全康复，非得让我跟他回太虚宫，说是等确认我身体没问题的时候自然让我回家。经过考虑，为了我和家人的幸福，我答应随他去，反正又不会损失什么。</br><br> 当天，我们把尸体交给死者家属，为防止再发生意外，就将尸体在本村焚化掉了，随后收敛下葬了。村子里又恢复了宁静，这一切就如同一场梦，不管是美好的还是不好的，都瞬间即逝，人生又何尝不是如此呢。经过此番劫难，我懂得了生命的宝贵，我珍惜活着时候的每一分，每一秒，珍惜我身边的每一个人。不知大难不死，是否会有大福，但这已经不再重要了。重要的是我活下来了，我还有很多事情要做，我得抓紧一切可抓紧的时间去做应该做的事。</br><br>后来，我跟着玄青回太虚宫疗伤，康复后也经常去玩一下，顺便跟他学点基础道法，以求防身。但是我毕竟是个学生，完成学业是我的第一要务，后来忙高考，就再没去学道法了。我想我没有那么倒霉，以后不会再碰上这种倒霉事了。</br></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 非逻辑小说 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
